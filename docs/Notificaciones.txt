# Plan de Acción y Lluvia de Ideas: Sistema de Notificaciones Unificado
# Versión 2.0 - 2024-10-27

Este documento es nuestra guía maestra para el diseño e implementación del nuevo centro de notificaciones de Clic-Tools.

---

## 1. Visión General y Objetivos (Nuestra Meta)

El objetivo es crear un sistema de notificaciones unificado y proactivo dentro de la aplicación para mejorar la comunicación y la eficiencia del equipo. En lugar de que los usuarios tengan que revisar constantemente los módulos, el sistema les informará activamente cuando se requiera su atención.

### Funcionalidades Clave:
- **Notificaciones en la Interfaz:** Un icono de campana en la cabecera principal mostrará las alertas no leídas.
- **Alertas Relevantes:** Las notificaciones se generarán a partir de acciones importantes en el sistema (ej: aprobación de una orden, una solicitud que requiere atención, etc.).
- **Redirección Inteligente:** Cada notificación será un enlace directo a la entidad correspondiente (la orden, la solicitud, etc.).
- **Gestión por Roles:** El sistema podrá notificar a usuarios específicos o a todos los miembros de un rol (ej: notificar a todos los "admin").
- **Notificaciones Accionables:** Las notificaciones podrán incluir botones para realizar acciones rápidas (ej: "Aprobar", "Marcar como leído") directamente desde el menú, convirtiéndolo en una bandeja de tareas.
- **Mejora de UX:** La fecha de la notificación se mostrará de forma relativa (ej: "hace 5 minutos") y al pasar el mouse por encima se revelará la fecha y hora exactas.

---

## 2. Plan de Implementación Técnico

### Fase 1: La Base de Datos (El Almacén) - COMPLETADA

- **Archivo Modificado:** `src/modules/core/lib/db.ts`
- **Acción:**
  1.  Añadida la nueva tabla `notifications` en `initializeMainDatabase`.
  2.  Añadida la creación de esta tabla a la función de migración `checkAndApplyMigrations`.
- **Esquema Final:**
    ```sql
    CREATE TABLE notifications (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        userId INTEGER NOT NULL,
        message TEXT NOT NULL,
        href TEXT,
        isRead INTEGER DEFAULT 0,
        timestamp TEXT NOT NULL,
        entityId INTEGER,
        entityType TEXT,
        taskType TEXT,
        FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE
    );
    ```

### Fase 2: El Backend (La Lógica) - COMPLETADA

- **Archivo Creado:** `src/modules/core/lib/notifications-actions.ts`
- **Acciones Implementadas:**
  - `createNotification(data)`: Crea una notificación para un usuario.
  - `createNotificationForRole(roleId, ...)`: Crea notificaciones para todos los usuarios de un rol.
  - `getNotificationsForUser(userId)`: Obtiene las notificaciones de un usuario.
  - `markNotificationAsRead(notificationId, userId)`: Marca una notificación como leída.
  - `markAllNotificationsAsRead(userId)`: Marca todas como leídas.
  - `executeNotificationAction(notificationId, actionType, ...)`: Ejecuta una acción (aprobar/rechazar) desde una notificación.

### Fase 3: La Interfaz (Lo que el Usuario Ve) - COMPLETADA

- **Componente Creado:** `src/components/layout/notification-bell.tsx`
  - Usa `Popover` de ShadCN para mostrar la lista.
  - Muestra un contador de no leídas.
  - Cada notificación es un `Link` que marca como leída y navega.
  - Muestra botones de acción para notificaciones accionables.
- **Integración:**
  - El hook `useAuth` ahora obtiene y provee las notificaciones globalmente.
  - `header.tsx` incluye el componente `NotificationBell`.

### Fase 4: La Integración (Los Disparadores) - COMPLETADA

- **Archivos Modificados:** `planner/lib/actions.ts` y `requests/lib/actions.ts`.
- **Lógica Implementada:**
  - En `updateProductionOrderStatus`, se notifica al creador sobre cambios de estado.
  - En `updatePendingAction` de ambos módulos, se notifica a los administradores sobre solicitudes de cancelación, asignando el `taskType: 'cancellation-request'`.

### Fase 5 (Futura): Evolución a "Topics"

- Inspirado en Novu, podríamos reemplazar la lógica de `createNotificationForRole` con un sistema más flexible de "Topics" o "Grupos de Notificación".
- Esto permitiría crear grupos personalizados (ej: "Equipo de Ventas Zona Norte") y suscribir usuarios a ellos, sin depender rígidamente de los roles del sistema.

---

## 4. Limitaciones Actuales

- No hay notificaciones push del navegador o del sistema operativo.
- No hay notificaciones por correo electrónico en tiempo real para cada evento.
- La primera versión no incluirá la función de "posponer" (snooze).
