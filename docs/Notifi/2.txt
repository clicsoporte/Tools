
/*
 * Render the mdx for our mintlify docs inside of the web, tries to map the markdown to react components.
 */
export const Mdx = ({ code = '', mappings = {}, isChildDocs, children, isLoading }: DocsProps) => {
  const Component = useMemo(() => {
    if (code.length === 0) {
      return null;
    }

    const globals = createGlobals(mappings);

    return getMDXComponent(code, globals);
  }, [code, mappings]);

  // Workaround for img tags that is not parsed correctly by mdx-bundler
  useEffect(() => {
    if (Component === null || isLoading) {
      return;
    }

    const docs = document.getElementById(DOCS_WRAPPER_ELEMENT_ID);

    if (!docs) {
      return;
    }

    const images = Array.from(docs.getElementsByTagName('img'));

    for (const img of images) {
      if (img.src.startsWith(MINTLIFY_IMAGE_URL)) {
        continue;
      }

      const url = new URL(img.src);
      img.src = `${MINTLIFY_IMAGE_URL}${url.pathname}`;
    }
  }, [Component, isLoading]);

  if (Component === null) {
    if (isChildDocs) {
      return <Text>We could not load this part of the documentation for you. Please try again.</Text>;
    }

    return (
      <Flex
        className={css({
          marginTop: '[4rem]',
        })}
        justify="center"
        align="center"
      >
        <Text>We could not load the documentation for you. Please try again.</Text>
        {children}
      </Flex>
    );
  }

  return (
    <>
      <Component
        components={{
          CodeGroup: BaseDocsComponent,
          ResponseExample: BaseDocsComponent,
          RequestExample: BaseDocsComponent,
          ParamField: BaseDocsComponent,
          Expandable: BaseDocsComponent,
          tr: ({ className, ...props }: any) => {
            return (
              <tr
                {...props}
                className={css({
                  height: '250',
                  lineHeight: '125',
                  borderBottom: 'solid',
                  borderBottomColor: 'table.border.row',
                })}
              />
            );
          },
          thead: ({ className, ...props }: any) => {
            return (
              <thead
                {...props}
                className={css({
                  height: '150',
                  lineHeight: '125',
                  color: 'typography.text.main',
                  borderBottomColor: 'table.border.header',
                })}
              />
            );
          },
          Frame: ({ className, ...props }: any) => {
            const src = Array.isArray(props.children)
              ? props.children.find((child) => child.type === 'img')?.props.src
              : props.children.props?.src;

            const alt =
              (Array.isArray(props.children)
                ? props.children.find((child) => child.type === 'img')?.props.alt
                : props.children.props?.alt) || '';

            if (!src) {
              return (
                <div {...props}>
                  <Text className={css({ textAlign: 'center', fontStyle: 'italic' })}>{props.caption}</Text>
                </div>
              );
            }

            return (
              <div {...props}>
                <img alt={alt} src={`${MINTLIFY_IMAGE_URL}${src}`} />
                <Text className={css({ textAlign: 'center', fontStyle: 'italic' })}>{props.caption}</Text>
              </div>
            );
          },
          Info: ({ className, ...props }: any) => {
            return (
              <Alert
                className={css({
                  borderRadius: '75',
                  backgroundColor: 'mauve.60.dark !important',
                  '& p': {
                    color: 'legacy.white !important',
                  },
                })}
                {...props}
                icon={<IconInfoOutline className={css({ color: 'legacy.white !important' })} />}
              />
            );
          },
          Snippet: () => {
            return null;
          },
          Steps: ({ className, ...props }: any) => {
            return (
              <ol
                className={css({
                  lineHeight: '125',
                  listStyleType: 'decimal',
                  listStylePosition: 'inside',
                })}
              >
                {props.children}
              </ol>
            );
          },
          Step: ({ className, ...props }: any) => {
            return (
              <li className={css({ lineHeight: '125', marginBottom: '50' })}>
                <LiText className={css({ lineHeight: '150', fontSize: '100', fontWeight: 'bolder' })}>
                  {props.title}
                </LiText>
                <LiText className={css({ lineHeight: '125' })}>{props.children}</LiText>
              </li>
            );
          },
          Warning: ({ className, ...props }: any) => {
            return (
              <Alert
                className={css({
                  borderRadius: '75',
                  backgroundColor: 'amber.60.dark !important',
                  '& p': {
                    color: 'legacy.white !important',
                  },
                })}
                {...props}
                icon={<IconOutlineWarning className={css({ color: 'legacy.white !important' })} />}
              />
            );
          },
          Note: ({ className, ...props }: any) => {
            return (
              <Alert
                className={css({
                  borderRadius: '75',
                  backgroundColor: 'blue.70.dark !important',
                  '& p': {
                    color: 'legacy.white !important',
                  },
                })}
                {...props}
                icon={<IconInfoOutline className={css({ color: 'legacy.white !important' })} />}
              />
            );
          },
          CardGroup: ({ className, ...props }: any) => {
            return (
              <Grid gap={16} columns={props.cols}>
                {props.children}
              </Grid>
            );
          },
          AccordionGroup: ({ className, ...props }: any) => {
            return <Accordion {...props} />;
          },
          Tab: () => null,
          Tabs: ({ className, ...props }: any) => {
            const tabs = Array.isArray(props.children) ? props.children : [props.children];

            return (
              <Tabs
                menuTabs={tabs.map((tab) => {
                  return {
                    content: tab.props.children,
                    value: tab.props.title,
                  };
                })}
                defaultValue={tabs[0].props.title}
              />
            );
          },
          Tip: ({ className, ...props }: any) => {
            return (
              <Alert
                className={css({
                  borderRadius: '75',
                  backgroundColor: 'mauve.60.dark !important',
                  '& p': {
                    color: 'legacy.white !important',
                  },
                })}
                {...props}
                icon={<IconInfoOutline className={css({ color: 'legacy.white !important' })} />}
              />
            );
          },
          Tooltip: ({ className, ...props }: any) => {
            return (
              <Tooltip label={props.tip}>
                <span>{props.children}</span>
              </Tooltip>
            );
          },
          code: ({ className, ...props }: any) => {
            if (className?.includes('language-')) {
              return <Highlight {...props} />;
            }

            return <Code {...props} />;
          },
          Card: ({ className, ...props }: any) => {
            return (
              <GridItem colSpan={1}>
                <Paper>
                  <Title variant="section">
                    <a href={`${DOCS_URL}${props.href}`} rel={'noopener noreferrer'} target={'_blank'}>
                      {props.title}
                    </a>
                  </Title>
                </Paper>
              </GridItem>
            );
          },
          Accordion: ({ className, ...props }: any) => {
            return (
              <Accordion.Item value={props.title}>
                <Accordion.Control>{props.title}</Accordion.Control>
                <Accordion.Panel>{props.children}</Accordion.Panel>
              </Accordion.Item>
            );
          },
          p: ({ className, ...props }: any) => {
            return <Text className={css({ lineHeight: '125' })} {...props} />;
          },
          ol: ({ className, ...props }: any) => {
            return (
              <ol
                className={css({
                  lineHeight: '125',
                  listStyleType: 'decimal',
                  listStylePosition: 'inside',
                  '& p': {
                    display: '!important inline',
                  },
                })}
                {...props}
              />
            );
          },
          ul: ({ className, ...props }: any) => {
            return (
              <ul
                className={css({
                  lineHeight: '125',
                  listStyleType: 'disc',
                  listStylePosition: 'inside',
                  '& p': {
                    display: '!important inline',
                  },
                })}
                {...props}
              />
            );
          },
          li: ({ className, ...props }: any) => {
            return <li className={css({ lineHeight: '125', marginBottom: '50' })} {...props} />;
          },
          h2: ({ className, ...props }: any) => {
            return <Title variant="section" className={css({ marginTop: '75' })} {...props} />;
          },
          h3: ({ className, ...props }: any) => {
            return <Title variant="subsection" {...props} />;
          },
          a: ({ className, ...props }: any) => {
            return (
              <a
                href={`${DOCS_URL}${props.href}`}
                rel={'noopener noreferrer'}
                target={'_blank'}
                children={props.children}
              />
            );
          },
        }}
      />
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Accordion, Alert, Code, Paper } from '@mantine/core';
import { Tabs, Tooltip } from '@novu/design-system';
import { IconInfoOutline, IconOutlineWarning } from '@novu/novui/icons';
import { css } from '@novu/novui/css';
import { Flex, Grid, GridItem, styled } from '@novu/novui/jsx';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/docs/VotingWidget.tsx
Tamaño: 1202 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ActionButton, IconThumbDownAlt, IconThumbUpAlt } from '@novu/design-system';
import { css } from '@novu/novui/css';
import { Flex, styled } from '@novu/novui/jsx';
import { text } from '@novu/novui/recipes';

const Text = styled('p', text);

export type Voting = 'up' | 'down';

const voteButtonClass = css({
  _selected: {
    '& svg': {
      color: 'typography.text.main !important',
    },
  },
});

export const VotingWidget = ({
  voted,
  onVoteClick,
}: {
  voted: Voting | undefined;
  onVoteClick: (vote: Voting) => () => void;
}) => {
  return (
    <Flex
      className={css({
        marginTop: '250',
      })}
      align="center"
      gap="125"
    >
      <Text>Did you find it useful?</Text>
      <Flex gap="50" align="center">
        <ActionButton
          className={voteButtonClass}
          aria-selected={voted === 'up'}
          onClick={onVoteClick('up')}
          Icon={() => <IconThumbUpAlt size={20} />}
        />
        <ActionButton
          className={voteButtonClass}
          aria-selected={voted === 'down'}
          onClick={onVoteClick('down')}
          Icon={() => <IconThumbDownAlt size={20} />}
        />
      </Flex>
    </Flex>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ActionButton, IconThumbDownAlt, IconThumbUpAlt } from '@novu/design-system';
import { css } from '@novu/novui/css';
import { Flex, styled } from '@novu/novui/jsx';
import { text } from '@novu/novui/recipes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/docs/docs.const.ts
Tamaño: 685 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export const PATHS: Record<string, string> = {
  INTEGRATION_INTRODUCTION: 'integrations/providers/introduction',
  QUICK_START_NEXTJS: 'quickstart/nextjs',
  WORKFLOW_INTRODUCTION: 'framework/overview',
  CONCEPT_CONTROLS: 'concepts/controls',
  CONCEPT_ENDPOINT: 'concepts/endpoint',
  CONCEPT_WORKFLOWS: 'concepts/workflows',
  CONCEPT_TENANTS: 'concepts/tenants',
  CONCEPT_SUBSCRIBERS: 'concepts/subscribers',
} as const;

export type DocsPathsEnum = (typeof PATHS)[keyof typeof PATHS];

export const DOCS_URL = 'https://docs.novu.co';

export const MINTLIFY_IMAGE_URL = 'https://mintlify.s3-us-west-1.amazonaws.com/novu';

export const MDX_URL = 'https://cloud-doc.vercel.app/';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const
- export  type
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/docs/globals.tsx
Tamaño: 1219 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ChildDocs } from './ChildDocs';

/**
 * This is used to override the default loading of child docs as these docs
 * files does contain javascript we need to override them with react components.
 */
const globalOverrides = {
  frameworkterminal: {
    FrameworkTerminal: () => <nv-framework-terminal></nv-framework-terminal>,
  },
  // Needed for mdx file `quickstart/nextjs`
  framework: () => null,
};

/**
 * Global overrides need to override globals as they will not be correct loaded by
 * child docs as it is not possible to load javascript with child docs.
 */
export const createGlobals = (mappings) => ({
  ...Object.keys(mappings).reduce(
    (prev: Record<string, Record<string, any> | any>, key) => {
      const path = mappings[key];

      if (typeof path === 'string') {
        prev[key] = () => <ChildDocs path={path} />;

        return prev;
      }

      const value = path;

      prev[key] = Object.keys(value).reduce(
        (child: Record<string, any>, name) => ({
          ...child,
          [name]: () => <ChildDocs path={child[name]} />,
        }),
        {}
      );

      return prev;
    },
    {} as Record<string, Record<string, any> | any>
  ),
  ...globalOverrides,
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ChildDocs } from './ChildDocs';
/**
* This is used to override the default loading of child docs as these docs
* files does contain javascript we need to override them with react components.
// Needed for mdx file `quickstart/nextjs`
/**
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/docs/useDocsModal.tsx
Tamaño: 438 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { DocsModal } from './DocsModal';

export const useDocsModal = () => {
  const [docsOpen, setDocsOpen] = useState<boolean>(false);
  const [path, setPath] = useState<string>('');

  const toggleDocs = () => {
    setDocsOpen((prevOpen) => !prevOpen);
  };

  return {
    toggle: toggleDocs,
    setPath,
    Component: () => <DocsModal open={docsOpen} toggle={toggleDocs} path={path} />,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { DocsModal } from './DocsModal';
export const useDocsModal = () => {
const [docsOpen, setDocsOpen] = useState<boolean>(false);
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/docs/useDocsPath.ts
Tamaño: 652 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { matchPath, useLocation } from 'react-router-dom';
import { ROUTES } from '../../constants/routes';
import { DocsPathsEnum } from './docs.const';

export type DocsPaths = { [key in ROUTES]?: DocsPathsEnum };

export const useDocsPath = (paths: DocsPaths) => {
  const [path, setPath] = useState<string>('');
  const { pathname } = useLocation();

  useEffect(() => {
    for (const route in paths) {
      if (matchPath(route, pathname) !== null) {
        setPath(paths[route]);
        break;
      }
    }

    return () => {
      setPath('');
    };
  }, [pathname, paths]);

  return path;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useDocsPath(paths: DocsPaths))
Declaraciones 'export' encontradas:
- export  type
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/docs/useLoadDocs.tsx
Tamaño: 1090 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import { MDX_URL } from './docs.const';

export type DocsQueryResults = {
  code: string;
  title: string;
  description: string;
  /** is a map of what needs to have globals and are usually mapped to ChildDocs component */
  mappings: Record<string, Record<string, string> | string>;
};

type UseLoadDocsProps = {
  path: string;
  /** Controls whether or not we should execute the query */
  isEnabled: boolean;
};

export const useLoadDocs = ({ path, isEnabled }: UseLoadDocsProps) => {
  const { data = { code: '', title: '', description: '', mappings: {} }, ...queryResults } = useQuery<DocsQueryResults>(
    ['docs', path],
    async () => {
      const response = await fetch(MDX_URL + path);
      const json = await response.json();

      return json;
    },
    { enabled: isEnabled }
  );

  return {
    ...queryResults,
    data,
    // TODO: we should really be handling this through proper errors in the query, but this will suffice for now
    hasLoadedSuccessfully: Boolean(!queryResults.isLoading && data.code),
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useQuery } from '@tanstack/react-query';
import { MDX_URL } from './docs.const';
export type DocsQueryResults = {
code: string;
/** is a map of what needs to have globals and are usually mapped to ChildDocs component */
/** Controls whether or not we should execute the query */
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/execution-detail/ExecutionDetail.tsx
Tamaño: 2032 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Container, Grid, useMantineTheme } from '@mantine/core';
import { format, parseISO } from 'date-fns';
import styled from '@emotion/styled';

import { colors, Text } from '@novu/design-system';
import { ExecutionDetailShowRaw } from './ExecutionDetailShowRaw';
import { getColorByStatus, getLogoByType, getLogoByStatus } from './helpers';

import { When } from '../utils/When';

const ExecutionDetailStatusWrapper = styled(Container)`
  padding: 2px;
  width: 15px;
`;

const FormattedTime = styled(Text)`
  color: ${colors.B60};
  font-size: 12px;
  font-height: 16px;
  padding: 3px 0;
`;

const ExecutionDetailTime = ({ createdAt }) => {
  const formattedTime = format(parseISO(createdAt), 'HH:mm:ss');

  return <FormattedTime>{formattedTime}</FormattedTime>;
};

const getExecutionDetailLogoByType = (type) => {
  const logo = getLogoByType(type);

  if (logo) {
    return logo;
  }

  return getLogoByStatus(type);
};

export const ExecutionDetail = ({
  executionDetail,
  onShowExecutionDetail,
  onHideExecutionDetail,
  showTriggerSnippet,
}) => {
  const theme = useMantineTheme();
  const { createdAt, detail, raw, status, type } = executionDetail;
  const color = getColorByStatus(theme, status);
  const ExecutionDetailStatus = getExecutionDetailLogoByType(status);

  const secondColumnSpan = raw ? 8 : 11;

  return (
    <Grid gutter={10}>
      <Grid.Col span={1}>
        <ExecutionDetailStatusWrapper>
          <ExecutionDetailStatus color={color} width="15px" height="15px" />
        </ExecutionDetailStatusWrapper>
      </Grid.Col>
      <Grid.Col span={secondColumnSpan}>
        <Text>{detail}</Text>
        <ExecutionDetailTime createdAt={createdAt} />
      </Grid.Col>
      <Grid.Col span={3}>
        <When truthy={raw}>
          <ExecutionDetailShowRaw
            showTriggerSnippet={showTriggerSnippet}
            onShowExecutionDetail={onShowExecutionDetail}
            onHideExecutionDetail={onHideExecutionDetail}
          />
        </When>
      </Grid.Col>
    </Grid>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Container, Grid, useMantineTheme } from '@mantine/core';
import { format, parseISO } from 'date-fns';
import styled from '@emotion/styled';
import { colors, Text } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/execution-detail/ExecutionDetailShowRaw.tsx
Tamaño: 2833 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Container, Group, useMantineColorScheme } from '@mantine/core';
import { Prism } from '@mantine/prism';
import { Button, colors, Text, Close } from '@novu/design-system';
import { When } from '../utils/When';
import { ExecutionDetailsConditions } from './ExecutionDetailsConditions';

const ExecutionDetailShowRawWrapper = styled(Container)`
  display: flex;
  flex-flow: column;
  margin: 0;
  padding: 0;
  vertical-align: middle;
`;

const DetailTitle = styled(Text)`
  font-size: 14px;
  font-weight: 700;
  line-height: 17px;
  padding-bottom: 20px;
`;

const ActionButton = styled(Button)`
  background-color: transparent;
  background-image: none;
  border: 1px solid ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B40 : colors.B80)};
  border-radius: 7px;
  box-shadow: none;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B40)};
  font-size: 12px;
  font-weight: 700;
  height: 30px;
  padding: 0;
  width: 95px;
`;

const CloseButton = styled(Button)`
  background-color: transparent;
  background-image: none;
  border-radius: 30px;
  box-shadow: none;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B40)};
  display: flex;
  height: 15px;
  margin: 0;
  padding: 0;
  position: relative;
  top: -10px;
`;

export const ExecutionDetailShowRaw = ({ onShowExecutionDetail, onHideExecutionDetail, showTriggerSnippet }) => {
  const action = showTriggerSnippet ? onShowExecutionDetail : onHideExecutionDetail;
  const label = showTriggerSnippet ? 'Show detail' : 'Close detail';

  const onClick = () => {
    action();
  };

  return <ActionButton onClick={onClick}>{label}</ActionButton>;
};

export const ExecutionDetailRawSnippet = ({ raw, onClose }) => {
  const theme = useMantineColorScheme();

  const prismStyles = {
    code: {
      fontWeight: 400,
      color: `${colors.B60} !important`,
      backgroundColor: 'transparent !important',
      border: `1px solid ${theme.colorScheme === 'dark' ? colors.B70 : colors.B30}`,
      borderRadius: '7px',
    },
  };

  const parsedValue = JSON.parse(raw);

  return (
    <ExecutionDetailShowRawWrapper>
      <Group position="apart">
        <DetailTitle>Detail</DetailTitle>
        <CloseButton onClick={onClose}>
          <Close />
        </CloseButton>
      </Group>
      <When truthy={parsedValue && parsedValue.conditions && parsedValue.conditions.length}>
        <ExecutionDetailsConditions conditions={parsedValue.conditions} />
      </When>
      <Prism
        colorScheme={theme.colorScheme}
        mt={5}
        styles={prismStyles}
        data-test-id="execution-detail-raw-snippet"
        language="json"
      >
        {JSON.stringify(parsedValue, null, 2)}
      </Prism>
    </ExecutionDetailShowRawWrapper>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Container, Group, useMantineColorScheme } from '@mantine/core';
import { Prism } from '@mantine/prism';
import { Button, colors, Text, Close } from '@novu/design-system';
import { When } from '../utils/When';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/execution-detail/ExecutionDetailTrigger.tsx
Tamaño: 800 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';

import { Text } from '@novu/design-system';
import { getCurlTriggerSnippet } from '../../pages/templates/components/TriggerSnippetTabs';

const TriggerTitle = styled(Text)`
  font-size: 14px;
  font-weight: 700;
  line-height: 17px;
  padding-bottom: 20px;
`;

export const ExecutionDetailTrigger = ({ identifier, step, subscriberVariables }) => {
  const { payload, overrides, tenant, actorId } = step || {};

  const curlSnippet = getCurlTriggerSnippet({
    identifier,
    to: subscriberVariables,
    payload,
    overrides,
    snippet: {
      ...(tenant && { tenant }),
      ...(actorId && { actor: { subscriberId: actorId } }),
    },
  });

  return (
    <>
      <TriggerTitle>Trigger information</TriggerTitle>
      {curlSnippet}
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Text } from '@novu/design-system';
import { getCurlTriggerSnippet } from '../../pages/templates/components/TriggerSnippetTabs';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/execution-detail/ExecutionDetailsAccordion.tsx
Tamaño: 1996 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Accordion, createStyles } from '@mantine/core';

import { colors } from '@novu/design-system';
import { ExecutionDetailsStepContent } from './ExecutionDetailsStepContent';
import { ExecutionDetailsStepHeader } from './ExecutionDetailsStepHeader';

const useStyles = createStyles((theme) => ({
  control: {
    paddingBottom: '15px',
    paddingLeft: '25px',
    paddingRight: '25px',
    paddingTop: '15px',
    '&:hover': {
      borderRadius: '7px',
    },
  },
  item: {
    border: `1px solid ${theme.colorScheme === 'dark' ? colors.B30 : colors.B85}`,
    marginBottom: '15px',
    borderRadius: '7px',
    color: `${colors.B80}`,
    padding: '0',

    '&[data-active]': {
      border: `1px solid ${theme.colorScheme === 'dark' ? colors.B60 : colors.B70}`,
    },
  },
  chevron: {
    color: `${theme.colorScheme === 'dark' ? colors.white : colors.B40}`,
    backgroundColor: `${theme.colorScheme === 'dark' ? colors.B20 : colors.BGLight}`,
    borderRadius: '50px',
    height: '30px',
    width: '30px',
  },
}));

export const ExecutionDetailsAccordion = ({ identifier, steps, subscriberVariables, defaultOpen = undefined }) => {
  const { classes } = useStyles();

  if (!steps || steps.length <= 0) {
    return null;
  }

  return (
    <Accordion
      key="execution-details-accordion"
      chevronPosition="right"
      defaultValue={defaultOpen}
      classNames={classes}
    >
      {steps.map((step) => (
        <Accordion.Item key={`execution-details-step-${step._id}`} value={step._id}>
          <Accordion.Control>
            <ExecutionDetailsStepHeader step={step} />
          </Accordion.Control>
          <Accordion.Panel>
            <ExecutionDetailsStepContent
              key={`execution-details-step-content-${step._id}`}
              identifier={identifier}
              step={step}
              subscriberVariables={subscriberVariables}
            />
          </Accordion.Panel>
        </Accordion.Item>
      ))}
    </Accordion>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Accordion, createStyles } from '@mantine/core';
import { colors } from '@novu/design-system';
import { ExecutionDetailsStepContent } from './ExecutionDetailsStepContent';
import { ExecutionDetailsStepHeader } from './ExecutionDetailsStepHeader';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/execution-detail/ExecutionDetailsConditionItem.tsx
Tamaño: 2421 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import styled from '@emotion/styled';
import { Group, Stack } from '@mantine/core';
import { ICondition } from '@novu/shared';
import { colors, Text, Tooltip, CheckCircle, ErrorIcon } from '@novu/design-system';

export function ExecutionDetailsConditionItem({ condition }: { condition: ICondition }) {
  const isPassed = condition.passed;
  const Icon = isPassed ? CheckCircle : ErrorIcon;
  const passedStatusColor = isPassed ? colors.success : colors.error;
  const tooltipLabel = isPassed ? 'Filter matched' : "Filter didn't match";
  const iconClass = isPassed ? 'condition-passed' : 'condition-failed';

  return (
    <ItemContainer spacing={5} data-test-id="condition-item-list">
      <Tooltip label={tooltipLabel} position="left">
        <ConditionHeader>
          <Icon color={passedStatusColor} width="15px" height="15px" className={iconClass} />
          <Text weight="bold" data-test-id="condition-filter-value">
            {condition.filter}
          </Text>
        </ConditionHeader>
      </Tooltip>
      <Group>
        <ConditionPair>
          <ConditionTitle>Field:</ConditionTitle>
          <Text data-test-id="condition-field-value">{condition.field}</Text>
        </ConditionPair>
        <ConditionPair>
          <ConditionTitle>Operator:</ConditionTitle>
          <Text data-test-id="condition-operator-value">{condition.operator}</Text>
        </ConditionPair>
      </Group>
      <Group>
        <ConditionPair>
          <ConditionTitle>Expected:</ConditionTitle>
          <Text color={passedStatusColor} data-test-id="condition-expected-value">
            {condition.expected}
          </Text>
        </ConditionPair>
        <ConditionPair>
          <ConditionTitle>Actual:</ConditionTitle>
          <Text color={passedStatusColor} data-test-id="condition-actual-value">
            {condition.actual}
          </Text>
        </ConditionPair>
      </Group>
    </ItemContainer>
  );
}

function ConditionPair({ children }: { children: React.ReactNode }) {
  return <Group spacing={5}>{children}</Group>;
}

const ItemContainer = styled(Stack)`
  border: ${({ theme }) => `1px solid ${theme.colorScheme === 'dark' ? colors.B70 : colors.B30}`};
  border-radius: 7px;
  padding: 0.75rem;
`;

const ConditionTitle = styled(Text)`
  color: ${colors.B60};
`;

const ConditionHeader = styled.div`
  display: flex;
  gap: 5px;
  cursor: pointer;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import styled from '@emotion/styled';
import { Group, Stack } from '@mantine/core';
import { ICondition } from '@novu/shared';
import { colors, Text, Tooltip, CheckCircle, ErrorIcon } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/execution-detail/ExecutionDetailsConditions.tsx
Tamaño: 512 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Stack } from '@mantine/core';
import { ICondition } from '@novu/shared';
import { ExecutionDetailsConditionItem } from './ExecutionDetailsConditionItem';

export function ExecutionDetailsConditions({ conditions }: { conditions: ICondition[] }) {
  return (
    <Stack spacing={5}>
      {conditions.map((condition, idx) => {
        return (
          <ExecutionDetailsConditionItem key={`${condition.filter}-${condition.field}-${idx}`} condition={condition} />
        );
      })}
    </Stack>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Stack } from '@mantine/core';
import { ICondition } from '@novu/shared';
import { ExecutionDetailsConditionItem } from './ExecutionDetailsConditionItem';
export function ExecutionDetailsConditions({ conditions }: { conditions: ICondition[] }) {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/execution-detail/ExecutionDetailsFooter.tsx
Tamaño: 568 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import styled from '@emotion/styled';

import { Container } from '@novu/design-system';
import { GotAQuestionButton } from '../utils/GotAQuestionButton';

const ActionsWrapper = styled(Container)`
  margin: 0;
  padding: 0;
  box-shadow: none;
`;

export const ExecutionDetailsFooter = () => {
  return (
    <Group position="right">
      <ActionsWrapper>
        {/* TODO: Button has a margin top that's not possible to overload */}
        <GotAQuestionButton mt={30} size="md" />
      </ActionsWrapper>
    </Group>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import styled from '@emotion/styled';
import { Container } from '@novu/design-system';
import { GotAQuestionButton } from '../utils/GotAQuestionButton';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/execution-detail/ExecutionDetailsModal.tsx
Tamaño: 3349 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { Center, LoadingOverlay, Modal, UnstyledButton, useMantineTheme } from '@mantine/core';
import { JobStatusEnum } from '@novu/shared';

import { colors, shadows, Text, Title } from '@novu/design-system';
import { ExecutionDetailsAccordion } from './ExecutionDetailsAccordion';
import { useNotification } from '../../hooks/useNovuAPI';
import { When } from '../utils/When';
import { useNotificationStatus } from '../../pages/activities/hooks/useNotificationStatus';

export function ExecutionDetailsModal({
  notificationId,
  modalVisibility,
  onClose,
  onViewDigestExecution,
}: {
  notificationId: string;
  modalVisibility: boolean;
  onClose: () => void;
  onViewDigestExecution?: (digestNotificationId: string) => void;
}) {
  const theme = useMantineTheme();
  const [shouldRefetch, setShouldRefetch] = useState(true);
  const { data: response, isInitialLoading } = useNotification(notificationId, {
    enabled: !!notificationId,
    refetchInterval: shouldRefetch ? 1000 : false,
  });

  const status = useNotificationStatus(response?.data);

  useEffect(() => {
    if (
      status &&
      [JobStatusEnum.FAILED, JobStatusEnum.COMPLETED, JobStatusEnum.CANCELED, JobStatusEnum.MERGED].includes(status)
    ) {
      setShouldRefetch(false);
    }
  }, [status]);

  const {
    jobs,
    _digestedNotificationId: digestedNotificationId,
    to: subscriberVariables,
    template,
    bridge,
  } = response?.data || {};
  const { triggers } = template || {};
  const identifier = triggers ? triggers[0]?.identifier : undefined;

  return (
    <Modal
      opened={modalVisibility}
      overlayColor={theme.colorScheme === 'dark' ? colors.BGDark : colors.BGLight}
      overlayOpacity={0.7}
      styles={{
        modal: {
          backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.white,
          width: '90%',
        },
        body: {
          paddingTop: '5px',
          paddingInline: '8px',
        },
      }}
      title={<Title size={2}>Execution Details for {template?.name || bridge?.workflow?.workflowId || ''}</Title>}
      sx={{ backdropFilter: 'blur(10px)' }}
      shadow={theme.colorScheme === 'dark' ? shadows.dark : shadows.medium}
      radius="md"
      size="lg"
      onClose={onClose}
      centered
      overflow="inside"
    >
      <LoadingOverlay
        visible={isInitialLoading}
        overlayColor={theme.colorScheme === 'dark' ? colors.B30 : colors.B98}
        loaderProps={{
          color: colors.error,
        }}
        data-test-id="execution-details-modal-loading-overlay"
      />

      <ExecutionDetailsAccordion identifier={identifier} steps={jobs} subscriberVariables={subscriberVariables} />
      <When truthy={digestedNotificationId}>
        <Center mt={20}>
          <Text mr={10} size="md" color={colors.B60}>
            Remaining execution has been merged to an active Digest.
          </Text>
        </Center>
        <When truthy={onViewDigestExecution}>
          <Center mt={10}>
            <UnstyledButton
              onClick={() => {
                onViewDigestExecution?.(digestedNotificationId);
              }}
            >
              <Text gradient>View Digest Execution</Text>
            </UnstyledButton>
          </Center>
        </When>
      </When>
    </Modal>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect, useState } from 'react';
import { Center, LoadingOverlay, Modal, UnstyledButton, useMantineTheme } from '@mantine/core';
import { JobStatusEnum } from '@novu/shared';
import { colors, shadows, Text, Title } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/execution-detail/ExecutionDetailsStepContent.tsx
Tamaño: 2643 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { Container, Grid } from '@mantine/core';
import styled from '@emotion/styled';

import { colors, Text } from '@novu/design-system';
import { ExecutionDetail } from './ExecutionDetail';
import { ExecutionDetailRawSnippet } from './ExecutionDetailShowRaw';
import { ExecutionDetailTrigger } from './ExecutionDetailTrigger';
import { When } from '../utils/When';

const ExecutionDetailsStepContentWrapper = styled.div`
  margin: 0;
  padding: 0;
`;

const TimelineTitle = styled(Text)`
  font-size: 14px;
  font-weight: 700;
  line-height: 17px;
  padding-bottom: 20px;
`;

const GridColContainer = styled(Container)`
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B20 : colors.B98)};
  border-radius: 7px;
  padding: 20px;
`;

export const ExecutionDetailsStepContent = ({ identifier, step, subscriberVariables }) => {
  const [detailId, setDetailId] = useState<string>('');
  const [executionDetailsRawSnippet, setExecutionDetailsRawSnippet] = useState<string>('');
  const { executionDetails } = step || {};

  const onShowExecutionDetail = (id, raw) => () => {
    setDetailId(id);
    setExecutionDetailsRawSnippet(raw);
  };

  const onHideExecutionDetail = () => {
    setExecutionDetailsRawSnippet('');
    setDetailId('');
  };

  return (
    <ExecutionDetailsStepContentWrapper key={`execution-detals-step-content-wrapper-${step._id}`}>
      <Grid gutter={20}>
        <Grid.Col span={6}>
          <GridColContainer>
            <TimelineTitle>Step Timeline</TimelineTitle>
            {executionDetails.map((executionDetail) => (
              <ExecutionDetail
                key={`execution-detail-${executionDetail._id}`}
                executionDetail={executionDetail}
                showTriggerSnippet={detailId !== executionDetail._id}
                onShowExecutionDetail={onShowExecutionDetail(executionDetail._id, executionDetail.raw)}
                onHideExecutionDetail={onHideExecutionDetail}
              />
            ))}
          </GridColContainer>
        </Grid.Col>
        <Grid.Col span={6}>
          <GridColContainer>
            <When truthy={detailId.length === 0}>
              <ExecutionDetailTrigger identifier={identifier} step={step} subscriberVariables={subscriberVariables} />
            </When>
            <When truthy={detailId.length > 0 && executionDetailsRawSnippet}>
              <ExecutionDetailRawSnippet raw={executionDetailsRawSnippet} onClose={onHideExecutionDetail} />
            </When>
          </GridColContainer>
        </Grid.Col>
      </Grid>
    </ExecutionDetailsStepContentWrapper>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { Container, Grid } from '@mantine/core';
import styled from '@emotion/styled';
import { colors, Text } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/execution-detail/ExecutionDetailsStepHeader.tsx
Tamaño: 4347 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Container, Grid } from '@mantine/core';
import { CheckCircle, colors, ErrorIcon, Text } from '@novu/design-system';
import { DelayTypeEnum, JobStatusEnum, StepTypeEnum } from '@novu/shared';
import { format, parseISO } from 'date-fns';
import { ExecutionDetailsWebhookFeedback } from './ExecutionDetailsWebhookFeedback';
import { getLogoByType } from './helpers';

const StepName = styled(Text)`
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B40)};
  font-size: 16px;
  font-weight: 700;
  line-height: 17px;
  padding-bottom: 5px;
  padding-top: 0;
  text-transform: capitalize;
`;

const StepDetails = styled(Text)`
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B60)};
  font-size: 12px;
  line-height: 16px;
  padding: 0;
`;

const StepDate = styled(Text)`
  color: ${colors.B60};
  font-size: 12px;
  line-height: 16px;
  padding: 3px 0 0;
`;

const FailedStepDetails = styled(StepDetails)`
  color: ${colors.error};
`;

const SuccessStepDetails = styled(StepDetails)`
  color: ${colors.success};
`;

const LogoWrapper = styled(Container)`
  max-width: 50px;
  padding: 10px 10px 0 0;
  position: relative;
`;

const getLogoStyledComponentByStepStatus = (status, type) => {
  if (status === JobStatusEnum.COMPLETED) {
    return CheckCircle;
  }

  return getLogoByType(type);
};

const getColorByStatus = (status) => {
  if (status === JobStatusEnum.COMPLETED) {
    return colors.success;
  }

  return undefined;
};

const StepLogo = ({ status, type }) => {
  const Logo = getLogoStyledComponentByStepStatus(status, type);
  const color = getColorByStatus(status);

  return (
    <LogoWrapper>
      {Logo && <Logo height="32px" width="32px" color={color} />}
      {status === JobStatusEnum.FAILED && (
        <ErrorIcon
          height="15px"
          width="15px"
          color={colors.error}
          style={{ position: 'relative', left: '20px', top: '-15px' }}
        />
      )}
    </LogoWrapper>
  );
};

const generateDetailByStepAndStatus = (status, job) => {
  if (status === JobStatusEnum.COMPLETED) {
    return `Success! ${job.executionDetails?.at(-1)?.detail}`;
  }

  if (status === JobStatusEnum.FAILED) {
    return `Failed! ${job.executionDetails?.at(-1)?.detail}`;
  }

  if (job.type === StepTypeEnum.DIGEST) {
    if (status === JobStatusEnum.SKIPPED) {
      return job.executionDetails?.at(-1)?.detail;
    }
    const { digest } = job;

    if (!digest.amount && !digest.unit) return `Waiting to receive digest times from bridge endpoint`;

    return `Digesting events for ${digest.amount} ${digest.unit}`;
  }

  if (job.type === StepTypeEnum.DELAY) {
    const { digest, step: stepMetadata, payload } = job;

    if (
      stepMetadata?.metadata &&
      'type' in stepMetadata.metadata &&
      stepMetadata.metadata.type === DelayTypeEnum.SCHEDULED &&
      'delayPath' in stepMetadata.metadata
    ) {
      return `Delaying execution until ${payload[stepMetadata.metadata.delayPath]}`;
    }

    return `Delaying execution for ${digest.amount} ${digest.unit}`;
  }

  return job.executionDetails?.at(-1)?.detail;
};

const getDetailsStyledComponentByStepStatus = (status) => {
  if (status === JobStatusEnum.COMPLETED) {
    return SuccessStepDetails;
  }

  if (status === JobStatusEnum.FAILED) {
    return FailedStepDetails;
  }

  return StepDetails;
};

const StepOutcome = ({ updatedAt, name, detail, status }) => {
  const Details = getDetailsStyledComponentByStepStatus(status);
  const date = format(parseISO(updatedAt), 'dd/MM/yyyy');

  return (
    <>
      <StepName>{name?.replace('_', ' ')}</StepName>
      <Details>{detail}</Details>
      <StepDate>{date}</StepDate>
    </>
  );
};

export const ExecutionDetailsStepHeader = ({ step }) => {
  const { status } = step;
  const generatedDetail = generateDetailByStepAndStatus(status, step);

  return (
    <Grid>
      <Grid.Col span={1}>
        <StepLogo status={status} type={step.type} />
      </Grid.Col>
      <Grid.Col span={7}>
        <StepOutcome updatedAt={step?.updatedAt} name={step?.type} detail={generatedDetail} status={status} />
      </Grid.Col>
      <Grid.Col span={4}>
        <ExecutionDetailsWebhookFeedback executionDetails={step.executionDetails} />
      </Grid.Col>
    </Grid>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Container, Grid } from '@mantine/core';
import { CheckCircle, colors, ErrorIcon, Text } from '@novu/design-system';
import { DelayTypeEnum, JobStatusEnum, StepTypeEnum } from '@novu/shared';
import { format, parseISO } from 'date-fns';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/execution-detail/ExecutionDetailsWebhookFeedback.tsx
Tamaño: 1895 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import styled from '@emotion/styled';
import { format, parseISO } from 'date-fns';

import { colors, Container, Text, Tooltip } from '@novu/design-system';
import { mappedWebhookStatuses } from './helpers';

const WebhookFeedbackWrapper = styled(Container)`
  align-items: center;
  display: flex;
  flex-flow: column;
  justify-content: center;
  margin: 0;
  padding: 15px 10px;
`;

const WebhookFeedbackTitle = styled(Text)`
  color: ${colors.B60};
  font-size: 12px;
  line-height: 16px;
  padding-top: 5px;
`;

const WebhookTimeStamp = ({ timeStamp }) => {
  const formattedDate = format(parseISO(timeStamp), 'hh:mm aaa, dd/MM/yyyy');

  return <span>{formattedDate}</span>;
};

const WebhookFeedback = ({ icon, text, timeStamp }) => {
  const Icon = icon;

  return (
    <Tooltip label={<WebhookTimeStamp timeStamp={timeStamp} />}>
      <WebhookFeedbackWrapper>
        <Icon height="15px" width="15px" />
        <WebhookFeedbackTitle>{text}</WebhookFeedbackTitle>
      </WebhookFeedbackWrapper>
    </Tooltip>
  );
};

export const ExecutionDetailsWebhookFeedback = ({ executionDetails }) => {
  const getWebhookIcons = () => {
    const icons: JSX.Element[] = [];

    executionDetails.forEach((detail) => {
      const webhookStatus = detail?.webhookStatus;

      if (webhookStatus) {
        Object.keys(mappedWebhookStatuses).forEach((key) => {
          const { status } = mappedWebhookStatuses[key];
          const { icon } = mappedWebhookStatuses[key];
          const { label } = mappedWebhookStatuses[key];
          if (status.includes(webhookStatus.toLowerCase())) {
            icons.push(<WebhookFeedback icon={icon} text={label} timeStamp={detail?.updatedAt} />);
          }
        });
      }
    });

    return icons;
  };

  return (
    <Group position="right" spacing="xs">
      {getWebhookIcons()}
    </Group>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import styled from '@emotion/styled';
import { format, parseISO } from 'date-fns';
import { colors, Container, Text, Tooltip } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/execution-detail/helpers.ts
Tamaño: 2088 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { ExecutionDetailsStatusEnum, StepTypeEnum } from '@novu/shared';
import { MantineTheme } from '@mantine/core';
import {
  colors,
  Chat,
  Check,
  CheckCircle,
  Clicked,
  Digest,
  ErrorIcon,
  InApp,
  Mail,
  Mobile,
  Read,
  Received,
  Seen,
  Sent,
  Sms,
  Timer,
  WarningIcon,
  CurlyBrackets,
} from '@novu/design-system';

export const getColorByStatus = (theme: MantineTheme, status: ExecutionDetailsStatusEnum): string => {
  if (status === ExecutionDetailsStatusEnum.FAILED) {
    return colors.error;
  }

  if (status === ExecutionDetailsStatusEnum.SUCCESS) {
    return colors.success;
  }

  return theme.colorScheme === 'dark' ? colors.B60 : colors.B40;
};

export const getLogoByStatus = (
  status: ExecutionDetailsStatusEnum
): React.FunctionComponent<React.ComponentPropsWithoutRef<'svg'>> => {
  switch (status) {
    case ExecutionDetailsStatusEnum.SUCCESS:
      return CheckCircle;
    case ExecutionDetailsStatusEnum.WARNING:
      return WarningIcon;
    case ExecutionDetailsStatusEnum.FAILED:
      return ErrorIcon;
    default:
      return Check;
  }
};

export const getLogoByType = (
  type: StepTypeEnum
): React.FunctionComponent<React.ComponentPropsWithoutRef<'svg'>> | null => {
  if (type === StepTypeEnum.DELAY) {
    return Timer;
  }

  if (type === StepTypeEnum.DIGEST) {
    return Digest;
  }

  if (type === StepTypeEnum.EMAIL) {
    return Mail;
  }

  if (type === StepTypeEnum.SMS) {
    return Sms;
  }

  if (type === StepTypeEnum.IN_APP) {
    return InApp;
  }

  if (type === StepTypeEnum.CHAT) {
    return Chat;
  }

  if (type === StepTypeEnum.PUSH) {
    return Mobile;
  }

  if (type === StepTypeEnum.CUSTOM) {
    return CurlyBrackets;
  }

  return null;
};

export const mappedWebhookStatuses = {
  sent: { label: 'Sent', icon: Sent, status: ['processed'] },
  received: { label: 'Received', icon: Received, status: ['delivered'] },
  read: { label: 'Read', icon: Read, status: [] },
  seen: { label: 'Seen', icon: Seen, status: ['open'] },
  clicked: { label: 'Clicked', icon: Clicked, status: ['click'] },
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - getColorByStatus(theme: MantineTheme, status: ExecutionDetailsStatusEnum): string)
 - getLogoByStatus(status: ExecutionDetailsStatusEnum
): React.FunctionComponent<React.ComponentPropsWithoutRef<'svg'>>)
 - getLogoByType(type: StepTypeEnum
): React.FunctionComponent<React.ComponentPropsWithoutRef<'svg'>> | null)
Declaraciones 'export' encontradas:
- export  const
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/layout/constants.ts
Tamaño: 37 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export const HEADER_NAV_HEIGHT = 40;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/AppShell.tsx
Tamaño: 258 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { styled } from '@novu/novui/jsx';
import { cva } from '@novu/novui/css';

export const AppShell = styled(
  'div',
  cva({
    base: {
      display: 'flex',
      width: '[100vw]',
      height: '[100vh]',
      minWidth: '[1024px]',
    },
  })
);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { styled } from '@novu/novui/jsx';
import { cva } from '@novu/novui/css';
export const AppShell = styled(
'div',
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/AuthLayout.tsx
Tamaño: 632 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { Title, Container } from '@novu/design-system';

export default function AuthLayout({ title = '', children }: { title?: string; children: React.ReactNode }) {
  return (
    <Container
      sx={{
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        margin: 0,
        overflowY: 'auto',
        height: '100vh',
      }}
    >
      <div style={{ margin: 'auto', padding: '40px 20px', width: '100%', maxWidth: 550 }}>
        {title && <Title data-test-id="auth-container-title">{title}</Title>}
        {children}
      </div>
    </Container>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { Title, Container } from '@novu/design-system';
export default function AuthLayout({ title = '', children }: { title?: string; children: React.ReactNode }) {
return (
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/BridgeStatus.tsx
Tamaño: 2004 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Badge, Text } from '@mantine/core';
import { useQuery } from '@tanstack/react-query';
import { Popover } from '@novu/design-system';
import { useDisclosure } from '@mantine/hooks';
import type { HealthCheck } from '@novu/framework/internal';
import { api } from '../../../api/api.client';
import { useEnvironment } from '../../../hooks';
import { IS_SELF_HOSTED } from '../../../config';

export function BridgeStatus() {
  const [opened, { close, open }] = useDisclosure(false);

  const { environment } = useEnvironment();
  const isBridgeEnabled = !!environment?.echo?.url && !IS_SELF_HOSTED;
  const { data, error, isInitialLoading } = useQuery<HealthCheck>(
    ['/v1/bridge/status'],
    () => {
      return api.get('/v1/bridge/status');
    },
    {
      enabled: isBridgeEnabled,
      refetchInterval: 5000,
      refetchOnWindowFocus: true,
    }
  );

  if (IS_SELF_HOSTED) {
    return null;
  }

  if (!isBridgeEnabled) return null;

  const status = data?.status === 'ok' && !error ? 'ok' : 'down';
  let color = status === 'ok' ? 'green' : 'red';
  if (isInitialLoading) {
    color = 'yellow';
  }

  return (
    <Popover
      opened={opened}
      titleGradient={status === 'ok' ? 'blue' : undefined}
      position={'bottom'}
      target={
        <Badge color={color} variant="outline" onMouseEnter={open} onMouseLeave={close}>
          Bridge
        </Badge>
      }
      title={'Bridge Status'}
      content={<PopoverContent status={status} url={environment?.echo?.url} />}
    ></Popover>
  );
}

function PopoverContent({ url, status }) {
  if (status !== 'ok') {
    return (
      <>
        <Text>
          <b>Status</b>: {status === 'ok' ? 'Connected to your application' : 'Disconnected from your application'}
        </Text>
        <Text>
          <b>URL</b>: {url}
        </Text>
      </>
    );
  }

  return (
    <>
      <Text>
        <b>Status</b>: Bridge Is Up
      </Text>
      <Text>
        <b>URL</b>: {url}
      </Text>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Badge, Text } from '@mantine/core';
import { useQuery } from '@tanstack/react-query';
import { Popover } from '@novu/design-system';
import { useDisclosure } from '@mantine/hooks';
import type { HealthCheck } from '@novu/framework/internal';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/Card.tsx
Tamaño: 553 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { Container, Space, Sx } from '@mantine/core';
import { Title } from '@novu/design-system';

const Card = ({
  title,
  children,
  space = 35,
  sx,
  mb = 20,
}: {
  title: string;
  children: React.ReactNode;
  space?: string | number;
  sx?: Sx | (Sx | undefined)[];
  mb?: number;
}) => {
  return (
    <Container mb={mb} ml={0} p={0} pl={0} pr={0} sx={{ paddingTop: '41px', ...sx }}>
      <Title size={2}>{title}</Title>
      <Space h={space} />
      {children}
    </Container>
  );
};

export default Card;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { Container, Space, Sx } from '@mantine/core';
import { Title } from '@novu/design-system';
const Card = ({
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/ChangesCountBadge.tsx
Tamaño: 518 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';

import { NotificationBadge } from '@novu/design-system';
import { getChangesCount } from '../../../api/changes';
import { QueryKeys } from '../../../api/query.keys';

export const ChangesCountBadge = () => {
  const { data: changesCount = 0 } = useQuery<number>([QueryKeys.changesCount], getChangesCount);

  return changesCount ? (
    <NotificationBadge>
      <div data-test-id="side-nav-changes-count">{changesCount}</div>
    </NotificationBadge>
  ) : null;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useQuery } from '@tanstack/react-query';
import { NotificationBadge } from '@novu/design-system';
import { getChangesCount } from '../../../api/changes';
import { QueryKeys } from '../../../api/query.keys';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/ContentShell.tsx
Tamaño: 298 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { styled } from '@novu/novui/jsx';
import { cva } from '@novu/novui/css';

export const ContentShell = styled(
  'div',
  cva({
    base: {
      display: 'flex',
      flexDirection: 'column',
      flex: '[1 1 0%]',
      // for appropriate scroll
      overflow: 'hidden',
    },
  })
);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { styled } from '@novu/novui/jsx';
import { cva } from '@novu/novui/css';
export const ContentShell = styled(
'div',
// for appropriate scroll
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/FreeTrialBanner.tsx
Tamaño: 227 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FreeTrialBanner as Component } from '../../../ee/billing';
import { IS_SELF_HOSTED } from '../../../config';

export function FreeTrialBanner() {
  if (IS_SELF_HOSTED) {
    return null;
  }

  return <Component />;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FreeTrialBanner as Component } from '../../../ee/billing';
import { IS_SELF_HOSTED } from '../../../config';
export function FreeTrialBanner() {
if (IS_SELF_HOSTED) {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/FreeTrialSidebarWidget.tsx
Tamaño: 265 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FreeTrialSidebarWidget as Component } from '../../../ee/billing';
import { IS_SELF_HOSTED, IS_EE_AUTH_ENABLED } from '../../../config';

export const FreeTrialSidebarWidget = () => {
  if (IS_SELF_HOSTED) {
    return null;
  }

  return <Component />;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FreeTrialSidebarWidget as Component } from '../../../ee/billing';
import { IS_SELF_HOSTED, IS_EE_AUTH_ENABLED } from '../../../config';
export const FreeTrialSidebarWidget = () => {
if (IS_SELF_HOSTED) {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/Header.tsx
Tamaño: 45 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

export function Header() {
  return <></>;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

export function Header() {
return <></>;
}
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/ListPage.tsx
Tamaño: 2792 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { IPaginationProps, PageContainer, Pagination, colors, ITableProps } from '@novu/design-system';
import { ComponentProps, PropsWithChildren } from 'react';
import PageHeader from './PageHeader';

// values directly from designs -- see comment below about why they're necessary
const FOOTER_FADE_OVERLAY_HEIGHT_PX = 20;
const FOOTER_HEIGHT_PX = 64;
const TOTAL_FOOTER_HEIGHT_PX = FOOTER_HEIGHT_PX + FOOTER_FADE_OVERLAY_HEIGHT_PX;

const StickyFooter = styled.footer`
  position: sticky;
  bottom: 0;
  /**
   * :( Required CSS witchery because the PageContainer and other contained elements doesn't use Flexbox or Grid.
   * We can't use position: fixed or absolute because the PageContainer width is dynamic, and we can't inherit it.
   * 'sticky' alone doesn't work, so we have to force the element to a calculated position.
   */
  top: calc(100% - ${TOTAL_FOOTER_HEIGHT_PX}px);
  max-height: ${TOTAL_FOOTER_HEIGHT_PX}px;

  /** adds a faded overlay to give depth to the footer */
  border-width: ${FOOTER_FADE_OVERLAY_HEIGHT_PX}px 0 0 0;
  border-style: solid;
  border-image: ${({ theme }) =>
      theme.colorScheme === 'dark'
        ? `linear-gradient(0deg, ${colors.B15}FF 0%, ${colors.B15}00 100%)`
        : `linear-gradient(0deg, ${colors.white}FF 0%, ${colors.white}00 100%)`}
    100% 0 0 0;

  /* TODO: use theme values */
  z-index: 5;
`;

const PaginationWrapper = styled.div`
  /* TODO: use theme values */
  padding: 12px 24px 20px 24px;
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B15 : colors.white)};
`;

export interface IListPageProps<TRow extends object> extends Omit<ITableProps<TRow>, 'pagination'> {
  title: string;
  paginationInfo?: IPaginationProps & ComponentProps<typeof Pagination.PageSizeSelect>;
}

export const ListPage = <TRow extends object>({
  title,
  paginationInfo,
  children,
}: PropsWithChildren<IListPageProps<TRow>>) => {
  return (
    <PageContainer title={title}>
      <PageHeader title={title} />
      {children}
      {paginationInfo && (
        <StickyFooter>
          <PaginationWrapper>
            <Pagination
              totalItemCount={paginationInfo.totalItemCount}
              totalPageCount={paginationInfo.totalPageCount}
              currentPageNumber={paginationInfo.currentPageNumber}
              pageSize={paginationInfo.pageSize}
              onPageChange={paginationInfo.onPageChange}
            >
              <Pagination.PageSizeSelect onPageSizeChange={paginationInfo.onPageSizeChange} />
              <Pagination.ControlBar />
              <Pagination.GoToPageInput label={'Go to'} placeholder={'page'} />
            </Pagination>
          </PaginationWrapper>
        </StickyFooter>
      )}
    </PageContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { IPaginationProps, PageContainer, Pagination, colors, ITableProps } from '@novu/design-system';
import { ComponentProps, PropsWithChildren } from 'react';
import PageHeader from './PageHeader';
// values directly from designs -- see comment below about why they're necessary
/**
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/LocalStudioPageLayout.tsx
Tamaño: 2150 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ErrorBoundary } from '@sentry/react';
import { Outlet, useLocation } from 'react-router-dom';
import { css } from '@novu/novui/css';
import { WithLoadingSkeleton } from '@novu/novui';
import { Box } from '@novu/novui/jsx';
import { useEffect } from 'react';
import { LocalStudioHeader } from './LocalStudioHeader/LocalStudioHeader';
import { LocalStudioSidebar } from './LocalStudioSidebar';
import { isStudioOnboardingRoute } from '../../../studio/utils/routing';
import { AppShell } from './AppShell';
import { ContentShell } from './ContentShell';
import { WorkflowsDetailPage } from '../../../studio/components/workflows/index';
import { useTelemetry } from '../../../hooks/useNovuAPI';
import { useStudioState } from '../../../studio/hooks';
import { useSegment } from '../../providers/SegmentProvider';

export const LocalStudioPageLayout: WithLoadingSkeleton = () => {
  const { pathname } = useLocation();
  const state = useStudioState();
  const segment = useSegment();

  useEffect(() => {
    if (state.anonymousId) {
      segment.setAnonymousId(state.anonymousId);
    }
  }, [state]);

  return (
    <ErrorBoundary
      fallback={({ error, eventId }) => (
        <>
          Sorry, but something went wrong. <br />
          Our team has been notified and we are investigating.
          <br />
          <code>
            <small style={{ color: 'lightGrey' }}>
              Event Id: {eventId}.
              <br />
              {error.toString()}
            </small>
          </code>
        </>
      )}
    >
      <AppShell className={css({ '& *': { colorPalette: 'mode.local' } })}>
        <LocalStudioSidebar />
        <ContentShell>
          {!isStudioOnboardingRoute(pathname) && <LocalStudioHeader />}
          <Outlet />
        </ContentShell>
      </AppShell>
    </ErrorBoundary>
  );
};

LocalStudioPageLayout.LoadingDisplay = LoadingDisplay;

function LoadingDisplay() {
  return (
    <AppShell>
      <LocalStudioSidebar.LoadingDisplay />
      <ContentShell>
        <Box bg="surface.page" h="250" />
        <WorkflowsDetailPage.LoadingDisplay />
      </ContentShell>
    </AppShell>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ErrorBoundary } from '@sentry/react';
import { Outlet, useLocation } from 'react-router-dom';
import { css } from '@novu/novui/css';
import { WithLoadingSkeleton } from '@novu/novui';
import { Box } from '@novu/novui/jsx';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/NotificationCenterBell.tsx
Tamaño: 612 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { colors, IconNotifications } from '@novu/design-system';

export function NotificationCenterBell({ unseenCount }: { unseenCount?: number }) {
  return (
    <span style={{ position: 'relative' }}>
      <IconNotifications />
      {!!unseenCount && <StyledDot />}
    </span>
  );
}

const StyledDot = styled.div`
  position: absolute;
  top: -0.5rem;
  right: -0.125rem;
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background: ${colors.vertical};
  border: 2px solid ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B15 : colors.white)};
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { colors, IconNotifications } from '@novu/design-system';
export function NotificationCenterBell({ unseenCount }: { unseenCount?: number }) {
return (
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/NotificationCenterWidget.tsx
Tamaño: 2458 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMantineColorScheme } from '@mantine/core';
import { NovuProvider, PopoverNotificationCenter, useUpdateAction } from '@novu/notification-center';
import {
  ButtonTypeEnum,
  IMessage,
  INVITE_TEAM_MEMBER_NUDGE_PAYLOAD_KEY,
  IUserEntity,
  MessageActionStatusEnum,
} from '@novu/shared';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../../../hooks/useAuth';
import { API_ROOT, APP_ID, IS_EU_ENV, WS_URL } from '../../../config';
import { useEnvironment } from '../../../hooks';
import { NotificationCenterBell } from './NotificationCenterBell';
import { ROUTES } from '../../../constants/routes';
import { useSegment } from '../../providers/SegmentProvider';

const BACKEND_URL = IS_EU_ENV ? 'https://api.novu.co' : API_ROOT;
const SOCKET_URL = IS_EU_ENV ? 'https://ws.novu.co' : WS_URL;

export function NotificationCenterWidget({ user }: { user: IUserEntity | undefined }) {
  const { environment } = useEnvironment();

  return (
    <>
      <NovuProvider
        backendUrl={BACKEND_URL}
        socketUrl={SOCKET_URL}
        subscriberId={user?._id as string}
        applicationIdentifier={APP_ID || (environment?.identifier as string)}
      >
        <PopoverWrapper />
      </NovuProvider>
    </>
  );
}

function PopoverWrapper() {
  const { colorScheme } = useMantineColorScheme();
  const { updateAction } = useUpdateAction();
  const segment = useSegment();
  const { currentOrganization, currentUser } = useAuth();

  const navigate = useNavigate();
  function handlerOnNotificationClick(message: IMessage) {
    if (message.payload[INVITE_TEAM_MEMBER_NUDGE_PAYLOAD_KEY]) {
      segment.track('Invite Nudge Clicked', {
        _user: currentUser?._id,
        _organization: currentOrganization?._id,
      });
      navigate(ROUTES.TEAM);
    }

    if (message?.cta?.data?.url) {
      window.location.href = message.cta.data.url;
    }
  }

  async function handlerOnActionClick(templateIdentifier: string, type: ButtonTypeEnum, message: IMessage) {
    await updateAction({ messageId: message._id, actionButtonType: type, status: MessageActionStatusEnum.DONE });
  }

  return (
    <PopoverNotificationCenter
      colorScheme={colorScheme}
      onNotificationClick={handlerOnNotificationClick}
      onActionClick={handlerOnActionClick}
    >
      {({ unseenCount }) => {
        return <NotificationCenterBell unseenCount={unseenCount} />;
      }}
    </PopoverNotificationCenter>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMantineColorScheme } from '@mantine/core';
import { NovuProvider, PopoverNotificationCenter, useUpdateAction } from '@novu/notification-center';
import {
ButtonTypeEnum,
IMessage,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/PageContainer.tsx
Tamaño: 84 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { PageContainer } from '@novu/design-system';

export default PageContainer;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { PageContainer } from '@novu/design-system';
export default PageContainer;
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/PageHeader.tsx
Tamaño: 1029 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import { Title, Container } from '@novu/design-system';
import { Flex } from '@novu/novui/jsx';
import { DocsButton } from '../../docs/DocsButton';
import { DocsPaths, useDocsPath } from '../../docs/useDocsPath';
import { ROUTES } from '../../../constants/routes';
import { PATHS } from '../../docs/docs.const';

const paths: DocsPaths = {
  [ROUTES.INTEGRATIONS]: PATHS.INTEGRATION_INTRODUCTION,
  [ROUTES.SUBSCRIBERS]: PATHS.CONCEPT_SUBSCRIBERS,
  [ROUTES.WORKFLOWS]: PATHS.CONCEPT_WORKFLOWS,
  [ROUTES.TENANTS]: PATHS.CONCEPT_TENANTS,
};

function PageHeader({ actions, title }: { actions?: JSX.Element; title: string }) {
  const path = useDocsPath(paths);

  return (
    <Container fluid sx={{ padding: '20px 24px' }}>
      <Group position="apart">
        <Flex align="center" gap="75">
          <Title>{title}</Title>
          <DocsButton path={path} />
        </Flex>
        {actions && <div>{actions}</div>}
      </Group>
    </Container>
  );
}

export default PageHeader;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import { Title, Container } from '@novu/design-system';
import { Flex } from '@novu/novui/jsx';
import { DocsButton } from '../../docs/DocsButton';
import { DocsPaths, useDocsPath } from '../../docs/useDocsPath';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/PolishingBanner.tsx
Tamaño: 2006 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMantineTheme } from '@mantine/core';
import { Close } from '@novu/design-system';
import styled from '@emotion/styled';
import { useLocalStorage } from '@mantine/hooks';
import { useSegment } from '../../providers/SegmentProvider';

export function PolishingBanner() {
  const isDark = useMantineTheme().colorScheme === 'dark';
  const segment = useSegment();
  const [polishingBannerDismissed, setPolishingBannerDismissed] = useLocalStorage({
    key: 'polishingBannerDismissed',
    defaultValue: 'false',
  });
  const selfHosted = process.env.REACT_APP_IS_SELF_HOSTED === 'true';

  if (selfHosted || polishingBannerDismissed === 'true') return null;

  function DismissIcon() {
    function dismissBanner() {
      segment.track('Polishing Banner Dismiss');
      setPolishingBannerDismissed('true');
    }

    return (
      <CloseWrapper onClick={dismissBanner}>
        <Close />
      </CloseWrapper>
    );
  }

  return (
    <div
      style={{
        marginBottom: 10,
        width: '100%',
        borderRadius: 7,
        minHeight: 50,
        backgroundColor: isDark ? '#1E1E26' : 'white',
        textAlign: 'center',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        position: 'relative',
      }}
    >
      We are polishing! This release is dedicated to bug fixes, UI improvements and performance optimizations.{' '}
      <a
        href={'https://novu.co/polishing?utm_source=web&utm_medium=banner&utm_campaign=polishing'}
        onClick={() => {
          segment.track('Polishing Banner Clicked');
        }}
        target={'_blank'}
        rel="noreferrer"
        style={{ textDecoration: 'underline', display: 'inline-block', marginLeft: 5 }}
      >
        Learn More.
      </a>
      <DismissIcon />
    </div>
  );
}

const CloseWrapper = styled.a`
  float: right;
  position: absolute;
  right: 15px;
  font-size: 10px;
  padding: 5px;
  &:hover {
    cursor: pointer;
  }

  svg {
    width: 13px;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMantineTheme } from '@mantine/core';
import { Close } from '@novu/design-system';
import styled from '@emotion/styled';
import { useLocalStorage } from '@mantine/hooks';
import { useSegment } from '../../providers/SegmentProvider';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/PrivatePageLayout.tsx
Tamaño: 3872 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect, useMemo, useState } from 'react';
import { ErrorBoundary } from '@sentry/react';
import { Outlet, useLocation } from 'react-router-dom';
import styled from '@emotion/styled';
import { IntercomProvider } from 'react-use-intercom';

import { css } from '@novu/novui/css';
import { EnvironmentEnum } from '@novu/shared';

import {
  BRIDGE_SYNC_SAMPLE_ENDPOINT,
  BRIDGE_ENDPOINTS_LEGACY_VERSIONS,
  INTERCOM_APP_ID,
  IS_EE_AUTH_ENABLED,
} from '../../../config';
import { SpotLight } from '../../utils/Spotlight';
import { SpotLightProvider } from '../../providers/SpotlightProvider';
import { useEnvironment, useRedirectURL, useRouteScopes } from '../../../hooks';
// TODO: Move sidebar under layout folder as it belongs here
import { Sidebar } from '../../nav/Sidebar';
import { HeaderNav } from './v2/HeaderNav';
import { FreeTrialBanner } from './FreeTrialBanner';
import { SampleModeBanner } from './v2/SampleWorkflowsBanner';
import { useOptInRedirect } from '../../../hooks/useOptInRedirect';

const AppShell = styled.div`
  display: flex;
  width: 100vw;
  height: 100vh;
  min-width: 1024px;
`;

const ContentShell = styled.div`
  display: flex;
  flex-direction: column;
  flex: 1 1 0%;
  overflow: hidden; // for appropriate scroll
`;

export function PrivatePageLayout() {
  const [isIntercomOpened, setIsIntercomOpened] = useState(false);
  const { environment } = useEnvironment();
  const location = useLocation();
  const { getRedirectURL } = useRedirectURL();
  const { inStudioRoute } = useRouteScopes();

  /**
   * TODO: this is a temporary work-around to let us work the different color palettes while testing locally.
   * Eventually, we will want to only include 'LOCAL' in the conditional.
   */
  const isLocalEnv = useMemo(
    () => [EnvironmentEnum.DEVELOPMENT].includes(environment?.name as EnvironmentEnum) && inStudioRoute,
    [environment, inStudioRoute]
  );

  const isEqualToSampleEndpoint =
    environment?.bridge?.url &&
    (environment?.bridge?.url === BRIDGE_SYNC_SAMPLE_ENDPOINT ||
      BRIDGE_ENDPOINTS_LEGACY_VERSIONS.includes(environment?.bridge?.url));
  const showSampleModeBanner = isEqualToSampleEndpoint && location.pathname.includes('/workflows');

  useEffect(() => {
    const redirectURL = getRedirectURL();
    if (redirectURL) {
      // Note: Do not use react-router-dom. The version we have doesn't do instant cross origin redirects.
      window.location.replace(redirectURL);
    }
  }, []);

  if (IS_EE_AUTH_ENABLED) {
    const shouldRedirect = useOptInRedirect();

    if (shouldRedirect) {
      // prevent flickering of the legacy layout until the redirect is done
      return null;
    }
  }

  return (
    <SpotLightProvider>
      <IntercomProvider
        appId={INTERCOM_APP_ID}
        onShow={() => setIsIntercomOpened(true)}
        onHide={() => setIsIntercomOpened(false)}
      >
        <ErrorBoundary
          fallback={({ error, eventId }) => (
            <>
              Sorry, but something went wrong. <br />
              Our team has been notified and we are investigating.
              <br />
              <code>
                <small style={{ color: 'lightGrey' }}>
                  Event Id: {eventId}.
                  <br />
                  {error.toString()}
                </small>
              </code>
            </>
          )}
        >
          <SpotLight>
            <AppShell className={css({ '& *': { colorPalette: isLocalEnv ? 'mode.local' : 'mode.cloud' } })}>
              <Sidebar />
              <ContentShell>
                {showSampleModeBanner && <SampleModeBanner />}
                <FreeTrialBanner />
                <HeaderNav />
                <Outlet />
              </ContentShell>
            </AppShell>
          </SpotLight>
        </ErrorBoundary>
      </IntercomProvider>
    </SpotLightProvider>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect, useMemo, useState } from 'react';
import { ErrorBoundary } from '@sentry/react';
import { Outlet, useLocation } from 'react-router-dom';
import styled from '@emotion/styled';
import { IntercomProvider } from 'react-use-intercom';
// TODO: Move sidebar under layout folder as it belongs here
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/PublicPageLayout.tsx
Tamaño: 1957 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { createStyles, Box } from '@mantine/core';
import { Outlet } from 'react-router-dom';
import { CONTEXT_PATH } from '../../../config/index';

export function PublicPageLayout() {
  const { classes } = useStyles();

  return (
    <div className={classes.wrapper}>
      <div className={classes.bg}>
        <img
          src={`${CONTEXT_PATH}/static/images/logo-light.webp`}
          alt="logo"
          style={{ alignSelf: 'flex-start', maxWidth: 150, marginTop: 5, marginLeft: 5 }}
        />
        <Box
          sx={{
            position: 'absolute',
            right: '50%',
            display: 'flex',
            flexDirection: 'column',
            transform: 'translate(35%, 7%)',
            '@media (max-width: 1200px)': {
              display: 'none',
            },
          }}
        >
          <img
            src={`${CONTEXT_PATH}/static/images/notifications/notification_01.webp`}
            alt="logo"
            style={{ maxWidth: 400 }}
          />
          <img
            src={`${CONTEXT_PATH}/static/images/notifications/notification_02.webp`}
            alt="logo"
            style={{ marginTop: -15, marginLeft: 30, maxWidth: 400 }}
          />
          <img
            src={`${CONTEXT_PATH}/static/images/notifications/notification_03.webp`}
            alt="logo"
            style={{ marginTop: -15, maxWidth: 400 }}
          />
        </Box>{' '}
      </div>
      <Outlet />
    </div>
  );
}

const useStyles = createStyles((theme) => ({
  wrapper: {
    display: 'grid',
    gridAutoFlow: 'column',
    gridAutoColumns: '1fr',
    columnGap: 25,
    minHeight: '100vh',
  },
  bg: {
    display: 'flex',
    alignItems: 'center',
    position: 'relative',
    minWidth: 600,
    backgroundSize: '70% 100%',
    backgroundRepeat: 'no-repeat',
    backgroundImage: `url(${CONTEXT_PATH}/static/images/signin_bg.webp)`,
    '@media (max-width: 1100px)': {
      display: 'none',
    },
  },
}));


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { createStyles, Box } from '@mantine/core';
import { Outlet } from 'react-router-dom';
import { CONTEXT_PATH } from '../../../config/index';
export function PublicPageLayout() {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/SupportModal.tsx
Tamaño: 2493 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { errorMessage, Modal, successMessage } from '@novu/design-system';
import { css } from '@novu/novui/css';
import { Button, Title, Textarea } from '@novu/novui';
import { HStack, Box } from '@novu/novui/jsx';
import { FC } from 'react';
import { useForm, Controller } from 'react-hook-form';
import { createThread } from '../../../api/support';

export type SupportModalProps = {
  isOpen: boolean;
  toggleOpen: () => void;
};

export const SupportModal: FC<SupportModalProps> = ({ isOpen, toggleOpen }) => {
  const {
    control,
    handleSubmit,
    formState: { isValid },
    reset,
  } = useForm({
    defaultValues: {
      threadText: '',
    },
  });

  const onSubmit = async (data) => {
    try {
      await createThread({ threadText: data.threadText });
      successMessage('Thanks for contacting us! We will get back to you soon.');
      reset();
      toggleOpen();
    } catch (error) {
      errorMessage('Something went wrong. Please reach out to us at support@novu.co');
    }
  };

  return (
    <>
      <Modal opened={isOpen} title={<Title variant="section">Contact Us</Title>} onClose={toggleOpen}>
        <Box colorPalette={'mode.local'}>
          <Controller
            name="threadText"
            control={control}
            rules={{
              required: true,
              minLength: 10,
            }}
            render={({ field: { onChange, value } }) => (
              <Textarea
                label={'Ask questions, report bugs, request features or share feedback'}
                description={
                  'Our team will get back to you as soon as possible over the email. Please provide as much detail as possible to help us understand your request.'
                }
                required={true}
                maxRows={8}
                minRows={8}
                onChange={onChange}
                value={value}
                className={css({ marginBottom: '20px' })}
              />
            )}
          />

          <HStack justify={'space-between'}>
            <div>
              <HStack gap="50" className={css({ color: 'typography.text.secondary' })}>
                You can also email us at
                <a href="mailto:support@novu.co">support@novu.co</a>
              </HStack>
            </div>
            <Button size={'md'} disabled={!isValid} onClick={handleSubmit(onSubmit)}>
              Submit
            </Button>
          </HStack>
        </Box>
      </Modal>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { errorMessage, Modal, successMessage } from '@novu/design-system';
import { css } from '@novu/novui/css';
import { Button, Title, Textarea } from '@novu/novui';
import { HStack, Box } from '@novu/novui/jsx';
import { FC } from 'react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/UpgradePlanBanner.tsx
Tamaño: 365 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FC } from 'react';
import { IS_SELF_HOSTED } from '../../../config';
import { UpgradePlanBanner as Component } from '../../../ee/billing';

export function UpgradePlanBanner({ FeatureActivatedBanner }: { FeatureActivatedBanner: FC }) {
  if (IS_SELF_HOSTED) {
    return null;
  }

  return <Component FeatureActivatedBanner={FeatureActivatedBanner} />;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FC } from 'react';
import { IS_SELF_HOSTED } from '../../../config';
import { UpgradePlanBanner as Component } from '../../../ee/billing';
export function UpgradePlanBanner({ FeatureActivatedBanner }: { FeatureActivatedBanner: FC }) {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/VisibilityOff.tsx
Tamaño: 633 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IconOutlineVisibilityOff, colors } from '@novu/design-system';
import styled from '@emotion/styled';

/** @deprecated */
export const VisibilityOff = ({ onClick }: { onClick: React.MouseEventHandler<HTMLDivElement> }) => {
  return (
    <IconContainer onClick={onClick}>
      <IconOutlineVisibilityOff />
    </IconContainer>
  );
};

const IconContainer = styled.div`
  background: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B30 : colors.BGLight)};
  transition: background 0.2s ease;
  border-radius: 8px;
  height: 32px;
  width: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IconOutlineVisibilityOff, colors } from '@novu/design-system';
import styled from '@emotion/styled';
/** @deprecated */
export const VisibilityOff = ({ onClick }: { onClick: React.MouseEventHandler<HTMLDivElement> }) => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/LocalStudioHeader/BackButton.tsx
Tamaño: 815 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Text } from '@novu/novui';
import { IconOutlineArrowBack } from '@novu/novui/icons';
import { hstack } from '@novu/novui/patterns';

type BackButtonProps = { onClick: () => void; styles?: Record<string, any> };

export function BackButton({ onClick, styles = {} }: BackButtonProps) {
  return (
    <button
      className={hstack({
        cursor: 'pointer',
        gap: 'margins.icons.Icon20-txt',
        px: '75',
        py: '25',
        borderRadius: '75',
        textStyle: 'text.secondary !important',
        _hover: { bg: 'badge.border', '& p, & svg': { color: 'typography.text.main !important' } },
        ...styles,
      })}
      onClick={onClick}
    >
      <IconOutlineArrowBack />
      <Text variant="secondary" fontWeight={'strong'}>
        Back
      </Text>
    </button>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Text } from '@novu/novui';
import { IconOutlineArrowBack } from '@novu/novui/icons';
import { hstack } from '@novu/novui/patterns';
type BackButtonProps = { onClick: () => void; styles?: Record<string, any> };
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/LocalStudioHeader/LocalStudioHeader.tsx
Tamaño: 1918 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Header } from '@mantine/core';
import { IconButton } from '@novu/novui';
import { Tooltip } from '@novu/design-system';
import { css } from '@novu/novui/css';
import { IconOutlineMenuBook } from '@novu/novui/icons';
import { HStack } from '@novu/novui/jsx';
import { FC } from 'react';
import useThemeChange from '../../../../hooks/useThemeChange';
import { useStudioWorkflowsNavigation } from '../../../../studio/hooks';
import { HEADER_NAV_HEIGHT } from '../../constants';
import { BridgeMenuItems } from '../v2/BridgeMenuItems';
import { BackButton } from './BackButton';

export const LocalStudioHeader: FC = () => {
  const { goBack, shouldHideBackButton } = useStudioWorkflowsNavigation();
  const { Icon, themeLabel, toggleColorScheme } = useThemeChange();

  return (
    <Header
      height={`${HEADER_NAV_HEIGHT}px`}
      className={css({
        position: 'sticky',
        top: 0,
        borderBottom: 'none !important',
        zIndex: 'docked !important', // !important is necessary to override Mantine's z-index
        padding: '50',
        // TODO: because this component is directly from mantine, it doesn't respect layer styles
        bgColor: 'surface.page !important',
      })}
    >
      <HStack justifyContent="space-between" width="full" display="flex">
        <HStack gap="100">{!shouldHideBackButton && <BackButton onClick={goBack} />}</HStack>
        <HStack gap="100">
          <BridgeMenuItems />
          <Tooltip label={themeLabel}>
            <IconButton variant="transparent" onClick={() => toggleColorScheme()} Icon={Icon} />
          </Tooltip>
          <IconButton
            Icon={IconOutlineMenuBook}
            title={'Go to docs'}
            as="a"
            href={'https://docs.novu.co?utm_campaign=local_studio'}
            target="_blank"
            rel="noopener noreferrer"
          />
        </HStack>
      </HStack>
    </Header>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Header } from '@mantine/core';
import { IconButton } from '@novu/novui';
import { Tooltip } from '@novu/design-system';
import { css } from '@novu/novui/css';
import { IconOutlineMenuBook } from '@novu/novui/icons';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/LocalStudioHeader/index.ts
Tamaño: 37 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './LocalStudioHeader';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/LocalStudioSidebar/LocalStudioSidebar.tsx
Tamaño: 1772 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { WithLoadingSkeleton } from '@novu/novui';
import { IconCloudQueue } from '@novu/novui/icons';
import { css, cx } from '@novu/novui/css';
import { HStack } from '@novu/novui/jsx';

import { useDiscover } from '../../../../studio/hooks/useBridgeAPI';
import { Aside } from '../../../nav/Aside';
import { LocalStudioSidebarContent } from './LocalStudioSidebarContent';
import { SidebarFooter } from './SidebarFooter';
import { FCBase } from '../../../../types';

export const LocalStudioSidebar: WithLoadingSkeleton = () => {
  const { isLoading, data } = useDiscover();

  return (
    <Aside>
      <LocalStudioSidebarContent workflows={data?.workflows ?? []} isLoading={isLoading} />
      <SidebarFooter>
        <HrefButton />
      </SidebarFooter>
    </Aside>
  );
};

/*
 * We need to use href here because in local development, it shouldn't open a new tab as a popup.
 * because of 'Cross-Origin-Opener-Policy': 'same-origin'
 */
export const HrefButton: FCBase = () => {
  return (
    <a href={window.location.origin} target={'_blank'} className={cx(css({}))}>
      <HStack
        className={cx(
          css({
            fontSize: '14px',
            fontStyle: 'normal',
            fontWeight: '600',
            lineHeight: '20px',
            bg: 'transparent',
            justifyContent: 'center',
            borderColor: 'rgb(48, 164, 108)',
            border: 'solid',
            borderRadius: '8px',
            padding: '8px 16px 8px 16px',
            color: { base: '#525266', _dark: 'white' },
          })
        )}
      >
        <IconCloudQueue />
        Open Cloud Dashboard
      </HStack>
    </a>
  );
};

LocalStudioSidebar.LoadingDisplay = () => (
  <Aside>
    <LocalStudioSidebarContent.LoadingDisplay />
  </Aside>
);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { WithLoadingSkeleton } from '@novu/novui';
import { IconCloudQueue } from '@novu/novui/icons';
import { css, cx } from '@novu/novui/css';
import { HStack } from '@novu/novui/jsx';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/LocalStudioSidebar/LocalStudioSidebarContent.tsx
Tamaño: 3280 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IconAdd } from '@novu/novui/icons';
import { Flex, Stack } from '@novu/novui/jsx';
import { Skeleton } from '@mantine/core';
import { FC } from 'react';
import { token } from '@novu/novui/tokens';
import { css, cx } from '@novu/novui/css';
import { WithLoadingSkeleton } from '@novu/novui';
import type { DiscoverWorkflowOutput } from '@novu/framework/internal';
import { NavMenu } from '../../../nav/NavMenu';
import { NavMenuSection } from '../../../nav/NavMenuSection';
import { LocalStudioSidebarOrganizationDisplay } from './LocalStudioSidebarOrganizationDisplay';
import { LocalStudioSidebarToggleButton } from './LocalStudioSidebarToggleButton';
import { useStudioState } from '../../../../studio/StudioStateProvider';
import { NavMenuButtonInner, rawButtonBaseStyles } from '../../../nav/NavMenuButton/NavMenuButton.shared';
import { useDocsModal } from '../../../docs/useDocsModal';
import { PATHS } from '../../../docs/docs.const';

type LocalStudioSidebarContentProps = {
  workflows: DiscoverWorkflowOutput[];
  isLoading?: boolean;
};

export const LocalStudioSidebarContent: WithLoadingSkeleton<FC<LocalStudioSidebarContentProps>> = ({
  workflows,
  isLoading,
}) => {
  const { organizationName } = useStudioState();
  const { Component, toggle, setPath } = useDocsModal();

  if (isLoading) {
    return <LoadingDisplay />;
  }

  return (
    <>
      <NavMenu variant="root">
        <LocalStudioSidebarOrganizationDisplay
          title={'Local Studio'}
          subtitle={organizationName || 'Your organization '}
        />
        <NavMenuSection>
          <button
            onClick={(e) => {
              e.preventDefault();
              setPath(PATHS.WORKFLOW_INTRODUCTION);
              toggle();
            }}
            className={css({ width: 'full' })}
          >
            <NavMenuButtonInner
              icon={<IconAdd />}
              className={cx(css({ cursor: 'pointer', justifyContent: 'flex-start' }), css(rawButtonBaseStyles))}
            >
              Add a workflow
            </NavMenuButtonInner>
          </button>

          {workflows?.map((workflow) => (
            <LocalStudioSidebarToggleButton key={workflow.workflowId} workflow={workflow} />
          ))}
        </NavMenuSection>
      </NavMenu>
      <Component />
    </>
  );
};

LocalStudioSidebarContent.LoadingDisplay = LoadingDisplay;

function LoadingDisplay() {
  return (
    <Stack gap="300" p="75">
      <Flex gap="75">
        <Skeleton height={32} width={32} radius="xl" />
        <Stack flexGrow="1">
          <Skeleton height={token('lineHeights.100')} width="70%" radius="md" />
          <Skeleton height={token('lineHeights.100')} width="55%" radius="md" />
        </Stack>
      </Flex>
      <Stack gap="200">
        <Skeleton height={token('lineHeights.100')} width="60%" radius="md" />
        <Skeleton height={token('lineHeights.100')} width="70%" radius="md" />
        <Skeleton height={token('lineHeights.100')} width="55%" radius="md" />
        <Skeleton height={token('lineHeights.100')} width="75%" radius="md" />
        <Skeleton height={token('lineHeights.100')} width="70%" radius="md" />
        <Skeleton height={token('lineHeights.100')} width="55%" radius="md" />
      </Stack>
    </Stack>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IconAdd } from '@novu/novui/icons';
import { Flex, Stack } from '@novu/novui/jsx';
import { Skeleton } from '@mantine/core';
import { FC } from 'react';
import { token } from '@novu/novui/tokens';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/LocalStudioSidebar/LocalStudioSidebarOrganizationDisplay.tsx
Tamaño: 1585 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { LocalizedMessage, Text } from '@novu/novui';
import { Flex, Stack } from '@novu/novui/jsx';
import { FC } from 'react';
import { css } from '@novu/novui/css';
import { Popover, useColorScheme } from '@novu/design-system';
import { useDisclosure } from '@mantine/hooks';

type LocalStudioSidebarOrganizationDisplayProps = {
  title: LocalizedMessage;
  subtitle: LocalizedMessage;
};

export const LocalStudioSidebarOrganizationDisplay: FC<LocalStudioSidebarOrganizationDisplayProps> = ({
  title,
  subtitle,
}) => {
  const { colorScheme } = useColorScheme();
  const [opened, { close, open }] = useDisclosure(false);

  return (
    <Popover
      opened={opened}
      position="bottom"
      offset={0}
      withinPortal
      title="Novu Local Studio"
      classNames={{
        dropdown: css({ bg: 'surface.popover !important', border: 'none !important', shadow: 'medium !important' }),
      }}
      target={
        <Flex gap="50" py="75" px="100" onMouseEnter={open} onMouseLeave={close}>
          <img
            src={`/static/images/standalone-${colorScheme}-theme.svg`}
            className={css({
              w: '37px',
              h: '37px',
              borderRadius: '100',
            })}
          />
          <Stack gap="25">
            <Text variant="strong">{title}</Text>
            <Text variant={'secondary'}>{subtitle}</Text>
          </Stack>
        </Flex>
      }
      description="A stateless version of the Novu Dashboard. It's connected to your local application and used for development and debugging purposes."
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { LocalizedMessage, Text } from '@novu/novui';
import { Flex, Stack } from '@novu/novui/jsx';
import { FC } from 'react';
import { css } from '@novu/novui/css';
import { Popover, useColorScheme } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/LocalStudioSidebar/LocalStudioSidebarToggleButton.tsx
Tamaño: 1628 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { css } from '@novu/novui/css';
import { IconBolt } from '@novu/novui/icons';
import { FC } from 'react';
import type { DiscoverWorkflowOutput } from '@novu/framework/internal';
import { WORKFLOW_NODE_STEP_ICON_DICTIONARY } from '../../../../studio/components/workflows/node-view/WorkflowNodes';
import {
  getStudioWorkflowLink,
  getStudioWorkflowStepLink,
  getStudioWorkflowTestLink,
} from '../../../../studio/utils/routing';
import { NavMenuLinkButton, NavMenuToggleButton } from '../../../nav/NavMenuButton';

type LocalStudioSidebarToggleButtonProps = {
  workflow: DiscoverWorkflowOutput;
};

const linkButtonClassName = css({ padding: '75', _before: { display: 'none' } });

export const LocalStudioSidebarToggleButton: FC<LocalStudioSidebarToggleButtonProps> = ({ workflow }) => {
  const { workflowId, name, steps } = workflow;

  return (
    <NavMenuToggleButton label={name || workflowId} icon={null} link={getStudioWorkflowLink(workflowId)}>
      <NavMenuLinkButton
        label={'Trigger'}
        link={getStudioWorkflowTestLink(workflowId)}
        icon={<IconBolt size="20" />}
        className={linkButtonClassName}
      />
      {steps.map(({ stepId, type }) => {
        const Icon = WORKFLOW_NODE_STEP_ICON_DICTIONARY[type];

        return (
          <NavMenuLinkButton
            key={`${workflowId}-${stepId}`}
            label={stepId}
            link={getStudioWorkflowStepLink(workflowId, stepId)}
            icon={<Icon size="20" title="studio-workflow-step-icon" />}
            className={linkButtonClassName}
          />
        );
      })}
    </NavMenuToggleButton>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { css } from '@novu/novui/css';
import { IconBolt } from '@novu/novui/icons';
import { FC } from 'react';
import type { DiscoverWorkflowOutput } from '@novu/framework/internal';
import { WORKFLOW_NODE_STEP_ICON_DICTIONARY } from '../../../../studio/components/workflows/node-view/WorkflowNodes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/LocalStudioSidebar/SidebarFooter.tsx
Tamaño: 816 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { CorePropsWithChildren } from '@novu/novui';
import { css, cx } from '@novu/novui/css';
import { Box, Stack } from '@novu/novui/jsx';
import { FC } from 'react';
import { NavMenuFooter } from '../../../nav/NavMenuFooter';

export type SidebarFooterProps = CorePropsWithChildren;

export const SidebarFooter: FC<SidebarFooterProps> = ({ children, className }) => {
  return (
    <NavMenuFooter className={cx(css({ position: 'sticky', bottom: '0' }), className)}>
      {/* blur effect above button */}
      <Box
        h="75"
        width="full"
        bgGradient={'to-b'}
        gradientFrom={'surface.panel/00'}
        gradientTo={'surface.panel/100'}
        gradientToPosition={'80%'}
      />
      <Stack bg="surface.panel" gap="0">
        {children}
      </Stack>
    </NavMenuFooter>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { CorePropsWithChildren } from '@novu/novui';
import { css, cx } from '@novu/novui/css';
import { Box, Stack } from '@novu/novui/jsx';
import { FC } from 'react';
import { NavMenuFooter } from '../../../nav/NavMenuFooter';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/LocalStudioSidebar/index.ts
Tamaño: 38 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './LocalStudioSidebar';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/v2/BridgeMenuItems.tsx
Tamaño: 539 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useStudioState } from '../../../../studio/StudioStateProvider';
import { When } from '../../../utils/When';
import { BridgeUpdateModalTrigger } from './BridgeUpdateModalTrigger';
import { SyncInfoModalTrigger } from './SyncInfoModalTrigger';

export function BridgeMenuItems() {
  const { isLocalStudio } = useStudioState();

  return (
    <>
      <When truthy={!isLocalStudio}>
        <BridgeUpdateModalTrigger />
      </When>
      <When truthy={isLocalStudio}>
        <SyncInfoModalTrigger />
      </When>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useStudioState } from '../../../../studio/StudioStateProvider';
import { When } from '../../../utils/When';
import { BridgeUpdateModalTrigger } from './BridgeUpdateModalTrigger';
import { SyncInfoModalTrigger } from './SyncInfoModalTrigger';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/v2/BridgeUpdateModal.tsx
Tamaño: 4758 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Modal, successMessage } from '@novu/design-system';
import { css } from '@novu/novui/css';
import { text } from '@novu/novui/recipes';
import { Button, Input, Title } from '@novu/novui';
import { IconOutlineMenuBook } from '@novu/novui/icons';
import { HStack, Box, styled } from '@novu/novui/jsx';
import { FC, useEffect, useState } from 'react';
import { validateBridgeUrl } from '../../../../api/bridge';
import { updateBridgeUrl } from '../../../../api';
import { useEnvironment } from '../../../../hooks';
import { validateURL } from '../../../../utils';
import { useStudioState } from '../../../../studio/StudioStateProvider';
import { buildBridgeHTTPClient } from '../../../../bridgeApi/bridgeApi.client';
import { useTelemetry } from '../../../../hooks/useNovuAPI';
import { useDocsModal } from '../../../docs/useDocsModal';
import { PATHS } from '../../../docs/docs.const';

export type BridgeUpdateModalProps = {
  isOpen: boolean;
  toggleOpen: () => void;
};
const LinkText = styled('a', text);

export const BridgeUpdateModal: FC<BridgeUpdateModalProps> = ({ isOpen, toggleOpen }) => {
  const track = useTelemetry();
  const { isLocalStudio, bridgeURL, setBridgeURL } = useStudioState();
  const [urlError, setUrlError] = useState<string>('');
  const [url, setUrl] = useState(bridgeURL);
  const [isUpdating, setIsUpdating] = useState(false);
  const { Component, toggle, setPath } = useDocsModal();

  const { environment, isLoaded: isEnvironmentLoaded } = useEnvironment();

  useEffect(() => {
    setUrl(bridgeURL);
  }, [bridgeURL]);

  const onBridgeUrlChange = (event) => {
    event.preventDefault();
    setUrlError('');
    setUrl(event.target.value);
  };

  const validateFromLocal = async (bridgeUrl: string): Promise<{ isValid: boolean }> => {
    try {
      const client = buildBridgeHTTPClient(bridgeUrl);
      const response = await client.healthCheck();

      const result = { isValid: response.status === 'ok' };

      return result;
    } catch {
      /* empty */
    }

    return { isValid: false };
  };
  const localDomains = ['localhost', '127.0.0.1'];
  const isLocalAddress = () => {
    const parsedUrl = new URL(url);

    return localDomains.includes(parsedUrl.hostname);
  };

  const onUpdateClick = async () => {
    setUrlError('');
    setIsUpdating(true);
    try {
      if (url) {
        validateURL(url);

        let result =
          isLocalStudio && isLocalAddress()
            ? await validateFromLocal(url)
            : await validateBridgeUrl({ bridgeUrl: url });

        if (!result.isValid && isLocalStudio) {
          result = await validateBridgeUrl({ bridgeUrl: url });
        }
        if (!result.isValid) {
          throw new Error(result.error);
        }
      }

      await storeInProperLocation(url);
      track('Update endpoint clicked - [Bridge Modal]');
      successMessage('You have successfully updated your Novu Endpoint configuration');
      toggleOpen();
    } catch (error) {
      const err = error as Error;
      setUrlError(err.message || 'Unknown error');
    }

    setIsUpdating(false);
  };

  const storeInProperLocation = async (newUrl: string) => {
    setBridgeURL(newUrl);
    if (!isLocalStudio) {
      await updateBridgeUrl({ url: newUrl }, environment?._id ?? '');
    }
  };

  const isLoading = !isEnvironmentLoaded || isUpdating;

  return (
    <>
      <Modal opened={isOpen} title={<Title variant="section">Update Novu Endpoint URL</Title>} onClose={toggleOpen}>
        <Box colorPalette={'mode.local'}>
          <Input
            label={'Novu Endpoint URL'}
            description={
              'This url should be a full URL to the Novu Endpoint including the /api/novu path, e.g. https://your.api.com/api/novu'
            }
            onChange={onBridgeUrlChange}
            value={url}
            disabled={isLoading}
            variant="preventLayoutShift"
            error={urlError}
            className={css({ marginBottom: '16px' })}
          />
          <HStack justify={'space-between'}>
            <div>
              <HStack gap="50" className={css({ color: 'typography.text.secondary' })}>
                <IconOutlineMenuBook />
                <LinkText
                  onClick={(e) => {
                    e.preventDefault();
                    setPath(PATHS.CONCEPT_ENDPOINT);
                    toggle();
                  }}
                  href=""
                >
                  Learn more in our docs
                </LinkText>
              </HStack>
            </div>
            <Button size={'md'} loading={isLoading} onClick={onUpdateClick}>
              Update
            </Button>
          </HStack>
        </Box>
      </Modal>
      <Component />
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Modal, successMessage } from '@novu/design-system';
import { css } from '@novu/novui/css';
import { text } from '@novu/novui/recipes';
import { Button, Input, Title } from '@novu/novui';
import { IconOutlineMenuBook } from '@novu/novui/icons';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/v2/BridgeUpdateModalTrigger.tsx
Tamaño: 2470 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FC, useState } from 'react';
import { Tooltip } from '@novu/design-system';
import { Text, Button } from '@novu/novui';
import { css } from '@novu/novui/css';
import { IconEdit, IconLink, IconLinkOff } from '@novu/novui/icons';
import { HStack } from '@novu/novui/jsx';
import { useHover } from '../../../../hooks/useHover';
import { BridgeUpdateModal } from './BridgeUpdateModal';
import { ConnectionStatusIndicator } from './ConnectionStatusIndicator';
import { useBridgeConnectionStatus } from '../../../../studio/hooks';

export const BridgeUpdateModalTrigger: FC = () => {
  const [showBridgeUpdateModal, setShowBridgeUpdateModal] = useState<boolean>(false);

  const toggleBridgeUpdateModalShow = () => {
    setShowBridgeUpdateModal((previous) => !previous);
  };

  return (
    <>
      <BridgeUpdateModalTriggerControl onClick={toggleBridgeUpdateModalShow} />
      <BridgeUpdateModal isOpen={showBridgeUpdateModal} toggleOpen={toggleBridgeUpdateModalShow} />
    </>
  );
};

// TODO: agree on token for max tooltip width
const tooltipTextClassName = css({ textWrap: 'wrap', wordBreak: 'break-all', maxWidth: '[27rem]' });

function BridgeUpdateModalTriggerControl({ onClick }: { onClick: () => void }) {
  const { isHovered, ...hoverProps } = useHover();
  const { status, bridgeURL } = useBridgeConnectionStatus();

  const trigger = isHovered ? (
    <Button {...hoverProps} variant="outline" size="xs" Icon={IconEdit} onClick={onClick}>
      Edit endpoint
    </Button>
  ) : (
    <ConnectionStatusIndicator status={status} {...hoverProps} onClick={onClick} />
  );

  switch (status) {
    case 'loading':
      return <Tooltip label="Trying to connect to Bridge URL">{trigger}</Tooltip>;
    case 'connected':
      return (
        <Tooltip
          label={
            <HStack>
              <IconLink />
              <Text className={tooltipTextClassName}>{`Connected to ${bridgeURL}`}</Text>
            </HStack>
          }
        >
          {trigger}
        </Tooltip>
      );
    case 'disconnected':
    default:
      return (
        <Tooltip
          classNames={{ tooltip: css({}) }}
          label={
            <HStack>
              <IconLinkOff />
              <Text className={tooltipTextClassName}>
                {bridgeURL ? `Unable to connect to ${bridgeURL}` : `No Bridge URL configured`}
              </Text>
            </HStack>
          }
        >
          {trigger}
        </Tooltip>
      );
  }
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FC, useState } from 'react';
import { Tooltip } from '@novu/design-system';
import { Text, Button } from '@novu/novui';
import { css } from '@novu/novui/css';
import { IconEdit, IconLink, IconLinkOff } from '@novu/novui/icons';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/v2/ConnectionStatusIndicator.tsx
Tamaño: 1830 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { LocalizedMessage, Text } from '@novu/novui';
import { cva, cx, type RecipeVariant } from '@novu/novui/css';
import { hstack } from '@novu/novui/patterns';
import { SystemStyleObject } from '@novu/novui/types';
import { type ForwardedRef, forwardRef } from 'react';
import { ConnectionStatus } from '../../../../studio/types';

const CONNECTION_STATUS_LABEL_LOOKUP: Record<ConnectionStatus, LocalizedMessage> = {
  connected: 'Connected',
  disconnected: 'Disconnected',
  loading: 'Loading...',
};

const statusRecipe = cva<{
  status: Record<ConnectionStatus, SystemStyleObject>;
}>({
  base: {
    width: '50',
    height: '50',
    outline: '[4px solid]',
    borderRadius: 'circle',
  },
  variants: {
    status: {
      connected: {
        bg: 'typography.text.feedback.success',
        // this 'color/number' syntax uses color-mix to achieve a 20% opacity
        outlineColor: 'typography.text.feedback.success/20',
      },
      disconnected: {
        bg: 'typography.text.feedback.alert',
        outlineColor: 'typography.text.feedback.alert/20',
      },
      loading: {
        bg: 'typography.text.feedback.info',
        outlineColor: 'typography.text.feedback.info/20',
      },
    },
  },
});

export type ConnectionStatusIndicatorProps = RecipeVariant<typeof statusRecipe> &
  React.ButtonHTMLAttributes<HTMLButtonElement>;

export const ConnectionStatusIndicator = forwardRef(
  ({ status, className, ...buttonProps }: ConnectionStatusIndicatorProps, ref: ForwardedRef<HTMLButtonElement>) => {
    return (
      <button {...buttonProps} className={cx(hstack({ gap: '50', cursor: 'pointer' }), className)} ref={ref}>
        <div className={statusRecipe({ status })} />
        <Text color="typography.text.secondary">{CONNECTION_STATUS_LABEL_LOOKUP[status]}</Text>
      </button>
    );
  }
);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { LocalizedMessage, Text } from '@novu/novui';
import { cva, cx, type RecipeVariant } from '@novu/novui/css';
import { hstack } from '@novu/novui/patterns';
import { SystemStyleObject } from '@novu/novui/types';
import { type ForwardedRef, forwardRef } from 'react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/v2/HeaderMenuItems.tsx
Tamaño: 2444 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ActionIcon, Avatar } from '@mantine/core';
import { colors, Dropdown, IconLogout, IconOutlineGroupAdd, IconSettings, Text, When } from '@novu/design-system';
import { Link } from 'react-router-dom';
import { CONTEXT_PATH, IS_SELF_HOSTED, REACT_APP_VERSION } from '../../../../config';
import { ROUTES } from '../../../../constants/routes';
import { useAuth } from '../../../../hooks/useAuth';
import { useIsDarkTheme } from '../../../../hooks';
import { ProfileMenuItem } from './ProfileMenuItem';

const FALLBACK_AVATAR = `${CONTEXT_PATH}/static/images/avatar.webp`;

const menuItems = [
  {
    title: 'Settings',
    icon: <IconSettings color="inherit" />,
    path: ROUTES.SETTINGS,
  },
  {
    title: 'Invite members',
    icon: <IconOutlineGroupAdd color="inherit" />,
    path: ROUTES.TEAM,
  },
];

export function HeaderMenuItems() {
  const { currentOrganization, currentUser, logout } = useAuth();

  const isDark = useIsDarkTheme();
  const iconColor = isDark ? colors.white : colors.B40;

  if (!currentUser || !currentOrganization) {
    return null;
  }

  const profileMenuItems = [
    <Dropdown.Item disabled key="user">
      <ProfileMenuItem currentOrganization={currentOrganization} currentUser={currentUser} />
    </Dropdown.Item>,
    ...menuItems.map(({ title, icon, path }) => (
      <Link to={path} key={`link-${title}`}>
        <Dropdown.Item key={`item-${title}`} icon={icon} component="div">
          {title}
        </Dropdown.Item>
      </Link>
    )),
    <Dropdown.Item key="logout" icon={<IconLogout color={iconColor} />} onClick={logout} data-test-id="logout-button">
      Log out
    </Dropdown.Item>,
  ];

  return (
    <Dropdown
      position="bottom-end"
      styles={{
        dropdown: { minWidth: 220, padding: '0.25rem' },
        item: { paddingInline: '0.75rem', paddingBlock: '0.625rem' },
        itemIcon: {
          marginRight: '0.75rem',
        },
      }}
      control={
        <ActionIcon variant="transparent">
          <Avatar
            size={24}
            radius="sm"
            data-test-id="header-profile-avatar"
            src={currentUser?.profilePicture || FALLBACK_AVATAR}
          />
        </ActionIcon>
      }
    >
      {profileMenuItems}
      <When truthy={IS_SELF_HOSTED}>
        <Dropdown.Item disabled>
          <Text color={colors.B40}>Version: {REACT_APP_VERSION}</Text>
        </Dropdown.Item>
      </When>
    </Dropdown>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ActionIcon, Avatar } from '@mantine/core';
import { colors, Dropdown, IconLogout, IconOutlineGroupAdd, IconSettings, Text, When } from '@novu/design-system';
import { Link } from 'react-router-dom';
import { CONTEXT_PATH, IS_SELF_HOSTED, REACT_APP_VERSION } from '../../../../config';
import { ROUTES } from '../../../../constants/routes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/v2/HeaderNav.tsx
Tamaño: 6465 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { ActionIcon, Header } from '@mantine/core';
import {
  IconHelpOutline,
  IconOutlineChat,
  IconOutlineLibraryBooks,
  IconOutlineGroup,
  IconOutlineMail,
} from '@novu/novui/icons';
import { Tooltip, Dropdown } from '@novu/design-system';
import { css } from '@novu/novui/css';
import { HStack } from '@novu/novui/jsx';
import { captureException } from '@sentry/react';
import { IS_EE_AUTH_ENABLED, IS_NOVU_PROD_STAGING } from '../../../../config';
import { useBootIntercom } from '../../../../hooks';
import useThemeChange from '../../../../hooks/useThemeChange';
import { discordInviteUrl } from '../../../../pages/quick-start/consts';
import { useAuth } from '../../../../hooks/useAuth';
import { HEADER_NAV_HEIGHT } from '../../constants';
import { NotificationCenterWidget } from '../NotificationCenterWidget';
import { HeaderMenuItems } from './HeaderMenuItems';
import { UserProfileButton } from '../../../../ee/clerk';
import { BridgeMenuItems } from './BridgeMenuItems';
import { WorkflowHeaderBackButton } from './WorkflowHeaderBackButton';
import { SupportModal } from '../SupportModal';

export function HeaderNav() {
  const { currentUser, currentOrganization } = useAuth();
  const [isSupportModalOpened, setIsSupportModalOpened] = useState(false);

  useBootIntercom();
  // variable to check if it's the first render for. Needed for Plain live chat initialization
  const [isFirstRender, setIsFirstRender] = useState(true);
  const isLiveChatVisible =
    process.env.REACT_APP_PLAIN_SUPPORT_CHAT_APP_ID &&
    IS_NOVU_PROD_STAGING &&
    currentOrganization?.apiServiceLevel !== 'free' &&
    currentUser?.servicesHashes?.plain;

  const { Icon, themeLabel, toggleColorScheme } = useThemeChange();

  const toggleSupportModalShow = () => {
    setIsSupportModalOpened((previous) => !previous);
  };

  useEffect(() => {
    if (isLiveChatVisible && isFirstRender) {
      try {
        // @ts-expect-error - TODO: fix this
        window?.Plain?.init({
          appId: process.env.REACT_APP_PLAIN_SUPPORT_CHAT_APP_ID,
          hideLauncher: true,
          hideBranding: true,
          title: 'Chat with us',
          links: [
            {
              icon: 'pencil',
              text: 'Roadmap',
              url: 'https://roadmap.novu.co/roadmap?utm_campaign=in_app_live_chat',
            },
            {
              icon: 'support',
              text: 'Contact Sales',
              url: 'https://cal.com/team/novu/intro?utm_campaign=in_app_live_chat',
            },
          ],
          entryPoint: 'default',
          theme: 'light',
          logo: {
            url: 'https://dashboard-v0.novu.co/static/images/novu.png',
            alt: 'Novu Logo',
          },
          customerDetails: {
            fullName: `${currentUser.firstName} ${currentUser.lastName}`,
            email: currentUser?.email,
            emailHash: currentUser?.servicesHashes?.plain,
            externalId: currentUser?._id,
          },
        });
      } catch (error) {
        console.error('Error initializing plain chat: ', error);
        captureException(error);
      }
    }

    setIsFirstRender(false);
  }, [isLiveChatVisible, currentUser, isFirstRender]);

  const showLiveChat = () => {
    if (isLiveChatVisible) {
      try {
        // @ts-expect-error - TODO: fix this
        window?.Plain?.open();
      } catch (error) {
        console.error('Error opening plain chat: ', error);
        captureException(error);
      }
    }
  };

  return (
    <Header
      height={`${HEADER_NAV_HEIGHT}px`}
      className={css({
        position: 'sticky',
        top: 0,
        borderBottom: 'none !important',
        zIndex: '200 !important',
        padding: '50',
      })}
    >
      {/* TODO: Change position: right to space-between for breadcrumbs */}
      <HStack justifyContent="space-between" width="full" display="flex">
        <HStack gap="100">
          <WorkflowHeaderBackButton />
        </HStack>
        <HStack flexWrap={'nowrap'} justifyContent="flex-end" gap={'100'}>
          {<BridgeMenuItems />}
          <ActionIcon variant="transparent" onClick={() => toggleColorScheme()}>
            <Tooltip label={themeLabel}>
              <div>
                <Icon title="color-scheme-preference-icon" />
              </div>
            </Tooltip>
          </ActionIcon>

          {/* Ugly fallback to satisfy the restrictive typings of the NotificationCenterWidget */}

          {IS_NOVU_PROD_STAGING ? (
            <Dropdown
              control={
                <ActionIcon variant="transparent">
                  <IconHelpOutline />
                </ActionIcon>
              }
            >
              <Dropdown.Item>
                <a href={discordInviteUrl} target="_blank" rel="noopener noreferrer">
                  <HStack>
                    <IconOutlineGroup /> Join us on Discord
                  </HStack>
                </a>
              </Dropdown.Item>
              <Dropdown.Item>
                <a href={'https://docs.novu.co'} target="_blank" rel="noopener noreferrer">
                  <HStack>
                    <IconOutlineLibraryBooks /> Documentation
                  </HStack>
                </a>
              </Dropdown.Item>
              <Dropdown.Item
                onClick={() => {
                  toggleSupportModalShow();
                }}
              >
                <HStack>
                  <IconOutlineMail /> Contact Us
                </HStack>
              </Dropdown.Item>
              {isLiveChatVisible && (
                <Dropdown.Item
                  onClick={() => {
                    showLiveChat();
                  }}
                >
                  <HStack>
                    <IconOutlineChat /> Live Chat
                  </HStack>
                </Dropdown.Item>
              )}
            </Dropdown>
          ) : (
            <a href={discordInviteUrl} target="_blank" rel="noopener noreferrer">
              <ActionIcon variant="transparent">
                <IconHelpOutline />
              </ActionIcon>
            </a>
          )}
          <NotificationCenterWidget user={currentUser || undefined} />
          {IS_EE_AUTH_ENABLED ? <UserProfileButton /> : <HeaderMenuItems />}
        </HStack>
      </HStack>
      <SupportModal isOpen={isSupportModalOpened} toggleOpen={toggleSupportModalShow} />
    </Header>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect, useState } from 'react';
import { ActionIcon, Header } from '@mantine/core';
import {
IconHelpOutline,
IconOutlineChat,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/v2/NewDashboardOptInWidget.tsx
Tamaño: 2760 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Card } from '@mantine/core';
import { css } from '@novu/novui/css';
import { Text, Title, Button, IconButton } from '@novu/novui';
import { IconOutlineClose } from '@novu/novui/icons';
import { FeatureFlagsKeysEnum } from '@novu/shared';
import { useEffect } from 'react';
import { IS_SELF_HOSTED } from '../../../../config';
import { useFeatureFlag } from '../../../../hooks';
import { useNewDashboardOptIn } from '../../../../hooks/useNewDashboardOptIn';
import { useSegment } from '../../../providers/SegmentProvider';

export function NewDashboardOptInWidget() {
  const { dismiss, optIn, status } = useNewDashboardOptIn();
  const segment = useSegment();

  const showWidget = !status && !IS_SELF_HOSTED;

  useEffect(() => {
    if (showWidget) {
      segment.track('New dashboard opt-in displayed - [WEB]');
    }
  }, [showWidget, segment]);

  if (!showWidget) {
    return null;
  }

  return (
    <Card shadow="sm" className={styles.card}>
      <div className={styles.content}>
        <div className={styles.header}>
          <Title className={styles.title}>
            <span style={{ marginRight: '4px' }}>🎉</span> You're invited!
          </Title>
          <IconButton onClick={dismiss} Icon={IconOutlineClose} size="xs" />
        </div>
        <Text className={styles.text}>
          We’d love to extend you the access for the new workflows dashboard that we’re building.
        </Text>
      </div>
      <div className={styles.buttonContainer}>
        <Button size="sm" variant="transparent" onClick={optIn}>
          Take me there
        </Button>
      </div>
    </Card>
  );
}

const styles = {
  card: css({
    padding: '9px 16px !important',
    marginBottom: '16px',
    backgroundColor: 'surface.popover !important',
    borderTopLeftRadius: '100 !important',
    borderBottomLeftRadius: '100 !important',
    _before: {
      content: '""',
      position: 'absolute',
      width: '50',
      top: '0',
      right: '0',
      bottom: '0',
      left: '0',
      borderTopLeftRadius: '100',
      borderBottomLeftRadius: '100',
      bgGradient: `to-b`,
      gradientFrom: 'colorPalette.start',
      gradientTo: 'colorPalette.end',
    },
  }),
  content: css({
    display: 'flex',
    flexDirection: 'column',
    gap: '4px',
    alignSelf: 'stretch',
  }),
  header: css({
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    gap: '8px',
  }),
  title: css({
    fontSize: '12px',
    fontWeight: '700 ',
    lineHeight: '20px',
  }),
  text: css({
    fontSize: '12px',
    lineHeight: '16px',
    fontWeight: '500',
    fontStyle: 'normal',
  }),
  buttonContainer: css({
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'flex-end',
  }),
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Card } from '@mantine/core';
import { css } from '@novu/novui/css';
import { Text, Title, Button, IconButton } from '@novu/novui';
import { IconOutlineClose } from '@novu/novui/icons';
import { FeatureFlagsKeysEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/v2/ProfileMenuItem.tsx
Tamaño: 1127 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Avatar, Group } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
import { IOrganizationEntity, IUserEntity } from '@novu/shared';
import { CONTEXT_PATH } from '../../../../config';

const FALLBACK_AVATAR = `${CONTEXT_PATH}/static/images/avatar.webp`;

type ProfileMenuItemProps = {
  currentUser: IUserEntity;
  currentOrganization: IOrganizationEntity;
};

export function ProfileMenuItem({ currentUser, currentOrganization }: ProfileMenuItemProps) {
  return (
    <Group spacing={16} noWrap>
      <Avatar radius="sm" size={40} src={currentUser.profilePicture || FALLBACK_AVATAR} />
      <div style={{ flex: 1 }}>
        <Text data-test-id="header-dropdown-username" rows={1} weight="bold" transform="capitalize">
          {currentUser.firstName as string} {currentUser.lastName as string}
        </Text>
        <Text
          size={14}
          color={colors.B60}
          rows={1}
          data-test-id="header-dropdown-organization-name"
          transform="capitalize"
        >
          {currentOrganization?.name as string}
        </Text>
      </div>
    </Group>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Avatar, Group } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
import { IOrganizationEntity, IUserEntity } from '@novu/shared';
import { CONTEXT_PATH } from '../../../../config';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/v2/SampleWorkflowsBanner.tsx
Tamaño: 1303 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import { colors, useColorScheme } from '@novu/design-system';
import { Button, Text } from '@novu/novui';
import { useNavigate } from 'react-router-dom';
import { useSegment } from '../../../providers/SegmentProvider';

export function SampleModeBanner() {
  const { colorScheme } = useColorScheme();
  const navigate = useNavigate();
  const segment = useSegment();

  return (
    <div
      style={{
        width: '100%',
        padding: 8,
        backgroundColor: colorScheme === 'dark' ? '#13131A' : 'rgb(230 231 255)',
        textAlign: 'center',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        position: 'relative',
      }}
    >
      <Group spacing={24}>
        <Group spacing={8}>
          <Text color={colors.black}>
            You are currently viewing demo workflows. Add your own by completing the setup.
          </Text>
        </Group>
        <Group spacing={20}>
          <Button
            onClick={() => {
              segment.track('Sample Mode Banner Click');
              navigate('/get-started');
            }}
            size="sm"
            variant="transparent"
          >
            Complete Setup
          </Button>
        </Group>
      </Group>
    </div>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import { colors, useColorScheme } from '@novu/design-system';
import { Button, Text } from '@novu/novui';
import { useNavigate } from 'react-router-dom';
import { useSegment } from '../../../providers/SegmentProvider';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/v2/SyncInfoModal.tsx
Tamaño: 5484 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FC, useState } from 'react';
import { QueryObserverResult } from '@tanstack/react-query';
import { showNotification } from '@mantine/notifications';
// TODO: replace with Novui Code Block when available
import { Prism } from '@mantine/prism';

// TODO: replace with Novui Modal when available
import { Modal } from '@novu/design-system';
import { Button, Input, Tabs, Text, Title } from '@novu/novui';
import { css } from '@novu/novui/css';

import { useBridgeURL } from '../../../../studio/hooks/useBridgeURL';
import { API_ROOT, ENV } from '../../../../config';
import { useStudioState } from '../../../../studio/StudioStateProvider';
import { buildApiHttpClient } from '../../../../api';

export type SyncInfoModalProps = {
  isOpen: boolean;
  toggleOpen: () => void;
  refetchOriginWorkflows: () => Promise<QueryObserverResult<any, unknown>>;
};

const BRIDGE_ENDPOINT_PLACEHOLDER = '<YOUR_DEPLOYED_BRIDGE_URL>';

export const SyncInfoModal: FC<SyncInfoModalProps> = ({ isOpen, toggleOpen, refetchOriginWorkflows }) => {
  const { devSecretKey } = useStudioState();
  const [manualUrl, setTunnelManualURl] = useState('');

  const bridgeUrl = useBridgeURL(true);
  const [loadingSync, setLoadingSync] = useState(false);

  async function handleLocalSync() {
    if (!manualUrl) {
      showNotification({
        color: 'red',
        message: 'Please specify a deployed application URL',
      });

      return;
    }

    const api = buildApiHttpClient({
      secretKey: devSecretKey,
    });

    try {
      setLoadingSync(true);
      await api.syncBridge(manualUrl);

      refetchOriginWorkflows();

      toggleOpen();

      showNotification({
        color: 'green',
        message: (
          <>
            Successfully synced. Visit the{' '}
            <a
              href={`${process.env.PUBLIC_URL}/workflows`}
              target="_blank"
              className={css({ textDecoration: 'underline' })}
            >
              Dashboard
            </a>{' '}
            to see your workflows.
          </>
        ),
      });
    } catch (error: any) {
      showNotification({
        color: 'red',
        message: `Error occurred while syncing. ${error?.response?.data?.message || error?.message}`,
      });
    } finally {
      setLoadingSync(false);
    }
  }

  const bridgeUrlToDisplay = BRIDGE_ENDPOINT_PLACEHOLDER;

  const tabs = [
    {
      value: 'manual',
      label: 'Manual',
      content: (
        <>
          <Text color="typography.text.secondary" className={css({ marginBottom: 30 })}>
            For your changes to be visible on the cloud dashboard, you need to deploy your local novu application to a
            cloud provider and perform a Sync command with the cloud endpoint url. Learn more about syncing on{' '}
            <a
              href="https://docs.novu.co/deployment/syncing"
              target={'_blank'}
              className={css({
                textDecoration: '!important underline',
              })}
            >
              our docs.
            </a>
          </Text>
          <Input
            onChange={(e) => setTunnelManualURl(e.target.value)}
            value={manualUrl}
            label={'Deployed application URL'}
            placeholder="https://your-deployed-application.com/api/novu"
          />

          {bridgeUrl === manualUrl ? (
            <Text variant={'secondary'} style={{ marginTop: 10 }}>
              This tunnel URL will use your local computer's tunnel URL to forward requests. The tunnel must be running
              to actively sync with Novu Cloud.
              <br /> <br />
              We recommend syncing to a deployed environment in your cloud with a publicly exposed endpoint.
            </Text>
          ) : null}

          <div style={{ textAlign: 'right', marginTop: 25 }}>
            <Button variant={'filled'} onClick={handleLocalSync} loading={loadingSync}>
              Manual Sync
            </Button>
          </div>
        </>
      ),
    },
    {
      value: 'cli',
      label: 'CLI',
      content: (
        <Prism withLineNumbers language="bash">
          {getOtherCodeContent({ secretKey: devSecretKey || '', bridgeUrl: bridgeUrlToDisplay })}
        </Prism>
      ),
    },
    {
      value: 'github',
      label: 'GitHub Actions',
      content: (
        <Prism withLineNumbers language="yaml">
          {getGithubYamlContent({ bridgeUrl: bridgeUrlToDisplay })}
        </Prism>
      ),
    },
  ];

  return (
    <Modal opened={isOpen} title={<Title variant="section">Sync changes</Title>} onClose={toggleOpen}>
      <Tabs tabConfigs={tabs} defaultValue={'manual'} colorPalette="mode.local" />
    </Modal>
  );
};

function getGithubYamlContent({ bridgeUrl }: { bridgeUrl: string }) {
  return `# .github/workflows/novu.yml
name: Novu Sync

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Sync State to Novu
        uses: novuhq/actions-novu-sync@v2
        with:
          secret-key: $\{{ secrets.NOVU_SECRET_KEY }}
          bridge-url: ${bridgeUrl || BRIDGE_ENDPOINT_PLACEHOLDER}`;
}

function getOtherCodeContent({ secretKey, bridgeUrl }: { secretKey: string; bridgeUrl: string }) {
  let command = `npx novu@latest sync \\
  --bridge-url ${bridgeUrl || BRIDGE_ENDPOINT_PLACEHOLDER} \\
  --secret-key ${secretKey}`;

  if (ENV !== 'production' && ENV !== 'prod') {
    command += ` \\
  --api-url ${API_ROOT}`;
  }

  return command;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FC, useState } from 'react';
import { QueryObserverResult } from '@tanstack/react-query';
import { showNotification } from '@mantine/notifications';
// TODO: replace with Novui Code Block when available
import { Prism } from '@mantine/prism';
// TODO: replace with Novui Modal when available
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/v2/SyncInfoModalTrigger.tsx
Tamaño: 2661 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { useState } from 'react';
import CryptoJS from 'crypto-js';

import { colors, Tooltip, useColorScheme } from '@novu/design-system';
import { Button, Text } from '@novu/novui';
import { css } from '@novu/novui/css';
import { IconOutlineCloudUpload } from '@novu/novui/icons';

import { useTelemetry } from '../../../../hooks/useNovuAPI';
import { SyncInfoModal } from './SyncInfoModal';
import { When } from '../../../utils/When';
import { useIsSynced } from '../../../../hooks';

export function SyncInfoModalTrigger() {
  const [showSyncInfoModal, setShowSyncInfoModal] = useState(false);
  const { isSynced, refetchOriginWorkflows } = useIsSynced();

  const track = useTelemetry();

  const toggleSyncInfoModalShow = () => {
    setShowSyncInfoModal((previous) => !previous);
    track('Workflow sync button clicked - [Studio]');
  };

  return (
    <>
      <Tooltip
        disabled={isSynced}
        width="auto"
        label={<Text>You have un-synced changes in your local application.</Text>}
        withinPortal
      >
        <div
          className={css({
            position: 'relative',
          })}
        >
          <Button size="xs" Icon={IconOutlineCloudUpload} onClick={toggleSyncInfoModalShow}>
            Sync
          </Button>
          <When truthy={!isSynced}>
            <Dot
              className={css({
                position: 'absolute',
                top: -3,
                right: -3,
                width: 12,
                height: 12,
              })}
            />
          </When>
        </div>
      </Tooltip>

      {/** TODO: use a modal manager */}
      <SyncInfoModal
        isOpen={showSyncInfoModal}
        toggleOpen={toggleSyncInfoModalShow}
        refetchOriginWorkflows={refetchOriginWorkflows}
      />
    </>
  );
}

function createHash(workflowDefine) {
  return CryptoJS.SHA256(JSON.stringify(workflowDefine || '')).toString(CryptoJS.enc.Hex);
}

export function Dot(props) {
  const { colorScheme } = useColorScheme();

  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none" {...props}>
      <rect
        x="1.5"
        y="1.5"
        width="13"
        height="13"
        rx="6.5"
        fill="url(#paint0_linear_1722_2699)"
        stroke={colorScheme === 'light' ? colors.white : colors.B15}
        strokeWidth="3"
      />
      <defs>
        <linearGradient id="paint0_linear_1722_2699" x1="8" y1="13" x2="8" y2="3" gradientUnits="userSpaceOnUse">
          <stop stopColor="#FF512F" />
          <stop offset="1" stopColor="#DD2476" />
        </linearGradient>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { useState } from 'react';
import CryptoJS from 'crypto-js';
import { colors, Tooltip, useColorScheme } from '@novu/design-system';
import { Button, Text } from '@novu/novui';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/layout/components/v2/WorkflowHeaderBackButton.tsx
Tamaño: 401 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useNavigate, useParams } from 'react-router-dom';
import { BackButton } from '../LocalStudioHeader/BackButton';

export function WorkflowHeaderBackButton() {
  const navigate = useNavigate();
  const { templateId = '' } = useParams<{ templateId: string }>();
  const shouldHideBackButton = !templateId;

  return <>{!shouldHideBackButton && <BackButton onClick={() => navigate(-1)} />}</>;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useNavigate, useParams } from 'react-router-dom';
import { BackButton } from '../LocalStudioHeader/BackButton';
export function WorkflowHeaderBackButton() {
const navigate = useNavigate();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/Aside.tsx
Tamaño: 385 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { cva } from '@novu/novui/css';
import { styled } from '@novu/novui/jsx';

export const Aside = styled(
  'aside',
  cva({
    base: {
      display: 'flex !important',
      flexDirection: 'column',
      zIndex: 'auto',
      borderRight: 'none',
      width: '[272px]',
      height: 'full',
      p: '100',
      bg: 'surface.panel',
      overflowY: 'auto',
    },
  })
);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { cva } from '@novu/novui/css';
import { styled } from '@novu/novui/jsx';
export const Aside = styled(
'aside',
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/NavMenu.tsx
Tamaño: 2210 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IconArrowBack } from '@novu/design-system';
import { FC, MouseEventHandler } from 'react';
import { css, cx } from '@novu/novui/css';
import { Flex, styled, VStack } from '@novu/novui/jsx';
import { title as titleRecipe } from '@novu/novui/recipes';
import { LocalizedMessage } from '../../types/LocalizedMessage';

const iconButtonStyles = css({
  display: 'inline-flex',
  alignItems: 'center',
  padding: 0,
  backgroundImage: 'none',
  background: 'transparent',
  height: 'inherit',
  border: 'none',
  cursor: 'pointer',
  outline: 'inherit',
  paddingInline: 0,
  paddingBlock: 0,
  '& span': {
    backgroundImage: 'none',
  },
  '& svg': {
    fill: 'typography.text.secondary',
  },
  '&:disabled svg': {
    opacity: '40%',
  },
});

const navStyles = css({
  display: 'flex !important',
  flex: '1',
  justifyContent: 'stretch',
  flexDirection: 'column',
});

const Title = styled('h2', titleRecipe);

/**
 * designate whether a menu is a root / top-level menu
 * or if it is a nested view
 */
type NavMenuVariant = 'root' | 'nested';

interface INavMenuProps {
  variant: NavMenuVariant;
  title?: LocalizedMessage;
  onBackButtonClick?: MouseEventHandler;
  className?: string;
}

export const NavMenu: FC<React.PropsWithChildren<INavMenuProps>> = ({
  variant,
  title,
  onBackButtonClick,
  children,
  className,
}) => {
  const handleBackButtonClick: MouseEventHandler = (event) => {
    onBackButtonClick?.(event);
  };

  return (
    <nav className={cx(navStyles, className)}>
      <Flex flexDirection={'column'} h="100%">
        {(title || variant === 'nested') && (
          <Flex gap={'100'} h={'200'} w="100%" my={'75'} alignItems={'center'}>
            {variant === 'nested' && (
              // TODO: this should be a Design System component for IconButton
              <button className={iconButtonStyles}>
                <IconArrowBack size="24" onClick={handleBackButtonClick} />
              </button>
            )}
            {title && (
              <Title variant={'section'} color="typography.text.secondary">
                {title}
              </Title>
            )}
          </Flex>
        )}
        {children}
      </Flex>
    </nav>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IconArrowBack } from '@novu/design-system';
import { FC, MouseEventHandler } from 'react';
import { css, cx } from '@novu/novui/css';
import { Flex, styled, VStack } from '@novu/novui/jsx';
import { title as titleRecipe } from '@novu/novui/recipes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/NavMenuFooter.tsx
Tamaño: 597 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { PropsWithChildren } from 'react';
import { css, cx } from '@novu/novui/css';

export interface INavMenuFooterProps {
  className?: string;
  testId?: string;
}

export const NavMenuFooter: React.FC<PropsWithChildren<INavMenuFooterProps>> = ({ children, className, testId }) => {
  return (
    <footer
      className={cx(
        css({
          textStyle: 'text.secondary',
          color: 'typography.text.secondary',
          marginTop: 'auto',
          width: '100%',
        }),
        className
      )}
      data-test-id={testId}
    >
      {children}
    </footer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { PropsWithChildren } from 'react';
import { css, cx } from '@novu/novui/css';
export interface INavMenuFooterProps {
className?: string;
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/NavMenuSection.tsx
Tamaño: 725 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FC } from 'react';
import { styled, Stack } from '@novu/novui/jsx';
import { text } from '@novu/novui/recipes';
import { css } from '@novu/novui/css';
import { LocalizedMessage } from '../../types/LocalizedMessage';

interface INavMenuSectionProps {
  title?: LocalizedMessage;
}

const Title = styled('h4', text);

export const NavMenuSection: FC<React.PropsWithChildren<INavMenuSectionProps>> = ({ title, children }) => {
  return (
    <section className={css({ w: '100%' })}>
      {title && (
        <Title py="75" pl="125" variant="strong" color="typography.text.tertiary" textTransform="capitalize">
          {title}
        </Title>
      )}
      <Stack gap="25">{children}</Stack>
    </section>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FC } from 'react';
import { styled, Stack } from '@novu/novui/jsx';
import { text } from '@novu/novui/recipes';
import { css } from '@novu/novui/css';
import { LocalizedMessage } from '../../types/LocalizedMessage';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/NavSelect.styles.ts
Tamaño: 798 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { css } from '@novu/novui/css';

// TODO: these are ugly, but necessary for overriding Mantine + our design-system overrides
export const navSelectStyles = css({
  fontWeight: 'strong !important',
  marginLeft: '75 !important',

  '& input': { bg: 'transparent', border: 'none !important', pl: '250 !important' },
  '& .mantine-Select-icon': { width: 'inherit !important' },
  '& .mantine-Select-dropdown': { top: '50px !important' },
});

export const tooltipStyles = css({
  p: '100 !important',
  bg: 'surface.popover !important',
  color: 'typography.text.secondary !important',
  zIndex: 'tooltip !important',
});

export const arrowStyles = css({
  w: '100 !important',
  h: '100 !important',
  left: '-50 !important',
  top: '18px !important',
  bg: 'surface.popover !important',
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/nav/RootNavMenu.tsx
Tamaño: 5587 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import {
  // cspell:disable-next-line
  IconAutorenew,
  IconCellTower,
  IconDomain,
  IconGroup,
  IconKey,
  IconLaptop,
  IconOutlineMonitorHeart,
  IconRoute,
  IconSettings,
  IconTranslate,
  IconViewQuilt,
  IconWebhook,
} from '@novu/novui/icons';
import { FeatureFlagsKeysEnum } from '@novu/shared';
import { useToggle } from '@mantine/hooks';
import { ChangesCountBadge } from '../layout/components/ChangesCountBadge';
import { ROUTES } from '../../constants/routes';
import { useEnvironment } from '../../hooks/useEnvironment';
import { BaseEnvironmentEnum } from '../../constants/BaseEnvironmentEnum';
import { EnvironmentSelect } from './EnvironmentSelect';
import { NavMenu } from './NavMenu';
import { NavMenuLinkButton } from './NavMenuButton/NavMenuLinkButton';
import { NavMenuSection } from './NavMenuSection';
import { OrganizationSelect } from './OrganizationSelect/OrganizationSelect';
import { FreeTrialSidebarWidget } from '../layout/components/FreeTrialSidebarWidget';
import { parseUrl } from '../../utils/routeUtils';
import { OrganizationSwitcher } from '../../ee/clerk';
import { IS_SELF_HOSTED, IS_EE_AUTH_ENABLED } from '../../config/index';
import { useFeatureFlag } from '../../hooks/useFeatureFlag';
import { When } from '../utils/When';
import { SidebarFooter } from '../layout/components/LocalStudioSidebar/SidebarFooter';
import { useNavigateToLocalStudio } from '../../studio/hooks/useNavigateToLocalStudio';
import { OpenLocalStudioModal } from '../../studio/components/OpenLocalStudioModal';
import { OutlineButton } from '../../studio/components/OutlineButton';
import { NewDashboardOptInWidget } from '../layout/components/v2/NewDashboardOptInWidget';

const getEnvPageRoute = (route: ROUTES, env: BaseEnvironmentEnum) => parseUrl(route, { env });

export const RootNavMenu: React.FC = () => {
  const { readonly: isEnvReadonly, environment } = useEnvironment();
  const isV2Enabled = useFeatureFlag(FeatureFlagsKeysEnum.IS_V2_ENABLED);
  const [isLocalStudioModalOpen, toggleLocalStudioModalOpen] = useToggle();
  const { navigateToLocalStudio } = useNavigateToLocalStudio({ fallbackFn: toggleLocalStudioModalOpen });

  return (
    <NavMenu variant="root">
      <NavMenuSection>
        {IS_EE_AUTH_ENABLED ? <OrganizationSwitcher /> : <OrganizationSelect />}
        <NavMenuLinkButton
          icon={<IconCellTower />}
          link={ROUTES.INTEGRATIONS}
          label="Integrations"
          testId="side-nav-integrations-link"
        />
        {IS_EE_AUTH_ENABLED ? null : (
          <NavMenuLinkButton
            label="Settings"
            icon={<IconSettings />}
            link={ROUTES.PROFILE}
            testId="side-nav-settings-link"
          />
        )}
      </NavMenuSection>
      <NavMenuSection>
        <EnvironmentSelect />
        <NavMenuLinkButton
          label="Workflows"
          icon={<IconRoute />}
          link={ROUTES.WORKFLOWS}
          testId="side-nav-templates-link"
        />
        <NavMenuLinkButton
          icon={<IconOutlineMonitorHeart />}
          link={ROUTES.ACTIVITIES}
          label="Activity Feed"
          testId="side-nav-activities-link"
        />
        <When truthy={!isV2Enabled}>
          <NavMenuLinkButton
            label="Change history"
            icon={<IconAutorenew />}
            link={ROUTES.CHANGES}
            testId={'side-nav-changes-link'}
            rightSide={{ node: <ChangesCountBadge /> }}
            isVisible={!isEnvReadonly}
          />
        </When>
        <NavMenuLinkButton
          label="Subscribers"
          icon={<IconGroup />}
          link={ROUTES.SUBSCRIBERS}
          testId="side-nav-subscribers-link"
        />
        <When truthy={!isV2Enabled}>
          <NavMenuLinkButton
            label="Tenants"
            isVisible={true}
            icon={<IconDomain />}
            link={ROUTES.TENANTS}
            testId="side-nav-tenants-link"
          />
          <NavMenuLinkButton
            label="Layouts"
            icon={<IconViewQuilt />}
            link={ROUTES.LAYOUT}
            testId="side-nav-layouts-link"
          />
          <NavMenuLinkButton
            label="Translations"
            isVisible={true}
            icon={<IconTranslate width={20} height={20} />}
            link={ROUTES.TRANSLATIONS}
            testId="side-nav-translations-link"
          />
        </When>
        <NavMenuLinkButton
          label="API keys"
          isVisible
          icon={<IconKey />}
          link={ROUTES.API_KEYS}
          testId="side-nav-settings-api-keys"
        ></NavMenuLinkButton>
        <When truthy={!isV2Enabled}>
          <NavMenuLinkButton
            label="Inbound webhook"
            isVisible
            icon={<IconWebhook />}
            link={getEnvPageRoute(
              ROUTES.WEBHOOK,
              (environment?.name as BaseEnvironmentEnum) ?? BaseEnvironmentEnum.DEVELOPMENT
            )}
            testId="side-nav-settings-inbound-webhook"
          ></NavMenuLinkButton>
        </When>
      </NavMenuSection>
      <>
        <SidebarFooter>
          {!IS_SELF_HOSTED && IS_EE_AUTH_ENABLED && <NewDashboardOptInWidget />}
          <FreeTrialSidebarWidget />
          <OutlineButton fullWidth onClick={navigateToLocalStudio} Icon={IconLaptop}>
            Open Local Studio
          </OutlineButton>
        </SidebarFooter>
        {/** TODO: refactor when modal manager is available */}
        {isLocalStudioModalOpen && <OpenLocalStudioModal isOpen toggleOpen={toggleLocalStudioModalOpen} />}
      </>
    </NavMenu>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import {
// cspell:disable-next-line
IconAutorenew,
IconCellTower,
IconDomain,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/RootNavMenuFooter.tsx
Tamaño: 1205 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';
import { css, cx } from '@novu/novui/css';
import { hstack } from '@novu/novui/patterns';
import { NavMenuFooter } from './NavMenuFooter';

export const RootNavMenuFooter: React.FC = () => {
  return (
    <NavMenuFooter
      className={cx(
        hstack(),
        css({
          display: '!important flex',
          justifyContent: 'space-between',
          pt: '100',
        })
      )}
      testId="side-nav-root-footer"
    >
      <a
        target="_blank"
        rel="noopener noreferrer"
        href="https://discord.novu.co"
        data-test-id="side-nav-bottom-link-support"
      >
        Support
      </a>
      <b>•</b>
      <a
        target="_blank"
        rel="noopener noreferrer"
        href={`https://docs.novu.co${UTM_CAMPAIGN_QUERY_PARAM}`}
        data-test-id="side-nav-bottom-link-documentation"
      >
        Docs
      </a>
      <b>•</b>
      <a
        target="_blank"
        rel="noopener noreferrer"
        href="https://github.com/novuhq/novu/issues/new/choose"
        data-test-id="side-nav-bottom-link-share-feedback"
      >
        Share Feedback
      </a>
    </NavMenuFooter>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';
import { css, cx } from '@novu/novui/css';
import { hstack } from '@novu/novui/patterns';
import { NavMenuFooter } from './NavMenuFooter';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/SettingsNavMenu.tsx
Tamaño: 4601 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import {
  IconAdminPanelSettings,
  IconCreditCard,
  IconGroup,
  IconManageAccounts,
  IconRoomPreferences,
  IconWorkspacePremium,
} from '@novu/design-system';
import { useNavigate } from 'react-router-dom';
import { FeatureFlagsKeysEnum } from '@novu/shared';
import { useAuth } from '../../hooks/useAuth';
import { ROUTES } from '../../constants/routes';
import { FreeTrialSidebarWidget } from '../layout/components/FreeTrialSidebarWidget';
import { NavMenu } from './NavMenu';
import { NavMenuLinkButton } from './NavMenuButton/NavMenuLinkButton';
import { NavMenuSection } from './NavMenuSection';
import { useFeatureFlag } from '../../hooks/useFeatureFlag';
import { When } from '../utils/When';

const getScopedTitle = (label: string, scope?: string) => `${label} ${scope ? `(${scope})` : ''}`;

export const SettingsNavMenu: React.FC = () => {
  const navigate = useNavigate();
  const { currentOrganization } = useAuth();
  const isV2Enabled = useFeatureFlag(FeatureFlagsKeysEnum.IS_V2_ENABLED);

  const onBackButtonClick = () => {
    navigate(ROUTES.HOME);
  };

  return (
    <NavMenu variant="nested" title="Settings" onBackButtonClick={onBackButtonClick}>
      <NavMenuSection title="Account">
        <NavMenuLinkButton
          label="User profile"
          isVisible
          icon={<IconManageAccounts />}
          link={ROUTES.PROFILE}
          testId="side-nav-settings-user-profile"
        ></NavMenuLinkButton>
      </NavMenuSection>
      <NavMenuSection title={getScopedTitle('Organization', currentOrganization?.name)}>
        <NavMenuLinkButton
          label="Organization profile"
          isVisible
          icon={<IconRoomPreferences />}
          link={ROUTES.ORGANIZATION}
          testId="side-nav-settings-organization-link"
        ></NavMenuLinkButton>
        <NavMenuLinkButton
          label="Access security"
          isVisible
          icon={<IconAdminPanelSettings />}
          link={ROUTES.SECURITY}
          testId="side-nav-settings-security-link"
        ></NavMenuLinkButton>
        <NavMenuLinkButton
          label="Team members"
          isVisible
          icon={<IconGroup />}
          link={ROUTES.TEAM_SETTINGS}
          testId="side-nav-settings-team-link"
        ></NavMenuLinkButton>
        <When truthy={!isV2Enabled}>
          <NavMenuLinkButton
            label="Branding"
            isVisible
            icon={<IconWorkspacePremium />}
            link={ROUTES.BRAND_SETTINGS}
            testId="side-nav-settings-branding-link"
          ></NavMenuLinkButton>
        </When>
        <NavMenuLinkButton
          label="Plans & Billing"
          isVisible
          icon={<IconCreditCard />}
          link={ROUTES.BILLING}
          testId="side-nav-settings-billing-link"
        ></NavMenuLinkButton>
      </NavMenuSection>
      {/** TODO: we will reinstate the toggle buttons w/ different envs once we have APIs to support the pages */}
      {/*
          <NavMenuToggleButton
          icon={<IconConstruction />}
          label={'Development'}
          testId="side-nav-settings-toggle-development"
        >
          <NavMenuLinkButton
            label="API keys"
            isVisible
            icon={<IconKey />}
            link={getEnvSettingsRoute(ROUTES.API_KEYS, BaseEnvironmentEnum.DEVELOPMENT)}
            testId="side-nav-settings-api-keys-development"
          ></NavMenuLinkButton>
          <NavMenuLinkButton
            label="Inbound webhook"
            isVisible
            icon={<IconWebhook />}
            link={getEnvSettingsRoute(ROUTES.WEBHOOK, BaseEnvironmentEnum.DEVELOPMENT)}
            testId="side-nav-settings-inbound-webhook-development"
          ></NavMenuLinkButton>
        </NavMenuToggleButton>
        <NavMenuToggleButton
          icon={<IconRocketLaunch />}
          label={'Production'}
          testId="side-nav-settings-toggle-production"
        >
          <NavMenuLinkButton
            label="API keys"
            isVisible
            icon={<IconKey />}
            link={getEnvSettingsRoute(ROUTES.API_KEYS, BaseEnvironmentEnum.PRODUCTION)}
            testId="side-nav-settings-api-keys-production"
          ></NavMenuLinkButton>
          <NavMenuLinkButton
            label="Inbound webhook"
            isVisible
            icon={<IconWebhook />}
            link={getEnvSettingsRoute(ROUTES.WEBHOOK, BaseEnvironmentEnum.PRODUCTION)}
            testId="side-nav-settings-inbound-webhook-production"
          ></NavMenuLinkButton>
        </NavMenuToggleButton> */}
      <FreeTrialSidebarWidget />
    </NavMenu>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import {
IconAdminPanelSettings,
IconCreditCard,
IconGroup,
IconManageAccounts,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/Sidebar.tsx
Tamaño: 406 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useLocation } from 'react-router-dom';
import { ROUTES } from '../../constants/routes';
import { RootNavMenu } from './RootNavMenu';
import { SettingsNavMenu } from './SettingsNavMenu';
import { Aside } from './Aside';

export const Sidebar = () => {
  const { pathname } = useLocation();

  return <Aside>{pathname.startsWith(ROUTES.SETTINGS) ? <SettingsNavMenu /> : <RootNavMenu />}</Aside>;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useLocation } from 'react-router-dom';
import { ROUTES } from '../../constants/routes';
import { RootNavMenu } from './RootNavMenu';
import { SettingsNavMenu } from './SettingsNavMenu';
import { Aside } from './Aside';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/VisibilityButton.tsx
Tamaño: 778 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IconVisibilityOff } from '@novu/design-system';
import { css } from '@novu/novui/css';

const buttonStyles = css({
  bg: 'transparent',
  transition: 'background 0.2s ease',
  _hover: {
    '& svg': {
      fill: 'typography.text.secondary',
    },
  },
  borderRadius: '0.5rem',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  cursor: 'pointer',
  zIndex: '200',
});

export interface IVisibilityButtonProps {
  onClick: React.MouseEventHandler<HTMLButtonElement>;
  className?: string;
}

export const VisibilityButton: React.FC<IVisibilityButtonProps> = ({ onClick, className }) => {
  return (
    <button className={`${buttonStyles}${className ? ` ${className}` : ''}`} onClick={onClick}>
      <IconVisibilityOff />
    </button>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IconVisibilityOff } from '@novu/design-system';
import { css } from '@novu/novui/css';
const buttonStyles = css({
bg: 'transparent',
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/EnvironmentSelect/EnvironmentSelect.tsx
Tamaño: 1426 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IconConstruction, IconRocketLaunch, Select } from '@novu/design-system';

import { css } from '@novu/novui/css';
import { BaseEnvironmentEnum } from '../../../constants/BaseEnvironmentEnum';
import { useEnvironment } from '../../providers/EnvironmentProvider';
import { navSelectStyles } from '../NavSelect.styles';

export function EnvironmentSelect() {
  const { environment, environments, isLoaded, switchEnvironment } = useEnvironment();

  const onChange = async (environmentId) => await switchEnvironment({ environmentId });

  return (
    <Select
      className={navSelectStyles}
      data-test-id="environment-switch"
      allowDeselect={false}
      loading={!isLoaded}
      value={environment?._id}
      data={(environments || []).map(({ _id: value, name: label }) => ({ label, value }))}
      onChange={onChange}
      icon={
        isLoaded && (
          <span
            className={css({
              p: '50',
              // TODO: use design system values when available
              borderRadius: '8px',
              bg: 'surface.page',
              '& svg': {
                fill: 'typography.text.main',
              },
              _after: {
                width: '100',
              },
            })}
          >
            {environment?.name === BaseEnvironmentEnum.DEVELOPMENT ? <IconConstruction /> : <IconRocketLaunch />}
          </span>
        )
      }
    />
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IconConstruction, IconRocketLaunch, Select } from '@novu/design-system';
import { css } from '@novu/novui/css';
import { BaseEnvironmentEnum } from '../../../constants/BaseEnvironmentEnum';
import { useEnvironment } from '../../providers/EnvironmentProvider';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/EnvironmentSelect/index.ts
Tamaño: 37 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './EnvironmentSelect';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/nav/NavMenuButton/NavMenuButton.shared.tsx
Tamaño: 2111 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { CoreProps, CorePropsWithChildren } from '@novu/novui';
import { css, cx } from '@novu/novui/css';
import { IIconProps } from '@novu/novui/icons';
import { HStack } from '@novu/novui/jsx';
import { FC, ReactNode } from 'react';
import { truncatedFlexTextCss } from '../../../studio/utils/shared.styles';
import { LocalizedMessage } from '../../../types/LocalizedMessage';

export type RightSideTrigger = 'hover';

export interface INavMenuButtonRightSideConfig {
  node: ReactNode;
  tooltip?: LocalizedMessage;
  triggerOn?: RightSideTrigger;
}
export interface INavMenuButtonProps extends CoreProps {
  icon: React.ReactElement<IIconProps> | null;
  label: LocalizedMessage;
  rightSide?: INavMenuButtonRightSideConfig;
  isVisible?: boolean;
  testId?: string;
}

export const rawButtonBaseStyles = css.raw({
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'space-between',
  width: '100%',
  position: 'relative',
  py: '100',
  px: '125',
  background: 'transparent',
  borderRadius: '100',
  color: 'typography.text.secondary !important',
  '& svg': {
    fill: 'typography.text.secondary',
  },
  fontWeight: 'strong',
  fontFamily: 'system',
  cursor: 'pointer',

  '& > *': {
    ...truncatedFlexTextCss,
  },

  // &.active is necessary to work with the react-router-dom className they generate
  '& _active, &.active': {
    position: 'relative',
    background: 'surface.page !important',
    boxShadow: 'medium',
    backgroundClip: 'padding-box',
    color: 'typography.text.main !important',
    '& svg': {
      fill: 'typography.text.main',
    },
  },

  _hover: {
    background: 'surface.page !important',
    color: 'typography.text.main !important',
    '& svg': {
      fill: 'typography.text.main',
    },
    boxShadow: 'medium',
  },
});

type NavMenuButtonInnerProps = {
  icon: ReactNode;
} & CorePropsWithChildren;

export const NavMenuButtonInner: FC<NavMenuButtonInnerProps> = ({ icon, children, className }) => {
  return (
    <HStack gap="75" className={cx(css(truncatedFlexTextCss), className)}>
      {icon}
      <p>{children}</p>
    </HStack>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { CoreProps, CorePropsWithChildren } from '@novu/novui';
import { css, cx } from '@novu/novui/css';
import { IIconProps } from '@novu/novui/icons';
import { HStack } from '@novu/novui/jsx';
import { FC, ReactNode } from 'react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/NavMenuButton/NavMenuButtonRightSide.tsx
Tamaño: 1308 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Transition } from '@mantine/core';
import { Tooltip } from '@novu/design-system';
import { FC, PropsWithChildren, useState } from 'react';
import { css } from '@novu/novui/css';
import { INavMenuButtonRightSideConfig } from './NavMenuButton.shared';

const tooltipStyle = css({
  backgroundColor: 'surface.popover',
  color: 'typography.text.main',
  border: 'none',
});

export type INavMenuButtonRightSideProps = PropsWithChildren<
  Omit<INavMenuButtonRightSideConfig, 'node' | 'triggerOn'>
> & {
  isMounted: boolean;
};

export const NavMenuRightSide: FC<INavMenuButtonRightSideProps> = ({ children, tooltip, isMounted }) => {
  const [isHovered, setIsHovered] = useState<boolean>(false);

  return (
    <Transition mounted={isMounted} transition="fade" duration={400} timingFunction="ease">
      {(styles) => (
        <Tooltip
          classNames={{ tooltip: tooltipStyle }}
          label={tooltip}
          // only open if there is content and the trigger is currently hovered
          opened={!!tooltip && isHovered}
          position="right"
          withinPortal
        >
          <div style={styles} onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)}>
            {children}
          </div>
        </Tooltip>
      )}
    </Transition>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Transition } from '@mantine/core';
import { Tooltip } from '@novu/design-system';
import { FC, PropsWithChildren, useState } from 'react';
import { css } from '@novu/novui/css';
import { INavMenuButtonRightSideConfig } from './NavMenuButton.shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/NavMenuButton/NavMenuLinkButton.tsx
Tamaño: 1767 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FC, PropsWithChildren, useState } from 'react';
import { NavLink } from 'react-router-dom';
import { css, cx } from '@novu/novui/css';
import { HStack } from '@novu/novui/jsx';
import { INavMenuButtonProps, NavMenuButtonInner, rawButtonBaseStyles } from './NavMenuButton.shared';
import { NavMenuRightSide } from './NavMenuButtonRightSide';

const rawLinkButtonStyles = css.raw({
  // default color palette
  colorPalette: 'mode.cloud',
  '& _active, &.active': {
    _before: {
      content: '""',
      position: 'absolute',
      width: '50',
      top: '0',
      right: '0',
      bottom: '0',
      left: '0',
      borderTopLeftRadius: '100',
      borderBottomLeftRadius: '100',
      bgGradient: `to-b`,
      gradientFrom: 'colorPalette.start',
      gradientTo: 'colorPalette.end',
    },
  },
});

interface INavMenuLinkButtonProps extends INavMenuButtonProps {
  link: string;
}

export const NavMenuLinkButton: FC<PropsWithChildren<INavMenuLinkButtonProps>> = ({
  rightSide,
  testId,
  icon,
  link,
  label,
  isVisible = true,
  className,
}) => {
  const [isHovered, setIsHovered] = useState<boolean>(false);

  const shouldShowRightSide = Boolean(
    rightSide && (!rightSide.triggerOn || (rightSide.triggerOn === 'hover' && isHovered))
  );

  return isVisible ? (
    <NavLink
      className={cx(css(rawButtonBaseStyles, rawLinkButtonStyles), className)}
      to={link}
      data-test-id={testId}
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
    >
      <NavMenuButtonInner icon={icon}>{label}</NavMenuButtonInner>
      <NavMenuRightSide tooltip={rightSide?.tooltip} isMounted={shouldShowRightSide}>
        {rightSide?.node}
      </NavMenuRightSide>
    </NavLink>
  ) : null;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FC, PropsWithChildren, useState } from 'react';
import { NavLink } from 'react-router-dom';
import { css, cx } from '@novu/novui/css';
import { HStack } from '@novu/novui/jsx';
import { INavMenuButtonProps, NavMenuButtonInner, rawButtonBaseStyles } from './NavMenuButton.shared';
// default color palette
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/NavMenuButton/NavMenuToggleButton.tsx
Tamaño: 2257 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { css, cx } from '@novu/novui/css';
import { IconKeyboardArrowDown, IconKeyboardArrowUp } from '@novu/novui/icons';
import { HStack, Stack } from '@novu/novui/jsx';
import { FC, PropsWithChildren, useEffect, useState } from 'react';
import { NavLink } from 'react-router-dom';
import { useHover } from '../../../hooks/useHover';
import { truncatedFlexTextCss } from '../../../studio/utils/shared.styles';
import { INavMenuButtonProps, NavMenuButtonInner, rawButtonBaseStyles } from './NavMenuButton.shared';

type INavMenuToggleButtonProps = { link: string } & Omit<INavMenuButtonProps, 'rightSide'>;

export const NavMenuToggleButton: FC<PropsWithChildren<INavMenuToggleButtonProps>> = ({
  testId,
  icon,
  label,
  children,
  className,
  link,
}) => {
  const [isOpen, setIsOpen] = useState<boolean>(false);
  const { isHovered, ...hoverProps } = useHover();

  const handleClick = () => {
    setIsOpen((prevIsOpen) => !prevIsOpen);
  };

  return (
    <>
      <NavLink
        data-test-id={testId}
        onClick={handleClick}
        to={link}
        className={cx(
          css(rawButtonBaseStyles),
          css({
            lineHeight: '125',
            '& _active, &.active': { background: 'transparent !important', boxShadow: 'none' },
          }),
          className
        )}
        {...hoverProps}
      >
        {({ isActive }) => (
          <ToggleButtonInner isOpen={isOpen} setIsOpen={setIsOpen} icon={icon} label={label} isActive={isActive} />
        )}
      </NavLink>
      <Stack pl="100" gap="25">
        {!isOpen ? null : children}
      </Stack>
    </>
  );
};

type ToggleButtonInnerProps = Pick<INavMenuToggleButtonProps, 'icon' | 'label'> & {
  isActive: boolean;
  isOpen: boolean;
  setIsOpen: (val: boolean) => void;
};

function ToggleButtonInner({ isActive, isOpen, setIsOpen, icon, label }: ToggleButtonInnerProps) {
  useEffect(() => {
    if (!isActive) {
      setIsOpen(false);
    }
  }, [setIsOpen, isActive]);

  return (
    <HStack justifyContent={'space-between'} w="inherit" className={css(truncatedFlexTextCss)}>
      <NavMenuButtonInner icon={icon}>{label}</NavMenuButtonInner>
      {isOpen && isActive ? <IconKeyboardArrowUp /> : <IconKeyboardArrowDown />}
    </HStack>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { css, cx } from '@novu/novui/css';
import { IconKeyboardArrowDown, IconKeyboardArrowUp } from '@novu/novui/icons';
import { HStack, Stack } from '@novu/novui/jsx';
import { FC, PropsWithChildren, useEffect, useState } from 'react';
import { NavLink } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/NavMenuButton/index.ts
Tamaño: 76 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './NavMenuLinkButton';
export * from './NavMenuToggleButton';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/nav/OrganizationSelect/OrganizationSelect.tsx
Tamaño: 4258 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect, useMemo, useState } from 'react';
import { useMutation } from '@tanstack/react-query';
import capitalize from 'lodash.capitalize';
import type { IResponseError, IOrganizationEntity } from '@novu/shared';
import { Select, Tooltip, When, successMessage } from '@novu/design-system';
import { css } from '@novu/novui/css';
import { COMPANY_LOGO_PATH } from '../../../constants/assets';
import { arrowStyles, navSelectStyles, tooltipStyles } from '../NavSelect.styles';
import { useAuth } from '../../providers/AuthProvider';
import { addOrganization } from '../../../api/organization';
import { useSpotlightContext } from '../../providers/SpotlightProvider';
import { useOrganizations } from '../../../hooks/useOrganizations';

export function OrganizationSelect() {
  const [canShowTooltip, setCanShowTooltip] = useState<boolean>(false);
  const { isOrganizationLoaded, currentOrganization, switchOrganization } = useAuth();
  const { data: organizations, isLoading: isOrganizationsLoading } = useOrganizations();
  const [search, setSearch] = useState<string>('');
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const { addItem, removeItems } = useSpotlightContext();

  const { mutateAsync: createOrganization } = useMutation<IOrganizationEntity, IResponseError, string>(
    (name) => addOrganization(name),
    {
      onSuccess: () => {
        successMessage('Your trial has started! 🎉');
      },
    }
  );

  function onCreate(newOrganization: string) {
    (async () => {
      if (!newOrganization) {
        return;
      }

      setIsLoading(true);
      const response = await createOrganization(newOrganization);
      await switchOrganization(response._id);
      setIsLoading(false);
    })();

    /*
     * Necessary hack for Mantine V5 `<Select/>` that doesn't support async `onCreate`
     * See https://v5.mantine.dev/core/select/#creatable
     */
    return '';
  }

  function onChange(organizationId: string | string[] | null) {
    (async () => {
      if (!organizationId) {
        return;
      }

      if (Array.isArray(organizationId)) {
        [organizationId] = organizationId;
      }

      setIsLoading(true);
      await switchOrganization(organizationId);
      setIsLoading(false);
    })();
  }

  const value = currentOrganization?._id || '';

  const data = useMemo(() => {
    return (organizations || []).map((item) => ({
      label: capitalize(item.name),
      value: item._id,
    }));
  }, [organizations]);

  useEffect(() => {
    removeItems([`change-org-${value}`]);
    addItem(
      (organizations || [])
        .filter((item) => item._id !== value)
        .map((item) => ({
          id: `change-org-${item._id}`,
          title: `Change org to ${capitalize(item.name)}`,
          onTrigger: () => switchOrganization(item._id),
        }))
    );
  }, [organizations, switchOrganization, addItem, removeItems, value]);

  return (
    <Tooltip
      label="Type a name to add organization"
      sx={{ visibility: canShowTooltip && !isLoading ? 'visible' : 'hidden' }}
      position="left"
      classNames={{
        tooltip: tooltipStyles,
        arrow: arrowStyles,
      }}
      withinPortal
    >
      <Select
        data-test-id="organization-switch"
        className={navSelectStyles}
        creatable
        searchable
        loading={isLoading || isOrganizationsLoading || !isOrganizationLoaded}
        getCreateLabel={(newOrganization) => <div>+ Add "{newOrganization}"</div>}
        value={value}
        onCreate={onCreate}
        onChange={onChange}
        allowDeselect={false}
        onSearchChange={setSearch}
        onDropdownOpen={() => {
          setCanShowTooltip(true);
        }}
        onDropdownClose={() => {
          setCanShowTooltip(false);
        }}
        data={data}
        icon={
          <When truthy={!isLoading}>
            <img
              // TODO: use actual organization photo
              src={COMPANY_LOGO_PATH}
              className={css({
                w: '200',
                h: '200',
                // TODO: use design system values when available
                borderRadius: '8px',
              })}
            />
          </When>
        }
      />
    </Tooltip>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect, useMemo, useState } from 'react';
import { useMutation } from '@tanstack/react-query';
import capitalize from 'lodash.capitalize';
import type { IResponseError, IOrganizationEntity } from '@novu/shared';
import { Select, Tooltip, When, successMessage } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/nav/OrganizationSelect/index.ts
Tamaño: 38 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './OrganizationSelect';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/providers/AuthProvider.tsx
Tamaño: 2154 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useContext } from 'react';
import { IOrganizationEntity, IUserEntity } from '@novu/shared';
import { type BrowserClerk } from '@clerk/clerk-react';
import { IS_EE_AUTH_ENABLED } from '../../config/index';
import {
  CommunityAuthContext,
  CommunityAuthProvider,
  getToken as getCommunityAuthToken,
} from './CommunityAuthProvider';
import { EnterpriseAuthContext, EnterpriseAuthProvider } from '../../ee/clerk/providers/EnterpriseAuthProvider';

type UserState =
  | {
      isUserLoaded: true;
      currentUser: IUserEntity;
    }
  | {
      isUserLoaded: false;
      currentUser: undefined;
    };

type OrganizationState =
  | {
      isOrganizationLoaded: true;
      currentOrganization: IOrganizationEntity;
    }
  | {
      isOrganizationLoaded: false;
      currentOrganization: undefined;
    };

export type AuthContextValue = UserState &
  OrganizationState & {
    login: (newToken: string, redirectUrl?: string) => Promise<void>;
    logout: () => void;
    redirectToLogin: (params: { redirectURL?: string }) => void;
    // TODO: Make redirectToSignUp agnostic to business logic and accept { queryParams: { [key: string]: string }}
    redirectToSignUp: (params: { redirectURL?: string; origin?: string; anonymousId?: string }) => void;
    switchOrganization: (organizationId: string) => Promise<void>;
    reloadOrganization: () => Promise<object>;
  };

export const AuthProvider = ({ children }: { children: React.ReactNode }) => {
  if (IS_EE_AUTH_ENABLED) {
    return <EnterpriseAuthProvider>{children}</EnterpriseAuthProvider>;
  }

  return <CommunityAuthProvider>{children}</CommunityAuthProvider>;
};

export const useAuth = () => {
  const context = IS_EE_AUTH_ENABLED ? EnterpriseAuthContext : CommunityAuthContext;
  const value = useContext(context);

  if (!value) {
    throw new Error(`useAuth must be used within ${context.displayName}`);
  }

  return value;
};

declare global {
  interface Window {
    Clerk: BrowserClerk;
  }
}

export async function getToken() {
  if (IS_EE_AUTH_ENABLED) {
    return (await window?.Clerk?.session?.getToken()) || '';
  }

  return getCommunityAuthToken() || '';
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useContext } from 'react';
import { IOrganizationEntity, IUserEntity } from '@novu/shared';
import { type BrowserClerk } from '@clerk/clerk-react';
import { IS_EE_AUTH_ENABLED } from '../../config/index';
import {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/providers/CommunityAuthProvider.tsx
Tamaño: 5879 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { createContext, useCallback, useEffect } from 'react';
import { IOrganizationEntity, IUserEntity } from '@novu/shared';
import { useQuery, useQueryClient } from '@tanstack/react-query';
import { HttpStatusCode } from 'axios';
import { useLocation, useNavigate } from 'react-router-dom';
import { ROUTES } from '../../constants/routes';
import { useSegment } from './SegmentProvider';
import { clearEnvironmentId } from './EnvironmentProvider';
import { getUser } from '../../api/user';
import { switchOrganization as apiSwitchOrganization, getOrganization } from '../../api/organization';
import { DEFAULT_AUTH_CONTEXT_VALUE } from './constants';
import { type AuthContextValue } from './AuthProvider';
import { useRouteScopes } from '../../hooks/useRouteScopes';
import { inIframe } from '../../utils/iframe';

export const LOCAL_STORAGE_AUTH_TOKEN_KEY = 'nv_auth_token';

function saveToken(token: string | null) {
  if (token) {
    localStorage.setItem(LOCAL_STORAGE_AUTH_TOKEN_KEY, token);
  } else {
    localStorage.removeItem(LOCAL_STORAGE_AUTH_TOKEN_KEY);
  }
}

export function getToken() {
  return localStorage.getItem(LOCAL_STORAGE_AUTH_TOKEN_KEY);
}

export const CommunityAuthContext = createContext<AuthContextValue>(DEFAULT_AUTH_CONTEXT_VALUE);

CommunityAuthContext.displayName = 'CommunityAuthProvider';

export const CommunityAuthProvider = ({ children }: { children: React.ReactNode }) => {
  const location = useLocation();
  const segment = useSegment();
  const queryClient = useQueryClient();
  const navigate = useNavigate();
  const { inPrivateRoute } = useRouteScopes();
  const hasToken = !!getToken();

  useEffect(() => {
    if (!getToken() && inPrivateRoute && !inIframe()) {
      navigate(ROUTES.AUTH_LOGIN, { state: { redirectTo: location } });
    }
  }, [navigate, inPrivateRoute, location]);

  const { data: currentUser, isInitialLoading: isUserInitialLoading } = useQuery<IUserEntity>(
    ['/v1/users/me'],
    getUser,
    {
      enabled: hasToken,
      retry: false,
      staleTime: Infinity,
      onError: (error: any) => {
        if (error?.statusCode === HttpStatusCode.Unauthorized) {
          logout();
        }
      },
    }
  );

  const {
    data: currentOrganization,
    isInitialLoading: isOrganizationInitialLoading,
    refetch: reloadOrganization,
  } = useQuery<IOrganizationEntity>(['/v1/organizations/me'], getOrganization, {
    enabled: hasToken,
    retry: false,
    staleTime: Infinity,
    onError: (error: any) => {
      if (error?.statusCode === HttpStatusCode.Unauthorized) {
        logout();
      }
    },
  });

  const login = useCallback(
    async (newToken: string, redirectUrl?: string) => {
      if (!newToken) {
        return;
      }

      // TODO: Revise storing environment id in local storage to avoid having to clear it during org or env switching
      clearEnvironmentId();

      saveToken(newToken);
      await reloadOrganization();

      if (redirectUrl) {
        navigate(redirectUrl);
      }
    },
    [navigate, reloadOrganization]
  );

  const logout = useCallback(() => {
    saveToken(null);
    // TODO: Revise storing environment id in local storage to avoid having to clear it during org or env switching
    clearEnvironmentId();
    queryClient.clear();
    segment.reset();
    navigate(ROUTES.AUTH_LOGIN);
  }, [navigate, queryClient, segment]);

  const redirectTo = useCallback(
    ({
      url,
      redirectURL,
      origin,
      anonymousId,
    }: {
      url: string;
      redirectURL?: string;
      origin?: string;
      anonymousId?: string | null;
    }) => {
      const finalURL = new URL(url, window.location.origin);

      if (redirectURL) {
        finalURL.searchParams.append('redirect_url', redirectURL);
      }

      if (origin) {
        finalURL.searchParams.append('origin', origin);
      }

      if (anonymousId) {
        finalURL.searchParams.append('anonymous_id', anonymousId);
      }

      // Note: Do not use react-router-dom. The version we have doesn't do instant cross origin redirects.
      window.location.replace(finalURL.href);
    },
    []
  );

  const redirectToLogin = useCallback(
    ({ redirectURL }: { redirectURL?: string } = {}) => redirectTo({ url: ROUTES.AUTH_LOGIN, redirectURL }),
    [redirectTo]
  );

  const redirectToSignUp = useCallback(
    ({
      redirectURL,
      origin,
      anonymousId,
    }: { redirectURL?: string; origin?: string; anonymousId?: string | null } = {}) =>
      redirectTo({ url: ROUTES.AUTH_SIGNUP, redirectURL, origin, anonymousId }),
    [redirectTo]
  );

  const switchOrganization = useCallback(
    async (orgId: string) => {
      if (!orgId) {
        throw new Error('Organization ID is required');
      }

      if (orgId === currentOrganization?._id) {
        return;
      }

      // TODO: Revise storing environment id in local storage to avoid having to clear it during org or env switching
      clearEnvironmentId();

      const token = await apiSwitchOrganization(orgId);
      await login(token);
      await reloadOrganization();
    },
    [currentOrganization, reloadOrganization, login]
  );

  const value = {
    isUserLoaded: isUserInitialLoading === false,
    isOrganizationLoaded: isOrganizationInitialLoading === false,
    currentUser,
    currentOrganization,
    login,
    logout,
    redirectToLogin,
    redirectToSignUp,
    switchOrganization,
    reloadOrganization,
  } as AuthContextValue;
  /*
   * The 'as AuthContextValue' is necessary as Boolean and true or false discriminating unions
   * don't work with inference. See here https://github.com/microsoft/TypeScript/issues/19360
   *
   * Alternatively, we will have to conditionally generate the value object based on the isLoaded values.
   */

  return <CommunityAuthContext.Provider value={value}>{children}</CommunityAuthContext.Provider>;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { createContext, useCallback, useEffect } from 'react';
import { IOrganizationEntity, IUserEntity } from '@novu/shared';
import { useQuery, useQueryClient } from '@tanstack/react-query';
import { HttpStatusCode } from 'axios';
import { useLocation, useNavigate } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/providers/EnvironmentProvider.tsx
Tamaño: 7280 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IEnvironment } from '@novu/shared';
import { useQuery, useQueryClient } from '@tanstack/react-query';
import { useCallback, useEffect, useState } from 'react';
import { flushSync } from 'react-dom';
import { useNavigate } from 'react-router-dom';
import { getEnvironments } from '../../api/environment';
import { QueryKeys } from '../../api/query.keys';
import { IS_SELF_HOSTED } from '../../config/index';
import { BaseEnvironmentEnum } from '../../constants/BaseEnvironmentEnum';
import { ROUTES } from '../../constants/routes';
import { useAuth } from './AuthProvider';
import { createContextAndHook } from './createContextAndHook';

export type EnvironmentName = BaseEnvironmentEnum | IEnvironment['name'];

const LOCAL_STORAGE_LAST_ENVIRONMENT_ID = 'nv_last_environment_id';

export function saveEnvironmentId(environmentId: string) {
  localStorage.setItem(LOCAL_STORAGE_LAST_ENVIRONMENT_ID, environmentId);
}

export function getEnvironmentId() {
  return localStorage.getItem(LOCAL_STORAGE_LAST_ENVIRONMENT_ID) || '';
}

export function clearEnvironmentId() {
  return localStorage.removeItem(LOCAL_STORAGE_LAST_ENVIRONMENT_ID);
}

type EnvironmentContextValue = {
  currentEnvironment?: IEnvironment | null;
  /** @deprecated use currentEnvironment instead */
  environment?: IEnvironment | null;
  environments?: IEnvironment[];
  refetchEnvironments: () => Promise<void>;
  switchEnvironment: (params: Partial<{ environmentId: string; redirectUrl: string }>) => Promise<void>;
  switchToDevelopmentEnvironment: (redirectUrl?: string) => Promise<void>;
  switchToProductionEnvironment: (redirectUrl?: string) => Promise<void>;
  isLoaded: boolean;
  readOnly: boolean;
};

const [EnvironmentCtx, useEnvironmentCtx] = createContextAndHook<EnvironmentContextValue>('Environment Context');

// TODO: Move this logic to the server and use the environments /me endpoint instead
function selectEnvironment(environments: IEnvironment[] | undefined | null, selectedEnvironmentId?: string) {
  let e: IEnvironment | undefined | null = null;

  if (!environments) {
    return null;
  }

  // Find the environment based on the current user's last environment
  if (selectedEnvironmentId) {
    e = environments.find((env) => env._id === selectedEnvironmentId);
  }

  // Or pick the development environment
  if (!e) {
    e = environments.find((env) => env.name === BaseEnvironmentEnum.DEVELOPMENT);
  }

  if (!e) {
    throw new Error('Missing development environment');
  }

  saveEnvironmentId(e._id);

  return e;
}

export function EnvironmentProvider({ children }: { children: React.ReactNode }) {
  const navigate = useNavigate();
  const queryClient = useQueryClient();
  const { currentOrganization } = useAuth();

  // Start with a null environment
  const [currentEnvironment, setCurrentEnvironment] = useState<IEnvironment | null>(null);

  /*
   * Loading environments depends on the current organization. Fetching should start only when the current
   * organization is set and it should happens once, on full page reload, until the cache is invalidated on-demand
   * or a refetch is triggered manually.
   */
  const {
    data: environments,
    isInitialLoading,
    refetch: refetchEnvironments,
  } = useQuery<IEnvironment[]>([QueryKeys.myEnvironments, currentOrganization?._id], getEnvironments, {
    enabled: !!currentOrganization,
    retry: 2, // Retry once on 401 if the stored environment is invalid
    staleTime: Infinity,
    onSuccess(envs) {
      /*
       * This is a required hack to ensure that fetching environments, isLoading = false and currentEnvironment
       * are all set as part of the same rendering cycle.
       */
      flushSync(() => setCurrentEnvironment(selectEnvironment(envs, getEnvironmentId())));
    },
  });

  const switchEnvironment = useCallback(
    async ({ environmentId, redirectUrl }: Partial<{ environmentId: string; redirectUrl: string }> = {}) => {
      /**
       * This is for handling the case when the environment is the same, but was updated on the database and re-fetched.
       * So we want to call this all the time.
       */
      setCurrentEnvironment(selectEnvironment(environments, environmentId));

      // Don't redirect if environmentId is empty/undefined (loading state) or if environments match
      if (!environmentId || currentEnvironment?._id === environmentId) {
        return;
      }

      /*
       * TODO: Replace this revalidation by moving environment ID or name to the URL.
       */
      await queryClient.invalidateQueries();

      if (redirectUrl) {
        navigate(redirectUrl);
        return;
      }

      // if we are in a specific workflow detail when switching the env, redirect to workflows
      if (window.location.pathname.includes('workflows/edit')) {
        navigate(ROUTES.WORKFLOWS);
      }
    },
    [queryClient, navigate, setCurrentEnvironment, currentEnvironment, environments]
  );

  const switchToProductionEnvironment = useCallback(
    async (redirectUrl?: string) => {
      const environmentId = environments?.find((env) => env.name === BaseEnvironmentEnum.PRODUCTION)?._id;

      if (environmentId) {
        await switchEnvironment({
          environmentId,
          redirectUrl,
        });
      } else {
        throw new Error('Production environment not found');
      }
    },
    [environments, switchEnvironment]
  );

  const switchToDevelopmentEnvironment = useCallback(
    async (redirectUrl?: string) => {
      const environmentId = environments?.find((env) => env.name === BaseEnvironmentEnum.DEVELOPMENT)?._id;

      if (environmentId) {
        await switchEnvironment({
          environmentId,
          redirectUrl,
        });
      } else {
        throw new Error('Development environment not found');
      }
    },
    [environments, switchEnvironment]
  );

  const reloadEnvironments = async () => {
    await refetchEnvironments();

    /**
     * TODO: remove this once the race condition after calling API
     * request right after login() on same path is resolved
     */
    const envs = await getEnvironments();
    selectEnvironment(envs);
  };

  /*
   * This effect ensures that switching takes place every time environments change. The most common usecase
   * is switching to a new organization
   */
  useEffect(() => {
    if (environments) {
      switchEnvironment({ environmentId: getEnvironmentId() });
    }
  }, [currentEnvironment, environments, switchEnvironment]);

  const value = {
    currentEnvironment,
    environment: currentEnvironment,
    environments,
    refetchEnvironments: reloadEnvironments,
    switchEnvironment,
    switchToDevelopmentEnvironment,
    switchToProductionEnvironment,
    isLoaded: !isInitialLoading,
    readOnly: currentEnvironment?._parentId !== undefined,
  };

  return <EnvironmentCtx.Provider value={{ value }}>{children}</EnvironmentCtx.Provider>;
}

export function useEnvironment({ bridge }: { bridge?: boolean } = {}) {
  const { readOnly, ...rest } = useEnvironmentCtx();

  return {
    ...rest,
    readOnly: readOnly || (!IS_SELF_HOSTED && bridge) || false,
    /** @deprecated Use readOnly instead */
    readonly: readOnly || (!IS_SELF_HOSTED && bridge) || false,
    bridge: (!IS_SELF_HOSTED && bridge) || false,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IEnvironment } from '@novu/shared';
import { useQuery, useQueryClient } from '@tanstack/react-query';
import { useCallback, useEffect, useState } from 'react';
import { flushSync } from 'react-dom';
import { useNavigate } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/providers/SegmentProvider.tsx
Tamaño: 785 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

import { SegmentService } from '../../utils/segment';

type Props = {
  children: React.ReactNode;
};

const SegmentContext = React.createContext<SegmentService>(undefined as any);

export const SegmentProvider = ({ children }: Props) => {
  const segment = React.useMemo(() => new SegmentService(), []);

  return <SegmentContext.Provider value={segment}>{children}</SegmentContext.Provider>;
};

/**
 * Note: you cannot destructure the result of this hook without risking pre-mature access of the underlying AnalyticsService.
 *
 * const segment = useSegment();
 */
export const useSegment = () => {
  const result = React.useContext(SegmentContext);
  if (!result) {
    throw new Error('Context used outside of its Provider!');
  }

  return result;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { SegmentService } from '../../utils/segment';
type Props = {
/**
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/providers/SpotlightProvider.tsx
Tamaño: 1363 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { SpotlightAction } from '@mantine/spotlight';
import React, { useCallback, useContext, useMemo, useState } from 'react';

interface SpotlightItem extends SpotlightAction {
  order?: number;
}

interface ISpotlightContext {
  items: SpotlightItem[];
  removeItems: (id: string[]) => void;
  addItem: (item: SpotlightItem | SpotlightItem[]) => void;
}

const SpotlightContext = React.createContext<ISpotlightContext>({
  items: [],
  removeItems: (ids: string[]) => {},
  addItem: (item: SpotlightItem | SpotlightItem[]) => {},
});

export const useSpotlightContext = (): ISpotlightContext => useContext(SpotlightContext);

export const SpotLightProvider = ({ children }) => {
  const [items, setItems] = useState<SpotlightItem[]>([]);

  const addItem = useCallback(
    (item: SpotlightItem | SpotlightItem[]) => {
      const newItems = Array.isArray(item) ? item : [item];

      setItems((old) => [...old, ...newItems].sort((a, b) => (b.order || 0) - (a.order || 0)));
    },
    [setItems]
  );

  const removeItems = useCallback(
    (ids: string[]) => setItems((old) => old.filter((item) => !ids.includes(item.id ?? ''))),
    [setItems]
  );

  const contextValue = useMemo(() => ({ items, addItem, removeItems }), [items, addItem, removeItems]);

  return <SpotlightContext.Provider value={contextValue}>{children}</SpotlightContext.Provider>;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { SpotlightAction } from '@mantine/spotlight';
import React, { useCallback, useContext, useMemo, useState } from 'react';
interface SpotlightItem extends SpotlightAction {
order?: number;
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/providers/constants.ts
Tamaño: 454 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { type AuthContextValue } from './AuthProvider';

const noop = () => {};
const asyncNoop = async () => {};

export const DEFAULT_AUTH_CONTEXT_VALUE: AuthContextValue = {
  isUserLoaded: false,
  isOrganizationLoaded: false,
  currentUser: undefined,
  currentOrganization: undefined,
  login: asyncNoop,
  logout: noop,
  redirectToLogin: noop,
  redirectToSignUp: noop,
  switchOrganization: asyncNoop,
  reloadOrganization: async () => ({}),
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - noop())
 - asyncNoop(async ())
 - AuthContextValue({
  isUserLoaded: false,
  isOrganizationLoaded: false,
  currentUser: undefined,
  currentOrganizat...)
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/providers/createContextAndHook.ts
Tamaño: 1616 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import React from 'react';

export function assertContextExists(contextVal: unknown, msgOrCtx: string | React.Context<any>): asserts contextVal {
  if (!contextVal) {
    throw typeof msgOrCtx === 'string' ? new Error(msgOrCtx) : new Error(`${msgOrCtx.displayName} not found`);
  }
}

type Options = { assertCtxFn?: (v: unknown, msg: string) => void };
type ContextOf<T> = React.Context<{ value: T } | undefined>;
type UseCtxFn<T> = () => T;

/**
 *
 * Nice little utility function from https://github.com/clerk/javascript/blob/main/packages/shared/src/react/hooks/createContextAndHook.ts
 *
 * Creates and returns a Context and two hooks that return the context value.
 * The Context type is derived from the type passed in by the user.
 * The first hook returned guarantees that the context exists so the returned value is always CtxValue
 * The second hook makes no guarantees, so the returned value can be CtxValue | undefined
 *
 */
export const createContextAndHook = <CtxVal>(
  displayName: string,
  options?: Options
): [ContextOf<CtxVal>, UseCtxFn<CtxVal>, UseCtxFn<CtxVal | Partial<CtxVal>>] => {
  const { assertCtxFn = assertContextExists } = options || {};
  const Ctx = React.createContext<{ value: CtxVal } | undefined>(undefined);
  Ctx.displayName = displayName;

  const useCtx = () => {
    const ctx = React.useContext(Ctx);
    assertCtxFn(ctx, `${displayName} not found`);

    return (ctx as any).value as CtxVal;
  };

  const useCtxWithoutGuarantee = () => {
    const ctx = React.useContext(Ctx);

    return ctx ? ctx.value : {};
  };

  return [Ctx, useCtx, useCtxWithoutGuarantee];
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - assertContextExists(contextVal: unknown, msgOrCtx: string | React.Context<any>)
Asignaciones con arrow functions encontradas (posibles funciones):
 - Options({ assertCtxFn?: (v: unknown, msg: string))
 - createContextAndHook(<CtxVal>(
  displayName: string,
  options?: Options
): [ContextOf<CtxVal>, UseCtxFn<CtxVal>, UseCtx...)
 - useCtx())
 - useCtxWithoutGuarantee())
Declaraciones 'export' encontradas:
- export function assertContextExists
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/index.ts
Tamaño: 73 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './digest-demo-flow';
export * from './in-app-onboarding';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/common/Workflow.styles.tsx
Tamaño: 1076 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { colors } from '@novu/design-system';

export const WorkflowWrapper = styled.div<{ height: string }>`
  height: ${({ height }) => height};
  width: 100%;
  background-color: transparent;

  .react-flow__node.react-flow__node-triggerNode,
  .react-flow__node.react-flow__node-digestNode,
  .react-flow__node.react-flow__node-emailNode {
    cursor: default;
  }

  .react-flow {
    overflow: visible;
  }

  .react-flow__attribution {
    background: transparent;
    opacity: 0.5;
  }

  .react-flow__attribution a {
    position: relative;
    font-size: initial;
    top: 25px;
    right: 173px;
  }

  .react-flow__attribution a:hover {
    color: lightpink !important;
  }

  .react-flow__handle {
    background: transparent;
    border: 1px solid ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B40 : colors.B60)};
  }

  .react-flow__edge-path {
    stroke: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B40 : colors.B60)};
    border-radius: 10px;
    stroke-dasharray: 5;
    stroke-width: 1px;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { colors } from '@novu/design-system';
export const WorkflowWrapper = styled.div<{ height: string }>`
height: ${({ height }) => height};
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/common/index.ts
Tamaño: 35 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './Workflow.styles';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/digest-demo-flow/DigestDemoFlow.tsx
Tamaño: 2842 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { Skeleton } from '@mantine/core';
import { useResizeObserver } from '@mantine/hooks';
import ReactFlow, { Edge, Node, useReactFlow } from 'react-flow-renderer';

import { TriggerNode } from './TriggerNode';
import { DigestNode } from './DigestNode';
import { EmailNode } from './EmailNode';
import { useTemplateFetcher } from '../../../api/hooks';
import { DigestDemoFlowProvider } from './DigestDemoFlowProvider';
import { WorkflowWrapper } from '../common';

export function DigestDemoFlow({
  isReadOnly = true,
  templateId,
  className,
  onRunTriggerClick,
  onDigestIntervalChange,
}: {
  isReadOnly?: boolean;
  templateId?: string;
  className?: string;
  onRunTriggerClick?: () => void;
  onDigestIntervalChange?: (interval: number) => void;
}) {
  const [ref, rect] = useResizeObserver();
  const reactFlowInstance = useReactFlow();
  const { isInitialLoading: isLoadingTemplate } = useTemplateFetcher(
    { templateId },
    { enabled: !isReadOnly && !!templateId, refetchOnWindowFocus: false }
  );

  useEffect(() => {
    reactFlowInstance.fitView({ minZoom: 1, maxZoom: 1 });
  }, [reactFlowInstance, rect.width, rect.height]);

  return (
    <DigestDemoFlowProvider
      isReadOnly={isReadOnly}
      templateId={templateId}
      onRunTriggerClick={onRunTriggerClick}
      onDigestIntervalChange={onDigestIntervalChange}
    >
      <WorkflowWrapper ref={ref} height="500px" className={className}>
        {isLoadingTemplate ? (
          <Skeleton width={600} height={500} sx={{ margin: '0 auto' }} />
        ) : (
          <ReactFlow
            fitView
            fitViewOptions={{ minZoom: 1, maxZoom: 1 }}
            minZoom={1}
            maxZoom={1}
            nodes={nodes}
            edges={edges}
            nodeTypes={nodeTypes}
            zoomOnScroll={false}
            zoomOnPinch={false}
            panOnDrag={false}
            panOnScroll={false}
            preventScrolling={false}
          />
        )}
      </WorkflowWrapper>
    </DigestDemoFlowProvider>
  );
}

const edges: Edge[] = [
  { id: 'e-1-2', source: '1', target: '2' },
  { id: 'e-2-3', source: '2', target: '3' },
];

const NODE_INITIAL_X = 20;
const NODE_INITIAL_Y = 20;
const NODE_DIST = 150;

const nodes: Node[] = [
  {
    id: '1',
    type: 'triggerNode',
    data: {
      label: 'Trigger',
    },
    position: { x: NODE_INITIAL_X, y: NODE_INITIAL_Y },
  },
  {
    id: '2',
    type: 'digestNode',
    data: {
      label: 'Digest',
    },
    position: { x: NODE_INITIAL_X, y: NODE_INITIAL_Y + NODE_DIST },
  },
  {
    id: '3',
    type: 'emailNode',
    data: {
      label: 'Email',
    },
    position: { x: NODE_INITIAL_X, y: NODE_INITIAL_Y + NODE_DIST * 2 },
  },
];

const nodeTypes = { triggerNode: TriggerNode, digestNode: DigestNode, emailNode: EmailNode };


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect } from 'react';
import { Skeleton } from '@mantine/core';
import { useResizeObserver } from '@mantine/hooks';
import ReactFlow, { Edge, Node, useReactFlow } from 'react-flow-renderer';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/digest-demo-flow/DigestDemoFlowProvider.tsx
Tamaño: 5242 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { ReactNode, useCallback, useContext, useEffect, useMemo, useState } from 'react';
import { useMutation } from '@tanstack/react-query';
import {
  INotificationTemplateStep,
  IUpdateNotificationTemplateDto,
  StepTypeEnum,
  IDigestRegularMetadata,
} from '@novu/shared';

import { testTrigger } from '../../../api/notification-templates';
import { useAuth } from '../../../hooks/useAuth';
import { useDebounce } from '../../../hooks';
import { useTemplateFetcher, useUpdateTemplate } from '../../../api/hooks';

interface IDigestDemoFlowProviderState {
  isRunningDigest: boolean;
  triggerCount: number;
  digestInterval: number;
  emailsSentCount: number;
  hoveredHintId?: string;
}

interface IDigestDemoFlowContextProps extends IDigestDemoFlowProviderState {
  isReadOnly: boolean;
  updateDigestInterval: (interval: number) => void;
  runTrigger: () => void;
  setHoveredHintId: (hintId?: string) => void;
}

const DigestDemoFlowContext = React.createContext<IDigestDemoFlowContextProps>({
  isReadOnly: true,
  isRunningDigest: true,
  digestInterval: 10,
  triggerCount: 0,
  emailsSentCount: 0,
  updateDigestInterval: (interval: number) => {},
  runTrigger: () => {},
  setHoveredHintId: (hintId?: string) => {},
});

export const useDigestDemoFlowContext = () => useContext(DigestDemoFlowContext);

export const DigestDemoFlowProvider = ({
  children,
  isReadOnly,
  templateId,
  onRunTriggerClick,
  onDigestIntervalChange,
}: {
  children: ReactNode;
  isReadOnly: boolean;
  templateId?: string;
  onRunTriggerClick?: () => void;
  onDigestIntervalChange?: (interval: number) => void;
}) => {
  const [{ isRunningDigest, triggerCount, digestInterval, emailsSentCount, hoveredHintId }, setState] =
    useState<IDigestDemoFlowProviderState>({
      isRunningDigest: false,
      triggerCount: 0,
      digestInterval: 10,
      emailsSentCount: 0,
    });
  const { currentUser } = useAuth();
  const { template } = useTemplateFetcher(
    { templateId },
    {
      enabled: !isReadOnly && !!templateId,
      refetchOnWindowFocus: false,
      onSuccess: (fetchedTemplate) => {
        const digest: INotificationTemplateStep | undefined = (
          fetchedTemplate.steps as INotificationTemplateStep[]
        ).find((step) => step.template?.type === StepTypeEnum.DIGEST);
        if (digest) {
          setState((state) => ({
            ...state,
            digestInterval: (digest.metadata as IDigestRegularMetadata)?.amount ?? 10,
          }));
        }
      },
    }
  );
  const { updateTemplateMutation } = useUpdateTemplate();
  const debouncedUpdateTemplate = useDebounce((args: { id: string; data: Partial<IUpdateNotificationTemplateDto> }) => {
    updateTemplateMutation(args);
    onDigestIntervalChange?.(digestInterval);
  }, 1000);
  const { mutateAsync: testTriggerMutation } = useMutation(testTrigger);

  const updateDigestInterval = useCallback(
    (interval: number) => {
      setState((state) => ({ ...state, digestInterval: interval }));

      if (template?._id) {
        const steps = template.steps.map((step) => {
          if (step.template?.type === StepTypeEnum.DIGEST) {
            return { ...step, metadata: { ...step.metadata, amount: interval } };
          }

          return step;
        });

        debouncedUpdateTemplate({ id: template._id, data: { steps } });
      }
    },
    [debouncedUpdateTemplate, template]
  );

  const runTrigger = useCallback(() => {
    if (template && currentUser) {
      setState((state) => ({ ...state, triggerCount: state.triggerCount + 1 }));

      testTriggerMutation({
        name: template.triggers[0].identifier,
        to: [
          {
            subscriberId: currentUser._id,
            email: currentUser.email,
          },
        ],
        payload: {
          __source: 'digest-playground',
        },
        overrides: {},
      });

      onRunTriggerClick?.();
    }
  }, [template, currentUser, onRunTriggerClick, testTriggerMutation]);

  const startDigestTimer = useCallback(() => {
    setTimeout(() => {
      setState((state) => ({
        ...state,
        isRunningDigest: false,
        triggerCount: 0,
        emailsSentCount: state.emailsSentCount + 1,
      }));
    }, digestInterval * 1000);
  }, [digestInterval]);

  const setHoveredHintId = useCallback((hintId?: string) => {
    setState((state) => ({
      ...state,
      hoveredHintId: hintId,
    }));
  }, []);

  useEffect(() => {
    if (template && !isRunningDigest && triggerCount > 0) {
      setState((state) => ({ ...state, isRunningDigest: true }));

      startDigestTimer();
    }
  }, [template, isRunningDigest, triggerCount, startDigestTimer]);

  const value = useMemo(
    () => ({
      isReadOnly,
      isRunningDigest,
      digestInterval,
      triggerCount,
      emailsSentCount,
      hoveredHintId,
      updateDigestInterval,
      runTrigger,
      setHoveredHintId,
    }),
    [
      isReadOnly,
      isRunningDigest,
      digestInterval,
      triggerCount,
      emailsSentCount,
      hoveredHintId,
      updateDigestInterval,
      runTrigger,
      setHoveredHintId,
    ]
  );

  return <DigestDemoFlowContext.Provider value={value}>{children}</DigestDemoFlowContext.Provider>;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { ReactNode, useCallback, useContext, useEffect, useMemo, useState } from 'react';
import { useMutation } from '@tanstack/react-query';
import {
INotificationTemplateStep,
IUpdateNotificationTemplateDto,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/digest-demo-flow/DigestNode.tsx
Tamaño: 3094 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Handle, Position } from 'react-flow-renderer';
import { createStyles, NumberInput, Loader } from '@mantine/core';
import styled from '@emotion/styled';

import { CountdownTimer, DigestAction, colors } from '@novu/design-system';
import { useEffect, useState } from 'react';
import { useInterval } from '@mantine/hooks';
import { NodeStepWithPopover } from './NodeStepWithPopover';
import { useDigestDemoFlowContext } from './DigestDemoFlowProvider';
import { Indicator } from './Indicator';
import { useDataRef } from '../../../hooks';

const LoaderStyled = styled(Loader)`
  position: absolute;
  bottom: 4px;
  right: 4px;
`;

export const useNumberInputStyles = createStyles((theme) => {
  const dark = theme.colorScheme === 'dark';

  return {
    icon: {
      color: dark ? colors.white : colors.B40,
      width: 24,
      height: 24,
      top: 8,
    },
    input: {
      fontSize: 16,
      textAlign: 'center',
      paddingLeft: '24px !important',
      border: 'none',
      width: 110,
      backgroundColor: 'transparent',
      '&:disabled': {
        backgroundColor: 'transparent',
      },
    },
    control: {
      border: 'none',
      borderRadius: 4,
    },
  };
});

export function DigestNode({ data, id }: { data: any; id: string }) {
  const { isReadOnly, triggerCount, isRunningDigest, digestInterval, updateDigestInterval } =
    useDigestDemoFlowContext();
  const { classes } = useNumberInputStyles();

  const [seconds, setSeconds] = useState(0);
  const interval = useInterval(() => setSeconds((sec) => sec - 1), 1000);
  const intervalRef = useDataRef({ interval, digestInterval });

  useEffect(() => {
    const { interval: intervalObject, digestInterval: currentDigestInterval } = intervalRef.current;
    if (isRunningDigest) {
      setSeconds(currentDigestInterval);
      intervalObject.start();
    } else {
      intervalObject.stop();
    }

    return intervalObject.stop;
  }, [isRunningDigest, intervalRef]);

  const digestIntervalDisplay = !isRunningDigest ? digestInterval : seconds;

  return (
    <NodeStepWithPopover
      data={data}
      id={id}
      Icon={DigestAction}
      ContentItem={
        <>
          <Indicator isShown={!isReadOnly && triggerCount > 0} value={triggerCount > 99 ? '99' : `${triggerCount}`} />
          {isRunningDigest && <LoaderStyled color={colors.B70} size={16} />}
        </>
      }
      ActionItem={
        !isReadOnly && (
          <NumberInput
            value={digestIntervalDisplay}
            onChange={updateDigestInterval}
            max={30}
            min={10}
            parser={(value) => (value ?? '').replace(/( \w+)|(\D{1,3})/g, '')}
            formatter={(value) => `${value} sec`}
            icon={<CountdownTimer />}
            disabled={isRunningDigest}
            classNames={classes}
          />
        )
      }
      Handlers={() => {
        return (
          <>
            <Handle type="target" id="b" position={Position.Top} />
            <Handle type="source" id="a" position={Position.Bottom} />
          </>
        );
      }}
    />
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Handle, Position } from 'react-flow-renderer';
import { createStyles, NumberInput, Loader } from '@mantine/core';
import styled from '@emotion/styled';
import { CountdownTimer, DigestAction, colors } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/digest-demo-flow/EmailNode.tsx
Tamaño: 1016 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Handle, Position } from 'react-flow-renderer';

import { EmailFilled } from '@novu/design-system';
import { NodeStepWithPopover } from './NodeStepWithPopover';
import { useDigestDemoFlowContext } from './DigestDemoFlowProvider';
import { Indicator } from './Indicator';
import { useAuth } from '../../../hooks/useAuth';

export function EmailNode({ data, id }: { data: any; id: string }) {
  const { currentUser } = useAuth();
  const { isReadOnly, emailsSentCount } = useDigestDemoFlowContext();
  data.email = currentUser?.email ?? '';

  return (
    <NodeStepWithPopover
      data={data}
      id={id}
      Icon={EmailFilled}
      ContentItem={
        !isReadOnly && (
          <>
            <Indicator isShown={emailsSentCount > 0} value={emailsSentCount > 99 ? '99' : `${emailsSentCount}`} />
          </>
        )
      }
      Handlers={() => {
        return (
          <>
            <Handle type="target" id="b" position={Position.Top} />
          </>
        );
      }}
    />
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Handle, Position } from 'react-flow-renderer';
import { EmailFilled } from '@novu/design-system';
import { NodeStepWithPopover } from './NodeStepWithPopover';
import { useDigestDemoFlowContext } from './DigestDemoFlowProvider';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/digest-demo-flow/Indicator.tsx
Tamaño: 853 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useRef } from 'react';
import styled from '@emotion/styled';

import { colors } from '@novu/design-system';

const IndicatorHolder = styled.span<{ isShown }>`
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0;
  right: 0;
  transform: translate(50%, -50%);
  min-width: 24px;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background: ${colors.horizontal};
  font-size: 14px;
  color: ${colors.white};
  opacity: ${({ isShown }) => (isShown ? 1 : 0)};
  transition: opacity 0.3s ease-in-out;
`;

export const Indicator = ({ isShown, value }: { isShown: boolean; value: string }) => {
  const previousValue = useRef(value);
  if (isShown) {
    previousValue.current = value;
  }

  return <IndicatorHolder isShown={isShown}>{isShown ? value : previousValue.current}</IndicatorHolder>;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useRef } from 'react';
import styled from '@emotion/styled';
import { colors } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/digest-demo-flow/NodeStepWithPopover.tsx
Tamaño: 4153 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { useEffect, useState } from 'react';

import { useLocation, useParams } from 'react-router-dom';

import { Popover } from '@novu/design-system';
import styled from '@emotion/styled';
import {
  guidePreview,
  guidePlayground,
  GuideTitleEnum,
  IBeat,
  HINT_MIDDLE_OPACITY,
  HINT_VISIBLE_OPACITY,
} from './consts';
import { ROUTES } from '../../../constants/routes';
import { parseUrl } from '../../../utils/routeUtils';
import { OnBoardingAnalyticsEnum } from '../../../pages/quick-start/consts';
import { useSegment } from '../../providers/SegmentProvider';
import { useDigestDemoFlowContext } from './DigestDemoFlowProvider';
import { NodeStep } from '../../workflow';

const getOpacity = (id: string, hoveredHintId?: string, sequence?: { opacity: number }): number => {
  if (hoveredHintId) {
    return hoveredHintId === id ? HINT_VISIBLE_OPACITY : HINT_MIDDLE_OPACITY;
  }

  return sequence?.opacity ?? HINT_VISIBLE_OPACITY;
};

export function NodeStepWithPopover({
  data,
  id,
  Handlers,
  Icon,
  ActionItem,
  ContentItem,
}: {
  data: { label: string; email?: string };
  id: string;
  Handlers: React.FC<any>;
  Icon: React.FC<any>;
  ActionItem?: React.ReactNode;
  ContentItem?: React.ReactNode;
}) {
  const { hoveredHintId, setHoveredHintId } = useDigestDemoFlowContext();
  const segment = useSegment();
  const { counter } = useCounter();
  const [sequence, setSequence] = useState<IBeat>();
  const { pathname } = useLocation();
  const { templateId = '' } = useParams<{ templateId: string }>();
  const digestPlaygroundPathname = parseUrl(ROUTES.WORKFLOWS_DIGEST_PLAYGROUND, { templateId });
  const isDigestPlayground = pathname === digestPlaygroundPathname;

  const label = data.label.toLowerCase();
  const popoverData = isDigestPlayground ? guidePlayground[label] : guidePreview[label];
  const titleGradient =
    popoverData.title === GuideTitleEnum.DIGEST_PREVIEW || popoverData.title === GuideTitleEnum.DIGEST_PLAYGROUND
      ? 'blue'
      : 'red';

  const EMAIL_PLACEHOLDER = '{{email}}';
  const description = !popoverData.description.includes(EMAIL_PLACEHOLDER)
    ? popoverData.description
    : popoverData.description.replace(EMAIL_PLACEHOLDER, data?.email || '');

  function onUrlClickHandler() {
    segment.track(`${OnBoardingAnalyticsEnum.BUILD_WORKFLOW_NODE_POPOVER_LEARN_MORE_CLICK}`, {
      channel: label,
    });
  }

  useEffect(() => {
    setSequence(popoverData.sequence[counter.toString()] as IBeat);
  }, [counter, popoverData]);

  const onDropdownMouseEnter = () => {
    setHoveredHintId(id);
  };

  const onDropdownMouseLeave = () => {
    setHoveredHintId(undefined);
  };

  return (
    <Popover
      withArrow
      withinPortal
      opened={sequence?.open || false}
      transition="rotate-left"
      transitionDuration={600}
      opacity={getOpacity(id, hoveredHintId, sequence)}
      target={
        <StyledDiv onMouseEnter={onDropdownMouseEnter} onMouseLeave={onDropdownMouseLeave}>
          <NodeStep Handlers={Handlers} Icon={Icon} data={data} ActionItem={ActionItem} ContentItem={ContentItem} />
        </StyledDiv>
      }
      title={popoverData.title}
      titleGradient={titleGradient}
      description={description}
      url={popoverData.docsUrl}
      onUrlClick={onUrlClickHandler}
      onDropdownMouseEnter={onDropdownMouseEnter}
      onDropdownMouseLeave={onDropdownMouseLeave}
    />
  );
}

function useCounter() {
  const INTERVAL = 1500;
  const [counter, setCounter] = useState(1);

  useEffect(() => {
    const interval = setInterval(() => {
      if (counter >= 5) {
        clearInterval(interval);

        return;
      }

      setCounter(counter + 1);
    }, INTERVAL);

    return () => {
      clearInterval(interval);
    };
  }, [counter]);

  return { counter };
}

const StyledDiv = styled.div`
  svg {
    stop:first-of-type {
      stop-color: #dd2476 !important;
    }
    stop:last-child {
      stop-color: #ff512f !important;
    }
  }

  [data-blue-gradient-svg] {
    stop:first-of-type {
      stop-color: #4c6dd4 !important;
    }
    stop:last-child {
      stop-color: #66d9e8 !important;
    }
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { useEffect, useState } from 'react';
import { useLocation, useParams } from 'react-router-dom';
import { Popover } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/digest-demo-flow/TriggerNode.tsx
Tamaño: 832 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Handle, Position } from 'react-flow-renderer';

import { Button, BoltOutlinedGradient } from '@novu/design-system';
import { useDigestDemoFlowContext } from './DigestDemoFlowProvider';
import { NodeStepWithPopover } from './NodeStepWithPopover';

export function TriggerNode({ data, id }: { data: any; id: string }) {
  const { isReadOnly, runTrigger } = useDigestDemoFlowContext();

  return (
    <NodeStepWithPopover
      data={data}
      id={id}
      Icon={BoltOutlinedGradient}
      ActionItem={
        !isReadOnly && (
          <Button variant="outline" onClick={runTrigger}>
            Run Trigger
          </Button>
        )
      }
      Handlers={() => {
        return (
          <>
            <Handle type="source" id="a" position={Position.Bottom} />
          </>
        );
      }}
    />
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Handle, Position } from 'react-flow-renderer';
import { Button, BoltOutlinedGradient } from '@novu/design-system';
import { useDigestDemoFlowContext } from './DigestDemoFlowProvider';
import { NodeStepWithPopover } from './NodeStepWithPopover';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/digest-demo-flow/consts.ts
Tamaño: 3687 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';

export enum GuideTitleEnum {
  TRIGGER_PREVIEW = 'Trigger',
  TRIGGER_PLAYGROUND = 'Run trigger multiple times',
  DIGEST_PREVIEW = 'Digest',
  DIGEST_PLAYGROUND = 'Set-up any time interval ',
  CHANNELS_PREVIEW = 'Channels',
  CHANNELS_PLAYGROUND = 'It’s time to check your email',
}
export interface IGuide {
  title: GuideTitleEnum;
  description: string;
  docsUrl?: string;
  sequence: Record<number, IBeat>;
}

export interface IBeat {
  open: boolean;
  opacity: number;
}

export const HINT_HIDDEN_OPACITY = 0;
export const HINT_MIDDLE_OPACITY = 0.4;
export const HINT_VISIBLE_OPACITY = 1;

export const guidePreview: Record<string, IGuide> = {
  trigger: {
    title: GuideTitleEnum.TRIGGER_PREVIEW,
    description: 'Use the server SDK in your app for a specific trigger. ',
    docsUrl: `https://docs.novu.co/api-reference/events/trigger-event${UTM_CAMPAIGN_QUERY_PARAM}`,
    sequence: {
      1: { open: false, opacity: HINT_HIDDEN_OPACITY },
      2: { open: true, opacity: HINT_VISIBLE_OPACITY },
      3: { open: true, opacity: HINT_MIDDLE_OPACITY },
      4: { open: true, opacity: HINT_MIDDLE_OPACITY },
      5: { open: true, opacity: HINT_MIDDLE_OPACITY },
    },
  },
  digest: {
    title: GuideTitleEnum.DIGEST_PREVIEW,
    description: 'Aggregates multiple events into a precise notification. ',
    docsUrl: `https://docs.novu.co/workflow/digest${UTM_CAMPAIGN_QUERY_PARAM}`,
    sequence: {
      1: { open: false, opacity: HINT_HIDDEN_OPACITY },
      2: { open: false, opacity: HINT_HIDDEN_OPACITY },
      3: { open: true, opacity: HINT_VISIBLE_OPACITY },
      4: { open: true, opacity: HINT_MIDDLE_OPACITY },
      5: { open: true, opacity: HINT_VISIBLE_OPACITY },
    },
  },
  email: {
    title: GuideTitleEnum.CHANNELS_PREVIEW,
    description: 'Build desired order of channels. ',
    docsUrl: `https://docs.novu.co/integrations/providers/introduction${UTM_CAMPAIGN_QUERY_PARAM}`,
    sequence: {
      1: { open: false, opacity: HINT_HIDDEN_OPACITY },
      2: { open: false, opacity: HINT_HIDDEN_OPACITY },
      3: { open: false, opacity: HINT_HIDDEN_OPACITY },
      4: { open: true, opacity: HINT_VISIBLE_OPACITY },
      5: { open: true, opacity: HINT_MIDDLE_OPACITY },
    },
  },
};

export const guidePlayground: Record<string, IGuide> = {
  trigger: {
    title: GuideTitleEnum.TRIGGER_PLAYGROUND,
    description: 'Once the event is triggered, the app sends it to digest',
    sequence: {
      1: { open: false, opacity: HINT_HIDDEN_OPACITY },
      2: { open: true, opacity: HINT_VISIBLE_OPACITY },
      3: { open: true, opacity: HINT_MIDDLE_OPACITY },
      4: { open: true, opacity: HINT_MIDDLE_OPACITY },
      5: { open: true, opacity: HINT_MIDDLE_OPACITY },
    },
  },
  digest: {
    title: GuideTitleEnum.DIGEST_PLAYGROUND,
    description: 'Digest engine aggregates multiple events and... ',
    sequence: {
      1: { open: false, opacity: HINT_HIDDEN_OPACITY },
      2: { open: false, opacity: HINT_HIDDEN_OPACITY },
      3: { open: true, opacity: HINT_VISIBLE_OPACITY },
      4: { open: true, opacity: HINT_MIDDLE_OPACITY },
      5: { open: true, opacity: HINT_VISIBLE_OPACITY },
    },
  },
  email: {
    title: GuideTitleEnum.CHANNELS_PLAYGROUND,
    description: 'As soon as the specified time runs out, we will send a digest email to: {{email}}',
    sequence: {
      1: { open: false, opacity: HINT_HIDDEN_OPACITY },
      2: { open: false, opacity: HINT_HIDDEN_OPACITY },
      3: { open: false, opacity: HINT_HIDDEN_OPACITY },
      4: { open: true, opacity: HINT_VISIBLE_OPACITY },
      5: { open: true, opacity: HINT_MIDDLE_OPACITY },
    },
  },
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  enum
- export  interface
- export  interface
- export  const
- export  const
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/digest-demo-flow/index.ts
Tamaño: 51 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export { DigestDemoFlow } from './DigestDemoFlow';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/in-app-onboarding/InAppNode.tsx
Tamaño: 472 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Handle, Position } from 'react-flow-renderer';
import { InAppFilled } from '@novu/design-system';
import { NodeStep } from '../../workflow';

export function InAppNode({ data }: { data: { label: string; email?: string } }) {
  return (
    <NodeStep
      data={data}
      Icon={InAppFilled}
      Handlers={() => {
        return (
          <>
            <Handle type="target" id="b" position={Position.Top} />
          </>
        );
      }}
    />
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Handle, Position } from 'react-flow-renderer';
import { InAppFilled } from '@novu/design-system';
import { NodeStep } from '../../workflow';
export function InAppNode({ data }: { data: { label: string; email?: string } }) {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/in-app-onboarding/InAppSandbox.tsx
Tamaño: 3093 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Group, Overlay } from '@mantine/core';
import { colors, shadows, Text } from '@novu/design-system';
import InAppSandboxWorkflow from './InAppSandboxWorkflow';
import { YourAppHeaderSection } from './YourAppHeaderSection';

export function InAppSandbox({ showOverlay = false }: { showOverlay?: boolean }) {
  return (
    <Wrapper>
      <YourAppWrapper>
        {showOverlay && (
          <Overlay
            zIndex={5}
            opacity={0.3}
            color="#000"
            sx={{
              borderRadius: '7px',
            }}
          />
        )}
        <TitleBar>
          <Ellipses isTransparent={false} />
          <Text>Your app or Demo app</Text>
          <Ellipses isTransparent={true} />
        </TitleBar>
        <YourAppContent>
          <YourAppHeaderSection />
        </YourAppContent>
        <NovuUIWrapper>
          <TitleBar>
            <Ellipses isTransparent={false} />
            <Text>Novu UI</Text>
            <Ellipses isTransparent={true} />
          </TitleBar>
          <GrowContainer>
            <InAppSandboxWorkflow />
          </GrowContainer>
        </NovuUIWrapper>
      </YourAppWrapper>
    </Wrapper>
  );
}

function Ellipses({ isTransparent }: { isTransparent: boolean }) {
  return (
    <Group spacing={4}>
      <Ellipse isTransparent={isTransparent} />
      <Ellipse isTransparent={isTransparent} />
      <Ellipse isTransparent={isTransparent} />
    </Group>
  );
}

const Wrapper = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
`;

const YourAppWrapper = styled.div`
  position: relative;
  width: 800px;
  height: 415px;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  gap: 8px;
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.BGDark : colors.BGLight)};
  border-radius: 8px;
  box-shadow: ${shadows.dark};
`;

const YourAppContent = styled.div`
  flex-grow: 1;
  padding-inline: 16px;
  overflow: hidden;
`;

const NovuUIWrapper = styled.div`
  position: absolute;
  top: 48px;
  left: -28px;
  border-radius: 8px;
  width: 475px;
  height: 352px;
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B15 : colors.BGLight)};

  box-shadow: ${({ theme }) => (theme.colorScheme === 'dark' ? shadows.dark : shadows.medium)};
  display: flex;
  flex-direction: column;
  z-index: 6;
`;

const GrowContainer = styled.div`
  flex: 1;
`;

const TitleBar = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-radius: 8px 8px 0 0;
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B20 : colors.white)};
  height: 28px;
  min-height: 28px;
  padding: 4px 12px;
  width: 100%;
  overflow: hidden;
`;

const Ellipse = styled.div<{ isTransparent: boolean }>`
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: ${({ isTransparent, theme }) => {
    if (isTransparent) {
      return 'transparent';
    }

    return theme.colorScheme === 'dark' ? colors.BGDark : colors.B70;
  }};
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Group, Overlay } from '@mantine/core';
import { colors, shadows, Text } from '@novu/design-system';
import InAppSandboxWorkflow from './InAppSandboxWorkflow';
import { YourAppHeaderSection } from './YourAppHeaderSection';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/in-app-onboarding/InAppSandboxWorkflow.tsx
Tamaño: 1604 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import ReactFlow, { Background, BackgroundVariant, Edge, Node } from 'react-flow-renderer';

import { useMantineColorScheme } from '@mantine/core';

import { colors } from '@novu/design-system';
import { InAppNode } from './InAppNode';
import { TriggerNode } from './TriggerNode';
import { WorkflowWrapper } from '../common';

export default function InAppSandboxWorkflow() {
  const { colorScheme } = useMantineColorScheme();

  return (
    <WorkflowWrapper height="100%">
      <ReactFlow
        fitView
        fitViewOptions={{ minZoom: 1, maxZoom: 1 }}
        minZoom={1}
        maxZoom={1}
        nodes={nodes}
        edges={edges}
        nodeTypes={nodeTypes}
        zoomOnScroll={false}
        zoomOnPinch={false}
        panOnDrag={false}
        panOnScroll={false}
        preventScrolling={false}
      >
        <Background
          size={1}
          gap={12}
          variant={BackgroundVariant.Dots}
          color={colorScheme === 'dark' ? colors.BGDark : colors.B80}
        />
      </ReactFlow>
    </WorkflowWrapper>
  );
}

const edges: Edge[] = [{ id: 'e-1-2', source: '1', target: '2' }];

const NODE_INITIAL_X = 20;
const NODE_INITIAL_Y = -10;
const NODE_DIST = 150;

const nodes: Node[] = [
  {
    id: '1',
    type: 'triggerNode',
    data: {
      label: 'Trigger',
    },
    position: { x: NODE_INITIAL_X, y: NODE_INITIAL_Y },
  },
  {
    id: '2',
    type: 'inAppNode',
    data: {
      label: 'In-App',
    },
    position: { x: NODE_INITIAL_X, y: NODE_INITIAL_Y + NODE_DIST },
  },
];

const nodeTypes = { triggerNode: TriggerNode, inAppNode: InAppNode };


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import ReactFlow, { Background, BackgroundVariant, Edge, Node } from 'react-flow-renderer';
import { useMantineColorScheme } from '@mantine/core';
import { colors } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/in-app-onboarding/SandboxNotificationCenter.tsx
Tamaño: 1244 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { useMantineColorScheme } from '@mantine/core';
import { NotificationCenter, NovuProvider } from '@novu/notification-center';
import { API_ROOT, WS_URL } from '../../../config';
import { useEnvironment } from '../../../hooks';
import { inAppSandboxSubscriberId } from '../../../pages/quick-start/consts';

export function SandboxNotificationCenter() {
  const { environment } = useEnvironment();

  return (
    <NovuProvider
      backendUrl={API_ROOT}
      socketUrl={WS_URL}
      subscriberId={inAppSandboxSubscriberId}
      applicationIdentifier={environment?.identifier as string}
    >
      <PopoverWrapper />
    </NovuProvider>
  );
}

function PopoverWrapper() {
  const { colorScheme } = useMantineColorScheme();

  return (
    <Wrapper>
      <NotificationCenter colorScheme={colorScheme} footer={() => <>{null}</>} showUserPreferences={false} />
    </Wrapper>
  );
}

const Wrapper = styled.div`
  width: 100%;
  height: 100%;

  & > div {
    max-height: 316px;
    overflow: hidden;
    border-radius: 7px;
    width: 320px;
    max-width: 320px;
  }

  & .infinite-scroll-component {
    // !important is needed to override the inline style
    height: 245px !important;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { useMantineColorScheme } from '@mantine/core';
import { NotificationCenter, NovuProvider } from '@novu/notification-center';
import { API_ROOT, WS_URL } from '../../../config';
import { useEnvironment } from '../../../hooks';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/in-app-onboarding/SandboxSetupSuccess.tsx
Tamaño: 227 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Stack } from '@mantine/core';
import { InAppSandbox } from './InAppSandbox';

export function SandBoxSetupSuccess() {
  return (
    <Stack align="center">
      <InAppSandbox showOverlay={true} />
    </Stack>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Stack } from '@mantine/core';
import { InAppSandbox } from './InAppSandbox';
export function SandBoxSetupSuccess() {
return (
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/in-app-onboarding/TriggerNode.tsx
Tamaño: 6532 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Handle, Position } from 'react-flow-renderer';
import { BoltOutlinedGradient, Button, colors, Playground, shadows, Text, Title } from '@novu/design-system';
import styled from '@emotion/styled';
import { createStyles, Group, Popover, Stack, useMantineColorScheme } from '@mantine/core';
import type { INotificationTemplate, IResponseError } from '@novu/shared';
import {
  ActorTypeEnum,
  ICreateNotificationTemplateDto,
  StepTypeEnum,
  SystemAvatarIconEnum,
  WorkflowCreationSourceEnum,
} from '@novu/shared';
import { useMutation } from '@tanstack/react-query';
import { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';

import { createTemplate, testTrigger } from '../../../api/notification-templates';
import { useEffectOnce, useNotificationGroup, useTemplates } from '../../../hooks';
import {
  inAppSandboxSubscriberId,
  notificationTemplateName,
  OnBoardingAnalyticsEnum,
} from '../../../pages/quick-start/consts';
import { NodeStep } from '../../workflow';
import { useSegment } from '../../providers/SegmentProvider';
import { errorMessage } from '../../../utils/notifications';
import { FIRST_100_WORKFLOWS } from '../../../constants/workflowConstants';

const useStyles = createStyles((theme) => ({
  dropdown: {
    padding: 24,
    maxHeight: 196,
    borderRadius: 7,
    boxShadow: theme.colorScheme === 'dark' ? shadows.dark : shadows.medium,
    border: 'none',
    backgroundColor: theme.colorScheme === 'dark' ? colors.B30 : colors.white,
  },
  arrow: {
    backgroundColor: theme.colorScheme === 'dark' ? colors.B30 : colors.white,
    border: 'none',
    boxShadow: theme.colorScheme === 'dark' ? shadows.dark : shadows.medium,
  },
}));

export function TriggerNode({ data }: { data: { label: string; email?: string } }) {
  const { framework } = useParams();

  return (
    <NodeStep
      data={data}
      Icon={BoltOutlinedGradient}
      ActionItem={!framework && <TriggerPopover />}
      Handlers={() => {
        return (
          <>
            <Handle type="source" id="a" position={Position.Bottom} />
          </>
        );
      }}
    />
  );
}

function TriggerButton({ setOpened }: { setOpened: (value: boolean) => void }) {
  const [notificationNumber, setNotificationNumber] = useState(1);
  const { templates = [], loading: templatesLoading } = useTemplates(FIRST_100_WORKFLOWS);

  const segment = useSegment();

  const { groups, loading: notificationGroupLoading } = useNotificationGroup();

  const { mutate: createNotificationTemplate, isLoading: createTemplateLoading } = useMutation<
    INotificationTemplate & { __source?: string },
    IResponseError,
    { template: ICreateNotificationTemplateDto; params: { __source?: string } }
  >((data) => createTemplate(data.template, data.params), {
    onError: (error) => {
      errorMessage(error?.message);
    },
  });

  const onboardingNotificationTemplate = templates.find((template) => template.name.includes(notificationTemplateName));
  const hasToCreateOnboardingTemplate =
    !templatesLoading && !notificationGroupLoading && !createTemplateLoading && !onboardingNotificationTemplate;

  useEffectOnce(() => {
    const payloadToCreate = {
      notificationGroupId: groups[0]._id,
      isBlueprint: false,
      name: notificationTemplateName,
      active: true,
      draft: false,
      steps: [
        {
          template: {
            type: StepTypeEnum.IN_APP,
            content: 'Test notification {{number}}',
            actor: {
              type: ActorTypeEnum.SYSTEM_ICON,
              data: SystemAvatarIconEnum.SUCCESS,
            },
          },
        },
      ],
    };

    createNotificationTemplate({
      template: payloadToCreate as unknown as ICreateNotificationTemplateDto,
      params: { __source: WorkflowCreationSourceEnum.ONBOARDING_IN_APP },
    });
  }, hasToCreateOnboardingTemplate);

  async function handleRunTrigger() {
    setOpened(false);
    if (!onboardingNotificationTemplate) {
      errorMessage('No onboarding workflow found, Try again later.');
    }
    await testTrigger({
      name: onboardingNotificationTemplate?.triggers[0].identifier,
      to: { subscriberId: inAppSandboxSubscriberId },
      payload: {
        __source: 'in-app-onboarding',
        number: notificationNumber,
      },
    });

    setNotificationNumber((prev) => prev + 1);
    segment.track(OnBoardingAnalyticsEnum.IN_APP_SANDBOX_RUN_TRIGGER_CLICK, { number: notificationNumber });
  }

  return (
    <Button variant="outline" onClick={handleRunTrigger}>
      Run Trigger
    </Button>
  );
}

function TriggerPopover() {
  const [opened, setOpened] = useState(false);

  const { classes } = useStyles();

  useEffect(() => {
    const timeout = setTimeout(() => {
      setOpened(true);
    }, 1000);

    return () => {
      clearTimeout(timeout);
    };
  }, []);

  return (
    <Popover
      withArrow
      withinPortal
      transition="rotate-left"
      transitionDuration={300}
      opened={opened}
      position="right"
      width={400}
      classNames={{
        dropdown: classes.dropdown,
        arrow: classes.arrow,
      }}
      middlewares={{ flip: false, shift: false }}
    >
      <Popover.Target>
        <div>
          <TriggerButton setOpened={setOpened} />
        </div>
      </Popover.Target>
      <Popover.Dropdown>
        <PopoverContent setOpened={setOpened} />
      </Popover.Dropdown>
    </Popover>
  );
}

function PopoverContent({ setOpened }: { setOpened: (opened: boolean) => void }) {
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';
  const textColor = isDark ? colors.B80 : colors.B70;
  const fillColor = isDark ? colors.B40 : colors.B70;

  return (
    <ContentWrapper>
      <Stack>
        <Group align="center" noWrap>
          <div>
            <Playground fill={fillColor} />
          </div>
          <Stack spacing={8}>
            <Title size={2}>Trigger a Notification!</Title>
            <Text rows={3} size="lg" color={textColor}>
              Run a trigger as if it was sent from your API and see how it might work in your app!
            </Text>
          </Stack>
        </Group>
        <Group position="right">
          <Button
            variant="gradient"
            onClick={() => {
              setOpened(false);
            }}
          >
            Got it
          </Button>
        </Group>
      </Stack>
    </ContentWrapper>
  );
}

const ContentWrapper = styled.div`
  max-width: 356px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Handle, Position } from 'react-flow-renderer';
import { BoltOutlinedGradient, Button, colors, Playground, shadows, Text, Title } from '@novu/design-system';
import styled from '@emotion/styled';
import { createStyles, Group, Popover, Stack, useMantineColorScheme } from '@mantine/core';
import type { INotificationTemplate, IResponseError } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/in-app-onboarding/YourAppHeaderSection.tsx
Tamaño: 1789 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { createStyles, Popover } from '@mantine/core';
import { colors, shadows, Bell, User } from '@novu/design-system';
import { SandboxNotificationCenter } from './SandboxNotificationCenter';

const useStyles = createStyles((theme) => ({
  dropdown: {
    padding: 0,
    maxHeight: 316,
    borderRadius: 7,
    boxShadow: theme.colorScheme === 'dark' ? shadows.dark : shadows.medium,
    border: 'none',
    backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.white,
  },
  arrow: {
    backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.white,
    border: 'none',
    boxShadow: theme.colorScheme === 'dark' ? shadows.dark : shadows.medium,
  },
}));

export function YourAppHeaderSection() {
  const { classes } = useStyles();

  return (
    <Wrapper>
      <div>
        <Popover
          classNames={{
            dropdown: classes.dropdown,
            arrow: classes.arrow,
          }}
          width={320}
          opened={true}
          position="bottom-end"
          arrowOffset={90}
          withArrow
          zIndex={3} // Fix for the dropdown being on the top of WEB notification-center dropdown
          middlewares={{ flip: false, shift: false }}
        >
          <Popover.Target>
            <div>
              <Bell color={colors.B60} />
            </div>
          </Popover.Target>
          <Popover.Dropdown>
            <SandboxNotificationCenter />
          </Popover.Dropdown>
        </Popover>
      </div>
      <div>
        <User />
      </div>
    </Wrapper>
  );
}

const Wrapper = styled.div`
  display: flex;
  justify-content: flex-end;
  align-items: center;
  height: 48px;
  width: 100%;
  background-color: transparent;
  padding: 15px 16px;
  gap: 32px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { createStyles, Popover } from '@mantine/core';
import { colors, shadows, Bell, User } from '@novu/design-system';
import { SandboxNotificationCenter } from './SandboxNotificationCenter';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/quick-start/in-app-onboarding/index.ts
Tamaño: 47 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export { InAppSandbox } from './InAppSandbox';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/settings/NovuBrandingSwitch.tsx
Tamaño: 2616 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useNavigate } from 'react-router-dom';
import styled from '@emotion/styled';
import { Group } from '@mantine/core';
import { Switch, Text, Button, Popover } from '@novu/design-system';
import { IS_SELF_HOSTED } from '../../config';
import { ROUTES } from '../../constants/routes';
import { useSubscription } from '../../ee/billing/hooks/useSubscription';
import { ApiServiceLevelEnum } from '@novu/shared';

const SwitchWrapper = styled.div`
  display: flex;
  align-items: center;
`;

const PopoverContent = () => {
  const navigate = useNavigate();

  return (
    <Group spacing={8}>
      <Text>
        {IS_SELF_HOSTED
          ? 'Upgrade to Cloud plans to remove Novu branding'
          : 'Upgrade your billing plan to remove Novu branding'}
      </Text>
      <Button
        size="xs"
        variant="light"
        onClick={() => {
          if (IS_SELF_HOSTED) {
            window.open('https://novu.co/pricing?utm_campaign=remove_branding_prompt', '_blank');
          } else {
            navigate(ROUTES.MANAGE_ACCOUNT_BILLING);
          }
        }}
      >
        {IS_SELF_HOSTED ? 'Upgrade Plan' : 'View plans'}
      </Button>
    </Group>
  );
};

type NovuBrandingSwitchProps = {
  id: string;
  value: boolean | undefined;
  onChange: (value: boolean) => void;
  isReadOnly?: boolean;
};

export function NovuBrandingSwitch({ id, value, onChange, isReadOnly }: NovuBrandingSwitchProps) {
  const { apiServiceLevel } = useSubscription();

  const isFreePlan = apiServiceLevel === ApiServiceLevelEnum.FREE;
  const disabled = isFreePlan || IS_SELF_HOSTED;
  const checked = disabled ? false : value;

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (disabled) {
      e.preventDefault();
      return;
    }
    onChange(e.target.checked);
  };

  return (
    <SwitchWrapper>
      {isFreePlan || IS_SELF_HOSTED ? (
        <Popover
          disabled={!disabled}
          position="top"
          withArrow={false}
          offset={12}
          width={250}
          target={
            <Switch
              label={checked ? 'Active' : 'Disabled'}
              data-test-id="remove-novu-branding"
              checked={checked}
              onChange={handleChange}
              disabled={isReadOnly}
            />
          }
          content={<PopoverContent />}
        />
      ) : (
        <Switch
          label={checked ? 'Active' : 'Disabled'}
          data-test-id="remove-novu-branding"
          checked={checked}
          onChange={handleChange}
          disabled={isReadOnly}
        />
      )}
    </SwitchWrapper>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useNavigate } from 'react-router-dom';
import styled from '@emotion/styled';
import { Group } from '@mantine/core';
import { Switch, Text, Button, Popover } from '@novu/design-system';
import { IS_SELF_HOSTED } from '../../config';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/settings/OrganizationSettings.tsx
Tamaño: 2754 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { OrganizationProfile } from '@clerk/clerk-react';
import { Appearance } from '@clerk/types';
import styled from '@emotion/styled';
import { Stack } from '@mantine/core';
import { Text } from '@novu/design-system';
import { IS_EE_AUTH_ENABLED } from '../../config';
import { useFetchOrganizationSettings } from '../../api/hooks/useFetchOrganizationSettings';
import { useUpdateOrganizationSettings } from '../../api/hooks/useUpdateOrganizationSettings';
import { NovuBrandingSwitch } from './NovuBrandingSwitch';

const SectionTitle = styled(Text)`
  font-size: 20px;
  font-weight: 600;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? '#FFF' : '#1A1A1A')};
  margin-bottom: 16px;
`;

const BrandingSection = styled.div`
  padding-top: 24px;
  margin-top: 24px;
  padding-bottom: 24px;
  margin-bottom: 24px;
`;

const BrandingRow = styled.div`
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 8px;
`;

const BrandingDescription = styled.div`
  font-size: 12px;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? '#A1A1AA' : '#6B7280')};
`;

export function OrganizationSettings({ clerkAppearance }: { clerkAppearance: Appearance }) {
  const { data: organizationSettings, isLoading: isLoadingSettings } = useFetchOrganizationSettings();
  const { updateSettings, isLoading: isUpdating } = useUpdateOrganizationSettings();

  const handleRemoveBrandingChange = (value: boolean) => {
    updateSettings({
      removeNovuBranding: value,
    });
  };

  const removeNovuBranding = organizationSettings?.data?.removeNovuBranding;

  if (!IS_EE_AUTH_ENABLED) {
    return (
      <OrganizationProfile appearance={clerkAppearance}>
        <OrganizationProfile.Page label="general" />
        <OrganizationProfile.Page label="members" />
      </OrganizationProfile>
    );
  }

  return (
    <Stack spacing={0}>
      {/* Branding Section */}
      <BrandingSection>
        <SectionTitle>Branding & Integrations</SectionTitle>
        <div>
          <BrandingRow>
            <Text size="sm" weight="bold">
              Remove Novu branding
            </Text>
            <NovuBrandingSwitch
              id="remove-branding"
              value={removeNovuBranding}
              onChange={handleRemoveBrandingChange}
              isReadOnly={isLoadingSettings || isUpdating}
            />
          </BrandingRow>
          <BrandingDescription>When enabled, removes Novu branding from your notifications.</BrandingDescription>
        </div>
      </BrandingSection>

      <OrganizationProfile appearance={clerkAppearance}>
        <OrganizationProfile.Page label="general" />
        <OrganizationProfile.Page label="members" />
      </OrganizationProfile>
    </Stack>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { OrganizationProfile } from '@clerk/clerk-react';
import { Appearance } from '@clerk/types';
import styled from '@emotion/styled';
import { Stack } from '@mantine/core';
import { Text } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/settings/index.ts
Tamaño: 122 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export { OrganizationSettings } from './OrganizationSettings';
export { NovuBrandingSwitch } from './NovuBrandingSwitch';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/shared/ProfileImage.styles.ts
Tamaño: 1128 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { css } from '@novu/novui/css';

export const previewContainerStyles = css({
  bgColor: {
    base: 'surface.popover',
    // TODO: Remove legacy colors, once the design system is updated
    _light: 'legacy.BGLight',
  },
  borderRadius: '0.75rem',
  position: 'relative',
  overflow: 'hidden',
  minWidth: '4.5rem',
  width: '4.5rem',
  height: '4.5rem',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',

  '& > img': {
    // TODO: use token values when available
    width: '3rem',
    height: '3rem',
    objectFit: 'contain',
  },

  '& > svg': {
    fill: 'typography.text.tertiary',
  },

  _hover: {
    '& .image-input': {
      display: 'flex',
    },
  },
});

export const imageUploadStyles = css({
  background: 'rgba(255, 255, 255, 0.02)',
  backdropFilter: 'blur(2px)',
  position: 'absolute',
  top: '0',
  left: '0',
  display: 'none',
  flexDirection: 'column',
  alignItems: 'center',
  justifyContent: 'center',
  gap: '0.25rem',
  height: '100%',
  width: '100%',
  cursor: 'pointer',
  color: 'typography.text.main',

  '& > svg': {
    fill: 'typography.text.main',
  },
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/shared/ProfileImage.tsx
Tamaño: 1095 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { ChangeEventHandler } from 'react';
import { IconPerson } from '@novu/design-system';
import { ControllerRenderProps } from 'react-hook-form';

import { previewContainerStyles } from './ProfileImage.styles';
import { UploadInput } from './UploadInput';

export interface ProfileImageProps {
  /**
   * **NOTE**: Value should be URL string
   */
  value?: string | null;
  /**
   * **NOTE**: convert the File value to string URL to display the image
   */
  onChange: ChangeEventHandler<HTMLInputElement>;
  name: ControllerRenderProps['name'];
  isDisabled?: boolean;
}

export const ProfileImage = React.forwardRef<HTMLInputElement, ProfileImageProps>(
  ({ name, onChange, value, isDisabled }, ref) => {
    return (
      <div className={previewContainerStyles} data-test-id="profile-image">
        {value ? (
          <img src={value} alt="image" data-test-id="preview-img" />
        ) : (
          <IconPerson size="72" data-test-id="person-icon" />
        )}
        {!isDisabled && <UploadInput ref={ref} name={name} onChange={onChange} />}
      </div>
    );
  }
);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { ChangeEventHandler } from 'react';
import { IconPerson } from '@novu/design-system';
import { ControllerRenderProps } from 'react-hook-form';
import { previewContainerStyles } from './ProfileImage.styles';
/**
/**
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/shared/UploadInput.tsx
Tamaño: 1241 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { useImperativeHandle } from 'react';
import { IconOutlineFileUpload, Text } from '@novu/design-system';

import { cx } from '@novu/novui/css';
import { ProfileImageProps } from './ProfileImage';
import { imageUploadStyles } from './ProfileImage.styles';

export const UploadInput = React.forwardRef<HTMLInputElement, Omit<ProfileImageProps, 'value'>>(
  ({ name, onChange }, forwardedRef) => {
    const fileInputRef = React.useRef<HTMLInputElement | null>(null);
    useImperativeHandle<HTMLInputElement | null, HTMLInputElement | null>(forwardedRef, () => fileInputRef.current, []);

    const handleUploadClick = () => {
      fileInputRef.current?.click();
    };

    return (
      <div
        className={cx(imageUploadStyles, 'image-input')}
        onClick={handleUploadClick}
        data-test-id="image-input-container"
      >
        <IconOutlineFileUpload size="20" data-test-id="file-upload-icon" />
        <input
          type="file"
          hidden
          ref={fileInputRef}
          accept="image/png, image/jpeg"
          data-test-id="image-file-input"
          name={name}
          onChange={onChange}
        />
        <Text data-test-id="upload-text">Upload</Text>
      </div>
    );
  }
);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { useImperativeHandle } from 'react';
import { IconOutlineFileUpload, Text } from '@novu/design-system';
import { cx } from '@novu/novui/css';
import { ProfileImageProps } from './ProfileImage';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/shared/index.tsx
Tamaño: 32 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

export * from './ProfileImage';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

export * from './ProfileImage';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/utils/GotAQuestionButton.tsx
Tamaño: 670 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useIntercom } from 'react-use-intercom';
import { Button, Size } from '@novu/design-system';
import { INTERCOM_APP_ID } from '../../config';

interface GotAQuestionButtonProps {
  mt: number;
  size: Size;
}

const isIntercomEnabled = !!INTERCOM_APP_ID;

export function GotAQuestionButton({ mt, size }: GotAQuestionButtonProps) {
  if (!isIntercomEnabled) {
    return null;
  }

  return <QuestionButton mt={mt} size={size} />;
}

function QuestionButton({ mt, size }: GotAQuestionButtonProps) {
  const { show } = useIntercom();

  const text = 'Got a question?';

  return (
    <Button mt={mt} size={size} onClick={show}>
      {text}
    </Button>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useIntercom } from 'react-use-intercom';
import { Button, Size } from '@novu/design-system';
import { INTERCOM_APP_ID } from '../../config';
interface GotAQuestionButtonProps {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/utils/ProductLead.tsx
Tamaño: 3672 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ActionIcon, Group, Title, useMantineTheme } from '@mantine/core';
import { useLocalStorage } from '@mantine/hooks';
import { CSSProperties, ReactNode, useEffect } from 'react';
import styled from '@emotion/styled';

import { Button, colors, Text, Calendar, Close } from '@novu/design-system';
import { IS_SELF_HOSTED } from '../../config';
import { useAuth } from '../../hooks/useAuth';
import { useSegment } from '../providers/SegmentProvider';
import { When } from './When';

export enum ProductLeadVariants {
  DEFAULT = 'default',
  COLUMN = 'column',
}

const WrapperHolder = styled.div<{ variant: ProductLeadVariants }>`
  display: flex;
  flex-direction: ${({ variant }) => (variant === ProductLeadVariants.COLUMN ? 'column' : 'row')};
  justify-content: space-between;
  gap: 24px;
`;

export const ProductLead = ({
  title,
  text,
  closeable = true,
  icon = null,
  id,
  variant = ProductLeadVariants.DEFAULT,
  style = {},
}: {
  title: string;
  text: string;
  closeable?: boolean;
  icon?: ReactNode;
  id: string;
  variant?: ProductLeadVariants;
  style?: CSSProperties;
}) => {
  const [open, setOpen] = useLocalStorage<boolean>({
    key: id,
    defaultValue: true,
    getInitialValueInEffect: true,
  });
  const segment = useSegment();
  const theme = useMantineTheme();
  const dark = theme.colorScheme === 'dark';
  const isSelfHosted = IS_SELF_HOSTED;

  useEffect(() => {
    segment.track('Banner seen - [Product lead]', {
      feature: id,
    });
  }, [segment, id]);

  if (open === false) {
    return null;
  }

  return (
    <div
      style={{
        padding: 24,
        background: dark ? colors.B20 : colors.B98,
        borderRadius: 8,
        color: colors.B60,
        ...style,
      }}
    >
      <WrapperHolder variant={variant}>
        <div>
          <Group position="apart">
            <Group spacing={8}>
              {icon}
              <Title size={18} color={colors.B60}>
                {title}
              </Title>
            </Group>
            <When truthy={closeable && variant === ProductLeadVariants.COLUMN}>
              <ActionIcon
                variant={'transparent'}
                sx={{ transform: 'translate(14px, -14px)' }}
                onClick={() => {
                  setOpen(false);
                  segment.track('Banner hidden - [Product lead]', {
                    id,
                  });
                }}
              >
                <Close color={colors.B60} />
              </ActionIcon>
            </When>
          </Group>
          <Text mt={4} color={colors.B60}>
            {text}
          </Text>
        </div>
        <Group spacing={24} align="center">
          <Button
            onClick={() => {
              segment.track('Scheduled call clicked - [Product lead]', {
                feature: id,
              });
              window.open('https://notify.novu.co/meetings/novuhq/notifications-45min?utm_campaign=in-app');
            }}
            variant="outline"
          >
            <Group spacing={8}>
              <Calendar color={dark ? theme.white : colors.B60} /> Schedule a call
            </Group>
          </Button>
          <When truthy={closeable && variant === ProductLeadVariants.DEFAULT}>
            <ActionIcon
              variant={'transparent'}
              onClick={() => {
                setOpen(false);
                segment.track('Banner hidden - [Product lead]', {
                  feature: id,
                });
              }}
            >
              <Close color={colors.B60} />
            </ActionIcon>
          </When>
        </Group>
      </WrapperHolder>
    </div>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ActionIcon, Group, Title, useMantineTheme } from '@mantine/core';
import { useLocalStorage } from '@mantine/hooks';
import { CSSProperties, ReactNode, useEffect } from 'react';
import styled from '@emotion/styled';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/utils/Spotlight.styles.ts
Tamaño: 513 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { createStyles, MantineTheme } from '@mantine/core';
import { colors, shadows } from '@novu/design-system';

export default createStyles((theme: MantineTheme) => {
  return {
    spotlight: {
      backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.white,
      boxShadow: theme.colorScheme === 'dark' ? shadows.dark : shadows.medium,
      borderRadius: '0.75rem',
    },
    searchInput: {
      backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.white,
    },
  };
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export default  createStyles

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/utils/Spotlight.tsx
Tamaño: 2995 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { SpotlightProvider } from '@mantine/spotlight';
import { Activity, Bolt, Box, Brand, Chat, IconLogout, Repeat, Settings, Team } from '@novu/design-system';
import { UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';
import { useEffect } from 'react';
import { useNavigate } from 'react-router-dom';

import { ROUTES } from '../../constants/routes';
import useThemeChange from '../../hooks/useThemeChange';
import { useSpotlightContext } from '../providers/SpotlightProvider';
import useStyles from './Spotlight.styles';

export const SpotLight = ({ children }) => {
  const navigate = useNavigate();
  const { items, addItem } = useSpotlightContext();
  const { toggleColorScheme, Icon } = useThemeChange();
  const { classes } = useStyles();

  useEffect(() => {
    addItem([
      {
        id: 'navigate-templates',
        title: 'Go to Workflows',
        onTrigger: () => navigate(ROUTES.WORKFLOWS),
        icon: <Bolt />,
      },
      {
        id: 'navigate-integration',
        title: 'Go to Integrations',
        onTrigger: () => navigate(ROUTES.INTEGRATIONS),
        icon: <Box />,
      },
      {
        id: 'navigate-changes',
        title: 'Go to Changes',
        onTrigger: () => navigate(ROUTES.CHANGES),
        icon: <Repeat />,
      },
      {
        id: 'navigate-settings',
        title: 'Go to Settings',
        onTrigger: () => navigate(ROUTES.SETTINGS),
        icon: <Settings />,
      },
      {
        id: 'navigate-activities',
        title: 'Go to Activities',
        onTrigger: () => navigate(ROUTES.ACTIVITIES),
        icon: <Activity />,
      },
      {
        id: 'navigate-team-members',
        title: 'Go to Team Members',
        onTrigger: () => navigate(ROUTES.TEAM),
        icon: <Team />,
      },
      {
        id: 'navigate-brand',
        title: 'Go to Brand',
        onTrigger: () => navigate('/brand'),
        icon: <Brand />,
      },
      {
        id: 'navigate-docs',
        title: 'Go to Documentation',
        onTrigger: () => {
          window?.open(`https://docs.novu.co${UTM_CAMPAIGN_QUERY_PARAM}`, '_blank')?.focus();
        },
      },
      {
        id: 'navigate-support',
        title: 'Go to Support',
        onTrigger: () => {
          window?.open('https://discord.com/invite/novu', '_blank')?.focus();
        },
      },
      {
        id: 'navigate-share-feedback',
        title: 'Share Feedback',
        onTrigger: () => {
          window?.open('https://github.com/novuhq/novu/issues/new/choose', '_blank')?.focus();
        },
        icon: <Chat />,
      },
      {
        id: 'toggle-theme',
        title: 'Toggle Theme',
        icon: <Icon title="color-scheme-preference-icon" />,
        onTrigger: () => {
          toggleColorScheme();
        },
      },
    ]);
  }, [navigate, addItem, Icon, toggleColorScheme]);

  return (
    <SpotlightProvider limit={7} shortcut={['mod + K']} actions={items} classNames={classes}>
      {children}
    </SpotlightProvider>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { SpotlightProvider } from '@mantine/spotlight';
import { Activity, Bolt, Box, Brand, Chat, IconLogout, Repeat, Settings, Team } from '@novu/design-system';
import { UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';
import { useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/utils/When.tsx
Tamaño: 91 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

export const When = ({ truthy, children, fallback = null }) => (truthy ? children : null);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

export const When = ({ truthy, children, fallback = null }) => (truthy ? children : null);
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/FlowEditor.tsx
Tamaño: 11419 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ComponentType, MouseEvent, MouseEvent as ReactMouseEvent, useCallback, useEffect, useRef } from 'react';
import ReactFlow, {
  addEdge,
  Background,
  BackgroundVariant,
  Controls,
  Edge,
  EdgeProps,
  getOutgoers,
  Node,
  NodeProps,
  ReactFlowProps,
  useEdgesState,
  useNodesState,
  useReactFlow,
} from 'react-flow-renderer';
import { useMantineColorScheme } from '@mantine/core';
import styled from '@emotion/styled';
import { v4 as uuid4 } from 'uuid';
import cloneDeep from 'lodash.clonedeep';
import { StepTypeEnum } from '@novu/shared';

import { colors } from '@novu/design-system';
import { getChannel } from '../../utils/channels';
import { useEnvironment } from '../../hooks';
import type { IEdge, IFlowStep, INode } from './types';
import { useTemplateEditorForm } from '../../pages/templates/components/TemplateEditorFormProvider';

const triggerNode: Node = {
  id: '1',
  type: 'triggerNode',
  data: {
    label: 'Trigger',
  },
  position: { x: 0, y: 10 },
};

const DEFAULT_WRAPPER_STYLES = {
  height: '100%',
  width: '100%',
  minHeight: '600px',
};

export interface IFlowEditorProps extends ReactFlowProps {
  isReadonly?: boolean;
  steps: IFlowStep[];
  dragging?: boolean;
  errors?: any;
  nodeTypes: Record<string, ComponentType<NodeProps>>;
  edgeTypes?: { special: ComponentType<EdgeProps> };
  withControls?: boolean;
  wrapperStyles?: React.CSSProperties;
  onEdit?: (e: MouseEvent<HTMLButtonElement>, node: INode) => void;
  onDelete?: (id: string) => void;
  onAddVariant?: (id: string) => void;
  onStepInit?: (step: IFlowStep) => Promise<void>;
  onGetStepError?: (i: number, errors: any) => string;
  addStep?: (channelType: StepTypeEnum, id: string, index?: number) => void;
  sidebarOpen?: boolean;
}

export function FlowEditor({
  isReadonly = false,
  steps,
  dragging,
  errors,
  defaultEdgeOptions = {
    type: 'smoothstep',
  },
  zoomOnScroll = false,
  preventScrolling = true,
  nodesConnectable = false,
  nodesDraggable = true,
  minZoom = 0.5,
  maxZoom = 1.5,
  defaultZoom = 1,
  nodeTypes,
  edgeTypes,
  withControls = true,
  wrapperStyles = DEFAULT_WRAPPER_STYLES,
  onStepInit,
  onGetStepError,
  addStep,
  onEdit,
  onDelete,
  onAddVariant,
  sidebarOpen,
  ...restProps
}: IFlowEditorProps) {
  const { colorScheme } = useMantineColorScheme();
  const reactFlowWrapper = useRef<HTMLDivElement>(null);
  const [nodes, setNodes, onNodesChange] = useNodesState([]);
  const [edges, setEdges, onEdgesChange] = useEdgesState<IEdge>([]);
  const reactFlowInstance = useReactFlow();
  const { template } = useTemplateEditorForm();
  const { readonly } = useEnvironment({ bridge: template?.bridge });

  useEffect(() => {
    const clientWidth = reactFlowWrapper.current?.clientWidth;
    const sub = sidebarOpen ? 300 : 100;
    const middle = clientWidth ? clientWidth / 2 - sub : 0;
    const zoomView = 1;

    reactFlowInstance.setViewport({ x: middle, y: 10, zoom: zoomView });
  }, [reactFlowInstance, sidebarOpen]);

  useEffect(() => {
    setTimeout(() => {
      initializeWorkflowTree();
    }, 0);
  }, [steps, dragging, errors, readonly]);

  const addNewNode = useCallback(
    (parentNodeId: string, channelType: string, childId?: string) => {
      if (!addStep) return;

      const channel = getChannel(channelType);
      if (!channel) return;

      const newId = uuid4();
      const nodeIndex = childId ? steps.findIndex((step) => step._id === parentNodeId) + 1 : undefined;

      addStep(channel.channelType, newId, nodeIndex);
    },
    [addStep, steps]
  );

  const onDragOver = useCallback((event) => {
    event.preventDefault();
    event.dataTransfer.dropEffect = 'move';
  }, []);

  const onDrop = useCallback(
    (event) => {
      event.preventDefault();

      const type = event.dataTransfer.getData('application/reactflow');
      const parentId = nodes[nodes.length - 2].id;

      if (typeof type === 'undefined' || !type || typeof parentId === 'undefined') {
        return;
      }

      const parentNode = reactFlowInstance.getNode(parentId);
      if (typeof parentNode === 'undefined') {
        return;
      }

      const childNode = getOutgoers(parentNode, nodes, edges);

      if (childNode.length) {
        return;
      }

      addNewNode(parentId, type);
    },
    [addNewNode, reactFlowInstance, nodes, edges]
  );

  async function initializeWorkflowTree() {
    let parentId = '1';
    const finalNodes = [cloneDeep(triggerNode)];
    let finalEdges: Edge<any>[] = [];
    let isParentVariantNode = false;

    if (steps.length) {
      for (let i = 0; i < steps.length; i += 1) {
        const step = steps[i];
        const oldNode = nodes[i + 1];
        const position =
          oldNode && oldNode.type !== 'addNode' ? oldNode.position : { x: 0, y: isParentVariantNode ? 160 : 120 };
        const newId = (step._id || step.id) as string;

        await onStepInit?.(step);

        const newNode = buildNewNode(newId, position, parentId, step, i);
        isParentVariantNode = newNode.data.step.variants && newNode.data.step.variants?.length > 0;

        finalNodes.push(newNode);

        const edgeType = edgeTypes ? 'special' : 'default';
        const newEdge = buildNewEdge(parentId, newId, edgeType);
        finalEdges = addEdge(newEdge, finalEdges);

        parentId = newId;
      }
    }
    if (!readonly && nodeTypes.addNode) {
      const addNodeButton = buildAddNodeButton(parentId, isParentVariantNode);
      finalNodes.push(addNodeButton);
    }

    setNodes(finalNodes);
    setEdges(finalEdges);
  }

  function buildNewNode(
    newId: string,
    position: { x: number; y: number },
    parentId: string,
    step: IFlowStep,
    i: number
  ): Node {
    const channel = getChannel(step.template?.type);
    const hasVariants = step.variants && step.variants?.length > 0;

    return {
      id: newId,
      type: 'channelNode',
      position: { x: position.x, y: position.y },
      parentNode: parentId,
      data: {
        ...channel,
        isReadonly,
        index: i,
        error: onGetStepError?.(i, errors) ?? '',
        onDelete,
        onAddVariant,
        onEdit,
        step,
      },
      // this class is needed to update the node height for nodes with variants
      ...(hasVariants && { className: 'variantNode' }),
    };
  }

  function buildNewEdge(parentId: string, newId: string, type: string): Edge {
    return {
      id: `e-${parentId}-${newId}`,
      source: parentId,
      sourceHandle: 'a',
      targetHandle: 'b',
      target: newId,
      type,
      data: { addNewNode, parentId, childId: newId, readonly },
    };
  }

  function buildAddNodeButton(parentId: string, isParentVariantNode: boolean): Node {
    return {
      id: '2',
      type: 'addNode',
      data: {
        label: '',
        addNewNode,
        parentId,
        showDropZone: dragging,
        readonly,
      },
      className: 'nodrag',
      connectable: false,
      parentNode: parentId,
      position: { x: 0, y: isParentVariantNode ? 130 : 90 },
    };
  }

  const handleMouseEnterEdgeOrNode = (edgeId: string) => {
    const edgeElement = document.getElementById(edgeId);
    if (!edgeElement) return;
    edgeElement.classList.add('fade');
  };

  const handleMouseLeaveEdgeOrNode = (edgeId: string) => {
    const edgeElement = document.getElementById(edgeId);
    if (!edgeElement) return;
    edgeElement.classList.remove('fade');
  };

  return (
    <>
      <Wrapper dark={colorScheme === 'dark'}>
        <div style={wrapperStyles} ref={reactFlowWrapper}>
          <ReactFlow
            nodes={nodes}
            edges={edges}
            nodeTypes={nodeTypes}
            edgeTypes={edgeTypes}
            onNodesChange={onNodesChange}
            onEdgesChange={onEdgesChange}
            onDrop={onDrop}
            onDragOver={onDragOver}
            onNodeMouseEnter={(event, node) => {
              if (!readonly) {
                handleMouseEnterEdgeOrNode(`edge-button-${node.id}`);
              }
            }}
            onNodeMouseLeave={(event, node) => {
              if (!readonly) {
                handleMouseLeaveEdgeOrNode(`edge-button-${node.id}`);
              }
            }}
            onEdgeMouseEnter={(event: ReactMouseEvent, edge: Edge) => {
              if (!readonly) {
                handleMouseEnterEdgeOrNode(`edge-button-${edge.source}`);
              }
            }}
            onEdgeMouseLeave={(event: ReactMouseEvent, edge: Edge) => {
              if (!readonly) {
                handleMouseLeaveEdgeOrNode(`edge-button-${edge.source}`);
              }
            }}
            /*
             * TODO: for now this disables the deletion of a step using delete/backspace keys
             * as it will require some sort of refactoring of how we save the workflow state
             * to properly support keyboard delete events
             * Remove this line once we tackle the workflow state handling
             */
            deleteKeyCode={null}
            defaultEdgeOptions={defaultEdgeOptions}
            zoomOnScroll={zoomOnScroll}
            preventScrolling={preventScrolling}
            nodesConnectable={nodesConnectable}
            nodesDraggable={nodesDraggable}
            minZoom={minZoom}
            maxZoom={maxZoom}
            defaultZoom={defaultZoom}
            {...restProps}
          >
            {withControls && <Controls />}
            <Background
              size={1}
              gap={10}
              variant={BackgroundVariant.Dots}
              color={colorScheme === 'dark' ? colors.BGDark : colors.BGLight}
            />
          </ReactFlow>
        </div>
      </Wrapper>
    </>
  );
}

export default FlowEditor;

const Wrapper = styled.div<{ dark: boolean }>`
  flex: 1 1 0%;
  background: ${({ dark }) => (dark ? colors.B15 : colors.B98)};
  .react-flow__node.react-flow__node-channelNode,
  .react-flow__node.react-flow__node-triggerNode {
    width: 280px;
    height: 80px;
    cursor: pointer;

    [data-blue-gradient-svg] {
      stop:first-of-type {
        stop-color: #4c6dd4 !important;
      }
      stop:last-child {
        stop-color: #66d9e8 !important;
      }
    }

    [data-workflow-node-icon] {
      stop {
        stop-color: white !important;
      }
    }
  }
  .react-flow__node.variantNode {
    height: 120px;
  }

  .react-flow__node.react-flow__node-addNode {
    cursor: default;
    width: 280px;
  }
  .react-flow__handle.connectable {
    cursor: pointer;
  }
  .react-flow__handle {
    background: transparent;
    border: 1px solid ${colors.B60};
  }
  .react-flow__attribution {
    background: transparent;
    opacity: 0.5;
    z-index: 1;
  }
  .react-flow__edge-path {
    stroke: ${colors.B60};
    border-radius: 10px;
    stroke-dasharray: 5;
    stroke-width: 2px;
  }
  .react-flow__node.selected {
    .react-flow__handle {
      background: ${colors.horizontal};
      border: none;
    }
  }

  .react-flow__controls {
    box-shadow: none;
  }

  .react-flow__controls-interactive {
    display: none;
  }

  .react-flow__controls-button {
    background: transparent;
    border: none;

    svg {
      fill: ${colors.B60};
    }
  }

  [data-template-store-editor] [data-workflow-node-icon] {
    stop:first-of-type {
      stop-color: #dd2476 !important;
    }
    stop:last-child {
      stop-color: #ff512f !important;
    }
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ComponentType, MouseEvent, MouseEvent as ReactMouseEvent, useCallback, useEffect, useRef } from 'react';
import ReactFlow, {
addEdge,
Background,
BackgroundVariant,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/NodeStep.tsx
Tamaño: 1633 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import React from 'react';
import { colors, shadows, Text } from '@novu/design-system';

type NodeStepProps = {
  className?: string;
  data: { label: string; email?: string };
  Handlers: React.FC<any>;
  Icon: React.FC<any>;
  ActionItem?: React.ReactNode;
  ContentItem?: React.ReactNode;
};

export function NodeStep({ className, Handlers, Icon, data, ActionItem, ContentItem }: NodeStepProps) {
  const labelLowerCase = data.label.toLowerCase();

  return (
    <>
      <StepCard className={className} data-test-id={`data-test-id-${labelLowerCase}`}>
        <ContentContainer>
          <LeftContent>
            <Icon />
            <Text weight={'bold'}>{data.label} </Text>
          </LeftContent>
          {ActionItem}
        </ContentContainer>
        {ContentItem}
      </StepCard>
      <Handlers />
    </>
  );
}

const ContentContainer = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  pointer-events: all;
`;

const LeftContent = styled.div`
  display: flex;
  align-items: center;
  gap: 15px;
  svg {
    stop:first-of-type {
      stop-color: #dd2476 !important;
    }
    stop:last-child {
      stop-color: #ff512f !important;
    }
  }
`;

const StepCard: any = styled.div`
  position: relative;
  display: flex;
  width: 280px;
  height: 80px;
  box-shadow: ${({ theme }) => (theme.colorScheme === 'dark' ? shadows.dark : shadows.light)};
  border-radius: 7px;
  pointer-events: none;
  background: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B17 : colors.white)};
  margin: 0;
  padding: 20px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import React from 'react';
import { colors, shadows, Text } from '@novu/design-system';
type NodeStepProps = {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/index.ts
Tamaño: 136 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export type { IFlowEditorProps } from './FlowEditor';
export { FlowEditor } from './FlowEditor';
export { NodeStep } from './NodeStep';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  type
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/types.ts
Tamaño: 1352 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import type { MouseEvent } from 'react';
import { EdgeProps, NodeProps } from 'react-flow-renderer';
import { ChannelTypeEnum, IEmailBlock, StepTypeEnum } from '@novu/shared';

import type { IFormStep } from '../../pages/templates/components/formTypes';

export interface IEdge extends EdgeProps {
  parentId: string;
  childId?: string;
  addNewNode: (parentNodeId: string, channelType: string, childId?: string) => void;
}

export interface IFlowStep {
  id?: string;
  _id?: string;
  name?: string;
  stepId?: string;
  uuid?: string;
  active?: boolean;
  template?: {
    type: StepTypeEnum;
    content?: string | IEmailBlock[];
    htmlContent?: string;
  };
  variants?: Omit<IFlowStep, 'variants'>[];
  filters?: IFormStep['filters'];
  digestMetadata?: IFormStep['digestMetadata'];
  delayMetadata?: IFormStep['delayMetadata'];
}

export interface NodeData {
  isReadonly: boolean;
  Icon: React.FC<any>;
  label: string;
  tabKey: ChannelTypeEnum;
  index: number;
  testId: string;
  onDelete: (uuid: string) => void;
  onAddVariant: (uuid: string) => void;
  onEdit: (e: MouseEvent<HTMLButtonElement>, node: INode) => void;
  error: string;
  channelType: StepTypeEnum;
  step?: IFlowStep;
}

export enum NodeType {
  CHANNEL = 'channelNode',
  TRIGGER = 'triggerNode',
  ADD_NODE = 'addNode',
}

export type INode = NodeProps<NodeData>;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  interface
- export  interface
- export  interface
- export  enum
- export  type

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/ErrorPrettyRender.tsx
Tamaño: 2761 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useDisclosure } from '@mantine/hooks';
import { css } from '@novu/novui/css';
import { Text } from '@novu/novui';
import { hstack } from '@novu/novui/patterns';
import { Center, Stack } from '@novu/novui/jsx';
import { IconErrorOutline, IconExpandLess, IconExpandMore } from '@novu/novui/icons';

export function ErrorPrettyRender({ error: unparsedError }) {
  const [isExpanded, { toggle }] = useDisclosure();
  const error = 'response' in unparsedError ? unparsedError?.response?.data : unparsedError;
  /*
   * TODO: find a way to import ErrorCodeEnum from @novu/framework without transiently importing
   * types that are not available in the browser, like `crypto`
   */
  const isInvalidControlSyntax = error?.code === 'StepControlCompilationFailedError';

  // If invalid syntax of var (e.g. missing closing bracket {{var {{var}), show preview as loading.
  if (isInvalidControlSyntax) {
    return null;
  }

  return (
    <Stack
      className={css({
        color: 'typography.text.feedback.alert',
        bg: 'input.border.error/20',
        border: 'solid',
        borderColor: 'input.border.error',
        width: '100%',
        borderRadius: 'input',
        my: 'margins.layout.tabs.bottom',
        p: '125',
      })}
    >
      <Center>
        <IconErrorOutline size="24" color={'inherit'} />
      </Center>

      <Text textAlign={'center'} color={'inherit'}>
        {error.message || 'Error while rendering'}
      </Text>

      {error.data ? (
        <Stack mt="100">
          <Center>
            <button
              onClick={toggle}
              className={hstack({
                gap: '50',
                cursor: 'pointer',
                _hover: { opacity: 'hover' },
              })}
            >
              <Text color="inherit">See more</Text>
              <>
                {isExpanded ? (
                  <IconExpandLess title="expand-less-section-icon" color="inherit" />
                ) : (
                  <IconExpandMore title="expand-more-section-icon" color="inherit" />
                )}
              </>
            </button>
          </Center>
          {isExpanded && (
            <pre
              className={css({
                whiteSpace: 'pre-wrap',
                overflow: 'auto',
                border: 'solid',
                borderColor: 'input.border.error/40',
                borderRadius: 'input',
                p: '75',
                mt: '25',
                color: 'typography.text.main',
                fontFamily: 'mono',
              })}
            >
              {error.data?.stack}
              {!error.data?.stack && JSON.stringify(error.data, null, 2)}
            </pre>
          )}
        </Stack>
      ) : null}
    </Stack>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useDisclosure } from '@mantine/hooks';
import { css } from '@novu/novui/css';
import { Text } from '@novu/novui';
import { hstack } from '@novu/novui/patterns';
import { Center, Stack } from '@novu/novui/jsx';
/*
// If invalid syntax of var (e.g. missing closing bracket {{var {{var}), show preview as loading.
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/index.ts
Tamaño: 122 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './chat';
export * from './email';
export * from './push';
export * from './sms';
export * from './in-app';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/chat/ChatBasePreview.tsx
Tamaño: 1445 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Divider, Flex, useMantineColorScheme } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
import { LocaleSelect } from '../common';
import { ChatContent } from './ChatContent';
import { ChatInput } from './ChatInput';

const ChatPreviewContainer = styled.div`
  width: 100%;
  max-width: 37.5em;
`;

export const ChatBasePreview = ({
  content,
  loading = false,
  error,
  showEditOverlay = false,
  onLocaleChange,
  selectedLocale,
  locales,
}: {
  content: string;
  loading?: boolean;
  error?: string;
  showEditOverlay?: boolean;
  onLocaleChange: (locale: string) => void;
  selectedLocale?: string;
  locales: any[];
}) => {
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  return (
    <ChatPreviewContainer>
      <Flex>
        <LocaleSelect
          value={selectedLocale}
          onLocaleChange={onLocaleChange}
          isLoading={loading}
          locales={locales || []}
        />
      </Flex>
      <Divider
        color={isDark ? colors.B30 : colors.BGLight}
        label={
          <Text color={isDark ? colors.B30 : colors.BGLight} weight="bold">
            Today
          </Text>
        }
        labelPosition="center"
      />
      <ChatContent showOverlay={showEditOverlay} isLoading={loading} content={content} errorMsg={error} />
      <ChatInput />
    </ChatPreviewContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Divider, Flex, useMantineColorScheme } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
import { LocaleSelect } from '../common';
import { ChatContent } from './ChatContent';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/chat/ChatContent.tsx
Tamaño: 2682 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Group, Skeleton, Stack, useMantineColorScheme } from '@mantine/core';
import { colors, Text } from '@novu/design-system';

import { NovuGreyIcon, PreviewEditOverlay } from '../common';
import { When } from '../../../utils/When';
import { useHover } from '../../../../hooks';

export function ChatContent({ isLoading, content, errorMsg, showOverlay = true }) {
  const { isHovered, onMouseEnter, onMouseLeave } = useHover();
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  return (
    <ContentAndOVerlayWrapperStyled onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>
      {isHovered && showOverlay && <PreviewEditOverlay />}
      <Group
        spacing={16}
        align="flex-start"
        noWrap
        sx={{
          position: 'relative',
          ...(isHovered && showOverlay && { filter: 'blur(2px)' }),
        }}
      >
        <When truthy={isLoading}>
          <Skeleton radius={8} height={40} width={40} />
          <Stack spacing={3}>
            <Skeleton height={20} width={80} />
            <Skeleton height={20} width={280} radius="xs" />
          </Stack>
        </When>
        <When truthy={!isLoading}>
          <div>
            <NovuGreyIcon color={isDark ? colors.B30 : colors.BGLight} width="32px" height="32px" />
          </div>
          <Stack spacing={5}>
            <Group spacing={8} align="flex-start" noWrap>
              <Text
                weight="bold"
                color={isDark ? colors.B80 : colors.B20}
                size="lg"
                style={{
                  lineHeight: '20px',
                }}
              >
                Your App
              </Text>
              <PillStyled isDark={isDark}>APP</PillStyled>
              <Text color={isDark ? colors.B60 : colors.B70}>now</Text>
            </Group>
            {errorMsg ? (
              <Text color={colors.error}>{errorMsg}</Text>
            ) : (
              <Text color={isDark ? colors.B80 : colors.B20}>{content}</Text>
            )}
          </Stack>
        </When>
      </Group>
    </ContentAndOVerlayWrapperStyled>
  );
}

const PillStyled = styled.div<{ isDark: boolean }>`
  background-color: ${({ isDark }) => (isDark ? colors.B40 : colors.BGLight)};
  border-radius: 0.25rem;
  padding: 0px 6px;
  align-items: center;
  color: ${({ isDark }) => (isDark ? colors.B80 : colors.B40)};
  font-size: 10px;
  font-weight: 400;
  line-height: 1.25rem;
`;

const ContentAndOVerlayWrapperStyled = styled.div`
  position: relative;
  padding-top: 1.5rem;
  padding-bottom: 1.25rem;
  border-radius: 0.5rem;
  overflow: hidden;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Group, Skeleton, Stack, useMantineColorScheme } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
import { NovuGreyIcon, PreviewEditOverlay } from '../common';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/chat/ChatInput.tsx
Tamaño: 670 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Group } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
import { EmojiIcon, SendIcon } from '../common';

export function ChatInput() {
  return (
    <InputStyled>
      <Text color={colors.B40}>Message Bot</Text>
      <Group spacing={21}>
        <EmojiIcon />
        <SendIcon />
      </Group>
    </InputStyled>
  );
}

const InputStyled = styled.div`
  display: flex;
  padding: 16px;
  justify-content: space-between;
  align-items: center;
  align-self: stretch;

  border-radius: 8px;
  border: 1px solid ${colors.B40};
  opacity: 0.2;
  background: transparent;
  margin-top: 20px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Group } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
import { EmojiIcon, SendIcon } from '../common';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/chat/ChatPreview.tsx
Tamaño: 2512 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useFormContext } from 'react-hook-form';
import { useLocation } from 'react-router-dom';

import { useEffect, useState } from 'react';
import { useMutation } from '@tanstack/react-query';
import { IForm } from '../../../../pages/templates/components/formTypes';
import { useStepFormPath } from '../../../../pages/templates/hooks/useStepFormPath';
import { useTemplateLocales } from '../../../../pages/templates/hooks/useTemplateLocales';
import { usePreviewChatTemplate } from '../../../../pages/templates/hooks/usePreviewChatTemplate';
import { api } from '../../../../api';
import { useEnvironment } from '../../../../hooks/useEnvironment';
import { useTemplateEditorForm } from '../../../../pages/templates/components/TemplateEditorFormProvider';
import { ChatBasePreview } from './ChatBasePreview';

export function ChatPreview({
  showLoading = false,
  controlVariables,
}: {
  showLoading?: boolean;
  controlVariables?: any;
}) {
  const { watch, formState } = useFormContext<IForm>();
  const { template } = useTemplateEditorForm();
  const { bridge } = useEnvironment({ bridge: template?.bridge });
  const path = useStepFormPath();
  const content = watch(`${path}.template.content`);
  const { pathname } = useLocation();
  const isPreviewPath = pathname.endsWith('/preview');
  const stepId = watch(`${path}.uuid`);
  const [bridgeContent, setBridgeContent] = useState('');

  const {
    mutateAsync,
    isLoading: isBridgeLoading,
    error: previewError,
  } = useMutation((data) => api.post(`/v1/bridge/preview/${formState?.defaultValues?.identifier}/${stepId}`, data), {
    onSuccess(data) {
      setBridgeContent(data.outputs.body);
    },
  });

  useEffect(() => {
    if (bridge) {
      mutateAsync(controlVariables);
    }
  }, [bridge, controlVariables]);

  const { selectedLocale, locales, areLocalesLoading, onLocaleChange } = useTemplateLocales({
    content: content as string,
    disabled: showLoading || bridge,
  });

  const { isPreviewContentLoading, previewContent, templateError } = usePreviewChatTemplate({
    locale: selectedLocale,
    disabled: showLoading || bridge,
  });

  return (
    <ChatBasePreview
      content={previewContent || bridgeContent}
      onLocaleChange={onLocaleChange}
      locales={locales || []}
      selectedLocale={selectedLocale}
      showEditOverlay={isPreviewPath}
      error={bridge ? undefined : templateError}
      loading={showLoading || areLocalesLoading || isPreviewContentLoading || isBridgeLoading}
    />
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useFormContext } from 'react-hook-form';
import { useLocation } from 'react-router-dom';
import { useEffect, useState } from 'react';
import { useMutation } from '@tanstack/react-query';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/chat/index.ts
Tamaño: 84 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './ChatPreview';
export { ChatBasePreview } from './ChatBasePreview';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/EmailMobile.tsx
Tamaño: 851 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { createStyles } from '@mantine/core';
import { colors } from '@novu/design-system';

const useStyles = createStyles((theme) => ({
  phone: {
    display: 'block',
    margin: 'auto',
    width: '400px',
    height: '740px',
    position: 'relative',
    borderColor: theme.colorScheme === 'dark' ? colors.B20 : colors.B85,
    borderWidth: '10px',
    borderStyle: 'solid',
    borderRadius: '40px',
  },
  cameraDent: {
    background: theme.colorScheme === 'dark' ? colors.B20 : colors.B85,
    width: '148px',
    height: '30px',
    marginLeft: 'auto',
    marginRight: 'auto',
    borderRadius: '0 0 20px 20px',
  },
}));

export const EmailMobile = ({ children }) => {
  const { classes } = useStyles();

  return (
    <div className={classes.phone}>
      <div className={classes.cameraDent}></div>
      {children}
    </div>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { createStyles } from '@mantine/core';
import { colors } from '@novu/design-system';
const useStyles = createStyles((theme) => ({
phone: {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/EmojiIcon.tsx
Tamaño: 1881 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

export const EmojiIcon = (props) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" {...props}>
      <mask
        id="mask0_4003_40332"
        style={{ maskType: 'alpha' }}
        width="24"
        height="24"
        x="0"
        y="0"
        maskUnits="userSpaceOnUse"
      >
        <path fill="#D9D9D9" d="M0 0H24V24H0z"></path>
      </mask>
      <g mask="url(#mask0_4003_40332)">
        <path
          fill="#525266"
          d="M15.5 11c.417 0 .77-.146 1.063-.438.291-.291.437-.645.437-1.062 0-.417-.146-.77-.438-1.063A1.447 1.447 0 0015.5 8c-.417 0-.77.146-1.063.438A1.446 1.446 0 0014 9.5c0 .417.146.77.438 1.063.291.291.645.437 1.062.437zm-7 0c.417 0 .77-.146 1.063-.438.291-.291.437-.645.437-1.062 0-.417-.146-.77-.438-1.063A1.447 1.447 0 008.5 8c-.417 0-.77.146-1.063.438A1.447 1.447 0 007 9.5c0 .417.146.77.438 1.063.291.291.645.437 1.062.437zm3.5 6.5c1.133 0 2.162-.32 3.088-.962A5.485 5.485 0 0017.1 14h-1.65a4.1 4.1 0 01-1.462 1.463A3.846 3.846 0 0112 16c-.717 0-1.38-.18-1.988-.537A4.099 4.099 0 018.55 14H6.9a5.485 5.485 0 002.012 2.538A5.294 5.294 0 0012 17.5zm0 4.5a9.738 9.738 0 01-3.9-.788 10.099 10.099 0 01-3.175-2.137c-.9-.9-1.612-1.958-2.137-3.175A9.738 9.738 0 012 12c0-1.383.263-2.683.788-3.9a10.099 10.099 0 012.137-3.175c.9-.9 1.958-1.612 3.175-2.137A9.738 9.738 0 0112 2c1.383 0 2.683.263 3.9.788a10.098 10.098 0 013.175 2.137c.9.9 1.613 1.958 2.137 3.175A9.738 9.738 0 0122 12a9.738 9.738 0 01-.788 3.9 10.098 10.098 0 01-2.137 3.175c-.9.9-1.958 1.613-3.175 2.137A9.738 9.738 0 0112 22zm0-2c2.233 0 4.125-.775 5.675-2.325C19.225 16.125 20 14.233 20 12c0-2.233-.775-4.125-2.325-5.675C16.125 4.775 14.233 4 12 4c-2.233 0-4.125.775-5.675 2.325C4.775 7.875 4 9.767 4 12c0 2.233.775 4.125 2.325 5.675C7.875 19.225 9.767 20 12 20z"
        ></path>
      </g>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

export const EmojiIcon = (props) => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" {...props}>
<mask
id="mask0_4003_40332"
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/LocaleSelect.tsx
Tamaño: 1910 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { SelectItemProps, Group } from '@mantine/core';
import { Select, ISelectProps, Text } from '@novu/design-system';
import { forwardRef } from 'react';
import { IS_SELF_HOSTED } from '../../../../config';
import { FlagIcon } from '../../../../ee/translations';

const rightSectionWidth = 20;

export function LocaleSelect({
  locales,
  value,
  isLoading,
  onLocaleChange,
  className,
  dropdownPosition,
}: {
  locales: { langName: string; langIso: string }[];
  value?: string;
  isLoading?: boolean;
  onLocaleChange: (val: string) => void;
  className?: string;
  dropdownPosition?: ISelectProps['dropdownPosition'];
}) {
  // Do not render locale select if self-hosted or no locale or only one locale
  if (IS_SELF_HOSTED || locales.length < 2) {
    return null;
  }

  return (
    <SelectContainer className={className}>
      <Select
        itemComponent={SelectItem}
        data={locales?.map((locale) => {
          return {
            value: locale.langIso,
            label: locale.langName,
          };
        })}
        icon={value && <FlagIcon locale={value} />}
        loading={isLoading}
        limit={50}
        searchable
        withinPortal
        onChange={(val) => {
          if (!val || Array.isArray(val)) return;

          onLocaleChange(val);
        }}
        value={value}
        variant="unstyled"
        rightSectionWidth={rightSectionWidth}
        dropdownPosition={dropdownPosition}
      />
    </SelectContainer>
  );
}

const SelectItem = forwardRef<HTMLDivElement, SelectItemProps>(({ label, value, ...others }: SelectItemProps, ref) => {
  return (
    <Group ref={ref} noWrap {...others}>
      {value && <FlagIcon locale={value} />}
      <Text rows={1}> {label}</Text>
    </Group>
  );
});

const SelectContainer = styled.div`
  .mantine-Select-input {
    padding-right: ${rightSectionWidth}px;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { SelectItemProps, Group } from '@mantine/core';
import { Select, ISelectProps, Text } from '@novu/design-system';
import { forwardRef } from 'react';
import { IS_SELF_HOSTED } from '../../../../config';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/NovuGreyIcon.tsx
Tamaño: 814 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

export const NovuGreyIcon = (props) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="none" viewBox="0 0 32 32" {...props}>
      <path
        fill="currentColor"
        d="M24.766 2.613A15.926 15.926 0 0016 0c-1.782 0-3.495.291-5.096.829l12.262 12.34c.589.593 1.6.176 1.6-.66V2.614z"
      />
      <path
        fill="currentColor"
        d="M6.343 3.242A15.975 15.975 0 000 16c0 3.025.84 5.854 2.298 8.266V19.49c0-5.24 6.344-7.856 10.038-4.139l13.321 13.407A15.975 15.975 0 0032 16c0-3.025-.84-5.854-2.298-8.266v4.776c0 5.24-6.344 7.856-10.038 4.139L6.343 3.242z"
      />
      <path
        fill="currentColor"
        d="M21.096 31.171L8.834 18.831c-.589-.593-1.6-.176-1.6.66v9.896A15.925 15.925 0 0016 32c1.782 0 3.495-.291 5.096-.829z"
      />
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

export const NovuGreyIcon = (props) => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="none" viewBox="0 0 32 32" {...props}>
<path
fill="currentColor"
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/PreviewEditOverlay.tsx
Tamaño: 1828 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Flex, Group, Overlay, OverlayProps, UnstyledButton, useMantineColorScheme } from '@mantine/core';
import { colors, PencilOutlined, Text } from '@novu/design-system';
import { StepTypeEnum } from '@novu/shared';
import { PropsWithChildren } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { useBasePath } from '../../../../pages/templates/hooks/useBasePath';

export function PreviewEditOverlay() {
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  const basePath = useBasePath();
  const { channel, stepUuid, variantUuid } = useParams<{
    channel: StepTypeEnum;
    stepUuid: string;
    variantUuid: string;
  }>();

  const navigate = useNavigate();

  const handleEditMessage = () => {
    const isVariant = !!variantUuid;
    let path = `${basePath}/${channel}/${stepUuid}`;
    if (isVariant) {
      path += `/variants/${variantUuid}`;
    }

    navigate(path);
  };

  return (
    <OverlayStyled>
      <Flex onClick={handleEditMessage} align="center" justify="center" h="100%" style={{ cursor: 'pointer' }}>
        <UnstyledButton>
          <Group spacing={10} position="center" align="center" h="100%" noWrap>
            <PencilOutlined color={isDark ? colors.white : colors.B60} />
            <Text color={isDark ? colors.white : colors.B60} weight="bold">
              Edit message
            </Text>
          </Group>
        </UnstyledButton>
      </Flex>
    </OverlayStyled>
  );
}

const OverlayStyled = styled(Overlay)<PropsWithChildren<OverlayProps>>`
  border: 1px solid ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B30 : colors.BGLight)};
  background: ${({ theme }) => (theme.colorScheme === 'dark' ? 'rgba(41, 41, 51, 0.8)' : 'rgba(255, 255, 255, 0.8)')};
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Flex, Group, Overlay, OverlayProps, UnstyledButton, useMantineColorScheme } from '@mantine/core';
import { colors, PencilOutlined, Text } from '@novu/design-system';
import { StepTypeEnum } from '@novu/shared';
import { PropsWithChildren } from 'react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/PreviewUserIcon.tsx
Tamaño: 885 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

export const PreviewUserIcon = (props) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="none" viewBox="0 0 40 40" {...props}>
      <path fill="#3D3D4D" d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20 8.954 0 20 0s20 8.954 20 20z" />
      <path
        fill="#525266"
        d="M7 35.2v-4.228c0-1.018.257-1.91.77-2.673a5.002 5.002 0 012.008-1.744c1.815-.842 3.588-1.474 5.32-1.895a22.072 22.072 0 015.235-.632c1.76 0 3.5.215 5.223.646 1.722.43 3.49 1.058 5.305 1.881a4.96 4.96 0 012.035 1.744c.514.764.77 1.655.77 2.673v3.63A19.93 19.93 0 0120 40a19.922 19.922 0 01-13-4.8zM15.764 19.958c1.213 1.213 2.736 1.82 4.57 1.82 1.833 0 3.356-.607 4.569-1.82s1.82-2.736 1.82-4.57c0-1.832-.607-3.356-1.82-4.569S22.167 9 20.333 9c-1.833 0-3.356.606-4.57 1.82-1.212 1.212-1.819 2.736-1.819 4.569 0 1.833.607 3.356 1.82 4.57z"
      />
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

export const PreviewUserIcon = (props) => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="none" viewBox="0 0 40 40" {...props}>
<path fill="#3D3D4D" d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20 8.954 0 20 0s20 8.954 20 20z" />
<path
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/SendIcon.tsx
Tamaño: 584 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

export const SendIcon = (props) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" {...props}>
      <mask
        id="mask0_4003_40335"
        style={{ maskType: 'alpha' }}
        width="24"
        height="24"
        x="0"
        y="0"
        maskUnits="userSpaceOnUse"
      >
        <path fill="#D9D9D9" d="M0 0H24V24H0z"></path>
      </mask>
      <g mask="url(#mask0_4003_40335)">
        <path fill="#525266" d="M3 20V4l19 8-19 8zm2-3l11.85-5L5 7v3.5l6 1.5-6 1.5V17z"></path>
      </g>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

export const SendIcon = (props) => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" {...props}>
<mask
id="mask0_4003_40335"
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/index.ts
Tamaño: 285 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './LocaleSelect';
export * from './EmailMobile';
export * from './PreviewEditOverlay';
export * from './PreviewUserIcon';
export * from './NovuGreyIcon';
export * from './EmojiIcon';
export * from './SendIcon';
export * from './phone-simulator';
export * from './icons';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export
- export
- export
- export
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/icons/InAppHeaderIcons.tsx
Tamaño: 3379 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMantineColorScheme } from '@mantine/core';

export const InAppHeaderIcons = (props) => {
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="96" height="24" fill="none" viewBox="0 0 96 24">
      <mask
        id="mask0_174_182126"
        style={{ maskType: 'alpha' }}
        width="20"
        height="20"
        x="0"
        y="2"
        maskUnits="userSpaceOnUse"
      >
        <path fill="#D9D9D9" d="M0 2H20V22H0z"></path>
      </mask>
      <g mask="url(#mask0_174_182126)">
        <path
          fill="#828299"
          d="M11.065 21a7.789 7.789 0 01-3.144-.639 8.208 8.208 0 01-2.555-1.727 8.207 8.207 0 01-1.727-2.555A7.79 7.79 0 013 12.935c0-1.943.611-3.66 1.833-5.154C6.056 6.288 7.64 5.361 9.583 5c-.236 1.375-.156 2.68.24 3.917.396 1.236 1.073 2.333 2.031 3.291a7.85 7.85 0 003.292 1.98 8.05 8.05 0 003.854.229c-.333 1.916-1.253 3.493-2.76 4.729C14.733 20.382 13.008 21 11.065 21z"
        ></path>
      </g>
      <mask
        id="mask1_174_182126"
        style={{ maskType: 'alpha' }}
        width="20"
        height="20"
        x="36"
        y="2"
        maskUnits="userSpaceOnUse"
      >
        <path fill="#D9D9D9" d="M36 2H56V22H36z"></path>
      </mask>
      <g mask="url(#mask1_174_182126)">
        <path
          fill="#828299"
          d="M40 17.5V16h1v-5c0-1.208.371-2.27 1.115-3.188.743-.916 1.704-1.486 2.885-1.708V5c0-.278.097-.514.292-.708A.964.964 0 0146 4c.278 0 .514.097.708.292.195.194.292.43.292.708v1.104c1.18.222 2.142.792 2.885 1.708C50.63 8.73 51 9.793 51 11v5h1v1.5H40zm5.996 2.5c-.414 0-.767-.147-1.059-.44a1.45 1.45 0 01-.437-1.06h3c0 .417-.147.77-.442 1.063a1.456 1.456 0 01-1.062.437z"
        ></path>
      </g>
      <path
        fill={isDark ? '#3D3D4D' : '#EDF0F2'}
        d="M96 12c0 6.627-5.373 12-12 12s-12-5.373-12-12S77.373 0 84 0s12 5.373 12 12z"
      ></path>
      <path
        fill="#828299"
        d="M76.2 21.12v-2.537c0-.61.154-1.145.462-1.604a3 3 0 011.205-1.046 17.323 17.323 0 013.191-1.137 13.248 13.248 0 013.142-.38c1.056 0 2.1.13 3.133.388 1.034.258 2.095.635 3.184 1.13.505.238.912.587 1.22 1.045.309.459.463.993.463 1.604v2.178A11.958 11.958 0 0184 24a11.953 11.953 0 01-7.8-2.88zM81.458 11.975c.728.728 1.642 1.092 2.742 1.092s2.014-.364 2.742-1.092c.727-.728 1.091-1.642 1.091-2.742s-.364-2.014-1.091-2.741C86.214 5.764 85.3 5.4 84.2 5.4s-2.014.364-2.742 1.092c-.727.727-1.091 1.641-1.091 2.741s.364 2.014 1.091 2.742z"
      ></path>
      <rect width="10.6" height="10.6" x="48.7" y="2.7" fill="url(#paint0_linear_174_182126)" rx="5.3"></rect>
      <rect
        width="10.6"
        height="10.6"
        x="48.7"
        y="2.7"
        stroke={isDark ? '#292933' : '#EDF0F2'}
        strokeWidth="1.4"
        rx="5.3"
      ></rect>
      <path
        fill="#fff"
        d="M55.82 10.26V11h-3.2v-.74h1.172V6.888c0-.133.004-.27.012-.412l-.832.696a.366.366 0 01-.144.072.366.366 0 01-.24-.04.254.254 0 01-.072-.068l-.312-.428 1.764-1.5h.812v5.052h1.04z"
      ></path>
      <defs>
        <linearGradient id="paint0_linear_174_182126" x1="48" x2="60" y1="8" y2="8" gradientUnits="userSpaceOnUse">
          <stop stopColor="#DD2476"></stop>
          <stop offset="1" stopColor="#FF512F"></stop>
        </linearGradient>
      </defs>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMantineColorScheme } from '@mantine/core';
export const InAppHeaderIcons = (props) => {
const { colorScheme } = useMantineColorScheme();
const isDark = colorScheme === 'dark';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/icons/index.ts
Tamaño: 89 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './iphone';
export * from './android';
export * from './InAppHeaderIcons';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/icons/android/AndroidIndicatorsIcon.tsx
Tamaño: 1215 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###


import { ComponentProps } from 'react';

export const AndroidIndicatorsIcon = (props: ComponentProps<'svg'>) => {
  return (
    <svg width="54" height="14" viewBox="0 0 54 14" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
      <path
        d="M13.6647 13V2.46097C13.6647 1.56355 12.5741 1.12039 11.9481 1.76345L1.68925 12.3025C1.07235 12.9362 1.5214 14 2.40582 14H12.6647C13.2169 14 13.6647 13.5523 13.6647 13Z"
        fill="currentColor"
      />
      <path
        d="M37.6105 5.47661C37.9528 5.0963 37.9559 4.5154 37.5867 4.16114C36.6425 3.25523 35.5725 2.52153 34.4165 1.98957C32.9969 1.33625 31.4753 1 29.9387 1C28.402 1 26.8805 1.33626 25.4608 1.98957C24.3048 2.52153 23.2349 3.25523 22.2907 4.16115C21.9215 4.5154 21.9245 5.0963 22.2668 5.47662L29.9387 14L37.6105 5.47661Z"
        fill="currentColor"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M49.1595 1C48.6072 1 48.1595 1.44772 48.1595 2H47.2127C46.6604 2 46.2127 2.44772 46.2127 3V13C46.2127 13.5523 46.6604 14 47.2127 14H53C53.5523 14 54 13.5523 54 13V3C54 2.44772 53.5523 2 53 2H52.0531C52.0531 1.44772 51.6054 1 51.0531 1H49.1595Z"
        fill="currentColor"
      />
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ComponentProps } from 'react';
export const AndroidIndicatorsIcon = (props: ComponentProps<'svg'>) => {
return (
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/icons/android/AndroidKeyboard.tsx
Tamaño: 123277 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ComponentProps } from 'react';

interface AndroidKeyboardProps extends ComponentProps<'svg'> {
  isDarkMode?: boolean;
}

export const AndroidKeyboard = ({ isDarkMode, ...rest }: AndroidKeyboardProps) => {
  return isDarkMode ? (
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 392 288" {...rest}>
      <g opacity="0.4">
        <path fill="#2B2B2B" d="M0 0h392v44H0z" />
        <g filter="url(#a)">
          <rect width="30" height="30" x="12" y="7" fill="#fff" rx="15" />
          <path fill="#666" d="M30.41 17.41 29 16l-6 6 6 6 1.41-1.41L25.83 22l4.58-4.59Z" />
        </g>
        <path
          fill="#A5A9AC"
          d="M74.76 13.5a2.967 2.967 0 0 0-2.974 2.975v11.05A2.967 2.967 0 0 0 74.76 30.5h8.925l5.1-5.1v-8.925A2.967 2.967 0 0 0 85.81 13.5H74.76Zm.213 1.7h10.625a1.487 1.487 0 0 1 1.488 1.488v7.862H85.81a2.967 2.967 0 0 0-2.975 2.975V28.8h-7.863a1.488 1.488 0 0 1-1.487-1.488V16.688a1.488 1.488 0 0 1 1.487-1.487Zm7.387 2.355a1.56 1.56 0 0 0-.4.05c-.799.221-1.25 1.037-1.045 1.845.042.128.102.255.178.374l2.746-.748c0-.145-.017-.289-.051-.434a1.492 1.492 0 0 0-1.428-1.087Zm-5.33 1.47c-.144 0-.272 0-.4.043a1.497 1.497 0 0 0-1.045 1.827c.026.136.102.255.179.391l2.745-.748a1.462 1.462 0 0 0-1.479-1.513Zm7.268 2.346-7.76 2.134a4.476 4.476 0 0 0 4.555 1.393 4.482 4.482 0 0 0 3.205-3.527Z"
        />
        <g clipPath="url(#b)">
          <path
            fill="#A5A9AC"
            d="M132.714 17h2.572v10h-2.572V17Zm-4.285 0h-5.143a1.694 1.694 0 0 0-1.715 1.667v6.666c0 .834.686 1.667 1.715 1.667h5.143a1.694 1.694 0 0 0 1.714-1.667V22h-2.572v2.5h-3.428v-5h6v-.833c0-.834-.686-1.667-1.714-1.667Zm17.142 2.5V17h-7.714v10h2.572v-3.333h3.428v-2.5h-3.428V19.5h5.142Z"
          />
        </g>
        <path
          fill="#A5A9AC"
          d="m190.357 20.41-6.5-.002v1.667h6.5V20.41ZM183.857 23.332l6.5.002V25l-6.5-.001v-1.666ZM188.357 26.334l-4.5-.002V28l4.5.001v-1.666Z"
        />
        <path
          fill="#A5A9AC"
          fillRule="evenodd"
          d="M189.207 14.227h3.484c.916 0 1.666.777 1.666 1.728v13.818c0 .95-.75 1.727-1.666 1.727h-11.667c-.917 0-1.667-.777-1.667-1.727V15.955c0-.95.75-1.728 1.667-1.728h3.483c.35-1.001 1.267-1.727 2.35-1.727 1.084 0 2 .726 2.35 1.727Zm-1.516.864c0-.475-.375-.864-.834-.864-.458 0-.833.389-.833.864s.375.864.833.864a.826.826 0 0 0 .678-.363.904.904 0 0 0 .147-.38.808.808 0 0 0 .009-.121Zm-6.667.864v13.818h11.667V15.955h-1.667v2.59h-8.333v-2.59h-1.667Z"
          clipRule="evenodd"
        />
        <path
          fill="#A5A9AC"
          d="M247.283 22.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58a.49.49 0 0 0 .12-.61l-1.92-3.32a.488.488 0 0 0-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54a.484.484 0 0 0-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22l-1.91 3.32c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94 0 .31.02.64.07.94l-2.03 1.58a.49.49 0 0 0-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58Zm-7.14 2.66a3.61 3.61 0 0 1-3.6-3.6c0-1.98 1.62-3.6 3.6-3.6s3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6Z"
        />
        <path stroke="#404A50" d="M278.429 11v22" />
        <path
          fill="#A5A9AC"
          d="M310.714 20c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2Zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2Zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2Z"
        />
        <path
          fill="#B9BDBF"
          d="M370 24c1.66 0 2.99-1.34 2.99-3l.01-6c0-1.66-1.34-3-3-3s-3 1.34-3 3v6c0 1.66 1.34 3 3 3Zm5.3-3c0 3-2.54 5.1-5.3 5.1s-5.3-2.1-5.3-5.1H363c0 3.41 2.72 6.23 6 6.72V31h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7Z"
        />
        <path fill="#2B2B2B" d="M0 44h392v198H0z" />
        <g filter="url(#c)">
          <rect width="34.8" height="40" x="4" y="48" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="m23.77 75.124 4.155 3.291-1.46 1.348-4.088-3.246 1.393-1.392Zm4.099-6.816v1.033c0 1.228-.154 2.328-.46 3.302-.308.973-.75 1.8-1.326 2.481a5.747 5.747 0 0 1-2.077 1.562c-.802.359-1.7.539-2.696.539-.966 0-1.853-.18-2.662-.54a5.982 5.982 0 0 1-2.088-1.56c-.584-.682-1.037-1.51-1.36-2.482-.321-.974-.482-2.074-.482-3.302v-1.033c0-1.228.157-2.325.472-3.29.322-.974.774-1.801 1.358-2.483a5.822 5.822 0 0 1 2.078-1.572c.809-.36 1.696-.54 2.662-.54.995 0 1.898.18 2.706.54.809.36 1.501.883 2.078 1.572.576.682 1.018 1.509 1.325 2.482.315.966.472 2.063.472 3.29Zm-2.145 1.033v-1.056c0-.973-.101-1.834-.303-2.583-.195-.748-.483-1.377-.865-1.887a3.755 3.755 0 0 0-1.393-1.156c-.546-.262-1.172-.393-1.875-.393-.667 0-1.273.13-1.82.393a3.875 3.875 0 0 0-1.392 1.156c-.39.51-.689 1.139-.899 1.887-.21.749-.314 1.61-.314 2.583v1.056c0 .98.105 1.85.314 2.605.21.749.51 1.382.899 1.898.397.51.868.895 1.415 1.157a4.155 4.155 0 0 0 1.82.393c.703 0 1.328-.131 1.875-.393a3.663 3.663 0 0 0 1.381-1.157c.382-.516.67-1.149.865-1.898.194-.756.292-1.624.292-2.605Z"
          />
          <path fill="#B3B7B9" d="M35.174 51.876V59h-1.406v-5.503l-1.69.537v-1.108l2.944-1.05h.152Z" />
        </g>
        <g filter="url(#d)">
          <rect width="34.8" height="40" x="42.8" y="48" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="m56.19 72.059 3.246-11.41h1.573l-.91 4.436L56.606 77h-1.56l1.145-4.941Zm-3.357-11.41 2.583 11.185L56.19 77h-1.55l-3.964-16.352h2.156Zm12.376 11.174 2.527-11.175h2.167L65.95 77H64.4l.809-5.177Zm-3.965-11.175 3.156 11.41L65.546 77h-1.561l-3.37-11.915-.92-4.437h1.55Z"
          />
          <path
            fill="#B3B7B9"
            d="M75.41 57.901V59h-4.864v-.938l2.3-2.465c.231-.258.413-.484.547-.679.133-.199.23-.376.288-.532a1.293 1.293 0 0 0-.015-1.006.8.8 0 0 0-.317-.361.947.947 0 0 0-.508-.127.98.98 0 0 0-.557.156.993.993 0 0 0-.351.434 1.608 1.608 0 0 0-.117.63h-1.412c0-.423.102-.81.303-1.162a2.22 2.22 0 0 1 .855-.845c.368-.211.804-.317 1.308-.317.498 0 .918.082 1.26.244.345.16.606.39.781.694.18.3.269.657.269 1.074 0 .234-.038.464-.112.688a3.109 3.109 0 0 1-.323.664c-.136.218-.302.44-.498.664-.195.225-.412.458-.65.699L72.364 57.9h3.046Z"
          />
        </g>
        <g filter="url(#e)">
          <rect width="34.8" height="40" x="81.6" y="48" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M104.75 75.237V77h-8.659v-1.763h8.659Zm-8.22-14.589V77h-2.168V60.648h2.167Zm7.074 7.03v1.764h-7.513v-1.763h7.513Zm1.034-7.03v1.775h-8.547v-1.775h8.547Z"
          />
          <path
            fill="#B3B7B9"
            d="M110.786 54.835h.752c.241 0 .44-.04.596-.122a.806.806 0 0 0 .347-.352c.078-.153.117-.33.117-.532 0-.182-.036-.343-.107-.483a.734.734 0 0 0-.318-.332 1.085 1.085 0 0 0-.542-.122c-.172 0-.332.034-.478.102a.875.875 0 0 0-.352.288.755.755 0 0 0-.132.45h-1.411c0-.391.104-.731.313-1.021.211-.29.494-.516.849-.679a2.78 2.78 0 0 1 1.172-.244c.482 0 .903.078 1.265.235.361.152.643.379.845.678.201.3.302.67.302 1.114 0 .224-.052.442-.156.654a1.84 1.84 0 0 1-.449.566c-.192.166-.427.3-.703.4a2.792 2.792 0 0 1-.933.147h-.977v-.747Zm0 1.07v-.728h.977c.387 0 .728.044 1.021.132.293.088.538.214.737.38.198.163.348.357.449.581.101.222.151.468.151.738 0 .332-.063.628-.19.889a1.863 1.863 0 0 1-.537.654 2.454 2.454 0 0 1-.801.41 3.494 3.494 0 0 1-1.885.015 2.63 2.63 0 0 1-.781-.376 1.936 1.936 0 0 1-.557-.635 1.927 1.927 0 0 1-.205-.913h1.412a.89.89 0 0 0 .136.488.946.946 0 0 0 .376.337c.163.081.344.122.542.122.225 0 .417-.04.576-.122a.877.877 0 0 0 .371-.352c.088-.153.132-.33.132-.532 0-.26-.047-.469-.141-.625a.844.844 0 0 0-.406-.351 1.584 1.584 0 0 0-.625-.113h-.752Z"
          />
        </g>
        <g filter="url(#f)">
          <rect width="34.8" height="40" x="120.4" y="48" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M132.612 60.648h5.413c1.227 0 2.264.188 3.11.562.854.374 1.502.928 1.943 1.662.45.726.674 1.621.674 2.684 0 .749-.153 1.434-.46 2.055a4.38 4.38 0 0 1-1.303 1.573c-.562.426-1.235.745-2.021.954l-.607.236h-5.087l-.023-1.763h3.841c.779 0 1.426-.135 1.943-.404.516-.277.906-.648 1.168-1.112.262-.465.393-.977.393-1.539 0-.629-.124-1.179-.371-1.65-.247-.472-.636-.835-1.168-1.09-.524-.262-1.201-.393-2.032-.393h-3.246V77h-2.167V60.648ZM142.169 77l-3.976-7.412 2.257-.011 4.032 7.288V77h-2.313Z"
          />
          <path
            fill="#B3B7B9"
            d="M153.127 56.344v1.103h-5.122l-.069-.854 2.964-4.702h1.118l-1.211 2.026-1.474 2.427h3.794Zm-.806-4.453V59h-1.406v-7.11h1.406Z"
          />
        </g>
        <g filter="url(#g)">
          <rect width="34.8" height="40" x="159.2" y="48" fill="#434343" rx="6" />
          <path fill="#fff" d="M177.678 60.648V77h-2.134V60.648h2.134Zm5.256 0v1.775H170.3v-1.775h12.634Z" />
          <path
            fill="#B3B7B9"
            d="m188.269 55.763-1.123-.269.406-3.603h3.994v1.137h-2.837l-.176 1.578c.094-.056.238-.114.43-.176.192-.065.407-.098.644-.098.345 0 .651.054.918.161.267.108.493.264.679.469.189.205.332.456.43.752.097.296.146.631.146 1.006 0 .316-.049.617-.146.903a2.244 2.244 0 0 1-.445.762 2.064 2.064 0 0 1-.747.522c-.299.127-.654.19-1.064.19-.306 0-.603-.045-.889-.136a2.445 2.445 0 0 1-.767-.405 2.1 2.1 0 0 1-.542-.65 1.98 1.98 0 0 1-.21-.879h1.397c.019.202.072.376.156.523a.92.92 0 0 0 .347.332c.143.078.311.117.503.117a.957.957 0 0 0 .459-.102.827.827 0 0 0 .307-.284 1.32 1.32 0 0 0 .171-.43c.039-.165.059-.344.059-.536 0-.193-.023-.367-.068-.523a1.13 1.13 0 0 0-.21-.405.932.932 0 0 0-.362-.264 1.26 1.26 0 0 0-.503-.093c-.26 0-.462.041-.605.122-.14.082-.257.174-.352.279Z"
          />
        </g>
        <g filter="url(#h)">
          <rect width="34.8" height="40" x="198" y="48" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="m211.144 60.648 4.245 8.21 4.256-8.21h2.46l-5.638 10.243V77h-2.168v-6.11l-5.637-10.242h2.482Z"
          />
          <path
            fill="#B3B7B9"
            d="M229.374 51.817h.205v1.123h-.083c-.371 0-.701.056-.991.166a2.03 2.03 0 0 0-.737.474 2.048 2.048 0 0 0-.459.733 2.78 2.78 0 0 0-.157.961v1.182c0 .254.025.479.074.674.052.192.125.353.219.483a.994.994 0 0 0 .342.288c.13.062.277.093.44.093a.878.878 0 0 0 .415-.097.928.928 0 0 0 .322-.274c.091-.12.159-.26.205-.42.049-.163.073-.34.073-.532s-.024-.37-.073-.532a1.213 1.213 0 0 0-.205-.42.94.94 0 0 0-.332-.279.97.97 0 0 0-.44-.097 1.117 1.117 0 0 0-1.128 1.05l-.424-.274a2 2 0 0 1 .156-.713c.098-.224.231-.423.4-.596.173-.175.38-.312.62-.41.241-.1.513-.151.816-.151.332 0 .623.063.874.19.254.127.465.302.635.523.169.221.296.477.38.766.085.29.127.6.127.928 0 .345-.057.666-.17.962a2.25 2.25 0 0 1-1.236 1.294 2.513 2.513 0 0 1-.986.186c-.378 0-.721-.069-1.03-.205a2.341 2.341 0 0 1-.791-.586 2.636 2.636 0 0 1-.513-.894 3.508 3.508 0 0 1-.176-1.133v-.547c0-.572.083-1.097.249-1.572.169-.478.412-.892.728-1.24a3.224 3.224 0 0 1 1.142-.816 3.78 3.78 0 0 1 1.509-.288Z"
          />
        </g>
        <g filter="url(#i)">
          <rect width="34.8" height="40" x="236.8" y="48" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M257.996 60.648h2.156V71.71c0 1.228-.273 2.25-.82 3.066a5.113 5.113 0 0 1-2.178 1.842 7.063 7.063 0 0 1-2.931.607c-1.109 0-2.112-.203-3.01-.607a4.926 4.926 0 0 1-2.123-1.842c-.516-.816-.775-1.838-.775-3.066V60.648h2.145V71.71c0 .854.158 1.558.472 2.112.314.554.752.966 1.314 1.235.569.27 1.228.404 1.977.404.756 0 1.415-.134 1.976-.404a2.935 2.935 0 0 0 1.325-1.235c.315-.554.472-1.258.472-2.112V60.648Z"
          />
          <path fill="#B3B7B9" d="M269.375 51.89v.758L266.626 59h-1.484l2.749-6.01h-3.54v-1.1h5.024Z" />
        </g>
        <g filter="url(#j)">
          <rect width="34.8" height="40" x="275.6" y="48" fill="#434343" rx="6" />
          <path fill="#fff" d="M294.089 60.648V77h-2.167V60.648h2.167Z" />
          <path
            fill="#B3B7B9"
            d="M308.136 57.052c0 .446-.104.822-.312 1.128a1.95 1.95 0 0 1-.86.688c-.361.153-.771.23-1.23.23-.459 0-.871-.077-1.235-.23a1.98 1.98 0 0 1-.865-.688c-.211-.306-.317-.682-.317-1.128 0-.3.06-.57.181-.81.12-.245.288-.453.502-.626.219-.176.474-.309.767-.4.293-.095.612-.142.957-.142.462 0 .876.082 1.24.244.365.163.651.393.86.689.208.296.312.644.312 1.045Zm-1.416-.093c0-.218-.042-.405-.127-.562a.858.858 0 0 0-.346-.366 1.046 1.046 0 0 0-.523-.127c-.198 0-.373.043-.522.127a.89.89 0 0 0-.352.367 1.206 1.206 0 0 0-.122.561c0 .215.041.4.122.557a.897.897 0 0 0 .352.361c.153.081.33.122.532.122s.376-.04.522-.122a.832.832 0 0 0 .342-.361c.082-.157.122-.342.122-.557Zm1.265-3.184c0 .362-.096.682-.288.962a1.918 1.918 0 0 1-.801.65 2.745 2.745 0 0 1-1.162.234c-.44 0-.83-.078-1.172-.234a1.918 1.918 0 0 1-.801-.65 1.66 1.66 0 0 1-.288-.962c0-.43.096-.79.288-1.084.196-.296.462-.52.801-.673.342-.153.729-.23 1.162-.23.44 0 .829.077 1.167.23.342.153.609.377.801.673.195.293.293.655.293 1.084Zm-1.406.064a1.13 1.13 0 0 0-.103-.498.765.765 0 0 0-.293-.332.845.845 0 0 0-.459-.117.877.877 0 0 0-.454.112.742.742 0 0 0-.288.327c-.065.14-.098.31-.098.508 0 .192.033.361.098.508a.797.797 0 0 0 .293.337c.127.081.28.122.459.122s.33-.041.454-.122a.766.766 0 0 0 .288-.337c.068-.147.103-.316.103-.508Z"
          />
        </g>
        <g filter="url(#k)">
          <rect width="34.8" height="40" x="314.4" y="48" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M338.37 68.308v1.033c0 1.228-.154 2.328-.461 3.302-.307.973-.748 1.8-1.325 2.481a5.745 5.745 0 0 1-2.077 1.562c-.802.359-1.7.539-2.696.539-.966 0-1.853-.18-2.661-.54a5.98 5.98 0 0 1-2.089-1.56c-.584-.682-1.037-1.51-1.359-2.482-.322-.974-.483-2.074-.483-3.302v-1.033c0-1.228.157-2.325.472-3.29.322-.974.775-1.801 1.359-2.483a5.82 5.82 0 0 1 2.077-1.572c.809-.36 1.696-.54 2.662-.54.996 0 1.894.18 2.695.54.809.36 1.501.883 2.078 1.572.584.682 1.029 1.509 1.336 2.482.315.966.472 2.063.472 3.29Zm-2.145 1.033v-1.056c0-.973-.101-1.834-.303-2.583-.195-.748-.483-1.377-.865-1.887a3.732 3.732 0 0 0-1.404-1.156c-.546-.262-1.168-.393-1.864-.393-.674 0-1.284.13-1.831.393a3.871 3.871 0 0 0-1.392 1.156c-.382.51-.678 1.139-.888 1.887-.209.749-.314 1.61-.314 2.583v1.056c0 .98.105 1.85.314 2.605.21.749.51 1.382.899 1.898.397.51.865.895 1.404 1.157a4.176 4.176 0 0 0 1.83.393c.704 0 1.329-.131 1.876-.393a3.663 3.663 0 0 0 1.381-1.157c.382-.516.67-1.149.865-1.898.194-.756.292-1.624.292-2.605Z"
          />
          <path
            fill="#B3B7B9"
            d="M343.142 57.93h.093c.391 0 .726-.047 1.006-.14.283-.099.516-.239.698-.42.182-.183.317-.406.405-.67.088-.267.132-.57.132-.908v-1.348a2.65 2.65 0 0 0-.078-.678 1.345 1.345 0 0 0-.215-.484.91.91 0 0 0-.322-.293.827.827 0 0 0-.4-.097.743.743 0 0 0-.415.117.99.99 0 0 0-.308.307 1.68 1.68 0 0 0-.191.45c-.042.166-.063.34-.063.522s.021.357.063.523c.043.162.106.307.191.434.085.124.19.223.317.298a.902.902 0 0 0 .45.107c.166 0 .314-.03.444-.092a1.113 1.113 0 0 0 .552-.6 1.01 1.01 0 0 0 .078-.387l.464.254c0 .228-.049.453-.147.674a2.076 2.076 0 0 1-1.011 1.035 1.693 1.693 0 0 1-.732.161 2.06 2.06 0 0 1-.884-.18 1.928 1.928 0 0 1-.654-.508 2.313 2.313 0 0 1-.401-.762 3.13 3.13 0 0 1-.136-.942 2.8 2.8 0 0 1 .166-.972c.114-.303.275-.57.483-.8a2.26 2.26 0 0 1 .757-.543c.296-.133.625-.2.986-.2.362 0 .69.07.987.21.296.14.55.339.761.596.212.254.375.558.489.913.117.355.175.748.175 1.181v.489c0 .462-.05.892-.151 1.289a3.772 3.772 0 0 1-.444 1.079c-.196.319-.44.592-.733.82a3.123 3.123 0 0 1-1.01.523c-.385.12-.814.18-1.289.18h-.113v-1.137Z"
          />
        </g>
        <g filter="url(#l)">
          <rect width="34.8" height="40" x="353.2" y="48" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M371.274 70.587h-4.369v-1.763h4.369c.846 0 1.531-.135 2.055-.404.524-.27.906-.644 1.145-1.123.248-.48.371-1.026.371-1.64 0-.561-.123-1.09-.371-1.583-.239-.494-.621-.891-1.145-1.19-.524-.308-1.209-.461-2.055-.461h-3.864V77h-2.167V60.648h6.031c1.235 0 2.28.214 3.133.64.854.427 1.501 1.019 1.943 1.775.442.749.663 1.606.663 2.572 0 1.048-.221 1.943-.663 2.684-.442.741-1.089 1.306-1.943 1.696-.853.382-1.898.572-3.133.572Z"
          />
          <path
            fill="#B3B7B9"
            d="M385.731 54.82v1.23c0 .535-.057.995-.171 1.383-.114.384-.278.7-.493.947a1.943 1.943 0 0 1-.757.542 2.605 2.605 0 0 1-.976.176c-.287 0-.554-.036-.801-.108a2.023 2.023 0 0 1-.669-.346 2.204 2.204 0 0 1-.508-.591 3.033 3.033 0 0 1-.322-.86 5.218 5.218 0 0 1-.112-1.142v-1.23c0-.535.057-.992.171-1.373.117-.384.281-.698.493-.942.215-.244.468-.423.761-.537a2.61 2.61 0 0 1 .977-.176c.286 0 .552.037.796.112.247.072.47.184.669.337.198.153.368.35.508.591.14.238.247.523.322.855.075.328.112.706.112 1.132Zm-1.411 1.416V54.63c0-.257-.015-.482-.044-.674a1.99 1.99 0 0 0-.122-.488 1.033 1.033 0 0 0-.205-.332.745.745 0 0 0-.278-.186.985.985 0 0 0-.347-.058c-.16 0-.301.03-.425.092a.787.787 0 0 0-.307.298c-.085.134-.15.313-.196.537a4.433 4.433 0 0 0-.063.81v1.607c0 .258.013.484.039.679.029.195.071.363.127.503.058.137.127.249.205.337a.744.744 0 0 0 .278.185c.108.04.225.059.352.059.156 0 .294-.03.415-.093a.816.816 0 0 0 .312-.303 1.59 1.59 0 0 0 .196-.546c.042-.225.063-.498.063-.82Z"
          />
        </g>
        <g filter="url(#m)">
          <rect width="35.111" height="40" x="22" y="98" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M40.005 112.097 34.592 127h-2.213l6.233-16.352h1.426l-.033 1.449ZM44.542 127l-5.424-14.903-.034-1.449h1.426L46.766 127h-2.224Zm-.28-6.053v1.774h-9.187v-1.774h9.186Z"
          />
        </g>
        <g filter="url(#n)">
          <rect width="35.111" height="40" x="61.111" y="98" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M82.451 122.867c0-.382-.06-.719-.18-1.011a1.923 1.923 0 0 0-.606-.808c-.284-.24-.681-.468-1.19-.685a16.7 16.7 0 0 0-1.91-.663 17.47 17.47 0 0 1-2.19-.797c-.65-.3-1.209-.64-1.673-1.022a4.036 4.036 0 0 1-1.067-1.314c-.247-.494-.37-1.06-.37-1.696 0-.636.13-1.224.393-1.763a4.128 4.128 0 0 1 1.123-1.404 5.437 5.437 0 0 1 1.763-.943c.681-.225 1.441-.337 2.28-.337 1.228 0 2.268.236 3.122.707.86.465 1.516 1.075 1.965 1.831.45.749.674 1.55.674 2.403H82.43c0-.614-.131-1.157-.393-1.628-.262-.479-.66-.854-1.19-1.123-.532-.277-1.206-.416-2.022-.416-.771 0-1.408.116-1.91.348-.5.232-.875.547-1.122.944-.24.397-.36.85-.36 1.359 0 .344.071.658.214.943.15.277.378.535.685.775a5.5 5.5 0 0 0 1.19.662c.487.203 1.067.397 1.74.584.93.263 1.73.555 2.404.876.674.322 1.228.686 1.662 1.09.442.397.768.85.977 1.359.218.501.326 1.07.326 1.707 0 .666-.135 1.269-.404 1.808-.27.539-.655.999-1.157 1.381s-1.104.678-1.808.887c-.696.203-1.475.304-2.336.304a8.084 8.084 0 0 1-2.235-.315 6.649 6.649 0 0 1-1.988-.943 4.94 4.94 0 0 1-1.426-1.55c-.352-.621-.528-1.34-.528-2.156h2.156c0 .561.109 1.044.326 1.448.217.397.513.727.887.989a4.16 4.16 0 0 0 1.292.584c.486.12.992.179 1.516.179.756 0 1.396-.104 1.92-.314.524-.21.921-.509 1.19-.898.278-.39.416-.85.416-1.382Z"
          />
        </g>
        <g filter="url(#o)">
          <rect width="35.111" height="40" x="100.222" y="98" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M116.554 127h-3.414l.022-1.763h3.392c1.168 0 2.141-.244 2.92-.73.778-.494 1.362-1.183 1.751-2.067.397-.891.596-1.931.596-3.122v-.999c0-.936-.113-1.767-.337-2.493-.225-.734-.554-1.352-.989-1.853a4.171 4.171 0 0 0-1.594-1.157c-.622-.262-1.337-.393-2.145-.393h-3.684v-1.775h3.684c1.07 0 2.047.18 2.931.54a6.296 6.296 0 0 1 2.28 1.538c.644.666 1.138 1.475 1.482 2.426.345.943.517 2.006.517 3.189v.977c0 1.183-.172 2.25-.517 3.201-.344.943-.842 1.748-1.494 2.415a6.51 6.51 0 0 1-2.335 1.538c-.906.352-1.928.528-3.066.528Zm-2.258-16.352V127h-2.167v-16.352h2.167Z"
          />
        </g>
        <g filter="url(#p)">
          <rect width="35.111" height="40" x="139.333" y="98" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M154.598 110.648V127h-2.168v-16.352h2.168Zm6.85 7.356v1.775h-7.322v-1.775h7.322Zm1.112-7.356v1.775h-8.434v-1.775h8.434Z"
          />
        </g>
        <g filter="url(#q)">
          <rect width="35.111" height="40" x="178.444" y="98" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M202.143 118.858v5.986c-.202.299-.524.636-.966 1.01-.441.367-1.052.689-1.83.966-.771.27-1.767.405-2.988.405-.995 0-1.913-.173-2.751-.517a6.213 6.213 0 0 1-2.168-1.527c-.606-.674-1.078-1.49-1.415-2.449-.329-.965-.494-2.058-.494-3.279v-1.269c0-1.22.143-2.31.427-3.268.292-.958.719-1.771 1.28-2.437a5.365 5.365 0 0 1 2.067-1.527c.816-.352 1.752-.528 2.807-.528 1.251 0 2.295.217 3.134.651.846.427 1.504 1.018 1.976 1.775.479.756.786 1.617.921 2.583h-2.167a4.562 4.562 0 0 0-.584-1.618 3.13 3.13 0 0 0-1.225-1.168c-.531-.299-1.216-.449-2.055-.449-.756 0-1.411.139-1.965.416a3.618 3.618 0 0 0-1.37 1.19c-.36.517-.629 1.142-.809 1.876-.172.733-.258 1.561-.258 2.482v1.291c0 .943.109 1.786.326 2.527.224.741.542 1.374.954 1.898.412.517.902.91 1.471 1.179.577.27 1.213.404 1.91.404.771 0 1.396-.063 1.875-.19.479-.135.854-.292 1.123-.472.27-.187.476-.363.618-.528v-3.661h-3.785v-1.752h5.941Z"
          />
        </g>
        <g filter="url(#r)">
          <rect width="35.111" height="40" x="217.556" y="98" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M239.48 117.679v1.763h-8.85v-1.763h8.85Zm-8.513-7.031V127H228.8v-16.352h2.167Zm10.399 0V127h-2.156v-16.352h2.156Z"
          />
        </g>
        <g filter="url(#s)">
          <rect width="35.111" height="40" x="256.667" y="98" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M276.637 122.227v-11.579h2.156v11.579c0 1.078-.221 1.988-.663 2.729a4.35 4.35 0 0 1-1.83 1.696c-.771.382-1.659.573-2.662.573s-1.894-.173-2.673-.517a4.035 4.035 0 0 1-1.83-1.572c-.442-.704-.663-1.591-.663-2.662h2.168c0 .689.127 1.254.381 1.696a2.34 2.34 0 0 0 1.056.977c.457.21.977.314 1.561.314.569 0 1.078-.119 1.528-.359.456-.247.816-.61 1.078-1.089.262-.487.393-1.082.393-1.786Z"
          />
        </g>
        <g filter="url(#t)">
          <rect width="35.111" height="40" x="295.778" y="98" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M310.178 110.648V127h-2.168v-16.352h2.168Zm9.871 0-6.794 7.626-3.819 3.964-.359-2.313 2.875-3.167 5.492-6.11h2.605ZM317.96 127l-6.053-7.974 1.292-1.718 7.344 9.692h-2.583Z"
          />
        </g>
        <g filter="url(#u)">
          <rect width="35.111" height="40" x="334.889" y="98" fill="#434343" rx="6" />
          <path fill="#fff" d="M358.06 125.237V127h-8.176v-1.763h8.176Zm-7.749-14.589V127h-2.168v-16.352h2.168Z" />
        </g>
        <g filter="url(#v)">
          <rect width="48" height="40" x="4" y="148" fill="#202020" rx="6" />
          <path
            fill="#A5A9AC"
            d="M28.682 158.789a.95.95 0 0 0-1.364 0l-8.533 8.716c-.608.622-.178 1.684.682 1.684H22.5v7.289c0 .564.448 1.022 1 1.022h9c.552 0 1-.458 1-1.022v-7.289h3.033c.86 0 1.29-1.062.682-1.684l-8.533-8.716Z"
          />
        </g>
        <g filter="url(#w)">
          <rect width="36.571" height="40" x="56" y="148" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M80.26 175.237V177H69.187v-1.763H80.26Zm-.36-13.016L69.705 177h-1.337v-1.617l10.186-14.735h1.348v1.573Zm-.92-1.573v1.775H68.513v-1.775H78.98Z"
          />
        </g>
        <g filter="url(#x)">
          <rect width="36.571" height="40" x="96.571" y="148" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="m110.949 160.648 3.931 6.267 3.93-6.267h2.527l-5.166 8.098 5.29 8.254h-2.55l-4.031-6.39-4.032 6.39h-2.549l5.289-8.254-5.166-8.098h2.527Z"
          />
        </g>
        <g filter="url(#y)">
          <rect width="36.571" height="40" x="137.143" y="148" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M159.707 171.8h2.157c-.113 1.033-.408 1.958-.888 2.774-.479.816-1.156 1.464-2.032 1.943-.876.472-1.969.708-3.28.708-.958 0-1.83-.18-2.616-.539a5.826 5.826 0 0 1-2.011-1.528c-.561-.666-.995-1.464-1.302-2.392-.3-.936-.45-1.976-.45-3.122v-1.628c0-1.146.15-2.183.45-3.111.307-.936.745-1.737 1.314-2.404a5.858 5.858 0 0 1 2.077-1.538c.809-.359 1.719-.539 2.729-.539 1.236 0 2.28.232 3.134.696a4.98 4.98 0 0 1 1.987 1.932c.48.816.775 1.763.888 2.841h-2.157c-.104-.764-.299-1.419-.584-1.965a3.033 3.033 0 0 0-1.213-1.281c-.524-.299-1.209-.449-2.055-.449-.726 0-1.366.139-1.92.416a3.86 3.86 0 0 0-1.381 1.179c-.367.509-.644 1.119-.832 1.831-.187.711-.28 1.501-.28 2.369v1.651c0 .801.082 1.554.247 2.257.172.704.43 1.322.775 1.853.344.532.782.951 1.314 1.258.531.3 1.16.449 1.886.449.921 0 1.655-.146 2.202-.438a2.868 2.868 0 0 0 1.235-1.257c.284-.547.487-1.202.606-1.966Z"
          />
        </g>
        <g filter="url(#z)">
          <rect width="36.571" height="40" x="177.714" y="148" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="m195.854 174.518 4.818-13.87h2.347L196.966 177h-1.674l.562-2.482Zm-4.503-13.87 4.772 13.87.596 2.482h-1.674l-6.042-16.352h2.348Z"
          />
        </g>
        <g filter="url(#A)">
          <rect width="36.571" height="40" x="218.286" y="148" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M237.133 169.352h-4.144l-.023-1.741h3.763c.621 0 1.164-.104 1.628-.314.464-.21.824-.509 1.078-.899.262-.396.393-.868.393-1.415 0-.599-.116-1.085-.348-1.46-.225-.381-.573-.658-1.044-.831-.465-.179-1.056-.269-1.775-.269h-3.189V177h-2.168v-16.352h5.357c.839 0 1.587.087 2.246.259.659.164 1.217.426 1.674.786a3.34 3.34 0 0 1 1.055 1.348c.24.546.36 1.201.36 1.965 0 .674-.173 1.284-.517 1.83-.344.539-.823.981-1.437 1.326-.607.344-1.318.565-2.134.662l-.775.528Zm-.101 7.648h-4.897l1.224-1.763h3.673c.689 0 1.273-.12 1.752-.36a2.565 2.565 0 0 0 1.112-1.01c.254-.442.381-.962.381-1.561 0-.607-.108-1.131-.325-1.573a2.257 2.257 0 0 0-1.022-1.022c-.464-.239-1.063-.359-1.797-.359h-3.088l.022-1.741h4.223l.46.629c.786.068 1.453.292 1.999.674.547.374.962.854 1.247 1.438.292.584.438 1.227.438 1.931 0 1.018-.225 1.879-.674 2.583-.442.696-1.067 1.228-1.876 1.595-.808.359-1.759.539-2.852.539Z"
          />
        </g>
        <g filter="url(#B)">
          <rect width="36.571" height="40" x="258.857" y="148" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M283.409 160.648V177h-2.178l-8.232-12.612V177h-2.168v-16.352h2.168l8.265 12.646v-12.646h2.145Z"
          />
        </g>
        <g filter="url(#C)">
          <rect width="36.571" height="40" x="299.429" y="148" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M310.257 160.648h2.1l5.357 13.331 5.346-13.331h2.111L318.523 177h-1.64l-6.626-16.352Zm-.685 0h1.853l.303 9.973V177h-2.156v-16.352Zm14.42 0h1.853V177h-2.156v-6.379l.303-9.973Z"
          />
        </g>
        <g filter="url(#D)">
          <rect width="48" height="40" x="340" y="148" fill="#202020" rx="6" />
          <path
            fill="#A5A9AC"
            d="M374 159h-15c-.69 0-1.23.35-1.59.88L352 168l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2v-14c0-1.1-.9-2-2-2Zm0 16h-14.93l-4.67-7 4.66-7H374v14Zm-11.59-2 3.59-3.59 3.59 3.59 1.41-1.41-3.59-3.59 3.59-3.59-1.41-1.41-3.59 3.59-3.59-3.59-1.41 1.41 3.59 3.59-3.59 3.59 1.41 1.41Z"
          />
        </g>
        <g filter="url(#E)">
          <rect width="53" height="40" x="4" y="198" fill="#202020" rx="6" />
          <path
            fill="#A5A9AC"
            d="M18.276 219.858h-1.633c.005-.454.043-.835.117-1.143a2.55 2.55 0 0 1 .366-.849c.176-.254.408-.523.696-.806.224-.215.427-.417.608-.608.18-.195.324-.4.432-.615.107-.22.16-.471.16-.754 0-.308-.05-.569-.153-.784a1.079 1.079 0 0 0-.454-.491c-.195-.112-.44-.168-.732-.168-.244 0-.474.048-.689.146a1.163 1.163 0 0 0-.52.44c-.132.195-.203.454-.212.776h-1.765c.01-.615.156-1.133.439-1.553.283-.42.664-.735 1.143-.945a3.95 3.95 0 0 1 1.604-.315c.654 0 1.213.113 1.677.337.464.22.818.542 1.062.967.249.42.373.928.373 1.524 0 .429-.085.82-.256 1.171-.17.347-.393.672-.666.975-.274.297-.57.595-.887.893-.273.249-.459.52-.556.813a3.208 3.208 0 0 0-.154.989Zm-1.78 2.285c0-.264.09-.486.271-.666.18-.186.427-.279.74-.279.312 0 .559.093.74.279.18.18.27.402.27.666s-.09.488-.27.674c-.181.181-.428.271-.74.271-.313 0-.56-.09-.74-.271a.93.93 0 0 1-.27-.674Zm10.488-9.844V223H25.22v-8.606l-2.614.886v-1.457l4.167-1.524h.212Zm10.855 9.295V223H30.69v-1.208l3.472-3.787c.381-.43.681-.801.901-1.113.22-.313.373-.594.461-.843.093-.254.14-.5.14-.739a1.96 1.96 0 0 0-.19-.887 1.4 1.4 0 0 0-.543-.608c-.24-.151-.53-.227-.871-.227-.396 0-.728.086-.997.257a1.6 1.6 0 0 0-.607.71c-.137.298-.206.64-.206 1.026h-1.765c0-.621.142-1.187.425-1.7a3.111 3.111 0 0 1 1.23-1.23c.538-.308 1.185-.462 1.941-.462.713 0 1.319.12 1.817.359.498.24.876.579 1.135 1.018.264.44.396.96.396 1.56 0 .332-.054.662-.161.989a4.69 4.69 0 0 1-.462.982 8.445 8.445 0 0 1-.696.974c-.268.322-.564.649-.886.981l-2.307 2.542h4.922Zm3.45-4.724h1.054c.41 0 .75-.071 1.018-.213.274-.141.476-.337.608-.586.132-.249.198-.534.198-.857 0-.337-.061-.625-.183-.864a1.238 1.238 0 0 0-.542-.564c-.24-.132-.544-.198-.916-.198-.312 0-.595.064-.85.191-.248.122-.446.298-.593.527-.146.225-.22.493-.22.806h-1.772c0-.567.15-1.07.447-1.509a3.04 3.04 0 0 1 1.216-1.033c.518-.254 1.099-.381 1.743-.381.688 0 1.29.115 1.802.345.517.224.92.561 1.208 1.01.288.45.433 1.006.433 1.67 0 .303-.071.611-.213.923a2.68 2.68 0 0 1-.63.857 3.288 3.288 0 0 1-1.04.623c-.415.156-.896.234-1.443.234H41.29v-.981Zm0 1.377v-.967h1.325c.625 0 1.158.073 1.597.22.444.146.806.349 1.084.607a2.3 2.3 0 0 1 .608.872c.132.327.198.674.198 1.04 0 .498-.09.942-.271 1.333a2.697 2.697 0 0 1-.755.981c-.327.269-.71.472-1.15.608a4.705 4.705 0 0 1-1.42.205 4.53 4.53 0 0 1-1.319-.19 3.598 3.598 0 0 1-1.128-.564 2.799 2.799 0 0 1-.79-.945c-.191-.381-.287-.82-.287-1.318h1.766c0 .317.073.598.22.842.15.239.36.427.63.564.273.137.585.205.937.205.37 0 .69-.066.96-.198.268-.131.473-.327.614-.585.147-.259.22-.572.22-.938 0-.415-.08-.752-.242-1.011a1.425 1.425 0 0 0-.688-.571c-.298-.127-.65-.19-1.055-.19H41.29Z"
          />
        </g>
        <g filter="url(#F)">
          <rect width="30" height="40" x="61" y="198" fill="#202020" rx="6" />
          <path
            fill="#D6D8D9"
            d="m76.886 230.301-.007 1.26c0 .498-.125 1.01-.374 1.538-.249.527-.578.962-.988 1.303l-.945-.549c.136-.22.261-.442.373-.666.113-.225.203-.464.271-.718.069-.254.103-.535.103-.843v-1.325h1.567Z"
          />
          <path
            fill="#A5A9AC"
            d="M77.396 208.958a.812.812 0 1 0 .001-1.624.812.812 0 0 0-.001 1.624ZM73.604 208.958a.812.812 0 1 0 .001-1.624.812.812 0 0 0 0 1.624Z"
          />
          <path
            fill="#A5A9AC"
            d="M75.5 211.667c-.802 0-1.49-.439-1.869-1.084h-.904a2.976 2.976 0 0 0 5.546 0h-.904a2.165 2.165 0 0 1-1.869 1.084Zm-.005-7.584a5.414 5.414 0 0 0-5.412 5.417 5.414 5.414 0 0 0 5.412 5.417 5.42 5.42 0 0 0 5.422-5.417 5.42 5.42 0 0 0-5.422-5.417Zm.005 9.75a4.332 4.332 0 0 1-4.333-4.333 4.332 4.332 0 0 1 4.333-4.333 4.332 4.332 0 0 1 4.333 4.333 4.332 4.332 0 0 1-4.333 4.333Z"
          />
        </g>
        <g filter="url(#G)">
          <rect width="30" height="40" x="95" y="198" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M109.99 208c-5.52 0-9.99 4.48-9.99 10s4.47 10 9.99 10c5.53 0 10.01-4.48 10.01-10s-4.48-10-10.01-10Zm6.93 6h-2.95a15.65 15.65 0 0 0-1.38-3.56 8.03 8.03 0 0 1 4.33 3.56Zm-6.92-3.96c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96Zm-7.74 9.96c-.16-.64-.26-1.31-.26-2s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2h-3.38Zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56a7.987 7.987 0 0 1-4.33-3.56Zm2.95-8h-2.95a7.987 7.987 0 0 1 4.33-3.56 15.65 15.65 0 0 0-1.38 3.56Zm3.97 11.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96Zm2.34-5.96h-4.68c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2Zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95a8.03 8.03 0 0 1-4.33 3.56Zm1.77-5.56c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38Z"
          />
        </g>
        <g filter="url(#H)">
          <rect width="173" height="40" x="129" y="198" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="M201.408 221.503v.997h-4.894v-.997h4.894Zm-4.646-8.245v9.242h-1.225v-9.242h1.225Zm3.999 3.973v.997h-4.247v-.997h4.247Zm.584-3.973v1.003h-4.831v-1.003h4.831Zm2.577 3.84v5.402h-1.174v-6.868h1.11l.064 1.466Zm-.279 1.708-.489-.019c.004-.47.074-.904.209-1.302.136-.402.326-.751.572-1.047a2.543 2.543 0 0 1 2.012-.933c.338 0 .643.046.914.14.271.088.501.232.692.431.194.199.343.457.444.775.102.313.152.696.152 1.149v4.5h-1.18v-4.513c0-.36-.053-.648-.159-.863a.977.977 0 0 0-.463-.477 1.672 1.672 0 0 0-.749-.152c-.292 0-.559.061-.8.184a1.921 1.921 0 0 0-.616.508 2.573 2.573 0 0 0-.539 1.619Zm10.74-3.174h1.066v6.722c0 .605-.123 1.121-.368 1.549a2.397 2.397 0 0 1-1.028.971c-.436.224-.94.336-1.511.336a3.72 3.72 0 0 1-.838-.114 3.405 3.405 0 0 1-.939-.374 2.35 2.35 0 0 1-.768-.705l.615-.698c.288.347.589.588.902.723.317.136.63.204.939.204.373 0 .694-.07.965-.21.271-.14.48-.347.628-.622.153-.271.229-.605.229-1.003v-5.268l.108-1.511Zm-4.729 3.51v-.133c0-.525.061-1.001.184-1.428.127-.432.307-.802.539-1.111a2.425 2.425 0 0 1 1.987-.965c.432 0 .809.076 1.13.228.326.149.601.366.825.654a3.2 3.2 0 0 1 .54 1.029c.131.402.222.856.273 1.364v.584a6.03 6.03 0 0 1-.273 1.359 3.195 3.195 0 0 1-.54 1.028 2.256 2.256 0 0 1-.825.654c-.326.148-.707.222-1.142.222-.411 0-.783-.087-1.118-.26a2.551 2.551 0 0 1-.85-.73 3.461 3.461 0 0 1-.546-1.105 5.008 5.008 0 0 1-.184-1.39Zm1.174-.133v.133c0 .343.034.664.102.965.072.3.18.565.323.793.149.229.337.409.565.54.229.127.502.19.819.19.39 0 .711-.082.965-.247a1.79 1.79 0 0 0 .603-.654c.152-.271.271-.565.356-.882v-1.53a3.164 3.164 0 0 0-.216-.673 2.074 2.074 0 0 0-.368-.584 1.616 1.616 0 0 0-.553-.413 1.84 1.84 0 0 0-.774-.152 1.63 1.63 0 0 0-.832.203 1.628 1.628 0 0 0-.565.546 2.645 2.645 0 0 0-.323.8c-.068.3-.102.622-.102.965Zm7.681-6.259v9.75h-1.181v-9.75h1.181Zm3.161 2.882v6.868h-1.181v-6.868h1.181Zm-1.27-1.822a.71.71 0 0 1 .172-.482c.118-.132.292-.197.52-.197.225 0 .396.065.514.197a.679.679 0 0 1 .185.482.664.664 0 0 1-.185.47c-.118.127-.289.19-.514.19-.228 0-.402-.063-.52-.19a.693.693 0 0 1-.172-.47Zm7.154 6.868a.992.992 0 0 0-.114-.47c-.072-.148-.222-.281-.451-.399-.224-.123-.563-.229-1.015-.318a7.991 7.991 0 0 1-1.035-.285 3.156 3.156 0 0 1-.781-.4 1.696 1.696 0 0 1-.489-.553 1.54 1.54 0 0 1-.171-.742c0-.271.059-.527.178-.768.123-.242.294-.455.514-.641.224-.187.493-.333.806-.438a3.25 3.25 0 0 1 1.047-.159c.551 0 1.02.097 1.41.292a2.2 2.2 0 0 1 .895.781c.207.321.311.679.311 1.072h-1.175c0-.19-.057-.374-.171-.552a1.268 1.268 0 0 0-.489-.451c-.211-.118-.472-.177-.781-.177-.325 0-.59.051-.793.152a1.012 1.012 0 0 0-.438.375.94.94 0 0 0-.07.825.767.767 0 0 0 .241.273c.115.08.275.156.483.228.207.072.472.144.793.216.563.127 1.026.279 1.39.457.364.178.635.396.813.654.178.258.267.571.267.939a1.836 1.836 0 0 1-.73 1.473 2.698 2.698 0 0 1-.838.419 3.76 3.76 0 0 1-1.086.146c-.605 0-1.117-.108-1.536-.324-.419-.216-.736-.495-.952-.838a2 2 0 0 1-.324-1.085h1.181c.017.321.11.578.279.768.169.186.377.319.622.4.246.076.489.114.73.114.322 0 .591-.042.806-.127a1.12 1.12 0 0 0 .502-.349.81.81 0 0 0 .171-.508Zm3.891-7.928v9.75h-1.174v-9.75h1.174Zm-.279 6.056-.489-.019c.004-.47.074-.904.21-1.302.135-.402.326-.751.571-1.047a2.543 2.543 0 0 1 2.012-.933c.339 0 .643.046.914.14.271.088.502.232.692.431.195.199.343.457.445.775.101.313.152.696.152 1.149v4.5h-1.181v-4.513c0-.36-.053-.648-.159-.863a.973.973 0 0 0-.463-.477 1.672 1.672 0 0 0-.749-.152c-.292 0-.559.061-.8.184a1.907 1.907 0 0 0-.615.508c-.17.216-.303.463-.4.743-.093.275-.14.567-.14.876Z"
          />
        </g>
        <g filter="url(#I)">
          <rect width="30" height="40" x="306" y="198" fill="#202020" rx="6" />
          <path
            fill="#D6D8D9"
            d="M319.585 225.899c0-.351.109-.647.326-.887.224-.247.546-.37.965-.37.42 0 .738.123.955.37.225.24.337.536.337.887 0 .345-.112.637-.337.876-.217.24-.535.36-.955.36-.419 0-.741-.12-.965-.36a1.256 1.256 0 0 1-.326-.876Z"
          />
        </g>
        <g filter="url(#J)">
          <rect width="48" height="40" x="340" y="198" fill="#434343" rx="6" />
          <path
            fill="#fff"
            d="m363.59 213.41 3.58 3.59H353v2h14.17l-3.59 3.59L365 224l6-6-6-6-1.41 1.41ZM372 212v12h2v-12h-2Z"
          />
        </g>
        <path fill="#2B2B2B" d="M0 242h392v46H0z" />
        <rect width="12" height="12" x="108" y="259" fill="#B3B3B3" rx="1" />
        <path fill="#B3B3B3" d="M196 271a6 6 0 1 0 0-12 6 6 0 0 0 0 12Z" />
        <path
          fill="#B3B3B3"
          fillRule="evenodd"
          d="M205 265a9 9 0 0 1-9 9 9 9 0 0 1-9-9 9 9 0 0 1 9-9 9 9 0 0 1 9 9Zm-1.5 0a7.5 7.5 0 1 1-15 0 7.5 7.5 0 0 1 15 0Z"
          clipRule="evenodd"
        />
        <path
          fill="#B3B3B3"
          d="M272.489 265.844a.973.973 0 0 1 0-1.688l9.851-5.992c.715-.435 1.66.046 1.66.844v11.984c0 .798-.945 1.279-1.66.844l-9.851-5.992Z"
        />
      </g>
      <defs>
        <filter
          id="a"
          width="34"
          height="34"
          x="10"
          y="6"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feGaussianBlur stdDeviation="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="c"
          width="34.8"
          height="41"
          x="4"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="d"
          width="34.8"
          height="41"
          x="42.8"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="e"
          width="34.8"
          height="41"
          x="81.6"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="f"
          width="34.8"
          height="41"
          x="120.4"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="g"
          width="34.8"
          height="41"
          x="159.2"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="h"
          width="34.8"
          height="41"
          x="198"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="i"
          width="34.8"
          height="41"
          x="236.8"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="j"
          width="34.8"
          height="41"
          x="275.6"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="k"
          width="34.8"
          height="41"
          x="314.4"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="l"
          width="34.8"
          height="41"
          x="353.2"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="m"
          width="35.111"
          height="41"
          x="22"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="n"
          width="35.111"
          height="41"
          x="61.111"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="o"
          width="35.111"
          height="41"
          x="100.222"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="p"
          width="35.111"
          height="41"
          x="139.333"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="q"
          width="35.111"
          height="41"
          x="178.444"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="r"
          width="35.111"
          height="41"
          x="217.556"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="s"
          width="35.111"
          height="41"
          x="256.667"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="t"
          width="35.111"
          height="41"
          x="295.778"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="u"
          width="35.111"
          height="41"
          x="334.889"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="v"
          width="48"
          height="41"
          x="4"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="w"
          width="36.571"
          height="41"
          x="56"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="x"
          width="36.571"
          height="41"
          x="96.571"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="y"
          width="36.571"
          height="41"
          x="137.143"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="z"
          width="36.571"
          height="41"
          x="177.714"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="A"
          width="36.571"
          height="41"
          x="218.286"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="B"
          width="36.571"
          height="41"
          x="258.857"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="C"
          width="36.571"
          height="41"
          x="299.429"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="D"
          width="48"
          height="41"
          x="340"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="E"
          width="53"
          height="41"
          x="4"
          y="198"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="F"
          width="30"
          height="41"
          x="61"
          y="198"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="G"
          width="30"
          height="41"
          x="95"
          y="198"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="H"
          width="173"
          height="41"
          x="129"
          y="198"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="I"
          width="30"
          height="41"
          x="306"
          y="198"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <filter
          id="J"
          width="48"
          height="41"
          x="340"
          y="198"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_99283" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_99283" result="shape" />
        </filter>
        <clipPath id="b">
          <path fill="#fff" d="M121.571 10h24v24h-24z" />
        </clipPath>
      </defs>
    </svg>
  ) : (
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 392 288" {...rest}>
      <path fill="#EDF0F2" d="M0 0h392v44H0z" />
      <g filter="url(#a)" opacity=".4">
        <rect width="30" height="30" x="12" y="7" fill="#fff" rx="15" />
        <path fill="#666" d="M30.41 17.41 29 16l-6 6 6 6 1.41-1.41L25.83 22l4.58-4.59Z" />
      </g>
      <path
        fill="#5D5E5F"
        d="M74.76 13.5a2.967 2.967 0 0 0-2.974 2.975v11.05A2.967 2.967 0 0 0 74.76 30.5h8.925l5.1-5.1v-8.925A2.967 2.967 0 0 0 85.81 13.5H74.76Zm.213 1.7h10.625a1.487 1.487 0 0 1 1.488 1.488v7.862H85.81a2.967 2.967 0 0 0-2.975 2.975V28.8h-7.863a1.487 1.487 0 0 1-1.487-1.488V16.688a1.488 1.488 0 0 1 1.487-1.487Zm7.387 2.355a1.56 1.56 0 0 0-.4.05c-.799.221-1.25 1.037-1.045 1.845.042.128.102.255.178.374l2.746-.748c0-.145-.017-.289-.051-.434a1.492 1.492 0 0 0-1.428-1.087Zm-5.33 1.47c-.144 0-.272 0-.4.043a1.497 1.497 0 0 0-1.045 1.827c.026.136.102.255.179.391l2.745-.748a1.462 1.462 0 0 0-1.479-1.513Zm7.268 2.346-7.76 2.134a4.476 4.476 0 0 0 4.555 1.393 4.482 4.482 0 0 0 3.205-3.527Z"
        opacity=".4"
      />
      <g clipPath="url(#b)" opacity=".4">
        <path
          fill="#5D5E5F"
          d="M132.714 17h2.572v10h-2.572V17Zm-4.285 0h-5.143a1.693 1.693 0 0 0-1.714 1.667v6.666c0 .834.685 1.667 1.714 1.667h5.143a1.694 1.694 0 0 0 1.714-1.667V22h-2.571v2.5h-3.429v-5h6v-.833c0-.834-.686-1.667-1.714-1.667Zm17.143 2.5V17h-7.715v10h2.572v-3.333h3.428v-2.5h-3.428V19.5h5.143Z"
        />
      </g>
      <g fill="#5D5E5F" opacity=".4">
        <path d="m190.357 20.41-6.5-.002v1.667h6.5V20.41ZM183.857 23.332l6.5.002V25l-6.5-.001v-1.666ZM188.357 26.334l-4.5-.002V28l4.5.001v-1.666Z" />
        <path
          fill-rule="evenodd"
          d="M189.207 14.227h3.484c.916 0 1.666.777 1.666 1.728v13.818c0 .95-.75 1.727-1.666 1.727h-11.667c-.917 0-1.667-.777-1.667-1.727V15.955c0-.95.75-1.728 1.667-1.728h3.483c.35-1.001 1.267-1.727 2.35-1.727 1.084 0 2 .726 2.35 1.727Zm-1.516.864c0-.475-.375-.864-.834-.864-.458 0-.833.389-.833.864s.375.864.833.864a.826.826 0 0 0 .678-.363.904.904 0 0 0 .147-.38.808.808 0 0 0 .009-.121Zm-6.667.864v13.818h11.667V15.955h-1.667v2.59h-8.333v-2.59h-1.667Z"
          clip-rule="evenodd"
        />
      </g>
      <path
        fill="#5D5E5F"
        d="M247.283 22.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58a.49.49 0 0 0 .12-.61l-1.92-3.32a.488.488 0 0 0-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54a.484.484 0 0 0-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22l-1.91 3.32c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94 0 .31.02.64.07.94l-2.03 1.58a.49.49 0 0 0-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58Zm-7.14 2.66a3.61 3.61 0 0 1-3.6-3.6c0-1.98 1.62-3.6 3.6-3.6s3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6Z"
        opacity=".4"
      />
      <path stroke="#CCCED5" d="M278.428 11v22" opacity=".4" />
      <path
        fill="#666"
        d="M310.714 20c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2Zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2Zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2Z"
        opacity=".4"
      />
      <path
        fill="#454647"
        d="M370 24c1.66 0 2.99-1.34 2.99-3l.01-6c0-1.66-1.34-3-3-3s-3 1.34-3 3v6c0 1.66 1.34 3 3 3Zm5.3-3c0 3-2.54 5.1-5.3 5.1s-5.3-2.1-5.3-5.1H363c0 3.41 2.72 6.23 6 6.72V31h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7Z"
        opacity=".4"
      />
      <path fill="#EDF0F2" d="M0 44h392v198H0z" />
      <g opacity=".4">
        <g filter="url(#c)">
          <rect width="34.8" height="40" x="4" y="48" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="m23.77 75.124 4.155 3.291-1.46 1.348-4.088-3.246 1.393-1.392Zm4.099-6.816v1.033c0 1.228-.154 2.328-.46 3.302-.308.973-.75 1.8-1.326 2.481a5.747 5.747 0 0 1-2.077 1.562c-.802.359-1.7.539-2.696.539-.966 0-1.853-.18-2.662-.54a5.982 5.982 0 0 1-2.088-1.56c-.584-.682-1.037-1.51-1.36-2.482-.321-.974-.482-2.074-.482-3.302v-1.033c0-1.228.157-2.325.472-3.29.322-.974.774-1.801 1.358-2.483a5.822 5.822 0 0 1 2.078-1.572c.809-.36 1.696-.54 2.662-.54.995 0 1.898.18 2.706.54.809.36 1.501.883 2.078 1.572.576.682 1.018 1.509 1.325 2.482.315.966.472 2.063.472 3.29Zm-2.145 1.033v-1.056c0-.973-.101-1.834-.303-2.583-.195-.748-.483-1.377-.865-1.887a3.755 3.755 0 0 0-1.393-1.156c-.546-.262-1.172-.393-1.875-.393-.667 0-1.273.13-1.82.393a3.875 3.875 0 0 0-1.392 1.156c-.39.51-.689 1.139-.899 1.887-.21.749-.314 1.61-.314 2.583v1.056c0 .98.105 1.85.314 2.605.21.749.51 1.382.899 1.898.397.51.868.895 1.415 1.157a4.155 4.155 0 0 0 1.82.393c.703 0 1.328-.131 1.875-.393a3.663 3.663 0 0 0 1.381-1.157c.382-.516.67-1.149.865-1.898.194-.756.292-1.624.292-2.605Z"
          />
          <path fill="#666" d="M35.174 51.876V59h-1.406v-5.503l-1.69.537v-1.108l2.944-1.05h.152Z" />
        </g>
        <g filter="url(#d)">
          <rect width="34.8" height="40" x="42.8" y="48" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="m56.19 72.059 3.246-11.41h1.573l-.91 4.436L56.606 77h-1.56l1.145-4.941Zm-3.357-11.41 2.583 11.185L56.19 77h-1.55l-3.964-16.352h2.156Zm12.376 11.174 2.527-11.175h2.167L65.95 77H64.4l.809-5.177Zm-3.965-11.175 3.156 11.41L65.546 77h-1.561l-3.37-11.915-.92-4.437h1.55Z"
          />
          <path
            fill="#666"
            d="M75.41 57.901V59h-4.864v-.938l2.3-2.465c.231-.258.413-.484.547-.679.133-.199.23-.376.288-.532a1.293 1.293 0 0 0-.015-1.006.8.8 0 0 0-.317-.361.947.947 0 0 0-.508-.127.98.98 0 0 0-.557.156.993.993 0 0 0-.351.434 1.608 1.608 0 0 0-.117.63h-1.412c0-.423.102-.81.303-1.162a2.22 2.22 0 0 1 .855-.845c.368-.211.804-.317 1.308-.317.498 0 .918.082 1.26.244.345.16.606.39.781.694.18.3.269.657.269 1.074 0 .234-.038.464-.112.688a3.109 3.109 0 0 1-.323.664c-.136.218-.302.44-.498.664-.195.225-.412.458-.65.699L72.364 57.9h3.046Z"
          />
        </g>
        <g filter="url(#e)">
          <rect width="34.8" height="40" x="81.6" y="48" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M104.75 75.237V77h-8.659v-1.763h8.659Zm-8.22-14.589V77h-2.168V60.648h2.167Zm7.075 7.03v1.764h-7.514v-1.763h7.514Zm1.033-7.03v1.775h-8.547v-1.775h8.547Z"
          />
          <path
            fill="#666"
            d="M110.787 54.835h.752c.24 0 .439-.04.595-.122a.8.8 0 0 0 .347-.352c.078-.153.117-.33.117-.532 0-.182-.036-.343-.107-.483a.729.729 0 0 0-.318-.332 1.085 1.085 0 0 0-.542-.122c-.172 0-.332.034-.478.102a.875.875 0 0 0-.352.288.755.755 0 0 0-.132.45h-1.411c0-.391.104-.731.313-1.021.211-.29.495-.516.849-.679a2.78 2.78 0 0 1 1.172-.244c.482 0 .904.078 1.265.235.361.152.643.379.845.678.201.3.302.67.302 1.114 0 .224-.052.442-.156.654a1.84 1.84 0 0 1-.449.566c-.192.166-.427.3-.703.4a2.792 2.792 0 0 1-.933.147h-.976v-.747Zm0 1.07v-.728h.976c.388 0 .728.044 1.021.132.293.088.538.214.737.38.199.163.348.357.449.581.101.222.152.468.152.738 0 .332-.064.628-.191.889a1.863 1.863 0 0 1-.537.654 2.454 2.454 0 0 1-.801.41 3.489 3.489 0 0 1-1.885.015 2.641 2.641 0 0 1-.781-.376 1.934 1.934 0 0 1-.556-.635 1.915 1.915 0 0 1-.205-.913h1.411a.89.89 0 0 0 .136.488.953.953 0 0 0 .376.337c.163.081.344.122.542.122.225 0 .417-.04.577-.122a.888.888 0 0 0 .371-.352c.088-.153.131-.33.131-.532 0-.26-.047-.469-.141-.625a.846.846 0 0 0-.405-.351 1.591 1.591 0 0 0-.625-.113h-.752Z"
          />
        </g>
        <g filter="url(#f)">
          <rect width="34.8" height="40" x="120.4" y="48" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M132.611 60.648h5.414c1.227 0 2.264.188 3.11.562.854.374 1.501.928 1.943 1.662.449.726.674 1.621.674 2.684 0 .749-.153 1.434-.46 2.055a4.38 4.38 0 0 1-1.303 1.573c-.562.426-1.235.745-2.022.954l-.606.236h-5.087l-.023-1.763h3.841c.779 0 1.426-.135 1.943-.404.516-.277.906-.648 1.168-1.112.262-.465.393-.977.393-1.539 0-.629-.124-1.179-.371-1.65-.247-.472-.636-.835-1.168-1.09-.524-.262-1.201-.393-2.032-.393h-3.246V77h-2.168V60.648ZM142.169 77l-3.976-7.412 2.257-.011 4.032 7.288V77h-2.313Z"
          />
          <path
            fill="#666"
            d="M153.126 56.344v1.103h-5.122l-.068-.854 2.964-4.702h1.118l-1.211 2.026-1.474 2.427h3.793Zm-.805-4.453V59h-1.406v-7.11h1.406Z"
          />
        </g>
        <g filter="url(#g)">
          <rect width="34.8" height="40" x="159.2" y="48" fill="#fff" rx="6" />
          <path fill="#000" d="M177.678 60.648V77h-2.134V60.648h2.134Zm5.256 0v1.775H170.3v-1.775h12.634Z" />
          <path
            fill="#666"
            d="m188.269 55.763-1.123-.269.406-3.603h3.994v1.137h-2.837l-.176 1.578c.094-.056.238-.114.43-.176.192-.065.407-.098.644-.098.345 0 .651.054.918.161.267.108.493.264.679.469.189.205.332.456.43.752.097.296.146.631.146 1.006 0 .316-.049.617-.146.903a2.244 2.244 0 0 1-.445.762 2.064 2.064 0 0 1-.747.522c-.299.127-.654.19-1.064.19-.306 0-.603-.045-.889-.136a2.445 2.445 0 0 1-.767-.405 2.1 2.1 0 0 1-.542-.65 1.98 1.98 0 0 1-.21-.879h1.397c.019.202.072.376.156.523a.92.92 0 0 0 .347.332c.143.078.311.117.503.117a.957.957 0 0 0 .459-.102.827.827 0 0 0 .307-.284 1.32 1.32 0 0 0 .171-.43c.039-.165.059-.344.059-.536 0-.193-.023-.367-.068-.523a1.13 1.13 0 0 0-.21-.405.932.932 0 0 0-.362-.264 1.26 1.26 0 0 0-.503-.093c-.26 0-.462.041-.605.122-.14.082-.257.174-.352.279Z"
          />
        </g>
        <g filter="url(#h)">
          <rect width="34.8" height="40" x="198" y="48" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="m211.144 60.648 4.245 8.21 4.256-8.21h2.46l-5.638 10.243V77h-2.168v-6.11l-5.637-10.242h2.482Z"
          />
          <path
            fill="#666"
            d="M229.374 51.817h.205v1.123h-.083c-.371 0-.701.056-.991.166a2.03 2.03 0 0 0-.737.474 2.048 2.048 0 0 0-.459.733 2.78 2.78 0 0 0-.157.961v1.182c0 .254.025.479.074.674.052.192.125.353.219.483a.994.994 0 0 0 .342.288c.13.062.277.093.44.093a.878.878 0 0 0 .415-.097.928.928 0 0 0 .322-.274c.091-.12.159-.26.205-.42.049-.163.073-.34.073-.532s-.024-.37-.073-.532a1.213 1.213 0 0 0-.205-.42.94.94 0 0 0-.332-.279.97.97 0 0 0-.44-.097 1.117 1.117 0 0 0-1.128 1.05l-.424-.274a2 2 0 0 1 .156-.713c.098-.224.231-.423.4-.596.173-.175.38-.312.62-.41.241-.1.513-.151.816-.151.332 0 .623.063.874.19.254.127.465.302.635.523.169.221.296.477.38.766.085.29.127.6.127.928 0 .345-.057.666-.17.962a2.25 2.25 0 0 1-1.236 1.294 2.513 2.513 0 0 1-.986.186c-.378 0-.721-.069-1.03-.205a2.341 2.341 0 0 1-.791-.586 2.636 2.636 0 0 1-.513-.894 3.508 3.508 0 0 1-.176-1.133v-.547c0-.572.083-1.097.249-1.572.169-.478.412-.892.728-1.24a3.224 3.224 0 0 1 1.142-.816 3.78 3.78 0 0 1 1.509-.288Z"
          />
        </g>
        <g filter="url(#i)">
          <rect width="34.8" height="40" x="236.8" y="48" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M257.996 60.648h2.156V71.71c0 1.228-.273 2.25-.82 3.066a5.113 5.113 0 0 1-2.178 1.842 7.063 7.063 0 0 1-2.931.607c-1.109 0-2.112-.203-3.01-.607a4.926 4.926 0 0 1-2.123-1.842c-.516-.816-.775-1.838-.775-3.066V60.648h2.145V71.71c0 .854.158 1.558.472 2.112.314.554.752.966 1.314 1.235.569.27 1.228.404 1.977.404.756 0 1.415-.134 1.976-.404a2.935 2.935 0 0 0 1.325-1.235c.315-.554.472-1.258.472-2.112V60.648Z"
          />
          <path fill="#666" d="M269.375 51.89v.758L266.626 59h-1.484l2.749-6.01h-3.54v-1.1h5.024Z" />
        </g>
        <g filter="url(#j)">
          <rect width="34.8" height="40" x="275.6" y="48" fill="#fff" rx="6" />
          <path fill="#000" d="M294.089 60.648V77h-2.167V60.648h2.167Z" />
          <path
            fill="#666"
            d="M308.136 57.052c0 .446-.104.822-.312 1.128a1.95 1.95 0 0 1-.86.688c-.361.153-.771.23-1.23.23-.459 0-.871-.077-1.235-.23a1.98 1.98 0 0 1-.865-.688c-.211-.306-.317-.682-.317-1.128 0-.3.06-.57.181-.81.12-.245.288-.453.502-.626.219-.176.474-.309.767-.4.293-.095.612-.142.957-.142.462 0 .876.082 1.24.244.365.163.651.393.86.689.208.296.312.644.312 1.045Zm-1.416-.093c0-.218-.042-.405-.127-.562a.858.858 0 0 0-.346-.366 1.046 1.046 0 0 0-.523-.127c-.198 0-.373.043-.522.127a.89.89 0 0 0-.352.367 1.206 1.206 0 0 0-.122.561c0 .215.041.4.122.557a.897.897 0 0 0 .352.361c.153.081.33.122.532.122s.376-.04.522-.122a.832.832 0 0 0 .342-.361c.082-.157.122-.342.122-.557Zm1.265-3.184c0 .362-.096.682-.288.962a1.918 1.918 0 0 1-.801.65 2.745 2.745 0 0 1-1.162.234c-.44 0-.83-.078-1.172-.234a1.918 1.918 0 0 1-.801-.65 1.66 1.66 0 0 1-.288-.962c0-.43.096-.79.288-1.084.196-.296.462-.52.801-.673.342-.153.729-.23 1.162-.23.44 0 .829.077 1.167.23.342.153.609.377.801.673.195.293.293.655.293 1.084Zm-1.406.064a1.13 1.13 0 0 0-.103-.498.765.765 0 0 0-.293-.332.845.845 0 0 0-.459-.117.877.877 0 0 0-.454.112.742.742 0 0 0-.288.327c-.065.14-.098.31-.098.508 0 .192.033.361.098.508a.797.797 0 0 0 .293.337c.127.081.28.122.459.122s.33-.041.454-.122a.766.766 0 0 0 .288-.337c.068-.147.103-.316.103-.508Z"
          />
        </g>
        <g filter="url(#k)">
          <rect width="34.8" height="40" x="314.4" y="48" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M338.37 68.308v1.033c0 1.228-.154 2.328-.461 3.302-.307.973-.748 1.8-1.325 2.481a5.74 5.74 0 0 1-2.078 1.562c-.801.359-1.699.539-2.695.539-.966 0-1.853-.18-2.661-.54a5.971 5.971 0 0 1-2.089-1.56c-.584-.682-1.037-1.51-1.359-2.482-.322-.974-.483-2.074-.483-3.302v-1.033c0-1.228.157-2.325.472-3.29.321-.974.774-1.801 1.358-2.483a5.824 5.824 0 0 1 2.078-1.572c.809-.36 1.696-.54 2.662-.54.995 0 1.894.18 2.695.54.809.36 1.501.883 2.078 1.572.584.682 1.029 1.509 1.336 2.482.315.966.472 2.063.472 3.29Zm-2.145 1.033v-1.056c0-.973-.101-1.834-.304-2.583-.194-.748-.482-1.377-.864-1.887a3.732 3.732 0 0 0-1.404-1.156c-.547-.262-1.168-.393-1.864-.393-.674 0-1.284.13-1.831.393a3.871 3.871 0 0 0-1.392 1.156c-.382.51-.678 1.139-.888 1.887-.209.749-.314 1.61-.314 2.583v1.056c0 .98.105 1.85.314 2.605.21.749.509 1.382.899 1.898.397.51.865.895 1.404 1.157a4.176 4.176 0 0 0 1.83.393c.704 0 1.329-.131 1.876-.393a3.663 3.663 0 0 0 1.381-1.157c.382-.516.67-1.149.865-1.898.194-.756.292-1.624.292-2.605Z"
          />
          <path
            fill="#666"
            d="M343.142 57.93h.093c.39 0 .726-.047 1.006-.14.283-.099.516-.239.698-.42.182-.183.317-.406.405-.67.088-.267.132-.57.132-.908v-1.348a2.65 2.65 0 0 0-.078-.678 1.345 1.345 0 0 0-.215-.484.91.91 0 0 0-.322-.293.83.83 0 0 0-.401-.097.748.748 0 0 0-.415.117.987.987 0 0 0-.307.307c-.082.13-.145.28-.191.45-.042.166-.063.34-.063.522s.021.357.063.523c.043.162.106.307.191.434.084.124.19.223.317.298a.9.9 0 0 0 .449.107c.166 0 .315-.03.445-.092.133-.066.245-.15.337-.254.094-.105.166-.22.214-.347a.992.992 0 0 0 .079-.386l.463.254c0 .228-.048.453-.146.674a2.076 2.076 0 0 1-1.011 1.035 1.696 1.696 0 0 1-.732.161 2.06 2.06 0 0 1-.884-.18 1.928 1.928 0 0 1-.654-.508 2.313 2.313 0 0 1-.401-.762 3.13 3.13 0 0 1-.136-.942 2.8 2.8 0 0 1 .166-.972c.114-.303.275-.57.483-.8a2.26 2.26 0 0 1 .757-.543c.296-.133.625-.2.986-.2.362 0 .69.07.987.21.296.14.55.339.761.596.212.254.375.558.489.913.117.355.175.748.175 1.181v.489c0 .462-.05.892-.151 1.289a3.772 3.772 0 0 1-.444 1.079c-.196.319-.44.592-.733.82-.29.228-.626.402-1.011.523-.384.12-.813.18-1.289.18h-.112v-1.137Z"
          />
        </g>
        <g filter="url(#l)">
          <rect width="34.8" height="40" x="353.2" y="48" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M371.274 70.587h-4.369v-1.763h4.369c.846 0 1.531-.135 2.055-.404.524-.27.906-.644 1.145-1.123.248-.48.371-1.026.371-1.64 0-.561-.123-1.09-.371-1.583-.239-.494-.621-.891-1.145-1.19-.524-.308-1.209-.461-2.055-.461h-3.864V77h-2.167V60.648h6.031c1.235 0 2.28.214 3.133.64.854.427 1.501 1.019 1.943 1.775.442.749.663 1.606.663 2.572 0 1.048-.221 1.943-.663 2.684-.442.741-1.089 1.306-1.943 1.696-.853.382-1.898.572-3.133.572Z"
          />
          <path
            fill="#666"
            d="M385.731 54.82v1.23c0 .535-.057.995-.171 1.383-.114.384-.278.7-.493.947a1.943 1.943 0 0 1-.757.542 2.605 2.605 0 0 1-.976.176c-.287 0-.554-.036-.801-.108a2.023 2.023 0 0 1-.669-.346 2.204 2.204 0 0 1-.508-.591 3.033 3.033 0 0 1-.322-.86 5.218 5.218 0 0 1-.112-1.142v-1.23c0-.535.057-.992.171-1.373.117-.384.281-.698.493-.942.215-.244.468-.423.761-.537a2.61 2.61 0 0 1 .977-.176c.286 0 .552.037.796.112.247.072.47.184.669.337.198.153.368.35.508.591.14.238.247.523.322.855.075.328.112.706.112 1.132Zm-1.411 1.416V54.63c0-.257-.015-.482-.044-.674a1.99 1.99 0 0 0-.122-.488 1.033 1.033 0 0 0-.205-.332.745.745 0 0 0-.278-.186.985.985 0 0 0-.347-.058c-.16 0-.301.03-.425.092a.787.787 0 0 0-.307.298c-.085.134-.15.313-.196.537a4.433 4.433 0 0 0-.063.81v1.607c0 .258.013.484.039.679.029.195.071.363.127.503.058.137.127.249.205.337a.744.744 0 0 0 .278.185c.108.04.225.059.352.059.156 0 .294-.03.415-.093a.816.816 0 0 0 .312-.303 1.59 1.59 0 0 0 .196-.546c.042-.225.063-.498.063-.82Z"
          />
        </g>
      </g>
      <g opacity=".4">
        <g filter="url(#m)">
          <rect width="35.111" height="40" x="22" y="98" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M40.005 112.097 34.592 127h-2.213l6.233-16.352h1.426l-.033 1.449ZM44.542 127l-5.424-14.903-.034-1.449h1.426L46.766 127h-2.224Zm-.28-6.053v1.774h-9.187v-1.774h9.186Z"
          />
        </g>
        <g filter="url(#n)">
          <rect width="35.111" height="40" x="61.111" y="98" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M82.451 122.867c0-.382-.06-.719-.18-1.011a1.923 1.923 0 0 0-.606-.808c-.284-.24-.681-.468-1.19-.685a16.7 16.7 0 0 0-1.91-.663 17.47 17.47 0 0 1-2.19-.797c-.65-.3-1.209-.64-1.673-1.022a4.036 4.036 0 0 1-1.067-1.314c-.247-.494-.37-1.06-.37-1.696 0-.636.13-1.224.393-1.763a4.128 4.128 0 0 1 1.123-1.404 5.437 5.437 0 0 1 1.763-.943c.681-.225 1.441-.337 2.28-.337 1.228 0 2.268.236 3.122.707.86.465 1.516 1.075 1.965 1.831.45.749.674 1.55.674 2.403H82.43c0-.614-.131-1.157-.393-1.628-.262-.479-.66-.854-1.19-1.123-.532-.277-1.206-.416-2.022-.416-.771 0-1.408.116-1.91.348-.5.232-.875.547-1.122.944-.24.397-.36.85-.36 1.359 0 .344.071.658.214.943.15.277.378.535.685.775a5.5 5.5 0 0 0 1.19.662c.487.203 1.067.397 1.74.584.93.263 1.73.555 2.404.876.674.322 1.228.686 1.662 1.09.442.397.768.85.977 1.359.218.501.326 1.07.326 1.707 0 .666-.135 1.269-.404 1.808-.27.539-.655.999-1.157 1.381s-1.104.678-1.808.887c-.696.203-1.475.304-2.336.304a8.084 8.084 0 0 1-2.235-.315 6.649 6.649 0 0 1-1.988-.943 4.94 4.94 0 0 1-1.426-1.55c-.352-.621-.528-1.34-.528-2.156h2.156c0 .561.109 1.044.326 1.448.217.397.513.727.887.989a4.16 4.16 0 0 0 1.292.584c.486.12.992.179 1.516.179.756 0 1.396-.104 1.92-.314.524-.21.921-.509 1.19-.898.278-.39.416-.85.416-1.382Z"
          />
        </g>
        <g filter="url(#o)">
          <rect width="35.111" height="40" x="100.222" y="98" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M116.554 127h-3.414l.022-1.763h3.392c1.168 0 2.141-.244 2.92-.73.778-.494 1.362-1.183 1.751-2.067.397-.891.596-1.931.596-3.122v-.999c0-.936-.113-1.767-.337-2.493-.225-.734-.554-1.352-.989-1.853a4.171 4.171 0 0 0-1.594-1.157c-.622-.262-1.337-.393-2.145-.393h-3.684v-1.775h3.684c1.07 0 2.047.18 2.931.54a6.296 6.296 0 0 1 2.28 1.538c.644.666 1.138 1.475 1.482 2.426.345.943.517 2.006.517 3.189v.977c0 1.183-.172 2.25-.517 3.201-.344.943-.842 1.748-1.494 2.415a6.51 6.51 0 0 1-2.335 1.538c-.906.352-1.928.528-3.066.528Zm-2.258-16.352V127h-2.167v-16.352h2.167Z"
          />
        </g>
        <g filter="url(#p)">
          <rect width="35.111" height="40" x="139.333" y="98" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M154.598 110.648V127h-2.168v-16.352h2.168Zm6.85 7.356v1.775h-7.322v-1.775h7.322Zm1.112-7.356v1.775h-8.434v-1.775h8.434Z"
          />
        </g>
        <g filter="url(#q)">
          <rect width="35.111" height="40" x="178.444" y="98" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M202.143 118.858v5.986c-.202.299-.524.636-.966 1.01-.442.367-1.052.689-1.83.966-.772.27-1.767.405-2.988.405-.996 0-1.913-.173-2.751-.517a6.213 6.213 0 0 1-2.168-1.527c-.606-.674-1.078-1.49-1.415-2.449-.329-.965-.494-2.058-.494-3.279v-1.269c0-1.22.142-2.31.427-3.268.292-.958.719-1.771 1.28-2.437a5.358 5.358 0 0 1 2.067-1.527c.816-.352 1.752-.528 2.807-.528 1.251 0 2.295.217 3.133.651.847.427 1.505 1.018 1.977 1.775.479.756.786 1.617.921 2.583h-2.168a4.543 4.543 0 0 0-.584-1.618 3.12 3.12 0 0 0-1.224-1.168c-.531-.299-1.216-.449-2.055-.449-.756 0-1.411.139-1.965.416a3.618 3.618 0 0 0-1.37 1.19c-.36.517-.629 1.142-.809 1.876-.172.733-.258 1.561-.258 2.482v1.291c0 .943.108 1.786.326 2.527.224.741.542 1.374.954 1.898.412.517.902.91 1.471 1.179.577.27 1.213.404 1.909.404.772 0 1.397-.063 1.876-.19.479-.135.853-.292 1.123-.472.27-.187.475-.363.618-.528v-3.661h-3.785v-1.752h5.941Z"
          />
        </g>
        <g filter="url(#r)">
          <rect width="35.111" height="40" x="217.556" y="98" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M239.48 117.679v1.763h-8.85v-1.763h8.85Zm-8.513-7.031V127H228.8v-16.352h2.167Zm10.4 0V127h-2.157v-16.352h2.157Z"
          />
        </g>
        <g filter="url(#s)">
          <rect width="35.111" height="40" x="256.667" y="98" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M276.637 122.227v-11.579h2.156v11.579c0 1.078-.221 1.988-.662 2.729a4.353 4.353 0 0 1-1.831 1.696c-.771.382-1.658.573-2.662.573-1.003 0-1.894-.173-2.673-.517a4.035 4.035 0 0 1-1.83-1.572c-.442-.704-.663-1.591-.663-2.662h2.168c0 .689.127 1.254.382 1.696.254.442.606.767 1.055.977.457.21.977.314 1.561.314.569 0 1.078-.119 1.528-.359.456-.247.816-.61 1.078-1.089.262-.487.393-1.082.393-1.786Z"
          />
        </g>
        <g filter="url(#t)">
          <rect width="35.111" height="40" x="295.778" y="98" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M310.178 110.648V127h-2.168v-16.352h2.168Zm9.871 0-6.794 7.626-3.819 3.964-.359-2.313 2.875-3.167 5.492-6.11h2.605ZM317.96 127l-6.053-7.974 1.292-1.718 7.344 9.692h-2.583Z"
          />
        </g>
        <g filter="url(#u)">
          <rect width="35.111" height="40" x="334.889" y="98" fill="#fff" rx="6" />
          <path fill="#000" d="M358.06 125.237V127h-8.176v-1.763h8.176Zm-7.749-14.589V127h-2.168v-16.352h2.168Z" />
        </g>
      </g>
      <g opacity=".4">
        <g filter="url(#v)">
          <rect width="48" height="40" x="4" y="148" fill="#CCCED5" rx="6" />
          <path
            fill="#3D3D3F"
            d="M28.682 158.789a.95.95 0 0 0-1.364 0l-8.533 8.716c-.608.622-.178 1.684.682 1.684H22.5v7.289c0 .564.448 1.022 1 1.022h9c.552 0 1-.458 1-1.022v-7.289h3.033c.86 0 1.29-1.062.682-1.684l-8.533-8.716Z"
          />
        </g>
        <g filter="url(#w)">
          <rect width="36.571" height="40" x="56" y="148" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M80.26 175.237V177H69.187v-1.763H80.26Zm-.36-13.016L69.705 177h-1.337v-1.617l10.186-14.735h1.348v1.573Zm-.92-1.573v1.775H68.513v-1.775H78.98Z"
          />
        </g>
        <g filter="url(#x)">
          <rect width="36.571" height="40" x="96.572" y="148" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="m110.949 160.648 3.931 6.267 3.93-6.267h2.527l-5.166 8.098 5.29 8.254h-2.55l-4.031-6.39-4.032 6.39h-2.549l5.289-8.254-5.166-8.098h2.527Z"
          />
        </g>
        <g filter="url(#y)">
          <rect width="36.571" height="40" x="137.143" y="148" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M159.707 171.8h2.157c-.113 1.033-.408 1.958-.888 2.774-.479.816-1.156 1.464-2.032 1.943-.876.472-1.969.708-3.28.708-.958 0-1.83-.18-2.616-.539a5.826 5.826 0 0 1-2.011-1.528c-.561-.666-.995-1.464-1.302-2.392-.3-.936-.45-1.976-.45-3.122v-1.628c0-1.146.15-2.183.45-3.111.307-.936.745-1.737 1.314-2.404a5.858 5.858 0 0 1 2.077-1.538c.809-.359 1.719-.539 2.729-.539 1.236 0 2.28.232 3.134.696a4.98 4.98 0 0 1 1.987 1.932c.48.816.775 1.763.888 2.841h-2.157c-.104-.764-.299-1.419-.584-1.965a3.033 3.033 0 0 0-1.213-1.281c-.524-.299-1.209-.449-2.055-.449-.726 0-1.366.139-1.92.416a3.86 3.86 0 0 0-1.381 1.179c-.367.509-.644 1.119-.832 1.831-.187.711-.28 1.501-.28 2.369v1.651c0 .801.082 1.554.247 2.257.172.704.43 1.322.775 1.853.344.532.782.951 1.314 1.258.531.3 1.16.449 1.886.449.921 0 1.655-.146 2.202-.438a2.868 2.868 0 0 0 1.235-1.257c.284-.547.487-1.202.606-1.966Z"
          />
        </g>
        <g filter="url(#z)">
          <rect width="36.571" height="40" x="177.714" y="148" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="m195.854 174.518 4.818-13.87h2.347L196.966 177h-1.673l.561-2.482Zm-4.503-13.87 4.773 13.87.595 2.482h-1.674l-6.042-16.352h2.348Z"
          />
        </g>
        <g filter="url(#A)">
          <rect width="36.571" height="40" x="218.286" y="148" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M237.133 169.352h-4.144l-.023-1.741h3.763c.621 0 1.164-.104 1.628-.314.464-.21.824-.509 1.078-.899.262-.396.393-.868.393-1.415 0-.599-.116-1.085-.348-1.46-.225-.381-.573-.658-1.044-.831-.465-.179-1.056-.269-1.775-.269h-3.189V177h-2.168v-16.352h5.357c.839 0 1.587.087 2.246.259.659.164 1.217.426 1.674.786a3.34 3.34 0 0 1 1.055 1.348c.24.546.36 1.201.36 1.965 0 .674-.173 1.284-.517 1.83-.344.539-.823.981-1.437 1.326-.607.344-1.318.565-2.134.662l-.775.528Zm-.101 7.648h-4.897l1.224-1.763h3.673c.689 0 1.273-.12 1.752-.36a2.565 2.565 0 0 0 1.112-1.01c.254-.442.381-.962.381-1.561 0-.607-.108-1.131-.325-1.573a2.257 2.257 0 0 0-1.022-1.022c-.464-.239-1.063-.359-1.797-.359h-3.088l.022-1.741h4.223l.46.629c.786.068 1.453.292 1.999.674.547.374.962.854 1.247 1.438.292.584.438 1.227.438 1.931 0 1.018-.225 1.879-.674 2.583-.442.696-1.067 1.228-1.876 1.595-.808.359-1.759.539-2.852.539Z"
          />
        </g>
        <g filter="url(#B)">
          <rect width="36.571" height="40" x="258.857" y="148" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M283.409 160.648V177h-2.178l-8.232-12.612V177h-2.168v-16.352h2.168l8.265 12.646v-12.646h2.145Z"
          />
        </g>
        <g filter="url(#C)">
          <rect width="36.571" height="40" x="299.428" y="148" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M310.257 160.648h2.1l5.357 13.331 5.346-13.331h2.111L318.523 177h-1.64l-6.626-16.352Zm-.685 0h1.853l.303 9.973V177h-2.156v-16.352Zm14.42 0h1.853V177h-2.156v-6.379l.303-9.973Z"
          />
        </g>
        <g filter="url(#D)">
          <rect width="48" height="40" x="340" y="148" fill="#CCCED5" rx="6" />
          <path
            fill="#3D3D3F"
            d="M374 159h-15c-.69 0-1.23.35-1.59.88L352 168l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2v-14c0-1.1-.9-2-2-2Zm0 16h-14.93l-4.67-7 4.66-7H374v14Zm-11.59-2 3.59-3.59 3.59 3.59 1.41-1.41-3.59-3.59 3.59-3.59-1.41-1.41-3.59 3.59-3.59-3.59-1.41 1.41 3.59 3.59-3.59 3.59 1.41 1.41Z"
          />
        </g>
      </g>
      <g opacity=".4">
        <g filter="url(#E)">
          <rect width="53" height="40" x="4" y="198" fill="#CCCED5" rx="6" />
          <path
            fill="#3D3D3F"
            d="M18.276 219.858h-1.633c.005-.454.043-.835.117-1.143a2.55 2.55 0 0 1 .366-.849c.176-.254.408-.523.696-.806.224-.215.427-.417.608-.608.18-.195.324-.4.432-.615.107-.22.16-.471.16-.754 0-.308-.05-.569-.153-.784a1.079 1.079 0 0 0-.454-.491c-.195-.112-.44-.168-.732-.168-.244 0-.474.048-.689.146a1.163 1.163 0 0 0-.52.44c-.132.195-.203.454-.212.776h-1.765c.01-.615.156-1.133.439-1.553.283-.42.664-.735 1.143-.945a3.95 3.95 0 0 1 1.604-.315c.654 0 1.213.113 1.677.337.464.22.818.542 1.062.967.249.42.373.928.373 1.524 0 .429-.085.82-.256 1.171-.17.347-.393.672-.666.975-.274.297-.57.595-.887.893-.273.249-.459.52-.556.813a3.208 3.208 0 0 0-.154.989Zm-1.78 2.285c0-.264.09-.486.271-.666.18-.186.427-.279.74-.279.312 0 .559.093.74.279.18.18.27.402.27.666s-.09.488-.27.674c-.181.181-.428.271-.74.271-.313 0-.56-.09-.74-.271a.93.93 0 0 1-.27-.674Zm10.488-9.844V223H25.22v-8.606l-2.614.886v-1.457l4.167-1.524h.212Zm10.855 9.295V223H30.69v-1.208l3.472-3.787c.381-.43.681-.801.901-1.113.22-.313.373-.594.461-.843.093-.254.14-.5.14-.739a1.96 1.96 0 0 0-.19-.887 1.4 1.4 0 0 0-.543-.608c-.24-.151-.53-.227-.871-.227-.396 0-.728.086-.997.257a1.6 1.6 0 0 0-.607.71c-.137.298-.206.64-.206 1.026h-1.765c0-.621.142-1.187.425-1.7a3.111 3.111 0 0 1 1.23-1.23c.538-.308 1.185-.462 1.941-.462.713 0 1.319.12 1.817.359.498.24.876.579 1.135 1.018.264.44.396.96.396 1.56 0 .332-.054.662-.161.989a4.69 4.69 0 0 1-.462.982 8.445 8.445 0 0 1-.696.974c-.268.322-.564.649-.886.981l-2.307 2.542h4.922Zm3.45-4.724h1.054c.41 0 .75-.071 1.018-.213.274-.141.476-.337.608-.586.132-.249.198-.534.198-.857 0-.337-.061-.625-.183-.864a1.238 1.238 0 0 0-.542-.564c-.24-.132-.544-.198-.916-.198-.312 0-.595.064-.85.191-.248.122-.446.298-.593.527-.146.225-.22.493-.22.806h-1.772c0-.567.15-1.07.447-1.509a3.04 3.04 0 0 1 1.216-1.033c.518-.254 1.099-.381 1.743-.381.688 0 1.29.115 1.802.345.517.224.92.561 1.208 1.01.288.45.433 1.006.433 1.67 0 .303-.071.611-.213.923a2.68 2.68 0 0 1-.63.857 3.288 3.288 0 0 1-1.04.623c-.415.156-.896.234-1.443.234H41.29v-.981Zm0 1.377v-.967h1.325c.625 0 1.158.073 1.597.22.444.146.806.349 1.084.607a2.3 2.3 0 0 1 .608.872c.132.327.198.674.198 1.04 0 .498-.09.942-.271 1.333a2.697 2.697 0 0 1-.755.981c-.327.269-.71.472-1.15.608a4.705 4.705 0 0 1-1.42.205 4.53 4.53 0 0 1-1.319-.19 3.598 3.598 0 0 1-1.128-.564 2.799 2.799 0 0 1-.79-.945c-.191-.381-.287-.82-.287-1.318h1.766c0 .317.073.598.22.842.15.239.36.427.63.564.273.137.585.205.937.205.37 0 .69-.066.96-.198.268-.131.473-.327.614-.585.147-.259.22-.572.22-.938 0-.415-.08-.752-.242-1.011a1.425 1.425 0 0 0-.688-.571c-.298-.127-.65-.19-1.055-.19H41.29Z"
          />
        </g>
        <g filter="url(#F)">
          <rect width="30" height="40" x="61" y="198" fill="#CCCED5" rx="6" />
          <path
            fill="#000"
            d="m76.886 228.301-.007 1.26c0 .498-.125 1.01-.374 1.538-.249.527-.578.962-.988 1.303l-.945-.549c.136-.22.261-.442.373-.666.113-.225.203-.464.271-.718.069-.254.103-.535.103-.843v-1.325h1.567Z"
          />
          <path
            fill="#3D3D3F"
            d="M77.396 208.958a.812.812 0 1 0 .001-1.624.812.812 0 0 0-.001 1.624ZM73.604 208.958a.812.812 0 1 0 .001-1.624.812.812 0 0 0 0 1.624Z"
          />
          <path
            fill="#3D3D3F"
            d="M75.5 211.667c-.802 0-1.49-.439-1.869-1.084h-.904a2.976 2.976 0 0 0 5.546 0h-.904a2.165 2.165 0 0 1-1.87 1.084Zm-.005-7.584a5.414 5.414 0 0 0-5.412 5.417 5.414 5.414 0 0 0 5.412 5.417 5.42 5.42 0 0 0 5.422-5.417 5.42 5.42 0 0 0-5.422-5.417Zm.005 9.75a4.332 4.332 0 0 1-4.333-4.333 4.332 4.332 0 0 1 4.333-4.333 4.332 4.332 0 0 1 4.333 4.333 4.332 4.332 0 0 1-4.333 4.333Z"
          />
        </g>
        <g filter="url(#G)">
          <rect width="30" height="40" x="95" y="198" fill="#fff" rx="6" />
          <path
            fill="#4C4C4C"
            d="M109.99 208c-5.52 0-9.99 4.48-9.99 10s4.47 10 9.99 10c5.53 0 10.01-4.48 10.01-10s-4.48-10-10.01-10Zm6.93 6h-2.95a15.65 15.65 0 0 0-1.38-3.56 8.03 8.03 0 0 1 4.33 3.56Zm-6.92-3.96c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96Zm-7.74 9.96c-.16-.64-.26-1.31-.26-2s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2h-3.38Zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56a7.987 7.987 0 0 1-4.33-3.56Zm2.95-8h-2.95a7.987 7.987 0 0 1 4.33-3.56 15.65 15.65 0 0 0-1.38 3.56Zm3.97 11.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96Zm2.34-5.96h-4.68c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2Zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95a8.03 8.03 0 0 1-4.33 3.56Zm1.77-5.56c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38Z"
          />
        </g>
        <g filter="url(#H)">
          <rect width="173" height="40" x="129" y="198" fill="#fff" rx="6" />
          <path
            fill="#000"
            d="M201.408 221.503v.997h-4.894v-.997h4.894Zm-4.646-8.245v9.242h-1.225v-9.242h1.225Zm3.999 3.973v.997h-4.247v-.997h4.247Zm.584-3.973v1.003h-4.831v-1.003h4.831Zm2.577 3.84v5.402h-1.174v-6.868h1.11l.064 1.466Zm-.279 1.708-.489-.019c.004-.47.074-.904.209-1.302.136-.402.326-.751.572-1.047a2.543 2.543 0 0 1 2.012-.933c.338 0 .643.046.914.14.271.088.501.232.692.431.194.199.343.457.444.775.102.313.152.696.152 1.149v4.5h-1.18v-4.513c0-.36-.053-.648-.159-.863a.977.977 0 0 0-.463-.477 1.672 1.672 0 0 0-.749-.152c-.292 0-.559.061-.8.184a1.921 1.921 0 0 0-.616.508 2.573 2.573 0 0 0-.539 1.619Zm10.74-3.174h1.066v6.722c0 .605-.123 1.121-.368 1.549a2.397 2.397 0 0 1-1.028.971c-.436.224-.94.336-1.511.336a3.72 3.72 0 0 1-.838-.114 3.405 3.405 0 0 1-.939-.374 2.35 2.35 0 0 1-.768-.705l.615-.698c.288.347.589.588.902.723.317.136.63.204.939.204.373 0 .694-.07.965-.21.271-.14.48-.347.628-.622.153-.271.229-.605.229-1.003v-5.268l.108-1.511Zm-4.729 3.51v-.133c0-.525.061-1.001.184-1.428.127-.432.307-.802.539-1.111a2.425 2.425 0 0 1 1.987-.965c.432 0 .809.076 1.13.228.326.149.601.366.825.654a3.2 3.2 0 0 1 .54 1.029c.131.402.222.856.273 1.364v.584a6.03 6.03 0 0 1-.273 1.359 3.195 3.195 0 0 1-.54 1.028 2.256 2.256 0 0 1-.825.654c-.326.148-.707.222-1.142.222-.411 0-.783-.087-1.118-.26a2.551 2.551 0 0 1-.85-.73 3.461 3.461 0 0 1-.546-1.105 5.008 5.008 0 0 1-.184-1.39Zm1.174-.133v.133c0 .343.034.664.102.965.072.3.18.565.323.793.149.229.337.409.565.54.229.127.502.19.819.19.39 0 .711-.082.965-.247a1.79 1.79 0 0 0 .603-.654c.152-.271.271-.565.356-.882v-1.53a3.164 3.164 0 0 0-.216-.673 2.074 2.074 0 0 0-.368-.584 1.616 1.616 0 0 0-.553-.413 1.84 1.84 0 0 0-.774-.152 1.63 1.63 0 0 0-.832.203 1.628 1.628 0 0 0-.565.546 2.645 2.645 0 0 0-.323.8c-.068.3-.102.622-.102.965Zm7.681-6.259v9.75h-1.181v-9.75h1.181Zm3.161 2.882v6.868h-1.181v-6.868h1.181Zm-1.27-1.822a.71.71 0 0 1 .172-.482c.118-.132.292-.197.52-.197.225 0 .396.065.514.197a.679.679 0 0 1 .185.482.664.664 0 0 1-.185.47c-.118.127-.289.19-.514.19-.228 0-.402-.063-.52-.19a.693.693 0 0 1-.172-.47Zm7.154 6.868a.992.992 0 0 0-.114-.47c-.072-.148-.222-.281-.451-.399-.224-.123-.563-.229-1.015-.318a7.991 7.991 0 0 1-1.035-.285 3.156 3.156 0 0 1-.781-.4 1.696 1.696 0 0 1-.489-.553 1.54 1.54 0 0 1-.171-.742c0-.271.059-.527.178-.768.123-.242.294-.455.514-.641.224-.187.493-.333.806-.438a3.25 3.25 0 0 1 1.047-.159c.551 0 1.02.097 1.41.292a2.2 2.2 0 0 1 .895.781c.207.321.311.679.311 1.072h-1.175c0-.19-.057-.374-.171-.552a1.268 1.268 0 0 0-.489-.451c-.211-.118-.472-.177-.781-.177-.325 0-.59.051-.793.152a1.012 1.012 0 0 0-.438.375.94.94 0 0 0-.07.825.767.767 0 0 0 .241.273c.115.08.275.156.483.228.207.072.472.144.793.216.563.127 1.026.279 1.39.457.364.178.635.396.813.654.178.258.267.571.267.939a1.836 1.836 0 0 1-.73 1.473 2.698 2.698 0 0 1-.838.419 3.76 3.76 0 0 1-1.086.146c-.605 0-1.117-.108-1.536-.324-.419-.216-.736-.495-.952-.838a2 2 0 0 1-.324-1.085h1.181c.017.321.11.578.279.768.169.186.377.319.622.4.246.076.489.114.73.114.322 0 .591-.042.806-.127a1.12 1.12 0 0 0 .502-.349.81.81 0 0 0 .171-.508Zm3.891-7.928v9.75h-1.174v-9.75h1.174Zm-.279 6.056-.489-.019c.004-.47.074-.904.21-1.302.135-.402.326-.751.571-1.047a2.543 2.543 0 0 1 2.012-.933c.339 0 .643.046.914.14.271.088.502.232.692.431.195.199.343.457.445.775.101.313.152.696.152 1.149v4.5h-1.181v-4.513c0-.36-.053-.648-.159-.863a.973.973 0 0 0-.463-.477 1.672 1.672 0 0 0-.749-.152c-.292 0-.559.061-.8.184a1.907 1.907 0 0 0-.615.508c-.17.216-.303.463-.4.743-.093.275-.14.567-.14.876Z"
          />
        </g>
        <g filter="url(#I)">
          <rect width="30" height="40" x="306" y="198" fill="#CCCED5" rx="6" />
          <path
            fill="#000"
            d="M319.585 225.899c0-.351.109-.647.326-.887.224-.247.546-.37.965-.37.42 0 .738.123.955.37.225.24.337.536.337.887 0 .345-.112.637-.337.876-.217.24-.535.36-.955.36-.419 0-.741-.12-.965-.36a1.256 1.256 0 0 1-.326-.876Z"
          />
        </g>
        <g filter="url(#J)">
          <rect width="48" height="40" x="340" y="198" fill="#CCCED5" rx="6" />
          <path
            fill="#3D3D3F"
            d="m363.59 213.41 3.58 3.59H353v2h14.17l-3.59 3.59L365 224l6-6-6-6-1.41 1.41ZM372 212v12h2v-12h-2Z"
          />
        </g>
      </g>
      <path fill="#EDF0F2" d="M0 242h392v46H0z" />
      <rect width="12" height="12" x="108" y="259" fill="#666" opacity=".4" rx="1" />
      <g fill="#666" opacity=".4">
        <path d="M196 271a6 6 0 1 0 0-12 6 6 0 0 0 0 12Z" />
        <path
          fill-rule="evenodd"
          d="M205 265a9 9 0 0 1-9 9 9 9 0 0 1-9-9 9 9 0 0 1 9-9 9 9 0 0 1 9 9Zm-1.5 0a7.5 7.5 0 1 1-15 0 7.5 7.5 0 0 1 15 0Z"
          clip-rule="evenodd"
        />
      </g>
      <path
        fill="#666"
        d="M272.489 265.844a.973.973 0 0 1 0-1.688l9.851-5.992c.715-.435 1.66.046 1.66.844v11.984c0 .798-.945 1.279-1.66.844l-9.851-5.992Z"
        opacity=".4"
      />
      <defs>
        <filter
          id="a"
          width="34"
          height="34"
          x="10"
          y="6"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feGaussianBlur stdDeviation="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="c"
          width="34.8"
          height="41"
          x="4"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="d"
          width="34.8"
          height="41"
          x="42.8"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="e"
          width="34.8"
          height="41"
          x="81.6"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="f"
          width="34.8"
          height="41"
          x="120.4"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="g"
          width="34.8"
          height="41"
          x="159.2"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="h"
          width="34.8"
          height="41"
          x="198"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="i"
          width="34.8"
          height="41"
          x="236.8"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="j"
          width="34.8"
          height="41"
          x="275.6"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="k"
          width="34.8"
          height="41"
          x="314.4"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="l"
          width="34.8"
          height="41"
          x="353.2"
          y="48"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="m"
          width="35.111"
          height="41"
          x="22"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="n"
          width="35.111"
          height="41"
          x="61.111"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="o"
          width="35.111"
          height="41"
          x="100.222"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="p"
          width="35.111"
          height="41"
          x="139.333"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="q"
          width="35.111"
          height="41"
          x="178.444"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="r"
          width="35.111"
          height="41"
          x="217.556"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="s"
          width="35.111"
          height="41"
          x="256.667"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="t"
          width="35.111"
          height="41"
          x="295.778"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="u"
          width="35.111"
          height="41"
          x="334.889"
          y="98"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="v"
          width="48"
          height="41"
          x="4"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="w"
          width="36.572"
          height="41"
          x="56"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="x"
          width="36.572"
          height="41"
          x="96.572"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="y"
          width="36.572"
          height="41"
          x="137.143"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="z"
          width="36.572"
          height="41"
          x="177.714"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="A"
          width="36.572"
          height="41"
          x="218.286"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="B"
          width="36.572"
          height="41"
          x="258.857"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="C"
          width="36.572"
          height="41"
          x="299.428"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="D"
          width="48"
          height="41"
          x="340"
          y="148"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="E"
          width="53"
          height="41"
          x="4"
          y="198"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="F"
          width="30"
          height="41"
          x="61"
          y="198"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="G"
          width="30"
          height="41"
          x="95"
          y="198"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="H"
          width="173"
          height="41"
          x="129"
          y="198"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="I"
          width="30"
          height="41"
          x="306"
          y="198"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <filter
          id="J"
          width="48"
          height="41"
          x="340"
          y="198"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.27 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_90634" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_90634" result="shape" />
        </filter>
        <clipPath id="b">
          <path fill="#fff" d="M121.572 10h24v24h-24z" />
        </clipPath>
      </defs>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ComponentProps } from 'react';
interface AndroidKeyboardProps extends ComponentProps<'svg'> {
isDarkMode?: boolean;
}
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/icons/android/index.ts
Tamaño: 76 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './AndroidIndicatorsIcon';
export * from './AndroidKeyboard';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/icons/iphone/IOSIndicatorsIcon.tsx
Tamaño: 2941 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ComponentProps } from 'react';

export const IOSIndicatorsIcon = (props: ComponentProps<'svg'>) => {
  return (
    <svg width="74" height="12" viewBox="0 0 74 12" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M16.9412 0H15.8824C15.2976 0 14.8235 0.50368 14.8235 1.125V10.875C14.8235 11.4963 15.2976 12 15.8824 12H16.9412C17.5259 12 18 11.4963 18 10.875V1.125C18 0.50368 17.5259 0 16.9412 0ZM10.9412 2.625H12C12.5848 2.625 13.0588 3.12868 13.0588 3.75V10.875C13.0588 11.4963 12.5848 12 12 12H10.9412C10.3564 12 9.88235 11.4963 9.88235 10.875V3.75C9.88235 3.12868 10.3564 2.625 10.9412 2.625ZM7.05881 5.25H5.99999C5.41521 5.25 4.94116 5.75368 4.94116 6.375V10.875C4.94116 11.4963 5.41521 12 5.99999 12H7.05881C7.64358 12 8.11763 11.4963 8.11763 10.875V6.375C8.11763 5.75368 7.64358 5.25 7.05881 5.25ZM2.11765 7.5H1.05882C0.474051 7.5 0 8.00368 0 8.625V10.875C0 11.4963 0.474051 12 1.05882 12H2.11765C2.70242 12 3.17647 11.4963 3.17647 10.875V8.625C3.17647 8.00368 2.70242 7.5 2.11765 7.5Z"
        fill="currentColor"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M34.0004 2.49216C36.3219 2.49226 38.5546 3.42402 40.2371 5.09485C40.3638 5.22384 40.5663 5.22222 40.691 5.0912L41.9021 3.81448C41.9653 3.74803 42.0005 3.65802 42 3.56436C41.9995 3.47071 41.9632 3.38113 41.8993 3.31546C37.4834 -1.10515 30.5168 -1.10515 26.1009 3.31546C26.0369 3.38109 26.0006 3.47063 26 3.56429C25.9994 3.65794 26.0346 3.74798 26.0977 3.81448L27.3091 5.0912C27.4338 5.22241 27.6365 5.22404 27.7631 5.09485C29.4458 3.42391 31.6787 2.49215 34.0004 2.49216ZM34.0004 6.6461C35.2759 6.64602 36.5059 7.14124 37.4514 8.03554C37.5792 8.16246 37.7807 8.15971 37.9053 8.02934L39.115 6.75262C39.1787 6.68565 39.2141 6.5948 39.2132 6.5004C39.2122 6.406 39.1751 6.31592 39.1101 6.25032C36.231 3.45278 31.7723 3.45278 28.8932 6.25032C28.8281 6.31592 28.791 6.40604 28.7902 6.50048C28.7893 6.59491 28.8248 6.68575 28.8886 6.75262L30.098 8.02934C30.2226 8.15971 30.4241 8.16246 30.5519 8.03554C31.4968 7.14183 32.7258 6.64665 34.0004 6.6461ZM36.4236 9.44087C36.4255 9.53554 36.3899 9.62681 36.3252 9.69313L34.2327 11.8989C34.1713 11.9638 34.0877 12.0003 34.0004 12.0003C33.9132 12.0003 33.8296 11.9638 33.7682 11.8989L31.6754 9.69313C31.6107 9.62676 31.5752 9.53546 31.5771 9.44079C31.579 9.34613 31.6182 9.25648 31.6855 9.19302C33.0218 8.01236 34.979 8.01236 36.3154 9.19302C36.3826 9.25653 36.4218 9.34621 36.4236 9.44087Z"
        fill="currentColor"
      />
      <rect x="50.5" y="0.5" width="20.7034" height="11" rx="3.5" stroke="currentColor" />
      <path
        d="M72.6899 3.88232V8.11762C73.4838 7.75891 74 6.92447 74 5.99997C74 5.07548 73.4838 4.24103 72.6899 3.88232Z"
        fill="currentColor"
      />
      <rect x="51.973" y="1.76465" width="17.7573" height="8.47059" rx="2" fill="currentColor" />
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ComponentProps } from 'react';
export const IOSIndicatorsIcon = (props: ComponentProps<'svg'>) => {
return (
<svg width="74" height="12" viewBox="0 0 74 12" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/icons/iphone/IOSKeyboard.tsx
Tamaño: 98977 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ComponentProps } from 'react';

interface IOSKeyboardProps extends ComponentProps<'svg'> {
  isDarkMode?: boolean;
}

export const IOSKeyboard = ({ isDarkMode, ...rest }: IOSKeyboardProps) => {
  return isDarkMode ? (
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 392 335" {...rest}>
      <g opacity=".4">
        <g filter="url(#a)">
          <path fill="#202020" fillOpacity="1" d="M0 0h392v44H0z" />
          <path
            fill="#fff"
            d="M37.025 33.282c-2.623 0-4.316-1.378-4.49-3.328l-.009-.092h1.494l.008.092c.108 1.195 1.354 1.95 3.08 1.95 1.627 0 2.814-.838 2.814-2.058v-.009c0-.996-.689-1.676-2.332-2.042l-1.329-.29c-2.399-.531-3.436-1.635-3.436-3.37v-.009c.008-1.983 1.743-3.386 4.217-3.386 2.39 0 4.059 1.41 4.183 3.196l.009.116h-1.495l-.016-.108c-.166-1.054-1.162-1.835-2.723-1.826-1.494.008-2.648.713-2.648 1.967v.008c0 .955.656 1.602 2.283 1.96l1.328.298c2.499.556 3.486 1.56 3.486 3.287v.008c0 2.242-1.751 3.636-4.424 3.636Zm9.729-.124c-2.034 0-3.08-1.196-3.08-3.312v-5.794h1.444v5.445c0 1.61.581 2.382 2.01 2.382 1.576 0 2.415-.963 2.415-2.531v-5.296h1.444V33h-1.444v-1.336h-.133c-.44.954-1.345 1.494-2.656 1.494Zm10.616 2.996c-2.158 0-3.536-.97-3.76-2.44l.017-.008h1.494l.008.008c.158.68.955 1.162 2.241 1.162 1.602 0 2.557-.755 2.557-2.075v-1.81h-.133c-.564.988-1.577 1.544-2.806 1.544-2.316 0-3.752-1.793-3.752-4.3v-.016c0-2.507 1.445-4.325 3.786-4.325 1.261 0 2.24.623 2.789 1.635h.1v-1.477h1.444v8.824c0 2-1.544 3.278-3.985 3.278Zm-.066-4.897c1.66 0 2.656-1.245 2.656-3.022v-.016c0-1.777-1.004-3.047-2.656-3.047-1.66 0-2.59 1.27-2.59 3.047v.016c0 1.777.93 3.022 2.59 3.022Zm10.426 4.897c-2.159 0-3.537-.97-3.76-2.44l.016-.008h1.494l.008.008c.158.68.955 1.162 2.242 1.162 1.602 0 2.556-.755 2.556-2.075v-1.81h-.133c-.564.988-1.577 1.544-2.805 1.544-2.316 0-3.752-1.793-3.752-4.3v-.016c0-2.507 1.444-4.325 3.785-4.325 1.262 0 2.241.623 2.79 1.635h.099v-1.477h1.444v8.824c0 2-1.544 3.278-3.984 3.278Zm-.067-4.897c1.66 0 2.657-1.245 2.657-3.022v-.016c0-1.777-1.005-3.047-2.657-3.047-1.66 0-2.59 1.27-2.59 3.047v.016c0 1.777.93 3.022 2.59 3.022Zm10.393 1.9c-2.557 0-4.1-1.792-4.1-4.598v-.008c0-2.764 1.576-4.657 4.008-4.657 2.433 0 3.91 1.81 3.91 4.483v.564h-6.441c.041 1.851 1.062 2.93 2.656 2.93 1.212 0 1.959-.573 2.2-1.112l.033-.075h1.444l-.016.066c-.307 1.212-1.586 2.408-3.694 2.408Zm-.1-7.976c-1.328 0-2.34.904-2.498 2.606h4.947c-.15-1.768-1.129-2.606-2.449-2.606Zm9.23 7.977c-1.992 0-3.361-.963-3.527-2.44h1.477c.241.746.955 1.236 2.1 1.236 1.204 0 2.06-.573 2.06-1.386v-.017c0-.606-.458-1.029-1.562-1.295l-1.386-.332c-1.676-.398-2.432-1.129-2.432-2.415V26.5c0-1.485 1.428-2.606 3.329-2.606 1.876 0 3.179.938 3.378 2.399h-1.42c-.19-.706-.887-1.195-1.966-1.195-1.063 0-1.843.547-1.843 1.336v.017c0 .606.448.988 1.502 1.245l1.378.332c1.685.407 2.499 1.137 2.499 2.415v.017c0 1.594-1.553 2.698-3.586 2.698Zm8.924-.092c-1.843 0-2.615-.68-2.615-2.39v-5.429h-1.41v-1.195h1.41v-2.316h1.494v2.316h1.96v1.195h-1.96v5.064c0 1.054.366 1.477 1.295 1.477.258 0 .399-.008.664-.033v1.228c-.282.05-.556.083-.838.083Z"
          />
          <path stroke="#343434" strokeLinecap="square" d="M130.333 15v24" />
          <path
            fill="#fff"
            d="M168.358 33.282c-2.623 0-4.316-1.378-4.49-3.328l-.009-.092h1.495l.008.092c.108 1.195 1.353 1.95 3.079 1.95 1.627 0 2.814-.838 2.814-2.058v-.009c0-.996-.689-1.676-2.332-2.042l-1.328-.29c-2.399-.531-3.437-1.635-3.437-3.37v-.009c.009-1.983 1.743-3.386 4.217-3.386 2.391 0 4.059 1.41 4.184 3.196l.008.116h-1.494l-.017-.108c-.166-1.054-1.162-1.835-2.722-1.826-1.495.008-2.648.713-2.648 1.967v.008c0 .955.655 1.602 2.282 1.96l1.328.298c2.499.556 3.487 1.56 3.487 3.287v.008c0 2.242-1.752 3.636-4.425 3.636Zm9.729-.124c-2.034 0-3.08-1.196-3.08-3.312v-5.794h1.445v5.445c0 1.61.581 2.382 2.008 2.382 1.578 0 2.416-.963 2.416-2.531v-5.296h1.444V33h-1.444v-1.336h-.133c-.44.954-1.345 1.494-2.656 1.494Zm10.617 2.996c-2.159 0-3.536-.97-3.761-2.44l.017-.008h1.494l.008.008c.158.68.955 1.162 2.242 1.162 1.602 0 2.556-.755 2.556-2.075v-1.81h-.133c-.564.988-1.577 1.544-2.805 1.544-2.316 0-3.752-1.793-3.752-4.3v-.016c0-2.507 1.444-4.325 3.785-4.325 1.262 0 2.241.623 2.789 1.635h.1v-1.477h1.444v8.824c0 2-1.544 3.278-3.984 3.278Zm-.067-4.897c1.66 0 2.656-1.245 2.656-3.022v-.016c0-1.777-1.004-3.047-2.656-3.047-1.66 0-2.59 1.27-2.59 3.047v.016c0 1.777.93 3.022 2.59 3.022Zm10.426 4.897c-2.158 0-3.536-.97-3.76-2.44l.016-.008h1.495l.008.008c.158.68.954 1.162 2.241 1.162 1.602 0 2.557-.755 2.557-2.075v-1.81h-.133c-.565.988-1.577 1.544-2.806 1.544-2.316 0-3.752-1.793-3.752-4.3v-.016c0-2.507 1.445-4.325 3.785-4.325 1.262 0 2.242.623 2.789 1.635h.1v-1.477h1.444v8.824c0 2-1.544 3.278-3.984 3.278Zm-.066-4.897c1.66 0 2.656-1.245 2.656-3.022v-.016c0-1.777-1.005-3.047-2.656-3.047-1.661 0-2.59 1.27-2.59 3.047v.016c0 1.777.929 3.022 2.59 3.022Zm10.392 1.9c-2.556 0-4.1-1.792-4.1-4.598v-.008c0-2.764 1.577-4.657 4.009-4.657 2.432 0 3.91 1.81 3.91 4.483v.564h-6.442c.042 1.851 1.063 2.93 2.656 2.93 1.212 0 1.959-.573 2.2-1.112l.033-.075h1.445l-.017.066c-.307 1.212-1.585 2.408-3.694 2.408Zm-.099-7.976c-1.329 0-2.341.904-2.499 2.606h4.947c-.149-1.768-1.129-2.606-2.448-2.606Zm9.23 7.977c-1.992 0-3.362-.963-3.528-2.44h1.478c.24.746.954 1.236 2.1 1.236 1.203 0 2.058-.573 2.058-1.386v-.017c0-.606-.456-1.029-1.56-1.295l-1.386-.332c-1.677-.398-2.432-1.129-2.432-2.415V26.5c0-1.485 1.427-2.606 3.328-2.606 1.876 0 3.179.938 3.379 2.399h-1.42c-.191-.706-.888-1.195-1.967-1.195-1.063 0-1.843.547-1.843 1.336v.017c0 .606.448.988 1.503 1.245l1.377.332c1.686.407 2.499 1.137 2.499 2.415v.017c0 1.594-1.552 2.698-3.586 2.698Zm8.923-.092c-1.842 0-2.614-.68-2.614-2.39v-5.429h-1.411v-1.195h1.411v-2.316h1.494v2.316h1.959v1.195h-1.959v5.064c0 1.054.365 1.477 1.295 1.477.257 0 .398-.008.664-.033v1.228a4.78 4.78 0 0 1-.839.083Z"
          />
          <path stroke="#343434" strokeLinecap="square" d="M261.667 15v24" />
          <path
            fill="#fff"
            d="M299.692 33.282c-2.623 0-4.317-1.378-4.491-3.328l-.008-.092h1.494l.008.092c.108 1.195 1.353 1.95 3.08 1.95 1.627 0 2.814-.838 2.814-2.058v-.009c0-.996-.689-1.676-2.333-2.042l-1.328-.29c-2.399-.531-3.436-1.635-3.436-3.37v-.009c.008-1.983 1.743-3.386 4.216-3.386 2.391 0 4.059 1.41 4.184 3.196l.008.116h-1.494l-.016-.108c-.167-1.054-1.163-1.835-2.723-1.826-1.494.008-2.648.713-2.648 1.967v.008c0 .955.656 1.602 2.283 1.96l1.328.298c2.498.556 3.486 1.56 3.486 3.287v.008c0 2.242-1.751 3.636-4.424 3.636Zm9.728-.124c-2.033 0-3.079-1.196-3.079-3.312v-5.794h1.444v5.445c0 1.61.581 2.382 2.009 2.382 1.577 0 2.415-.963 2.415-2.531v-5.296h1.445V33h-1.445v-1.336h-.132c-.44.954-1.345 1.494-2.657 1.494Zm10.617 2.996c-2.158 0-3.536-.97-3.76-2.44l.016-.008h1.494l.009.008c.157.68.954 1.162 2.241 1.162 1.602 0 2.557-.755 2.557-2.075v-1.81h-.133c-.565.988-1.577 1.544-2.806 1.544-2.316 0-3.752-1.793-3.752-4.3v-.016c0-2.507 1.445-4.325 3.785-4.325 1.262 0 2.242.623 2.789 1.635h.1v-1.477h1.444v8.824c0 2-1.544 3.278-3.984 3.278Zm-.066-4.897c1.66 0 2.656-1.245 2.656-3.022v-.016c0-1.777-1.005-3.047-2.656-3.047-1.661 0-2.59 1.27-2.59 3.047v.016c0 1.777.929 3.022 2.59 3.022Zm10.425 4.897c-2.158 0-3.536-.97-3.76-2.44l.017-.008h1.494l.008.008c.158.68.955 1.162 2.241 1.162 1.602 0 2.557-.755 2.557-2.075v-1.81h-.133c-.564.988-1.577 1.544-2.805 1.544-2.316 0-3.752-1.793-3.752-4.3v-.016c0-2.507 1.444-4.325 3.785-4.325 1.261 0 2.241.623 2.789 1.635h.099v-1.477h1.445v8.824c0 2-1.544 3.278-3.985 3.278Zm-.066-4.897c1.66 0 2.656-1.245 2.656-3.022v-.016c0-1.777-1.004-3.047-2.656-3.047-1.66 0-2.59 1.27-2.59 3.047v.016c0 1.777.93 3.022 2.59 3.022Zm10.393 1.9c-2.557 0-4.101-1.792-4.101-4.598v-.008c0-2.764 1.577-4.657 4.009-4.657 2.432 0 3.91 1.81 3.91 4.483v.564h-6.442c.042 1.851 1.063 2.93 2.657 2.93 1.212 0 1.959-.573 2.199-1.112l.034-.075h1.444l-.017.066c-.307 1.212-1.585 2.408-3.693 2.408Zm-.1-7.976c-1.328 0-2.341.904-2.499 2.606h4.948c-.15-1.768-1.129-2.606-2.449-2.606Zm9.23 7.977c-1.992 0-3.361-.963-3.527-2.44h1.477c.241.746.955 1.236 2.1 1.236 1.204 0 2.059-.573 2.059-1.386v-.017c0-.606-.457-1.029-1.561-1.295l-1.386-.332c-1.677-.398-2.432-1.129-2.432-2.415V26.5c0-1.485 1.428-2.606 3.328-2.606 1.876 0 3.18.938 3.379 2.399h-1.42c-.19-.706-.888-1.195-1.967-1.195-1.062 0-1.843.547-1.843 1.336v.017c0 .606.449.988 1.503 1.245l1.378.332c1.685.407 2.498 1.137 2.498 2.415v.017c0 1.594-1.552 2.698-3.586 2.698Zm8.924-.092c-1.843 0-2.615-.68-2.615-2.39v-5.429h-1.411v-1.195h1.411v-2.316h1.494v2.316h1.959v1.195h-1.959v5.064c0 1.054.365 1.477 1.295 1.477.257 0 .398-.008.664-.033v1.228c-.282.05-.556.083-.838.083Z"
          />
        </g>
        <g filter="url(#b)">
          <path fill="#202020" fillOpacity="1" d="M0 44h392v220H0z" />
          <g filter="url(#c)">
            <rect width="34.1" height="42" x="3" y="52" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M20.06 81.258c-4.404 0-7.154-3.083-7.154-8.003v-.022c0-4.909 2.761-7.992 7.155-7.992 4.383 0 7.133 3.083 7.133 7.992v.022c0 3.008-1.021 5.317-2.815 6.67l2.052 2.826h-2.17l-1.429-1.977c-.827.323-1.762.484-2.771.484Zm0-1.783c.592 0 1.14-.086 1.644-.247l-1.944-2.664h2.17l1.321 1.815c1.246-1.064 1.955-2.858 1.955-5.124v-.022c0-3.802-1.987-6.209-5.145-6.209-3.17 0-5.167 2.396-5.167 6.21v.02c0 3.814 1.987 6.22 5.167 6.22Z"
            />
          </g>
          <g filter="url(#d)">
            <rect width="34.1" height="42" x="42.1" y="52" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M53.693 81 49.47 65.499h2.02l3.126 12.73h.043l3.512-12.73h1.956l3.512 12.73h.043l3.126-12.73h2.02L64.607 81h-1.826l-3.61-12.418h-.042L55.519 81h-1.826Z"
            />
          </g>
          <g filter="url(#e)">
            <rect width="34.1" height="42" x="81.2" y="52" fill="#434343" rx="4.6" />
            <path fill="#fff" d="M93.674 81V65.499h9.603v1.74h-7.67v4.974h7.273v1.719h-7.273v5.328h7.67V81h-9.603Z" />
          </g>
          <g filter="url(#f)">
            <rect width="34.1" height="42" x="120.3" y="52" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M132.258 81V65.499h5.812c2.986 0 4.941 1.826 4.941 4.62v.02c0 2.15-1.182 3.814-3.115 4.426L143.484 81h-2.267l-3.319-6.134h-3.706V81h-1.934Zm1.934-7.842h3.706c1.987 0 3.115-1.074 3.115-2.975v-.022c0-1.847-1.214-2.943-3.201-2.943h-3.62v5.94Z"
            />
          </g>
          <g filter="url(#g)">
            <rect width="34.1" height="42" x="159.4" y="52" fill="#434343" rx="4.6" />
            <path fill="#fff" d="M175.483 81V67.24h-4.887v-1.741h11.709v1.74h-4.888V81h-1.934Z" />
          </g>
          <g filter="url(#h)">
            <rect width="34.1" height="42" x="198.5" y="52" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M214.583 81v-6.67l-5.5-8.831h2.202l4.233 6.961h.064l4.233-6.961h2.202l-5.5 8.83V81h-1.934Z"
            />
          </g>
          <g filter="url(#i)">
            <rect width="34.1" height="42" x="237.6" y="52" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M254.661 81.258c-3.846 0-6.166-2.32-6.166-5.694V65.5h1.933v9.937c0 2.384 1.547 4.039 4.233 4.039 2.685 0 4.211-1.655 4.211-4.04V65.5h1.933v10.066c0 3.373-2.299 5.693-6.144 5.693Z"
            />
          </g>
          <g filter="url(#j)">
            <rect width="34.1" height="42" x="276.7" y="52" fill="#434343" rx="4.6" />
            <path fill="#fff" d="M292.783 81V65.499h1.934V81h-1.934Z" />
          </g>
          <g filter="url(#k)">
            <rect width="34.1" height="42" x="315.8" y="52" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M332.861 81.258c-4.405 0-7.155-3.083-7.155-8.003v-.022c0-4.909 2.761-7.992 7.155-7.992 4.383 0 7.133 3.083 7.133 7.992v.022c0 4.92-2.74 8.003-7.133 8.003Zm0-1.783c3.19 0 5.156-2.439 5.156-6.22v-.022c0-3.802-1.998-6.209-5.156-6.209-3.169 0-5.178 2.396-5.178 6.21v.02c0 3.814 1.998 6.22 5.178 6.22Z"
            />
          </g>
          <g filter="url(#l)">
            <rect width="34.1" height="42" x="354.9" y="52" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M367.095 81V65.499h5.521c2.911 0 4.974 2.009 4.974 4.952v.022c0 2.943-2.063 4.995-4.974 4.995h-3.588V81h-1.933Zm5.027-13.782h-3.094v6.531h3.094c2.213 0 3.491-1.214 3.491-3.255v-.021c0-2.041-1.278-3.255-3.491-3.255Z"
            />
          </g>
          <g filter="url(#m)">
            <rect width="34.444" height="42" x="21" y="106" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="m31.498 135 5.768-15.501h1.912L44.936 135h-2.03l-1.569-4.437h-6.24L33.526 135h-2.03Zm6.703-13.181-2.514 7.101h5.07l-2.513-7.101H38.2Z"
            />
          </g>
          <g filter="url(#n)">
            <rect width="34.444" height="42" x="60.444" y="106" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M77.71 135.258c-3.352 0-5.618-1.644-5.812-4.297l-.01-.15h1.933l.022.15c.225 1.558 1.729 2.514 3.974 2.514 2.234 0 3.642-1.01 3.642-2.611v-.01c0-1.365-.892-2.127-3.019-2.6l-1.719-.376c-3.029-.666-4.447-2.03-4.447-4.297v-.011c.01-2.546 2.267-4.329 5.457-4.329 3.03 0 5.242 1.751 5.414 4.286l.01.161h-1.933l-.021-.15c-.236-1.579-1.558-2.514-3.524-2.514-2.073.011-3.426.999-3.426 2.493v.01c0 1.268.934 2.063 2.954 2.503l1.719.376c3.18.698 4.511 1.988 4.511 4.351v.011c0 2.75-2.18 4.49-5.725 4.49Z"
            />
          </g>
          <g filter="url(#o)">
            <rect width="34.444" height="42" x="99.889" y="106" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M111.149 135v-15.501h5.21c4.587 0 7.316 2.857 7.316 7.724v.021c0 4.888-2.707 7.756-7.316 7.756h-5.21Zm1.934-1.74h3.147c3.513 0 5.468-2.149 5.468-5.994v-.022c0-3.867-1.955-6.005-5.468-6.005h-3.147v12.021Z"
            />
          </g>
          <g filter="url(#p)">
            <rect width="34.444" height="42" x="139.333" y="106" fill="#434343" rx="4.6" />
            <path fill="#fff" d="M152.248 135v-15.501h9.41v1.74h-7.476v5.328h6.864v1.719h-6.864V135h-1.934Z" />
          </g>
          <g filter="url(#q)">
            <rect width="34.444" height="42" x="178.778" y="106" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M196.226 135.258c-4.33 0-7.101-3.148-7.101-8.089v-.011c0-4.845 2.771-7.917 7.101-7.917 3.566 0 5.704 2.052 6.423 4.791l.054.204h-2.03l-.043-.118c-.72-1.966-2.224-3.094-4.404-3.094-3.191 0-5.124 2.31-5.124 6.134v.011c0 3.899 1.965 6.306 5.124 6.306 2.75 0 4.64-1.784 4.64-4.383v-.28h-4.372v-1.697h6.306v1.472c0 4.189-2.439 6.671-6.574 6.671Z"
            />
          </g>
          <g filter="url(#r)">
            <rect width="34.444" height="42" x="218.222" y="106" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M229.257 135v-15.501h1.934v6.703h8.507v-6.703h1.934V135h-1.934v-7.058h-8.507V135h-1.934Z"
            />
          </g>
          <g filter="url(#s)">
            <rect width="34.444" height="42" x="257.667" y="106" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M274.266 135.258c-2.686 0-4.2-1.665-4.362-3.889l-.01-.15h1.933l.011.107c.118 1.171.881 2.149 2.417 2.149 1.719 0 2.643-1.021 2.643-2.912v-11.064h1.933v11.086c0 2.933-1.697 4.673-4.565 4.673Z"
            />
          </g>
          <g filter="url(#t)">
            <rect width="34.444" height="42" x="297.111" y="106" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M309.231 135v-15.501h1.933v7.605h.065l6.574-7.605h2.428l-6.059 6.864L320.8 135h-2.471l-5.51-7.24-1.655 1.815V135h-1.933Z"
            />
          </g>
          <g filter="url(#u)">
            <rect width="34.444" height="42" x="336.556" y="106" fill="#434343" rx="4.6" />
            <path fill="#fff" d="M349.513 135v-15.501h1.934v13.761h7.476V135h-9.41Z" />
          </g>
          <g filter="url(#v)">
            <rect width="42" height="42" x="3" y="160" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M21.586 188.562c-1.094 0-1.68-.64-1.68-1.671v-3.5h-3.18c-.632 0-1.132-.391-1.132-.985 0-.367.164-.625.469-.922l6.968-6.945c.297-.305.617-.477.961-.477.352 0 .664.172.969.477l6.969 6.945c.28.282.468.555.468.922 0 .594-.5.985-1.14.985h-3.172v3.5c0 1.031-.586 1.671-1.68 1.671h-4.82Z"
            />
          </g>
          <g filter="url(#w)">
            <rect width="34.857" height="42" x="59" y="160" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M70.692 189v-1.375l8.863-12.343v-.043h-8.562v-1.74h10.979v1.375l-8.82 12.343v.043h9.002V189H70.692Z"
            />
          </g>
          <g filter="url(#x)">
            <rect width="34.857" height="42" x="98.857" y="160" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="m109.787 189 5.285-7.788v-.043l-5.221-7.67h2.331l4.147 6.241h.064l4.19-6.241h2.202l-5.361 7.767v.043l5.243 7.691h-2.321l-4.125-6.188h-.064L111.978 189h-2.191Z"
            />
          </g>
          <g filter="url(#y)">
            <rect width="34.857" height="42" x="138.714" y="160" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M156.573 189.258c-4.308 0-7.08-3.137-7.08-8.014v-.011c0-4.877 2.761-7.992 7.08-7.992 3.222 0 5.725 1.955 6.316 4.888l.021.107h-1.955l-.075-.236c-.601-1.88-2.127-2.976-4.307-2.976-3.094 0-5.092 2.439-5.092 6.209v.011c0 3.771 2.009 6.231 5.092 6.231 2.169 0 3.673-1.075 4.35-3.116l.032-.096h1.955l-.021.107c-.591 2.965-3.072 4.888-6.316 4.888Z"
            />
          </g>
          <g filter="url(#z)">
            <rect width="34.857" height="42" x="178.571" y="160" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="m195.044 189-5.715-15.501h2.03l4.619 13.181h.043l4.62-13.181h2.03L196.956 189h-1.912Z"
            />
          </g>
          <g filter="url(#A)">
            <rect width="34.857" height="42" x="218.429" y="160" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M230.712 189v-15.501h5.876c2.653 0 4.447 1.547 4.447 3.867v.022c0 1.6-1.203 3.158-2.804 3.383v.043c2.235.258 3.588 1.762 3.588 3.814v.021c0 2.729-1.955 4.351-5.253 4.351h-5.854Zm5.435-13.793h-3.502v4.974h2.901c2.288 0 3.534-.913 3.534-2.589v-.022c0-1.525-1.064-2.363-2.933-2.363Zm-.054 6.639h-3.448v5.446h3.631c2.32 0 3.556-.935 3.556-2.718v-.021c0-1.794-1.268-2.707-3.739-2.707Z"
            />
          </g>
          <g filter="url(#B)">
            <rect width="34.857" height="42" x="258.286" y="160" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M269.527 189v-15.501h1.88l8.529 12.235h.054v-12.235h1.912V189h-1.88l-8.529-12.235h-.054V189h-1.912Z"
            />
          </g>
          <g filter="url(#C)">
            <rect width="34.857" height="42" x="298.143" y="160" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M307.934 189v-15.501h2.234l5.371 13.063h.065l5.371-13.063h2.234V189h-1.805v-11.978h-.064L316.388 189h-1.633l-4.952-11.978h-.065V189h-1.804Z"
            />
          </g>
          <g filter="url(#D)">
            <rect width="42" height="42" x="347" y="160" fill="#202020" rx="4.6" />
            <path
              fill="#fff"
              d="m373.812 188.562-6.781-.007c-.914 0-1.695-.282-2.343-.953l-4.61-4.758c-.516-.524-.742-1-.742-1.485 0-.492.234-.961.742-1.484l4.602-4.781c.64-.68 1.429-.914 2.343-.914h6.789c1.633 0 2.454.804 2.454 2.422v9.539c0 1.617-.821 2.421-2.454 2.421Zm-.015-1.257c.781 0 1.211-.414 1.211-1.227v-9.414c0-.812-.43-1.226-1.211-1.226H367c-.586 0-.969.101-1.375.515l-4.57 4.742c-.258.274-.344.461-.344.664 0 .196.078.383.344.657l4.578 4.726c.414.422.781.563 1.375.563h6.789Zm-7.227-2.633a.634.634 0 0 1-.625-.633c0-.172.063-.328.188-.437l2.219-2.227-2.219-2.227a.578.578 0 0 1-.188-.437c0-.352.282-.617.625-.617.172 0 .313.054.43.179l2.234 2.227 2.243-2.234a.584.584 0 0 1 .437-.188c.344 0 .625.274.625.625a.605.605 0 0 1-.187.438l-2.227 2.234 2.219 2.219a.612.612 0 0 1 .187.445.633.633 0 0 1-.625.633.639.639 0 0 1-.453-.195l-2.219-2.227-2.218 2.227a.606.606 0 0 1-.446.195Z"
            />
          </g>
          <g filter="url(#E)">
            <rect width="87" height="42" x="3" y="214" fill="#202020" rx="4.6" />
            <path
              fill="#fff"
              d="M36.96 241v-9.711h-.124l-2.867 2.078v-1.484l3-2.156h1.398V241h-1.406Zm4.665 0v-.969l3.813-4.125c1.437-1.554 1.859-2.14 1.859-3.125v-.015c0-1.188-.805-2.078-2.133-2.078-1.352 0-2.25.882-2.25 2.21l-.008.016-1.343-.008-.016-.008c.008-2 1.555-3.437 3.71-3.437 1.97 0 3.477 1.336 3.477 3.156v.016c0 1.289-.554 2.226-2.593 4.328l-2.563 2.648v.125h5.344V241h-7.297Zm13.492.188c-2.328 0-3.836-1.297-3.984-3.079l-.008-.093h1.352l.007.078c.11 1.109 1.133 1.875 2.633 1.875 1.477 0 2.485-.828 2.485-2.024v-.015c0-1.383-.993-2.157-2.57-2.157h-1.415v-1.187h1.352c1.343 0 2.281-.828 2.281-1.953v-.016c0-1.179-.773-1.859-2.148-1.859-1.329 0-2.274.703-2.391 1.844l-.008.078h-1.351l.007-.078c.18-1.836 1.633-3.063 3.743-3.063 2.148 0 3.562 1.195 3.562 2.906v.016c0 1.391-.984 2.344-2.39 2.641v.031c1.64.14 2.757 1.164 2.757 2.765v.016c0 1.883-1.656 3.274-3.914 3.274Z"
            />
          </g>
          <g filter="url(#F)">
            <rect width="199" height="42" x="96" y="214" fill="#434343" rx="4.6" />
            <path
              fill="#fff"
              d="M177.125 241.148c-1.875 0-3.164-.906-3.32-2.296h1.39c.227.703.899 1.164 1.977 1.164 1.133 0 1.937-.539 1.937-1.305v-.016c0-.57-.429-.968-1.468-1.218l-1.305-.313c-1.578-.375-2.289-1.062-2.289-2.273v-.008c0-1.399 1.344-2.453 3.133-2.453 1.765 0 2.992.882 3.179 2.258h-1.336c-.179-.665-.835-1.126-1.851-1.126-1 0-1.734.516-1.734 1.258v.016c0 .57.421.93 1.414 1.172l1.296.312c1.586.383 2.352 1.071 2.352 2.274v.015c0 1.5-1.461 2.539-3.375 2.539Zm5.484 2.664v-11.234h1.36v1.344h.125c.515-.938 1.453-1.492 2.625-1.492 2.133 0 3.531 1.726 3.531 4.351v.016c0 2.641-1.391 4.351-3.531 4.351-1.157 0-2.164-.578-2.625-1.476h-.125v4.14h-1.36Zm3.797-3.867c1.539 0 2.453-1.187 2.453-3.148v-.016c0-1.961-.914-3.148-2.453-3.148-1.531 0-2.468 1.203-2.468 3.148v.016c0 1.945.937 3.148 2.468 3.148Zm8.282 1.203c-1.602 0-2.813-.968-2.813-2.5v-.015c0-1.5 1.109-2.367 3.07-2.485l2.414-.148v-.766c0-1.039-.632-1.601-1.89-1.601-1.008 0-1.672.375-1.891 1.031l-.008.024h-1.359l.008-.047c.219-1.321 1.5-2.211 3.297-2.211 2.054 0 3.203 1.054 3.203 2.804V241h-1.36v-1.242h-.125c-.531.898-1.414 1.39-2.546 1.39Zm-1.422-2.531c0 .852.726 1.352 1.703 1.352 1.383 0 2.39-.907 2.39-2.11v-.765l-2.25.14c-1.281.078-1.843.532-1.843 1.368v.015Zm11.382 2.531c-2.359 0-3.867-1.71-3.867-4.382v-.016c0-2.617 1.5-4.32 3.86-4.32 2.047 0 3.273 1.179 3.523 2.679l.008.047h-1.352l-.008-.023c-.21-.828-.96-1.5-2.171-1.5-1.516 0-2.469 1.219-2.469 3.117v.016c0 1.937.969 3.179 2.469 3.179 1.132 0 1.851-.5 2.164-1.437l.015-.047 1.344-.008-.016.086c-.343 1.523-1.476 2.609-3.5 2.609Zm8.946 0c-2.406 0-3.86-1.687-3.86-4.328v-.008c0-2.601 1.485-4.382 3.774-4.382 2.289 0 3.68 1.703 3.68 4.218v.532h-6.063c.039 1.742 1 2.758 2.5 2.758 1.141 0 1.844-.54 2.07-1.047l.032-.071h1.359l-.016.063c-.289 1.14-1.492 2.265-3.476 2.265Zm-.094-7.507c-1.25 0-2.203.851-2.352 2.453h4.657c-.141-1.664-1.063-2.453-2.305-2.453Z"
            />
          </g>
          <g filter="url(#G)">
            <rect width="88" height="42" x="301" y="214" fill="#202020" rx="4.6" />
            <path
              fill="#fff"
              d="M340.406 241.266c-3.117 0-5.109-2.297-5.109-5.899v-.015c0-3.555 2.023-5.891 5.109-5.891 2.5 0 4.258 1.406 4.703 3.547l.016.078h-1.422l-.023-.078c-.461-1.453-1.594-2.25-3.274-2.25-2.234 0-3.672 1.797-3.672 4.594v.015c0 2.836 1.414 4.602 3.68 4.602 2.016 0 3.375-1.289 3.375-3.196v-.273h-3.164v-1.234h4.57v1.375c0 2.781-1.906 4.625-4.789 4.625Zm10.571-.118c-2.399 0-3.883-1.656-3.883-4.351v-.016c0-2.703 1.484-4.351 3.883-4.351 2.398 0 3.882 1.648 3.882 4.351v.016c0 2.695-1.484 4.351-3.882 4.351Zm0-1.203c1.593 0 2.492-1.164 2.492-3.148v-.016c0-1.992-.899-3.148-2.492-3.148-1.594 0-2.493 1.156-2.493 3.148v.016c0 1.984.899 3.148 2.493 3.148Z"
            />
          </g>
        </g>
        <g filter="url(#H)">
          <path fill="#202020" fillOpacity="1" d="M0 264h392v71H0z" />
          <path
            fill="#E7E7E7"
            d="M43.5 309.783c-7.071 0-12.95-5.878-12.95-12.949 0-7.084 5.866-12.949 12.937-12.949 7.084 0 12.962 5.865 12.962 12.949 0 7.071-5.865 12.949-12.949 12.949Zm0-2.158a10.75 10.75 0 0 0 10.791-10.791 10.76 10.76 0 0 0-10.804-10.791c-5.992 0-10.765 4.799-10.765 10.791A10.739 10.739 0 0 0 43.5 307.625Zm-3.77-11.921c-.8 0-1.499-.724-1.499-1.739 0-1.028.699-1.752 1.498-1.752.813 0 1.511.724 1.511 1.752 0 1.015-.71 1.739-1.51 1.739Zm7.528 0c-.8 0-1.498-.724-1.498-1.739 0-1.028.698-1.752 1.498-1.752.812 0 1.51.724 1.51 1.752 0 1.015-.71 1.739-1.51 1.739Zm-3.77 7.49c-2.654 0-4.431-1.764-4.431-2.602 0-.305.292-.445.57-.318.915.496 2.02 1.08 3.86 1.08 1.841 0 2.946-.572 3.872-1.08.267-.127.559.013.559.318 0 .838-1.777 2.602-4.43 2.602ZM348.5 300.16c-2.539 0-4.24-1.891-4.24-4.596v-8.493c0-2.717 1.701-4.595 4.24-4.595 2.526 0 4.228 1.878 4.228 4.595v8.493c0 2.705-1.702 4.596-4.228 4.596Zm-9.09-4.392v-2.578c0-.533.419-.952.952-.952.546 0 .965.419.965.952v2.501c0 4.33 2.819 7.199 7.173 7.199 4.342 0 7.16-2.869 7.16-7.199v-2.501c0-.533.432-.952.965-.952.533 0 .952.419.952.952v2.578c0 4.976-3.275 8.467-8.125 8.874v2.958h4.71c.533 0 .965.431.965.964a.954.954 0 0 1-.965.953h-11.337a.954.954 0 0 1-.965-.953c0-.533.432-.964.965-.964h4.71v-2.958c-4.837-.407-8.125-3.898-8.125-8.874Z"
          />
          <rect width="134" height="5" x="129" y="321" fill="#fff" rx="2.5" />
        </g>
      </g>
      <defs>
        <filter
          id="a"
          width="432"
          height="84"
          x="-20"
          y="-20"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feGaussianBlur in="BackgroundImageFix" stdDeviation="10" />
          <feComposite in2="SourceAlpha" operator="in" result="effect1_backgroundBlur_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_backgroundBlur_4255_90748" result="shape" />
        </filter>
        <filter
          id="b"
          width="432"
          height="260"
          x="-20"
          y="24"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feGaussianBlur in="BackgroundImageFix" stdDeviation="10" />
          <feComposite in2="SourceAlpha" operator="in" result="effect1_backgroundBlur_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_backgroundBlur_4255_90748" result="shape" />
        </filter>
        <filter
          id="c"
          width="34.1"
          height="43"
          x="3"
          y="52"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="d"
          width="34.1"
          height="43"
          x="42.1"
          y="52"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="e"
          width="34.1"
          height="43"
          x="81.2"
          y="52"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="f"
          width="34.1"
          height="43"
          x="120.3"
          y="52"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="g"
          width="34.1"
          height="43"
          x="159.4"
          y="52"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="h"
          width="34.1"
          height="43"
          x="198.5"
          y="52"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="i"
          width="34.1"
          height="43"
          x="237.6"
          y="52"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="j"
          width="34.1"
          height="43"
          x="276.7"
          y="52"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="k"
          width="34.1"
          height="43"
          x="315.8"
          y="52"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="l"
          width="34.1"
          height="43"
          x="354.9"
          y="52"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="m"
          width="34.444"
          height="43"
          x="21"
          y="106"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="n"
          width="34.444"
          height="43"
          x="60.444"
          y="106"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="o"
          width="34.444"
          height="43"
          x="99.889"
          y="106"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="p"
          width="34.444"
          height="43"
          x="139.333"
          y="106"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="q"
          width="34.444"
          height="43"
          x="178.778"
          y="106"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="r"
          width="34.444"
          height="43"
          x="218.222"
          y="106"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="s"
          width="34.444"
          height="43"
          x="257.667"
          y="106"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="t"
          width="34.444"
          height="43"
          x="297.111"
          y="106"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="u"
          width="34.444"
          height="43"
          x="336.556"
          y="106"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="v"
          width="42"
          height="43"
          x="3"
          y="160"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="w"
          width="34.857"
          height="43"
          x="59"
          y="160"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="x"
          width="34.857"
          height="43"
          x="98.857"
          y="160"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="y"
          width="34.857"
          height="43"
          x="138.714"
          y="160"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="z"
          width="34.857"
          height="43"
          x="178.571"
          y="160"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="A"
          width="34.857"
          height="43"
          x="218.429"
          y="160"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="B"
          width="34.857"
          height="43"
          x="258.286"
          y="160"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="C"
          width="34.857"
          height="43"
          x="298.143"
          y="160"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="D"
          width="42"
          height="43"
          x="347"
          y="160"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="E"
          width="87"
          height="43"
          x="3"
          y="214"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="F"
          width="199"
          height="43"
          x="96"
          y="214"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="G"
          width="88"
          height="43"
          x="301"
          y="214"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4255_90748" result="shape" />
        </filter>
        <filter
          id="H"
          width="432"
          height="111"
          x="-20"
          y="244"
          colorInterpolationFilters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feGaussianBlur in="BackgroundImageFix" stdDeviation="10" />
          <feComposite in2="SourceAlpha" operator="in" result="effect1_backgroundBlur_4255_90748" />
          <feBlend in="SourceGraphic" in2="effect1_backgroundBlur_4255_90748" result="shape" />
        </filter>
      </defs>
    </svg>
  ) : (
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 392 335" {...rest}>
      <g filter="url(#a)">
        <path fill="#EDF0F2" d="M0 0h392v44H0z" />
        <path
          fill="#3A3B3D"
          d="M37.025 33.282c-2.623 0-4.316-1.378-4.49-3.328l-.009-.092h1.494l.008.092c.108 1.195 1.354 1.95 3.08 1.95 1.627 0 2.814-.838 2.814-2.058v-.009c0-.996-.689-1.676-2.332-2.042l-1.329-.29c-2.399-.531-3.436-1.635-3.436-3.37v-.009c.008-1.983 1.743-3.386 4.217-3.386 2.39 0 4.059 1.41 4.183 3.196l.009.116h-1.495l-.016-.108c-.166-1.054-1.162-1.835-2.723-1.826-1.494.008-2.648.713-2.648 1.967v.008c0 .955.656 1.602 2.283 1.96l1.328.298c2.499.556 3.486 1.56 3.486 3.287v.008c0 2.242-1.751 3.636-4.424 3.636Zm9.729-.124c-2.034 0-3.08-1.196-3.08-3.312v-5.794h1.444v5.445c0 1.61.581 2.382 2.01 2.382 1.576 0 2.415-.963 2.415-2.531v-5.296h1.444V33h-1.444v-1.336h-.133c-.44.954-1.345 1.494-2.656 1.494Zm10.616 2.996c-2.158 0-3.536-.97-3.76-2.44l.017-.008h1.494l.008.008c.158.68.955 1.162 2.241 1.162 1.602 0 2.557-.755 2.557-2.075v-1.81h-.133c-.564.988-1.577 1.544-2.806 1.544-2.316 0-3.752-1.793-3.752-4.3v-.016c0-2.507 1.445-4.325 3.786-4.325 1.261 0 2.24.623 2.789 1.635h.1v-1.477h1.444v8.824c0 2-1.544 3.278-3.985 3.278Zm-.066-4.897c1.66 0 2.656-1.245 2.656-3.022v-.016c0-1.777-1.004-3.047-2.656-3.047-1.66 0-2.59 1.27-2.59 3.047v.016c0 1.777.93 3.022 2.59 3.022Zm10.426 4.897c-2.159 0-3.537-.97-3.76-2.44l.016-.008h1.494l.008.008c.158.68.955 1.162 2.242 1.162 1.602 0 2.556-.755 2.556-2.075v-1.81h-.133c-.564.988-1.577 1.544-2.805 1.544-2.316 0-3.752-1.793-3.752-4.3v-.016c0-2.507 1.444-4.325 3.785-4.325 1.262 0 2.241.623 2.79 1.635h.099v-1.477h1.444v8.824c0 2-1.544 3.278-3.984 3.278Zm-.067-4.897c1.66 0 2.657-1.245 2.657-3.022v-.016c0-1.777-1.005-3.047-2.657-3.047-1.66 0-2.59 1.27-2.59 3.047v.016c0 1.777.93 3.022 2.59 3.022Zm10.393 1.9c-2.557 0-4.1-1.792-4.1-4.598v-.008c0-2.764 1.576-4.657 4.008-4.657 2.433 0 3.91 1.81 3.91 4.483v.564h-6.441c.041 1.851 1.062 2.93 2.656 2.93 1.212 0 1.959-.573 2.2-1.112l.033-.075h1.444l-.016.066c-.307 1.212-1.586 2.408-3.694 2.408Zm-.1-7.976c-1.328 0-2.34.904-2.498 2.606h4.947c-.15-1.768-1.129-2.606-2.449-2.606Zm9.23 7.977c-1.992 0-3.361-.963-3.527-2.44h1.477c.241.746.955 1.236 2.1 1.236 1.204 0 2.06-.573 2.06-1.386v-.017c0-.606-.458-1.029-1.562-1.295l-1.386-.332c-1.676-.398-2.432-1.129-2.432-2.415V26.5c0-1.485 1.428-2.606 3.329-2.606 1.876 0 3.179.938 3.378 2.399h-1.42c-.19-.706-.887-1.195-1.966-1.195-1.063 0-1.843.547-1.843 1.336v.017c0 .606.448.988 1.502 1.245l1.378.332c1.685.407 2.499 1.137 2.499 2.415v.017c0 1.594-1.553 2.698-3.586 2.698Zm8.924-.092c-1.843 0-2.615-.68-2.615-2.39v-5.429h-1.41v-1.195h1.41v-2.316h1.494v2.316h1.96v1.195h-1.96v5.064c0 1.054.366 1.477 1.295 1.477.258 0 .399-.008.664-.033v1.228c-.282.05-.556.083-.838.083Z"
          opacity=".4"
        />
        <path stroke="#000" stroke-linecap="square" stroke-opacity=".1" d="M130.333 15v24" opacity=".4" />
        <path
          fill="#3A3B3D"
          d="M168.358 33.282c-2.623 0-4.316-1.378-4.49-3.328l-.009-.092h1.495l.008.092c.108 1.195 1.353 1.95 3.079 1.95 1.627 0 2.814-.838 2.814-2.058v-.009c0-.996-.689-1.676-2.332-2.042l-1.328-.29c-2.399-.531-3.437-1.635-3.437-3.37v-.009c.009-1.983 1.743-3.386 4.217-3.386 2.391 0 4.059 1.41 4.184 3.196l.008.116h-1.494l-.017-.108c-.166-1.054-1.162-1.835-2.722-1.826-1.495.008-2.648.713-2.648 1.967v.008c0 .955.655 1.602 2.282 1.96l1.328.298c2.499.556 3.487 1.56 3.487 3.287v.008c0 2.242-1.752 3.636-4.425 3.636Zm9.729-.124c-2.034 0-3.08-1.196-3.08-3.312v-5.794h1.445v5.445c0 1.61.581 2.382 2.008 2.382 1.578 0 2.416-.963 2.416-2.531v-5.296h1.444V33h-1.444v-1.336h-.133c-.44.954-1.345 1.494-2.656 1.494Zm10.617 2.996c-2.159 0-3.536-.97-3.761-2.44l.017-.008h1.494l.008.008c.158.68.955 1.162 2.242 1.162 1.602 0 2.556-.755 2.556-2.075v-1.81h-.133c-.564.988-1.577 1.544-2.805 1.544-2.316 0-3.752-1.793-3.752-4.3v-.016c0-2.507 1.444-4.325 3.785-4.325 1.262 0 2.241.623 2.789 1.635h.1v-1.477h1.444v8.824c0 2-1.544 3.278-3.984 3.278Zm-.067-4.897c1.66 0 2.656-1.245 2.656-3.022v-.016c0-1.777-1.004-3.047-2.656-3.047-1.66 0-2.59 1.27-2.59 3.047v.016c0 1.777.93 3.022 2.59 3.022Zm10.426 4.897c-2.158 0-3.536-.97-3.76-2.44l.016-.008h1.495l.008.008c.158.68.954 1.162 2.241 1.162 1.602 0 2.557-.755 2.557-2.075v-1.81h-.133c-.565.988-1.577 1.544-2.806 1.544-2.316 0-3.752-1.793-3.752-4.3v-.016c0-2.507 1.445-4.325 3.785-4.325 1.262 0 2.242.623 2.789 1.635h.1v-1.477h1.444v8.824c0 2-1.544 3.278-3.984 3.278Zm-.066-4.897c1.66 0 2.656-1.245 2.656-3.022v-.016c0-1.777-1.005-3.047-2.656-3.047-1.661 0-2.59 1.27-2.59 3.047v.016c0 1.777.929 3.022 2.59 3.022Zm10.392 1.9c-2.556 0-4.1-1.792-4.1-4.598v-.008c0-2.764 1.577-4.657 4.009-4.657 2.432 0 3.91 1.81 3.91 4.483v.564h-6.442c.042 1.851 1.063 2.93 2.656 2.93 1.212 0 1.959-.573 2.2-1.112l.033-.075h1.445l-.017.066c-.307 1.212-1.585 2.408-3.694 2.408Zm-.099-7.976c-1.329 0-2.341.904-2.499 2.606h4.947c-.149-1.768-1.129-2.606-2.448-2.606Zm9.23 7.977c-1.992 0-3.362-.963-3.528-2.44h1.478c.24.746.954 1.236 2.1 1.236 1.203 0 2.058-.573 2.058-1.386v-.017c0-.606-.456-1.029-1.56-1.295l-1.386-.332c-1.677-.398-2.432-1.129-2.432-2.415V26.5c0-1.485 1.427-2.606 3.328-2.606 1.876 0 3.179.938 3.379 2.399h-1.42c-.191-.706-.888-1.195-1.967-1.195-1.063 0-1.843.547-1.843 1.336v.017c0 .606.448.988 1.503 1.245l1.377.332c1.686.407 2.499 1.137 2.499 2.415v.017c0 1.594-1.552 2.698-3.586 2.698Zm8.923-.092c-1.842 0-2.614-.68-2.614-2.39v-5.429h-1.411v-1.195h1.411v-2.316h1.494v2.316h1.959v1.195h-1.959v5.064c0 1.054.365 1.477 1.295 1.477.257 0 .398-.008.664-.033v1.228a4.78 4.78 0 0 1-.839.083Z"
          opacity=".4"
        />
        <path stroke="#000" stroke-linecap="square" stroke-opacity=".1" d="M261.667 15v24" />
        <path
          fill="#3A3B3D"
          d="M299.692 33.282c-2.623 0-4.317-1.378-4.491-3.328l-.008-.092h1.494l.008.092c.108 1.195 1.353 1.95 3.08 1.95 1.627 0 2.814-.838 2.814-2.058v-.009c0-.996-.689-1.676-2.333-2.042l-1.328-.29c-2.399-.531-3.436-1.635-3.436-3.37v-.009c.008-1.983 1.743-3.386 4.216-3.386 2.391 0 4.059 1.41 4.184 3.196l.008.116h-1.494l-.016-.108c-.166-1.054-1.163-1.835-2.723-1.826-1.494.008-2.648.713-2.648 1.967v.008c0 .955.656 1.602 2.283 1.96l1.328.298c2.498.556 3.486 1.56 3.486 3.287v.008c0 2.242-1.751 3.636-4.424 3.636Zm9.728-.124c-2.033 0-3.079-1.196-3.079-3.312v-5.794h1.444v5.445c0 1.61.581 2.382 2.009 2.382 1.577 0 2.415-.963 2.415-2.531v-5.296h1.445V33h-1.445v-1.336h-.132c-.44.954-1.345 1.494-2.657 1.494Zm10.617 2.996c-2.158 0-3.536-.97-3.76-2.44l.016-.008h1.495l.008.008c.158.68.954 1.162 2.241 1.162 1.602 0 2.557-.755 2.557-2.075v-1.81h-.133c-.565.988-1.577 1.544-2.806 1.544-2.316 0-3.752-1.793-3.752-4.3v-.016c0-2.507 1.445-4.325 3.785-4.325 1.262 0 2.242.623 2.789 1.635h.1v-1.477h1.444v8.824c0 2-1.544 3.278-3.984 3.278Zm-.066-4.897c1.66 0 2.656-1.245 2.656-3.022v-.016c0-1.777-1.005-3.047-2.656-3.047-1.661 0-2.59 1.27-2.59 3.047v.016c0 1.777.929 3.022 2.59 3.022Zm10.425 4.897c-2.158 0-3.536-.97-3.76-2.44l.017-.008h1.494l.008.008c.158.68.955 1.162 2.241 1.162 1.602 0 2.557-.755 2.557-2.075v-1.81h-.133c-.564.988-1.577 1.544-2.805 1.544-2.316 0-3.752-1.793-3.752-4.3v-.016c0-2.507 1.444-4.325 3.785-4.325 1.261 0 2.241.623 2.789 1.635h.099v-1.477h1.445v8.824c0 2-1.544 3.278-3.985 3.278Zm-.066-4.897c1.66 0 2.656-1.245 2.656-3.022v-.016c0-1.777-1.004-3.047-2.656-3.047-1.66 0-2.59 1.27-2.59 3.047v.016c0 1.777.93 3.022 2.59 3.022Zm10.393 1.9c-2.557 0-4.101-1.792-4.101-4.598v-.008c0-2.764 1.577-4.657 4.009-4.657 2.432 0 3.91 1.81 3.91 4.483v.564H338.1c.041 1.851 1.062 2.93 2.656 2.93 1.212 0 1.959-.573 2.199-1.112l.034-.075h1.444l-.017.066c-.307 1.212-1.585 2.408-3.693 2.408Zm-.1-7.976c-1.328 0-2.341.904-2.499 2.606h4.948c-.15-1.768-1.129-2.606-2.449-2.606Zm9.23 7.977c-1.992 0-3.361-.963-3.527-2.44h1.477c.241.746.955 1.236 2.1 1.236 1.204 0 2.059-.573 2.059-1.386v-.017c0-.606-.457-1.029-1.561-1.295l-1.386-.332c-1.677-.398-2.432-1.129-2.432-2.415V26.5c0-1.485 1.428-2.606 3.329-2.606 1.876 0 3.179.938 3.378 2.399h-1.419c-.191-.706-.889-1.195-1.968-1.195-1.062 0-1.843.547-1.843 1.336v.017c0 .606.449.988 1.503 1.245l1.378.332c1.685.407 2.498 1.137 2.498 2.415v.017c0 1.594-1.552 2.698-3.586 2.698Zm8.924-.092c-1.843 0-2.615-.68-2.615-2.39v-5.429h-1.411v-1.195h1.411v-2.316h1.494v2.316h1.959v1.195h-1.959v5.064c0 1.054.365 1.477 1.295 1.477.257 0 .399-.008.664-.033v1.228c-.282.05-.556.083-.838.083Z"
          opacity=".4"
        />
      </g>
      <g filter="url(#b)">
        <path fill="#EDF0F2" d="M0 44h392v220H0z" />
        <g opacity=".4">
          <g filter="url(#c)">
            <rect width="34.1" height="42" x="3" y="52" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M20.06 81.258c-4.404 0-7.154-3.083-7.154-8.003v-.022c0-4.909 2.761-7.992 7.155-7.992 4.383 0 7.133 3.083 7.133 7.992v.022c0 3.008-1.021 5.317-2.815 6.67l2.052 2.826h-2.17l-1.429-1.977c-.827.323-1.762.484-2.771.484Zm0-1.783c.592 0 1.14-.086 1.644-.247l-1.944-2.664h2.17l1.321 1.815c1.246-1.064 1.955-2.858 1.955-5.124v-.022c0-3.802-1.987-6.209-5.145-6.209-3.17 0-5.167 2.396-5.167 6.21v.02c0 3.814 1.987 6.22 5.167 6.22Z"
            />
          </g>
          <g filter="url(#d)">
            <rect width="34.1" height="42" x="42.1" y="52" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M53.693 81 49.47 65.499h2.02l3.126 12.73h.043l3.512-12.73h1.956l3.512 12.73h.043l3.126-12.73h2.02L64.607 81h-1.826l-3.61-12.418h-.042L55.519 81h-1.826Z"
            />
          </g>
          <g filter="url(#e)">
            <rect width="34.1" height="42" x="81.2" y="52" fill="#fff" rx="4.6" />
            <path fill="#000" d="M93.674 81V65.499h9.603v1.74h-7.67v4.974h7.273v1.719h-7.273v5.328h7.67V81h-9.603Z" />
          </g>
          <g filter="url(#f)">
            <rect width="34.1" height="42" x="120.3" y="52" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M132.258 81V65.499h5.812c2.986 0 4.941 1.826 4.941 4.62v.02c0 2.15-1.181 3.814-3.115 4.426L143.484 81h-2.267l-3.319-6.134h-3.706V81h-1.934Zm1.934-7.842h3.706c1.987 0 3.115-1.074 3.115-2.975v-.022c0-1.847-1.214-2.943-3.201-2.943h-3.62v5.94Z"
            />
          </g>
          <g filter="url(#g)">
            <rect width="34.1" height="42" x="159.4" y="52" fill="#fff" rx="4.6" />
            <path fill="#000" d="M175.483 81V67.24h-4.887v-1.741h11.709v1.74h-4.888V81h-1.934Z" />
          </g>
          <g filter="url(#h)">
            <rect width="34.1" height="42" x="198.5" y="52" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M214.583 81v-6.67l-5.5-8.831h2.202l4.233 6.961h.064l4.233-6.961h2.202l-5.5 8.83V81h-1.934Z"
            />
          </g>
          <g filter="url(#i)">
            <rect width="34.1" height="42" x="237.6" y="52" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M254.661 81.258c-3.846 0-6.166-2.32-6.166-5.694V65.5h1.933v9.937c0 2.384 1.547 4.039 4.233 4.039 2.685 0 4.211-1.655 4.211-4.04V65.5h1.933v10.066c0 3.373-2.299 5.693-6.144 5.693Z"
            />
          </g>
          <g filter="url(#j)">
            <rect width="34.1" height="42" x="276.7" y="52" fill="#fff" rx="4.6" />
            <path fill="#000" d="M292.783 81V65.499h1.934V81h-1.934Z" />
          </g>
          <g filter="url(#k)">
            <rect width="34.1" height="42" x="315.8" y="52" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M332.861 81.258c-4.405 0-7.155-3.083-7.155-8.003v-.022c0-4.909 2.761-7.992 7.155-7.992 4.383 0 7.133 3.083 7.133 7.992v.022c0 4.92-2.74 8.003-7.133 8.003Zm0-1.783c3.19 0 5.156-2.439 5.156-6.22v-.022c0-3.802-1.998-6.209-5.156-6.209-3.169 0-5.178 2.396-5.178 6.21v.02c0 3.814 1.998 6.22 5.178 6.22Z"
            />
          </g>
          <g filter="url(#l)">
            <rect width="34.1" height="42" x="354.9" y="52" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M367.094 81V65.499h5.522c2.911 0 4.974 2.009 4.974 4.952v.022c0 2.943-2.063 4.995-4.974 4.995h-3.588V81h-1.934Zm5.028-13.782h-3.094v6.531h3.094c2.213 0 3.491-1.214 3.491-3.255v-.021c0-2.041-1.278-3.255-3.491-3.255Z"
            />
          </g>
        </g>
        <g opacity=".4">
          <g filter="url(#m)">
            <rect width="34.444" height="42" x="21" y="106" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="m31.498 135 5.768-15.501h1.912L44.936 135h-2.03l-1.569-4.437h-6.24L33.526 135h-2.03Zm6.703-13.181-2.514 7.101h5.07l-2.513-7.101H38.2Z"
            />
          </g>
          <g filter="url(#n)">
            <rect width="34.444" height="42" x="60.444" y="106" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M77.71 135.258c-3.352 0-5.618-1.644-5.812-4.297l-.01-.15h1.933l.022.15c.225 1.558 1.729 2.514 3.974 2.514 2.234 0 3.642-1.01 3.642-2.611v-.01c0-1.365-.892-2.127-3.019-2.6l-1.719-.376c-3.029-.666-4.447-2.03-4.447-4.297v-.011c.01-2.546 2.267-4.329 5.457-4.329 3.03 0 5.242 1.751 5.414 4.286l.01.161h-1.933l-.021-.15c-.236-1.579-1.558-2.514-3.524-2.514-2.073.011-3.426.999-3.426 2.493v.01c0 1.268.934 2.063 2.954 2.503l1.719.376c3.18.698 4.511 1.988 4.511 4.351v.011c0 2.75-2.18 4.49-5.725 4.49Z"
            />
          </g>
          <g filter="url(#o)">
            <rect width="34.444" height="42" x="99.889" y="106" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M111.149 135v-15.501h5.21c4.587 0 7.316 2.857 7.316 7.724v.021c0 4.888-2.707 7.756-7.316 7.756h-5.21Zm1.934-1.74h3.147c3.513 0 5.468-2.149 5.468-5.994v-.022c0-3.867-1.955-6.005-5.468-6.005h-3.147v12.021Z"
            />
          </g>
          <g filter="url(#p)">
            <rect width="34.444" height="42" x="139.333" y="106" fill="#fff" rx="4.6" />
            <path fill="#000" d="M152.248 135v-15.501h9.41v1.74h-7.476v5.328h6.864v1.719h-6.864V135h-1.934Z" />
          </g>
          <g filter="url(#q)">
            <rect width="34.444" height="42" x="178.778" y="106" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M196.226 135.258c-4.329 0-7.101-3.148-7.101-8.089v-.011c0-4.845 2.772-7.917 7.101-7.917 3.566 0 5.704 2.052 6.423 4.791l.054.204h-2.03l-.043-.118c-.72-1.966-2.224-3.094-4.404-3.094-3.191 0-5.124 2.31-5.124 6.134v.011c0 3.899 1.965 6.306 5.124 6.306 2.75 0 4.64-1.784 4.64-4.383v-.28h-4.372v-1.697h6.306v1.472c0 4.189-2.439 6.671-6.574 6.671Z"
            />
          </g>
          <g filter="url(#r)">
            <rect width="34.444" height="42" x="218.222" y="106" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M229.257 135v-15.501h1.933v6.703h8.508v-6.703h1.934V135h-1.934v-7.058h-8.508V135h-1.933Z"
            />
          </g>
          <g filter="url(#s)">
            <rect width="34.444" height="42" x="257.667" y="106" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M274.266 135.258c-2.686 0-4.2-1.665-4.362-3.889l-.01-.15h1.933l.011.107c.118 1.171.881 2.149 2.417 2.149 1.719 0 2.643-1.021 2.643-2.912v-11.064h1.933v11.086c0 2.933-1.697 4.673-4.565 4.673Z"
            />
          </g>
          <g filter="url(#t)">
            <rect width="34.444" height="42" x="297.111" y="106" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M309.231 135v-15.501h1.933v7.605h.065l6.574-7.605h2.428l-6.059 6.864L320.8 135h-2.471l-5.51-7.24-1.655 1.815V135h-1.933Z"
            />
          </g>
          <g filter="url(#u)">
            <rect width="34.444" height="42" x="336.556" y="106" fill="#fff" rx="4.6" />
            <path fill="#000" d="M349.513 135v-15.501h1.934v13.761h7.476V135h-9.41Z" />
          </g>
        </g>
        <g opacity=".4">
          <g filter="url(#v)">
            <rect width="42" height="42" x="3" y="160" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M21.586 188.562c-1.094 0-1.68-.64-1.68-1.671v-3.5h-3.18c-.632 0-1.132-.391-1.132-.985 0-.367.164-.625.469-.922l6.968-6.945c.297-.305.617-.477.961-.477.352 0 .664.172.969.477l6.969 6.945c.28.282.468.555.468.922 0 .594-.5.985-1.14.985h-3.172v3.5c0 1.031-.586 1.671-1.68 1.671h-4.82Z"
            />
          </g>
          <g filter="url(#w)">
            <rect width="34.857" height="42" x="59" y="160" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M70.692 189v-1.375l8.863-12.343v-.043h-8.562v-1.74h10.979v1.375l-8.82 12.343v.043h9.002V189H70.692Z"
            />
          </g>
          <g filter="url(#x)">
            <rect width="34.857" height="42" x="98.857" y="160" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="m109.787 189 5.285-7.788v-.043l-5.221-7.67h2.331l4.147 6.241h.064l4.19-6.241h2.202l-5.361 7.767v.043l5.243 7.691h-2.321l-4.125-6.188h-.064L111.978 189h-2.191Z"
            />
          </g>
          <g filter="url(#y)">
            <rect width="34.857" height="42" x="138.714" y="160" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M156.572 189.258c-4.307 0-7.079-3.137-7.079-8.014v-.011c0-4.877 2.761-7.992 7.079-7.992 3.223 0 5.726 1.955 6.317 4.888l.021.107h-1.955l-.075-.236c-.601-1.88-2.127-2.976-4.308-2.976-3.093 0-5.091 2.439-5.091 6.209v.011c0 3.771 2.008 6.231 5.091 6.231 2.17 0 3.674-1.075 4.351-3.116l.032-.096h1.955l-.021.107c-.591 2.965-3.072 4.888-6.317 4.888Z"
            />
          </g>
          <g filter="url(#z)">
            <rect width="34.857" height="42" x="178.571" y="160" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="m195.044 189-5.715-15.501h2.03l4.619 13.181h.043l4.62-13.181h2.03L196.956 189h-1.912Z"
            />
          </g>
          <g filter="url(#A)">
            <rect width="34.857" height="42" x="218.429" y="160" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M230.712 189v-15.501h5.876c2.653 0 4.447 1.547 4.447 3.867v.022c0 1.6-1.203 3.158-2.804 3.383v.043c2.235.258 3.588 1.762 3.588 3.814v.021c0 2.729-1.955 4.351-5.253 4.351h-5.854Zm5.435-13.793h-3.502v4.974h2.901c2.288 0 3.534-.913 3.534-2.589v-.022c0-1.525-1.064-2.363-2.933-2.363Zm-.054 6.639h-3.448v5.446h3.631c2.32 0 3.556-.935 3.556-2.718v-.021c0-1.794-1.268-2.707-3.739-2.707Z"
            />
          </g>
          <g filter="url(#B)">
            <rect width="34.857" height="42" x="258.286" y="160" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M269.527 189v-15.501h1.88l8.529 12.235h.054v-12.235h1.912V189h-1.88l-8.529-12.235h-.054V189h-1.912Z"
            />
          </g>
          <g filter="url(#C)">
            <rect width="34.857" height="42" x="298.143" y="160" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M307.934 189v-15.501h2.234l5.371 13.063h.065l5.371-13.063h2.234V189h-1.805v-11.978h-.064L316.388 189h-1.633l-4.952-11.978h-.065V189h-1.804Z"
            />
          </g>
          <g filter="url(#D)">
            <rect width="42" height="42" x="347" y="160" fill="#ADB3BC" rx="4.6" />
            <path
              fill="#000"
              d="m373.812 188.562-6.781-.007c-.914 0-1.695-.282-2.343-.953l-4.61-4.758c-.516-.524-.742-1-.742-1.485 0-.492.234-.961.742-1.484l4.602-4.781c.64-.68 1.429-.914 2.343-.914h6.789c1.633 0 2.454.804 2.454 2.422v9.539c0 1.617-.821 2.421-2.454 2.421Zm-.015-1.257c.781 0 1.211-.414 1.211-1.227v-9.414c0-.812-.43-1.226-1.211-1.226H367c-.586 0-.969.101-1.375.515l-4.57 4.742c-.258.274-.344.461-.344.664 0 .196.078.383.344.657l4.578 4.726c.414.422.781.563 1.375.563h6.789Zm-7.227-2.633a.634.634 0 0 1-.625-.633c0-.172.063-.328.188-.437l2.219-2.227-2.219-2.227a.578.578 0 0 1-.188-.437c0-.352.282-.617.625-.617.172 0 .313.054.43.179l2.234 2.227 2.243-2.234a.584.584 0 0 1 .437-.188c.344 0 .625.274.625.625a.605.605 0 0 1-.187.438l-2.227 2.234 2.219 2.219a.612.612 0 0 1 .187.445.633.633 0 0 1-.625.633.639.639 0 0 1-.453-.195l-2.219-2.227-2.218 2.227a.606.606 0 0 1-.446.195Z"
            />
          </g>
        </g>
        <g opacity=".4">
          <g filter="url(#E)">
            <rect width="87" height="42" x="3" y="214" fill="#ADB3BC" rx="4.6" />
            <path
              fill="#000"
              d="M36.96 241v-9.711h-.124l-2.867 2.078v-1.484l3-2.156h1.398V241h-1.406Zm4.665 0v-.969l3.813-4.125c1.437-1.554 1.859-2.14 1.859-3.125v-.015c0-1.188-.805-2.078-2.133-2.078-1.352 0-2.25.882-2.25 2.21l-.008.016-1.343-.008-.016-.008c.008-2 1.555-3.437 3.71-3.437 1.97 0 3.477 1.336 3.477 3.156v.016c0 1.289-.554 2.226-2.593 4.328l-2.563 2.648v.125h5.344V241h-7.297Zm13.492.188c-2.328 0-3.836-1.297-3.984-3.079l-.008-.093h1.352l.007.078c.11 1.109 1.133 1.875 2.633 1.875 1.477 0 2.485-.828 2.485-2.024v-.015c0-1.383-.993-2.157-2.57-2.157h-1.415v-1.187h1.352c1.343 0 2.281-.828 2.281-1.953v-.016c0-1.179-.773-1.859-2.148-1.859-1.329 0-2.274.703-2.391 1.844l-.008.078h-1.351l.007-.078c.18-1.836 1.633-3.063 3.743-3.063 2.148 0 3.562 1.195 3.562 2.906v.016c0 1.391-.984 2.344-2.39 2.641v.031c1.64.14 2.757 1.164 2.757 2.765v.016c0 1.883-1.656 3.274-3.914 3.274Z"
            />
          </g>
          <g filter="url(#F)">
            <rect width="199" height="42" x="96" y="214" fill="#fff" rx="4.6" />
            <path
              fill="#000"
              d="M177.125 241.148c-1.875 0-3.164-.906-3.32-2.296h1.39c.227.703.899 1.164 1.977 1.164 1.133 0 1.937-.539 1.937-1.305v-.016c0-.57-.429-.968-1.468-1.218l-1.305-.313c-1.578-.375-2.289-1.062-2.289-2.273v-.008c0-1.399 1.344-2.453 3.133-2.453 1.765 0 2.992.882 3.179 2.258h-1.336c-.179-.665-.835-1.126-1.851-1.126-1 0-1.734.516-1.734 1.258v.016c0 .57.421.93 1.414 1.172l1.296.312c1.586.383 2.352 1.071 2.352 2.274v.015c0 1.5-1.461 2.539-3.375 2.539Zm5.484 2.664v-11.234h1.36v1.344h.125c.515-.938 1.453-1.492 2.625-1.492 2.133 0 3.531 1.726 3.531 4.351v.016c0 2.641-1.391 4.351-3.531 4.351-1.157 0-2.164-.578-2.625-1.476h-.125v4.14h-1.36Zm3.797-3.867c1.539 0 2.453-1.187 2.453-3.148v-.016c0-1.961-.914-3.148-2.453-3.148-1.531 0-2.468 1.203-2.468 3.148v.016c0 1.945.937 3.148 2.468 3.148Zm8.282 1.203c-1.602 0-2.813-.968-2.813-2.5v-.015c0-1.5 1.109-2.367 3.07-2.485l2.414-.148v-.766c0-1.039-.632-1.601-1.89-1.601-1.008 0-1.672.375-1.891 1.031l-.008.024h-1.359l.008-.047c.219-1.321 1.5-2.211 3.297-2.211 2.054 0 3.203 1.054 3.203 2.804V241h-1.36v-1.242h-.125c-.531.898-1.414 1.39-2.546 1.39Zm-1.422-2.531c0 .852.726 1.352 1.703 1.352 1.383 0 2.39-.907 2.39-2.11v-.765l-2.25.14c-1.281.078-1.843.532-1.843 1.368v.015Zm11.382 2.531c-2.359 0-3.867-1.71-3.867-4.382v-.016c0-2.617 1.5-4.32 3.86-4.32 2.047 0 3.273 1.179 3.523 2.679l.008.047h-1.352l-.008-.023c-.21-.828-.96-1.5-2.171-1.5-1.516 0-2.469 1.219-2.469 3.117v.016c0 1.937.969 3.179 2.469 3.179 1.132 0 1.851-.5 2.164-1.437l.015-.047 1.344-.008-.016.086c-.343 1.523-1.476 2.609-3.5 2.609Zm8.946 0c-2.406 0-3.86-1.687-3.86-4.328v-.008c0-2.601 1.485-4.382 3.774-4.382 2.289 0 3.68 1.703 3.68 4.218v.532h-6.063c.039 1.742 1 2.758 2.5 2.758 1.141 0 1.844-.54 2.07-1.047l.032-.071h1.359l-.016.063c-.289 1.14-1.492 2.265-3.476 2.265Zm-.094-7.507c-1.25 0-2.203.851-2.352 2.453h4.657c-.141-1.664-1.063-2.453-2.305-2.453Z"
            />
          </g>
          <g filter="url(#G)">
            <rect width="88" height="42" x="301" y="214" fill="#ADB3BC" rx="4.6" />
            <path
              fill="#000"
              d="M340.406 241.266c-3.117 0-5.109-2.297-5.109-5.899v-.015c0-3.555 2.023-5.891 5.109-5.891 2.5 0 4.258 1.406 4.703 3.547l.016.078h-1.422l-.023-.078c-.461-1.453-1.594-2.25-3.274-2.25-2.234 0-3.672 1.797-3.672 4.594v.015c0 2.836 1.414 4.602 3.68 4.602 2.016 0 3.375-1.289 3.375-3.196v-.273h-3.164v-1.234h4.57v1.375c0 2.781-1.906 4.625-4.789 4.625Zm10.571-.118c-2.399 0-3.883-1.656-3.883-4.351v-.016c0-2.703 1.484-4.351 3.883-4.351 2.398 0 3.882 1.648 3.882 4.351v.016c0 2.695-1.484 4.351-3.882 4.351Zm0-1.203c1.593 0 2.492-1.164 2.492-3.148v-.016c0-1.992-.899-3.148-2.492-3.148-1.594 0-2.493 1.156-2.493 3.148v.016c0 1.984.899 3.148 2.493 3.148Z"
            />
          </g>
        </g>
      </g>
      <g filter="url(#H)">
        <path fill="#EDF0F2" d="M0 264h392v71H0z" />
        <path
          fill="#50555C"
          d="M43.5 309.783c-7.071 0-12.95-5.878-12.95-12.949 0-7.084 5.866-12.949 12.937-12.949 7.084 0 12.962 5.865 12.962 12.949 0 7.071-5.865 12.949-12.949 12.949Zm0-2.158a10.75 10.75 0 0 0 10.791-10.791 10.76 10.76 0 0 0-10.804-10.791c-5.992 0-10.765 4.799-10.765 10.791A10.739 10.739 0 0 0 43.5 307.625Zm-3.77-11.921c-.8 0-1.499-.724-1.499-1.739 0-1.028.699-1.752 1.498-1.752.813 0 1.511.724 1.511 1.752 0 1.015-.71 1.739-1.51 1.739Zm7.528 0c-.8 0-1.498-.724-1.498-1.739 0-1.028.698-1.752 1.498-1.752.812 0 1.51.724 1.51 1.752 0 1.015-.71 1.739-1.51 1.739Zm-3.77 7.49c-2.654 0-4.431-1.764-4.431-2.602 0-.305.292-.445.57-.318.915.496 2.02 1.08 3.86 1.08 1.841 0 2.946-.572 3.872-1.08.267-.127.559.013.559.318 0 .838-1.777 2.602-4.43 2.602ZM343.879 295.311v-7.986c0-2.932 1.879-4.976 4.621-4.976 2.729 0 4.608 2.044 4.608 4.976v7.986c0 2.919-1.879 4.976-4.608 4.976-2.742 0-4.621-2.057-4.621-4.976Zm1.917 0c0 1.878 1.079 3.085 2.704 3.085 1.625 0 2.691-1.207 2.691-3.085v-7.986c0-1.879-1.066-3.085-2.691-3.085-1.625 0-2.704 1.206-2.704 3.085v7.986Zm-6.386.457v-2.578c0-.533.419-.952.952-.952.546 0 .965.419.965.952v2.501c0 4.33 2.819 7.199 7.173 7.199 4.342 0 7.16-2.869 7.16-7.199v-2.501c0-.533.432-.952.965-.952.533 0 .952.419.952.952v2.578c0 4.976-3.275 8.467-8.125 8.874v2.958h4.71c.533 0 .965.431.965.964a.954.954 0 0 1-.965.953h-11.337a.954.954 0 0 1-.965-.953c0-.533.432-.964.965-.964h4.71v-2.958c-4.837-.407-8.125-3.898-8.125-8.874Z"
          opacity=".4"
        />
        <rect width="134" height="5" x="129" y="321" fill="#000" opacity=".4" rx="2.5" />
      </g>
      <defs>
        <filter
          id="a"
          width="432"
          height="84"
          x="-20"
          y="-20"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feGaussianBlur in="BackgroundImageFix" stdDeviation="10" />
          <feComposite in2="SourceAlpha" operator="in" result="effect1_backgroundBlur_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_backgroundBlur_4264_75885" result="shape" />
        </filter>
        <filter
          id="b"
          width="432"
          height="260"
          x="-20"
          y="24"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feGaussianBlur in="BackgroundImageFix" stdDeviation="10" />
          <feComposite in2="SourceAlpha" operator="in" result="effect1_backgroundBlur_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_backgroundBlur_4264_75885" result="shape" />
        </filter>
        <filter
          id="c"
          width="34.1"
          height="43"
          x="3"
          y="52"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="d"
          width="34.1"
          height="43"
          x="42.1"
          y="52"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="e"
          width="34.1"
          height="43"
          x="81.2"
          y="52"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="f"
          width="34.1"
          height="43"
          x="120.3"
          y="52"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="g"
          width="34.1"
          height="43"
          x="159.4"
          y="52"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="h"
          width="34.1"
          height="43"
          x="198.5"
          y="52"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="i"
          width="34.1"
          height="43"
          x="237.6"
          y="52"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="j"
          width="34.1"
          height="43"
          x="276.7"
          y="52"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="k"
          width="34.1"
          height="43"
          x="315.8"
          y="52"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="l"
          width="34.1"
          height="43"
          x="354.9"
          y="52"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="m"
          width="34.444"
          height="43"
          x="21"
          y="106"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="n"
          width="34.444"
          height="43"
          x="60.444"
          y="106"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="o"
          width="34.444"
          height="43"
          x="99.889"
          y="106"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="p"
          width="34.444"
          height="43"
          x="139.333"
          y="106"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="q"
          width="34.444"
          height="43"
          x="178.778"
          y="106"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="r"
          width="34.444"
          height="43"
          x="218.222"
          y="106"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="s"
          width="34.444"
          height="43"
          x="257.667"
          y="106"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="t"
          width="34.444"
          height="43"
          x="297.111"
          y="106"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="u"
          width="34.444"
          height="43"
          x="336.556"
          y="106"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="v"
          width="42"
          height="43"
          x="3"
          y="160"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="w"
          width="34.857"
          height="43"
          x="59"
          y="160"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="x"
          width="34.857"
          height="43"
          x="98.857"
          y="160"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="y"
          width="34.857"
          height="43"
          x="138.714"
          y="160"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="z"
          width="34.857"
          height="43"
          x="178.571"
          y="160"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="A"
          width="34.857"
          height="43"
          x="218.429"
          y="160"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="B"
          width="34.857"
          height="43"
          x="258.286"
          y="160"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="C"
          width="34.857"
          height="43"
          x="298.143"
          y="160"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="D"
          width="42"
          height="43"
          x="347"
          y="160"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="E"
          width="87"
          height="43"
          x="3"
          y="214"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="F"
          width="199"
          height="43"
          x="96"
          y="214"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="G"
          width="88"
          height="43"
          x="301"
          y="214"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix in="SourceAlpha" result="hardAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
          <feOffset dy="1" />
          <feColorMatrix values="0 0 0 0 0.537255 0 0 0 0 0.541176 0 0 0 0 0.552941 0 0 0 1 0" />
          <feBlend in2="BackgroundImageFix" result="effect1_dropShadow_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_dropShadow_4264_75885" result="shape" />
        </filter>
        <filter
          id="H"
          width="432"
          height="111"
          x="-20"
          y="244"
          color-interpolation-filters="sRGB"
          filterUnits="userSpaceOnUse"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feGaussianBlur in="BackgroundImageFix" stdDeviation="10" />
          <feComposite in2="SourceAlpha" operator="in" result="effect1_backgroundBlur_4264_75885" />
          <feBlend in="SourceGraphic" in2="effect1_backgroundBlur_4264_75885" result="shape" />
        </filter>
      </defs>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ComponentProps } from 'react';
interface IOSKeyboardProps extends ComponentProps<'svg'> {
isDarkMode?: boolean;
}
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/icons/iphone/TimeIcon.tsx
Tamaño: 1764 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ComponentProps } from 'react';

export const TimeIcon = (props: ComponentProps<'svg'>) => {
  return (
    <svg width="46" height="20" viewBox="0 0 46 20" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
      <path
        d="M12.9337 4.88965C15.0391 4.88965 16.8712 6.38672 16.8712 9.94141V9.95508C16.8712 13.2773 15.3741 15.2461 12.8927 15.2461C11.0811 15.2461 9.72762 14.1729 9.41316 12.6621L9.39949 12.5869H11.1358L11.1563 12.6553C11.4161 13.3457 12.0245 13.7969 12.8927 13.7969C14.4581 13.7969 15.1212 12.2656 15.1964 10.3789C15.1964 10.3037 15.2032 10.2285 15.2032 10.1533H15.0665C14.7042 10.9326 13.8429 11.623 12.4893 11.623C10.5958 11.623 9.26961 10.2422 9.26961 8.36914V8.35547C9.26961 6.35254 10.794 4.88965 12.9337 4.88965ZM12.9268 10.2695C14.0411 10.2695 14.8956 9.46289 14.8956 8.34863V8.33496C14.8956 7.20703 14.0411 6.3252 12.9473 6.3252C11.8604 6.3252 10.9923 7.19336 10.9923 8.29395V8.30762C10.9923 9.44922 11.8057 10.2695 12.9268 10.2695ZM19.6947 8.6084C19.0726 8.6084 18.6078 8.12988 18.6078 7.52832C18.6078 6.91992 19.0726 6.44824 19.6947 6.44824C20.3236 6.44824 20.7816 6.91992 20.7816 7.52832C20.7816 8.12988 20.3236 8.6084 19.6947 8.6084ZM19.6947 13.6807C19.0726 13.6807 18.6078 13.209 18.6078 12.6006C18.6078 11.9922 19.0726 11.5205 19.6947 11.5205C20.3236 11.5205 20.7816 11.9922 20.7816 12.6006C20.7816 13.209 20.3236 13.6807 19.6947 13.6807ZM27.3034 15V13.1064H22.4772V11.6641C23.7555 9.44238 25.1569 7.17285 26.4967 5.13574H28.9918V11.6504H30.318V13.1064H28.9918V15H27.3034ZM24.1178 11.6914H27.3307V6.54395H27.2282C26.2164 8.08887 25.0748 9.91406 24.1178 11.5889V11.6914ZM34.1259 15V6.87207H34.0097L31.5556 8.6084V6.94727L34.1327 5.13574H35.8896V15H34.1259Z"
        fill="currentColor"
      />
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ComponentProps } from 'react';
export const TimeIcon = (props: ComponentProps<'svg'>) => {
return (
<svg width="46" height="20" viewBox="0 0 46 20" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/icons/iphone/index.ts
Tamaño: 96 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './IOSIndicatorsIcon';
export * from './IOSKeyboard';
export * from './TimeIcon';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/phone-simulator/MobileSimulator.styles.tsx
Tamaño: 2553 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { colors, shadows } from '@novu/design-system';
import { TimeIcon } from '../icons';

const BORDER_RADIUS_PX = 40;
const LIGHT_THEME_BACKGROUND = 'rgba(255, 255, 255, 0.4)';
const DARK_THEME_BACKGROUND = 'rgba(0, 0, 0, 0.6)';

export const MobileSimulatorBody = styled.div<{ withBackground: boolean; isIOS: boolean }>`
  position: relative;
  display: flex;
  flex-direction: column;
  margin: 0 3.5rem;
  width: 27.5rem;
  height: 55rem;
  min-height: 55rem;
  border-radius: ${BORDER_RADIUS_PX}px;
  border: 1.5rem solid ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B15 : colors.BGLight)};
  box-shadow: ${shadows.dark};
  background: ${({ theme }) => (theme.colorScheme === 'dark' ? '#4b4b51' : colors.white)};

  ${({ withBackground, isIOS, theme }) => {
    if (withBackground) {
      return `
      background-position: center;
      background-repeat: no-repeat;
      background: linear-gradient(0deg, ${
        theme.colorScheme === 'dark' ? DARK_THEME_BACKGROUND : LIGHT_THEME_BACKGROUND
      } 0%, ${theme.colorScheme === 'dark' ? DARK_THEME_BACKGROUND : LIGHT_THEME_BACKGROUND} 100%),
        url(/static/images/mobilePreview/${isIOS ? 'iphone' : 'android'}.webp) no-repeat center
          center / cover,
        lightgray;
    `;
    }
  }}
`;

export const Notch = styled.div`
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 10rem;
  height: 1.25rem;
  background: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B15 : colors.BGLight)};
  border-radius: 0 0 20px 20px;
`;

export const Camera = styled.div`
  position: absolute;
  top: 1.125rem;
  left: 1.125rem;
  width: 1.75rem;
  height: 1.75rem;
  background: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B15 : '#cccccc')};
  border-radius: 50%;
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 0.25rem;
    height: 0.25rem;
    background: ${colors.white};
    opacity: 0.5;
    border-radius: 50%;
  }
`;

export const IndicatorsContainer = styled.div`
  margin: 1.25rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B15 : '#cccccc')};
`;

export const SwitchContainer = styled.div`
  display: flex;
  justify-content: center;
  z-index: 2;
`;

export const TimeIconStyled = styled(({ isVisible }: { isVisible: boolean }) => (
  <TimeIcon style={{ opacity: isVisible ? 1 : 0 }} />
))``;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { colors, shadows } from '@novu/design-system';
import { TimeIcon } from '../icons';
const BORDER_RADIUS_PX = 40;
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/phone-simulator/MobileSimulator.tsx
Tamaño: 1455 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum } from '@novu/shared';
import { When } from '@novu/design-system';

import { PhonePlatformSwitch } from './PhonePlatformSwitch';
import {
  IndicatorsContainer,
  MobileSimulatorBody,
  Notch,
  SwitchContainer,
  TimeIconStyled,
  Camera,
} from './MobileSimulator.styles';
import { AndroidIndicatorsIcon, IOSIndicatorsIcon, IOSKeyboard, AndroidKeyboard } from '../icons';

export const MobileSimulator = ({
  children,
  withBackground,
}: {
  withBackground: boolean;
  children: React.ReactNode;
}) => {
  const [isIOS, setIsIOS] = useState(true);
  const { colorScheme } = useMantineColorScheme();

  return (
    <MobileSimulatorBody isIOS={isIOS} withBackground={withBackground}>
      {isIOS ? <Notch /> : <Camera />}
      <IndicatorsContainer>
        <TimeIconStyled isVisible={isIOS} />
        {isIOS ? <IOSIndicatorsIcon /> : <AndroidIndicatorsIcon />}
      </IndicatorsContainer>
      <SwitchContainer>
        <PhonePlatformSwitch isIOS={isIOS} onChange={() => setIsIOS((old) => !old)} />
      </SwitchContainer>
      {children}
      <When truthy={!withBackground}>
        {isIOS ? (
          <IOSKeyboard isDarkMode={colorScheme === 'dark'} />
        ) : (
          <AndroidKeyboard isDarkMode={colorScheme === 'dark'} />
        )}
      </When>
    </MobileSimulatorBody>
  );
};

export default MobileSimulator;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum } from '@novu/shared';
import { When } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/phone-simulator/PhonePlatformSwitch.styles.tsx
Tamaño: 2128 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { CSSProperties } from 'react';
import styled from '@emotion/styled';
import { colors, shadows, AppleIcon, AndroidIcon } from '@novu/design-system';

const SWITCH_CONTAINER_PADDING = 0.3125;
const THUMB_WIDTH = 3;
const THUMB_HEIGHT = 1.75;

export const AppleIconStyled = styled(({ size }: { size: CSSProperties['width'] }) => (
  <AppleIcon style={{ minWidth: size, width: size, height: size }} />
))``;

export const AndroidIconStyled = styled(({ size }: { size: CSSProperties['width'] }) => (
  <AndroidIcon style={{ minWidth: size, width: size, height: size }} />
))``;

export const SwitchContainer = styled.div`
  position: relative;
  width: 7.5rem;
  height: 2.5rem;
  padding: ${SWITCH_CONTAINER_PADDING}rem;
  border-radius: 1.875rem;
  border: 1px solid ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B40 : colors.B70)};
  background: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B15 : colors.white)};
`;

export const SwitchInput = styled.input`
  height: 0;
  opacity: 0;
  padding: 0;
  margin: 0;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 0;
`;

export const ButtonsContainer = styled.label`
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: space-between;
  gap: 0.3125rem;
  cursor: pointer;
`;

export const Thumb = styled.div<{ isIOS?: boolean }>`
  position: absolute;
  left: ${({ isIOS }) =>
    isIOS ? `${SWITCH_CONTAINER_PADDING}rem` : `calc(100% - ${THUMB_WIDTH}rem - ${SWITCH_CONTAINER_PADDING}rem)`};
  z-index: 0;
  width: ${THUMB_WIDTH}rem;
  height: ${THUMB_HEIGHT}rem;
  border-radius: 1.875rem;
  background: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B40 : colors.BGLight)};
  box-shadow: ${shadows.dark};
  transition: left 0.3s ease;
`;

export const IconHolder = styled.span<{ isSelected: boolean }>`
  z-index: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  width: ${THUMB_WIDTH}rem;
  height: ${THUMB_HEIGHT}rem;
  transition: color 0.3s ease;
  color: ${({ theme, isSelected }) =>
    theme.colorScheme === 'dark' ? colors.white : isSelected ? colors.B20 : colors.B60};
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { CSSProperties } from 'react';
import styled from '@emotion/styled';
import { colors, shadows, AppleIcon, AndroidIcon } from '@novu/design-system';
const SWITCH_CONTAINER_PADDING = 0.3125;
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/phone-simulator/PhonePlatformSwitch.tsx
Tamaño: 1058 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ComponentProps, forwardRef } from 'react';
import {
  AndroidIconStyled,
  AppleIconStyled,
  ButtonsContainer,
  IconHolder,
  SwitchContainer,
  SwitchInput,
  Thumb,
} from './PhonePlatformSwitch.styles';

export interface IPhonePlatformSwitchProps extends Pick<ComponentProps<'input'>, 'onChange' | 'className' | 'style'> {
  isIOS?: boolean;
}

export const PhonePlatformSwitch: React.FC<IPhonePlatformSwitchProps> = forwardRef<
  HTMLInputElement,
  IPhonePlatformSwitchProps
>(({ isIOS, onChange, className }, ref) => {
  return (
    <SwitchContainer className={className}>
      <SwitchInput id="phonePlatformSwitch" ref={ref} type="checkbox" checked={isIOS} onChange={onChange} />
      <ButtonsContainer htmlFor="phonePlatformSwitch">
        <Thumb isIOS={isIOS} />
        <IconHolder isSelected={!!isIOS}>
          <AppleIconStyled size="1rem" />
        </IconHolder>
        <IconHolder isSelected={!isIOS}>
          <AndroidIconStyled size="1rem" />
        </IconHolder>
      </ButtonsContainer>
    </SwitchContainer>
  );
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ComponentProps, forwardRef } from 'react';
import {
AndroidIconStyled,
AppleIconStyled,
ButtonsContainer,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/common/phone-simulator/index.ts
Tamaño: 35 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './MobileSimulator';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/email/EmailPreview.tsx
Tamaño: 6768 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { JsonInput } from '@mantine/core';
import { useEffect, useMemo, useState } from 'react';
import { useFormContext } from 'react-hook-form';
import styled from '@emotion/styled';
import { Button, colors, inputStyles } from '@novu/design-system';

import { useMutation } from '@tanstack/react-query';
import { useActiveIntegrations, useProcessVariables } from '../../../../hooks';
import type { IForm } from '../../../../pages/templates/components/formTypes';
import { useStepFormErrors } from '../../../../pages/templates/hooks/useStepFormErrors';
import { useStepFormPath } from '../../../../pages/templates/hooks/useStepFormPath';
import { When } from '../../../utils/When';
import { PreviewMobile } from './PreviewMobile';
import { PreviewWeb } from './PreviewWeb';
import { api } from '../../../../api';
import { useTemplateLocales } from '../../../../pages/templates/hooks/useTemplateLocales';
import { usePreviewEmailTemplate } from '../../../../pages/templates/hooks/usePreviewEmailTemplate';
import { useEnvironment } from '../../../../hooks/useEnvironment';
import { useTemplateEditorForm } from '../../../../pages/templates/components/TemplateEditorFormProvider';
import { ControlVariablesForm } from '../../../../pages/templates/components/ControlVariablesForm';
import { ErrorPrettyRender } from '../ErrorPrettyRender';

const PreviewContainer = styled.div`
  display: flex;
  flex-wrap: nowrap;
  height: 100%;
  margin: 0;
  margin-bottom: 1.5rem;
  gap: 1.5rem;
`;

const JSONContainer = styled.div`
  min-width: 28rem;
  height: 100%;
  background: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B17 : colors.B98)};
  border-radius: 7;
`;

export const EmailPreview = ({ showVariables = true, view }: { view: string; showVariables?: boolean }) => {
  const { watch, formState } = useFormContext<IForm>();
  const path = useStepFormPath();
  const error = useStepFormErrors();
  const { template } = useTemplateEditorForm();
  const { bridge } = useEnvironment({ bridge: template?.bridge });

  const stepId = watch(`${path}.uuid`);

  const contentType = watch(`${path}.template.contentType`);
  const htmlContent = watch(`${path}.template.htmlContent`);
  const editorContent = watch(`${path}.template.content`);
  const variables = watch(`${path}.template.variables`);
  const processedVariables = useProcessVariables(variables);
  const content = contentType === 'editor' ? editorContent : htmlContent;
  const [payloadValue, setPayloadValue] = useState(processedVariables ?? '{}');
  const [bridgeContent, setBridgeContent] = useState('');
  const [bridgeSubject, setBridgeSubject] = useState('');

  const { selectedLocale, locales, areLocalesLoading, onLocaleChange } = useTemplateLocales({
    content,
  });

  const { mutateAsync: saveControls, isLoading: isSavingControls } = useMutation((data) =>
    api.put(`/v1/bridge/controls/${formState?.defaultValues?.identifier}/${stepId}`, { variables: data })
  );

  const {
    mutateAsync,
    isLoading: isBridgeLoading,
    error: previewError,
  } = useMutation((data) => api.post(`/v1/bridge/preview/${formState?.defaultValues?.identifier}/${stepId}`, data), {
    onSuccess(data) {
      setBridgeContent(data.outputs.body);
      setBridgeSubject(data.outputs.subject);
    },
  });

  const { getEmailPreview, previewContent, subject, isPreviewContentLoading } = usePreviewEmailTemplate({
    locale: selectedLocale,
    payload: processedVariables,
  });
  const { integrations = [] } = useActiveIntegrations();
  const integration = useMemo(() => {
    return integrations.find((item) => item.channel === 'email' && item.primary) || null;
  }, [integrations]);

  useEffect(() => {
    if (bridge && !showVariables) {
      mutateAsync(JSON.parse(processedVariables));
    }
  }, [processedVariables, bridge]);

  useEffect(() => {
    setPayloadValue(processedVariables);
  }, [setPayloadValue, processedVariables]);

  const isLoading = isPreviewContentLoading || areLocalesLoading || isBridgeLoading;

  return (
    <>
      {showVariables ? (
        <PreviewContainer>
          <When truthy={previewError}>
            <ErrorPrettyRender error={previewError} />
          </When>
          <When truthy={view === 'web' && !previewError}>
            <PreviewWeb
              loading={isLoading}
              subject={bridgeSubject || subject}
              content={bridgeContent || previewContent}
              integration={integration}
              error={error}
              showEditOverlay={false}
              onLocaleChange={onLocaleChange}
              locales={locales || []}
              selectedLocale={selectedLocale}
              bridge={bridge}
            />
          </When>
          <When truthy={view === 'mobile' && !previewError}>
            <PreviewMobile
              loading={isLoading}
              subject={bridgeSubject || subject}
              content={bridgeContent || previewContent}
              integration={integration}
              error={error}
              onLocaleChange={onLocaleChange}
              locales={locales || []}
              selectedLocale={selectedLocale}
              bridge={bridge}
            />
          </When>
          <When truthy={!bridge}>
            <JSONContainer>
              <JsonInput
                data-test-id="preview-json-param"
                formatOnBlur
                autosize
                styles={inputStyles}
                label="Payload:"
                value={payloadValue}
                onChange={setPayloadValue}
                minRows={6}
                mb={20}
                validationError="Invalid JSON"
              />
              <Button
                fullWidth
                onClick={() => {
                  getEmailPreview(payloadValue);
                }}
                variant="outline"
                data-test-id="apply-variables"
              >
                Apply Variables
              </Button>
            </JSONContainer>
          </When>
          <When truthy={bridge}>
            <div style={{ minWidth: 300, maxWidth: 300, marginLeft: 'auto' }}>
              <ControlVariablesForm
                onChange={(values) => {
                  mutateAsync(values);
                }}
              />
            </div>
          </When>
        </PreviewContainer>
      ) : (
        <PreviewWeb
          loading={isLoading}
          subject={bridgeSubject || subject}
          content={bridgeContent || previewContent}
          integration={integration}
          error={error}
          showEditOverlay={!showVariables}
          onLocaleChange={onLocaleChange}
          locales={locales || []}
          selectedLocale={selectedLocale}
          bridge={bridge}
        />
      )}
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { JsonInput } from '@mantine/core';
import { useEffect, useMemo, useState } from 'react';
import { useFormContext } from 'react-hook-form';
import styled from '@emotion/styled';
import { Button, colors, inputStyles } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/email/PreviewMobile.tsx
Tamaño: 5619 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { createStyles, Group, Skeleton, Stack } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
import { useState } from 'react';
import { ErrorBoundary } from 'react-error-boundary';
import Frame from 'react-frame-component';
import { FieldError, FieldErrorsImpl, Merge } from 'react-hook-form';
import { IFormStep } from '../../../../pages/templates/components/formTypes';
import { EmailIntegrationInfo } from '../../../../pages/templates/editor/EmailIntegrationInfo';
import { When } from '../../../utils/When';
import { LocaleSelect } from '../common/LocaleSelect';
import { EmailMobile } from '../common/EmailMobile';
import { PreviewEditOverlay } from '../common/PreviewEditOverlay';
import { PreviewUserIcon } from '../common/PreviewUserIcon';
import { ContentSkeleton, HeaderSkeleton } from './Skeleton';

const useStyles = createStyles((theme, { error }: { error: boolean }) => ({
  header: {
    width: '100%',
    marginTop: '20px',
    paddingLeft: '15px',
    paddingRight: '15px',
  },
  subject: {
    marginBottom: '3px',
    fontWeight: 'bolder',
  },
  from: {
    color: theme.colorScheme === 'dark' ? colors.B60 : colors.B70,
    fontWeight: 'normal',
  },
  line: {
    height: '2px',
    width: '340px',
    marginLeft: '15px',
    marginRight: '15px',
    background: theme.colorScheme === 'dark' ? colors.B20 : colors.B85,
    marginTop: '19px',
  },
  frame: {
    border: '0px',
    width: '100%',
    height: '609px',
    borderRadius: '0 0 30px 30px',
  },
  fallbackFrame: {
    border: '0px',
    width: '100%',
    height: '609px',
    borderRadius: '0 0 30px 30px',
    padding: '15px',
    textAlign: 'center',
  },
  content: {
    position: 'relative',
    border: error ? `1px solid ${colors.error}` : 'none',
  },
}));

export const PreviewMobile = ({
  integration,
  subject,
  content,
  loading = false,
  error,
  showEditOverlay = false,
  onLocaleChange,
  selectedLocale,
  locales,
  bridge = false,
}: {
  integration: any;
  subject?: string;
  content: string;
  loading?: boolean;
  error?: Merge<FieldError, FieldErrorsImpl<IFormStep>>;
  showEditOverlay?: boolean;
  onLocaleChange: (locale: string) => void;
  selectedLocale?: string;
  locales: any[];
  bridge?: boolean;
}) => {
  const { classes } = useStyles({ error: !!(error && error.template?.content && error.template?.content?.message) });

  const [isEditOverlayVisible, setIsEditOverlayVisible] = useState(false);

  const handleMouseEnter = () => {
    if (showEditOverlay) {
      setIsEditOverlayVisible(true);
    }
  };

  const handleMouseLeave = () => {
    if (showEditOverlay && isEditOverlayVisible) {
      setIsEditOverlayVisible(false);
    }
  };

  return (
    <>
      <EmailMobile>
        <div className={classes.header}>
          <Group
            sx={{
              height: '40px',
            }}
            spacing={0}
            position="apart"
          >
            <div>
              <Group
                sx={{
                  height: '40px',
                }}
                spacing={13}
                noWrap
              >
                <When truthy={loading}>
                  <HeaderSkeleton />
                </When>

                <When truthy={!loading}>
                  <PreviewUserIcon />
                  <div>
                    {!bridge && error && error.template?.subject && error.template?.subject?.message ? (
                      <Text color={colors.error}>{error.template.subject.message}</Text>
                    ) : (
                      <>
                        <div data-test-id="preview-subject" className={classes.subject}>
                          {subject}
                        </div>
                        <Group spacing={13} position="apart">
                          <div data-test-id="preview-from" className={classes.from}>
                            <EmailIntegrationInfo integration={integration} field={'from'} />
                          </div>
                        </Group>
                      </>
                    )}
                  </div>
                  <div style={{ marginLeft: 'auto' }}>
                    <LocaleSelect
                      isLoading={loading}
                      locales={locales}
                      value={selectedLocale}
                      onLocaleChange={onLocaleChange}
                    />
                  </div>
                </When>
              </Group>
            </div>
          </Group>
        </div>
        <div className={classes.line}></div>
        <div className={classes.content} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>
          <When truthy={loading}>
            <ContentSkeleton />
          </When>
          <When truthy={!loading}>
            {isEditOverlayVisible && <PreviewEditOverlay />}
            <ErrorBoundary
              FallbackComponent={() => (
                <div data-test-id="preview-content" className={classes.fallbackFrame}>
                  Oops! We've recognized some glitch in this HTML. Please give it another look!
                </div>
              )}
              resetKeys={[content]}
            >
              <Frame data-test-id="preview-content" className={classes.frame} initialContent={content}>
                <></>
              </Frame>
            </ErrorBoundary>
            {error && error.template?.content && error.template?.content?.message && (
              <Text color={colors.error}>{error?.template?.content?.message}</Text>
            )}
          </When>
        </div>
      </EmailMobile>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { createStyles, Group, Skeleton, Stack } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
import { useState } from 'react';
import { ErrorBoundary } from 'react-error-boundary';
import Frame from 'react-frame-component';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/email/PreviewWeb.tsx
Tamaño: 7299 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { createStyles, Group } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
import { cx } from '@novu/novui/css';
import { useState } from 'react';
import { ErrorBoundary } from 'react-error-boundary';
import Frame from 'react-frame-component';
import { FieldError, FieldErrorsImpl, Merge } from 'react-hook-form';
import { IFormStep } from '../../../../pages/templates/components/formTypes';
import { EmailIntegrationInfo } from '../../../../pages/templates/editor/EmailIntegrationInfo';
import { When } from '../../../utils/When';
import { LocaleSelect } from '../common/LocaleSelect';
import { PreviewEditOverlay } from '../common/PreviewEditOverlay';
import { PreviewUserIcon } from '../common/PreviewUserIcon';
import { ContentSkeleton, HeaderSkeleton } from './Skeleton';

const useStyles = createStyles((theme, { error, isBlur }: { error: boolean; isBlur: boolean }) => ({
  browser: {
    backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.B98,
    borderRadius: '8px',
    height: '100%',
    minHeight: '50vh',
    width: '100%',
  },
  bar: {
    borderRadius: '8px 8px 0 0',
    backgroundColor: theme.colorScheme === 'dark' ? colors.B20 : colors.B85,
    width: '100%',
    height: '28px',
    display: 'flex',
    alignItems: 'center',
    padding: '12px',
  },
  barAction: {
    height: '8px',
    width: '8px',
    borderRadius: '50%',
    backgroundColor: theme.colorScheme === 'dark' ? colors.B17 : colors.B98,
  },
  header: {
    width: '100%',
  },
  subject: {
    marginBottom: '3px',
    fontWeight: 'bolder',
  },
  from: {
    color: theme.colorScheme === 'dark' ? colors.B60 : colors.B40,
    fontWeight: 'normal',
  },
  content: {
    borderRadius: '8px',
    backgroundColor: theme.colorScheme === 'dark' ? colors.B20 : colors.white,
    flex: 1,
    border: error ? `1px solid ${colors.error}` : 'none',
    position: 'relative',
    filter: isBlur ? 'blur(2px)' : 'none',
  },
  contentContainer: {
    padding: '24px',
    paddingBottom: '32px',
    height: 'calc(100% - 28px)',
    display: 'flex',
    flexDirection: 'column',
    gap: '16px',
  },
  frame: {
    border: '0px',
    width: '100%',
    height: '100%',
    borderRadius: '8px',
  },
  fallbackFrame: {
    border: '0px',
    width: '100%',
    height: '100%',
    padding: '15px',
    textAlign: 'center',
  },
  overlayContainer: {
    position: 'relative',
    flex: 1,
    display: 'flex',
    flexDirection: 'column',
  },
}));

export const PreviewWeb = ({
  integration,
  subject,
  content,
  loading = false,
  error,
  showEditOverlay = false,
  onLocaleChange,
  selectedLocale,
  locales,
  bridge = false,
  source = 'studio',
  classNames = {},
}: {
  integration?: any;
  subject?: string;
  content: string;
  loading?: boolean;
  error?: Merge<FieldError, FieldErrorsImpl<IFormStep>>;
  showEditOverlay?: boolean;
  onLocaleChange: (locale: string) => void;
  selectedLocale?: string;
  locales: any[];
  classNames?: {
    browser?: string;
    frame?: string;
    content?: string;
    contentContainer?: string;
    skeleton?: string;
  };
  bridge?: boolean;
  source?: 'studio' | 'playground' | 'dashboard';
}) => {
  const [isEditOverlayVisible, setIsEditOverlayVisible] = useState(false);

  const { classes } = useStyles({
    error: !!(error && error.template?.content && error.template?.content?.message),
    isBlur: isEditOverlayVisible,
  });

  const handleMouseEnter = () => {
    if (showEditOverlay) {
      setIsEditOverlayVisible(true);
    }
  };

  const handleMouseLeave = () => {
    if (showEditOverlay && isEditOverlayVisible) {
      setIsEditOverlayVisible(false);
    }
  };

  return (
    <>
      <div className={cx(classes.browser, classNames.browser)}>
        <div className={classes.bar}>
          <Group spacing={6}>
            <div className={classes.barAction}></div>
            <div className={classes.barAction}></div>
            <div className={classes.barAction}></div>
          </Group>
        </div>
        <div className={cx(classes.contentContainer, classNames.contentContainer)}>
          <div className={classes.header}>
            <Group
              sx={{
                height: '40px',
              }}
              spacing={16}
              noWrap
            >
              <When truthy={loading}>
                <HeaderSkeleton />
              </When>
              <When truthy={!loading}>
                <PreviewUserIcon />
                <div>
                  {!bridge && error && error.template?.subject && error.template?.subject?.message ? (
                    <Text color={colors.error}>{error.template.subject.message}</Text>
                  ) : (
                    <>
                      <div data-test-id="preview-subject" className={classes.subject}>
                        {subject}
                      </div>
                      <When truthy={source !== 'playground'}>
                        <div data-test-id="preview-from" className={classes.from}>
                          <EmailIntegrationInfo integration={integration} field={'from'} />
                        </div>
                      </When>
                    </>
                  )}
                </div>
                <div style={{ marginLeft: 'auto' }}>
                  <LocaleSelect
                    isLoading={loading}
                    locales={locales}
                    value={selectedLocale}
                    onLocaleChange={onLocaleChange}
                  />
                </div>
              </When>
            </Group>
          </div>
          <div className={classes.overlayContainer} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>
            <When truthy={isEditOverlayVisible && !loading}>
              <PreviewEditOverlay />
            </When>
            <div className={cx(classes.content, classNames.content)}>
              <When truthy={loading}>
                <ContentSkeleton className={classNames.skeleton} />
              </When>
              <When truthy={!loading}>
                <ErrorBoundary
                  FallbackComponent={() => (
                    <div className={classes.fallbackFrame} data-test-id="preview-content">
                      <Text color={colors.error}>
                        Oops! We've recognized some glitch in this HTML. Please give it another look!
                      </Text>
                    </div>
                  )}
                  resetKeys={[content]}
                >
                  <iframe
                    srcDoc={content}
                    className={cx(classes.frame, classNames.frame)}
                    data-test-id="preview-content"
                  />
                  {/*
              Issue with rendering email without html
              <Frame className={classes.frame} data-test-id="preview-content" initialContent={content}>
                    <></>
                  </Frame> */}
                </ErrorBoundary>

                {error && error.template?.content && error.template?.content?.message && (
                  <Text color={colors.error}>{error?.template?.content?.message}</Text>
                )}
              </When>
            </div>
          </div>
        </div>
      </div>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { createStyles, Group } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
import { cx } from '@novu/novui/css';
import { useState } from 'react';
import { ErrorBoundary } from 'react-error-boundary';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/email/index.ts
Tamaño: 32 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './EmailPreview';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/email/PreviewMobileInbox/DateArrow.tsx
Tamaño: 627 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { colors } from '@novu/design-system';

export const DateArrow = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="7" height="12" viewBox="0 0 7 12" fill="none">
      <path
        d="M6.21875 5.36719L2.09375 1.05469C1.74219 0.679688 1.15625 0.65625 0.78125 1.03125C0.40625 1.38281 0.382812 1.96875 0.757812 2.34375L4.25 6L0.757812 9.67969C0.382812 10.0547 0.40625 10.6406 0.78125 10.9922C0.96875 11.1797 1.20312 11.25 1.41406 11.25C1.67188 11.25 1.92969 11.1562 2.09375 10.9688L6.21875 6.65625C6.57031 6.30469 6.57031 5.71875 6.21875 5.36719Z"
        fill={colors.B60}
      />
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { colors } from '@novu/design-system';
export const DateArrow = () => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="7" height="12" viewBox="0 0 7 12" fill="none">
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/email/PreviewMobileInbox/InboxItem.tsx
Tamaño: 920 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Skeleton, useMantineTheme } from '@mantine/core';
import { colors } from '@novu/design-system';

export const ItemSkeleton = () => {
  const theme = useMantineTheme();

  return (
    <div
      style={{
        marginLeft: '15px',
        marginRight: '15px',
        borderTop: `2px solid ${theme.colorScheme === 'dark' ? colors.B20 : colors.B85}`,
        paddingTop: '23px',
        marginTop: '25px',
      }}
    >
      <Skeleton
        height={10}
        width="25%"
        animate={false}
        styles={() => ({
          root: {
            '&:after': {
              background: `${theme.colorScheme === 'dark' ? colors.B30 : colors.B85} !important`,
            },
          },
        })}
        radius="xl"
      />
      <Skeleton height={7} mt={10} width="80%" animate={false} radius="xl" />
      <Skeleton height={7} mt={10} width="70%" animate={false} radius="xl" />
    </div>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Skeleton, useMantineTheme } from '@mantine/core';
import { colors } from '@novu/design-system';
export const ItemSkeleton = () => {
const theme = useMantineTheme();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/email/PreviewMobileInbox/index.tsx
Tamaño: 2082 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { createStyles, Group } from '@mantine/core';
import { format } from 'date-fns';
import { colors } from '@novu/design-system';
import { EmailIntegrationInfo } from '../../../../../pages/templates/editor/EmailIntegrationInfo';
import { EmailMobile } from '../../common/EmailMobile';
import { DateArrow } from './DateArrow';
import { ItemSkeleton } from './InboxItem';

const useStyles = createStyles((theme) => ({
  bottom: {
    height: '70px',
  },
  header: {
    fontSize: '22px',
    fontWeight: 'bold',
    color: colors.white,
    marginLeft: '15px',
    marginTop: '20px',
    marginBottom: '28px',
  },
  InboxItem: {
    marginBottom: '5px',
    fontSize: '14px',
    fontWeight: 'bolder',
  },
  preheader: {
    fontSize: '12px',
    color: theme.colorScheme === 'dark' ? colors.B60 : colors.B70,
  },
  subject: {
    marginBottom: '5px',
    fontSize: '12px',
    fontWeight: 'bolder',
  },
  content: {
    marginLeft: '15px',
    marginRight: '15px',
  },
  date: {
    marginRight: '7px',
    color: theme.colorScheme === 'dark' ? colors.B60 : colors.B70,
  },
}));

export const PreviewMobileInbox = ({
  integration,
  subject,
  preheader,
}: {
  integration: any;
  subject: string;
  preheader: string;
}) => {
  const { classes } = useStyles();

  return (
    <>
      <EmailMobile>
        <div className={classes.header}>Inbox</div>
        <div className={classes.content}>
          <div className={classes.InboxItem}>
            <Group position="apart">
              <div>
                <EmailIntegrationInfo integration={integration} field={'senderName'} />
              </div>
              <div>
                <span className={classes.date}>{format(new Date(), 'MMM dd')}</span>
                <DateArrow />
              </div>
            </Group>
          </div>
          <div className={classes.subject}>{subject}</div>
          <div className={classes.preheader}>{preheader}</div>
        </div>
        <ItemSkeleton />
        <ItemSkeleton />
      </EmailMobile>
      <div className={classes.bottom}></div>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { createStyles, Group } from '@mantine/core';
import { format } from 'date-fns';
import { colors } from '@novu/design-system';
import { EmailIntegrationInfo } from '../../../../../pages/templates/editor/EmailIntegrationInfo';
import { EmailMobile } from '../../common/EmailMobile';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/email/PreviewSegment/MobileIcon.tsx
Tamaño: 651 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
export function MobileIcon(props: React.ComponentPropsWithoutRef<'svg'>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none" {...props}>
      <path
        d="M9.99935 15.0003H10.006M5.83268 1.66699H14.166C15.0865 1.66699 15.8327 2.41318 15.8327 3.33366V16.667C15.8327 17.5875 15.0865 18.3337 14.166 18.3337H5.83268C4.91221 18.3337 4.16602 17.5875 4.16602 16.667V3.33366C4.16602 2.41318 4.91221 1.66699 5.83268 1.66699Z"
        stroke="currentColor"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function MobileIcon(props: React.ComponentPropsWithoutRef<'svg'>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none" {...props}>
<path
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/email/PreviewSegment/WebIcon.tsx
Tamaño: 854 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function WebIcon(props: React.ComponentPropsWithoutRef<'svg'>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="22" viewBox="0 0 18 22" fill="none" {...props}>
      <rect
        x="1"
        y="3.5"
        width="16"
        height="12"
        rx="2"
        stroke="currentColor"
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <rect
        x="8.5"
        y="15"
        width="1"
        height="4"
        rx="0.5"
        stroke="currentColor"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <rect
        x="5.5"
        y="19"
        width="7"
        height="1"
        rx="0.5"
        stroke="currentColor"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function WebIcon(props: React.ComponentPropsWithoutRef<'svg'>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="18" height="22" viewBox="0 0 18 22" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/email/Skeleton/ContentSkeleton.tsx
Tamaño: 968 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, Skeleton, Stack } from '@mantine/core';

export function ContentSkeleton({ className }: { className?: string }) {
  return (
    <Stack className={className} spacing={40} py={40} px={30} h="100%">
      <Group position="center" noWrap>
        <Skeleton height={40} width={80} radius="sm" />
      </Group>
      <Stack spacing={12}>
        <Group spacing={16} noWrap>
          <Skeleton height={14} width={'70%'} radius="sm" />
          <Skeleton height={14} width={'30%'} radius="sm" />
        </Group>
        <Group spacing={16} noWrap>
          <Skeleton height={14} width={'30%'} radius="sm" />
          <Skeleton height={14} width={'70%'} radius="sm" />
        </Group>
        <Group spacing={16} noWrap>
          <Skeleton height={14} width={'72%'} radius="sm" />
        </Group>
      </Stack>

      <Group spacing={16} mt="auto" noWrap>
        <Skeleton height={14} width={'30%'} radius="sm" />
      </Group>
    </Stack>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, Skeleton, Stack } from '@mantine/core';
export function ContentSkeleton({ className }: { className?: string }) {
return (
<Stack className={className} spacing={40} py={40} px={30} h="100%">
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/email/Skeleton/HeaderSkeleton.tsx
Tamaño: 309 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Skeleton, Stack } from '@mantine/core';

export function HeaderSkeleton() {
  return (
    <>
      <Skeleton height={40} width={40} circle />
      <Stack spacing={3}>
        <Skeleton height={14} width={160} radius="xs" />
        <Skeleton height={14} width={80} />
      </Stack>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Skeleton, Stack } from '@mantine/core';
export function HeaderSkeleton() {
return (
<>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/email/Skeleton/index.ts
Tamaño: 69 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './HeaderSkeleton';
export * from './ContentSkeleton';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/in-app/Content.styles.ts
Tamaño: 2809 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Skeleton } from '@mantine/core';
import { colors, shadows } from '@novu/design-system';

export const ContentStyled = styled.div<{ isBlur: boolean; isExampleNotification?: boolean }>`
  display: flex;
  flex-direction: column;
  align-items: stretch;
  gap: 1.5rem;
  flex-shrink: 0;
  position: relative;
  overflow: hidden;
  padding: 1.5rem;
  ${({ isBlur }) => isBlur && 'filter: blur(2px)'};
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B20 : colors.white)};

  ${({ isExampleNotification }) => {
    if (isExampleNotification) {
      return `
      border-radius: 8px;
      opacity: 0.4;
      background: ${({ theme }) =>
        theme.colorScheme === 'dark'
          ? `linear-gradient(90deg, rgba(35, 35, 43, 0.40) 0%, rgba(36, 36, 45, 0.40) 48.44%, rgba(41, 41, 52, 0.40) 100%), ${colors.B20}`
          : colors.white};
      box-shadow: ${({ theme }) => (theme.colorScheme === 'dark' ? shadows.dark : shadows.medium)};
      `;
    }
  }}
`;

export const ContentAndOverlayWrapperStyled = styled.div<{ isError: boolean }>`
  overflow: hidden;
  border-radius: 0.5rem;
  ${({ isError }) => isError && `border: 1px solid ${colors.error};`}
  position: relative;
  box-shadow: ${({ theme }) => (theme.colorScheme === 'dark' ? shadows.dark : shadows.medium)};

  &:before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    width: 0.5rem;
    border-radius: 7px 0 0 7px;
    background: ${colors.vertical};
    z-index: 2;
  }
`;

export const NotificationTextStyled = styled.div<{ isExampleNotification: boolean }>`
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.BGDark)};
  font-size: 14px;
  font-style: normal;
  font-weight: 400;
  line-height: 20px;
  margin: 0;

  ${({ isExampleNotification }) => {
    if (isExampleNotification) {
      return `
      opacity: 0.4;
      color: ${colors.B60};
      font-weight: 700;
      `;
    }
  }}
`;

export const SubjectTextStyled = styled.p`
  font-size: 16px;
  font-style: normal;
  font-weight: 600;
  line-height: 20px;
  margin: 0;
`;

export const TimeTextStyled = styled(NotificationTextStyled)`
  color: ${colors.B40};
  ${({ isExampleNotification }) => {
    if (isExampleNotification) {
      return `
      opacity: 0.4;
      `;
    }
  }}
`;

const LIGHT_THEME_SKELETON_BG = colors.BGLight;
const DARK_THEME_SKELETON_BG = 'rgba(255, 255, 255, 0.04)';

export const SkeletonStyled = styled(Skeleton)`
  &::before {
    background: ${({ theme }) => (theme.colorScheme === 'dark' ? DARK_THEME_SKELETON_BG : LIGHT_THEME_SKELETON_BG)};
  }

  &::after {
    background: ${({ theme }) => (theme.colorScheme === 'dark' ? DARK_THEME_SKELETON_BG : LIGHT_THEME_SKELETON_BG)};
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - ContentStyled(styled.div<{ isBlur: boolean; isExampleNotification?: boolean }>`
  display: flex;
  flex-direction:...)
 - ContentAndOverlayWrapperStyled(styled.div<{ isError: boolean }>`
  overflow: hidden;
  border-radius: 0.5rem;
  ${({ isError }))
 - NotificationTextStyled(styled.div<{ isExampleNotification: boolean }>`
  color: ${({ theme }))
 - TimeTextStyled(styled(NotificationTextStyled)`
  color: ${colors.B40};
  ${({ isExampleNotification }))
 - SkeletonStyled(styled(Skeleton)`
  &::before {
    background: ${({ theme }))
Declaraciones 'export' encontradas:
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/in-app/Content.tsx
Tamaño: 3966 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, Stack } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
import { ActorTypeEnum, MessageActionStatusEnum } from '@novu/shared';

import { useHover } from '../../../../hooks';
import { ActionBlockContainer } from '../../../../pages/templates/components/in-app-editor/preview/ActionBlockContainer';
import AvatarContainer, {
  RenderAvatar,
} from '../../../../pages/templates/components/in-app-editor/preview/AvatarContainer';
import { ParsedPreviewStateType } from '../../../../pages/templates/hooks/usePreviewInAppTemplate';
import { PreviewEditOverlay } from '../common';
import {
  ContentAndOverlayWrapperStyled,
  ContentStyled,
  NotificationTextStyled,
  SkeletonStyled,
  SubjectTextStyled,
  TimeTextStyled,
} from './Content.styles';

export default function Content({
  isPreviewLoading,
  parsedPreviewState,
  templateError,
  showOverlay = true,
  enableAvatar,
}: {
  isPreviewLoading: boolean;
  parsedPreviewState: ParsedPreviewStateType;
  templateError: string;
  showOverlay?: boolean;
  enableAvatar?: boolean;
}) {
  const { isHovered, onMouseEnter, onMouseLeave } = useHover();

  const isBlur = isHovered && showOverlay;

  return (
    <Stack spacing={16}>
      <div>
        <ContentAndOverlayWrapperStyled
          isError={!!templateError}
          onMouseEnter={onMouseEnter}
          onMouseLeave={onMouseLeave}
        >
          {isBlur && <PreviewEditOverlay />}
          <ContentStyled isBlur={isBlur}>
            {isPreviewLoading ? (
              <Skeletons />
            ) : (
              <div>
                <Group spacing={10} align="flex-start">
                  {enableAvatar && <AvatarContainer opened={false} setOpened={() => {}} readonly={true} />}
                  {parsedPreviewState.avatar && (
                    <RenderAvatar actor={{ type: ActorTypeEnum.SYSTEM_CUSTOM, data: parsedPreviewState.avatar }} />
                  )}
                  <Stack spacing={24}>
                    {parsedPreviewState.subject && <SubjectTextStyled>{parsedPreviewState.subject}</SubjectTextStyled>}
                    <NotificationTextStyled
                      isExampleNotification={false}
                      dangerouslySetInnerHTML={{
                        __html: parsedPreviewState.content as string,
                      }}
                      data-test-id="in-app-content-preview"
                    />
                    <TimeTextStyled isExampleNotification={false}>5 minutes ago</TimeTextStyled>
                  </Stack>
                </Group>
                {parsedPreviewState.ctaButtons.length > 0 && (
                  <ActionBlockContainer
                    value={{
                      status: MessageActionStatusEnum.PENDING,
                      buttons: parsedPreviewState.ctaButtons,
                      result: {},
                    }}
                    onChange={() => {}}
                    onButtonAddClickHandle={() => {}}
                    onRemoveTemplate={() => {}}
                    isButtonsTemplateSelected={true}
                    readonly={true}
                  />
                )}
              </div>
            )}
          </ContentStyled>
        </ContentAndOverlayWrapperStyled>
        {templateError && !isPreviewLoading && <Text color={colors.error}>{templateError}</Text>}
      </div>

      <ContentStyled isBlur={false} isExampleNotification>
        <NotificationTextStyled isExampleNotification>Notification Example</NotificationTextStyled>
        <TimeTextStyled isExampleNotification>10 minutes ago</TimeTextStyled>
      </ContentStyled>
    </Stack>
  );
}

const Skeletons = () => {
  return (
    <Stack spacing={16} w="100%">
      <Stack spacing={5}>
        <SkeletonStyled height={14} width="35%" radius={4} />
        <SkeletonStyled height={14} width="70%" radius={4} />
      </Stack>
      <SkeletonStyled height={14} width="25%" radius={4} />
    </Stack>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, Stack } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
import { ActorTypeEnum, MessageActionStatusEnum } from '@novu/shared';
import { useHover } from '../../../../hooks';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/in-app/Header.tsx
Tamaño: 1088 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { colors } from '@novu/design-system';
import { InAppHeaderIcons, LocaleSelect } from '../common';

const LIGHT_THEME_BG = `linear-gradient(270deg, ${colors.B98} 0%, rgba(255, 255, 255, 0.00) 100%);`;
const DARK_THEME_BG = `linear-gradient(90deg, ${colors.B17} 0%, #24242d 48.44%, #292934 100%), #292933`;

export function Header({ selectedLocale, locales, areLocalesLoading, onLocaleChange }) {
  return (
    <ContainerStyled>
      <div
        style={{
          marginRight: 'auto',
        }}
      >
        <LocaleSelect
          isLoading={areLocalesLoading}
          locales={locales || []}
          onLocaleChange={onLocaleChange}
          value={selectedLocale}
        />
      </div>
      <InAppHeaderIcons />
    </ContainerStyled>
  );
}

const ContainerStyled = styled.div`
  display: flex;
  padding: 8px 12px;
  justify-content: flex-end;
  align-items: center;
  align-self: stretch;
  border-radius: 0px 8px 0px 0px;
  background: ${({ theme }) => (theme.colorScheme === 'dark' ? DARK_THEME_BG : LIGHT_THEME_BG)};
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { colors } from '@novu/design-system';
import { InAppHeaderIcons, LocaleSelect } from '../common';
const LIGHT_THEME_BG = `linear-gradient(270deg, ${colors.B98} 0%, rgba(255, 255, 255, 0.00) 100%);`;
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/in-app/InAppBasePreview.tsx
Tamaño: 1777 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { FeatureFlagsKeysEnum } from '@novu/shared';
import { useFeatureFlag } from '../../../../hooks/useFeatureFlag';
import { ParsedPreviewStateType } from '../../../../pages/templates/hooks/usePreviewInAppTemplate';
import ContentOld from './Content';
import { Header } from './Header';
import { InboxPreviewContent } from './v2/InboxPreviewContent';

const ContainerStyled = styled.div<{ removePadding: boolean }>`
  width: 27.5rem;
  display: flex;
  margin: 1rem auto;
  flex-direction: column;
  gap: 1rem;

  ${({ removePadding }) => removePadding && `padding: 0;`}
`;
export const InAppBasePreview = ({
  content,
  loading = false,
  error,
  showEditOverlay = false,
  onLocaleChange,
  selectedLocale,
  locales = [],
  enableAvatar = false,
}: {
  content: ParsedPreviewStateType;
  loading?: boolean;
  error?: string;
  showEditOverlay?: boolean;
  onLocaleChange: (locale: string) => void;
  selectedLocale?: string;
  locales: any[];
  enableAvatar?: boolean;
}) => {
  const isV2Enabled = useFeatureFlag(FeatureFlagsKeysEnum.IS_V2_ENABLED);

  return (
    <ContainerStyled removePadding={!showEditOverlay}>
      {isV2Enabled ? (
        <InboxPreviewContent isPreviewLoading={loading} parsedPreviewState={content} />
      ) : (
        <>
          <Header
            selectedLocale={selectedLocale}
            locales={locales}
            areLocalesLoading={loading}
            onLocaleChange={onLocaleChange}
          />
          <ContentOld
            isPreviewLoading={loading}
            parsedPreviewState={content}
            templateError={error || ''}
            showOverlay={showEditOverlay}
            enableAvatar={enableAvatar}
          />
        </>
      )}
    </ContainerStyled>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { FeatureFlagsKeysEnum } from '@novu/shared';
import { useFeatureFlag } from '../../../../hooks/useFeatureFlag';
import { ParsedPreviewStateType } from '../../../../pages/templates/hooks/usePreviewInAppTemplate';
import ContentOld from './Content';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/in-app/InAppPreview.tsx
Tamaño: 4923 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Grid, JsonInput, useMantineTheme } from '@mantine/core';
import { Button, colors, inputStyles, When } from '@novu/design-system';
import { useEffect, useState } from 'react';
import { useFormContext } from 'react-hook-form';
import { useMutation } from '@tanstack/react-query';
import { IMessageButton, inAppMessageFromBridgeOutputs } from '@novu/shared';
import { IForm } from '../../../../pages/templates/components/formTypes';
import { usePreviewInAppTemplate } from '../../../../pages/templates/hooks/usePreviewInAppTemplate';
import { useStepFormPath } from '../../../../pages/templates/hooks/useStepFormPath';
import { useTemplateLocales } from '../../../../pages/templates/hooks/useTemplateLocales';
import { useProcessVariables } from '../../../../hooks';
import { api } from '../../../../api';
import { useEnvironment } from '../../../../hooks/useEnvironment';
import { useTemplateEditorForm } from '../../../../pages/templates/components/TemplateEditorFormProvider';
import { ControlVariablesForm } from '../../../../pages/templates/components/ControlVariablesForm';
import { InAppBasePreview } from './InAppBasePreview';

export function InAppPreview({ showVariables = true }: { showVariables?: boolean }) {
  const theme = useMantineTheme();
  const [payloadValue, setPayloadValue] = useState('{}');
  const { watch, formState } = useFormContext<IForm>();
  const { template } = useTemplateEditorForm();
  const { bridge } = useEnvironment({ bridge: template?.bridge });
  const path = useStepFormPath();

  const content = watch(`${path}.template.content`);
  const variables = watch(`${path}.template.variables`);
  const enableAvatar = watch(`${path}.template.enableAvatar`);
  const processedVariables = useProcessVariables(variables);

  const stepId = watch(`${path}.uuid`);
  const [bridgeContent, setBridgeContent] = useState<{
    content: string;
    ctaButtons: Array<IMessageButton>;
    subject?: string;
    avatar?: string;
  }>({
    content: '',
    ctaButtons: [],
    subject: '',
    avatar: '',
  });

  const { mutateAsync, isLoading: isBridgeLoading } = useMutation(
    (data) => api.post(`/v1/bridge/preview/${formState?.defaultValues?.identifier}/${stepId}`, data),
    {
      onSuccess(data) {
        const inAppMessage = inAppMessageFromBridgeOutputs(data.outputs);
        setBridgeContent({
          subject: inAppMessage.subject,
          content: inAppMessage.content,
          avatar: inAppMessage.avatar,
          ctaButtons: inAppMessage.cta.action.buttons,
        });
      },
    }
  );

  useEffect(() => {
    if (bridge) {
      mutateAsync();
    }
  }, [bridge]);

  const { selectedLocale, locales, areLocalesLoading, onLocaleChange } = useTemplateLocales({
    content: content as string,
  });

  const { isPreviewLoading, parsedPreviewState, templateError, parseInAppContent } = usePreviewInAppTemplate({
    locale: selectedLocale,
  });

  useEffect(() => {
    setPayloadValue(processedVariables);
  }, [processedVariables, setPayloadValue]);

  return (
    <Grid gutter={24}>
      <Grid.Col span={showVariables ? 8 : 12}>
        <InAppBasePreview
          content={bridge ? bridgeContent : parsedPreviewState}
          onLocaleChange={onLocaleChange}
          locales={locales}
          error={bridge ? '' : templateError}
          enableAvatar={enableAvatar}
          selectedLocale={selectedLocale}
          showEditOverlay={!showVariables}
          loading={areLocalesLoading || isBridgeLoading || isPreviewLoading}
        />
      </Grid.Col>

      <When truthy={showVariables}>
        <Grid.Col span={4}>
          <div
            style={{
              width: '100%',
              height: '100%',
              background: theme.colorScheme === 'dark' ? colors.B17 : colors.B98,
              borderRadius: 7,
              padding: 15,
              paddingTop: 0,
            }}
          >
            <When truthy={!bridge}>
              <JsonInput
                data-test-id="preview-json-param"
                formatOnBlur
                autosize
                styles={inputStyles}
                label="Payload"
                value={payloadValue}
                onChange={setPayloadValue}
                minRows={6}
                mb={20}
                validationError="Invalid JSON"
              />
              <Button
                fullWidth
                onClick={() => {
                  parseInAppContent(payloadValue);
                }}
                variant="outline"
                data-test-id="apply-variables"
              >
                Apply Variables
              </Button>
            </When>
            <When truthy={bridge}>
              <ControlVariablesForm
                onChange={(values) => {
                  mutateAsync(values);
                }}
              />
            </When>
          </div>
        </Grid.Col>
      </When>
    </Grid>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Grid, JsonInput, useMantineTheme } from '@mantine/core';
import { Button, colors, inputStyles, When } from '@novu/design-system';
import { useEffect, useState } from 'react';
import { useFormContext } from 'react-hook-form';
import { useMutation } from '@tanstack/react-query';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/in-app/index.ts
Tamaño: 87 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './InAppPreview';
export { InAppBasePreview } from './InAppBasePreview';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/in-app/v2/InboxAvatar.tsx
Tamaño: 1010 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { css } from '@novu/novui/css';
import { IconPerson } from '@novu/novui/icons';
import { INBOX_TOKENS } from './InboxPreviewContent';

export const InboxAvatar = (props: { src?: string }) => {
  const [isError, setIsError] = useState(false);

  const handleError = () => {
    setIsError(true);
  };

  if (props.src && !isError) {
    return (
      <img
        src={props.src}
        className={css({
          borderRadius: 'm',
          backgroundSize: 'contain',
          backgroundRepeat: 'no-repeat',
          width: '2rem',
          height: '2rem',
        })}
        onError={handleError}
        alt="avatar"
      />
    );
  }

  return (
    <div
      className={css({
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        borderRadius: 'm',
        bgColor: INBOX_TOKENS['semantic/color/neutral/90'],
        width: '2rem',
        height: '2rem',
      })}
    >
      <IconPerson />
    </div>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { css } from '@novu/novui/css';
import { IconPerson } from '@novu/novui/icons';
import { INBOX_TOKENS } from './InboxPreviewContent';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/in-app/v2/InboxPreviewContent.tsx
Tamaño: 7627 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Text, Title } from '@novu/novui';
import { css, cva } from '@novu/novui/css';
import { IconArrowDropDown, IconMoreHoriz, IconSettings } from '@novu/novui/icons';
import { Center, Flex, HStack, Stack } from '@novu/novui/jsx';
import { parseMarkdownIntoTokens } from '@novu/js/internal';
import { ParsedPreviewStateType } from '../../../../../pages/templates/hooks/usePreviewInAppTemplate';
import { SkeletonStyled } from '../Content.styles';
import { InboxAvatar } from './InboxAvatar';

export const INBOX_TOKENS = {
  'semantic/color/neutral/60': '#828299',
  'semantic/color/neutral/80': '#3D3D4D',
  'semantic/color/neutral/90': '#292933',
  'semantic/margins/buttons/S/S': '1rem',
  'Inbox/whiteLabel/buttons/accent/normal': '#369EFF',
  'Inbox/whiteLabel/secondaryButton': '#2E2E32',
  'Inbox/whiteLabel/divider': '#2E2E32',
  'Inbox/paddings/header/vertical': '1.25rem',
  'Inbox/paddings/header/horizontal': '1.5rem',
  'Inbox/paddings/message/horizontal': '1.5rem',
  'Inbox/paddings/message/vertical': '1rem',
  'Inbox/margin/message/avatar/txt': '0.5rem',
  'Inbox/margin/message/txt/buttons': '1rem',
} as const;

const renderText = (text?: string) => {
  if (!text) {
    return null;
  }

  const tokens = parseMarkdownIntoTokens(text);

  return tokens.map((token, index) => {
    if (token.type === 'bold') {
      return (
        <Text
          variant="main"
          fontWeight="strong"
          color="typography.text.primary"
          children={token.content}
          as="strong"
          key={index}
        />
      );
    }

    return token.content;
  });
};

export function InboxPreviewContent({
  isPreviewLoading,
  parsedPreviewState,
}: {
  isPreviewLoading: boolean;
  parsedPreviewState: ParsedPreviewStateType;
}) {
  return (
    <Flex
      className={css({
        flexDirection: 'column',
        alignItems: 'flex-start',
        alignSelf: 'stretch',
        borderRadius: '150',
        bgColor: 'surface.popover',
        py: INBOX_TOKENS['Inbox/paddings/header/vertical'],
        px: INBOX_TOKENS['Inbox/paddings/header/horizontal'],
        h: '32.5rem',
      })}
    >
      {/* Header -  Inbox dropdown and settings icon section */}
      <Flex
        className={css({
          justifyContent: 'space-between',
          alignItems: 'center',
          alignSelf: 'stretch',
          paddingBottom: INBOX_TOKENS['Inbox/paddings/header/vertical'],
        })}
      >
        <HStack gap={8}>
          <Title variant="section">Inbox</Title>
          <IconArrowDropDown />
        </HStack>
        <HStack gap={8}>
          <IconMoreHoriz />
          <IconSettings />
        </HStack>
      </Flex>

      {/* Feed tabs section */}
      <HStack
        gap={28}
        className={css({
          borderColor: INBOX_TOKENS['Inbox/whiteLabel/divider'],
          borderBottom: 'solid',
          borderBottomWidth: '1',
          alignSelf: 'stretch',
          height: '2rem',
        })}
        alignItems="flex-start"
      >
        <Flex
          gap={8}
          className={css({
            position: 'relative',
            alignSelf: 'stretch',
            _before: {
              bgGradient: 'to-r',
              gradientFrom: 'colorPalette.start',
              gradientTo: 'colorPalette.end',
              content: '""',
              position: 'absolute',
              bottom: 0,
              w: '100%',
              h: '0.125rem',
              zIndex: 1,
            },
          })}
        >
          <Text variant="main" fontWeight="strong">
            Feed
          </Text>
          <div>
            <span
              className={css({
                display: 'flex',
                justifyContent: 'center',
                alignItems: 'center',
                padding: '0 0.375rem',
                borderRadius: 'circle',
                bgGradient: 'to-r',
                gradientFrom: 'colorPalette.start',
                gradientTo: 'colorPalette.end',
              })}
            >
              1
            </span>
          </div>
        </Flex>
        <Text variant="main" fontWeight="strong" color="typography.text.secondary">
          Feed
        </Text>
        <Text variant="main" fontWeight="strong" color="typography.text.secondary">
          Feed
        </Text>
        <Text variant="main" fontWeight="strong" color="typography.text.secondary">
          Feed
        </Text>
      </HStack>

      {/* Content Section */}

      {isPreviewLoading ? (
        <Flex
          paddingBlock={INBOX_TOKENS['Inbox/paddings/message/vertical']}
          gap={INBOX_TOKENS['Inbox/margin/message/avatar/txt']}
          alignSelf="stretch"
          flexGrow={1}
        >
          <InboxAvatar />
          <Skeletons />
        </Flex>
      ) : (
        <Flex
          paddingBlock={INBOX_TOKENS['Inbox/paddings/message/vertical']}
          gap={INBOX_TOKENS['Inbox/margin/message/avatar/txt']}
          alignSelf="stretch"
          flexGrow={1}
        >
          {/* Unread Dot */}
          <span
            className={css({
              w: '0.5rem',
              h: '0.5rem',
              bgColor: '#369EFF',
              borderRadius: 'circle',
              mt: '0.125rem',
            })}
          />

          {/* Avatar Section */}
          {parsedPreviewState.avatar ? <InboxAvatar src={parsedPreviewState.avatar} /> : null}
          {/* Message Section */}
          <Stack gap={INBOX_TOKENS['Inbox/margin/message/txt/buttons']} flexGrow={1}>
            <Stack gap="0.25rem">
              <HStack justifyContent="space-between">
                <Text variant="main">{renderText(parsedPreviewState.subject)}</Text>

                <Text variant="main" color="typography.text.secondary">
                  5 min
                </Text>
              </HStack>
              <Text variant="main">{renderText(parsedPreviewState.content)}</Text>
            </Stack>

            {/* Actions Section */}
            {parsedPreviewState.ctaButtons && parsedPreviewState.ctaButtons.length > 0 ? (
              <Flex gap={INBOX_TOKENS['semantic/margins/buttons/S/S']}>
                {parsedPreviewState.ctaButtons.map((button, index) => (
                  <button key={index} className={actionButtonRecipe({ type: button.type })}>
                    {button.content}
                  </button>
                ))}
              </Flex>
            ) : null}
          </Stack>
        </Flex>
      )}

      {/* Footer */}
      <Center gap="0.25rem" alignSelf="stretch" mt="auto">
        <img
          src={`/static/images/novu-gray.svg`}
          className={css({
            h: '0.75rem',
            w: '0.75rem',
            borderRadius: 'circle',
          })}
        />
        <Text variant="secondary">Powered by Novu</Text>
      </Center>
    </Flex>
  );
}

const Skeletons = () => {
  return (
    <Stack gap="0.75rem" w="100%">
      <Stack gap={5}>
        <SkeletonStyled height={14} width="35%" radius={4} />
        <SkeletonStyled height={14} width="70%" radius={4} />
      </Stack>
      <SkeletonStyled height={14} width="25%" radius={4} />
    </Stack>
  );
};

const actionButtonRecipe = cva({
  base: {
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    padding: '0 0.75rem',
    borderRadius: 'm',
    color: 'white',
    cursor: 'pointer',
    height: '2rem',
  },
  variants: {
    type: {
      primary: {
        bgColor: INBOX_TOKENS['Inbox/whiteLabel/buttons/accent/normal'],
      },
      secondary: {
        bgColor: INBOX_TOKENS['Inbox/whiteLabel/secondaryButton'],
      },
    },
  },
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Text, Title } from '@novu/novui';
import { css, cva } from '@novu/novui/css';
import { IconArrowDropDown, IconMoreHoriz, IconSettings } from '@novu/novui/icons';
import { Center, Flex, HStack, Stack } from '@novu/novui/jsx';
import { parseMarkdownIntoTokens } from '@novu/js/internal';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/push/Content.styles.ts
Tamaño: 883 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { colors } from '@novu/design-system';

export const ContentStyled = styled.div<{ isBlur: boolean }>`
  display: flex;
  padding: 1rem;
  flex-direction: column;
  align-items: flex-start;
  gap: 1rem;
  flex-shrink: 0;
  border-radius: 0.75rem;
  background: rgba(255, 255, 255, 0.6);
  position: relative;
  overflow: hidden;
  ${({ isBlur }) => isBlur && 'filter: blur(2px)'};
`;

export const ContentWrapperStyled = styled.div`
  padding: 0.5rem;
  margin-top: 4.5rem;
`;

export const ContentAndOVerlayWrapperStyled = styled.div<{ isError: boolean }>`
  overflow: hidden;
  position: relative;
  border-radius: 0.75rem;
  ${({ isError }) => isError && `border: 1px solid ${colors.error};`}
`;

export const ContentHeaderStyled = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - ContentStyled(styled.div<{ isBlur: boolean }>`
  display: flex;
  padding: 1rem;
  flex-direction: column;
  align...)
 - ContentAndOVerlayWrapperStyled(styled.div<{ isError: boolean }>`
  overflow: hidden;
  position: relative;
  border-radius: 0.75rem...)
Declaraciones 'export' encontradas:
- export  const
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/push/Content.tsx
Tamaño: 2656 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMutation } from '@tanstack/react-query';
import { useEffect, useState } from 'react';
import { useFormContext } from 'react-hook-form';
import { useEnvironment } from '../../../../hooks/useEnvironment';
import { api } from '../../../../api';
import { IForm } from '../../../../pages/templates/components/formTypes';
import { useTemplateEditorForm } from '../../../../pages/templates/components/TemplateEditorFormProvider';
import { usePreviewPushTemplate } from '../../../../pages/templates/hooks/usePreviewPushTemplate';
import { useStepFormPath } from '../../../../pages/templates/hooks/useStepFormPath';
import { useTemplateLocales } from '../../../../pages/templates/hooks/useTemplateLocales';
import { PushBasePreview } from './PushBasePreview';

export default function Content({
  showLoading = false,
  showOverlay = true,
  controlVariables,
}: {
  showLoading?: boolean;
  showOverlay?: boolean;
  controlVariables?: any;
}) {
  const { template } = useTemplateEditorForm();
  const { bridge } = useEnvironment({ bridge: template?.bridge });

  const { watch, formState } = useFormContext<IForm>();
  const path = useStepFormPath();

  const stepId = watch(`${path}.uuid`);
  const title = watch(`${path}.template.title`);
  const content = watch(`${path}.template.content`);
  const [bridgeContent, setBridgeContent] = useState('');
  const [bridgeSubject, setBridgeSubject] = useState('');

  const {
    mutateAsync,
    isLoading: isBridgeLoading,
    error: previewError,
  } = useMutation((data) => api.post(`/v1/bridge/preview/${formState?.defaultValues?.identifier}/${stepId}`, data), {
    onSuccess(data) {
      setBridgeContent(data.outputs.body);
      setBridgeSubject(data.outputs.subject);
    },
  });

  const { selectedLocale, locales, areLocalesLoading, onLocaleChange } = useTemplateLocales({
    content: content as string,
    title,
    disabled: showLoading || bridge,
  });

  const { isPreviewLoading, parsedPreviewState, templateError } = usePreviewPushTemplate({
    disabled: showLoading || bridge,
    locale: selectedLocale,
  });

  useEffect(() => {
    if (bridge) {
      mutateAsync(controlVariables);
    }
  }, [bridge, controlVariables]);

  return (
    <PushBasePreview
      content={parsedPreviewState.content || bridgeContent || ''}
      title={parsedPreviewState.title || bridgeSubject || ''}
      locales={locales || []}
      selectedLocale={selectedLocale}
      onLocaleChange={onLocaleChange}
      showEditOverlay={showOverlay}
      bridge={bridge}
      error={templateError}
      loading={isPreviewLoading || isBridgeLoading || showLoading || areLocalesLoading}
    />
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMutation } from '@tanstack/react-query';
import { useEffect, useState } from 'react';
import { useFormContext } from 'react-hook-form';
import { useEnvironment } from '../../../../hooks/useEnvironment';
import { api } from '../../../../api';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/push/PushBasePreview.tsx
Tamaño: 3289 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Flex, Group, Skeleton, Stack, useMantineColorScheme } from '@mantine/core';
import styled from '@emotion/styled';
import { colors, Text } from '@novu/design-system';
import { useHover } from '../../../../hooks';
import {
  ContentAndOVerlayWrapperStyled,
  ContentHeaderStyled,
  ContentStyled,
  ContentWrapperStyled,
} from './Content.styles';
import { LocaleSelect, NovuGreyIcon, PreviewEditOverlay } from '../common';

const Skeletons = () => {
  return (
    <>
      <HeaderSkeleton />
      <ContentSkeleton />
    </>
  );
};
const HeaderSkeleton = () => {
  return (
    <Group position="apart" noWrap>
      <Group spacing={16} noWrap>
        <SkeletonStyled radius={6} height={24} width={24} />
        <SkeletonStyled height={14} width={80} radius={6} />
      </Group>
      <SkeletonStyled height={14} width={40} radius={6} />
    </Group>
  );
};
const ContentSkeleton = () => {
  return (
    <Stack spacing={10} w="100%">
      <SkeletonStyled height={14} width="70%" radius={6} />
      <SkeletonStyled height={14} width="35%" radius={6} />
    </Stack>
  );
};
const SkeletonStyled = styled(Skeleton)`
  &::before {
    background: rgba(0, 0, 0, 0.08);
  }

  &::after {
    background: rgba(0, 0, 0, 0.08);
  }
`;
export const PushBasePreview = ({
  content,
  title,
  loading = false,
  error,
  showEditOverlay = false,
  bridge = false,
  onLocaleChange,
  selectedLocale,
  locales = [],
}: {
  content: string;
  title: string;
  loading?: boolean;
  bridge?: boolean;
  error?: string;
  showEditOverlay?: boolean;
  onLocaleChange: (locale: string) => void;
  selectedLocale?: string;
  locales: any[];
}) => {
  const { isHovered, onMouseEnter, onMouseLeave } = useHover();
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  return (
    <ContentWrapperStyled>
      <Group>
        <LocaleSelect
          isLoading={loading}
          locales={locales || []}
          onLocaleChange={onLocaleChange}
          value={selectedLocale}
        />
      </Group>
      <ContentAndOVerlayWrapperStyled
        isError={!!error && !bridge}
        onMouseEnter={onMouseEnter}
        onMouseLeave={onMouseLeave}
      >
        {showEditOverlay && isHovered && <PreviewEditOverlay />}
        <ContentStyled isBlur={showEditOverlay && isHovered}>
          {loading ? (
            <Skeletons />
          ) : (
            <>
              <ContentHeaderStyled>
                <Flex align="center" gap={5}>
                  <NovuGreyIcon color={isDark ? colors.B30 : '#1F1F27'} width="24px" height="24px" />
                  <Text color={colors.B20} weight="bold">
                    Your App
                  </Text>
                </Flex>
                <Text color={colors.B60}>now</Text>
              </ContentHeaderStyled>
              <div>
                <Text color={colors.B15} weight="bold" rows={1}>
                  {title}
                </Text>
                <Text color={colors.B15} rows={3}>
                  {content}
                </Text>
              </div>
            </>
          )}
        </ContentStyled>
      </ContentAndOVerlayWrapperStyled>

      {error && !bridge && !loading && <Text color={colors.error}>{error}</Text>}
    </ContentWrapperStyled>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Flex, Group, Skeleton, Stack, useMantineColorScheme } from '@mantine/core';
import styled from '@emotion/styled';
import { colors, Text } from '@novu/design-system';
import { useHover } from '../../../../hooks';
import {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/push/PushPreview.tsx
Tamaño: 471 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { MobileSimulator } from '../common';
import Content from './Content';

export function PushPreview({
  showLoading = false,
  showOverlay = true,
  controlVariables,
}: {
  showLoading?: boolean;
  showOverlay?: boolean;
  controlVariables?: any;
}) {
  return (
    <div>
      <MobileSimulator withBackground>
        <Content controlVariables={controlVariables} showLoading={showLoading} showOverlay={showOverlay} />
      </MobileSimulator>
    </div>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { MobileSimulator } from '../common';
import Content from './Content';
export function PushPreview({
showLoading = false,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/push/index.ts
Tamaño: 66 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './PushPreview';
export * from './PushBasePreview';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/sms/SmsBasePreview.tsx
Tamaño: 1608 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { colors } from '@novu/design-system';
import { MouseEventHandler } from 'react';
import { LocaleSelect, MobileSimulator } from '../common';
import { SmsBubble } from './SmsBubble';

const BodyContainer = styled.div`
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  margin: auto 1.25rem 2.5rem 1.25rem;
`;

const LocaleSelectStyled = styled(LocaleSelect)`
  .mantine-Select-input {
    color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B60)};
  }

  .mantine-Input-rightSection {
    color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B60)} !important;
  }
`;

export const SmsBasePreview = ({
  content,
  loading = false,
  error,
  showEditOverlay = false,
  onLocaleChange,
  selectedLocale,
  locales,
  onEditClick,
}: {
  content: string;
  loading?: boolean;
  error?: string;
  showEditOverlay?: boolean;
  onLocaleChange: (locale: string) => void;
  selectedLocale?: string;
  locales: any[];
  onEditClick?: MouseEventHandler<HTMLButtonElement>;
}) => {
  return (
    <MobileSimulator withBackground={false}>
      <BodyContainer>
        <LocaleSelectStyled
          isLoading={loading}
          locales={locales}
          value={selectedLocale}
          onLocaleChange={onLocaleChange}
          dropdownPosition="top"
        />
        <SmsBubble
          onEditClick={onEditClick}
          isLoading={loading}
          text={content}
          error={error}
          withOverlay={showEditOverlay}
        />
      </BodyContainer>
    </MobileSimulator>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { colors } from '@novu/design-system';
import { MouseEventHandler } from 'react';
import { LocaleSelect, MobileSimulator } from '../common';
import { SmsBubble } from './SmsBubble';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/sms/SmsBubble.styles.tsx
Tamaño: 2688 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Skeleton } from '@mantine/core';
import { colors, Text } from '@novu/design-system';

export const SmsBubbleHolder = styled.div`
  position: relative;
`;

export const SmsBubbleContainer = styled.div<{ isBlur: boolean; isError: boolean }>`
  position: relative;
  width: fit-content;
  min-width: 10rem;
  min-height: 2.25rem;
  padding: 0.5rem 0.75rem;
  border-radius: 1.25rem;
  background: ${({ isError }) => (isError ? colors.error : '#51ba52')};
  color: ${colors.white};
  font-size: 14px;
  line-height: 1.25rem;
  filter: ${({ isBlur }) => (isBlur ? 'blur(4px)' : 'none')};

  /**
   * The bubble tail. Consists from the two parts absolutely positioned to the bubble body.
   * The parts are represented by rectangles with left bottom border rounded, second sits on top of the first.
  */
  &::before {
    content: '';
    position: absolute;
    bottom: -0.125rem;
    right: -0.5rem;
    height: 1.25rem;
    border-right: 1.25rem solid ${({ isError }) => (isError ? colors.error : '#51ba52')};
    border-bottom-left-radius: 1rem 0.875rem;
    transform: translate(0, -0.125rem);
  }

  &::after {
    content: '';
    position: absolute;
    z-index: 1;
    bottom: -0.125rem;
    right: -2.875rem;
    width: 1rem;
    height: 1.25rem;
    background: ${({ theme }) => (theme.colorScheme === 'dark' ? '#4b4b51' : colors.white)};
    border-bottom-left-radius: 0.625rem;
    transform: translate(-30px, -0.125rem);
  }
`;

export const BubbleText = styled(Text)`
  overflow: hidden;
  margin: 0;
  color: ${colors.white};
  word-break: break-word;
`;

export const Delivered = styled.span`
  position: absolute;
  bottom: -1.5rem;
  right: 0;
  font-size: 12px;
  font-weight: 500;
  color: ${colors.B80};
`;

export const Error = styled.span`
  width: max-content;
  position: absolute;
  bottom: -1.5rem;
  right: -0.375rem;
  font-size: 0.75rem;
  font-weight: 500;
  color: ${colors.error};
`;

export const SkeletonContainer = styled.div`
  display: flex;
  gap: 0.625rem;
`;

export const SkeletonFirstRect = styled(Skeleton)`
  width: 5rem;
  height: 1.25rem;

  &::before {
    background: rgba(255, 255, 255, 0.24);
  }

  &::after {
    background: rgba(255, 255, 255, 0.3);
  }
`;

export const SkeletonSecondRect = styled(SkeletonFirstRect)`
  width: 2.5rem;
`;

export const EditLabel = styled.button`
  position: absolute;
  inset: 0;
  z-index: 2;
  min-width: 7.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
  font-size: 14px;
  font-weight: 700;
  padding: 0;
  color: ${colors.white};
  cursor: pointer;
  outline: none;
  border: none;
  background: transparent;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Skeleton } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
export const SmsBubbleHolder = styled.div`
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/sms/SmsBubble.tsx
Tamaño: 1736 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { MouseEventHandler, useState } from 'react';
import { useLocation } from 'react-router-dom';
import { PencilOutlined } from '@novu/design-system';

import {
  BubbleText,
  Delivered,
  EditLabel,
  Error,
  SkeletonContainer,
  SkeletonFirstRect,
  SkeletonSecondRect,
  SmsBubbleContainer,
  SmsBubbleHolder,
} from './SmsBubble.styles';

interface ISmsBubbleProps {
  className?: string;
  text?: string;
  isLoading?: boolean;
  withOverlay?: boolean;
  onEditClick?: MouseEventHandler<HTMLButtonElement>;
  error?: string;
}

export const SmsBubble: React.FC<ISmsBubbleProps> = ({
  className,
  text = '',
  isLoading,
  onEditClick,
  error,
  withOverlay,
}) => {
  const [isHovered, setIsHovered] = useState(false);
  const isError = !!error;
  const showEditOverlay = !!withOverlay && isHovered && !isLoading;

  const onEditClickHandler: MouseEventHandler<HTMLButtonElement> = (e) => {
    e.stopPropagation();
    e.preventDefault();
    onEditClick?.(e);
  };

  return (
    <SmsBubbleHolder
      className={className}
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
    >
      {showEditOverlay && (
        <EditLabel onClick={onEditClickHandler}>
          <PencilOutlined />
          Edit message
        </EditLabel>
      )}
      <SmsBubbleContainer isError={isError} isBlur={showEditOverlay}>
        {isLoading ? (
          <SkeletonContainer>
            <SkeletonFirstRect />
            <SkeletonSecondRect />
          </SkeletonContainer>
        ) : (
          <BubbleText rows={3}>{text}</BubbleText>
        )}
        {isError ? <Error>{error}</Error> : <Delivered>Delivered</Delivered>}
      </SmsBubbleContainer>
    </SmsBubbleHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { MouseEventHandler, useState } from 'react';
import { useLocation } from 'react-router-dom';
import { PencilOutlined } from '@novu/design-system';
import {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/sms/SmsPreview.tsx
Tamaño: 2704 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMutation } from '@tanstack/react-query';
import { useEffect, useState } from 'react';
import { useFormContext } from 'react-hook-form';
import { useLocation } from 'react-router-dom';
import { useEnvironment } from '../../../../hooks/useEnvironment';
import { api } from '../../../../api';
import { IForm } from '../../../../pages/templates/components/formTypes';
import { useTemplateEditorForm } from '../../../../pages/templates/components/TemplateEditorFormProvider';
import { useNavigateToStepEditor } from '../../../../pages/templates/hooks/useNavigateToStepEditor';
import { usePreviewSmsTemplate } from '../../../../pages/templates/hooks/usePreviewSmsTemplate';
import { useStepFormPath } from '../../../../pages/templates/hooks/useStepFormPath';
import { useTemplateLocales } from '../../../../pages/templates/hooks/useTemplateLocales';
import { SmsBasePreview } from './SmsBasePreview';

export const SmsPreview = ({
  showPreviewAsLoading = false,
  controlVariables,
}: {
  showPreviewAsLoading?: boolean;
  controlVariables?: any;
}) => {
  const { navigateToStepEditor } = useNavigateToStepEditor();
  const { watch, formState } = useFormContext<IForm>();
  const { template } = useTemplateEditorForm();
  const { bridge } = useEnvironment({ bridge: template?.bridge });
  const path = useStepFormPath();
  const templateContent = watch(`${path}.template.content`);
  const { pathname } = useLocation();
  const isPreviewPath = pathname.endsWith('/preview');
  const stepId = watch(`${path}.uuid`);
  const [bridgeContent, setBridgeContent] = useState('');

  const { mutateAsync, isLoading: isBridgeLoading } = useMutation(
    (data) => api.post(`/v1/bridge/preview/${formState?.defaultValues?.identifier}/${stepId}`, data),
    {
      onSuccess(data) {
        setBridgeContent(data.outputs.body);
      },
    }
  );

  useEffect(() => {
    if (bridge) {
      mutateAsync(controlVariables);
    }
  }, [bridge, controlVariables]);

  const { selectedLocale, locales, areLocalesLoading, onLocaleChange } = useTemplateLocales({
    content: templateContent as string,
    disabled: showPreviewAsLoading,
  });

  const { isPreviewContentLoading, previewContent, templateError } = usePreviewSmsTemplate(
    selectedLocale,
    showPreviewAsLoading || bridge
  );

  return (
    <SmsBasePreview
      content={bridge ? bridgeContent : previewContent}
      onLocaleChange={onLocaleChange}
      locales={locales}
      showEditOverlay={isPreviewPath}
      selectedLocale={selectedLocale}
      loading={isPreviewContentLoading || areLocalesLoading || isBridgeLoading}
      onEditClick={navigateToStepEditor}
      error={bridge ? undefined : templateError}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMutation } from '@tanstack/react-query';
import { useEffect, useState } from 'react';
import { useFormContext } from 'react-hook-form';
import { useLocation } from 'react-router-dom';
import { useEnvironment } from '../../../../hooks/useEnvironment';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/components/workflow/preview/sms/index.ts
Tamaño: 64 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './SmsPreview';
export * from './SmsBasePreview';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/components/workflow_v2/StepEditorComponent.tsx
Tamaño: 1674 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { css } from '@novu/novui/css';
import { DiscoverStepOutput } from '@novu/framework/internal';
import { WorkflowsPanelLayout } from '../../studio/components/workflows/layout/WorkflowsPanelLayout';
import { WorkflowStepEditorContentPanel } from '../../studio/components/workflows/step-editor/WorkflowStepEditorContentPanel';
import { WorkflowStepEditorControlsPanel } from '../../studio/components/workflows/step-editor/WorkflowStepEditorControlsPanel';

export const WorkflowsStepEditor = ({
  source,
  onControlsChange,
  step,
  preview,
  error,
  workflow,
  loadingPreview,
  defaultControls,
  onControlsSave,
  isSavingControls,
}: {
  defaultControls: any;
  preview: any;
  error: any;
  workflow: any;
  loadingPreview: boolean;
  step?: DiscoverStepOutput;
  source?: 'studio' | 'playground' | 'dashboard';
  onControlsChange: (type: string, form: any, id?: string) => void;
  onControlsSave?: () => void;
  isSavingControls?: boolean;
}) => {
  return (
    <>
      <WorkflowsPanelLayout>
        <WorkflowStepEditorContentPanel
          source={source}
          onlyPreviewView={source === 'playground'}
          step={step}
          error={error}
          preview={preview}
          isLoadingPreview={loadingPreview}
        />
        <WorkflowStepEditorControlsPanel
          source={source}
          step={step}
          workflow={workflow}
          onChange={onControlsChange}
          defaultControls={defaultControls}
          className={css({ marginTop: source === 'playground' ? '-40px' : '0' })}
          onSave={onControlsSave}
          isLoadingSave={isSavingControls}
        />
      </WorkflowsPanelLayout>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { css } from '@novu/novui/css';
import { DiscoverStepOutput } from '@novu/framework/internal';
import { WorkflowsPanelLayout } from '../../studio/components/workflows/layout/WorkflowsPanelLayout';
import { WorkflowStepEditorContentPanel } from '../../studio/components/workflows/step-editor/WorkflowStepEditorContentPanel';
import { WorkflowStepEditorControlsPanel } from '../../studio/components/workflows/step-editor/WorkflowStepEditorControlsPanel';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/config/index.ts
Tamaño: 4616 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { FeatureFlagsKeysEnum, getContextPath, NovuComponentEnum } from '@novu/shared';

function isBrowser() {
  return typeof window !== 'undefined';
}

function autodetectApiRoot() {
  const { origin } = window.location;
  const matcher = /web|dashboard/;

  const isValidTargetForReplace = !origin.includes('localhost') && matcher.test(origin);

  return isValidTargetForReplace ? origin.replace(matcher, 'api') : '';
}

declare global {
  interface Window {
    _env_: Record<string, string | undefined>;
  }
}

const isPlaywright = isBrowser() && (window as any).isPlaywright;

export const API_ROOT =
  window._env_.REACT_APP_API_URL || isPlaywright
    ? window._env_.REACT_APP_API_URL || process.env.REACT_APP_API_URL || autodetectApiRoot() || 'http://localhost:1336'
    : window._env_.REACT_APP_API_URL || process.env.REACT_APP_API_URL || autodetectApiRoot() || 'http://localhost:3000';

export const WS_URL = isPlaywright
  ? window._env_.REACT_APP_WS_URL || process.env.REACT_APP_WS_URL || 'http://localhost:1340'
  : window._env_.REACT_APP_WS_URL || process.env.REACT_APP_WS_URL || 'http://localhost:3002';

export const SENTRY_DSN = window._env_.REACT_APP_SENTRY_DSN || process.env.REACT_APP_SENTRY_DSN;

export const ENV = window._env_.REACT_APP_ENVIRONMENT || process.env.REACT_APP_ENVIRONMENT;

export const BLUEPRINTS_API_URL =
  window._env_.REACT_APP_BLUEPRINTS_API_URL || isPlaywright
    ? window._env_.REACT_APP_BLUEPRINTS_API_URL || process.env.REACT_APP_BLUEPRINTS_API_URL || 'http://localhost:1336'
    : API_ROOT;

export const APP_ID = window._env_.REACT_APP_NOVU_APP_ID || process.env.REACT_APP_NOVU_APP_ID;

export const WIDGET_EMBED_PATH =
  window._env_.REACT_APP_WIDGET_EMBED_PATH ||
  process.env.REACT_APP_WIDGET_EMBED_PATH ||
  'http://localhost:4701/embed.umd.min.js';

export const IS_SELF_HOSTED =
  window._env_.REACT_APP_IS_SELF_HOSTED === 'true' || process.env.REACT_APP_IS_SELF_HOSTED === 'true';

// To test feature in prod and staging. Excluding self host and local
export const IS_NOVU_PROD_STAGING = !IS_SELF_HOSTED && !API_ROOT.includes('localhost');

export const REACT_APP_VERSION = process.env.NOVU_VERSION;

export const INTERCOM_APP_ID = window._env_.REACT_APP_INTERCOM_APP_ID || process.env.REACT_APP_INTERCOM_APP_ID || '';

export const CONTEXT_PATH = getContextPath(NovuComponentEnum.WEB);

export const WEBHOOK_URL = isPlaywright
  ? window._env_.REACT_APP_WEBHOOK_URL || process.env.REACT_APP_WEBHOOK_URL || 'http://localhost:1341'
  : window._env_.REACT_APP_WEBHOOK_URL || process.env.REACT_APP_WEBHOOK_URL || 'http://localhost:3003';

export const MAIL_SERVER_DOMAIN =
  window._env_.REACT_APP_MAIL_SERVER_DOMAIN || process.env.REACT_APP_MAIL_SERVER_DOMAIN || 'dev.inbound-mail.novu.co';

export const LAUNCH_DARKLY_CLIENT_SIDE_ID =
  window._env_.REACT_APP_LAUNCH_DARKLY_CLIENT_SIDE_ID || process.env.REACT_APP_LAUNCH_DARKLY_CLIENT_SIDE_ID;

export const FEATURE_FLAGS = Object.values(FeatureFlagsKeysEnum).reduce(
  (prev, key) => {
    const defaultValue = 'false';
    prev[key] = window._env_[key] || process.env[key] || defaultValue;

    return prev;
  },
  {} as Record<FeatureFlagsKeysEnum, string | undefined>
);

export const HUBSPOT_PORTAL_ID = window._env_.REACT_APP_HUBSPOT_EMBED || process.env.REACT_APP_HUBSPOT_EMBED;

export const IS_EU_ENV = (ENV === 'production' || ENV === 'prod') && API_ROOT.includes('eu.api.novu.co');

export const IS_EE_AUTH_ENABLED =
  window._env_.REACT_APP_IS_EE_AUTH_ENABLED === 'true' || process.env.REACT_APP_IS_EE_AUTH_ENABLED === 'true';

export const CLERK_PUBLISHABLE_KEY =
  window._env_.REACT_APP_CLERK_PUBLISHABLE_KEY || process.env.REACT_APP_CLERK_PUBLISHABLE_KEY || '';

export const WEB_APP_URL =
  window._env_.REACT_APP_WEB_APP_URL || process.env.REACT_APP_WEB_APP_URL || window.location.origin;

export const NEW_DASHBOARD_URL = window._env_.REACT_APP_NEW_DASHBOARD_URL || process.env.REACT_APP_NEW_DASHBOARD_URL;

if (IS_EE_AUTH_ENABLED && !CLERK_PUBLISHABLE_KEY) {
  throw new Error('Missing Clerk Publishable Key');
}

export const BRIDGE_SYNC_SAMPLE_ENDPOINT = 'https://deploy-preview-8--onboarding-sandbox.netlify.app/api/novu';
/**
 * This is used for versioning the sandbox endpoints across revisions
 * On change, we should move the current one to the legacy list
 */
export const BRIDGE_ENDPOINTS_LEGACY_VERSIONS = [
  'https://onboarding-sandbox.netlify.app/api/novu',
  'https://deploy-preview-1--onboarding-sandbox.netlify.app/api/novu',
  'https://deploy-preview-4--onboarding-sandbox.netlify.app/api/novu',
  'https://deploy-preview-6--onboarding-sandbox.netlify.app/api/novu',
];


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - isBrowser()
 - autodetectApiRoot()
Asignaciones con arrow functions encontradas (posibles funciones):
 - FEATURE_FLAGS(Object.values(FeatureFlagsKeysEnum).reduce(
  (prev, key))
Declaraciones 'export' encontradas:
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/constants/BaseEnvironmentEnum.ts
Tamaño: 96 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export enum BaseEnvironmentEnum {
  DEVELOPMENT = 'Development',
  PRODUCTION = 'Production',
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  enum

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/constants/assets.ts
Tamaño: 305 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { CONTEXT_PATH } from '../config';

export const COMPANY_LOGO_PATH = `${CONTEXT_PATH}/static/images/novu.svg`;

export const COMPANY_LOGO_TEXT_PATH = `${CONTEXT_PATH}/static/images/novu-text.svg`;

export const COMPANY_LOGO_TEXT_PATH_DARK_TEXT = `${CONTEXT_PATH}/static/images/novu-text-dark.svg`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/constants/routeParams.ts
Tamaño: 274 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

type AUTH_RESET_TOKEN_TYPE = {
  token: string;
};

type AUTH_INVITATION_TOKEN_TYPE = {
  token: string;
};

type TEMPLATES_EDIT_TEMPLATEID_TYPE = {
  templateId: string;
};

export type { AUTH_INVITATION_TOKEN_TYPE, AUTH_RESET_TOKEN_TYPE, TEMPLATES_EDIT_TEMPLATEID_TYPE };


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  type

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/constants/routes.ts
Tamaño: 2856 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export enum ROUTES {
  HOME = '/',
  AUTH_SIGNUP = '/auth/signup',
  AUTH_SIGNUP_ORGANIZATION_LIST = '/auth/signup/organization-list',
  AUTH_LOGIN = '/auth/login',
  AUTH_RESET_REQUEST = '/auth/reset/request',
  AUTH_RESET_TOKEN = '/auth/reset/:token',
  AUTH_INVITATION_TOKEN = '/auth/invitation/:token',
  ANY = '/*',
  WORKFLOWS_DIGEST_PLAYGROUND = '/workflows/:templateId/digest-playground',
  WORKFLOWS_CREATE = '/workflows/create',
  WORKFLOWS_EDIT_TEMPLATEID = '/workflows/edit/:templateId',
  WORKFLOWS_V2_STEP_EDIT = '/workflows/edit/:templateId/step/:stepId',
  WORKFLOWS_V2_TEST = '/workflows/edit/:templateId/test',
  WORKFLOWS_VARIANT_PREVIEW = '/workflows/edit/:templateId/:channel/:stepUuid/variants/:variantUuid/preview',
  WORKFLOWS = '/workflows',
  TENANTS = '/tenants',
  TENANTS_CREATE = '/tenants/create',
  DASHBOARD_WELCOME = '/welcome',
  ACTIVITIES = '/activities',
  INTEGRATIONS = '/integrations',
  INTEGRATIONS_CREATE = '/integrations/create',
  TEAM = '/team',
  CHANGES = '/changes',
  SUBSCRIBERS = '/subscribers',
  ABOUT = '/about',
  CONTACT = '/contact',
  BRAND = '/brand',
  TRANSLATIONS = '/translations',
  LAYOUT = '/layouts',
  API_KEYS = '/api-keys',
  WEBHOOK = '/webhook',

  /** Settings nested routes */
  SETTINGS = '/settings',
  PROFILE = '/settings/profile',
  TEAM_SETTINGS = '/settings/team',
  /* Deprecated */
  BRAND_SETTINGS_DEPRECATED = '/settings/brand',
  BRAND_SETTINGS = '/settings/branding',
  ORGANIZATION = '/settings/organization',
  SECURITY = '/settings/security',
  BILLING = '/settings/billing',

  /** Novu V2 routes, defined as nested routes */
  STUDIO = '/studio',
  STUDIO_FLOWS = '/studio/flows',
  STUDIO_FLOWS_VIEW = '/studio/flows/:templateId',
  STUDIO_FLOWS_STEP_EDITOR = '/studio/flows/:templateId/step/:stepId',
  STUDIO_FLOWS_TEST = '/studio/flows/:templateId/test',
  STUDIO_ONBOARDING = '/studio/onboarding',
  STUDIO_ONBOARDING_PREVIEW = '/studio/onboarding/preview',
  STUDIO_ONBOARDING_SUCCESS = '/studio/onboarding/success',

  LOCAL_STUDIO_AUTH = '/local-studio/auth',

  /** Account settings routes, bookmarkable by tabs */
  MANAGE_ACCOUNT_SEGMENT = '/manage-account/',
  MANAGE_ACCOUNT_USER_PROFILE = '/manage-account/user-profile',
  MANAGE_ACCOUNT_ACCESS_SECURITY = '/manage-account/access-security',
  MANAGE_ACCOUNT_ORGANIZATION = '/manage-account/organization',
  MANAGE_ACCOUNT_TEAM_MEMBERS = '/manage-account/team-members',
  MANAGE_ACCOUNT_BILLING = '/manage-account/billing',
  MANAGE_ACCOUNT_BRANDING = '/manage-account/branding',
}

export enum MANAGE_ACCOUNT_ROUTE_SEGMENTS {
  USER_PROFILE = 'user-profile',
  ACCESS_SECURITY = 'access-security',
  ORGANIZATION = 'organization',
  TEAM_MEMBERS = 'team-members',
  BILLING = 'billing',
  BRANDING = 'branding',
}

export const PUBLIC_ROUTES_PREFIXES = new Set<string>(['/auth', '/local-studio']);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  enum
- export  enum
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/constants/workflowConstants.ts
Tamaño: 73 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export const FIRST_100_WORKFLOWS = {
  pageIndex: 0,
  pageSize: 100,
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/LICENSE
Tamaño: 3301 bytes
Lenguaje detectado: LICENSE

### CONTENIDO ORIGINAL ###

Novu Proprietary Software License

IMPORTANT – READ CAREFULLY: This License Agreement ("Agreement") is a legal agreement between you (either an individual or a single entity) and Novu Corporation ("Novu") for the software product identified below, which includes computer software and associated media, printed materials, and "online" or electronic documentation (collectively, the "Software").

By installing, copying, or otherwise using these files, you agree to be bound by the terms of this Agreement.
If you do not agree to the terms of this Agreement, do not install or use the Software.

Grant of License: Subject to the terms of this Agreement, Novu hereby grants you a non-exclusive, non-transferable license to use the Software solely for your internal operations.
You may not rent, lease, lend, sell, redistribute, sublicense or provide commercial hosting services with the Software.

- Use Restrictions: Use of the Software is conditional upon your compliance with the terms set forth below:
- Approval Required: You may not use the Software without obtaining prior written approval from Novu. To request approval, you must contact Novu at [contact information].
- No Modification: You may not modify, adapt, or translate the Software. You may not reverse engineer, decompile, disassemble, or otherwise attempt to discover the source code of the Software, except to the extent that such activity is expressly permitted by applicable law notwithstanding this limitation.

Intellectual Property Rights: The Software is the property of Novu and is protected by copyright laws and international copyright treaties, as well as other intellectual property laws and treaties. The Software is licensed, not sold.

Termination: This Agreement is effective until terminated. Your rights under this Agreement will terminate automatically without notice from Novu if you fail to comply with any of the terms and conditions of this Agreement. Upon termination, you must cease all use of the Software and destroy all copies, full or partial, of the Software.

No Warranties: Novu expressly disclaims any warranty for the Software. The Software is provided 'As Is' without any express or implied warranty of any kind, including but not limited to any warranties of merchantability, noninfringement, or fitness for a particular purpose. Novu does not warrant or assume responsibility for the accuracy or completeness of any information, text, graphics, links, or other items contained within the Software.

Limitation of Liability: In no event shall Novu be liable for any damages whatsoever (including, without limitation, damages for loss of profits, business interruption, loss of information, or any other pecuniary loss) arising out of the use of or inability to use this Software, even if Novu has been advised of the possibility of such damages.

By installing, copying, or otherwise using the Software, you acknowledge that you have read this Agreement, understand it, and agree to be bound by its terms and conditions.

You also agree that this Agreement is the complete and exclusive statement of agreement between the parties and supersedes all proposals or prior agreements, oral or written, and any other communications between the parties relating to the subject matter of this Agreement.


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Novu Proprietary Software License
IMPORTANT – READ CAREFULLY: This License Agreement ("Agreement") is a legal agreement between you (either an individual or a single entity) and Novu Corporation ("Novu") for the software product identified below, which includes computer software and associated media, printed materials, and "online" or electronic documentation (collectively, the "Software").
By installing, copying, or otherwise using these files, you agree to be bound by the terms of this Agreement.
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/index.ts
Tamaño: 173 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './components/FreeTrialBanner';
export * from './components/FreeTrialSidebarWidget';
export * from './components/UpgradePlanBanner';
export * from './routes';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/routes.tsx
Tamaño: 289 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { Route, Routes as RouterRoutes } from 'react-router-dom';
import { BillingPage } from './pages/BillingPage';

export const Routes = () => {
  return (
    <RouterRoutes>
      <Route path="" element={<BillingPage />}></Route>
    </RouterRoutes>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { Route, Routes as RouterRoutes } from 'react-router-dom';
import { BillingPage } from './pages/BillingPage';
export const Routes = () => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/ActivePlanBanner.tsx
Tamaño: 6695 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Text, Title } from '@novu/novui';
import { MantineTheme } from '@mantine/core';
import { css } from '@novu/novui/css';
import { ApiServiceLevelEnum } from '@novu/shared';
import { UsageProgress } from './UsageProgress';
import { useSubscriptionContext, type UseSubscriptionType } from './SubscriptionProvider';
import { capitalizeFirstLetter } from '../../../utils/string';
import { Badge } from './Badge';
import { PlanActionButton } from './PlanActionButton';

type BillingInterval = 'month' | 'year';

export const ActivePlanBanner = ({ selectedBillingInterval }: { selectedBillingInterval: BillingInterval }) => {
  const subscription = useSubscriptionContext();

  return (
    <div className={styles.activePlanWrapper}>
      <Title variant="section">Active Plan</Title>
      <div className={styles.banner}>
        <div className={styles.content}>
          <PlanHeader {...subscription} />
          <PlanInfo {...subscription} />
        </div>
        <PlanActions {...subscription} selectedBillingInterval={selectedBillingInterval} />
      </div>
    </div>
  );
};

function PlanHeader({ apiServiceLevel, trial }: UseSubscriptionType) {
  const { daysLeft, isActive } = trial;
  const color = getColorByDaysLeft(daysLeft);

  const renameBusinessToTeam = (plan: string) => {
    if (plan === ApiServiceLevelEnum.BUSINESS) return 'team';

    return plan.toLowerCase();
  };

  return (
    <div className={styles.header}>
      <Title variant="section">{capitalizeFirstLetter(renameBusinessToTeam(apiServiceLevel))}</Title>
      {isActive && (
        <>
          <Badge label="Trial" />
          <div className={styles.daysLeft}>
            <Text className={styles.daysNumber} style={{ color }}>
              {daysLeft}
            </Text>
            <Text className={styles.daysText} style={{ color }}>
              days left
            </Text>
          </div>
        </>
      )}
    </div>
  );
}

function PlanInfo({ apiServiceLevel, events, currentPeriodStart, currentPeriodEnd }: UseSubscriptionType) {
  const { current: currentEvents, included: maxEvents } = events;
  const color = getColorByEventsUsed(currentEvents, maxEvents);

  return (
    <div className={styles.info}>
      <div className={styles.eventsUsage}>
        <div className={styles.eventsCount}>
          <Text className={styles.eventsLabel}>
            <Text as="span" color="typography.text.primary" className={styles.eventsNumber} style={{ color }}>
              {currentEvents?.toLocaleString()}
            </Text>{' '}
            events used between {formatDate(currentPeriodStart || '2024')} and {formatDate(currentPeriodEnd || '2024')}.
          </Text>
        </div>
      </div>
      <UsageProgress apiServiceLevel={apiServiceLevel} currentEvents={currentEvents} maxEvents={maxEvents} />
      <Text variant="secondary" fontSize="12px" color="typography.text.secondary">
        Updates every hour
      </Text>
    </div>
  );
}

function PlanActions({
  trial,
  status,
  selectedBillingInterval,
}: UseSubscriptionType & { selectedBillingInterval: BillingInterval }) {
  return (
    <div className={styles.actions}>
      <PlanActionButton selectedBillingInterval={selectedBillingInterval} />
      {status === 'trialing' && trial.end && (
        <Text variant="secondary" fontSize="12px" color="typography.text.secondary">
          Trial ends on {formatDate(trial.end)}
        </Text>
      )}
    </div>
  );
}

const getColorByEventsUsed = (eventsUsed: number, maxEvents?: number | null) => {
  if (!eventsUsed || !maxEvents) return undefined;

  const percentage = (eventsUsed / maxEvents) * 100;
  if (percentage >= 100) return '#F2555A';
  if (percentage >= 80) return '#FFB224';

  return undefined;
};

const getColorByDaysLeft = (daysLeft: number) => {
  if (daysLeft <= 0) return '#F2555A';
  if (daysLeft <= 3) return '#FFB224';

  return undefined;
};

const formatDate = (date: string) => {
  return new Date(date).toLocaleDateString('en-US', {
    month: 'short',
    day: 'numeric',
    year: 'numeric',
  });
};

const styles = {
  activePlanWrapper: css({
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'flex-start',
    gap: '16px',
    alignSelf: 'stretch',
  }),
  banner: css({
    display: 'flex',
    width: '100%',
    padding: '24px',
    alignItems: 'flex-start',
    borderRadius: '16px',
    background: 'surface.panel',
    boxShadow: '0px 5px 20px 0px rgba(0, 0, 0, 0.2)',
    marginBottom: '24px',
  }),
  content: css({
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'flex-start',
    gap: '24px',
    flex: '1 0 0',
  }),
  header: css({
    display: 'flex',
    alignItems: 'center',
    gap: '8px',
  }),
  trialBadge: (theme: MantineTheme) =>
    css({
      // TODO: replace with 'mauve.80' color token when legacy tokens are removed
      background: theme.colorScheme === 'dark' ? '#2E2E32 !important' : '#e9e8eaff !important',
      padding: '2px 8px !important',
      color: theme.colorScheme === 'dark' ? '#7E7D86' : '#86848dff',
      fontSize: '12px !important',
    }),
  daysLeft: css({
    display: 'flex',
    gap: '6px',
    alignItems: 'baseline',
  }),
  daysNumber: css({
    color: 'typography.text.secondary',
    fontSize: '20px',
    fontWeight: '600',
  }),
  daysText: css({
    color: 'typography.text.secondary',
    fontSize: '14px',
    fontWeight: '400',
    lineHeight: '1',
  }),
  info: css({
    display: 'flex',
    width: '340px',
    flexDirection: 'column',
    alignItems: 'flex-start',
    gap: '8px',
  }),
  eventsUsage: css({
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'flex-start',
    lineHeight: '24px',
  }),
  eventsCount: css({
    display: 'flex',
    alignItems: 'flex-end',
    gap: '4px',
  }),
  eventsNumber: css({
    fontSize: '16px',
    fontWeight: '600',
  }),
  eventsLabel: css({
    color: 'typography.text.secondary',
    fontSize: '14px',
    fontWeight: '400',
  }),
  usageFootnote: css({
    color: 'typography.text.secondary',
    fontSize: '12px',
    fontWeight: '400',
    lineHeight: '12px',
  }),
  actions: css({
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'space-between',
    alignItems: 'flex-end',
    alignSelf: 'stretch',
  }),
  manageSubscriptionButton: {
    root: css({
      height: '32px !important',
      padding: '0px 12px !important',
      borderRadius: '8px !important',
      background: 'transparent !important',
      border: '1px solid #2A92E7 !important',
      color: '#2A92E7 !important',
    }),
    label: css({
      fontSize: '14px !important',
      fontWeight: '400 !important',
      lineHeight: '20px !important',
    }),
  },
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Text, Title } from '@novu/novui';
import { MantineTheme } from '@mantine/core';
import { css } from '@novu/novui/css';
import { ApiServiceLevelEnum } from '@novu/shared';
import { UsageProgress } from './UsageProgress';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/Badge.tsx
Tamaño: 775 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { BadgeProps, Badge as MantineBadge, MantineTheme, useMantineTheme } from '@mantine/core';
import { css } from '@novu/novui/css';

export const Badge = ({ label, ...props }: BadgeProps & { label?: React.ReactNode }) => {
  const theme = useMantineTheme();

  return (
    <MantineBadge className={styles.badge(theme)} {...props}>
      {label}
    </MantineBadge>
  );
};

const styles = {
  badge: (theme: MantineTheme) =>
    css({
      // TODO: replace with 'mauve.80' color token when legacy tokens are removed
      background: theme.colorScheme === 'dark' ? '#2E2E32 !important' : '#e4e2e4ff !important',
      padding: '2px 8px !important',
      color: theme.colorScheme === 'dark' ? '#7E7D86' : '#86848dff',
      borderRadius: '24px !important',
    }),
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { BadgeProps, Badge as MantineBadge, MantineTheme, useMantineTheme } from '@mantine/core';
import { css } from '@novu/novui/css';
export const Badge = ({ label, ...props }: BadgeProps & { label?: React.ReactNode }) => {
const theme = useMantineTheme();
// TODO: replace with 'mauve.80' color token when legacy tokens are removed
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/ContactSalesButton.tsx
Tamaño: 721 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { colors, Text } from '@novu/design-system';
import { Group, useMantineTheme } from '@mantine/core';

export const ContactSalesButton = ({ onContactSales, label }: { onContactSales: () => void; label?: string }) => {
  const { colorScheme } = useMantineTheme();
  const isDark = colorScheme === 'dark';
  const salesLabel = label || 'Contact sales';

  return (
    <Group position="center" spacing={4}>
      <Text color={isDark ? colors.B60 : colors.B40}>Questions?</Text>
      <Text gradient>
        <a
          onClick={onContactSales}
          style={{
            cursor: 'pointer',
          }}
        >
          {salesLabel}
        </a>
      </Text>
    </Group>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { colors, Text } from '@novu/design-system';
import { Group, useMantineTheme } from '@mantine/core';
export const ContactSalesButton = ({ onContactSales, label }: { onContactSales: () => void; label?: string }) => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/ContactSalesModal.tsx
Tamaño: 1694 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { Modal, Title, successMessage } from '@novu/design-system';
import { ApiServiceLevelEnum } from '@novu/shared';
import { HubspotForm } from './HubspotForm';
import { HUBSPOT_FORM_IDS } from '../utils/hubspot.constants';
import { useAuth } from '../../../hooks/useAuth';

type ContactSalesModalProps = {
  isOpen: boolean;
  onClose: () => void;
  intendedApiServiceLevel: ApiServiceLevelEnum;
};

export const ContactSalesModal = ({ isOpen, onClose, intendedApiServiceLevel }: ContactSalesModalProps) => {
  const { currentUser, currentOrganization } = useAuth();
  if (!isOpen || !currentUser || !currentOrganization) {
    return null;
  }

  return (
    <Modal
      styles={{
        body: {
          paddingTop: '0px !important',
        },
        modal: {
          width: 840,
        },
      }}
      padding={40}
      withCloseButton={false}
      size="xl"
      opened={isOpen}
      title={undefined}
      onClose={onClose}
    >
      <Title mb={8}>Contact sales</Title>
      <HubspotForm
        formId={HUBSPOT_FORM_IDS.UPGRADE_CONTACT_SALES}
        properties={{
          firstname: currentUser.firstName || '',
          lastname: currentUser.lastName || '',
          email: currentUser.email || '',
          app_organizationid: currentOrganization._id,
          'TICKET.subject': `Contact Sales - ${intendedApiServiceLevel}`,
          'TICKET.content': '',
        }}
        readonlyProperties={['email']}
        focussedProperty="TICKET.content"
        onFormSubmitted={() => {
          successMessage('Thank you for contacting us! We will be in touch soon.');
          onClose();
        }}
      />
    </Modal>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { Modal, Title, successMessage } from '@novu/design-system';
import { ApiServiceLevelEnum } from '@novu/shared';
import { HubspotForm } from './HubspotForm';
import { HUBSPOT_FORM_IDS } from '../utils/hubspot.constants';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/ContactUsButton.tsx
Tamaño: 851 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Button } from '@novu/novui';
import { css } from '@novu/novui/css';
import { ApiServiceLevelEnum } from '@novu/shared';
import { useState } from 'react';
import { ContactSalesModal } from './ContactSalesModal';

export const ContactUsButton = () => {
  const [isContactSalesModalOpen, setIsContactSalesModalOpen] = useState(false);

  return (
    <>
      <Button className={styles.contactButton} onClick={() => setIsContactSalesModalOpen(true)}>
        Contact us
      </Button>
      <ContactSalesModal
        isOpen={isContactSalesModalOpen}
        onClose={() => {
          setIsContactSalesModalOpen(false);
        }}
        intendedApiServiceLevel={ApiServiceLevelEnum.ENTERPRISE}
      />
    </>
  );
};

const styles = {
  contactButton: css({
    background: '#34343A !important',
    fontWeight: '400 !important',
  }),
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Button } from '@novu/novui';
import { css } from '@novu/novui/css';
import { ApiServiceLevelEnum } from '@novu/shared';
import { useState } from 'react';
import { ContactSalesModal } from './ContactSalesModal';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/Features.tsx
Tamaño: 13454 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { css } from '@novu/novui/css';
import { Text } from '@novu/novui';
import styled from '@emotion/styled';
import { ApiServiceLevelEnum } from '@novu/shared';
import { IconCheck as _IconCheck } from '@novu/novui/icons';

const TitleCell = styled.div`
  display: flex;
  padding: 16px 24px;
  flex-direction: column;
  align-items: flex-start;
  align-self: stretch;
  flex: 1 0 0;
`;

const Cell = styled.div`
  display: flex;
  padding: 16px;
  flex: 1 0 0;
  align-self: stretch;
  flex-direction: column;
  gap: 8px;
  justify-content: center;
  align-items: center;
`;

const IconCheck = () => (
  <_IconCheck
    className={css({
      color: {
        base: 'typography.text.primary !important',
        _dark: 'typography.text.main !important',
      },
    })}
  />
);

enum LegacySupportedPlansEnum {
  FREE = ApiServiceLevelEnum.FREE,
  BUSINESS = ApiServiceLevelEnum.BUSINESS,
  ENTERPRISE = ApiServiceLevelEnum.ENTERPRISE,
}

enum SupportedPlansEnum {
  FREE = ApiServiceLevelEnum.FREE,
  PRO = ApiServiceLevelEnum.PRO,
  TEAM = ApiServiceLevelEnum.BUSINESS,
  ENTERPRISE = ApiServiceLevelEnum.ENTERPRISE,
}

type FeatureValue = {
  value: React.ReactNode;
};

type Feature<T extends LegacySupportedPlansEnum | SupportedPlansEnum> = {
  label: string;
  isTitle?: boolean;
  isContrast?: boolean;
  values: {
    [K in T]: FeatureValue;
  };
};

const featuresDefinition: Feature<SupportedPlansEnum>[] = [
  {
    label: 'Platform',
    isTitle: true,
    values: {
      [SupportedPlansEnum.FREE]: { value: '' },
      [SupportedPlansEnum.PRO]: { value: '' },
      [SupportedPlansEnum.TEAM]: { value: '' },
      [SupportedPlansEnum.ENTERPRISE]: { value: '' },
    },
  },
  {
    label: 'Max API Requests (RPS)',
    values: {
      [SupportedPlansEnum.FREE]: { value: '60/20/30 per second' },
      [SupportedPlansEnum.PRO]: { value: '240/80/120 per second' },
      [SupportedPlansEnum.TEAM]: { value: '600/200/300 per second' },
      [SupportedPlansEnum.ENTERPRISE]: { value: '6K/2K/3K per second' },
    },
  },
  {
    label: 'Cost per additional 1k events',
    values: {
      [SupportedPlansEnum.FREE]: { value: '-' },
      [SupportedPlansEnum.PRO]: { value: '$1.20' },
      [SupportedPlansEnum.TEAM]: { value: '$1.20' },
      [SupportedPlansEnum.ENTERPRISE]: { value: 'Custom' },
    },
  },
  {
    label: 'Channels supported: Email, In-app, SMS, Chat, Push',
    values: {
      [SupportedPlansEnum.FREE]: { value: <IconCheck /> },
      [SupportedPlansEnum.PRO]: { value: <IconCheck /> },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Subscribers',
    values: {
      [SupportedPlansEnum.FREE]: { value: 'Unlimited' },
      [SupportedPlansEnum.PRO]: { value: 'Unlimited' },
      [SupportedPlansEnum.TEAM]: { value: 'Unlimited' },
      [SupportedPlansEnum.ENTERPRISE]: { value: 'Unlimited' },
    },
  },
  {
    label: 'Max workflows',
    values: {
      [SupportedPlansEnum.FREE]: { value: '20' },
      [SupportedPlansEnum.PRO]: { value: '20' },
      [SupportedPlansEnum.TEAM]: { value: 'Unlimited' },
      [SupportedPlansEnum.ENTERPRISE]: { value: 'Unlimited' },
    },
  },
  {
    label: 'GUI-Based Workflow Management',
    values: {
      [SupportedPlansEnum.FREE]: { value: <IconCheck /> },
      [SupportedPlansEnum.PRO]: { value: <IconCheck /> },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Code-Based Workflow Management',
    values: {
      [SupportedPlansEnum.FREE]: { value: <IconCheck /> },
      [SupportedPlansEnum.PRO]: { value: <IconCheck /> },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Subscriber Management',
    values: {
      [SupportedPlansEnum.FREE]: { value: <IconCheck /> },
      [SupportedPlansEnum.PRO]: { value: <IconCheck /> },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Environments',
    values: {
      [SupportedPlansEnum.FREE]: { value: '2' },
      [SupportedPlansEnum.PRO]: { value: '2' },
      [SupportedPlansEnum.TEAM]: { value: '10' },
      [SupportedPlansEnum.ENTERPRISE]: { value: 'Unlimited' },
    },
  },
  {
    label: 'Multi-org/multi-tenancy',
    values: {
      [SupportedPlansEnum.FREE]: { value: '-' },
      [SupportedPlansEnum.PRO]: { value: '-' },
      [SupportedPlansEnum.TEAM]: { value: 'Q2 2025' },
      [SupportedPlansEnum.ENTERPRISE]: { value: 'Q2 2025' },
    },
  },
  {
    label: 'Provider integrations',
    values: {
      [SupportedPlansEnum.FREE]: { value: 'Unlimited' },
      [SupportedPlansEnum.PRO]: { value: 'Unlimited' },
      [SupportedPlansEnum.TEAM]: { value: 'Unlimited' },
      [SupportedPlansEnum.ENTERPRISE]: { value: 'Unlimited' },
    },
  },
  {
    label: 'Activity Feed retention',
    values: {
      [SupportedPlansEnum.FREE]: { value: '24hr' },
      [SupportedPlansEnum.PRO]: { value: '7 days' },
      [SupportedPlansEnum.TEAM]: { value: '90 days' },
      [SupportedPlansEnum.ENTERPRISE]: { value: 'Custom' },
    },
  },
  {
    label: 'Max Digest Window/Time',
    values: {
      [SupportedPlansEnum.FREE]: { value: '24hr' },
      [SupportedPlansEnum.PRO]: { value: '7 days' },
      [SupportedPlansEnum.TEAM]: { value: '90 days' },
      [SupportedPlansEnum.ENTERPRISE]: { value: 'Custom' },
    },
  },
  {
    label: 'Max Delay Duration',
    values: {
      [SupportedPlansEnum.FREE]: { value: '24hr' },
      [SupportedPlansEnum.PRO]: { value: '7 days' },
      [SupportedPlansEnum.TEAM]: { value: '90 days' },
      [SupportedPlansEnum.ENTERPRISE]: { value: 'Custom' },
    },
  },
  {
    label: 'Block-Based Email Editor',
    values: {
      [SupportedPlansEnum.FREE]: { value: <IconCheck /> },
      [SupportedPlansEnum.PRO]: { value: <IconCheck /> },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Remove Novu branding',
    values: {
      [SupportedPlansEnum.FREE]: { value: '-' },
      [SupportedPlansEnum.PRO]: { value: <IconCheck /> },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Inbox',
    isTitle: true,
    values: {
      [SupportedPlansEnum.FREE]: { value: '' },
      [SupportedPlansEnum.PRO]: { value: '' },
      [SupportedPlansEnum.TEAM]: { value: '' },
      [SupportedPlansEnum.ENTERPRISE]: { value: '' },
    },
  },
  {
    label: 'Inbox Component',
    values: {
      [SupportedPlansEnum.FREE]: { value: <IconCheck /> },
      [SupportedPlansEnum.PRO]: { value: <IconCheck /> },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'User Preferences Component',
    values: {
      [SupportedPlansEnum.FREE]: { value: <IconCheck /> },
      [SupportedPlansEnum.PRO]: { value: <IconCheck /> },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Bell Component',
    values: {
      [SupportedPlansEnum.FREE]: { value: <IconCheck /> },
      [SupportedPlansEnum.PRO]: { value: <IconCheck /> },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Notifications Component',
    values: {
      [SupportedPlansEnum.FREE]: { value: <IconCheck /> },
      [SupportedPlansEnum.PRO]: { value: <IconCheck /> },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Inbox Content Component',
    values: {
      [SupportedPlansEnum.FREE]: { value: <IconCheck /> },
      [SupportedPlansEnum.PRO]: { value: <IconCheck /> },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Snooze functionality',
    values: {
      [SupportedPlansEnum.FREE]: { value: '-' },
      [SupportedPlansEnum.PRO]: { value: 'Up to 90 days' },
      [SupportedPlansEnum.TEAM]: { value: 'Up to 90 days' },
      [SupportedPlansEnum.ENTERPRISE]: { value: 'Custom' },
    },
  },
  {
    label: 'Account administration and security',
    isTitle: true,
    values: {
      [SupportedPlansEnum.FREE]: { value: '' },
      [SupportedPlansEnum.PRO]: { value: '' },
      [SupportedPlansEnum.TEAM]: { value: '' },
      [SupportedPlansEnum.ENTERPRISE]: { value: '' },
    },
  },
  {
    label: 'Max Team Members',
    values: {
      [SupportedPlansEnum.FREE]: { value: '3' },
      [SupportedPlansEnum.PRO]: { value: '3' },
      [SupportedPlansEnum.TEAM]: { value: 'Unlimited' },
      [SupportedPlansEnum.ENTERPRISE]: { value: 'Unlimited' },
    },
  },
  {
    label: 'Role-Based Access Control (RBAC)',
    values: {
      [SupportedPlansEnum.FREE]: { value: '-' },
      [SupportedPlansEnum.PRO]: { value: '-' },
      [SupportedPlansEnum.TEAM]: { value: 'Q2 2025' },
      [SupportedPlansEnum.ENTERPRISE]: { value: 'Q2 2025' },
    },
  },
  {
    label: 'Standard Built-In Authentication (Google, Github)',
    values: {
      [SupportedPlansEnum.FREE]: { value: <IconCheck /> },
      [SupportedPlansEnum.PRO]: { value: <IconCheck /> },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Custom SAML SSO, OIDC, Enterprise Providers',
    values: {
      [SupportedPlansEnum.FREE]: { value: '-' },
      [SupportedPlansEnum.PRO]: { value: '-' },
      [SupportedPlansEnum.TEAM]: { value: '-' },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Multi-Factor Authentication (MFA)',
    values: {
      [SupportedPlansEnum.FREE]: { value: <IconCheck /> },
      [SupportedPlansEnum.PRO]: { value: <IconCheck /> },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Compliance',
    isTitle: true,
    values: {
      [SupportedPlansEnum.FREE]: { value: '' },
      [SupportedPlansEnum.PRO]: { value: '' },
      [SupportedPlansEnum.TEAM]: { value: '' },
      [SupportedPlansEnum.ENTERPRISE]: { value: '' },
    },
  },
  {
    label: 'GDPR',
    values: {
      [SupportedPlansEnum.FREE]: { value: <IconCheck /> },
      [SupportedPlansEnum.PRO]: { value: <IconCheck /> },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: 'Installation dependent' },
    },
  },
  {
    label: 'SOC 2 / ISO 27001 Report',
    values: {
      [SupportedPlansEnum.FREE]: { value: '-' },
      [SupportedPlansEnum.PRO]: { value: '-' },
      [SupportedPlansEnum.TEAM]: { value: <IconCheck /> },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'HIPAA BAA',
    values: {
      [SupportedPlansEnum.FREE]: { value: '-' },
      [SupportedPlansEnum.PRO]: { value: '-' },
      [SupportedPlansEnum.TEAM]: { value: '-' },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Custom Security Reviews',
    values: {
      [SupportedPlansEnum.FREE]: { value: '-' },
      [SupportedPlansEnum.PRO]: { value: '-' },
      [SupportedPlansEnum.TEAM]: { value: '-' },
      [SupportedPlansEnum.ENTERPRISE]: { value: <IconCheck /> },
    },
  },
  {
    label: 'Data Processing Agreements',
    values: {
      [SupportedPlansEnum.FREE]: { value: 'Standard' },
      [SupportedPlansEnum.PRO]: { value: 'Standard' },
      [SupportedPlansEnum.TEAM]: { value: 'Standard' },
      [SupportedPlansEnum.ENTERPRISE]: { value: 'Custom' },
    },
  },
];

export const Features = () => {
  return (
    <div className={styles.featureList}>
      {featuresDefinition.map((feature, index) => (
        <FeatureRow key={index} feature={feature} index={index} />
      ))}
    </div>
  );
};

const FeatureRow = ({
  feature,
  index,
}: {
  feature: Feature<LegacySupportedPlansEnum | SupportedPlansEnum>;
  index: number;
}) => (
  <div className={styles.rowContainer(index % 2 === 1, feature.isTitle)}>
    <TitleCell>
      <Text
        variant={feature.isTitle ? 'strong' : undefined}
        color={feature.isTitle ? 'typography.text.primary' : 'typography.text.secondary'}
      >
        {feature.label}
      </Text>
    </TitleCell>

    {Object.entries(feature.values).map(([plan, value]) => {
      return <Cell key={plan}>{value.value}</Cell>;
    })}
  </div>
);

const styles = {
  featureList: css({
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    alignSelf: 'stretch',
  }),
  rowContainer: (isContrast: boolean | undefined, isHeader: boolean | undefined) =>
    css({
      display: 'flex',
      alignItems: 'flex-start',
      alignSelf: 'stretch',
      background: isContrast ? 'surface.panel' : undefined,
      borderTop: isHeader ? '1px solid #34343A !important' : undefined,
      borderBottom: isHeader ? '1px solid #34343A !important' : undefined,
    }),
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { css } from '@novu/novui/css';
import { Text } from '@novu/novui';
import styled from '@emotion/styled';
import { ApiServiceLevelEnum } from '@novu/shared';
import { IconCheck as _IconCheck } from '@novu/novui/icons';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/FreeTrialBanner.tsx
Tamaño: 3468 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Button, Close, colors, Text, Warning } from '@novu/design-system';
import { Group, useMantineTheme } from '@mantine/core';
import styled from '@emotion/styled';
import { useLocalStorage } from '@mantine/hooks';
import { useNavigate } from 'react-router-dom';
import React, { useMemo, useState } from 'react';
import { ApiServiceLevelEnum } from '@novu/shared';
import { useSubscription } from '../hooks/useSubscription';
import { COLOR_WARNING, pluralizeDaysLeft, WARNING_LIMIT_DAYS } from '../utils/freeTrial.constants';
import { ContactSalesModal } from './ContactSalesModal';
import { capitalize } from '../utils/capitalize';
import { ROUTES } from '../../../constants/routes';

export function FreeTrialBanner() {
  const { colorScheme } = useMantineTheme();
  const isDark = colorScheme === 'dark';
  const { trial, apiServiceLevel } = useSubscription();
  const [freeTrialDismissed, setFreeTrialDismissed] = useLocalStorage({
    key: 'freeTrialDismissed',
    defaultValue: 'false',
  });
  const navigate = useNavigate();
  const plan = useMemo(() => capitalize(apiServiceLevel), [apiServiceLevel]);
  const [isContactSalesModalOpen, setIsContactSalesModalOpen] = useState(false);

  if (freeTrialDismissed === 'true' || !trial.isActive || trial.daysLeft > WARNING_LIMIT_DAYS) {
    return null;
  }

  const dismissBanner = () => {
    setFreeTrialDismissed('true');
  };

  return (
    <>
      <div
        style={{
          width: '100%',
          padding: 8,
          backgroundColor: COLOR_WARNING,
          textAlign: 'center',
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          position: 'relative',
        }}
        data-test-id="free-trial-banner"
      >
        <Group spacing={24}>
          <Group spacing={8}>
            <Warning color={colors.black} />
            <Text color={colors.black}>
              Trial period expires in {pluralizeDaysLeft(trial.daysLeft)}. Upgrade for continued access to {plan}{' '}
              features.
            </Text>
          </Group>
          <Group spacing={20}>
            <Button
              onClick={() => {
                navigate(ROUTES.MANAGE_ACCOUNT_BILLING);
              }}
              size="md"
              style={{
                height: 32,
              }}
              data-test-id="free-trial-banner-upgrade"
            >
              Upgrade
            </Button>

            <Button
              size="md"
              onClick={() => {
                setIsContactSalesModalOpen(true);
              }}
              style={{
                height: 32,
                background: isDark ? '#23232B' : colors.white,
              }}
              variant="outline"
              data-test-id="free-trial-banner-contact-sales"
            >
              Contact sales
            </Button>
          </Group>
        </Group>
        <CloseWrapper onClick={dismissBanner}>
          <Close height={13} width={13} color={colors.black} />
        </CloseWrapper>
      </div>
      <ContactSalesModal
        isOpen={isContactSalesModalOpen}
        onClose={() => {
          setIsContactSalesModalOpen(false);
        }}
        intendedApiServiceLevel={ApiServiceLevelEnum.BUSINESS}
      />
    </>
  );
}

const CloseWrapper = styled.a`
  float: right;
  position: absolute;
  right: 16px;
  top: 17.5px;
  font-size: 10px;
  &:hover {
    cursor: pointer;
  }
  svg {
    width: 13px;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Button, Close, colors, Text, Warning } from '@novu/design-system';
import { Group, useMantineTheme } from '@mantine/core';
import styled from '@emotion/styled';
import { useLocalStorage } from '@mantine/hooks';
import { useNavigate } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/FreeTrialSidebarWidget.tsx
Tamaño: 1892 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Box, MantineColor, Progress, Text } from '@mantine/core';
import { colors, Button } from '@novu/design-system';
import React, { useMemo } from 'react';
import { useNavigate } from 'react-router-dom';
import { useSubscription } from '../hooks/useSubscription';
import { pluralizeDaysLeft, COLOR_WARNING, WARNING_LIMIT_DAYS } from '../utils/freeTrial.constants';
import { IS_EE_AUTH_ENABLED } from '../../../config/index';
import { ROUTES } from '../../../constants/routes';

export const FreeTrialSidebarWidget = () => {
  const { trial } = useSubscription();
  const percentRemaining = useMemo(() => {
    return trial.daysTotal === 0 && trial.daysLeft === 0 ? 0 : Math.round((trial.daysLeft / trial.daysTotal) * 100);
  }, [trial.daysTotal, trial.daysLeft]);

  const navigate = useNavigate();

  if (!trial.isActive) {
    return null;
  }

  const getProgressBarColor = () => {
    if (trial.daysLeft <= WARNING_LIMIT_DAYS) {
      return COLOR_WARNING;
    }
    if (trial.daysLeft > WARNING_LIMIT_DAYS) {
      return colors.success;
    }
  };

  return (
    <Box mt={24} mb={24} data-test-id="free-trial-widget">
      <Text data-test-id="free-trial-widget-text" color={colors.B60} mb={8}>
        {`${pluralizeDaysLeft(trial.daysLeft)} left on your free trial`}
      </Text>
      <Progress
        size="xs"
        data-test-id="free-trial-widget-progress"
        sections={[
          {
            value: 100 - percentRemaining,
            color: getProgressBarColor() as MantineColor,
          },
        ]}
      />
      <Button
        onClick={() => {
          navigate(IS_EE_AUTH_ENABLED ? ROUTES.MANAGE_ACCOUNT_BILLING : ROUTES.BILLING);
        }}
        data-test-id="free-trial-widget-button"
        mt={12}
        fullWidth
        size="md"
        style={{
          height: 32,
        }}
      >
        Upgrade
      </Button>
    </Box>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Box, MantineColor, Progress, Text } from '@mantine/core';
import { colors, Button } from '@novu/design-system';
import React, { useMemo } from 'react';
import { useNavigate } from 'react-router-dom';
import { useSubscription } from '../hooks/useSubscription';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/HighlightsRow.tsx
Tamaño: 1651 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { css } from '@novu/novui/css';
import { Text } from '@novu/novui';
import styled from '@emotion/styled';
import { ApiServiceLevelEnum } from '@novu/shared';

const Cell = styled.div`
  display: flex;
  padding: 24px;
  align-items: flex-start;
  flex: 1 0 0;
  align-self: stretch;
  flex-direction: column;
  gap: 16px;
`;

const descriptions = {
  [ApiServiceLevelEnum.FREE]: 'For testing and small-scale.',
  [ApiServiceLevelEnum.PRO]:
    'Perfect for startups and indie hackers looking to add <Inbox /> and connect to Email and digest engine.',
  [ApiServiceLevelEnum.BUSINESS]:
    'Ideal for teams looking to add <Inbox/> in minutes, and manage system notification experience from one system.',
  [ApiServiceLevelEnum.ENTERPRISE]:
    'For organizations with privacy, and compliance demands. Looking to add the best OS notification technology, while maintaining flexibility.',
};

export const HighlightsRow = () => {
  return <Descriptions />;
};

export const Descriptions = () => {
  return (
    <div className={styles.container}>
      <Cell>
        <Text color="typography.text.secondary">Description</Text>
      </Cell>
      {Object.entries(descriptions).map(([planName, description]) => (
        <Cell key={planName}>
          <Text>{description}</Text>
        </Cell>
      ))}
    </div>
  );
};

const styles = {
  container: css({
    display: 'flex',
    alignItems: 'flex-start',
    alignSelf: 'stretch',
    background: 'surface.panel',
  }),
  list: {
    item: css({
      lineHeight: '24px !important',
    }),
  },
  listBadgeItem: css({
    display: 'flex',
    alignItems: 'center',
    gap: '8px',
  }),
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { css } from '@novu/novui/css';
import { Text } from '@novu/novui';
import styled from '@emotion/styled';
import { ApiServiceLevelEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/HubspotForm.tsx
Tamaño: 5929 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { useEffect } from 'react';
import styled from '@emotion/styled';
import { useMantineTheme, ColorScheme } from '@mantine/core';
import { colors } from '@novu/design-system';
import { HUBSPOT_PORTAL_ID } from '../utils/environment';

declare global {
  interface Window {
    hbspt: any;
  }
}

/**
 * For the full list of available Hubspot Form options:
 *
 * @see https://developers.hubspot.com/docs/methods/forms/advanced_form_options
 */
export type HubspotFormProps<
  TProperties extends Record<string, string>,
  TKey extends keyof TProperties & string = keyof TProperties & string,
> = {
  /**
   * The Hubspot form ID. This can be found in the Hubspot form embed snippet.
   */
  formId: string;
  /**
   * Properties for prepopulating fields. Keys must match the field names created in the Hubspot form.
   */
  properties?: TProperties;
  /**
   * Read-only properties for prepopulating fields. Keys must match the field names created in the Hubspot form.
   */
  readonlyProperties?: Array<TKey>;
  /**
   * The name of the property to focus when the form is ready.
   */
  focussedProperty?: TKey;
  /**
   * Callback function to be called when the form is submitted.
   */
  onFormSubmitted?: (...args: any) => void;

  colorScheme?: ColorScheme;
};

const HUBSPOT_FORMS_URL = 'https://js.hsforms.net/forms/v2.js';
const HUBSPOT_REGION = 'na1';

const cssClass = 'hubspot-form-wrapper';
const StyledHubspotForm = styled.div<{ isDark: boolean }>`
  .${cssClass} {
    color: ${({ isDark }) => (isDark ? colors.B80 : colors.B40)};
    display: flex;
    flex-direction: column;
    gap: 16px;

    /** Column layout */
    .form-columns-1,
    .form-columns-2 {
      min-width: 100%;
      display: flex;
      gap: 20px;

      > * {
        width: 100%;
      }

      .hs-input {
        width: 100%;
      }
    }

    /** Hyperlinks */
    a {
      background-image: ${colors.horizontal};
      background-clip: text;
      -webkit-text-fill-color: transparent;
      text-decoration: none;
    }

    .input {
      input,
      textarea,
      select {
        &:focus-visible {
          outline: none;
          border-color: ${({ isDark }) => (isDark ? colors.white : colors.black)};
        }
      }
    }

    /** Form fields */
    .hs-input {
      appearance: none;
      background-color: transparent;
      border-radius: 7px;
      border: 1px solid ${({ isDark }) => (isDark ? colors.B20 : colors.B80)};
      box-sizing: border-box;
      display: block;
      font-family:
        Lato,
        sans serif;
      font-size: 14px;
      height: 42px;
      line-height: 40px;
      margin: 5px 0px; /* Adjusted margin */
      min-height: 50px;
      padding-left: 14px;
      padding-right: 14px;
      resize: none;
      text-align: left;
      transition: border-color 100ms ease;
      width: 100%;
    }

    /** Form text area */
    .hs-fieldtype-textarea {
      resize: vertical;
      min-height: 100px;
    }

    /** Form button */
    .hs-button {
      appearance: none;
      background-color: transparent;
      background-image: ${colors.horizontal};
      border-radius: 7px;
      border: 0;
      box-sizing: border-box;
      cursor: pointer;
      display: inline-block;
      font-family:
        Lato,
        sans serif;
      font-size: 14px;
      font-weight: 600;
      height: 42px;
      line-height: 1;
      padding-left: 22px;
      padding-right: 22px;
      position: relative;
      color: #fff;
      text-align: right;
      text-decoration: none;
      user-select: none;
      width: auto;
    }

    /** Form field label */
    .hs-form-field label {
      cursor: default;
      display: inline-block;
      font-size: 14px;
      font-weight: 700;
      line-height: 17px;
      margin: 5px 0px;
      word-break: break-word;
    }

    /** Form Submit action alignment */
    .hs-submit .actions {
      display: flex;
      justify-content: flex-end;
    }

    /** Legal consent container */
    .legal-consent-container {
      font-size: 12px;
      color: ${colors.B40};
      line-height: 16px;

      .p {
        margin-top: 0;
        margin-bottom: 0;
      }
    }
  }
`;

export const HubspotForm = <TProperties extends Record<string, string>>(props: HubspotFormProps<TProperties>) => {
  const { colorScheme } = useMantineTheme();
  const isDark = colorScheme === 'dark';
  const elementId = `hubspotForm-${props.formId}`;

  const createForm = () => {
    if (window.hbspt) {
      window.hbspt.forms.create({
        target: `#${elementId}`,
        portalId: HUBSPOT_PORTAL_ID,
        region: HUBSPOT_REGION,
        cssClass,
        onFormReady: (form) => {
          if (props.focussedProperty) {
            const selector = CSS.escape(`${props.focussedProperty}-${props.formId}`);
            const input = form.querySelector(`#${selector}`) as HTMLInputElement;
            if (input) {
              input.focus();
            }
          }
          if (props.readonlyProperties) {
            props.readonlyProperties.forEach((property) => {
              const selector = CSS.escape(`${property}-${props.formId}`);
              const input = form.querySelector(`#${selector}`) as HTMLInputElement;
              if (input) {
                input.setAttribute('readonly', 'true');
              }
            });
          }
        },
        ...props,
      });
    }
  };

  useEffect(() => {
    if (!HUBSPOT_PORTAL_ID) {
      return;
    }

    if (!window.hbspt) {
      const script = document.createElement('script');
      script.src = HUBSPOT_FORMS_URL;
      document.body.appendChild(script);

      script.addEventListener('load', () => {
        createForm();
      });
    } else {
      createForm();
    }
  }, [props]);

  if (!HUBSPOT_PORTAL_ID) {
    return null;
  }

  return (
    <StyledHubspotForm isDark={isDark}>
      <div id={elementId}></div>
    </StyledHubspotForm>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { useEffect } from 'react';
import styled from '@emotion/styled';
import { useMantineTheme, ColorScheme } from '@mantine/core';
import { colors } from '@novu/design-system';
import { HUBSPOT_PORTAL_ID } from '../utils/environment';
/**
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/Plan.tsx
Tamaño: 1616 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Center, Loader, useMantineTheme } from '@mantine/core';
import { colors, errorMessage, successMessage } from '@novu/design-system';
import { useEffect, useState } from 'react';
import { PlanSwitcher } from './PlanSwitcher';
import { useSubscriptionContext } from './SubscriptionProvider';
import { ActivePlanBanner } from './ActivePlanBanner';
import { PlansRow } from './PlansRow';
import { HighlightsRow } from './HighlightsRow';
import { Features } from './Features';

export const Plan = () => {
  const theme = useMantineTheme();
  const { isLoading, billingInterval: subscriptionBillingInterval } = useSubscriptionContext();
  const [selectedBillingInterval, setSelectedBillingInterval] = useState<'month' | 'year'>(
    subscriptionBillingInterval || 'month'
  );

  useEffect(() => {
    const checkoutResult = new URLSearchParams(window.location.search).get('result');

    if (checkoutResult === 'success') {
      successMessage('Payment was successful.');
    }

    if (checkoutResult === 'canceled') {
      errorMessage('Order canceled.');
    }
  }, []);

  if (isLoading) {
    return (
      <Center>
        <Loader color={colors.error} size={32} />
      </Center>
    );
  }

  return (
    <>
      <ActivePlanBanner selectedBillingInterval={selectedBillingInterval} />
      <PlanSwitcher
        theme={theme}
        selectedBillingInterval={selectedBillingInterval}
        setSelectedBillingInterval={setSelectedBillingInterval}
      />
      <PlansRow theme={theme} selectedBillingInterval={selectedBillingInterval} />
      <HighlightsRow />
      <Features />
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Center, Loader, useMantineTheme } from '@mantine/core';
import { colors, errorMessage, successMessage } from '@novu/design-system';
import { useEffect, useState } from 'react';
import { PlanSwitcher } from './PlanSwitcher';
import { useSubscriptionContext } from './SubscriptionProvider';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/PlanActionButton.tsx
Tamaño: 2674 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Button } from '@novu/novui';
import { css } from '@novu/novui/css';
import { ApiServiceLevelEnum } from '@novu/shared';
import { useMutation } from '@tanstack/react-query';
import { errorMessage, When } from '@novu/design-system';
import { api } from '../../../api';
import { useSubscriptionContext } from './SubscriptionProvider';
import { useSegment } from '../../../components/providers/SegmentProvider';

const checkoutUrl = '/v1/billing/checkout-session';
const billingPortalUrl = '/v1/billing/portal';

export const PlanActionButton = ({
  selectedBillingInterval,
  checkoutServiceLevel,
}: {
  selectedBillingInterval: 'month' | 'year';
  checkoutServiceLevel?: ApiServiceLevelEnum;
}) => {
  const segment = useSegment();
  const { isActive, trial, apiServiceLevel } = useSubscriptionContext();
  const isPaidSubscriptionActive =
    isActive &&
    !trial.isActive &&
    apiServiceLevel !== ApiServiceLevelEnum.FREE &&
    apiServiceLevel === checkoutServiceLevel;

  const { mutateAsync: checkout, isLoading: isCheckingOut } = useMutation<{ stripeCheckoutUrl: string }, Error>(
    () =>
      api.post(checkoutUrl, {
        billingInterval: selectedBillingInterval,
        apiServiceLevel: checkoutServiceLevel,
      }),
    {
      onSuccess: (data) => {
        window.location.href = data.stripeCheckoutUrl;
      },
      onError: (e: Error) => {
        errorMessage(e.message || 'Unexpected error');
      },
    }
  );

  const { mutateAsync: goToPortal, isLoading: isGoingToPortal } = useMutation<string, Error>(
    () => api.get(billingPortalUrl),
    {
      onSuccess: (url) => {
        window.location.href = url;
      },
      onError: (e: Error) => {
        errorMessage(e.message || 'Unexpected error');
      },
    }
  );

  return (
    <>
      <When truthy={isPaidSubscriptionActive}>
        <Button
          className={styles.planActionButton}
          loading={isGoingToPortal}
          data-test-id={`plan-${apiServiceLevel}-manage`}
          onClick={() => {
            segment.track(`Manage Subscription Clicked - Plans List`);
            goToPortal();
          }}
        >
          Manage subscription
        </Button>
      </When>
      <When truthy={!isPaidSubscriptionActive && checkoutServiceLevel}>
        <Button
          className={styles.planActionButton}
          loading={isCheckingOut}
          data-test-id={`plan-${checkoutServiceLevel}-upgrade`}
          onClick={() => checkout()}
        >
          Upgrade plan
        </Button>
      </When>
    </>
  );
};

const styles = {
  planActionButton: css({
    background: '#2A92E7 !important',
    fontWeight: '400 !important',
  }),
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Button } from '@novu/novui';
import { css } from '@novu/novui/css';
import { ApiServiceLevelEnum } from '@novu/shared';
import { useMutation } from '@tanstack/react-query';
import { errorMessage, When } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/PlanSwitcher.tsx
Tamaño: 2599 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { MantineTheme, Tabs, useMantineTheme } from '@mantine/core';
import { Title } from '@novu/novui';
import { css } from '@novu/novui/css';

export const PlanSwitcher = ({
  theme,
  selectedBillingInterval,
  setSelectedBillingInterval,
}: {
  theme: MantineTheme;
  selectedBillingInterval: 'month' | 'year';
  setSelectedBillingInterval: (value: 'month' | 'year') => void;
}) => (
  <div className={styles.planSwitcherContainer(theme)}>
    <Title variant="section" className={styles.planHeaderTitle}>
      All plans
    </Title>
    <div className={styles.tabsWrapper}>
      <Tabs classNames={styles.tabs} onTabChange={setSelectedBillingInterval} value={selectedBillingInterval}>
        <Tabs.List>
          <Tabs.Tab className={styles.tab(theme)} value="month">
            Monthly
          </Tabs.Tab>
          <Tabs.Tab className={styles.tab(theme)} value="year">
            Annually <span>10% off</span>
          </Tabs.Tab>
        </Tabs.List>
      </Tabs>
    </div>
  </div>
);

const styles = {
  planSwitcherContainer: (theme: MantineTheme) =>
    css({
      position: 'relative',
      display: 'flex',
      height: '40px',
      justifyContent: 'space-between',
      alignItems: 'flex-end',
      alignSelf: 'stretch',
      borderBottom: theme.colorScheme === 'dark' ? '1px solid #34343A' : '1px solid #e4e2e4ff',
    }),
  planHeaderTitle: css({
    position: 'absolute',
    left: '0',
    top: '0',
  }),
  tabsWrapper: css({
    flex: 1,
    display: 'flex',
    justifyContent: 'center',
  }),
  tabs: {
    tabsList: css({
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'flex-end',
      flex: '1 0 0',
      borderBottom: 'none !important',
    }),
  },
  tab: (theme: MantineTheme) =>
    css({
      padding: '12px !important',
      gap: '8px !important',
      color: 'typography.text.secondary !important',
      fontSize: '14px !important',
      lineHeight: '16px !important',
      '& span': {
        color: 'mode.local.middle',
      },
      '&[data-active="true"]': {
        color: 'typography.text.main !important',
        borderBottom: theme.colorScheme === 'dark' ? '1px solid #FFF !important' : '1px solid #e4e2e4ff !important',
        fontWeight: '600 !important',

        '& span': {
          color: 'mode.local.middle',
          fontWeight: '600',
        },
      },
      '&:hover': {
        color: 'typography.text.main !important',
        backgroundColor: 'transparent !important',

        '& span': {
          color: 'mode.local.middle',
          fontWeight: '600',
        },
      },
    }),
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { MantineTheme, Tabs, useMantineTheme } from '@mantine/core';
import { Title } from '@novu/novui';
import { css } from '@novu/novui/css';
export const PlanSwitcher = ({
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/PlansRow.tsx
Tamaño: 3425 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { css } from '@novu/novui/css';
import { Title, Text } from '@novu/novui';
import styled from '@emotion/styled';
import { MantineTheme } from '@mantine/core';
import { ApiServiceLevelEnum, FeatureFlagsKeysEnum } from '@novu/shared';
import { Badge } from './Badge';
import { PlanActionButton } from './PlanActionButton';
import { ContactUsButton } from './ContactUsButton';

const Cell = styled.div`
  display: flex;
  padding: 24px;
  align-items: flex-start;
  flex: 1 0 0;
  align-self: stretch;
  flex-direction: column;
  gap: 16px;
`;

const PriceDisplay = ({ price, subtitle, events }) => (
  <div>
    <div className={styles.priceDisplay}>
      <Title>{price}</Title>
      <Text style={{ paddingBottom: '2px' }}>{subtitle}</Text>
    </div>
    <Text color="typography.text.secondary">{events}</Text>
  </div>
);

export const PlansRow = ({
  theme,
  selectedBillingInterval,
}: {
  theme: MantineTheme;
  selectedBillingInterval: 'month' | 'year';
}) => {
  const businessPlanPrice = selectedBillingInterval === 'year' ? '$2,700' : '$250';
  const proPlanPrice = selectedBillingInterval === 'year' ? '$330' : '$30';

  return (
    <div className={styles.container(theme)}>
      <Cell>
        <Title variant="subsection" color="typography.text.secondary">
          Plans
        </Title>
      </Cell>
      <Cell>
        <Title variant="subsection" color="typography.text.primary">
          Free
        </Title>
        <PriceDisplay price="$0" subtitle="free forever" events="10,000 events per month" />
      </Cell>
      <Cell>
        <Title
          variant="subsection"
          color="typography.text.primary"
          style={{ display: 'flex', alignItems: 'center', gap: '8px' }}
        >
          Pro <Badge label="Popular" />
        </Title>
        <PriceDisplay
          price={proPlanPrice}
          subtitle={`billed ${selectedBillingInterval === 'year' ? 'annually' : 'monthly'}`}
          events="30,000 events per month"
        />
        <PlanActionButton
          selectedBillingInterval={selectedBillingInterval}
          checkoutServiceLevel={ApiServiceLevelEnum.PRO}
        />
      </Cell>
      <Cell>
        <Title
          variant="subsection"
          color="typography.text.primary"
          style={{ display: 'flex', alignItems: 'center', gap: '8px' }}
        >
          Team
        </Title>
        <PriceDisplay
          price={businessPlanPrice}
          subtitle={`billed ${selectedBillingInterval === 'year' ? 'annually' : 'monthly'}`}
          events="250,000 events per month"
        />
        <PlanActionButton
          selectedBillingInterval={selectedBillingInterval}
          checkoutServiceLevel={ApiServiceLevelEnum.BUSINESS}
        />
      </Cell>
      <Cell style={{ justifyContent: 'space-between' }}>
        <Title variant="subsection" color="typography.text.primary">
          Enterprise
        </Title>
        <Text color="typography.text.secondary">Custom pricing, billing, and extended services.</Text>
        <ContactUsButton />
      </Cell>
    </div>
  );
};

const styles = {
  container: (theme: MantineTheme) =>
    css({
      display: 'flex',
      alignItems: 'flex-start',
      alignSelf: 'stretch',
      borderBottom: theme.colorScheme === 'dark' ? '1px solid #34343A' : '1px solid #e4e2e4ff',
    }),

  priceDisplay: css({
    display: 'flex',
    alignItems: 'flex-end',
    gap: '4px',
  }),
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { css } from '@novu/novui/css';
import { Title, Text } from '@novu/novui';
import styled from '@emotion/styled';
import { MantineTheme } from '@mantine/core';
import { ApiServiceLevelEnum, FeatureFlagsKeysEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/SubscriptionProvider.tsx
Tamaño: 1054 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { useContext } from 'react';
import { ApiServiceLevelEnum } from '@novu/shared';
import { useSubscription, UseSubscriptionType } from '../hooks/useSubscription';

export type { UseSubscriptionType } from '../hooks/useSubscription';

const SubscriptionContext = React.createContext<UseSubscriptionType>({
  isLoading: false,
  apiServiceLevel: ApiServiceLevelEnum.FREE,
  isActive: false,
  hasPaymentMethod: false,
  status: 'trialing',
  currentPeriodStart: null,
  currentPeriodEnd: null,
  billingInterval: null,
  events: {
    current: 0,
    included: 0,
  },
  trial: {
    isActive: false,
    start: new Date().toISOString(),
    end: new Date().toISOString(),
    daysTotal: 0,
    daysLeft: 0,
  },
  cancelAt: null,
});

export const useSubscriptionContext = () => useContext(SubscriptionContext);

export const SubscriptionProvider = ({ children }: { children: React.ReactNode }) => {
  const props = useSubscription();

  return <SubscriptionContext.Provider value={{ ...props }}>{children}</SubscriptionContext.Provider>;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { useContext } from 'react';
import { ApiServiceLevelEnum } from '@novu/shared';
import { useSubscription, UseSubscriptionType } from '../hooks/useSubscription';
export type { UseSubscriptionType } from '../hooks/useSubscription';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/UpgradePlanBanner.tsx
Tamaño: 1845 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Stack, useMantineTheme } from '@mantine/core';
import { Button, colors, Text, When } from '@novu/design-system';
import { ApiServiceLevelEnum } from '@novu/shared';
import { useSubscription } from '../hooks/useSubscription';
import { ContactSalesModal } from './ContactSalesModal';
import { ContactSalesButton } from './ContactSalesButton';

export function UpgradePlanBanner({ FeatureActivatedBanner }: { FeatureActivatedBanner: React.FC<any> }) {
  const { colorScheme } = useMantineTheme();
  const navigate = useNavigate();
  const [isContactSalesModalOpen, setIsContactSalesModalOpen] = useState(false);
  const { apiServiceLevel } = useSubscription();

  const isDark = colorScheme === 'dark';
  const showUpgrade = apiServiceLevel === ApiServiceLevelEnum.FREE;

  return (
    <>
      <Stack
        spacing={8}
        style={{
          borderRadius: '7px',
          marginBottom: '24px',
          padding: '24px',
          background: isDark ? colors.B20 : colors.B98,
          alignItems: 'center',
        }}
      >
        <When truthy={showUpgrade}>
          <Text mb={8} align={'center'} color={colors.B60}>
            Utilize i18n localization for translating notifications
          </Text>
          <Button onClick={() => navigate('/settings/billing')}>Upgrade plan</Button>
          <ContactSalesButton onContactSales={() => setIsContactSalesModalOpen(true)} />
        </When>
        <When truthy={!showUpgrade}>
          <FeatureActivatedBanner />
        </When>
      </Stack>

      <ContactSalesModal
        isOpen={isContactSalesModalOpen}
        onClose={() => {
          setIsContactSalesModalOpen(false);
        }}
        intendedApiServiceLevel={ApiServiceLevelEnum.BUSINESS}
      />
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Stack, useMantineTheme } from '@mantine/core';
import { Button, colors, Text, When } from '@novu/design-system';
import { ApiServiceLevelEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/components/UsageProgress.tsx
Tamaño: 3065 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Text } from '@novu/novui';
import { Progress } from '@mantine/core';
import { css } from '@novu/novui/css';
import { IconError, IconWarning } from '@novu/novui/icons';
import { ApiServiceLevelEnum } from '@novu/shared';

export const UsageProgress = ({ apiServiceLevel, currentEvents, maxEvents }) => {
  const usagePercentage = (currentEvents / maxEvents) * 100;
  const color = getColorByUsagePercentage(usagePercentage);

  return (
    <div className={styles.usageProgress}>
      <WarningMessage usagePercentage={usagePercentage} apiServiceLevel={apiServiceLevel} />
      <Progress size="xs" value={usagePercentage} color={color} className={styles.progressBar} />
      <div className={styles.progressLegend}>
        <Text className={styles.legendItem}>0</Text>
        <Text className={styles.legendItem}>{maxEvents?.toLocaleString()}</Text>
      </div>
    </div>
  );
};

const WarningMessage = ({ usagePercentage, apiServiceLevel }) => {
  const color = getColorByUsagePercentage(usagePercentage);
  const { message, Icon } = getWarningContent(usagePercentage, apiServiceLevel);

  return message ? (
    <Text className={styles.warningMessage} style={{ color }}>
      {Icon && <Icon className={styles.warningIcon} size={16} style={{ color }} />}
      {message}
    </Text>
  ) : null;
};

const getWarningContent = (usagePercentage: number, apiServiceLevel: string) => {
  const isFreePlan = apiServiceLevel === ApiServiceLevelEnum.FREE;
  const isOverLimit = usagePercentage >= 100;
  const isNearLimit = usagePercentage >= 90;

  if (isOverLimit) {
    return {
      message: isFreePlan ? 'Notifications paused! Please upgrade.' : 'Plan free notifications limit reached.',
      Icon: IconError,
    };
  }

  if (isNearLimit) {
    return {
      message: 'Plan notifications limit almost reached!',
      Icon: IconWarning,
    };
  }

  return { message: '', Icon: null };
};

const getColorByUsagePercentage = (usagePercentage: number) => {
  if (usagePercentage >= 100) return '#F2555A';
  if (usagePercentage >= 90) return '#FFB224';
  return 'green';
};

const styles = {
  usageProgress: css({
    display: 'flex',
    height: '44px',
    flexDirection: 'column',
    justifyContent: 'flex-end',
    alignItems: 'flex-start',
    gap: '4px',
    alignSelf: 'stretch',
  }),
  warningMessage: css({
    display: 'flex',
    alignItems: 'center',
    fontSize: '12px',
    fontWeight: '400',
    lineHeight: '16px',
    gap: '4px',
  }),
  warningIcon: css({
    display: 'flex',
    alignItems: 'center',
  }),
  progressBar: css({
    display: 'flex',
    height: '4px',
    flexDirection: 'column',
    alignItems: 'flex-start',
    alignSelf: 'stretch',
    color: 'pink',
  }),
  progressLegend: css({
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'flex-start',
    alignSelf: 'stretch',
  }),
  legendItem: css({
    display: 'flex',
    alignItems: 'flex-start',
    gap: '4px',
    color: 'typography.text.secondary',
    fontSize: '12px',
    fontWeight: '600',
    lineHeight: '16px',
  }),
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Text } from '@novu/novui';
import { Progress } from '@mantine/core';
import { css } from '@novu/novui/css';
import { IconError, IconWarning } from '@novu/novui/icons';
import { ApiServiceLevelEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/hooks/useSubscription.ts
Tamaño: 1978 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import { useMemo } from 'react';
import { differenceInDays, isSameDay } from 'date-fns';
import { ApiServiceLevelEnum, GetSubscriptionDto } from '@novu/shared';
import { useAuth } from '../../../hooks/useAuth';
import { api } from '../../../api';

const today = new Date();

export type UseSubscriptionType = GetSubscriptionDto & { trial: { daysLeft: number }; isLoading: boolean };

export const useSubscription = () => {
  const { currentOrganization } = useAuth();

  const { data: subscription, isLoading: isLoadingSubscription } = useQuery<GetSubscriptionDto>(
    ['billing-subscription', currentOrganization?._id],
    () => api.get('/v1/billing/subscription'),
    {
      enabled: !!currentOrganization,
      initialData: {
        apiServiceLevel: ApiServiceLevelEnum.FREE,
        isActive: false,
        hasPaymentMethod: false,
        status: 'trialing',
        currentPeriodStart: null,
        currentPeriodEnd: null,
        billingInterval: null,
        events: {
          current: 0,
          included: 0,
        },
        trial: {
          isActive: false,
          start: today.toISOString(),
          end: today.toISOString(),
          daysTotal: 0,
        },
        cancelAt: null,
      },
      select: (data) => {
        return {
          ...data,
          events: {
            ...data.events,
            // if included is null, customer doesn't have a valid metered subscription, default to 0
            included: data.events.included ?? 0,
          },
        };
      },
    }
  );

  const daysLeft = useMemo(() => {
    if (!subscription?.trial.end) return 0;

    return isSameDay(new Date(subscription.trial.end), today)
      ? 0
      : differenceInDays(new Date(subscription.trial.end), today);
  }, [subscription.trial.end]);

  return {
    isLoading: isLoadingSubscription,
    ...subscription,
    trial: {
      ...subscription.trial,
      daysLeft,
    },
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useSubscription())
 - daysLeft(useMemo(())
Declaraciones 'export' encontradas:
- export  type
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/pages/BillingPage.tsx
Tamaño: 467 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { useEffect } from 'react';
import { Plan } from '../components/Plan';
import { SubscriptionProvider } from '../components/SubscriptionProvider';
import { useSegment } from '../../../components/providers/SegmentProvider';

export const BillingPage = () => {
  const segment = useSegment();

  useEffect(() => {
    segment.track('Billing Page Viewed');
  }, []);

  return (
    <SubscriptionProvider>
      <Plan />
    </SubscriptionProvider>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { useEffect } from 'react';
import { Plan } from '../components/Plan';
import { SubscriptionProvider } from '../components/SubscriptionProvider';
import { useSegment } from '../../../components/providers/SegmentProvider';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/utils/capitalize.ts
Tamaño: 148 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export const capitalize = (text: string) => {
  if (typeof text !== 'string') return '';

  return text.charAt(0).toUpperCase() + text.slice(1);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - capitalize(text: string))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/utils/environment.ts
Tamaño: 334 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

declare global {
  interface Window {
    _env_: Record<string, string | undefined>;
  }
}

export const STRIPE_CLIENT_KEY =
  window._env_.REACT_APP_STRIPE_CLIENT_KEY || process.env.REACT_APP_STRIPE_CLIENT_KEY || '';
export const HUBSPOT_PORTAL_ID = window._env_.REACT_APP_HUBSPOT_EMBED || process.env.REACT_APP_HUBSPOT_EMBED || '';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/utils/formatCurrency.ts
Tamaño: 108 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export const formatCurrency = (num: number) => num.toLocaleString(undefined, { minimumFractionDigits: 2 });


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - formatCurrency(num: number))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/utils/freeTrial.constants.ts
Tamaño: 205 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export const COLOR_WARNING = '#FDE044';

export const WARNING_LIMIT_DAYS = 3;

export const pluralizeDaysLeft = (numberOfDays: number) => {
  return `${numberOfDays} day${numberOfDays > 1 ? 's' : ''}`;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - pluralizeDaysLeft(numberOfDays: number))
Declaraciones 'export' encontradas:
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/utils/hubspot.constants.ts
Tamaño: 126 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export const HUBSPOT_FORM_IDS: Record<string, string> = {
  UPGRADE_CONTACT_SALES: '297d0b87-4c09-4ccf-a74c-28fd5e3b37f6',
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/billing/utils/plansColumnWidths.ts
Tamaño: 219 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export type PlanType = 'plan' | 'free' | 'business' | 'enterprise';

export const PLANS_COLUMN_WIDTH: Record<PlanType, string> = Object.freeze({
  plan: '20%',
  free: '17%',
  business: '35%',
  enterprise: '28%',
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  type
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/clerk/EnterpriseAuthRoutes.tsx
Tamaño: 1569 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { SignedIn, SignedOut } from '@clerk/clerk-react';
import { Navigate, Route } from 'react-router-dom';
import { PublicPageLayout } from '../../components/layout/components/PublicPageLayout';
import { ROUTES } from '../../constants/routes';
import OrganizationListPage from './pages/OrganizationListPage';
import ManageAccountPage from './pages/ManageAccountPage';
import SignInPage from './pages/SignInPage';
import SignUpPage from './pages/SignUpPage';
import { PrivatePageLayout } from '../../components/layout/components/PrivatePageLayout';

const EnterprisePublicAuthLayout = () => {
  return (
    <SignedOut>
      <PublicPageLayout />
    </SignedOut>
  );
};

// private but we want appearance of public layout
const EnterprisePrivateAuthLayout = () => {
  return (
    <>
      <SignedIn>
        <PublicPageLayout />
      </SignedIn>
      <SignedOut>
        <Navigate to={ROUTES.AUTH_LOGIN} replace />
      </SignedOut>
    </>
  );
};

export const EnterpriseAuthRoutes = () => {
  return (
    <>
      <Route element={<EnterprisePublicAuthLayout />}>
        <Route path={`${ROUTES.AUTH_SIGNUP}/*`} element={<SignUpPage />} />
        <Route path={`${ROUTES.AUTH_LOGIN}/*`} element={<SignInPage />} />
      </Route>
      <Route element={<EnterprisePrivateAuthLayout />}>
        <Route path={ROUTES.AUTH_SIGNUP_ORGANIZATION_LIST} element={<OrganizationListPage />} />
      </Route>
      <Route element={<PrivatePageLayout />}>
        <Route path="/manage-account/:tabValue" element={<ManageAccountPage />} />
      </Route>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { SignedIn, SignedOut } from '@clerk/clerk-react';
import { Navigate, Route } from 'react-router-dom';
import { PublicPageLayout } from '../../components/layout/components/PublicPageLayout';
import { ROUTES } from '../../constants/routes';
import OrganizationListPage from './pages/OrganizationListPage';
// private but we want appearance of public layout
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/clerk/index.ts
Tamaño: 139 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './components/UserProfileButton';
export * from './components/OrganizationSwitcher';
export * from './EnterpriseAuthRoutes';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/clerk/components/EnterprisePrivatePageLayout.tsx
Tamaño: 456 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { SignedIn, SignedOut } from '@clerk/clerk-react';
import { Navigate } from 'react-router-dom';
import { PrivatePageLayout } from '../../../components/layout/components/PrivatePageLayout';
import { ROUTES } from '../../../constants/routes';

export const EnterprisePrivatePageLayout = () => (
  <>
    <SignedIn>
      <PrivatePageLayout />
    </SignedIn>
    <SignedOut>
      <Navigate to={ROUTES.AUTH_LOGIN} replace />
    </SignedOut>
  </>
);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { SignedIn, SignedOut } from '@clerk/clerk-react';
import { Navigate } from 'react-router-dom';
import { PrivatePageLayout } from '../../../components/layout/components/PrivatePageLayout';
import { ROUTES } from '../../../constants/routes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/clerk/components/OrganizationSwitcher.tsx
Tamaño: 1204 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { OrganizationSwitcher as ClerkOrganizationSwitcher } from '@clerk/clerk-react';
import { token } from '@novu/novui/tokens';
import { ROUTES } from '../../../constants/routes';

const OrganizationSwitcherAppearance = {
  elements: {
    organizationSwitcherTrigger: {
      paddingInline: token('spacing.125'),
      width: '240px',
      height: '52px',
      justifyContent: 'space-between',
      color: 'var(--nv-colors-typography-text-secondary) !important',
      '&:hover, &:focus, &:active': {
        color: 'var(--nv-colors-typography-text-main) !important',
      },
    },
    organizationSwitcherPopoverActionButton__manageOrganization: {
      display: 'none',
    },
    organizationPreviewMainIdentifier: {
      fontFamily: 'var(--nv-fonts-system)',
      fontWeight: 'var(--nv-font-weights-strong)',
      fontSize: 'var(--nv-font-sizes-88)',
    },
  },
};

export function OrganizationSwitcher() {
  const redirectUrl = window.location.pathname.includes('workflows/edit') ? ROUTES.WORKFLOWS : undefined;

  return (
    <ClerkOrganizationSwitcher
      hidePersonal
      appearance={OrganizationSwitcherAppearance}
      afterSelectOrganizationUrl={redirectUrl}
    />
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { OrganizationSwitcher as ClerkOrganizationSwitcher } from '@clerk/clerk-react';
import { token } from '@novu/novui/tokens';
import { ROUTES } from '../../../constants/routes';
const OrganizationSwitcherAppearance = {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/clerk/components/UserProfileButton.tsx
Tamaño: 792 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { UserButton } from '@clerk/clerk-react';
import { IconBolt } from '@novu/novui/icons';
import { ROUTES } from '../../../constants/routes';
import { useNewDashboardOptIn } from '../../../hooks/useNewDashboardOptIn';
import { WEB_APP_URL } from '../../../config';

export function UserProfileButton() {
  const { optIn } = useNewDashboardOptIn();

  return (
    <UserButton
      afterSignOutUrl={`${WEB_APP_URL}${ROUTES.AUTH_LOGIN}`}
      userProfileUrl={ROUTES.MANAGE_ACCOUNT_USER_PROFILE}
    >
      <UserButton.MenuItems>
        <UserButton.Action
          label="Try out the new V2 Dashboard"
          labelIcon={<IconBolt size="16" color="var(--nv-colors-typography-text-main)" />}
          onClick={optIn}
        />
      </UserButton.MenuItems>
    </UserButton>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { UserButton } from '@clerk/clerk-react';
import { IconBolt } from '@novu/novui/icons';
import { ROUTES } from '../../../constants/routes';
import { useNewDashboardOptIn } from '../../../hooks/useNewDashboardOptIn';
import { WEB_APP_URL } from '../../../config';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/clerk/pages/ManageAccountPage.styles.ts
Tamaño: 2428 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { css } from '@novu/novui/css';

export const clerkComponentAppearance = {
  elements: {
    navbar: { display: 'none' },
    navbarMobileMenuRow: { display: 'none !important' },
    cardBox: {
      display: 'block',
      width: 'full',
      height: 'full',
      boxShadow: 'none',
    },
    selectButton__role: {
      visibility: 'hidden',
    },
    formFieldRow__role: {
      visibility: 'hidden',
    },
  },
};

export const modalStyles = {
  modal: css({
    borderRadius: '150 !important',
    backgroundColor: 'surface.panel !important',
    padding: '0 !important',
    width: '[90%] !important',
    height: 'full !important',
  }),
  body: css({ height: 'full !important' }),
  header: css({ marginBottom: '0 !important' }),
  close: css({
    position: 'fixed !important',
    right: '75 !important',
    top: '[10px] !important',
    zIndex: 'docked !important',
  }),
};

export const titleTab = css({
  fontWeight: 'strong',
  color: 'typography.text.main !important',
  fontSize: '150 !important',
  lineHeight: '175 !important',
  opacity: '100 !important',
  margin: '0 !important',
  border: '0 !important',
  padding: '150 !important',
  '&:hover': {
    color: 'typography.text.main !important',
    backgroundColor: 'unset !important',
    borderColor: 'surface.panel !important',
    cursor: 'unset !important',
  },
});

export const billingTitle = css({
  fontSize: '125',
  letterSpacing: '0',
  lineHeight: '175',
  marginBottom: '150',
});

export const normalTabStyle = css({
  fontWeight: 'strong',
  fontSize: '88 !important',
  color: 'typography.text.secondary !important',
  py: '50 !important',
  px: '75 !important',
  margin: '25 !important',
  border: 'unset !important',
  borderRadius: '50 !important',
  minWidth: 'userSettings.buttonWidth',
  '&:hover': {
    color: 'typography.text.main !important',
    backgroundColor: 'surface.panelSubsection !important',
  },
  '&[data-active="true"]': {
    color: 'typography.text.main !important',
    backgroundColor: 'surface.panelSubsection !important',
  },
});

export const tabsStyles = {
  root: css({ height: 'full' }),
  panel: css({
    padding: '150',
    borderRadius: 'l',
    backgroundColor: 'surface.page',
    overflowY: 'auto',
  }),
  tabsList: css({
    borderRight: 'unset !important',
  }),
  tabIcon: css({
    marginRight: '50 !important',
  }),
};

export const tabIconStyle = css({ color: 'inherit' });


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/clerk/pages/ManageAccountPage.tsx
Tamaño: 4611 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { OrganizationProfile, UserProfile } from '@clerk/clerk-react';
import { Modal, Tabs } from '@mantine/core';
import {
  IconAdminPanelSettings,
  IconCreditCard,
  IconGroups,
  IconLocalActivity,
  IconManageAccounts,
  IconRoomPreferences,
} from '@novu/novui/icons';
import { FeatureFlagsKeysEnum } from '@novu/shared';
import { useNavigate, useParams } from 'react-router-dom';
import { MANAGE_ACCOUNT_ROUTE_SEGMENTS, ROUTES } from '../../../constants/routes';
import { useFeatureFlag } from '../../../hooks/useFeatureFlag';
import { BrandingPage } from '../../../pages/brand/BrandingPage';
import { BillingPage } from '../../billing/pages/BillingPage';
import { Title } from '@novu/novui';
import { OrganizationSettings } from '../../../components/settings/OrganizationSettings';
import {
  billingTitle,
  clerkComponentAppearance,
  modalStyles,
  normalTabStyle,
  tabIconStyle,
  tabsStyles,
  titleTab,
} from './ManageAccountPage.styles';

export default function ManageAccountPage() {
  const navigate = useNavigate();
  const { tabValue } = useParams();
  const isV2Enabled = useFeatureFlag(FeatureFlagsKeysEnum.IS_V2_ENABLED);

  return (
    <Modal
      classNames={modalStyles}
      opened
      title={undefined}
      onClose={() => {
        navigate(ROUTES.WORKFLOWS);
      }}
    >
      <Tabs
        classNames={tabsStyles}
        value={tabValue}
        onTabChange={(value) => navigate(`${ROUTES.MANAGE_ACCOUNT_SEGMENT}${value}`)}
        orientation="vertical"
      >
        <Tabs.List>
          <Tabs.Tab disabled value="title" className={titleTab}>
            Settings
          </Tabs.Tab>
          <Tabs.Tab
            value={MANAGE_ACCOUNT_ROUTE_SEGMENTS.USER_PROFILE}
            className={normalTabStyle}
            icon={<IconManageAccounts className={tabIconStyle} />}
          >
            User profile
          </Tabs.Tab>
          <Tabs.Tab
            value={MANAGE_ACCOUNT_ROUTE_SEGMENTS.ACCESS_SECURITY}
            className={normalTabStyle}
            icon={<IconAdminPanelSettings className={tabIconStyle} />}
          >
            Access security
          </Tabs.Tab>
          <Tabs.Tab
            value={MANAGE_ACCOUNT_ROUTE_SEGMENTS.ORGANIZATION}
            className={normalTabStyle}
            icon={<IconRoomPreferences className={tabIconStyle} />}
          >
            Organization
          </Tabs.Tab>
          <Tabs.Tab
            value={MANAGE_ACCOUNT_ROUTE_SEGMENTS.TEAM_MEMBERS}
            className={normalTabStyle}
            icon={<IconGroups className={tabIconStyle} />}
          >
            Team members
          </Tabs.Tab>
          {!isV2Enabled && (
            <Tabs.Tab
              value={MANAGE_ACCOUNT_ROUTE_SEGMENTS.BRANDING}
              className={normalTabStyle}
              icon={<IconLocalActivity className={tabIconStyle} />}
            >
              Branding
            </Tabs.Tab>
          )}
          <Tabs.Tab
            value={MANAGE_ACCOUNT_ROUTE_SEGMENTS.BILLING}
            className={normalTabStyle}
            icon={<IconCreditCard className={tabIconStyle} />}
          >
            Plans & Billing
          </Tabs.Tab>
        </Tabs.List>

        <Tabs.Panel value={MANAGE_ACCOUNT_ROUTE_SEGMENTS.USER_PROFILE}>
          <UserProfile appearance={clerkComponentAppearance}>
            <UserProfile.Page label="account" />
            <UserProfile.Page label="security" />
          </UserProfile>
        </Tabs.Panel>
        <Tabs.Panel value={MANAGE_ACCOUNT_ROUTE_SEGMENTS.ACCESS_SECURITY}>
          <UserProfile appearance={clerkComponentAppearance}>
            <UserProfile.Page label="security" />
            <UserProfile.Page label="account" />
          </UserProfile>
        </Tabs.Panel>
        <Tabs.Panel value={MANAGE_ACCOUNT_ROUTE_SEGMENTS.ORGANIZATION}>
          <OrganizationSettings clerkAppearance={clerkComponentAppearance} />
        </Tabs.Panel>
        <Tabs.Panel value={MANAGE_ACCOUNT_ROUTE_SEGMENTS.TEAM_MEMBERS}>
          <OrganizationProfile appearance={clerkComponentAppearance}>
            <OrganizationProfile.Page label="members" />
            <OrganizationProfile.Page label="general" />
          </OrganizationProfile>
        </Tabs.Panel>
        {!isV2Enabled && (
          <Tabs.Panel value={MANAGE_ACCOUNT_ROUTE_SEGMENTS.BRANDING}>
            <BrandingPage />
          </Tabs.Panel>
        )}
        <Tabs.Panel value={MANAGE_ACCOUNT_ROUTE_SEGMENTS.BILLING}>
          <Title className={billingTitle}>Plans & Billing</Title>
          <BillingPage />
        </Tabs.Panel>
      </Tabs>
    </Modal>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { OrganizationProfile, UserProfile } from '@clerk/clerk-react';
import { Modal, Tabs } from '@mantine/core';
import {
IconAdminPanelSettings,
IconCreditCard,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/clerk/pages/OrganizationListPage.tsx
Tamaño: 946 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { OrganizationList } from '@clerk/clerk-react';
import { PageMeta } from '@novu/design-system';
import { useEffect } from 'react';
import AuthLayout from '../../../components/layout/components/AuthLayout';
import { ROUTES } from '../../../constants/routes';
import { useRedirectURL } from '../../../hooks/useRedirectURL';

export default function OrganizationListPage() {
  const { setRedirectURL } = useRedirectURL();

  useEffect(() => {
    setRedirectURL();
  }, []);

  return (
    <AuthLayout>
      <PageMeta title="Select or create organization" />
      <OrganizationList
        appearance={{
          elements: {
            organizationAvatarUploaderContainer: {
              display: 'none',
            },
          },
        }}
        hidePersonal
        skipInvitationScreen
        afterSelectOrganizationUrl={ROUTES.WORKFLOWS}
        afterCreateOrganizationUrl={ROUTES.WORKFLOWS}
      />
    </AuthLayout>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { OrganizationList } from '@clerk/clerk-react';
import { PageMeta } from '@novu/design-system';
import { useEffect } from 'react';
import AuthLayout from '../../../components/layout/components/AuthLayout';
import { ROUTES } from '../../../constants/routes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/clerk/pages/SignInPage.tsx
Tamaño: 241 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';

import { NEW_DASHBOARD_URL } from '../../../config';

export default function SignInPage() {
  useEffect(() => {
    window.location.href = `${NEW_DASHBOARD_URL}/auth/sign-in`;
  }, []);

  return null;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect } from 'react';
import { NEW_DASHBOARD_URL } from '../../../config';
export default function SignInPage() {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/clerk/pages/SignUpPage.tsx
Tamaño: 241 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';

import { NEW_DASHBOARD_URL } from '../../../config';

export default function SignUpPage() {
  useEffect(() => {
    window.location.href = `${NEW_DASHBOARD_URL}/auth/sign-up`;
  }, []);

  return null;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect } from 'react';
import { NEW_DASHBOARD_URL } from '../../../config';
export default function SignUpPage() {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/clerk/providers/ClerkProvider.tsx
Tamaño: 9173 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { PropsWithChildren } from 'react';
import { useNavigate } from 'react-router-dom';
import { ClerkProvider as _ClerkProvider } from '@clerk/clerk-react';
import { useColorScheme } from '@novu/design-system';
import { dark } from '@clerk/themes';
import { Variables } from '@clerk/types';
import { CLERK_PUBLISHABLE_KEY, IS_EE_AUTH_ENABLED } from '../../../config/index';

const CLERK_LOCALIZATION = {
  userProfile: {
    navbar: {
      title: 'Settings',
      description: '',
      account: 'User profile',
      security: 'Access security',
    },
  },
  organizationProfile: {
    membersPage: {
      requestsTab: { autoSuggestions: { headerTitle: '' } },
      invitationsTab: { autoInvitations: { headerTitle: '' } },
    },
  },
  userButton: {
    action__signOut: 'Log out',
    action__signOutAll: 'Log out from all accounts',
    action__manageAccount: 'Settings',
  },
  formFieldLabel__organizationSlug: 'URL friendly identifier',
};

const CLERK_MODAL_ELEMENT = {
  organizationSwitcherPopoverMain: { backgroundColor: 'var(--nv-colors-surface-panel-subsection)' },
  userPreviewMainIdentifier: {
    fontWeight: 'var(--nv-font-weights-strong)',
    lineHeight: 'var(--nv-line-heights-125)',
    color: 'var(--nv-colors-typography-text-main)',
  },
  userPreview: {
    gap: 'var(--nv-spacing-75)',
  },
  userPreviewSecondaryIdentifier: {
    color: 'var(--nv-colors-typography-text-secondary)',
  },
  userPreviewAvatarContainer: {
    width: 'var(--nv-sizes-m)',
    height: 'var(--nv-sizes-m)',
  },
  userPreviewAvatarBox: {
    width: 'var(--nv-sizes-m)',
    height: 'var(--nv-sizes-m)',
  },
  userButtonPopoverFooter: {
    borderStyle: 'none',
    borderWidth: '0 !important',
    background: 'inherit',
    backgroundColor: 'var(--nv-colors-surface-panel-subsection) !important',
  },
  userButtonPopoverCard: {
    backgroundColor: 'var(--nv-colors-surface-panel-subsection)',
    borderStyle: 'none',
    borderWidth: '0 !important',
  },
  userButtonPopoverActionButton: {
    fontWeight: 'var(--nv-font-weights-strong)',
    lineHeight: 'var(--nv-line-heights-125)',
    color: 'var(--nv-colors-typography-text-main)',
    borderStyle: 'none',
    borderWidth: '0 !important',
  },
  userButtonPopoverCustomItemButton: {
    fontWeight: 'var(--nv-font-weights-strong)',
    lineHeight: 'var(--nv-line-heights-125)',
    color: 'var(--nv-colors-typography-text-main)',
    borderStyle: 'none',
    borderWidth: '0 !important',
  },
  /*
   * PLAT-146 this should be uncommented when the linked task is done
   * button__manageAccount: {
   *   backgroundColor: 'var(--nv-colors-surface-panel-section)',
   *   borderStyle: 'none',
   *   boxShadow: 'unset !important',
   *   fontSize: 'var(--nv-font-sizes-75)',
   *   borderRadius: 'var(--nv-radii-75)',
   *   height: '24px',
   * },
   * button__signOut: {
   *   backgroundColor: 'var(--nv-colors-surface-panel-section)',
   *   borderStyle: 'none',
   *   boxShadow: 'unset !important',
   *   fontSize: 'var(--nv-font-sizes-75)',
   *   borderRadius: 'var(--nv-radii-75)',
   *   height: '24px',
   * },
   */
  organizationPreviewMainIdentifier: {
    lineHeight: 'var(--nv-line-heights-125)',
    color: 'var(--nv-colors-typography-text-main)',
  },
  organizationPreviewSecondaryIdentifier: {
    color: 'var(--nv-colors-typography-text-secondary)',
  },
  userButtonPopoverActionButtonIconBox__addAccount: {
    width: 'var(--nv-sizes-m)',
    height: 'var(--nv-sizes-m)',
    flex: 'none',
  },
  userButtonPopoverActionButtonIcon__addAccount: {
    width: 'var(--nv-sizes-m)',
    height: 'var(--nv-sizes-m)',
    '& circle': {
      r: 18,
      'stroke-opacity': 0,
    },
  },
  userButtonPopoverActionButton__signOutAll: {
    gap: 'var(--nv-spacing-75)',
    '&:hover': {
      color: 'var(--nv-colors-typography-text-main)',
    },
  },
  userButtonPopoverActionButton__addAccount: {
    gap: 'var(--nv-spacing-75)',
    '&:hover': {
      color: 'var(--nv-colors-typography-text-main)',
    },
  },
  userButtonPopoverActionButtonIconBox__signOutAll: {
    width: 'var(--nv-sizes-icon-24)',
    height: 'var(--nv-sizes-icon-24)',
    margin: '0 var(--nv-spacing-margins-icons-icon20-icon20)',
    flex: 'none',
  },
  userButtonPopoverActionButtonIcon__signOutAll: {
    width: 'var(--nv-sizes-xs)',
    height: 'var(--nv-sizes-xs)',
  },
  organizationSwitcherPopoverActionButtonIconBox: {
    width: 'var(--nv-sizes-m)',
    height: 'var(--nv-sizes-m)',
    flex: 'none',
  },
  organizationSwitcherPopoverActionButtonIcon: {
    width: 'var(--nv-sizes-m)',
    height: 'var(--nv-sizes-m)',
    '& circle': {
      r: 18,
      'stroke-opacity': 0,
    },
  },
  organizationSwitcherPopoverActionButton: {
    borderWidth: '0 !important',
    borderStyle: 'none',
    lineHeight: 'var(--nv-line-heights-125)',
    color: 'var(--nv-colors-typography-text-main)',
    fontFamily: 'var(--nv-fonts-system)',
    fontSize: 'var(--nv-font-sizes-88)',
    fontWeight: 'var(--nv-font-weights-strong)',
    gap: 'var(--nv-spacing-75)',
    padding: 'var(--nv-spacing-100) var(--nv-spacing-125)',
    '&:hover': {
      color: 'var(--nv-colors-typography-text-main) !important',
    },
  },
  organizationSwitcherTrigger: {
    '.cl-organizationPreview': {
      gap: 'var(--nv-spacing-75)',
      '.cl-organizationPreviewAvatarContainer > .cl-organizationPreviewAvatarBox': {
        width: 'var(--nv-sizes-icon-20)',
        height: 'var(--nv-sizes-icon-20)',
      },
    },
  },
  organizationSwitcherPreviewButton: {
    borderWidth: '0 !important',
    borderStyle: 'none',
  },
  organizationSwitcherPopoverCard: {
    borderWidth: '0',
    borderStyle: 'none',
  },

  organizationPreviewAvatarBox: {
    width: 'var(--nv-sizes-m)',
    height: 'var(--nv-sizes-m)',
  },

  modalContent: {
    width: '80rem',
    display: 'block',
  },
  modalBackdrop: {
    zIndex: 200,
  },
  cardBox: {
    width: '100%',
  },
  scrollBox: {
    backgroundColor: 'surface.page',
    padding: '0',
  },
  pageScrollBox: {
    padding: '0',
  },
  userButtonPopoverMain: {
    backgroundColor: 'var(--nv-colors-surface-panel-subsection)',
    boxShadow: 'unset !important',
  },
  rootBox: {
    width: 'auto',
  },
  navbar: {
    background: 'var(--nv-colors-surface-panel)',
    '& h1': {
      fontFamily: 'var(--nv-fonts-system)',
      fontWeight: 'var(--nv-font-weights-strong)',
      fontSize: 'var(--nv-font-sizes-150)',
      letterSpacing: '0',
      textDecoration: 'none',
      lineHeight: 'var(--nv-line-heights-200)',
    },
  },
  headerTitle: {
    fontFamily: 'var(--nv-fonts-system)',
    fontWeight: 'var(--nv-font-weights-strong)',
    fontSize: 'var(--nv-font-sizes-125)',
    letterSpacing: '0',
    textDecoration: 'none',
    lineHeight: 'var(--nv-line-heights-175)',
  },
  navbarButton: {
    fontFamily: 'var(--nv-fonts-system)',
    fontWeight: 'var(--nv-font-weights-strong)',
    fontSize: 'var(--nv-font-sizes-88)',
    paddingTop: 'var(--nv-spacing-50)',
    paddingBottom: 'var(--nv-spacing-50)',
    opacity: 'var(--nv-opacity-100)',
    color: 'var(--nv-colors-typography-text-secondary)',
    '&.cl-active': {
      color: 'var(--nv-colors-typography-text-main)',
      background: 'var(--nv-colors-surface-page)',
      '& svg': {
        color: 'var(--nv-colors-typography-text-main)',
        fill: 'var(--nv-colors-typography-text-main)',
        opacity: 'var(--nv-opacity-100)',
      },
    },
    '&:hover, &:focus, &:active': {
      color: 'var(--nv-colors-typography-text-main)',
      background: 'var(--nv-colors-surface-page)',
      opacity: 'var(--nv-opacity-100)',
      '& svg': {
        color: 'var(--nv-colors-typography-text-main)',
        fill: 'var(--nv-colors-typography-text-main)',
        opacity: 'var(--nv-opacity-100)',
      },
    },
  },
  navbarButtonIcon: {
    height: 'var(--nv-sizes-125)',
    width: 'var(--nv-sizes-125)',
    opacity: 'var(--nv-opacity-100)',
  },
  impersonationFab: {
    backgroundColor: 'var(--nv-colors-surface-page)',
  },
};

const CLERK_OVERRIDE_VARIABLES: Variables = {
  fontFamily: 'var(--nv-fonts-system)',
  fontSize: 'var(--nv-font-sizes-88)',
};

const ALLOWED_REDIRECT_ORIGINS = ['http://localhost:*', window.location.origin];

export const ClerkProvider: React.FC<PropsWithChildren> = ({ children }) => {
  const { colorScheme } = useColorScheme();

  const navigate = useNavigate();

  if (!IS_EE_AUTH_ENABLED) {
    return <>{children}</>;
  }

  return (
    <_ClerkProvider
      routerPush={(to) => navigate(to)}
      routerReplace={(to) => navigate(to, { replace: true })}
      publishableKey={CLERK_PUBLISHABLE_KEY}
      appearance={{
        baseTheme: colorScheme === 'dark' ? dark : undefined,
        createOrganization: {
          elements: {
            modalContent: {
              width: 'auto',
            },
            rootBox: {
              width: '420px',
            },
          },
        },
        elements: CLERK_MODAL_ELEMENT,
        variables: CLERK_OVERRIDE_VARIABLES,
      }}
      localization={CLERK_LOCALIZATION}
      allowedRedirectOrigins={ALLOWED_REDIRECT_ORIGINS}
    >
      {children}
    </_ClerkProvider>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { PropsWithChildren } from 'react';
import { useNavigate } from 'react-router-dom';
import { ClerkProvider as _ClerkProvider } from '@clerk/clerk-react';
import { useColorScheme } from '@novu/design-system';
import { dark } from '@clerk/themes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/clerk/providers/EnterpriseAuthProvider.tsx
Tamaño: 7327 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { createContext, useCallback, useEffect, useMemo } from 'react';
import type { IOrganizationEntity, IUserEntity } from '@novu/shared';
import { useAuth, useUser, useOrganization } from '@clerk/clerk-react';
import { OrganizationResource, UserResource } from '@clerk/types';

import { useNavigate } from 'react-router-dom';
import { useQueryClient } from '@tanstack/react-query';
import { type AuthContextValue } from '../../../components/providers/AuthProvider';
import { DEFAULT_AUTH_CONTEXT_VALUE } from '../../../components/providers/constants';
import { useSegment } from '../../../components/providers/SegmentProvider';
import { ROUTES } from '../../../constants/routes';

const asyncNoop = async () => {};

// TODO: Replace with createContextAndHook
export const EnterpriseAuthContext = createContext<AuthContextValue>(DEFAULT_AUTH_CONTEXT_VALUE);
EnterpriseAuthContext.displayName = 'EnterpriseAuthProvider';

export const EnterpriseAuthProvider = ({ children }: { children: React.ReactNode }) => {
  const { signOut, orgId } = useAuth();
  const { user: clerkUser, isLoaded: isUserLoaded } = useUser();
  const { organization: clerkOrganization, isLoaded: isOrganizationLoaded } = useOrganization();

  const segment = useSegment();
  const queryClient = useQueryClient();
  const navigate = useNavigate();

  const logout = useCallback(() => {
    queryClient.clear();
    segment.reset();
    navigate(ROUTES.AUTH_LOGIN);
    signOut();
  }, [navigate, queryClient, segment, signOut]);

  // TODO @ChmaraX: Enhance Clerk redirect methods with our own logic
  const redirectTo = useCallback(
    ({
      url,
      redirectURL,
      origin,
      anonymousId,
    }: {
      url: string;
      redirectURL?: string;
      origin?: string;
      anonymousId?: string | null;
    }) => {
      const finalURL = new URL(url, window.location.origin);

      if (redirectURL) {
        finalURL.searchParams.append('redirect_url', redirectURL);
      }

      if (origin) {
        finalURL.searchParams.append('origin', origin);
      }

      if (anonymousId) {
        finalURL.searchParams.append('anonymous_id', anonymousId);
      }

      // Note: Do not use react-router-dom. The version we have doesn't do instant cross origin redirects.
      window.location.replace(finalURL.href);
    },
    []
  );

  const redirectToLogin = useCallback(
    ({ redirectURL }: { redirectURL?: string } = {}) => redirectTo({ url: ROUTES.AUTH_LOGIN, redirectURL }),
    [redirectTo]
  );

  const redirectToSignUp = useCallback(
    ({ redirectURL, origin, anonymousId }: { redirectURL?: string; origin?: string; anonymousId?: string } = {}) =>
      redirectTo({ url: ROUTES.AUTH_SIGNUP, redirectURL, origin, anonymousId }),
    [redirectTo]
  );

  const switchOrgCallback = useCallback(async () => {
    await queryClient.refetchQueries();
  }, [queryClient]);

  const reloadOrganization = useCallback(async () => {
    if (clerkOrganization) {
      await clerkOrganization.reload();
    }

    return {};
  }, [clerkOrganization]);

  useEffect(() => {
    if (!clerkUser || orgId) return;

    const hasOrganizations = clerkUser.organizationMemberships.length > 0;
    if (!hasOrganizations && window.location.pathname !== ROUTES.AUTH_SIGNUP_ORGANIZATION_LIST) {
      return redirectTo({ url: ROUTES.AUTH_SIGNUP_ORGANIZATION_LIST });
    }
  }, [clerkUser, orgId, redirectTo]);

  const currentUser = useMemo(() => (clerkUser ? toUserEntity(clerkUser) : undefined), [clerkUser]);
  const currentOrganization = useMemo(
    () => (clerkOrganization ? toOrganizationEntity(clerkOrganization) : undefined),
    [clerkOrganization]
  );

  // refetch queries on organization switch
  useEffect(() => {
    // if linked, externalOrgId = internal org ObjectID, which is required on backend
    const isInternalOrgLinked = !!clerkOrganization?.publicMetadata.externalOrgId;
    const isOrgChanged =
      currentOrganization && currentOrganization._id !== clerkOrganization?.publicMetadata.externalOrgId;

    if (isInternalOrgLinked && isOrgChanged) {
      switchOrgCallback();
    }
  }, [currentOrganization, clerkOrganization, switchOrgCallback]);

  const value = {
    isUserLoaded,
    isOrganizationLoaded,
    currentUser,
    currentOrganization,
    logout,
    login: asyncNoop,
    redirectToLogin,
    redirectToSignUp,
    switchOrganization: asyncNoop,
    reloadOrganization,
  } as AuthContextValue;
  /*
   * The 'as AuthContextValue' is necessary as Boolean and true or false discriminating unions
   * don't work with inference. See here https://github.com/microsoft/TypeScript/issues/19360
   *
   * Alternatively, we will have to conditionally generate the value object based on the isLoaded values.
   */

  return <EnterpriseAuthContext.Provider value={value}>{children}</EnterpriseAuthContext.Provider>;
};

const toUserEntity = (clerkUser: UserResource): IUserEntity => {
  /*
   * When mapping to IUserEntity, we have 2 cases:
   *  - user exists and has signed in
   *  - user is signing up
   *
   * In the case where the user is still signing up, we are using the clerk identifier for the id.
   * This however quickly gets update to the externalId (which is actually the novu internal
   * entity identifier) that gets used further in the app. There are a few consumers that
   * want to use this identifier before it is set to the internal value. These consumers
   * should make sure they only report with the correct value, a reference
   * implementation can be found in 'apps/web/src/hooks/useMonitoring.ts'
   */

  return {
    _id: clerkUser.externalId ?? clerkUser.id,
    firstName: clerkUser.firstName,
    lastName: clerkUser.lastName,
    email: clerkUser.emailAddresses[0].emailAddress,
    profilePicture: clerkUser.imageUrl,
    createdAt: clerkUser.createdAt?.toISOString() ?? '',
    showOnBoarding: clerkUser.publicMetadata.showOnBoarding,
    showOnBoardingTour: clerkUser.publicMetadata.showOnBoardingTour,
    servicesHashes: clerkUser.publicMetadata.servicesHashes,
    jobTitle: clerkUser.publicMetadata.jobTitle,
    hasPassword: clerkUser.passwordEnabled,
  };
};

const toOrganizationEntity = (clerkOrganization: OrganizationResource): IOrganizationEntity => {
  /*
   * When mapping to IOrganizationEntity, we have 2 cases:
   *  - user exists and has signed in
   *  - user is signing up
   *
   *
   * In the case where the user is still signing up, we are using the clerk identifier for the id.
   * This however quickly gets update to the externalId (which is actually the novu internal
   * entity identifier) that gets used further in the app. There are a few consumers that
   * want to use this identifier before it is set to the internal value. These consumers
   * should make sure they only report with the correct value, a reference
   * implementation can be found in 'apps/web/src/hooks/useMonitoring.ts'
   */

  return {
    _id: clerkOrganization.publicMetadata.externalOrgId ?? clerkOrganization.id,
    name: clerkOrganization.name,
    createdAt: clerkOrganization.createdAt.toISOString(),
    updatedAt: clerkOrganization.updatedAt.toISOString(),
    domain: clerkOrganization.publicMetadata.domain,
    productUseCases: clerkOrganization.publicMetadata.productUseCases,
    language: clerkOrganization.publicMetadata.language,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { createContext, useCallback, useEffect, useMemo } from 'react';
import type { IOrganizationEntity, IUserEntity } from '@novu/shared';
import { useAuth, useUser, useOrganization } from '@clerk/clerk-react';
import { OrganizationResource, UserResource } from '@clerk/types';
// TODO: Replace with createContextAndHook
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/clerk/utils/environment.ts
Tamaño: 304 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import type {
  UserPublicMetadata as _UserPublicMetadata,
  OrganizationPublicMetadata as _OrganizationPublicMetadata,
} from '@novu/shared';

declare global {
  interface UserPublicMetadata extends _UserPublicMetadata {}

  interface OrganizationPublicMetadata extends _OrganizationPublicMetadata {}
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

No se detectaron funciones/exportaciones con heurística JS/TS.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/editor/index.ts
Tamaño: 98 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './components/ControlVariables';
export * from './components/ControlVariablesForm';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/editor/components/ControlVariables.tsx
Tamaño: 2025 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import validator from '@rjsf/validator-ajv8';
import Form from '@rjsf/core';
import React, { useEffect, useState } from 'react';
import { Stack } from '@mantine/core';

export const ControlVariables = ({ schema = {}, onChange = (values) => {}, defaults = {} }) => {
  const [values, setValues] = useState(defaults);

  useEffect(() => {
    if (Object.keys(values).length === 0) {
      return;
    }
    onChange(values);
  }, [values]);

  return (
    <>
      <style>
        {`fieldset {
        border: none;
      }
      
      .form-group.field.field-object{
      margin-top: 15px;
      }
      fieldset legend {
        display: block;
        font-size: 16px;
        margin-bottom: 5px;
      }
      
      fieldset label {
        margin-bottom: 10px;
        display: block;
      }
      
       fieldset input:not([type="checkbox"]), fieldset select {
    text-indent: 10px;
    font-family: Lato, sans serif;
    -webkit-tap-highlight-color: transparent;
    line-height: 35px;
    appearance: none;
    resize: none;
    box-sizing: border-box;
    font-size: 14px;
    width: 100%;
    display: block;
    text-align: left;
    padding-right: 14px;
    border-radius: 7px;
    border: 1px solid #3d3d4d;
    background-color: transparent;
    -webkit-transition: border-color 100ms ease;
    transition: border-color 100ms ease;
    border-radius: 7px;
    margin: 5px 0px;
  }
      .form-group {
        margin-bottom: 8px;
      }
      .control-label {
        margin-right: 8px;
        font-weight: bolder;
      }
      .checkbox input {
        margin-right: 8px;
      }
      .checkbox span {
        font-weight: bolder;
      }
      
      
      `}
      </style>
      <Stack spacing={0}>
        <Form
          schema={schema}
          validator={validator}
          onChange={(data) => {
            setValues(data.formData);
          }}
          templates={{ ButtonTemplates: { SubmitButton: () => null } }}
          formData={defaults}
        />
      </Stack>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import validator from '@rjsf/validator-ajv8';
import Form from '@rjsf/core';
import React, { useEffect, useState } from 'react';
import { Stack } from '@mantine/core';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/editor/components/ControlVariablesForm.tsx
Tamaño: 4075 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMutation, useQuery } from '@tanstack/react-query';
import React, { useEffect } from 'react';
import { useDebouncedState, useDisclosure } from '@mantine/hooks';
import { Accordion, Code, Group } from '@mantine/core';
import { Button, Text } from '@novu/design-system';
import { ControlVariables } from './ControlVariables';
import { api } from '../../../api/index';

export const ControlVariablesForm = ({ schema, payloadSchema, formData, onChange }) => {
  const [value, setValue] = useDebouncedState<any>({}, 500);
  const [payloadSchemaData, setPayloadSchemaData] = useDebouncedState<any>({}, 500);

  const { isLoading, data: controlVariables } = useQuery(['controls', formData.workflowId, formData._stepId], () =>
    api.get(`/v1/bridge/controls/${formData.workflowId}/${formData.stepId}`)
  );

  const { mutateAsync: saveControls, isLoading: isSavingControls } = useMutation((data) =>
    api.put(`/v1/bridge/controls/${formData?.workflowId}/${formData.stepId}`, { variables: data })
  );

  useEffect(() => {
    onChange({
      controls: value,
      payload: payloadSchemaData,
    });
  }, [value, payloadSchemaData]);

  if (isLoading) {
    return null;
  }

  return (
    <>
      <Accordion multiple defaultValue={['workflow', 'step']}>
        <Accordion.Item value="workflow">
          <Accordion.Control>
            <RenderToolTipHeader title="Workflow Payload" tooltip={<WorkflowSchemaExample />} />
          </Accordion.Control>
          <Accordion.Panel>
            <ControlVariables
              schema={payloadSchema}
              onChange={(data) => {
                setPayloadSchemaData(data);
              }}
              defaults={{}}
            />
          </Accordion.Panel>
        </Accordion.Item>
        <Accordion.Item value="step">
          <Accordion.Control>
            <RenderToolTipHeader title="Step Controls" tooltip={<WorkflowSchemaExample />} />
          </Accordion.Control>
          <Accordion.Panel>
            <ControlVariables
              schema={schema}
              onChange={(data) => {
                setValue(data);
              }}
              defaults={controlVariables?.controls}
            />
            <Button
              loading={isSavingControls}
              fullWidth
              onClick={() => {
                saveControls(value);
              }}
              variant="outline"
            >
              Save Controls
            </Button>
          </Accordion.Panel>
        </Accordion.Item>
      </Accordion>
    </>
  );
};

function RenderToolTipHeader({ tooltip, title }) {
  const [opened, { close, open }] = useDisclosure(false);

  return (
    <Group>
      <Text>{title}</Text>
    </Group>
  );
}

function WorkflowSchemaExample() {
  const controlsCodeSnippet = `payloadSchema: {
  type: "object", 
  properties: {
     showButton: { 
      type: "boolean",
      default: true
    }
  }
}`;

  return (
    <>
      <Text size="xs">Step Controls are used to control the behaviour of a step from the Web UI.</Text>
      <Text size="xs">
        <br /> They can be used for things like: Content, Hiding and showing elements, control the order of elements or
        change parameters like digest length and type. <br /> <br />
      </Text>
      <Text size="xs">Controls are defined using JSON Schema:</Text>
      <Code block>{controlsCodeSnippet}</Code>
    </>
  );
}

function ControlStepExample() {
  const controlsCodeSnippet = `controlSchema: {
  type: "object", 
  properties: {
     showButton: { 
      type: "boolean",
      default: true
    }
  }
}`;

  return (
    <>
      <Text size="xs">Step Controls are used to control the behaviour of a step from the Web UI.</Text>
      <Text size="xs">
        <br /> They can be used for things like: Content, Hiding and showing elements, control the order of elements or
        change parameters like digest length and type. <br /> <br />
      </Text>
      <Text size="xs">Controls are defined using JSON Schema:</Text>
      <Code block>{controlsCodeSnippet}</Code>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMutation, useQuery } from '@tanstack/react-query';
import React, { useEffect } from 'react';
import { useDebouncedState, useDisclosure } from '@mantine/hooks';
import { Accordion, Code, Group } from '@mantine/core';
import { Button, Text } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/index.ts
Tamaño: 122 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export { FlagIcon } from './components/shared';
export * from './routes';
export * from './utils/createTranslationMarks';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/routes.tsx
Tamaño: 1079 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { Route, Routes as RouterRoutes } from 'react-router-dom';

import { CreateGroupPage } from './pages/CreateGroupPage';
import { EditGroupPage } from './pages/EditGroupPage';
import { EditGroupTranslationsPage } from './pages/EditGroupTranslationsPage';
import { SingleTranslationFileEditPage } from './pages/SingleTranslationFileEditPage';
import { TranslationGroupsPage } from './pages/TranslationGroupsPage';

export const Routes = () => {
  return (
    <RouterRoutes>
      <Route path="" element={<TranslationGroupsPage />}>
        <Route path="create" element={<CreateGroupPage />} />
        <Route path="edit/:identifier" element={<EditGroupTranslationsPage />}>
          <Route path="settings" element={<EditGroupPage />} />
          <Route path=":locale/:mode" element={<SingleTranslationFileEditPage />} />
        </Route>
      </Route>
    </RouterRoutes>
  );
};

export enum ROUTES {
  HOME = '/translations',
  TRANSLATION_GROUP_CREATE = '/translations/create',
  TRANSLATION_GROUP_EDIT = '/translations/edit/:identifier',
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { Route, Routes as RouterRoutes } from 'react-router-dom';
import { CreateGroupPage } from './pages/CreateGroupPage';
import { EditGroupPage } from './pages/EditGroupPage';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/CreateGroupSidebar.tsx
Tamaño: 3345 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { Button, Sidebar, Title, errorMessage } from '@novu/design-system';
import { Group } from '@mantine/core';
import { Control, FormProvider, useForm } from 'react-hook-form';
import { slugify } from '@novu/shared';
import { useEnvironment } from '../../../hooks';
import { api } from '../../../api';
import { useGetDefaultLocale } from '../hooks/useGetDefaultLocale';

import { TranslationFolderIconSmall } from '../icons';

import { GroupFormCommonFields } from './GroupFormCommonFields';
import { ICreateGroup } from './shared';

function defaultValues(defaultLocale = '') {
  return {
    name: '',
    identifier: '',
    locales: [defaultLocale],
  };
}

export const CreateGroupSidebar = ({
  open,
  onClose,
  onGroupCreated,
}: {
  open: boolean;
  onClose: () => void;
  onGroupCreated: (id: string) => void;
}) => {
  const queryClient = useQueryClient();
  const { readonly } = useEnvironment();
  const { defaultLocale } = useGetDefaultLocale();

  const { mutateAsync: createTranslationGroup, isLoading: isSaving } = useMutation<
    any,
    { error: string; message: string; statusCode: number },
    ICreateGroup
  >((data) => api.post('/v1/translations/groups', data), {
    onSuccess: (data) => {
      onGroupCreated(data.identifier);
      queryClient.refetchQueries(['changesCount']);
      queryClient.refetchQueries(['translationGroups']);
    },
    onError: (e: any) => {
      errorMessage(e.message || 'Unexpected error');
    },
  });

  const methods = useForm({
    mode: 'onChange',
    defaultValues: defaultValues(defaultLocale),
  });

  const {
    control,
    handleSubmit,
    watch,
    setValue,
    formState: { isValid, isDirty },
    reset,
  } = methods;

  const name = watch('name');
  const identifier = watch('identifier');
  const localesForm = watch('locales');

  useEffect(() => {
    if (defaultLocale) {
      reset(defaultValues(defaultLocale));
    }
  }, [defaultLocale, reset]);

  useEffect(() => {
    if (defaultLocale && localesForm.length === 0) {
      setValue('locales', [defaultLocale]);
    }
  }, [defaultLocale, localesForm, setValue]);

  useEffect(() => {
    const newIdentifier = slugify(name);

    if (newIdentifier === identifier) {
      return;
    }

    setValue('identifier', newIdentifier);
  }, [name]);

  const onSubmit = async (data: any) => {
    await createTranslationGroup(data);
  };

  return (
    <Sidebar
      isOpened={open}
      onSubmit={handleSubmit(onSubmit)}
      onClose={onClose}
      onBack={onClose}
      customHeader={
        <Group>
          <TranslationFolderIconSmall />
          <Title size={2}>Add a group </Title>
        </Group>
      }
      customFooter={
        <Group ml="auto">
          <Button variant="outline" onClick={onClose}>
            Cancel
          </Button>
          <Button
            submit
            loading={isSaving}
            disabled={readonly || !isDirty || !isValid}
            data-test-id="add-group-submit-btn"
          >
            Add group
          </Button>
        </Group>
      }
    >
      <FormProvider {...methods}>
        <GroupFormCommonFields control={control as Control<ICreateGroup>} readonly={readonly} />
      </FormProvider>
    </Sidebar>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect } from 'react';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { Button, Sidebar, Title, errorMessage } from '@novu/design-system';
import { Group } from '@mantine/core';
import { Control, FormProvider, useForm } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/DeleteLocaleModal.tsx
Tamaño: 1994 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import { useFormContext } from 'react-hook-form';
import { Modal, Text, colors, Button } from '@novu/design-system';
import { useFetchLocales } from '../hooks/useFetchLocales';
import { FlagIcon } from './shared';
import { Warning } from '../icons';
import { useGetDefaultLocale } from '../hooks/useGetDefaultLocale';

export const DeleteLocaleModal = ({
  localeToDelete,
  onClose,
  readonly,
}: {
  localeToDelete: { label: string; value: string } | undefined;
  onClose: () => void;
  readonly: boolean;
}) => {
  const { getLocale } = useFetchLocales();
  const { defaultLocale } = useGetDefaultLocale();
  const form = useFormContext();

  if (!localeToDelete) {
    return null;
  }

  return (
    <Modal
      size="lg"
      opened={localeToDelete !== undefined}
      title={
        <Text size={20} weight="bold" color="#EAA900">
          <Group spacing={8}>
            <Warning /> Delete <FlagIcon locale={localeToDelete?.value} /> {localeToDelete?.label} language?
          </Group>
        </Text>
      }
      onClose={onClose}
      centered
    >
      <Text size={14} weight="normal" color={colors.B60}>
        Deleting a language removes its JSON file, and notifications using keys from that file will switch to the
        {}
        default {getLocale(defaultLocale!)?.langName} language.
      </Text>
      <Group position="right" spacing={24} mt={30}>
        <Button
          onClick={() => {
            onClose();
          }}
          variant="outline"
        >
          Cancel
        </Button>
        <Button
          type="submit"
          onClick={() => {
            form.setValue(
              'locales',
              form.getValues('locales').filter((locale) => locale !== localeToDelete?.value),
              { shouldDirty: true }
            );
            onClose();
          }}
          disabled={readonly}
        >
          Delete language
        </Button>
      </Group>
    </Modal>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import { useFormContext } from 'react-hook-form';
import { Modal, Text, colors, Button } from '@novu/design-system';
import { useFetchLocales } from '../hooks/useFetchLocales';
import { FlagIcon } from './shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/EditGroupSidebar.tsx
Tamaño: 3999 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { Button, Sidebar, Title, errorMessage } from '@novu/design-system';
import { Group } from '@mantine/core';
import { Control, FormProvider, useForm } from 'react-hook-form';
import { api } from '../../../api';
import { useEnvironment } from '../../../hooks';

import { GroupFormCommonFields } from './GroupFormCommonFields';
import { ICreateGroup } from './shared';
import { useFetchTranslationGroup, useGetDefaultLocale } from '../hooks';
import { TranslationFolderEditIcon } from '../icons';

function defaultValues(defaultLocale = '') {
  return {
    name: '',
    identifier: '',
    locales: [defaultLocale],
  };
}

export const EditGroupSidebar = ({
  open,
  onClose,
  groupIdentifier,
  onGroupUpdated,
}: {
  open: boolean;
  groupIdentifier: string;
  onClose: () => void;
  onGroupUpdated: (id: string) => void;
}) => {
  const queryClient = useQueryClient();

  const { group } = useFetchTranslationGroup(groupIdentifier);
  const { defaultLocale } = useGetDefaultLocale();

  const { mutateAsync: updateTranslationGroup, isLoading: isUpdating } = useMutation<
    any,
    { error: string; message: string; statusCode: number },
    { identifier: string; data: ICreateGroup }
  >(({ identifier, data }) => api.patch(`/v1/translations/groups/${identifier}`, data), {
    onSuccess: async (data) => {
      await queryClient.refetchQueries([`group/${data.identifier}`]);
      await queryClient.refetchQueries([`translationGroups`]);
      queryClient.refetchQueries(['changesCount']);
      onGroupUpdated(data.identifier);
    },
    onError: (e: any) => {
      errorMessage(e.message || 'Unexpected error');
    },
  });

  const methods = useForm({
    mode: 'onChange',
    defaultValues: defaultValues(defaultLocale),
  });
  const {
    control,
    handleSubmit,
    watch,
    setValue,
    reset,
    formState: { isValid, isDirty },
  } = methods;

  const localesForm = watch('locales');

  // First useEffect for initializing with group data
  useEffect(() => {
    if (!group) return;

    const groupLocales = group.translations.map((translation) => translation.isoLanguage);

    reset({ name: group.name, identifier: group.identifier, locales: groupLocales });
  }, [reset, group]);

  // Separate useEffect for handling defaultLocale initialization - only runs when defaultLocale changes
  useEffect(() => {
    if (!defaultLocale) return;

    /*
     * Only initialize with defaultLocale if we don't have group data yet
     * and the form hasn't been edited by the user
     */
    if (!group && !isDirty) {
      reset(defaultValues(defaultLocale));
    }
  }, [defaultLocale, group, isDirty, reset]);

  // Separate useEffect for ensuring locales is never empty
  useEffect(() => {
    if (!defaultLocale || localesForm.length > 0) return;

    setValue('locales', [defaultLocale]);
  }, [defaultLocale, localesForm, setValue]);

  const onUpdateGroup = async (form) => {
    await updateTranslationGroup({
      identifier: groupIdentifier,
      data: form,
    });
  };

  const { readonly } = useEnvironment();

  if (!group) {
    return null;
  }

  return (
    <Sidebar
      isOpened={open}
      onSubmit={handleSubmit(onUpdateGroup)}
      onClose={onClose}
      customHeader={
        <Group spacing={12}>
          <TranslationFolderEditIcon />
          <Title size={2}>{readonly ? 'View' : 'Edit'} group </Title>
        </Group>
      }
      customFooter={
        <Group ml="auto">
          <Button variant="outline" onClick={onClose}>
            Cancel
          </Button>
          <Button submit loading={isUpdating} disabled={!isDirty || !isValid || readonly}>
            Save changes
          </Button>
        </Group>
      }
    >
      <FormProvider {...methods}>
        <GroupFormCommonFields edit={true} control={control as Control<ICreateGroup>} readonly={readonly} />
      </FormProvider>
    </Sidebar>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect } from 'react';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { Button, Sidebar, Title, errorMessage } from '@novu/design-system';
import { Group } from '@mantine/core';
import { Control, FormProvider, useForm } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/EditTranslationsSidebar.tsx
Tamaño: 14449 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { ActionIcon, FileButton, Group, Indicator, Stack, useMantineColorScheme } from '@mantine/core';
import { Dropzone } from '@mantine/dropzone';
import { colors, Edit, Sidebar, Table, Text, Title, Tooltip, Trash, Upload, When } from '@novu/design-system';
import { useCallback, useEffect, useMemo, useRef, useState } from 'react';
import { useForm } from 'react-hook-form';
import { Outlet } from 'react-router-dom';
import { useEnvironment } from '../../../hooks';
import { useFetchLocales, useFetchTranslationGroup, useUploadTranslations, useGetDefaultLocale } from '../hooks';
import { useEditTranslationFileContext } from '../context/useEditTranslationFileContext';
import {
  ArrowForward,
  TranslationFileIcon,
  TranslationFolderIcon,
  TranslationFolderIconSmall,
  UploadTranslationFilesHeaderIcon,
  Warning,
} from '../icons';
import { columns } from './columns';
import { DeleteGroupModal } from './TranslationGroup/DeleteGroupModal';
import { ReUploadConfirmationModal } from './UploadFilesSection/ReUploadConfirmationModal';
import { UploadTranslationsLayout } from './UploadFilesSection/UploadTranslationsLayout';

export type LocalesFormSchema = {
  formLocales: {
    locale: string;
  }[];
};

type UploadedFile = {
  name: string;
  locale: string;
  content: any;
  isValidJsonFile: boolean;
};

export const EditTranslationsSidebar = ({
  identifier,
  open,
  onClose,
  onEditGroup,
}: {
  open: boolean;
  onClose: () => void;
  onEditGroup: (id: string) => void;
  identifier: string;
}) => {
  const { group, isLoading } = useFetchTranslationGroup(identifier);
  const { locales } = useFetchLocales();
  const resetRef = useRef<() => void>(null);
  const { setGroupIdentifier } = useEditTranslationFileContext();
  const { isLoading: isUploadTranslationsLoading, uploadTranslations } = useUploadTranslations();
  const hasMissingTranslations = group?.translations.some((translation) => !translation.translations);

  const [replacingLocales, setReplacingLocales] = useState<string[]>([]);
  const [showReUploadModal, setShowReUploadModal] = useState(false);
  const [showDeleteGroupModal, setShowDeleteGroupModal] = useState(false);
  const [languageFiles, setLanguageFiles] = useState<File[]>([]);

  const [uploadFiles, setUploadFiles] = useState<UploadedFile[]>([]);

  const { readonly } = useEnvironment();
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';
  const { defaultLocale } = useGetDefaultLocale();

  const handleFileChange = async (files: File[]) => {
    setLanguageFiles(files);

    const updatedFiles: Array<UploadedFile> = [];

    for (const file of files) {
      const fileContent = await file.text();
      const isValidJsonFile = file.name.endsWith('.json');

      const detectedLanguage = file?.name?.replace('.json', '');
      const isValidLanguage = locales?.find((locale) => locale.langIso === detectedLanguage);
      updatedFiles.push({
        name: file.name,
        locale: isValidLanguage ? detectedLanguage : defaultLocale || '',
        content: fileContent,
        isValidJsonFile,
      });
    }

    setUploadFiles(updatedFiles);
    reset({
      formLocales: updatedFiles.map((item) => ({ locale: item.locale })),
    });
  };

  const localesWithFiles = useMemo(
    () => group?.translations?.filter((item) => item.translations),
    [group?.translations]
  );

  const handleUploadSubmit = async (formData) => {
    const replacedLocales = localesWithFiles?.filter((item) =>
      formData.formLocales.some((locale) => locale.locale === item.isoLanguage)
    );

    if (replacedLocales && replacedLocales.length > 0 && !showReUploadModal) {
      setReplacingLocales(replacedLocales.map((item) => item.isoLanguage));
      setShowReUploadModal(true);

      return;
    }

    handleReplaceSubmit(formData);
  };

  const handleReplaceSubmit = async (formData) => {
    if (group?.identifier) {
      await uploadTranslations(
        {
          identifier: group.identifier,
          locales: formData.formLocales.map((item) => item.locale),
          files: languageFiles,
        },
        {
          onSuccess: () => {
            resetUpload();
          },
        }
      );
    }
  };

  const { control, handleSubmit, reset } = useForm<LocalesFormSchema>({
    mode: 'onChange',
    defaultValues: {
      formLocales: [],
    },
  });

  const resetUpload = () => {
    setUploadFiles([]);
    setLanguageFiles([]);
    reset({
      formLocales: [],
    });
    setReplacingLocales([]);
    setShowReUploadModal(false);
    resetRef.current?.();
  };

  const removeLanguageFiles = useCallback((index: number) => {
    setLanguageFiles((prev) => prev.filter((_, i) => i !== index));
    setUploadFiles((prev) => prev.filter((_, i) => i !== index));
  }, []);

  const replaceLanguageFiles = useCallback(async (index: number, file: File) => {
    const content = await file.text();
    setLanguageFiles((prev) =>
      prev.map((item, i) => {
        if (i === index) {
          return file;
        }

        return item;
      })
    );
    setUploadFiles((prev) =>
      prev.map((item, i) => {
        if (i === index) {
          return {
            name: file.name,
            locale: item.locale,
            content,
            isValidJsonFile: file.name.endsWith('.json'),
          };
        }

        return item;
      })
    );
  }, []);

  useEffect(() => {
    if (group) {
      setGroupIdentifier(group?.identifier);
    }
  }, [group]);

  const isUploadingPage = uploadFiles.length > 0;

  return (
    <>
      <Sidebar
        isOpened={open}
        onClose={onClose}
        onBack={onClose}
        isLoading={isLoading}
        onSubmit={handleSubmit(handleUploadSubmit)}
        isExpanded
        customHeader={
          <div style={{ display: 'flex', width: '100%', gap: 12 }}>
            <Group noWrap spacing={12} sx={{ maxWidth: 800, width: '100%' }}>
              <When truthy={!isUploadingPage}>
                <Tooltip
                  label={
                    <Group spacing={8} noWrap>
                      <Text color="#EAA900">
                        Upload a JSON with keys for all languages to use <br />
                        translations variables in the content editor
                      </Text>
                    </Group>
                  }
                  disabled={!hasMissingTranslations}
                  position="bottom"
                >
                  <Indicator
                    sx={{ cursor: 'pointer' }}
                    offset={6}
                    inline
                    position="bottom-end"
                    label={<Warning />}
                    disabled={!hasMissingTranslations}
                  >
                    <TranslationFolderIconSmall />
                  </Indicator>
                </Tooltip>
              </When>
              <When truthy={isUploadingPage}>
                <UploadTranslationFilesHeaderIcon />
              </When>
              <Stack spacing={0}>
                <Title size={2}>
                  {isUploadingPage ? 'Upload to ' : ''} {group?.name}
                </Title>
                <When truthy={!isUploadingPage}>
                  <Text size={14} color={colors.B40}>
                    {group?.identifier}
                  </Text>
                </When>
                <When truthy={isUploadingPage}>
                  <Text size={14} color={colors.B60}>
                    {uploadFiles.length} JSON files to be uploaded to {group?.identifier}
                  </Text>
                </When>
              </Stack>
            </Group>

            <Group noWrap spacing={20} ml={'auto'} sx={{ alignItems: 'flex-start' }}>
              <div data-test-id="upload-files-container">
                <FileButton
                  onChange={handleFileChange}
                  accept="application/json"
                  multiple
                  name="files"
                  resetRef={resetRef}
                  disabled={readonly}
                  data-test-id="upload-files-btn"
                >
                  {(props) => (
                    <Tooltip label="Upload files">
                      <ActionIcon variant="transparent" {...props} disabled={readonly}>
                        <Upload style={{ width: 20, height: 20 }} color={colors.B60} />
                      </ActionIcon>
                    </Tooltip>
                  )}
                </FileButton>
              </div>
              <When truthy={!isUploadingPage}>
                <Tooltip label="Edit">
                  <ActionIcon
                    variant="transparent"
                    onClick={() => {
                      onEditGroup(identifier);
                    }}
                  >
                    <Edit style={{ width: 20, height: 20 }} color={colors.B60} />
                  </ActionIcon>
                </Tooltip>
                <When truthy={!readonly}>
                  <Tooltip label="Delete">
                    <ActionIcon
                      variant="transparent"
                      onClick={() => setShowDeleteGroupModal(true)}
                      data-test-id="delete-group-btn"
                    >
                      <Trash color={colors.B60} />
                    </ActionIcon>
                  </Tooltip>
                </When>
              </When>
            </Group>
          </div>
        }
      >
        <When truthy={isUploadingPage}>
          <UploadTranslationsLayout
            data={uploadFiles}
            control={control}
            cancelUpload={resetUpload}
            isLoading={isUploadTranslationsLoading}
            localesWithFiles={localesWithFiles}
            replaceLanguageFiles={replaceLanguageFiles}
            removeLanguageFiles={removeLanguageFiles}
          />
        </When>
        <When truthy={!isUploadingPage}>
          <Dropzone
            styles={{
              inner: {
                height: '100%',
                pointerEvents: 'all',
              },
              root: {
                borderRadius: '0px',
                border: 'none',
                padding: '0px',
                marginRight: '-5px',
                height: '100%',
                cursor: 'default',
                backgroundColor: isDark ? colors.B17 : colors.white,
                ':hover': {
                  backgroundColor: isDark ? colors.B17 : colors.white,
                },
                '&[data-accept]': {
                  backgroundColor: isDark ? colors.B17 : colors.white,
                  borderRadius: '0px',
                },
              },
            }}
            onDrop={handleFileChange}
            accept={['application/json']}
            activateOnClick={false}
            activateOnKeyboard={false}
            multiple
          >
            <Dropzone.Idle>
              <TableContainer>
                <Table loading={isLoading} data={group?.translations || []} columns={columns} />
              </TableContainer>
            </Dropzone.Idle>
            <Dropzone.Accept>
              <BgColorContainer isDark={isDark}>
                <GrowContainer isDark={isDark}>
                  <Stack spacing={12}>
                    <UploadIconContainer />
                    <Text align="center" size="lg" color={colors.B40}>
                      Drop JSON file to upload it to the group
                    </Text>
                  </Stack>
                </GrowContainer>
              </BgColorContainer>
            </Dropzone.Accept>

            <Dropzone.Reject>
              <RejectContainer isDark={isDark}>
                <Stack spacing={12}>
                  <UploadIconContainer />
                  <Text align="center" size="lg" color={colors.B80}>
                    Drop JSON file to upload it to the group
                  </Text>
                  <Text align="center" size="lg" color={colors.error}>
                    Selected files contains unsupported file type
                  </Text>
                </Stack>
              </RejectContainer>
            </Dropzone.Reject>
          </Dropzone>
        </When>
        <ReUploadConfirmationModal
          isLoading={isUploadTranslationsLoading}
          locales={replacingLocales}
          open={showReUploadModal}
          onDismiss={() => setShowReUploadModal(false)}
          onConfirm={handleSubmit(handleReplaceSubmit)}
        />
        {group && (
          <DeleteGroupModal
            groupIdentifier={identifier}
            groupName={group.name}
            onDismiss={() => setShowDeleteGroupModal(false)}
            open={showDeleteGroupModal}
            onConfirm={() => {
              setShowDeleteGroupModal(false);
              onClose();
            }}
          />
        )}
      </Sidebar>
      <Outlet />
    </>
  );
};

function UploadIconContainer() {
  return (
    <Group spacing={24} noWrap align="center" position="center">
      <div style={{ position: 'relative', height: '58px', width: '88px' }}>
        <TranslationFileIcon style={{ position: 'absolute', top: 0 }} />
        <TranslationFileIcon
          style={{
            position: 'absolute',
            top: 0,
            left: '20px',
          }}
        />
        <TranslationFileIcon
          style={{
            position: 'absolute',
            top: 0,
            left: '40px',
          }}
        />
      </div>
      <ArrowForward />
      <TranslationFolderIcon />
    </Group>
  );
}

const TableContainer = styled.div`
  & tbody tr {
    .updated-at {
      display: block;
    }
    .row-actions {
      display: none;
    }
    &:hover {
      .updated-at {
        display: none;
      }
      .row-actions {
        display: block;
      }
    }
  }
`;

const GrowContainer = styled.div<{ isDark: boolean }>`
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  height: 100%;
  border: 1px dashed ${colors.B40};
  border-radius: 16px;
  background-color: ${({ isDark }) => (isDark ? colors.B20 : colors.BGLight)};
  overflow: hidden;
`;

const RejectContainer = styled(GrowContainer)`
  border: 1px dashed ${colors.error};
  background-color: transparent;
`;

const BgColorContainer = styled.div<{ isDark: boolean }>`
  background-color: ${({ isDark }) => (isDark ? colors.B17 : colors.white)};
  height: 100%;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { ActionIcon, FileButton, Group, Indicator, Stack, useMantineColorScheme } from '@mantine/core';
import { Dropzone } from '@mantine/dropzone';
import { colors, Edit, Sidebar, Table, Text, Title, Tooltip, Trash, Upload, When } from '@novu/design-system';
import { useCallback, useEffect, useMemo, useRef, useState } from 'react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/GroupFormCommonFields.tsx
Tamaño: 4637 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { Text, colors, Input, Select, When } from '@novu/design-system';
import { Group, CloseButton, Box, MultiSelectValueProps, useMantineTheme, Stack } from '@mantine/core';
import { Control, Controller } from 'react-hook-form';

import { FlagIcon, ICreateGroup, SelectItem } from './shared';
import { useFetchLocales, useGetDefaultLocale } from '../hooks';
import { DeleteLocaleModal } from './DeleteLocaleModal';

export const GroupFormCommonFields = ({
  control,
  edit = false,
  readonly,
}: {
  control: Control<ICreateGroup, any>;
  edit?: boolean;
  readonly: boolean;
}) => {
  const { locales, isLoading } = useFetchLocales();
  const { defaultLocale } = useGetDefaultLocale();
  const [localeToDelete, setLocaleToDelete] = useState<undefined | { label: string; value: string }>(undefined);

  return (
    <Stack spacing={32}>
      <Controller
        render={({ field }) => (
          <Input
            placeholder="Specify a group name"
            label="Group name"
            {...field}
            data-test-id="group-name-input"
            disabled={readonly}
          />
        )}
        rules={{
          required: 'Required - Group name',
        }}
        control={control}
        name="name"
      />
      <Controller
        render={({ field, fieldState }) => (
          <Input
            error={fieldState.error?.message}
            placeholder="Specify unique group identifier"
            label="Group identifier"
            {...field}
            data-test-id="group-identifier-input"
            disabled={readonly}
          />
        )}
        rules={{
          required: 'Required - Group identifier',
          pattern: {
            value: /^[A-Za-z0-9_-]+$/,
            message: 'Identifier must contains only alphabetical, numeric, dash or underscore characters',
          },
        }}
        control={control}
        name="identifier"
      />
      <Controller
        rules={{
          validate: (value) => value.includes(defaultLocale!) || 'Default locale must be included',
        }}
        render={({ field, fieldState }) => {
          return (
            <Select
              type="multiselect"
              placeholder="Select languages you want to add translations for..."
              label="Target languages"
              itemComponent={SelectItem}
              searchable
              loading={isLoading}
              data={
                locales
                  ? locales.map((locale) => {
                      return {
                        value: locale.langIso,
                        label: locale.langName,
                      };
                    })
                  : []
              }
              valueComponent={(props) => <Value {...props} edit={edit} setLocaleToDelete={setLocaleToDelete} />}
              error={fieldState.error?.message}
              {...field}
              data-test-id="group-target-languages-select"
              disabled={readonly}
            />
          );
        }}
        control={control}
        name="locales"
      />
      <DeleteLocaleModal
        localeToDelete={localeToDelete}
        onClose={() => {
          setLocaleToDelete(undefined);
        }}
        readonly={readonly}
      />
    </Stack>
  );
};

function Value({
  label,
  value,
  onRemove,
  edit,
  setLocaleToDelete,
}: MultiSelectValueProps & {
  value: string;
  onRemove: (e: any) => void;
  setLocaleToDelete: (item: { label: string; value: string }) => void;
  edit: boolean;
}) {
  const { defaultLocale } = useGetDefaultLocale();
  const theme = useMantineTheme();
  const dark = theme.colorScheme === 'dark';
  const backgroundColor = dark ? colors.B20 : colors.BGLight;
  const color = dark ? colors.B40 : colors.B80;

  return (
    <Box
      id={value}
      sx={{
        alignItems: 'center',
        display: 'flex',
        borderRadius: '5px',
        backgroundColor,
        margin: '5px',
      }}
    >
      <Group
        spacing={6}
        style={{
          margin: value !== defaultLocale ? '6.5px 0px 6.5px 10px' : '6.5px 10px 6.5px 10px',
        }}
      >
        <FlagIcon locale={value} />
        <Text rows={1}>{label}</Text>
      </Group>
      <When truthy={value !== defaultLocale}>
        <CloseButton
          style={{ color }}
          onMouseDown={(e) => {
            if (edit) {
              setLocaleToDelete({ label, value });

              return;
            }
            onRemove(e);
          }}
          variant="transparent"
          size={30}
          iconSize={15}
        />
      </When>
    </Box>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { Text, colors, Input, Select, When } from '@novu/design-system';
import { Group, CloseButton, Box, MultiSelectValueProps, useMantineTheme, Stack } from '@mantine/core';
import { Control, Controller } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/columns.tsx
Tamaño: 7839 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { FileButton, Group, Indicator, Skeleton, Stack, useMantineColorScheme } from '@mantine/core';
import {
  ActionButton,
  colors,
  IExtendedCellProps,
  IExtendedColumn,
  PencilOutlined,
  Text,
  Tooltip,
  Trash,
  Upload,
  When,
  withCellLoading,
} from '@novu/design-system';
import { format } from 'date-fns';
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { FlagMap } from '../icons/flags';

import { useEnvironment } from '../../../hooks';
import { ITranslation, useFetchLocales } from '../hooks';
import { useEditTranslationFileContext } from '../context/useEditTranslationFileContext';
import { ReuploadIcon, Star, Warning } from '../icons';
import { DeleteTranslationModal } from './TranslationGroup/DeleteTranslationModal';
import { useGetDefaultLocale } from '../hooks/useGetDefaultLocale';

const LanguageCell = ({ row: { original }, isLoading }: IExtendedCellProps<ITranslation>) => {
  const { getLocale } = useFetchLocales();
  const { isoLanguage, fileName } = original;
  const langName = getLocale(isoLanguage)?.langName;
  const { defaultLocale } = useGetDefaultLocale();
  const isDefaultLocale = defaultLocale === isoLanguage;
  const Icon = FlagMap[isoLanguage];
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  if (isLoading) {
    return (
      <Group spacing={12}>
        <Skeleton circle width={32} height={32} />
        <Stack spacing={2}>
          <Skeleton width={120} height={18} />
          <Skeleton width={100} height={14} />
        </Stack>
      </Group>
    );
  }

  return (
    <Group key={isoLanguage} spacing={12} data-test-id={`translation-row`} noWrap>
      <Indicator disabled={!isDefaultLocale} offset={isDark ? 7 : 9} inline label={<Star />}>
        <Tooltip
          label={
            <Group spacing={8} noWrap>
              <Upload color={colors.B40} width={32} height={32} />
              <Text color="#EAA900">
                Upload a JSON with {langName} keys to use <br /> translations variables in the content editor
              </Text>
            </Group>
          }
          disabled={fileName}
          position="bottom"
        >
          <Indicator
            sx={{ cursor: 'pointer' }}
            offset={8}
            disabled={fileName}
            inline
            position="bottom-end"
            label={<Warning width={12} height={12} />}
          >
            <IconWrapper>
              <Icon width={32} height={32} viewBox="0 0 40 40" />
            </IconWrapper>
          </Indicator>
        </Tooltip>
      </Indicator>

      <Stack spacing={0}>
        <Text data-test-id="translation-language">{langName}</Text>
        <Text size={12} color={colors.B40} data-test-id="translation-filename">
          {fileName ?? 'Empty...'}
        </Text>
      </Stack>
    </Group>
  );
};

const UpdateCell = ({ row: { original }, isLoading }: IExtendedCellProps<ITranslation>) => {
  const { isoLanguage, translations, fileName } = original;
  const navigate = useNavigate();
  const { handleFileSelect, setLocale, groupIdentifier, setIsTranslationExists } = useEditTranslationFileContext();

  const [showDeleteTranslationModal, setShowDeleteTranslationModal] = useState(false);
  const { readonly } = useEnvironment();

  const handleEdit = () => {
    setLocale(isoLanguage);
    setIsTranslationExists(!!translations);

    navigate(`/translations/edit/${groupIdentifier}/${isoLanguage}/edit`);
  };

  const handleFileInput = async (file: File | null) => {
    if (!file) return;
    setLocale(isoLanguage);
    setIsTranslationExists(!!translations);
    const path = translations ? 'replace' : 'edit';

    await handleFileSelect(file);
    navigate(`/translations/edit/${groupIdentifier}/${isoLanguage}/${path}`);
  };

  if (isLoading) {
    return (
      <Group spacing={12} noWrap>
        <Skeleton circle width={32} height={32} />
        <Stack spacing={2}>
          <Skeleton width={120} height={18} />
          <Skeleton width={100} height={14} />
        </Stack>
      </Group>
    );
  }

  return (
    <div>
      <div className="updated-at">
        <Text rows={1}>{format(new Date(original.updatedAt ?? '-'), 'dd/MM/yyyy HH:mm')}</Text>
      </div>
      <div className="row-actions">
        <When truthy={!readonly}>
          <Group spacing={20} noWrap>
            <When truthy={translations && fileName}>
              <Tooltip label="Replace file" withinPortal>
                <div>
                  <FileButton
                    inputProps={{ value: [] }}
                    onChange={handleFileInput}
                    accept="application/json"
                    name="files"
                  >
                    {(props) => <ActionButton {...props} Icon={ReuploadIcon} color={colors.B60} />}
                  </FileButton>
                </div>
              </Tooltip>
            </When>
            <When truthy={!translations || !fileName}>
              <Tooltip label="Upload file" withinPortal>
                <div>
                  <FileButton
                    inputProps={{ value: [] }}
                    onChange={handleFileInput}
                    accept="application/json"
                    name="files"
                  >
                    {(props) => <ActionButton {...props} Icon={Upload} color={colors.B60} />}
                  </FileButton>
                </div>
              </Tooltip>
            </When>
            <When truthy={translations && fileName}>
              <Tooltip label="Edit" withinPortal>
                <div>
                  <ActionButton onClick={handleEdit} Icon={PencilOutlined} color={colors.B60} />
                </div>
              </Tooltip>
            </When>
            <When truthy={translations && fileName}>
              <Tooltip label="Delete file" withinPortal>
                <div>
                  <ActionButton onClick={() => setShowDeleteTranslationModal(true)} Icon={Trash} color={colors.B60} />
                </div>
              </Tooltip>
            </When>
          </Group>
        </When>
        <When truthy={readonly}>
          <Tooltip label="View" withinPortal>
            <div>
              <ActionButton onClick={handleEdit} Icon={PencilOutlined} color={colors.B60} />
            </div>
          </Tooltip>
        </When>
      </div>
      <When truthy={showDeleteTranslationModal && !readonly}>
        <DeleteTranslationModal
          groupIdentifier={groupIdentifier}
          onDismiss={() => setShowDeleteTranslationModal(false)}
          open={showDeleteTranslationModal}
          onConfirm={() => {
            setShowDeleteTranslationModal(false);
          }}
          locale={isoLanguage}
        />
      </When>
    </div>
  );
};
export const columns: IExtendedColumn<ITranslation>[] = [
  {
    accessor: 'isoLanguage',
    Header: 'Language',
    maxWidth: 350,
    Cell: LanguageCell,
  },
  {
    accessor: 'value',
    Header: 'Value',
    width: 100,
    maxWidth: 100,
    Cell: withCellLoading(({ row: { original } }) => (
      <Text rows={1} data-test-id="translation-keys-value">
        {original.fileName && original.translations ? Object.keys(JSON.parse(original.translations))?.length : ''}
      </Text>
    )),
  },
  {
    accessor: 'createdAt',
    Header: 'Created at',
    width: 100,
    maxWidth: 100,
    Cell: withCellLoading(({ row: { original } }) => (
      <Text rows={1}>{format(new Date(original.createdAt ?? ''), 'dd/MM/yyyy HH:mm')}</Text>
    )),
  },
  {
    accessor: 'updatedAt',
    Header: 'Updated at',
    width: 100,
    maxWidth: 100,
    Cell: UpdateCell,
  },
];

const IconWrapper = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 4px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { FileButton, Group, Indicator, Skeleton, Stack, useMantineColorScheme } from '@mantine/core';
import {
ActionButton,
colors,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/shared.tsx
Tamaño: 1109 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { forwardRef, useMemo } from 'react';
import { Group, SelectItemProps } from '@mantine/core';
import { Text } from '@novu/design-system';
import { FlagMap } from '../icons/flags';

export interface ICreateGroup {
  name: string;
  identifier: string;
  locales: string[];
}

export interface ILocale {
  name: string;
  officialName: string | null;
  numeric: string;
  alpha2: string;
  alpha3: string;
  currencyName: string | null;
  currencyAlphabeticCode: string | null;
  langName: string;
  langIso: string;
}
export const FlagIcon = ({ locale, width = 16, height = 16 }: { locale: string; width?: number; height?: number }) => {
  const Icon = useMemo(() => {
    return FlagMap[locale];
  }, [locale, FlagMap]);

  return Icon ? <Icon width={width} height={height} viewBox="0 0 40 40" /> : null;
};

export const SelectItem = forwardRef<HTMLDivElement, SelectItemProps>(
  ({ label, value, ...others }: SelectItemProps, ref) => {
    return (
      <Group ref={ref} noWrap {...others}>
        <FlagIcon locale={value || ''} />
        <Text>{label}</Text>
      </Group>
    );
  }
);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { forwardRef, useMemo } from 'react';
import { Group, SelectItemProps } from '@mantine/core';
import { Text } from '@novu/design-system';
import { FlagMap } from '../icons/flags';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/DefaultLocaleModal/index.tsx
Tamaño: 4601 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { Group, Stack } from '@mantine/core';
import { Controller, useForm } from 'react-hook-form';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import {
  Modal,
  Title,
  Text,
  colors,
  Button,
  Select,
  errorMessage,
  successMessage,
  WarningIcon,
  When,
} from '@novu/design-system';
import { api } from '../../../../api';
import { useAuth } from '../../../../hooks/useAuth';

import { LocaleIcon } from '../../icons/LocaleIcon';
import { useFetchLocales, useGetDefaultLocale } from '../../hooks';
import { FlagIcon, SelectItem } from '../shared';
import { GlobeIcon } from '../../icons/GlobeIcon';

export const DefaultLocaleModal = ({
  open,
  onClose,
  onSave,
}: {
  open: boolean;
  onClose: () => void;
  onSave: () => void;
}) => {
  const queryClient = useQueryClient();
  const { locales, isLoading } = useFetchLocales();
  const { defaultLocale } = useGetDefaultLocale();
  const { currentOrganization } = useAuth();

  const { mutateAsync: saveDefaultLocale, isLoading: isSaving } = useMutation<any, any, any>(
    (args) => api.patch('/v1/translations/language', args),
    {
      onSuccess: async () => {
        queryClient.refetchQueries([`translations/defaultLocale, ${currentOrganization?._id}`]);
        queryClient.refetchQueries(['translationGroups']);
        queryClient.refetchQueries(['changesCount']);

        successMessage(`Default language has been set`);
        onSave();
      },
      onError: (e: any) => {
        errorMessage(e.message || 'Unexpected error');
      },
    }
  );

  const {
    control,
    handleSubmit,
    watch,
    reset,
    formState: { isDirty },
  } = useForm({
    defaultValues: {
      defaultLocale: '',
    },
  });

  const selectedLocale = watch('defaultLocale');

  const onSaveDefaultLocale = (values) => {
    saveDefaultLocale({
      locale: values.defaultLocale,
    });
  };

  useEffect(() => {
    if (defaultLocale) {
      reset({
        defaultLocale,
      });
    }
  }, [defaultLocale]);

  return (
    <Modal
      size="md"
      opened={open}
      title={
        <Group spacing={8}>
          <LocaleIcon />
          <Title size={2}>{defaultLocale ? 'Change' : 'Specify'} default language</Title>
        </Group>
      }
      onClose={onClose}
      centered
    >
      <form noValidate onSubmit={handleSubmit(onSaveDefaultLocale)}>
        <Stack spacing={16}>
          <Text color={colors.B60}>
            Notifications without specified translations will use the default language for all notifications within the
            current currentOrganization.
          </Text>
          <When truthy={defaultLocale && isDirty}>
            <Group spacing={8} style={{ width: `100%`, alignItems: 'flex-start' }} noWrap>
              <WarningIcon color="#eaa900" width="16px" height="16px" />
              <div style={{ flex: 1 }}>
                <Text color={'#eaa900'}>
                  Changing the default language applies immediately in production. Ensure the new default language
                  translations are promoted.
                </Text>
              </div>
            </Group>
          </When>
          <Controller
            render={({ field }) => (
              <Select
                placeholder="Default language"
                itemComponent={SelectItem}
                searchable
                loading={isLoading}
                data={(locales || []).map((locale) => {
                  return {
                    value: locale.langIso,
                    label: locale.langName,
                  };
                })}
                inputProps={{
                  icon: !selectedLocale ? (
                    <GlobeIcon style={{ color: colors.B40 }} />
                  ) : (
                    <FlagIcon locale={selectedLocale} />
                  ),
                }}
                {...field}
                data-test-id="default-language-select"
              />
            )}
            control={control}
            name="defaultLocale"
          />
        </Stack>
        <Group position="right" spacing={24} mt={30}>
          <Button
            onClick={() => {
              onClose();
            }}
            variant="outline"
            disabled={isSaving}
          >
            Cancel
          </Button>
          <Button loading={isSaving} type="submit" data-test-id="default-language-submit-btn" disabled={!isDirty}>
            {defaultLocale ? 'Change language' : 'Specify'}
          </Button>
        </Group>
      </form>
    </Modal>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect } from 'react';
import { Group, Stack } from '@mantine/core';
import { Controller, useForm } from 'react-hook-form';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/TranslationGroup/DeleteGroupModal.tsx
Tamaño: 1797 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Group, Stack } from '@mantine/core';
import { Button, colors, Label, Modal, Text, WarningIcon } from '@novu/design-system';
import React from 'react';
import { useDeleteTranslationGroup } from '../../hooks';

export function DeleteGroupModal({
  onDismiss,
  open,
  groupName,
  groupIdentifier,
  onConfirm,
}: {
  onDismiss: () => void;
  open: boolean;
  groupName: string;
  groupIdentifier: string;
  onConfirm: () => void;
}) {
  const { deleteTranslationGroup, isLoading } = useDeleteTranslationGroup();

  const handleConfirm = async () => {
    await deleteTranslationGroup({ id: groupIdentifier });
    onConfirm();
  };

  return (
    <Modal opened={open} title={<ModalTitle groupName={groupName} />} onClose={onDismiss} centered>
      <Stack spacing={32}>
        <div>
          <Text color={colors.B60}>
            Deleting a translation group removes its JSON files containing translation keys. Notifications that use
            these variables will not be translated and will display the variables instead of the text message.
          </Text>
        </div>
        <Group position="right">
          <Group spacing={24}>
            <Button variant="outline" onClick={onDismiss}>
              Cancel
            </Button>
            <Button loading={isLoading} onClick={handleConfirm} data-test-id="delete-group-submit-btn">
              Delete group
            </Button>
          </Group>
        </Group>
      </Stack>
    </Modal>
  );
}

function ModalTitle({ groupName }) {
  return (
    <Group spacing={8}>
      <WarningIcon width="16px" height="16px" />
      <StyledLabel gradientColor="none">Delete {groupName} group?</StyledLabel>
    </Group>
  );
}

const StyledLabel = styled(Label)`
  color: #eaa900;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Group, Stack } from '@mantine/core';
import { Button, colors, Label, Modal, Text, WarningIcon } from '@novu/design-system';
import React from 'react';
import { useDeleteTranslationGroup } from '../../hooks';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/TranslationGroup/DeleteTranslationModal.tsx
Tamaño: 2032 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Group, Stack } from '@mantine/core';
import { Button, colors, Label, Modal, Text, WarningIcon } from '@novu/design-system';
import { useDeleteTranslation, useFetchLocales } from '../../hooks';
import { FlagIcon } from '../shared';

export function DeleteTranslationModal({
  onDismiss,
  open,
  groupIdentifier,
  locale,
  onConfirm,
}: {
  onDismiss: () => void;
  open: boolean;
  groupIdentifier: string;
  locale: string;
  onConfirm: () => void;
}) {
  const { deleteTranslation, isLoading } = useDeleteTranslation();

  const handleConfirm = async () => {
    await deleteTranslation({ identifier: groupIdentifier, locale });
    onConfirm();
  };

  return (
    <Modal opened={open} title={<ModalTitle locale={locale} />} onClose={onDismiss} centered>
      <Stack spacing={32}>
        <div>
          <Text color={colors.B60}>
            Deleting a language removes its JSON file containing translation keys. Notifications that use these
            variables will not be translated and will display the variables instead of the text message.
          </Text>
        </div>
        <Group position="right">
          <Group spacing={24}>
            <Button variant="outline" onClick={onDismiss}>
              Cancel
            </Button>
            <Button loading={isLoading} onClick={handleConfirm} data-test-id="delete-translation-submit-btn">
              Delete language
            </Button>
          </Group>
        </Group>
      </Stack>
    </Modal>
  );
}

function ModalTitle({ locale }) {
  const { getLocale } = useFetchLocales();

  return (
    <Group spacing={8}>
      <WarningIcon color="#eaa900" width="16px" height="16px" />

      <StyledLabel gradientColor="none">
        Delete &nbsp;
        <FlagIcon locale={locale} /> &nbsp;
        <StyledLabel gradientColor="none">{getLocale(locale)?.langName} </StyledLabel>
        &nbsp; language?
      </StyledLabel>
    </Group>
  );
}

const StyledLabel = styled(Label)`
  color: #eaa900;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Group, Stack } from '@mantine/core';
import { Button, colors, Label, Modal, Text, WarningIcon } from '@novu/design-system';
import { useDeleteTranslation, useFetchLocales } from '../../hooks';
import { FlagIcon } from '../shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/TranslationGroup/TranslationGroupEmptyList.tsx
Tamaño: 2621 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, Stack } from '@mantine/core';
import { Button, colors, Text, Title } from '@novu/design-system';
import { TranslationFileIcon, TranslationFolderIcon, TranslationVariablesIcon, AddGroupIcon } from '../../icons';

export function TranslationGroupEmptyList({
  handleAddGroupButtonClick,
  readonly,
}: {
  handleAddGroupButtonClick: () => void;
  readonly: boolean;
}) {
  return (
    <Stack
      sx={{
        height: '80%',
        width: '100%',
      }}
      align="center"
      justify="center"
      spacing={40}
    >
      <Title color={colors.B40}>Set up message translations</Title>
      <Group spacing={40}>
        <Stack align="center" justify="center">
          <TranslationFolderIcon />
          <Group spacing={6} align="flex-start">
            <Text weight="bold" color={colors.B40}>
              1.
            </Text>
            <Text weight="bold" color={colors.B40}>
              Add a translation group <br />
              and specify languages
            </Text>
          </Group>
        </Stack>
        <Stack align="center" justify="center">
          <div style={{ position: 'relative', height: '58px', width: '88px' }}>
            <TranslationFileIcon style={{ position: 'absolute', top: 0 }} />
            <TranslationFileIcon
              style={{
                position: 'absolute',
                top: 0,
                left: '20px',
              }}
            />
            <TranslationFileIcon
              style={{
                position: 'absolute',
                top: 0,
                left: '40px',
              }}
            />
          </div>
          <Group spacing={6} align="flex-start">
            <Text weight="bold" color={colors.B40}>
              2.
            </Text>
            <Text weight="bold" color={colors.B40}>
              Upload JSON files with
              <br /> the multiple languages
            </Text>
          </Group>
        </Stack>
        <Stack align="center" justify="center">
          <TranslationVariablesIcon />
          <Group spacing={6} align="flex-start">
            <Text weight="bold" color={colors.B40}>
              3.
            </Text>
            <Text weight="bold" color={colors.B40}>
              Use translations variables
              <br />
              in the content editor
            </Text>
          </Group>
        </Stack>
      </Group>
      <Button
        onClick={handleAddGroupButtonClick}
        data-test-id="add-group-btn"
        disabled={readonly}
        icon={<AddGroupIcon />}
      >
        Add group
      </Button>
    </Stack>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, Stack } from '@mantine/core';
import { Button, colors, Text, Title } from '@novu/design-system';
import { TranslationFileIcon, TranslationFolderIcon, TranslationVariablesIcon, AddGroupIcon } from '../../icons';
export function TranslationGroupEmptyList({
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/TranslationGroup/TranslationGroupListToolbar.tsx
Tamaño: 635 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import React from 'react';
import { PlusButton } from '@novu/design-system';

const Container = styled.div`
  display: flex;
  justify-content: space-between;
`;

export const TranslationGroupListToolbar = ({
  isLoading,
  onAddGroupClick,
  readonly,
}: {
  isLoading: boolean;
  onAddGroupClick: React.MouseEventHandler<HTMLButtonElement>;
  readonly: boolean;
}) => {
  return (
    <Container>
      <PlusButton
        label="Add group"
        onClick={onAddGroupClick}
        disabled={isLoading || readonly}
        data-test-id="add-translation-group"
      />
    </Container>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import React from 'react';
import { PlusButton } from '@novu/design-system';
const Container = styled.div`
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/TranslationGroup/TranslationGroupsList.tsx
Tamaño: 4077 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Group, Indicator } from '@mantine/core';
import { colors, IExtendedColumn, Table, Text, Tooltip, withCellLoading, IRow } from '@novu/design-system';
import { format } from 'date-fns';
import React from 'react';
import { ITranslationGroup } from '../../hooks';
import { TranslationFolderIconSmall } from '../../icons';
import { FlagIcon } from '../shared';
import { Warning } from '../../icons/Warning';

const TranslationNameCell = withCellLoading(({ row: { original } }) => {
  const localesLength = original.uiConfig?.locales?.length;
  const missingLocalesLength = original.uiConfig?.localesMissingTranslations?.length;

  return (
    <>
      <Group spacing={8} align="center" data-test-id={original.identifier}>
        <Tooltip
          label={
            <Text color="#EAA900">
              {missingLocalesLength === localesLength ? 'All' : 'Some'} languages missing value
            </Text>
          }
          disabled={!missingLocalesLength}
          position="bottom"
        >
          <Indicator
            label={<Warning width="16px" height="16px" />}
            position="bottom-end"
            size={16}
            offset={6}
            zIndex={'auto'}
            disabled={!missingLocalesLength}
            inline
          >
            <TranslationFolderIconSmall />
          </Indicator>
        </Tooltip>
        <div>
          <Text>{original.name}</Text>
          <Text color={colors.B40} size={12}>
            {original.identifier}
          </Text>
        </div>
      </Group>
    </>
  );
});

const LanguagesCell = withCellLoading(({ row: { original } }) => {
  const locales = original.uiConfig?.locales || [];
  const localesLimit = 5;
  const localesLength = locales.length;
  const localesExceedLimit = localesLength > localesLimit;
  const localesToDisplay = localesExceedLimit ? locales.slice(0, localesLimit) : locales;

  return (
    <Group align="center" spacing={8}>
      {localesToDisplay?.map((locale, index) => (
        <Tooltip key={index} label={locale}>
          <FlagContainer>
            <FlagIcon locale={locale} width={20} height={20} />
          </FlagContainer>
        </Tooltip>
      ))}
      {localesExceedLimit && <LocalesBadge>+{localesLength - localesLimit}</LocalesBadge>}
    </Group>
  );
});

const columns: IExtendedColumn<ITranslationGroup>[] = [
  {
    accessor: 'name',
    Header: 'Name',
    Cell: TranslationNameCell,
  },
  {
    accessor: 'locales',
    Header: 'Languages',
    Cell: LanguagesCell,
  },
  {
    accessor: 'createdAt',
    Header: 'Created At',
    Cell: withCellLoading(({ row: { original } }) => (
      <Text color={colors.B60}>{format(new Date(original.createdAt), 'dd/MM/yyyy HH:mm')}</Text>
    )),
  },
  {
    accessor: 'updatedAt',
    Header: 'Updated At',
    Cell: withCellLoading(({ row: { original } }) => (
      <Text color={colors.B60}>{format(new Date(original.updatedAt), 'dd/MM/yyyy HH:mm')}</Text>
    )),
  },
];

export function TranslationGroupsList({
  isLoading,
  data,
  page,
  pageSize,
  totalCount,
  handlePageChange,
  onRowClick,
}: {
  isLoading: boolean;
  data: ITranslationGroup[];
  page: number;
  pageSize: number;
  totalCount: number;
  onRowClick: (row: IRow<ITranslationGroup>) => void;
  handlePageChange: (page: number) => void;
}) {
  return (
    <div>
      <Table
        loading={isLoading}
        data-test-id="translation-group-table"
        columns={columns}
        data={data || []}
        onRowClick={onRowClick}
        pagination={{
          pageSize,
          current: page,
          total: totalCount,
          onPageChange: handlePageChange,
        }}
      />
    </div>
  );
}

const LocalesBadge = styled.div`
  padding: 0px 8px;
  border-radius: 20px;
  background-color: ${colors.B30};
  color: ${colors.B60};
  font-size: 12px;
  font-style: normal;
  font-weight: 700;
  line-height: 20px;
`;

const FlagContainer = styled.div`
  display: flex;
  align-items: center;
  justify-content: center;
  height: 20px;
  cursor: pointer;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Group, Indicator } from '@mantine/core';
import { colors, IExtendedColumn, Table, Text, Tooltip, withCellLoading, IRow } from '@novu/design-system';
import { format } from 'date-fns';
import React from 'react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/UploadFilesSection/AccordionRowActionTools.tsx
Tamaño: 1455 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ActionIcon, FileButton, Group } from '@mantine/core';
import { ArrowDown, ChevronDown, ChevronUp, colors, Tooltip, Trash } from '@novu/design-system';
import React from 'react';
import { ChevronDownIcon, ChevronUpIcon, ReuploadIcon } from '../../icons';

export function AccordionRowActionTools({ setAccordionValue, value, accordionValue, removeRow, index, replaceRow }) {
  const handleReplaceRow = (file: File | null) => {
    replaceRow(index, file);
  };

  return (
    <Group align="center" spacing={20} noWrap>
      <Tooltip label="Replace file" withinPortal>
        <div>
          <FileButton onChange={handleReplaceRow} accept="application/json" name="files">
            {(props) => (
              <ActionIcon variant="transparent" {...props} title="Replace file">
                <ReuploadIcon color={colors.B60} />
              </ActionIcon>
            )}
          </FileButton>
        </div>
      </Tooltip>
      <Tooltip label="Remove" withinPortal>
        <div>
          <ActionIcon variant="transparent" onClick={() => removeRow(index)} title="Remove">
            <Trash color={colors.B60} />
          </ActionIcon>
        </div>
      </Tooltip>
      <div>
        <ActionIcon variant="transparent" onClick={() => setAccordionValue(value)}>
          {accordionValue === value ? <ChevronUpIcon color={colors.B60} /> : <ChevronDownIcon color={colors.B60} />}
        </ActionIcon>
      </div>
    </Group>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ActionIcon, FileButton, Group } from '@mantine/core';
import { ArrowDown, ChevronDown, ChevronUp, colors, Tooltip, Trash } from '@novu/design-system';
import React from 'react';
import { ChevronDownIcon, ChevronUpIcon, ReuploadIcon } from '../../icons';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/UploadFilesSection/FileEditEditor.tsx
Tamaño: 7365 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { css, cx } from '@emotion/css';
import styled from '@emotion/styled';
import { Group, useMantineTheme } from '@mantine/core';
import { Editor, Monaco } from '@monaco-editor/react';
import { colors, Text } from '@novu/design-system';
import { format } from 'date-fns';
import { editor as NEditor, Range } from 'monaco-editor';
import React, { useEffect, useRef, useState } from 'react';
import { useEditTranslationFileContext } from '../../context/useEditTranslationFileContext';

export function FileEditEditor({
  height = '300px',
  value,
  createdAt,
  updatedAt,
  setIsValidJsonFile,
  readonly,
}: {
  height?: string;
  value: string;
  createdAt?: string;
  updatedAt?: string;
  setIsValidJsonFile: (isValid: boolean) => void;
  readonly: boolean;
}) {
  const { colorScheme } = useMantineTheme();
  const isDark = colorScheme === 'dark';
  const monacoRef = useRef<Monaco | null>(null);
  const decoratorsRef = useRef<NEditor.IEditorDecorationsCollection | null>(null);

  const [errorLineNumbers, setErrorLineNumbers] = useState<number[]>([]);

  const [keys, setKeys] = useState(0);

  useEffect(() => {
    if (monacoRef.current === null) {
      return;
    }
    monacoRef.current.editor.setTheme(colorScheme === 'dark' ? 'novu-dark' : 'novu');
  }, [colorScheme]);

  const { setFileText, fileText } = useEditTranslationFileContext();

  return (
    <div>
      <KeysContainer isDark={isDark}>
        <Text color={colors.B60}>{keys} keys</Text>

        <Group spacing={24} noWrap align="center">
          {createdAt && (
            <Group spacing={5}>
              <Text color={colors.B40}>Created at</Text>
              <Text color={colors.B60}>{format(new Date(createdAt ?? ''), 'dd/MM/yyyy HH:mm')}</Text>
            </Group>
          )}
          {updatedAt && (
            <Group spacing={5}>
              <Text color={colors.B40}>Updated at</Text>
              <Text color={colors.B60}>{format(new Date(updatedAt ?? ''), 'dd/MM/yyyy HH:mm')}</Text>
            </Group>
          )}
        </Group>
      </KeysContainer>
      <Editor
        height={height}
        defaultLanguage="json"
        theme={isDark ? 'vs-dark' : 'vs'}
        language={'json'}
        defaultValue={value}
        onValidate={(markers) => {
          const decorators: NEditor.IModelDeltaDecoration[] = [];
          const errorLines: number[] = [];
          markers.forEach((marker) => {
            const range = new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn);
            errorLines.push(marker.startLineNumber, marker.endLineNumber);
            decorators.push({
              range,
              options: {
                className: cx(errorLineClass),
              },
            });
          });

          setErrorLineNumbers(Array.from(new Set(errorLines)));
          decoratorsRef.current?.set(decorators);
          if (markers.length === 0) {
            setIsValidJsonFile(true);
            setKeys(Object.keys(JSON.parse(fileText ?? '{}')).length);
          } else {
            setIsValidJsonFile(false);
          }
        }}
        onChange={(val) => {
          if (readonly) return;

          setFileText(val!);
        }}
        onMount={(editor, monaco) => {
          const themeName = colorScheme === 'dark' ? 'novu-dark' : 'novu';
          monaco.editor.defineTheme('novu-dark', {
            base: 'vs-dark',
            inherit: true,
            rules: [],
            colors: {
              'editor.background': colors.B20,
              'editor.lineHighlightBackground': colors.B30,
              'editorSuggestWidget.background': colors.B30,
              'editorSuggestWidget.foreground': colors.B60,
              'editorSuggestWidget.selectedBackground': colors.B60,
              'editorSuggestWidget.highlightForeground': colors.B60,
            },
          });

          monaco.editor.defineTheme('novu', {
            base: 'vs',
            inherit: true,
            rules: [],
            colors: {
              'editor.background': colors.BGLight,
              'editor.lineHighlightBackground': colors.B98,
              'editorSuggestWidget.background': colors.white,
              'editorSuggestWidget.foreground': colors.B98,
              'editorSuggestWidget.selectedBackground': colors.B98,
              'editorSuggestWidget.highlightForeground': colors.B98,
            },
          });

          monaco.editor.setTheme(themeName);
          monacoRef.current = monaco;
          const decorators = editor.createDecorationsCollection([]);

          decoratorsRef.current = decorators;

          setKeys(Object.keys(JSON.parse(value ?? '{}')).length);
          setFileText(value);
        }}
        options={{
          minimap: {
            enabled: false,
          },
          // workaround from: https://github.com/microsoft/monaco-editor/issues/2093
          accessibilitySupport: 'off',
          renderLineHighlight: 'all',
          scrollBeyondLastLine: false,
          fontSize: 14,
          lineHeight: 20,
          lineNumbers: (number) => {
            return errorLineNumbers.includes(number) ? ERROR_ICON : `${number}`;
          },
          readOnly: readonly,
        }}
      />
    </div>
  );
}

const errorLineClass = css`
  background-color: rgba(229, 69, 69, 0.4) !important;
`;

const KeysContainer = styled.div<{ isDark: boolean }>`
  display: flex;
  height: 32px;
  padding: 0px 12px;
  padding-right: 30px;
  justify-content: space-between;
  align-items: center;
  background-color: ${({ isDark }) => (isDark ? colors.B15 : colors.B85)};
  border-top-left-radius: 7px;
  border-top-right-radius: 7px;
`;

const ERROR_ICON = `<div style="width: 48px !important; height: 20px !important; margin: 0; padding: 0;">
<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
<mask id="mask0_2586_81756" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="20" height="20">
  <rect width="20" height="20" fill="#D9D9D9"/>
</mask>
<g mask="url(#mask0_2586_81756)">
  <path d="M10.0003 14.1667C10.2364 14.1667 10.4344 14.0869 10.5941 13.9272C10.7538 13.7674 10.8337 13.5695 10.8337 13.3334C10.8337 13.0973 10.7538 12.8994 10.5941 12.7397C10.4344 12.5799 10.2364 12.5001 10.0003 12.5001C9.76421 12.5001 9.5663 12.5799 9.40658 12.7397C9.24685 12.8994 9.16699 13.0973 9.16699 13.3334C9.16699 13.5695 9.24685 13.7674 9.40658 13.9272C9.5663 14.0869 9.76421 14.1667 10.0003 14.1667ZM9.16699 10.8334H10.8337V5.83341H9.16699V10.8334ZM10.0003 18.3334C8.84755 18.3334 7.76421 18.1147 6.75033 17.6772C5.73644 17.2397 4.85449 16.6459 4.10449 15.8959C3.35449 15.1459 2.76074 14.264 2.32324 13.2501C1.88574 12.2362 1.66699 11.1529 1.66699 10.0001C1.66699 8.8473 1.88574 7.76397 2.32324 6.75008C2.76074 5.73619 3.35449 4.85425 4.10449 4.10425C4.85449 3.35425 5.73644 2.7605 6.75033 2.323C7.76421 1.8855 8.84755 1.66675 10.0003 1.66675C11.1531 1.66675 12.2364 1.8855 13.2503 2.323C14.2642 2.7605 15.1462 3.35425 15.8962 4.10425C16.6462 4.85425 17.2399 5.73619 17.6774 6.75008C18.1149 7.76397 18.3337 8.8473 18.3337 10.0001C18.3337 11.1529 18.1149 12.2362 17.6774 13.2501C17.2399 14.264 16.6462 15.1459 15.8962 15.8959C15.1462 16.6459 14.2642 17.2397 13.2503 17.6772C12.2364 18.1147 11.1531 18.3334 10.0003 18.3334Z" fill="#E64545"/>
</g>
</svg>
</div>`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { css, cx } from '@emotion/css';
import styled from '@emotion/styled';
import { Group, useMantineTheme } from '@mantine/core';
import { Editor, Monaco } from '@monaco-editor/react';
import { colors, Text } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/UploadFilesSection/FileNameInput.tsx
Tamaño: 952 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import { Input } from '@novu/design-system';
import React, { useEffect } from 'react';
import { useEditTranslationFileContext } from '../../context/useEditTranslationFileContext';
import { CodeBracketOutlined } from '../../icons';

export function FileNameInput({ currentFileName, readonly }: { currentFileName: string; readonly: boolean }) {
  const { setFileName, fileName } = useEditTranslationFileContext();

  useEffect(() => {
    setFileName(currentFileName);
  }, [currentFileName]);

  return (
    <Group align="center" spacing={12} noWrap>
      <div>
        <CodeBracketOutlined />
      </div>
      <div style={{ flex: 1 }}>
        <Input
          value={fileName || ''}
          onChange={(e) => {
            setFileName(e.target.value);
          }}
          placeholder="File name"
          error={fileName === ''}
          disabled={readonly}
        />
      </div>
    </Group>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import { Input } from '@novu/design-system';
import React, { useEffect } from 'react';
import { useEditTranslationFileContext } from '../../context/useEditTranslationFileContext';
import { CodeBracketOutlined } from '../../icons';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/UploadFilesSection/FilesDiffSection.tsx
Tamaño: 4149 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Center, Grid, useMantineTheme } from '@mantine/core';
import { DiffEditor, Monaco } from '@monaco-editor/react';

import { colors, Text } from '@novu/design-system';
import React, { useEffect, useRef } from 'react';
import { FileEditEditor } from './FileEditEditor';

export function FilesDiffSection({
  text,
  original = '',
  readonly,
  setIsValidJsonFile,
}: {
  text: string;
  original?: string;
  readonly: boolean;
  setIsValidJsonFile: (isValid: boolean) => void;
}) {
  const { colorScheme } = useMantineTheme();
  const isDark = colorScheme === 'dark';
  const keys = Object.keys(JSON.parse(text)).length;
  const origKeys = original.length ? Object.keys(JSON.parse(original)).length : 0;
  const monacoRef = useRef<Monaco | null>(null);

  useEffect(() => {
    if (monacoRef.current === null) {
      return;
    }
    monacoRef.current.editor.setTheme(isDark ? 'novu-dark' : 'novu');
  }, [colorScheme]);

  if (!text) return null;
  if (!original) return <FileEditEditor value={text} setIsValidJsonFile={setIsValidJsonFile} readonly={readonly} />;

  return (
    <div>
      <KeysContainer isDark={isDark}>
        <Grid w={'100%'} gutter={0}>
          <Grid.Col span={6}>
            <Center inline>
              <Text color={colors.B40}>Existing file</Text>
              <Text ml={8} color={colors.B60}>
                {origKeys} keys
              </Text>
            </Center>
          </Grid.Col>
          <Grid.Col span={6}>
            <Center inline>
              <Text color={colors.B40}>Uploading file</Text>
              <Text ml={8} color={colors.B60}>
                {keys} keys
              </Text>
            </Center>
          </Grid.Col>
        </Grid>
      </KeysContainer>
      <div>
        <DiffEditor
          theme={isDark ? 'vs-dark' : 'vs'}
          height="400px"
          original={original}
          modified={text}
          language={'json'}
          onMount={(editor, monaco) => {
            const themeName = isDark ? 'novu-dark' : 'novu';
            monaco.editor.defineTheme('novu-dark', {
              base: 'vs-dark',
              inherit: true,
              rules: [],
              colors: {
                'editor.background': colors.B20,
                'editor.lineHighlightBackground': colors.B30,
                'editorSuggestWidget.background': colors.B30,
                'editorSuggestWidget.foreground': colors.B60,
                'editorSuggestWidget.selectedBackground': colors.B60,
                'editorSuggestWidget.highlightForeground': colors.B60,
              },
            });

            monaco.editor.defineTheme('novu', {
              base: 'vs',
              inherit: true,
              rules: [],
              colors: {
                'editor.background': colors.BGLight,
                'editor.lineHighlightBackground': colors.B98,
                'editorSuggestWidget.background': colors.white,
                'editorSuggestWidget.foreground': colors.B98,
                'editorSuggestWidget.selectedBackground': colors.B98,
                'editorSuggestWidget.highlightForeground': colors.B98,
              },
            });

            monaco.editor.setTheme(themeName);
            monacoRef.current = monaco;
          }}
          options={{
            minimap: {
              enabled: false,
            },
            // workaround from: https://github.com/microsoft/monaco-editor/issues/2093
            accessibilitySupport: 'off',
            renderLineHighlight: 'all',
            scrollBeyondLastLine: false,
            enableSplitViewResizing: false,
            fontSize: 14,
            lineHeight: 20,
            originalEditable: false,
            readOnly: readonly,
          }}
        />
      </div>
    </div>
  );
}

const KeysContainer = styled.div<{ isDark: boolean }>`
  display: flex;
  height: 32px;
  padding: 0px 12px;
  padding-right: 30px;
  justify-content: space-between;
  align-items: center;
  background-color: ${({ isDark }) => (isDark ? colors.B15 : colors.B85)};
  border-top-left-radius: 7px;
  border-top-right-radius: 7px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Center, Grid, useMantineTheme } from '@mantine/core';
import { DiffEditor, Monaco } from '@monaco-editor/react';
import { colors, Text } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/UploadFilesSection/LanguageSelect.tsx
Tamaño: 3372 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { createStyles, Group, Stack } from '@mantine/core';
import { colors, Label, Popover, Text, Select } from '@novu/design-system';

import React, { useState } from 'react';
import { Control, Controller, useWatch } from 'react-hook-form';
import { useFetchLocales } from '../../hooks';
import { TranslateIcon } from '../../icons';
import { LocalesFormSchema } from '../EditTranslationsSidebar';
import { FlagIcon, SelectItem } from '../shared';
import { useEnvironment } from '../../../../hooks';

type Props = {
  control: Control<LocalesFormSchema>;
  index: number;
};
export function LanguageSelect({ control, index }: Props) {
  const { classes } = useStyles();
  const { locales, isLoading } = useFetchLocales();

  const formLocales = useWatch({
    control,
    name: `formLocales`,
  });

  const isDuplicate = formLocales?.some((locale, i) => {
    return locale?.locale === formLocales[index]?.locale && i !== index;
  });

  const [isHovered, setIsHovered] = useState(false);

  const handleHover = (hoverState: boolean) => {
    setIsHovered(hoverState);
  };

  const { readonly } = useEnvironment();

  if (!locales) {
    return null;
  }

  return (
    <Popover
      withinPortal
      target={
        <div onMouseEnter={() => handleHover(true)} onMouseLeave={() => handleHover(false)}>
          <Controller
            name={`formLocales.${index}.locale`}
            control={control}
            rules={{
              required: 'Select a locale',
            }}
            render={({ field }) => {
              return (
                <Select
                  inputProps={{
                    error: isDuplicate,
                    miw: 180,
                  }}
                  itemComponent={SelectItem}
                  data={locales.map((locale) => {
                    return {
                      value: locale.langIso,
                      label: locale.langName,
                    };
                  })}
                  icon={<FlagIcon locale={field.value} />}
                  loading={isLoading}
                  searchable
                  withinPortal
                  disabled={readonly}
                  {...field}
                />
              );
            }}
          />
        </div>
      }
      content={<PopoverContent />}
      classNames={classes}
      position="left"
      opened={isHovered && isDuplicate}
      middlewares={{ flip: false, shift: false }}
    />
  );
}

const PopoverContent = () => {
  return (
    <Stack spacing={10}>
      <Group spacing={8} align="center">
        <TranslateIcon />
        <Label color={colors.error} gradientColor="none">
          Select different language
        </Label>
      </Group>
      <Text color={colors.error}>
        Uploading multiple files to the same language is restricted. Please select different languages for each of the
        uploaded files.
      </Text>
    </Stack>
  );
};

const useStyles = createStyles(() => ({
  dropdown: {
    padding: '16px',
    color: colors.error,
    border: 'none',
    maxWidth: '320px',
    background: 'linear-gradient(0deg, rgba(229, 69, 69, 0.20) 0%, rgba(229, 69, 69, 0.20) 100%), #23232B',
  },
  arrow: {
    width: '7px',
    height: '7px',
    margin: '0px',
    background: 'linear-gradient(0deg, rgba(229, 69, 69, 0.20) 0%, rgba(229, 69, 69, 0.20) 100%), #23232B',
  },
}));


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { createStyles, Group, Stack } from '@mantine/core';
import { colors, Label, Popover, Text, Select } from '@novu/design-system';
import React, { useState } from 'react';
import { Control, Controller, useWatch } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/UploadFilesSection/ReUploadConfirmationModal.tsx
Tamaño: 2189 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Group, Indicator, ScrollArea, Stack } from '@mantine/core';
import { Button, Checkbox, colors, Label, Modal, Text } from '@novu/design-system';
import React from 'react';
import { useFetchLocales } from '../../hooks';
import { CodeBracketOutlined, Warning } from '../../icons';
import { FlagIcon } from '../shared';

export function ReUploadConfirmationModal({ locales, isLoading, open, onDismiss, onConfirm }) {
  const { getLocale } = useFetchLocales();

  const handleConfirm = () => {
    onConfirm();
    onDismiss();
  };

  return (
    <Modal opened={open} title={<ModalTitle />} onClose={onDismiss} centered>
      <Stack spacing={32}>
        <div>
          <Text color={colors.B60}>Uploading files will replace existing files for the following languages:</Text>
          <ScrollArea mah="130px">
            <Group mt={12} spacing={8}>
              {locales?.map((locale) => {
                return (
                  <Group spacing={4} noWrap key={locale}>
                    <FlagIcon locale={locale} />
                    <Text color={colors.B60}>{getLocale(locale)?.langName}</Text>
                  </Group>
                );
              })}
            </Group>
          </ScrollArea>
        </div>
        <Group position="apart">
          <div>
            <Checkbox label="Don't show again" />
          </div>
          <Group spacing={24}>
            <Button variant="outline" onClick={onDismiss}>
              Cancel
            </Button>
            <Button loading={isLoading} onClick={handleConfirm}>
              Replace
            </Button>
          </Group>
        </Group>
      </Stack>
    </Modal>
  );
}

function ModalTitle() {
  return (
    <Group spacing={8}>
      <Indicator
        label={<Warning width="16px" height="16px" />}
        position="bottom-end"
        size={12}
        offset={3}
        zIndex={'auto'}
        inline
      >
        <CodeBracketOutlined />
      </Indicator>
      <StyledLabel gradientColor="none">Some existing files will be replaced</StyledLabel>
    </Group>
  );
}

const StyledLabel = styled(Label)`
  color: #eaa900;
  font-size: 20px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Group, Indicator, ScrollArea, Stack } from '@mantine/core';
import { Button, Checkbox, colors, Label, Modal, Text } from '@novu/design-system';
import React from 'react';
import { useFetchLocales } from '../../hooks';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/UploadFilesSection/SingleTranslationFileEditSidebar.tsx
Tamaño: 7062 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { ActionIcon, FileButton, Group, Stack } from '@mantine/core';
import React, { useCallback, useEffect, useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { Button, colors, Sidebar, Text, Title, Tooltip, Trash, When } from '@novu/design-system';
import { useEnvironment } from '../../../../hooks';

import { useFetchLocales, useFetchTranslation } from '../../hooks';
import { useEditTranslationFileContext } from '../../context/useEditTranslationFileContext';
import { ReuploadIcon } from '../../icons';
import { FlagIcon } from '../shared';
import { FileEditEditor } from './FileEditEditor';
import { FileNameInput } from './FileNameInput';
import { FilesDiffSection } from './FilesDiffSection';
import { ReUploadConfirmationModal } from './ReUploadConfirmationModal';
import { DeleteTranslationModal } from '../TranslationGroup/DeleteTranslationModal';

export function SingleTranslationFileEditSidebar({
  identifier,
  open,
  onClose,
}: {
  open: boolean;
  onClose: () => void;
  identifier: string;
}) {
  const {
    locale,
    uploadedFile,
    handleFileSelect,
    fileText,
    uploadFile,
    isTranslationExists,
    resetContext,
    editFile,
    fileName: editedFileName,
  } = useEditTranslationFileContext();

  const { mode } = useParams();
  const navigate = useNavigate();
  const { readonly } = useEnvironment();

  const { translations, fileName, createdAt, updatedAt } = useFetchTranslation(identifier, locale);
  const { getLocale } = useFetchLocales();

  const [showDeleteTranslationModal, setShowDeleteTranslationModal] = useState(false);
  const [showReuploadModal, setShowReuploadModal] = useState(false);
  const [isValidJsonFile, setIsValidJsonFile] = useState(true);
  const handleClose = useCallback(() => {
    resetContext();
    onClose();
  }, [resetContext, onClose]);

  useEffect(() => {
    if (mode === 'replace') {
      if (!locale && (!uploadedFile || !fileText)) {
        handleClose();
      }
    }

    if (!locale) {
      handleClose();
    }
  }, [uploadedFile, handleClose, mode]);

  const handleUpdateFile = async () => {
    if (mode === 'replace') {
      if (isTranslationExists) {
        setShowReuploadModal(true);

        return;
      }

      await submitFile();
    }

    if (mode === 'edit') {
      await submitEditedFile();
    }
  };

  const submitFile = async () => {
    await uploadFile();
    handleClose();
  };

  const submitEditedFile = async () => {
    await editFile();
    handleClose();
  };

  const handleFileInput = async (file: File | null) => {
    if (!file) return;

    await handleFileSelect(file);
    navigate(`/translations/edit/${identifier}/${locale}/replace`);
  };

  return (
    <Sidebar
      isOpened={open}
      onClose={handleClose}
      onBack={handleClose}
      isExpanded
      customHeader={
        <div style={{ display: 'flex', width: '100%', gap: 12 }}>
          <Group noWrap spacing={12} sx={{ maxWidth: 800, width: '100%' }}>
            <FlagIcon locale={locale} width={32} height={32} />

            <Stack spacing={0}>
              <Title size={2}>{getLocale(locale)?.langName}</Title>
              <Text size={12} color={colors.B40}>
                {identifier}
              </Text>
            </Stack>
          </Group>
          <When truthy={!readonly}>
            <Group noWrap spacing={20} ml={'auto'} sx={{ alignItems: 'flex-start' }}>
              <When truthy={translations && fileName}>
                <FileButton onChange={handleFileInput} accept="application/json" name="file">
                  {(props) => (
                    <Tooltip label="Replace file" withinPortal>
                      <ActionIcon variant="subtle" {...props}>
                        <ReuploadIcon color={colors.B60} />
                      </ActionIcon>
                    </Tooltip>
                  )}
                </FileButton>
                <Tooltip label="Delete file" withinPortal>
                  <ActionIcon variant="subtle" onClick={() => setShowDeleteTranslationModal(true)}>
                    <Trash color={colors.B60} />
                  </ActionIcon>
                </Tooltip>
              </When>
            </Group>
          </When>
        </div>
      }
      customFooter={
        <Footer>
          <Group spacing={24} position="right" noWrap>
            <Button variant="outline" onClick={handleClose}>
              {readonly ? 'Close' : 'Cancel'}
            </Button>
            <Tooltip
              label={
                !isValidJsonFile
                  ? 'The file contains invalid JSON values. Please correct errors to save changes.'
                  : 'File name can not be empty.'
              }
              withinPortal
              disabled={(isValidJsonFile && !!editedFileName) || readonly}
              error
              width={!isValidJsonFile ? 260 : 200}
              multiline
            >
              <span>
                <Button onClick={handleUpdateFile} disabled={!isValidJsonFile || !editedFileName || readonly}>
                  {mode === 'edit' ? 'Save' : 'Update file'}
                </Button>
              </span>
            </Tooltip>
          </Group>
        </Footer>
      }
    >
      <Wrapper>
        <Stack>
          {}
          <FileNameInput currentFileName={isTranslationExists ? fileName! : uploadedFile!.name} readonly={readonly} />
          {mode === 'replace' && isTranslationExists && (
            <FilesDiffSection
              setIsValidJsonFile={setIsValidJsonFile}
              text={fileText}
              original={translations}
              readonly={readonly}
            />
          )}
          {mode === 'edit' && (translations || fileText) && (
            <FileEditEditor
              value={translations || fileText}
              createdAt={createdAt}
              updatedAt={updatedAt}
              setIsValidJsonFile={setIsValidJsonFile}
              readonly={readonly}
            />
          )}
        </Stack>
      </Wrapper>
      <ReUploadConfirmationModal
        isLoading={false}
        locales={[locale]}
        onConfirm={submitFile}
        open={showReuploadModal}
        onDismiss={() => setShowReuploadModal(false)}
      />
      <When truthy={showDeleteTranslationModal && !readonly}>
        <DeleteTranslationModal
          groupIdentifier={identifier}
          onDismiss={() => setShowDeleteTranslationModal(false)}
          open={showDeleteTranslationModal}
          onConfirm={() => {
            setShowDeleteTranslationModal(false);
            navigate(`/translations/edit/${identifier}`);
          }}
          locale={locale}
        />
      </When>
    </Sidebar>
  );
}

const Wrapper = styled.div`
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
`;

const Footer = styled.div`
  display: flex;
  padding: 16px 0px;
  justify-content: flex-end;
  align-items: center;
  align-self: stretch;
  gap: 24px;
  width: 100%;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { ActionIcon, FileButton, Group, Stack } from '@mantine/core';
import React, { useCallback, useEffect, useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { Button, colors, Sidebar, Text, Title, Tooltip, Trash, When } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/UploadFilesSection/UploadTranslationFilesAccordion.tsx
Tamaño: 7081 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Accordion, Group, Indicator, Stack, createStyles } from '@mantine/core';
import { Text, Tooltip, colors } from '@novu/design-system';
import React, { useState } from 'react';
import { useFieldArray, useWatch } from 'react-hook-form';
import { useEnvironment } from '../../../../hooks';

import { CodeBracketOutlined, Warning } from '../../icons';
import { AccordionRowActionTools } from './AccordionRowActionTools';
import { FilesDiffSection } from './FilesDiffSection';
import { LanguageSelect } from './LanguageSelect';

const useStyles = createStyles((theme) => ({
  control: {
    paddingBottom: '15px',
    paddingLeft: '25px',
    paddingRight: '25px',
    paddingTop: '15px',
    '&:hover': {
      borderRadius: '7px',
    },
  },
  item: {
    marginBottom: 0,
    border: 'none',
    borderBottom: `1px solid ${theme.colorScheme === 'dark' ? colors.B20 : colors.B85}`,
    color: `${colors.B80}`,
    borderRadius: 0,
    backgroundColor: `transparent`,
    '&:hover': {
      backgroundColor: `${theme.colorScheme === 'dark' ? colors.B20 : colors.B98}`,
    },
  },
  chevron: {
    color: `${theme.colorScheme === 'dark' ? colors.white : colors.B40}`,
    borderRadius: '50px',
    height: '30px',
    width: '30px',
  },
  accordingHeader: {
    borderBottom: `1px solid ${theme.colorScheme === 'dark' ? colors.B30 : colors.B85}`,
  },
  content: {
    paddingBlock: 0,
  },
}));

export function UploadTranslationFilesAccordion({
  data,
  control,
  localesWithFiles,
  replaceLanguageFiles,
  removeLanguageFiles,
}) {
  const { classes } = useStyles();
  const [isValidJsonFile, setIsValidJsonFile] = useState(true);
  const [accordionValue, setAccordionValue] = useState<string | null>(null);

  const { readonly } = useEnvironment();
  const handleAccordionChange = (value: string | null) => {
    setAccordionValue((prev) => (prev === value ? null : value));
  };

  const { remove } = useFieldArray({
    control,
    name: 'formLocales',
  });

  const handleReplaceRow = (index: number, file: File | null) => {
    replaceLanguageFiles(index, file);
  };

  const handleRemoveRow = (index: number) => {
    remove(index);
    removeLanguageFiles(index);
  };

  return (
    <div>
      <Group px={24} grow>
        <Group position="apart" className={classes.accordingHeader} pb={10}>
          <div>
            <Text color={colors.B40}>Name</Text>
          </div>
          <div
            style={{
              width: '305px',
            }}
          >
            <Text color={colors.B40}>Detected Language</Text>
          </div>
        </Group>
      </Group>
      <Accordion
        classNames={classes}
        variant="default"
        chevron={null}
        value={accordionValue}
        onChange={setAccordionValue}
      >
        {data.map((item, index) => {
          const value = item.name + index;

          return (
            <Accordion.Item key={item.name} value={value}>
              <AccordionRowControl
                item={item}
                setAccordionValue={handleAccordionChange}
                value={value}
                control={control}
                index={index}
                accordionValue={accordionValue}
                isValidJsonFile={item.isValidJsonFile && isValidJsonFile}
                localesWithFiles={localesWithFiles}
                removeRow={handleRemoveRow}
                replaceRow={handleReplaceRow}
              />
              <Accordion.Panel>
                <AccordionRowPanel
                  localesWithFiles={localesWithFiles}
                  control={control}
                  index={index}
                  text={item.content}
                  isValidJsonFile={item.isValidJsonFile}
                  setIsValidJsonFile={setIsValidJsonFile}
                  readonly={readonly}
                />
              </Accordion.Panel>
            </Accordion.Item>
          );
        })}
      </Accordion>
    </div>
  );
}

const AccordionRowControl = ({
  item,
  setAccordionValue,
  value,
  control,
  index,
  accordionValue,
  isValidJsonFile,
  localesWithFiles,
  removeRow,
  replaceRow,
}) => {
  const isOpened = accordionValue === value;
  const currentLocale = useWatch({
    control,
    name: `formLocales.${index}.locale`,
  });
  const isReplacingFile = localesWithFiles?.some((data) => data.isoLanguage === currentLocale);

  return (
    <Group position="apart" noWrap>
      <Accordion.Control>
        <Group spacing={16} position="left" align="center" w="100%" noWrap>
          <Tooltip label={<ReplaceTooltipLabel />} disabled={!isReplacingFile}>
            <div>
              <Indicator
                label={<Warning width="16px" height="16px" />}
                position="bottom-end"
                size={12}
                offset={3}
                zIndex={'auto'}
                inline
                disabled={!isReplacingFile}
              >
                <CodeBracketOutlined />
              </Indicator>
            </div>
          </Tooltip>
          <Stack w="100%" spacing={0}>
            <FileNameContainer isOpened={isOpened}>
              <Text rows={1}>{item.name}</Text>
            </FileNameContainer>

            {!isOpened && (
              <div>
                {isValidJsonFile ? (
                  <Text size="sm" color={colors.B40}>
                    {Object.keys(item?.content).length} keys
                  </Text>
                ) : (
                  <Text size="sm" color={colors.error}>
                    Only JSON files can be uploaded
                  </Text>
                )}
              </div>
            )}
          </Stack>
        </Group>
      </Accordion.Control>
      <Group spacing={24} align="center" noWrap>
        {isValidJsonFile && <LanguageSelect control={control} index={index} />}
        <AccordionRowActionTools
          setAccordionValue={setAccordionValue}
          value={value}
          accordionValue={accordionValue}
          removeRow={removeRow}
          index={index}
          replaceRow={replaceRow}
        />
      </Group>
    </Group>
  );
};

const AccordionRowPanel = ({
  control,
  setIsValidJsonFile,
  localesWithFiles,
  index,
  text,
  isValidJsonFile,
  readonly,
}) => {
  const currentLocale = useWatch({
    control,
    name: `formLocales.${index}.locale`,
  });
  const original = localesWithFiles?.find((files) => files.isoLanguage === currentLocale);

  if (!isValidJsonFile) {
    return null;
  }

  return (
    <FilesDiffSection
      setIsValidJsonFile={setIsValidJsonFile}
      original={original?.translations || ''}
      text={text}
      readonly={readonly}
    />
  );
};

function ReplaceTooltipLabel() {
  return <Text color="#EAA900">Uploading file value will replace the existing file value</Text>;
}

const FileNameContainer = styled.div<{ isOpened: boolean }>`
  display: flex;
  align-items: center;
  border-radius: 7px;
  ${({ isOpened }) =>
    isOpened &&
    `
    flex: 1;
    padding: 15px;
    border: 1px solid ${colors.B30};
  `};
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Accordion, Group, Indicator, Stack, createStyles } from '@mantine/core';
import { Text, Tooltip, colors } from '@novu/design-system';
import React, { useState } from 'react';
import { useFieldArray, useWatch } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/components/UploadFilesSection/UploadTranslationsLayout.tsx
Tamaño: 2360 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Group, ScrollArea } from '@mantine/core';
import { Button, colors, Popover, Text } from '@novu/design-system';
import React from 'react';
import { useWatch } from 'react-hook-form';
import { UploadTranslationFilesAccordion } from './UploadTranslationFilesAccordion';

export function UploadTranslationsLayout({
  data,
  control,
  cancelUpload,
  isLoading,
  localesWithFiles,
  replaceLanguageFiles,
  removeLanguageFiles,
}) {
  const formLocales = useWatch({
    control,
    name: `formLocales`,
  });

  const locales = formLocales?.map((item) => item.locale);
  const uniqueLocales = [...new Set<string>(locales)];
  const isError = locales?.length !== uniqueLocales?.length;

  return (
    <Wrapper>
      <ScrollArea>
        <UploadTranslationFilesAccordion
          data={data}
          control={control}
          localesWithFiles={localesWithFiles}
          replaceLanguageFiles={replaceLanguageFiles}
          removeLanguageFiles={removeLanguageFiles}
        />
      </ScrollArea>
      <Footer>
        <Group spacing={24}>
          <Button variant="outline" onClick={cancelUpload}>
            Cancel
          </Button>
          <Popover
            disabled={!isError}
            content={
              <div
                style={{
                  width: '360px',
                }}
              >
                <Text color={colors.B60}>
                  Uploading multiple files in the same language is not permitted. Please select different languages for
                  each of the uploaded file.
                </Text>
              </div>
            }
            position="top-end"
            target={
              <div>
                <Button submit loading={isLoading} disabled={isLoading || isError} data-test-id="upload-submit-btn">
                  Upload files
                </Button>
              </div>
            }
            offset={5}
          />
        </Group>
      </Footer>
    </Wrapper>
  );
}

const Wrapper = styled.div`
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
`;

const Footer = styled.div`
  display: flex;
  padding: 16px 24px 24px 24px;
  justify-content: space-between;
  align-items: center;
  align-self: stretch;
  gap: 24px;
  margin-left: -24px;
  margin-right: -24px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Group, ScrollArea } from '@mantine/core';
import { Button, colors, Popover, Text } from '@novu/design-system';
import React from 'react';
import { useWatch } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/context/useEditTranslationFileContext.tsx
Tamaño: 3496 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { createContext, useContext, useState } from 'react';
import { useQueryClient } from '@tanstack/react-query';
import { successMessage } from '@novu/design-system';

import { useEditTranslation, useUploadTranslations } from '../hooks';

interface EditTranslationFileContextData {
  uploadedFile: File | null;
  locale: string;
  groupIdentifier: string;
  fileText: string;
  isTranslationExists: boolean;
  setIsTranslationExists: (isTranslationExists: boolean) => void;
  setLocale: (locale: string) => void;
  setGroupIdentifier: (groupIdentifier: string) => void;
  handleFileSelect: (file: File) => Promise<void>;
  uploadFile: () => Promise<void>;
  resetContext: () => void;
  setFileText: (fileText: string) => void;
  editFile: () => Promise<void>;
  fileName: string;
  setFileName: (fileName: string) => void;
}

export const EditTranslationFileContext = createContext<EditTranslationFileContextData>({
  uploadedFile: null,
  locale: '',
  groupIdentifier: '',
  fileText: '',
  isTranslationExists: false,
  fileName: '',
  setLocale: () => {},
  setGroupIdentifier: () => {},
  handleFileSelect: async () => {},
  uploadFile: async () => {},
  setIsTranslationExists: () => {},
  resetContext: () => {},
  setFileText: () => {},
  editFile: async () => {},
  setFileName: () => {},
});

export const useEditTranslationFileContext = (): EditTranslationFileContextData =>
  useContext(EditTranslationFileContext);

export const EditTranslationFileProvider = ({ children }) => {
  const [uploadedFile, setUploadedFile] = useState<File | null>(null);
  const [locale, setLocale] = useState('');
  const [groupIdentifier, setGroupIdentifier] = useState('');
  const [fileText, setFileText] = useState('');
  const [isTranslationExists, setIsTranslationExists] = useState(false);
  const [fileName, setFileName] = useState('');

  const queryClient = useQueryClient();
  const { uploadTranslations } = useUploadTranslations();
  const { editTranslation } = useEditTranslation();

  const handleFileSelect = async (file: File) => {
    setUploadedFile(file);
    setFileName(file.name);
    setFileText(await file.text());
  };

  const uploadFile = async () => {
    if (!uploadedFile) {
      return;
    }
    await uploadTranslations(
      {
        identifier: groupIdentifier,
        locales: [locale],
        files: [uploadedFile],
      },
      {
        onSuccess: () => {
          successMessage('File uploaded successfully');
          queryClient.refetchQueries([`group/${groupIdentifier}/${locale}`]);
        },
      }
    );
  };

  const resetContext = () => {
    setUploadedFile(null);
    setLocale('');
    setFileText('');
    setIsTranslationExists(false);
  };

  const editFile = async () => {
    await editTranslation(
      {
        fileName,
        locale,
        identifier: groupIdentifier,
        translation: fileText,
      },
      {
        onSuccess: () => {
          successMessage('File edited successfully');
        },
      }
    );
  };

  return (
    <EditTranslationFileContext.Provider
      value={{
        uploadedFile,
        locale,
        setLocale,
        groupIdentifier,
        setGroupIdentifier,
        fileText,
        handleFileSelect,
        uploadFile,
        isTranslationExists,
        setIsTranslationExists,
        resetContext,
        setFileText,
        editFile,
        fileName,
        setFileName,
      }}
    >
      {children}
    </EditTranslationFileContext.Provider>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { createContext, useContext, useState } from 'react';
import { useQueryClient } from '@tanstack/react-query';
import { successMessage } from '@novu/design-system';
import { useEditTranslation, useUploadTranslations } from '../hooks';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/hooks/index.ts
Tamaño: 367 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './useDeleteTranslation';
export * from './useDeleteTranslationsGroup';
export * from './useEditTranslation';
export * from './useFetchLocales';
export * from './useFetchTranslation';
export * from './useFetchTranslationGroup';
export * from './useFetchTranslationGroups';
export * from './useGetDefaultLocale';
export * from './useUploadTranslations';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export
- export
- export
- export
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/hooks/useDeleteTranslation.tsx
Tamaño: 1334 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { MutationOptions, useMutation, useQueryClient } from '@tanstack/react-query';

import { errorMessage, successMessage } from '@novu/design-system';
import { api } from '../../../api';

export const useDeleteTranslation = (
  options: MutationOptions<
    object,
    { error: string; message: string; statusCode: number },
    {
      identifier: string;
      locale: string;
    }
  > = {}
) => {
  const queryClient = useQueryClient();

  const { mutateAsync: deleteTranslation, ...rest } = useMutation<
    object,
    { error: string; message: string; statusCode: number },
    {
      identifier: string;
      locale: string;
    }
  >(({ identifier, locale }) => api.delete(`/v1/translations/groups/${identifier}/locales/${locale}`), {
    ...options,
    onSuccess: async (data, variables, context) => {
      options?.onSuccess?.(data, variables, context);

      await queryClient.refetchQueries(['translationGroups'], { exact: false });
      await queryClient.refetchQueries(['getVariables'], { exact: false });
      await queryClient.refetchQueries([`group/${variables.identifier}`], { exact: false });
      successMessage('Translation file deleted');
    },
    onError: (err) => {
      errorMessage(err.message || 'Something went wrong');
    },
  });

  return {
    deleteTranslation,
    ...rest,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { MutationOptions, useMutation, useQueryClient } from '@tanstack/react-query';
import { errorMessage, successMessage } from '@novu/design-system';
import { api } from '../../../api';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/hooks/useDeleteTranslationsGroup.tsx
Tamaño: 1137 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { MutationOptions, useMutation, useQueryClient } from '@tanstack/react-query';

import { errorMessage, successMessage } from '@novu/design-system';
import { api } from '../../../api';

export const useDeleteTranslationGroup = (
  options: MutationOptions<
    object,
    { error: string; message: string; statusCode: number },
    {
      id: string;
    }
  > = {}
) => {
  const queryClient = useQueryClient();

  const { mutateAsync: deleteTranslationGroup, ...rest } = useMutation<
    object,
    { error: string; message: string; statusCode: number },
    {
      id: string;
    }
  >(({ id }) => api.delete(`/v1/translations/groups/${id}`), {
    ...options,
    onSuccess: async (data, variables, context) => {
      options?.onSuccess?.(data, variables, context);

      await queryClient.refetchQueries(['translationGroups']);
      await queryClient.refetchQueries(['getVariables'], { exact: false });
      successMessage('Translation group deleted');
    },
    onError: (err) => {
      errorMessage(err.message || 'Something went wrong');
    },
  });

  return {
    deleteTranslationGroup,
    ...rest,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { MutationOptions, useMutation, useQueryClient } from '@tanstack/react-query';
import { errorMessage, successMessage } from '@novu/design-system';
import { api } from '../../../api';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/hooks/useEditTranslation.tsx
Tamaño: 1673 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { UseMutationOptions, useMutation, useQueryClient } from '@tanstack/react-query';
import { api } from '../../../api';
import { ITranslationGroup } from './useFetchTranslationGroups';

export const useEditTranslation = (
  options: UseMutationOptions<
    ITranslationGroup,
    { error: string; message: string; statusCode: number },
    {
      locale: string;
      fileName?: string;
      identifier: string;
      translation?: string;
    }
  > = {}
) => {
  const queryClient = useQueryClient();

  const {
    error,
    isLoading,
    mutateAsync: editTranslation,
  } = useMutation<
    ITranslationGroup,
    { error: string; message: string; statusCode: number },
    {
      locale: string;
      fileName?: string;
      identifier: string;
      translation?: string;
    }
  >(
    async ({ locale, fileName, identifier, translation }) => {
      if (!fileName && !translation) {
        return;
      }
      const payload = {
        fileName,
        translation,
      };

      return await api.patch(`/v1/translations/groups/${identifier}/locales/${locale}`, payload);
    },
    {
      ...options,
      onSuccess: async (data, variables, context) => {
        options.onSuccess?.(data, variables, context);

        await queryClient.refetchQueries([`group/${variables.identifier}`]);
        await queryClient.refetchQueries([`group/${variables.identifier}/${variables.locale}`]);
        await queryClient.refetchQueries(['translationGroups']);
      },
      onError: (err, variables, context) => {
        options.onError?.(err, variables, context);
      },
    }
  );

  return {
    error,
    isLoading,
    editTranslation,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { UseMutationOptions, useMutation, useQueryClient } from '@tanstack/react-query';
import { api } from '../../../api';
import { ITranslationGroup } from './useFetchTranslationGroups';
export const useEditTranslation = (
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/hooks/useFetchLocales.ts
Tamaño: 668 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useQuery, UseQueryOptions } from '@tanstack/react-query';
import { ILocale } from '../components/shared';
import { api } from '../../../api';

export const useFetchLocales = (options: UseQueryOptions<ILocale[], any, ILocale[]> = {}) => {
  const { data: locales, ...rest } = useQuery<ILocale[], any, ILocale[]>(
    ['locales'],
    () => api.get('/v1/translations/locales'),
    {
      refetchOnWindowFocus: false,
      refetchOnMount: false,
      ...options,
    }
  );

  const getLocale = (isoLanguage: string) => {
    return locales?.find((locale) => locale.langIso === isoLanguage);
  };

  return {
    locales,
    getLocale,
    ...rest,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - getLocale(isoLanguage: string))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/hooks/useFetchTranslation.tsx
Tamaño: 680 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import React from 'react';
import { api } from '../../../api';
import { ITranslation } from './useFetchTranslationGroup';

export const useFetchTranslation = (identifier?: string, locale?: string) => {
  const { data, ...rest } = useQuery<ITranslation>(
    [`group/${identifier}/${locale}`],
    () => api.get(`/v1/translations/groups/${identifier}/locales/${locale}`),
    {
      enabled: !!identifier && !!locale,
    }
  );

  return {
    translations: data?.translations,
    fileName: data?.fileName,
    isoLanguage: data?.isoLanguage,
    createdAt: data?.createdAt,
    updatedAt: data?.updatedAt,
    ...rest,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useQuery } from '@tanstack/react-query';
import React from 'react';
import { api } from '../../../api';
import { ITranslation } from './useFetchTranslationGroup';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/hooks/useFetchTranslationGroup.tsx
Tamaño: 971 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import React from 'react';
import { api } from '../../../api';

export interface ITranslationGroupWithTranslations {
  _id: string;
  name: string;
  identifier: string;
  _environmentId: string;
  _organizationId: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
  id: string;
  translations: ITranslation[];
}
export interface ITranslation {
  _id: string;
  createdAt: string;
  updatedAt: string;
  _environmentId: string;
  _organizationId: string;
  _groupId: string;
  isoLanguage: string;
  translations: any;
  fileName: string;
}
export const useFetchTranslationGroup = (identifier?: string) => {
  const { data: group, ...rest } = useQuery<ITranslationGroupWithTranslations>(
    [`group/${identifier}`],
    () => api.get(`/v1/translations/groups/${identifier}`),
    {
      enabled: !!identifier,
    }
  );

  return {
    group,
    translations: group?.translations,
    ...rest,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useQuery } from '@tanstack/react-query';
import React from 'react';
import { api } from '../../../api';
export interface ITranslationGroupWithTranslations {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/hooks/useFetchTranslationGroups.tsx
Tamaño: 937 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { UseQueryOptions, useQuery } from '@tanstack/react-query';
import React from 'react';
import { api } from '../../../api';

export interface ITranslationGroup {
  _id: string;
  name: string;
  identifier: string;
  _environmentId: string;
  _organizationId: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
  id: string;
  uiConfig: {
    locales: string[];
    localesMissingTranslations: string[];
  };
}

export const useFetchTranslationGroups = (page = 0, limit = 10) => {
  const { data, ...rest } = useQuery<{
    data: ITranslationGroup[];
    totalCount: number;
    pageSize: number;
    page: number;
  }>(['translationGroups', page, limit], () => api.getFullResponse('/v1/translations/groups', { page, limit }), {
    keepPreviousData: true,
  });

  return {
    translationGroups: data?.data,
    page: data?.page,
    pageSize: data?.pageSize,
    totalCount: data?.totalCount,
    ...rest,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { UseQueryOptions, useQuery } from '@tanstack/react-query';
import React from 'react';
import { api } from '../../../api';
export interface ITranslationGroup {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/hooks/useGetDefaultLocale.tsx
Tamaño: 659 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import { api } from '../../../api';
import { useAuth } from '../../../hooks';

export const useGetDefaultLocale = () => {
  const { currentOrganization } = useAuth();
  const { data } = useQuery<{ defaultLocale: string }>(
    [`translations/defaultLocale, ${currentOrganization?._id}`],
    () => api.get(`/v1/translations/defaultLocale`),
    {
      enabled: !!currentOrganization,
      refetchOnWindowFocus: false,
      refetchOnMount: false,
      refetchOnReconnect: false,
      retry: false,
      staleTime: 3600000, // 1 hour
    }
  );

  return {
    defaultLocale: data?.defaultLocale,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useQuery } from '@tanstack/react-query';
import { api } from '../../../api';
import { useAuth } from '../../../hooks';
export const useGetDefaultLocale = () => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/hooks/useUploadTranslations.tsx
Tamaño: 1627 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { UseMutationOptions, useMutation, useQueryClient } from '@tanstack/react-query';
import { api } from '../../../api';
import { ITranslationGroup } from './useFetchTranslationGroups';

export const useUploadTranslations = (
  options: UseMutationOptions<
    ITranslationGroup,
    { error: string; message: string; statusCode: number },
    {
      locales: string[];
      files: File[];
      identifier: string;
    }
  > = {}
) => {
  const queryClient = useQueryClient();

  const {
    error,
    isLoading,
    mutateAsync: uploadTranslations,
  } = useMutation<
    ITranslationGroup,
    { error: string; message: string; statusCode: number },
    {
      locales: string[];
      files: File[];
      identifier: string;
    }
  >(
    async ({ locales, files, identifier }) => {
      const formData = new FormData();
      const data = JSON.stringify(locales);
      formData.append('locales', data);
      for (let i = 0; i < files.length; i += 1) {
        // skip non json files
        if (!files[i].name.endsWith('.json')) {
          continue;
        }
        formData.append('files', files[i]);
      }

      return await api.post(`/v1/translations/groups/${identifier}`, formData);
    },
    {
      ...options,
      onSuccess: async (data, variables, context) => {
        options.onSuccess?.(data, variables, context);
        await queryClient.refetchQueries([`group/${variables.identifier}`]);
      },
      onError: (err, variables, context) => {
        options.onError?.(err, variables, context);
      },
    }
  );

  return {
    error,
    isLoading,
    uploadTranslations,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { UseMutationOptions, useMutation, useQueryClient } from '@tanstack/react-query';
import { api } from '../../../api';
import { ITranslationGroup } from './useFetchTranslationGroups';
export const useUploadTranslations = (
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/AddGroupIcon.tsx
Tamaño: 1103 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export const AddGroupIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="17" height="16" viewBox="0 0 17 16" fill="none" {...props}>
      <path
        d="M3.16732 12V4V6.86666V6.66666V12ZM3.16732 13.3333C2.80065 13.3333 2.48676 13.2028 2.22565 12.9417C1.96454 12.6806 1.83398 12.3667 1.83398 12V4C1.83398 3.63333 1.96454 3.31944 2.22565 3.05833C2.48676 2.79722 2.80065 2.66666 3.16732 2.66666H7.16732L8.50065 4H13.834C14.2007 4 14.5145 4.13055 14.7757 4.39166C15.0368 4.65278 15.1673 4.96666 15.1673 5.33333V7.51666C14.9673 7.37222 14.7562 7.24722 14.534 7.14166C14.3118 7.03611 14.0784 6.94444 13.834 6.86666V5.33333H7.95065L6.61732 4H3.16732V12H7.88398C7.91732 12.2333 7.9701 12.4611 8.04232 12.6833C8.11454 12.9056 8.20065 13.1222 8.30065 13.3333H3.16732Z"
        fill={props.fill || 'currentColor'}
      />
      <path
        d="M11.834 11.3333V13.3333H13.1673V11.3333H15.1673V10H13.1673V8H11.834V10H9.83398V11.3333H11.834Z"
        fill={props.fill || 'currentColor'}
      />
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export const AddGroupIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="17" height="16" viewBox="0 0 17 16" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/ArrowForward.tsx
Tamaño: 712 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function ArrowForward(props: React.ComponentPropsWithoutRef<'svg'>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="21" height="20" fill="none" viewBox="0 0 21 20" {...props}>
      <mask
        id="mask0_264_136399"
        style={{ maskType: 'alpha' }}
        width="21"
        height="20"
        x="0"
        y="0"
        maskUnits="userSpaceOnUse"
      >
        <path fill="#D9D9D9" d="M0.5 0H20.5V20H0.5z"></path>
      </mask>
      <g mask="url(#mask0_264_136399)">
        <path
          fill="#525266"
          d="M13.625 10.75H4.5v-1.5h9.125L9.437 5.062 10.5 4l6 6-6 6-1.063-1.063 4.188-4.187z"
        ></path>
      </g>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function ArrowForward(props: React.ComponentPropsWithoutRef<'svg'>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="21" height="20" fill="none" viewBox="0 0 21 20" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/ChevronDownIcon.tsx
Tamaño: 349 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export const ChevronDownIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 20 20" {...props}>
      <path fill="#828299" d="M10 13.063l-5-5L6.063 7 10 10.938 13.938 7 15 8.063l-5 5z"></path>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export const ChevronDownIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 20 20" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/ChevronUpIcon.tsx
Tamaño: 345 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export const ChevronUpIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 20 20" {...props}>
      <path fill="#828299" d="M6.063 13L5 11.937l5-5 5 5L13.937 13 10 9.062 6.062 13z"></path>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export const ChevronUpIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 20 20" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/CodeBracketOutlined.tsx
Tamaño: 1826 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function CodeBracketOutlined(props: React.ComponentPropsWithoutRef<'svg'>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="20" fill="none" viewBox="0 0 16 20" {...props}>
      <path
        fill="#525266"
        d="M2 20c-.55 0-1.02-.196-1.413-.587A1.926 1.926 0 010 18V2C0 1.45.196.98.588.587A1.926 1.926 0 012 0h8l6 6v12c0 .55-.196 1.02-.588 1.413A1.926 1.926 0 0114 20H2zM9 7V2H2v16h12V7H9z"
      ></path>
      <mask
        id="mask0_1903_77182"
        style={{ maskType: 'alpha' }}
        width="11"
        height="11"
        x="3"
        y="6"
        maskUnits="userSpaceOnUse"
      >
        <path fill="#525266" d="M3.043 6.889H13.043V16.889H3.043z"></path>
      </mask>
      <g mask="url(#mask0_1903_77182)">
        <path
          fill="#525266"
          d="M8.875 15.223v-.834h1.25c.118 0 .217-.04.297-.12.08-.08.12-.178.12-.296v-.834c0-.264.076-.503.229-.719a1.24 1.24 0 01.604-.458v-.146a1.241 1.241 0 01-.604-.458 1.214 1.214 0 01-.23-.719v-.833a.403.403 0 00-.12-.297.403.403 0 00-.296-.12h-1.25v-.833h1.25c.347 0 .642.121.885.364.244.243.365.539.365.886v.833c0 .118.04.217.12.297.08.08.179.12.297.12h.416v1.667h-.416a.403.403 0 00-.297.12.403.403 0 00-.12.296v.834c0 .347-.121.642-.365.885a1.206 1.206 0 01-.885.364h-1.25zm-2.917 0c-.347 0-.642-.122-.885-.365a1.206 1.206 0 01-.365-.886v-.833a.403.403 0 00-.12-.297.403.403 0 00-.296-.12h-.417v-1.666h.417c.118 0 .217-.04.297-.12.08-.08.12-.179.12-.297v-.833c0-.347.12-.643.364-.886.243-.243.538-.364.885-.364h1.25v.833h-1.25a.403.403 0 00-.297.12.403.403 0 00-.12.297v.833c0 .264-.076.504-.229.719a1.24 1.24 0 01-.604.458v.146c.25.09.452.243.604.458.153.216.23.455.23.72v.832c0 .119.04.218.12.297.08.08.178.12.296.12h1.25v.834h-1.25z"
        ></path>
      </g>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function CodeBracketOutlined(props: React.ComponentPropsWithoutRef<'svg'>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="20" fill="none" viewBox="0 0 16 20" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/ComputerIcon.tsx
Tamaño: 912 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export const ComputerIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" viewBox="0 0 16 16" {...props}>
      <mask
        id="mask0_1816_67053"
        style={{ maskType: 'alpha' }}
        width="16"
        height="16"
        x="0"
        y="0"
        maskUnits="userSpaceOnUse"
      >
        <path fill="#D9D9D9" d="M0 0H16V16H0z"></path>
      </mask>
      <g mask="url(#mask0_1816_67053)">
        <path
          fill="currentColor"
          d="M5.6 13.583v-1.2h1.2v-1.2h-4c-.33 0-.613-.117-.848-.352a1.156 1.156 0 01-.352-.848v-6.4c0-.33.117-.612.352-.847s.518-.353.848-.353h10.4c.33 0 .612.118.847.353s.353.517.353.847v6.4c0 .33-.118.613-.353.848a1.156 1.156 0 01-.847.352h-4v1.2h1.2v1.2H5.6zm-2.8-3.6h10.4v-6.4H2.8v6.4z"
        ></path>
      </g>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export const ComputerIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" viewBox="0 0 16 16" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/GlobeIcon.tsx
Tamaño: 3864 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export const GlobeIcon = (props) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none" {...props}>
      <mask
        id="mask0_2332_79068"
        style={{ maskType: 'alpha' }}
        maskUnits="userSpaceOnUse"
        x="0"
        y="0"
        width="16"
        height="16"
      >
        <rect width="16" height="16" fill="#D9D9D9" />
      </mask>
      <g mask="url(#mask0_2332_79068)">
        <path
          d="M7.99961 14.4C7.12183 14.4 6.29405 14.2333 5.51628 13.9C4.7385 13.5666 4.05794 13.1083 3.47461 12.525C2.89128 11.9416 2.43294 11.2611 2.09961 10.4833C1.76628 9.70553 1.59961 8.87775 1.59961 7.99998C1.59961 7.11109 1.76628 6.28053 2.09961 5.50831C2.43294 4.73609 2.89128 4.05831 3.47461 3.47498C4.05794 2.89164 4.7385 2.43331 5.51628 2.09998C6.29405 1.76664 7.12183 1.59998 7.99961 1.59998C8.8885 1.59998 9.71905 1.76664 10.4913 2.09998C11.2635 2.43331 11.9413 2.89164 12.5246 3.47498C13.1079 4.05831 13.5663 4.73609 13.8996 5.50831C14.2329 6.28053 14.3996 7.11109 14.3996 7.99998C14.3996 8.87775 14.2329 9.70553 13.8996 10.4833C13.5663 11.2611 13.1079 11.9416 12.5246 12.525C11.9413 13.1083 11.2635 13.5666 10.4913 13.9C9.71905 14.2333 8.8885 14.4 7.99961 14.4ZM7.99961 13.15C8.1885 12.9611 8.37739 12.6083 8.56628 12.0916C8.75517 11.575 8.89961 11.0111 8.99961 10.4H6.99961C7.09961 11.0111 7.24405 11.575 7.43294 12.0916C7.62183 12.6083 7.81072 12.9611 7.99961 13.15ZM6.48294 12.9833C6.32739 12.65 6.19128 12.2666 6.07461 11.8333C5.95794 11.4 5.86072 10.9222 5.78294 10.4H3.39961C3.72183 11.0333 4.14961 11.575 4.68294 12.025C5.21628 12.475 5.81628 12.7944 6.48294 12.9833ZM9.51628 12.9833C10.1829 12.7944 10.7829 12.475 11.3163 12.025C11.8496 11.575 12.2774 11.0333 12.5996 10.4H10.2163C10.1385 10.9222 10.0413 11.4 9.92461 11.8333C9.80794 12.2666 9.67183 12.65 9.51628 12.9833ZM2.94961 9.19998H5.63294C5.61072 8.98886 5.59683 8.78053 5.59128 8.57498C5.58572 8.36942 5.58294 8.16664 5.58294 7.96664C5.58294 7.76664 5.58572 7.56942 5.59128 7.37498C5.59683 7.18053 5.61072 6.98886 5.63294 6.79998H2.94961C2.89405 7.01109 2.85517 7.21386 2.83294 7.40831C2.81072 7.60275 2.79961 7.79998 2.79961 7.99998C2.79961 8.19998 2.81072 8.3972 2.83294 8.59164C2.85517 8.78609 2.89405 8.98886 2.94961 9.19998ZM6.84961 9.19998H9.14961C9.17183 8.97775 9.18572 8.76942 9.19128 8.57498C9.19683 8.38053 9.19961 8.18886 9.19961 7.99998C9.19961 7.81109 9.19683 7.61664 9.19128 7.41664C9.18572 7.21664 9.17183 7.01109 9.14961 6.79998H6.84961C6.82739 7.01109 6.8135 7.21664 6.80794 7.41664C6.80239 7.61664 6.79961 7.81109 6.79961 7.99998C6.79961 8.18886 6.80239 8.38331 6.80794 8.58331C6.8135 8.78331 6.82739 8.98886 6.84961 9.19998ZM10.3663 9.19998H13.0496C13.1052 8.98886 13.1441 8.78609 13.1663 8.59164C13.1885 8.3972 13.1996 8.19998 13.1996 7.99998C13.1996 7.79998 13.1885 7.59998 13.1663 7.39998C13.1441 7.19998 13.1052 6.99998 13.0496 6.79998H10.3663C10.3885 7.01109 10.4024 7.21942 10.4079 7.42498C10.4135 7.63053 10.4163 7.83331 10.4163 8.03331C10.4163 8.23331 10.4135 8.43053 10.4079 8.62498C10.4024 8.81942 10.3885 9.01109 10.3663 9.19998ZM10.2163 5.59998H12.5996C12.2774 4.96664 11.8496 4.42498 11.3163 3.97498C10.7829 3.52498 10.1829 3.20553 9.51628 3.01664C9.67183 3.34998 9.80794 3.73331 9.92461 4.16664C10.0413 4.59998 10.1385 5.07775 10.2163 5.59998ZM6.99961 5.59998H8.99961C8.89961 4.98886 8.75517 4.42498 8.56628 3.90831C8.37739 3.39164 8.1885 3.03886 7.99961 2.84998C7.81072 3.03886 7.62183 3.39164 7.43294 3.90831C7.24405 4.42498 7.09961 4.98886 6.99961 5.59998ZM3.39961 5.59998H5.78294C5.86072 5.07775 5.95794 4.59998 6.07461 4.16664C6.19128 3.73331 6.32739 3.34998 6.48294 3.01664C5.81628 3.20553 5.21628 3.52498 4.68294 3.97498C4.14961 4.42498 3.72183 4.96664 3.39961 5.59998Z"
          fill="currentColor"
        />
      </g>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export const GlobeIcon = (props) => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/LocaleIcon.tsx
Tamaño: 2460 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export const LocaleIcon = (props) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" {...props}>
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M10.8 20.4L12 24H21.6C22.3 24 22.875 23.765 23.325 23.295C23.775 22.825 24 22.26 24 21.6V6C24 5.3 23.775 4.725 23.325 4.275C22.875 3.825 22.3 3.6 21.6 3.6H10.65L9.6 0H2.4C1.74 0 1.175 0.235 0.705 0.705C0.235 1.175 0 1.74 0 2.4V18C0 18.66 0.235 19.225 0.705 19.695C1.175 20.165 1.74 20.4 2.4 20.4H10.8ZM14.88 15.09L14.22 15.72L13.44 13.08C13.66 13.44 13.885 13.78 14.115 14.1C14.345 14.42 14.6 14.75 14.88 15.09ZM16.995 12.3C16.705 12.9 16.28 13.53 15.72 14.19C15.42 13.83 15.16 13.475 14.94 13.125C14.72 12.775 14.53 12.45 14.37 12.15H13.17L12.81 10.89H17.58C17.48 11.23 17.285 11.7 16.995 12.3ZM21.6 22.8H13.2L15.6 20.4L14.64 17.07L15.72 15.96L18.96 19.2L19.83 18.33L16.56 15.12C17.1 14.5 17.57 13.83 17.97 13.11C18.37 12.39 18.67 11.65 18.87 10.89H20.4V9.66H16.02V8.4H14.79V9.66H12.42L11.01 4.8H21.6C21.96 4.8 22.25 4.91 22.47 5.13C22.69 5.35 22.8 5.64 22.8 6V21.6C22.8 21.94 22.69 22.225 22.47 22.455C22.25 22.685 21.96 22.8 21.6 22.8ZM7.84963 10.6904V13.0137C7.52866 13.3644 7.17486 13.6347 6.78823 13.8247C6.40161 14.0146 6.00404 14.1096 5.59553 14.1096C5.15784 14.1096 4.80769 14 4.54507 13.7808C4.28246 13.5616 4.15115 13.2621 4.15115 12.8822C4.15115 12.4731 4.31528 12.1151 4.64355 11.8082C4.97182 11.5014 5.46422 11.2457 6.12076 11.0411C6.36878 10.968 6.63504 10.9023 6.91954 10.8438C7.20404 10.7854 7.51407 10.7342 7.84963 10.6904ZM8.00282 14.4164L8.13413 15.4027H9.60039V9.76986C9.60039 8.54247 9.33048 7.60731 8.79066 6.96438C8.25085 6.32146 7.463 6 6.42714 6C5.75601 6 5.09583 6.11324 4.44659 6.33973C3.79735 6.56621 3.232 6.8621 2.75054 7.2274L3.45085 8.45479C4.03443 8.10411 4.51225 7.85936 4.88428 7.72055C5.25632 7.58174 5.632 7.51233 6.01133 7.51233C6.6241 7.51233 7.07638 7.66941 7.36817 7.98356C7.65997 8.29772 7.82045 8.79817 7.84963 9.48493C7.38276 9.54338 6.94872 9.60913 6.5475 9.68219C6.14629 9.75525 5.7779 9.83562 5.44234 9.92329C4.37729 10.2155 3.60404 10.6027 3.12258 11.0849C2.64112 11.5671 2.40039 12.1881 2.40039 12.9479C2.40039 13.7662 2.64112 14.4128 3.12258 14.8877C3.60404 15.3626 4.26057 15.6 5.09218 15.6C5.64659 15.6 6.16817 15.4941 6.65693 15.2822C7.14568 15.0703 7.59431 14.7817 8.00282 14.4164Z"
        fill="currentColor"
      />
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export const LocaleIcon = (props) => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/ReuploadIcon.tsx
Tamaño: 946 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export const ReuploadIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 20 20" {...props}>
      <path
        fill="#828299"
        d="M5.495 18c-.413 0-.766-.147-1.058-.44A1.45 1.45 0 014 16.5v-13c0-.413.147-.766.44-1.06.294-.293.647-.44 1.06-.44H12l4 4v4h-1.5V7H11V3.5H5.5v13H10V18H5.495z"
      ></path>
      <path
        fill="#828299"
        d="M15 19c-.973 0-1.823-.303-2.55-.91a3.92 3.92 0 01-1.37-2.29h1.24c.173.587.503 1.067.99 1.44a2.7 2.7 0 001.69.56c.773 0 1.433-.273 1.98-.82.547-.547.82-1.207.82-1.98 0-.773-.273-1.433-.82-1.98A2.698 2.698 0 0015 12.2a2.724 2.724 0 00-1.96.8h1.16v1.2H11V11h1.2v1.14c.36-.347.78-.623 1.26-.83.48-.207.993-.31 1.54-.31 1.107 0 2.05.39 2.83 1.17.78.78 1.17 1.723 1.17 2.83s-.39 2.05-1.17 2.83C17.05 18.61 16.107 19 15 19z"
      ></path>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export const ReuploadIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" viewBox="0 0 20 20" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/Star.tsx
Tamaño: 829 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { useMantineColorScheme } from '@mantine/core';

export const Star = (props) => {
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="15" viewBox="0 0 16 15" fill="none" {...props}>
      <path
        d="M6.06364 10.5696L5.51971 12.8662L7.54801 11.6595L9.99922 10.2011L12.4504 11.6595L14.4787 12.8662L13.9348 10.5696L13.2882 7.8395L15.4479 5.99859L17.2759 4.44047L14.8823 4.241L12.0315 4.00344L10.9184 1.40613L10.001 -0.73428L9.08064 1.4048L7.96695 3.9931L5.11259 4.24131L2.73178 4.44834L4.55052 5.99859L6.71024 7.8395L6.06364 10.5696Z"
        fill={isDark ? 'white' : '#525266'}
        stroke={isDark ? '#23232B' : 'white'}
        strokeWidth="2"
      />
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { useMantineColorScheme } from '@mantine/core';
export const Star = (props) => {
const { colorScheme } = useMantineColorScheme();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/TerminalIcon.tsx
Tamaño: 627 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export const TerminalIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" viewBox="0 0 16 16" {...props}>
      <path
        fill="currentColor"
        d="M2.8 12.8c-.33 0-.613-.118-.848-.353A1.156 1.156 0 011.6 11.6V4.395c0-.33.117-.612.352-.845A1.16 1.16 0 012.8 3.2h10.4c.33 0 .612.118.847.353s.353.517.353.848v7.204c0 .33-.118.612-.353.845a1.16 1.16 0 01-.847.35H2.8zm0-1.2h10.4v-6H2.8v6zm2.2-.8l-.85-.85L5.5 8.6 4.15 7.25 5 6.4l2.2 2.2L5 10.8zm3 0V9.6h4v1.2H8z"
      ></path>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export const TerminalIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" viewBox="0 0 16 16" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/TranslateIcon.tsx
Tamaño: 1788 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export const TranslateIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" {...props}>
      <path
        fill="#E64545"
        fillRule="evenodd"
        d="M10.8 20.4L12 24h9.6c.7 0 1.275-.235 1.725-.705.45-.47.675-1.035.675-1.695V6c0-.7-.225-1.275-.675-1.725-.45-.45-1.025-.675-1.725-.675H10.65L9.6 0H2.4C1.74 0 1.175.235.705.705A2.311 2.311 0 000 2.4V18c0 .66.235 1.225.705 1.695S1.74 20.4 2.4 20.4h8.4zm4.08-5.31l-.66.63-.78-2.64c.22.36.445.7.675 1.02.23.32.485.65.765.99zm2.115-2.79c-.29.6-.715 1.23-1.275 1.89-.3-.36-.56-.715-.78-1.065-.22-.35-.41-.675-.57-.975h-1.2l-.36-1.26h4.77c-.1.34-.295.81-.585 1.41zM21.6 22.8h-8.4l2.4-2.4-.96-3.33 1.08-1.11 3.24 3.24.87-.87-3.27-3.21c.54-.62 1.01-1.29 1.41-2.01.4-.72.7-1.46.9-2.22h1.53V9.66h-4.38V8.4h-1.23v1.26h-2.37L11.01 4.8H21.6c.36 0 .65.11.87.33.22.22.33.51.33.87v15.6c0 .34-.11.625-.33.855-.22.23-.51.345-.87.345zM7.85 10.69v2.324c-.321.35-.675.62-1.062.81-.386.19-.784.286-1.192.286-.438 0-.788-.11-1.05-.33-.264-.218-.395-.518-.395-.898 0-.409.164-.767.493-1.074.328-.307.82-.562 1.477-.767a9.84 9.84 0 01.799-.197c.284-.059.594-.11.93-.154zm.153 3.726l.131.987H9.6V9.77c0-1.228-.27-2.163-.81-2.806C8.25 6.321 7.464 6 6.428 6c-.671 0-1.331.113-1.98.34a6.115 6.115 0 00-1.696.887l.7 1.228c.583-.35 1.061-.596 1.433-.734a3.202 3.202 0 011.127-.209c.613 0 1.065.157 1.357.472.292.314.452.814.482 1.5-.467.06-.901.125-1.302.198-.402.073-.77.154-1.106.241-1.065.293-1.838.68-2.32 1.162-.48.482-.722 1.103-.722 1.863 0 .818.241 1.465.723 1.94.481.475 1.138.712 1.97.712.554 0 1.075-.106 1.564-.318.489-.212.937-.5 1.346-.866z"
        clipRule="evenodd"
      ></path>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export const TranslateIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/TranslationFileIcon.tsx
Tamaño: 3273 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { useMantineColorScheme } from '@mantine/core';

export const TranslationFileIcon = (props) => {
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  return (
    <svg
      {...props}
      style={{ ...(props.style || {}), filter: isDark ? 'drop-shadow(0px 5px 20px rgba(0, 0, 0, 0.20))' : undefined }}
      xmlns="http://www.w3.org/2000/svg"
      width="47"
      height="58"
      viewBox="0 0 47 58"
      fill="none"
    >
      <path
        d="M0.5 2C0.5 0.895432 1.39543 0 2.5 0H31.0352C31.531 0 32.0092 0.184164 32.3769 0.516762L45.8416 12.6962C46.2608 13.0753 46.5 13.6142 46.5 14.1794V56C46.5 57.1046 45.6046 58 44.5 58H2.5C1.39543 58 0.5 57.1046 0.5 56V2Z"
        fill={isDark ? '#3D3D4D' : '#D5D5D9'}
      />
      <mask
        id="mask0_1064_49181"
        style={{
          maskType: 'alpha',
        }}
        maskUnits="userSpaceOnUse"
        x="9"
        y="14"
        width="29"
        height="30"
      >
        <rect x="9.35742" y="14.5" width="28.2875" height="29" fill="#D9D9D9" />
      </mask>
      <g mask="url(#mask0_1064_49181)">
        <path
          d="M26.1543 38.0625V36.0234H28.4748C28.7565 36.0234 28.9927 35.9257 29.1833 35.7303C29.3739 35.5349 29.4692 35.2928 29.4692 35.0039V32.9648C29.4692 32.1908 29.7225 31.5252 30.2289 30.9683C30.7354 30.4113 31.3661 30.0856 32.1212 29.9912V29.8779C31.3661 29.7269 30.7354 29.3776 30.2289 28.8301C29.7225 28.2825 29.4692 27.6217 29.4692 26.8477V24.8086C29.4692 24.5197 29.3739 24.2776 29.1833 24.0822C28.9927 23.8868 28.7565 23.7891 28.4748 23.7891H26.1543V21.75H28.4748C29.3035 21.75 30.0079 22.0474 30.588 22.6421C31.1681 23.2368 31.4582 23.959 31.4582 24.8086V26.8477C31.4582 27.1365 31.5535 27.3787 31.7441 27.5741C31.9347 27.7695 32.1709 27.8672 32.4527 27.8672H34.1102V31.9453H32.4527C32.1709 31.9453 31.9347 32.043 31.7441 32.2384C31.5535 32.4338 31.4582 32.676 31.4582 32.9648V35.0039C31.4582 35.8535 31.1681 36.5757 30.588 37.1704C30.0079 37.7651 29.3035 38.0625 28.4748 38.0625H26.1543ZM18.5299 38.0625C17.7012 38.0625 16.9968 37.7651 16.4167 37.1704C15.8365 36.5757 15.5465 35.8535 15.5465 35.0039V32.9648C15.5465 32.676 15.4512 32.4338 15.2606 32.2384C15.07 32.043 14.8338 31.9453 14.552 31.9453H12.8945V27.8672H14.552C14.8338 27.8672 15.07 27.7695 15.2606 27.5741C15.4512 27.3787 15.5465 27.1365 15.5465 26.8477V24.8086C15.5465 23.959 15.8365 23.2368 16.4167 22.6421C16.9968 22.0474 17.7012 21.75 18.5299 21.75H20.8504V23.7891H18.5299C18.2482 23.7891 18.012 23.8868 17.8214 24.0822C17.6308 24.2776 17.5354 24.5197 17.5354 24.8086V26.8477C17.5354 27.6406 17.2822 28.3156 16.7758 28.8726C16.2693 29.4295 15.6386 29.7552 14.8835 29.8496V29.9671C15.6386 30.0398 16.2693 30.3594 16.7758 30.9258C17.2822 31.4922 17.5354 32.1719 17.5354 32.9648V35.0039C17.5354 35.2928 17.6308 35.5349 17.8214 35.7303C18.012 35.9257 18.2482 36.0234 18.5299 36.0234H20.8504V38.0625H18.5299Z"
          fill={isDark ? '#1E1E26' : '#828299'}
        />
      </g>
      <path
        d="M30.5 0H31.2087C31.6898 0 32.1547 0.173362 32.5183 0.48831L45.8095 12.0019C46.248 12.3817 46.5 12.9333 46.5 13.5135V14H32.5C31.3954 14 30.5 13.1046 30.5 12V0Z"
        fill={isDark ? '#292933' : '#828299'}
      />
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { useMantineColorScheme } from '@mantine/core';
export const TranslationFileIcon = (props) => {
const { colorScheme } = useMantineColorScheme();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/TranslationFolderEditIcon.tsx
Tamaño: 1359 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export const TranslationFolderEditIcon = (props) => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32" fill="none" {...props}>
      <mask
        id="mask0_1329_43192"
        style={{ maskType: 'alpha' }}
        maskUnits="userSpaceOnUse"
        x="0"
        y="0"
        width="32"
        height="32"
      >
        <rect width="32" height="32" fill="#D9D9D9" />
      </mask>
      <g mask="url(#mask0_1329_43192)">
        <path
          d="M19.1429 29.8276V26.8966L26.5 19.7586L29.5714 22.6552L22.1786 29.8276H19.1429ZM30.6071 21.6897L27.5714 18.7586L28.5714 17.7931C28.8571 17.5172 29.2024 17.3793 29.6071 17.3793C30.0119 17.3793 30.3452 17.5172 30.6071 17.7931L31.6071 18.7931C31.869 19.069 32 19.3966 32 19.7759C32 20.1552 31.869 20.4713 31.6071 20.7241L30.6071 21.6897ZM4.85714 27.069C4.07143 27.069 3.39881 26.7989 2.83929 26.2586C2.27976 25.7184 2 25.069 2 24.3103V7.75862C2 7 2.27976 6.35057 2.83929 5.81034C3.39881 5.27011 4.07143 5 4.85714 5H13.4286L16.2857 7.75862H27.7143C28.5 7.75862 29.1726 8.02874 29.7321 8.56897C30.2917 9.1092 30.5714 9.75862 30.5714 10.5172V14.5517C29.8095 14.5517 29.0833 14.6322 28.3929 14.7931C27.7024 14.954 27.0833 15.2989 26.5357 15.8276L14.9286 27.069H4.85714Z"
          fill="#3D3D4D"
        />
      </g>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export const TranslationFolderEditIcon = (props) => {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/TranslationFolderIcon.tsx
Tamaño: 3636 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { useMantineColorScheme } from '@mantine/core';

export const TranslationFolderIcon = (props) => {
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  return (
    <div style={{ position: 'relative' }}>
      <svg
        style={{
          boxShadow: isDark ? '0px 5px 20px 0px rgba(0, 0, 0, 0.20)' : undefined,
        }}
        xmlns="http://www.w3.org/2000/svg"
        width="73"
        height="58"
        viewBox="0 0 73 58"
        fill="none"
        {...props}
      >
        <path
          d="M6.49994 58C4.87994 58 3.47495 57.4098 2.28497 56.2295C1.09499 55.0492 0.5 53.6884 0.5 52.1472V5.85281C0.5 4.31157 1.09499 2.95081 2.28497 1.77052C3.47495 0.590173 4.87994 0 6.49994 0H30.56L36.5 5.4375H66.44C68.02 5.4375 69.475 6.44298 70.685 7.62333C71.895 8.80362 72.44 9.7491 72.44 11.2904L72.5 52.1472C72.5 53.6884 71.895 55.0492 70.685 56.2295C69.475 57.4098 68.08 58 66.5001 58H6.49994Z"
          fill={isDark ? '#3D3D4D' : '#D5D5D9'}
        />
      </svg>
      <svg
        style={{
          position: 'absolute',
          top: '20px',
          left: '23px',
        }}
        xmlns="http://www.w3.org/2000/svg"
        width="25"
        height="24"
        viewBox="0 0 25 24"
        fill="none"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M11.3 20.4L12.5 24H22.1C22.8 24 23.375 23.765 23.825 23.295C24.275 22.825 24.5 22.26 24.5 21.6V6C24.5 5.3 24.275 4.725 23.825 4.275C23.375 3.825 22.8 3.6 22.1 3.6H11.15L10.1 0H2.9C2.24 0 1.675 0.235 1.205 0.705C0.735 1.175 0.5 1.74 0.5 2.4V18C0.5 18.66 0.735 19.225 1.205 19.695C1.675 20.165 2.24 20.4 2.9 20.4H11.3ZM15.38 15.09L14.72 15.72L13.94 13.08C14.16 13.44 14.385 13.78 14.615 14.1C14.845 14.42 15.1 14.75 15.38 15.09ZM17.495 12.3C17.205 12.9 16.78 13.53 16.22 14.19C15.92 13.83 15.66 13.475 15.44 13.125C15.22 12.775 15.03 12.45 14.87 12.15H13.67L13.31 10.89H18.08C17.98 11.23 17.785 11.7 17.495 12.3ZM22.1 22.8H13.7L16.1 20.4L15.14 17.07L16.22 15.96L19.46 19.2L20.33 18.33L17.06 15.12C17.6 14.5 18.07 13.83 18.47 13.11C18.87 12.39 19.17 11.65 19.37 10.89H20.9V9.66H16.52V8.4H15.29V9.66H12.92L11.51 4.8H22.1C22.46 4.8 22.75 4.91 22.97 5.13C23.19 5.35 23.3 5.64 23.3 6V21.6C23.3 21.94 23.19 22.225 22.97 22.455C22.75 22.685 22.46 22.8 22.1 22.8ZM8.34963 10.6904V13.0137C8.02866 13.3644 7.67486 13.6347 7.28823 13.8247C6.90161 14.0146 6.50404 14.1096 6.09553 14.1096C5.65784 14.1096 5.30769 14 5.04507 13.7808C4.78246 13.5616 4.65115 13.2621 4.65115 12.8822C4.65115 12.4731 4.81528 12.1151 5.14355 11.8082C5.47182 11.5014 5.96422 11.2457 6.62076 11.0411C6.86878 10.968 7.13504 10.9023 7.41954 10.8438C7.70404 10.7854 8.01407 10.7342 8.34963 10.6904ZM8.50282 14.4164L8.63413 15.4027H10.1004V9.76986C10.1004 8.54247 9.83048 7.60731 9.29066 6.96438C8.75085 6.32146 7.963 6 6.92714 6C6.25601 6 5.59583 6.11324 4.94659 6.33973C4.29735 6.56621 3.732 6.8621 3.25054 7.2274L3.95085 8.45479C4.53443 8.10411 5.01225 7.85936 5.38428 7.72055C5.75632 7.58174 6.132 7.51233 6.51133 7.51233C7.1241 7.51233 7.57638 7.66941 7.86817 7.98356C8.15997 8.29772 8.32045 8.79817 8.34963 9.48493C7.88276 9.54338 7.44872 9.60913 7.0475 9.68219C6.64629 9.75525 6.2779 9.83562 5.94234 9.92329C4.87729 10.2155 4.10404 10.6027 3.62258 11.0849C3.14112 11.5671 2.90039 12.1881 2.90039 12.9479C2.90039 13.7662 3.14112 14.4128 3.62258 14.8877C4.10404 15.3626 4.76057 15.6 5.59218 15.6C6.14659 15.6 6.66817 15.4941 7.15693 15.2822C7.64568 15.0703 8.09431 14.7817 8.50282 14.4164Z"
          fill={isDark ? '#1E1E26' : '#828299'}
        />
      </svg>
    </div>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { useMantineColorScheme } from '@mantine/core';
export const TranslationFolderIcon = (props) => {
const { colorScheme } = useMantineColorScheme();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/TranslationFolderIconSmall.tsx
Tamaño: 3191 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { useMantineColorScheme } from '@mantine/core';

export const TranslationFolderIconSmall = (props) => {
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32" fill="none" {...props}>
      <path
        d="M4.8 28C4.03 28 3.37083 27.694 2.8225 27.082C2.27417 26.4701 2 25.7344 2 24.875V6.125C2 5.26562 2.27417 4.52995 2.8225 3.91797C3.37083 3.30599 4.03 3 4.8 3H13.2L16 6.125H27.2C27.97 6.125 28.6292 6.43099 29.1775 7.04297C29.7258 7.65495 30 8.39062 30 9.25V24.875C30 25.7344 29.7258 26.4701 29.1775 27.082C28.6292 27.694 27.97 28 27.2 28H4.8Z"
        fill={isDark ? '#3D3D4D' : '#D5D5D9'}
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M15.4 21.2L16 23H20.8C21.15 23 21.4375 22.8825 21.6625 22.6475C21.8875 22.4125 22 22.13 22 21.8V14C22 13.65 21.8875 13.3625 21.6625 13.1375C21.4375 12.9125 21.15 12.8 20.8 12.8H15.325L14.8 11H11.2C10.87 11 10.5875 11.1175 10.3525 11.3525C10.1175 11.5875 10 11.87 10 12.2V20C10 20.33 10.1175 20.6125 10.3525 20.8475C10.5875 21.0825 10.87 21.2 11.2 21.2H15.4ZM17.44 18.545L17.11 18.86L16.72 17.54C16.83 17.72 16.9425 17.89 17.0575 18.05C17.1725 18.21 17.3 18.375 17.44 18.545ZM18.4975 17.15C18.3525 17.45 18.14 17.765 17.86 18.095C17.71 17.915 17.58 17.7375 17.47 17.5625C17.36 17.3875 17.265 17.225 17.185 17.075H16.585L16.405 16.445H18.79C18.74 16.615 18.6425 16.85 18.4975 17.15ZM20.8 22.4H16.6L17.8 21.2L17.32 19.535L17.86 18.98L19.48 20.6L19.915 20.165L18.28 18.56C18.55 18.25 18.785 17.915 18.985 17.555C19.185 17.195 19.335 16.825 19.435 16.445H20.2V15.83H18.01V15.2H17.395V15.83H16.21L15.505 13.4H20.8C20.98 13.4 21.125 13.455 21.235 13.565C21.345 13.675 21.4 13.82 21.4 14V21.8C21.4 21.97 21.345 22.1125 21.235 22.2275C21.125 22.3425 20.98 22.4 20.8 22.4ZM13.9251 16.3452V17.5068C13.7646 17.6822 13.5877 17.8174 13.3944 17.9123C13.201 18.0073 13.0023 18.0548 12.798 18.0548C12.5792 18.0548 12.4041 18 12.2728 17.8904C12.1415 17.7808 12.0758 17.6311 12.0758 17.4411C12.0758 17.2365 12.1579 17.0575 12.322 16.9041C12.4862 16.7507 12.7324 16.6228 13.0606 16.5205C13.1846 16.484 13.3178 16.4511 13.46 16.4219C13.6023 16.3927 13.7573 16.3671 13.9251 16.3452ZM14.0017 18.2082L14.0673 18.7014H14.8004V15.8849C14.8004 15.2712 14.6655 14.8037 14.3956 14.4822C14.1257 14.1607 13.7317 14 13.2138 14C12.8783 14 12.5482 14.0566 12.2235 14.1699C11.8989 14.2831 11.6162 14.4311 11.3755 14.6137L11.7257 15.2274C12.0175 15.0521 12.2564 14.9297 12.4424 14.8603C12.6284 14.7909 12.8162 14.7562 13.0059 14.7562C13.3123 14.7562 13.5384 14.8347 13.6843 14.9918C13.8302 15.1489 13.9105 15.3991 13.9251 15.7425C13.6916 15.7717 13.4746 15.8046 13.274 15.8411C13.0734 15.8776 12.8892 15.9178 12.7214 15.9616C12.1889 16.1078 11.8023 16.3014 11.5615 16.5425C11.3208 16.7836 11.2004 17.0941 11.2004 17.474C11.2004 17.8831 11.3208 18.2064 11.5615 18.4438C11.8023 18.6813 12.1305 18.8 12.5463 18.8C12.8235 18.8 13.0843 18.747 13.3287 18.6411C13.5731 18.5352 13.7974 18.3909 14.0017 18.2082Z"
        fill={isDark ? '#1E1E26' : '#828299'}
      />
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { useMantineColorScheme } from '@mantine/core';
export const TranslationFolderIconSmall = (props) => {
const { colorScheme } = useMantineColorScheme();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/TranslationVariablesIcon.tsx
Tamaño: 1892 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { useMantineColorScheme } from '@mantine/core';

export const TranslationVariablesIcon = () => {
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  if (isDark) {
    return (
      <svg
        style={{
          boxShadow: '0px 5px 20px 0px rgba(0, 0, 0, 0.20)',
        }}
        xmlns="http://www.w3.org/2000/svg"
        width="73"
        height="58"
        viewBox="0 0 73 58"
        fill="none"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M2.12 56.3688C3.2 57.4563 4.46 58 5.9 58H67.1C68.54 58 69.8 57.4563 70.88 56.3688C71.96 55.2812 72.5 54.0125 72.5 52.5625V5.4375C72.5 3.9875 71.96 2.71875 70.88 1.63125C69.8 0.54375 68.54 0 67.1 0H5.9C4.46 0 3.2 0.54375 2.12 1.63125C1.04 2.71875 0.5 3.9875 0.5 5.4375V52.5625C0.5 54.0125 1.04 55.2812 2.12 56.3688ZM47.3 42.7812H14.9V37.3438H47.3V42.7812ZM58.1 42.7812H52.7V37.3438H58.1V42.7812ZM20.3 31.9062H14.9V26.4688H20.3V31.9062ZM58.1 31.9062H25.7V26.4688H58.1V31.9062ZM37 21.4375H15V16H37V21.4375ZM47.8 21.4375H42.4V16H47.8V21.4375ZM52.6 21.4375H58V16H52.6V21.4375Z"
          fill="#3D3D4D"
        />
      </svg>
    );
  }

  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="73" height="58" viewBox="0 0 73 58" fill="none">
      <path
        d="M0.5 8C0.5 3.58172 4.08172 0 8.5 0H64.5C68.9183 0 72.5 3.58172 72.5 8V50C72.5 54.4183 68.9183 58 64.5 58H8.5C4.08172 58 0.5 54.4183 0.5 50V8Z"
        fill="#D5D5D9"
      />
      <path d="M47.5 20H14.5V14H47.5V20Z" fill="#828299" />
      <path d="M58.5 20H53V14H58.5V20Z" fill="#828299" />
      <path d="M25.5 32H58.5V26H25.5V32Z" fill="#828299" />
      <path d="M14.5 32H20V26H14.5V32Z" fill="#828299" />
      <path d="M47.5 44H14.5V38H47.5V44Z" fill="#828299" />
      <path d="M58.5 44H53V38H58.5V44Z" fill="#828299" />
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { useMantineColorScheme } from '@mantine/core';
export const TranslationVariablesIcon = () => {
const { colorScheme } = useMantineColorScheme();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/UploadTranslationFilesHeaderIcon.tsx
Tamaño: 5974 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMantineColorScheme } from '@mantine/core';
import React from 'react';

export function UploadTranslationFilesHeaderIcon(props: React.ComponentPropsWithoutRef<'svg'>) {
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="92" height="40" fill="none" viewBox="0 0 92 40" {...props}>
      <path
        fill={isDark ? '#1E1E26' : '#D5D5D9'}
        fillRule="evenodd"
        d="M19.4 25.2L20 27h4.8c.35 0 .637-.117.863-.352.224-.235.337-.518.337-.848V18c0-.35-.113-.637-.337-.863-.226-.224-.513-.337-.863-.337h-5.475L18.8 15h-3.6c-.33 0-.612.117-.848.352A1.156 1.156 0 0014 16.2V24c0 .33.117.613.352.848.236.235.518.352.848.352h4.2zm2.04-2.655l-.33.315-.39-1.32a8.199 8.199 0 00.72 1.005zm1.057-1.395a4.55 4.55 0 01-.637.945c-.15-.18-.28-.357-.39-.532a7.987 7.987 0 01-.285-.488h-.6l-.18-.63h2.385c-.05.17-.148.405-.293.705zM24.8 26.4h-4.2l1.2-1.2-.48-1.665.54-.555 1.62 1.62.435-.435-1.635-1.605c.27-.31.505-.645.705-1.005.2-.36.35-.73.45-1.11h.765v-.615h-2.19v-.63h-.615v.63H20.21l-.705-2.43H24.8c.18 0 .325.055.435.165.11.11.165.255.165.435v7.8a.574.574 0 01-.6.6zm-6.875-6.055v1.162c-.16.175-.337.31-.53.405a1.338 1.338 0 01-.597.143c-.219 0-.394-.055-.525-.165a.554.554 0 01-.197-.449c0-.204.082-.383.246-.537.164-.153.41-.281.739-.384.124-.036.257-.069.399-.098.142-.03.297-.055.465-.077zm.077 1.863l.065.493h.733v-2.816c0-.614-.134-1.081-.404-1.403-.27-.321-.664-.482-1.182-.482-.336 0-.666.057-.99.17a3.057 3.057 0 00-.848.444l.35.613c.291-.175.53-.297.716-.367a1.6 1.6 0 01.564-.104c.306 0 .532.079.678.236.146.157.226.407.241.75-.233.03-.45.063-.651.1-.2.036-.385.076-.553.12-.532.146-.919.34-1.16.58-.24.242-.36.552-.36.932 0 .41.12.732.36.97.241.237.57.356.985.356.277 0 .538-.053.783-.159a2.49 2.49 0 00.673-.433z"
        clipRule="evenodd"
      ></path>
      <path
        fill={isDark ? '#3D3D4D' : '#D9D9D9'}
        d="M9 8a2 2 0 012-2h12.197a2 2 0 011.348.523l5.803 5.299A2 2 0 0131 13.299V32a2 2 0 01-2 2H11a2 2 0 01-2-2V8z"
      ></path>
      <mask
        id="mask0_262_176250"
        style={{ maskType: 'alpha' }}
        width="15"
        height="15"
        x="13"
        y="13"
        maskUnits="userSpaceOnUse"
      >
        <path fill="#D9D9D9" d="M13.125 13.7H27.125V27.7H13.125z"></path>
      </mask>
      <g mask="url(#mask0_262_176250)">
        <path
          fill={isDark ? '#23232B' : '#828299'}
          d="M21.5 26v-1.25h1.313c.159 0 .293-.06.4-.18a.641.641 0 00.162-.445v-1.25c0-.474.143-.883.43-1.224a1.645 1.645 0 011.07-.599v-.07a1.902 1.902 0 01-1.07-.642c-.287-.335-.43-.74-.43-1.215v-1.25a.641.641 0 00-.162-.445.518.518 0 00-.4-.18H21.5V16h1.313c.468 0 .867.182 1.195.547.328.364.492.807.492 1.328v1.25c0 .177.054.326.162.445.108.12.241.18.4.18H26v2.5h-.938c-.159 0-.293.06-.4.18a.641.641 0 00-.162.445v1.25c0 .52-.164.963-.492 1.328-.328.365-.727.547-1.195.547H21.5zm-4.313 0c-.468 0-.867-.182-1.195-.547-.328-.364-.492-.807-.492-1.328v-1.25a.641.641 0 00-.162-.445.518.518 0 00-.4-.18H14v-2.5h.938c.159 0 .292-.06.4-.18a.641.641 0 00.162-.445v-1.25c0-.52.164-.963.492-1.328.328-.365.727-.547 1.195-.547H18.5v1.25h-1.313c-.159 0-.293.06-.4.18a.641.641 0 00-.162.445v1.25c0 .486-.143.9-.43 1.241a1.645 1.645 0 01-1.07.6v.071c.427.045.784.24 1.07.588.287.347.43.764.43 1.25v1.25c0 .177.054.326.162.445.108.12.241.18.4.18H18.5V26h-1.313z"
        ></path>
      </g>
      <path
        fill={isDark ? '#292933' : '#828299'}
        d="M23.438 6c.442 0 .868.166 1.194.464l5.852 5.363c.329.301.516.727.516 1.173h-5.563a2 2 0 01-2-2V6z"
      ></path>
      <mask
        id="mask1_262_176250"
        style={{ maskType: 'alpha' }}
        width="12"
        height="12"
        x="40"
        y="14"
        maskUnits="userSpaceOnUse"
      >
        <path fill="#D9D9D9" d="M40 14H52V26H40z"></path>
      </mask>
      <g mask="url(#mask1_262_176250)">
        <path
          fill={isDark ? '#525266' : '#D9D9D9'}
          d="M47.875 20.45H42.4v-.9h5.475l-2.512-2.513L46 16.4l3.6 3.6-3.6 3.6-.637-.638 2.512-2.512z"
        ></path>
      </g>
      <path
        fill={isDark ? '#3D3D4D' : '#D9D9D9'}
        d="M60.8 32c-.77 0-1.43-.306-1.977-.918-.549-.612-.823-1.348-.823-2.207v-18.75c0-.86.274-1.595.822-2.207C59.371 7.306 60.03 7 60.8 7h8.4l2.8 3.125h11.2c.77 0 1.43.306 1.977.918.549.612.823 1.348.823 2.207v15.625c0 .86-.274 1.595-.823 2.207-.548.612-1.207.918-1.977.918H60.8z"
      ></path>
      <path
        fill={isDark ? '#1E1E26' : '#828299'}
        fillRule="evenodd"
        d="M71.4 25.2L72 27h4.8c.35 0 .638-.117.862-.352.225-.235.338-.518.338-.848V18c0-.35-.112-.637-.338-.863-.225-.224-.512-.337-.862-.337h-5.475L70.8 15h-3.6c-.33 0-.612.117-.847.352A1.156 1.156 0 0066 16.2V24c0 .33.118.613.353.848s.517.352.847.352h4.2zm2.04-2.655l-.33.315-.39-1.32a8.199 8.199 0 00.72 1.005zm1.058-1.395a4.55 4.55 0 01-.638.945c-.15-.18-.28-.357-.39-.532a7.987 7.987 0 01-.285-.488h-.6l-.18-.63h2.385c-.05.17-.148.405-.293.705zM76.8 26.4h-4.2l1.2-1.2-.48-1.665.54-.555 1.62 1.62.435-.435-1.635-1.605c.27-.31.505-.645.705-1.005.2-.36.35-.73.45-1.11h.765v-.615h-2.19v-.63h-.615v.63H72.21l-.705-2.43H76.8c.18 0 .325.055.435.165.11.11.165.255.165.435v7.8a.574.574 0 01-.6.6zm-6.875-6.055v1.162c-.16.175-.337.31-.53.405a1.338 1.338 0 01-.597.143c-.219 0-.394-.055-.525-.165a.554.554 0 01-.197-.449c0-.204.082-.383.246-.537.164-.153.41-.281.739-.384.124-.036.257-.069.399-.098.142-.03.297-.055.465-.077zm.077 1.863l.065.493h.733v-2.816c0-.614-.135-1.081-.404-1.403-.27-.321-.664-.482-1.182-.482-.336 0-.666.057-.99.17a3.057 3.057 0 00-.849.444l.35.613c.293-.175.531-.297.717-.367a1.6 1.6 0 01.564-.104c.306 0 .532.079.678.236.146.157.227.407.241.75-.233.03-.45.063-.651.1-.2.036-.385.076-.553.12-.532.146-.919.34-1.16.58-.24.242-.36.552-.36.932 0 .41.12.732.36.97.241.237.57.356.985.356.277 0 .538-.053.783-.159a2.49 2.49 0 00.673-.433z"
        clipRule="evenodd"
      ></path>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMantineColorScheme } from '@mantine/core';
import React from 'react';
export function UploadTranslationFilesHeaderIcon(props: React.ComponentPropsWithoutRef<'svg'>) {
const { colorScheme } = useMantineColorScheme();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/Warning.tsx
Tamaño: 1191 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export const Warning = (props) => {
  return (
    <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
      <mask
        id="mask0_2332_136881"
        style={{ maskType: 'alpha' }}
        maskUnits="userSpaceOnUse"
        x="0"
        y="0"
        width="16"
        height="16"
      >
        <rect width="16" height="16" fill="#EAA900" />
      </mask>
      <g mask="url(#mask0_2332_136881)">
        <path
          d="M0.233302 13.7501L-0.201208 14.5007H0.666016H15.3327H16.1999L15.7654 13.7501L8.43206 1.08347L7.99935 0.336053L7.56664 1.08347L0.233302 13.7501ZM8.1208 11.4554C8.09142 11.4848 8.06232 11.5007 7.99935 11.5007C7.93638 11.5007 7.90728 11.4848 7.8779 11.4554C7.84852 11.4261 7.83268 11.397 7.83268 11.334C7.83268 11.271 7.84852 11.2419 7.8779 11.2125C7.90729 11.1832 7.93638 11.1673 7.99935 11.1673C8.06232 11.1673 8.09141 11.1832 8.1208 11.2125C8.15018 11.2419 8.16602 11.271 8.16602 11.334C8.16602 11.397 8.15018 11.4261 8.1208 11.4554ZM8.16602 9.50065H7.83268V7.16732H8.16602V9.50065Z"
          fill="#EAA900"
          stroke="#13131A"
        />
      </g>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export const Warning = (props) => {
return (
<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/index.ts
Tamaño: 990 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export { Warning } from './Warning';
export { TranslationFolderEditIcon } from './TranslationFolderEditIcon';
export { LocaleIcon } from './LocaleIcon';
export { Star } from './Star';
export { TranslationFolderIconSmall } from './TranslationFolderIconSmall';
export { TranslationFileIcon } from './TranslationFileIcon';
export { TranslationFolderIcon } from './TranslationFolderIcon';
export { TranslationVariablesIcon } from './TranslationVariablesIcon';
export { AddGroupIcon } from './AddGroupIcon';
export { TerminalIcon } from './TerminalIcon';
export { ComputerIcon } from './ComputerIcon';
export { CodeBracketOutlined } from './CodeBracketOutlined';
export { TranslateIcon } from './TranslateIcon';
export { ReuploadIcon } from './ReuploadIcon';
export { ChevronDownIcon } from './ChevronDownIcon';
export { ChevronUpIcon } from './ChevronUpIcon';
export { ArrowForward } from './ArrowForward';
export { UploadTranslationFilesHeaderIcon } from './UploadTranslationFilesHeaderIcon';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Abkhazia.tsx
Tamaño: 1758 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Abkhazia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192471)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M33.994 5.714A19.933 19.933 0 0020 0C18.26 0 13.172 2.18 9.564 5.714h24.43zM19.998 17.143h19.796a19.86 19.86 0 00-1.721-5.714H19.129l.87 5.714zM1.925 28.572h36.148a19.857 19.857 0 001.722-5.715H.203a19.855 19.855 0 001.722 5.715zM6.004 34.286A19.933 19.933 0 0019.999 40c5.449 0 10.388-2.18 13.995-5.714H6.004z"
          fill="#6DA544"
        />
        <path d="M20 0C9.923 0 1.59 7.45.202 17.143H20V0z" fill="#D80027" />
        <path
          d="M10 15.333l-.87-1.739v-3.478l2.175-1.74 2.174 1.74v2.609l.87-.87v1.74l-1.74 1.738H10zM5.323 10l.23.709h.745l-.603.438.23.708-.602-.438-.603.438.23-.708-.602-.438h.745l.23-.709zM7.061 8.26l.23.71h.745l-.602.438.23.708-.603-.438-.603.438.23-.708-.602-.439h.745l.23-.708zM8.801 6.522l.23.708h.746l-.603.438.23.709-.603-.438-.602.438.23-.709-.603-.438h.745l.23-.708zM17.286 10l-.23.709h-.745l.602.438-.23.708.603-.438.602.438-.23-.708.603-.438h-.745l-.23-.709zM15.546 8.26l-.23.71h-.746l.603.438-.23.708.603-.438.602.438-.23-.708.603-.439h-.745l-.23-.708zM13.807 6.522l-.23.708h-.745l.603.438-.23.709.602-.438.603.438-.23-.709.602-.438h-.745l-.23-.708zM11.303 5.652l-.23.709h-.745l.603.438-.23.708.602-.438.603.438-.23-.708.602-.438h-.744l-.23-.709z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192471">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Abkhazia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Afghanistan.tsx
Tamaño: 1187 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Afghanistan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192583)">
        <path
          d="M28.695 1.985A19.92 19.92 0 0019.999 0a19.92 19.92 0 00-8.695 1.985L9.564 20l1.74 18.016A19.92 19.92 0 0019.999 40a19.92 19.92 0 008.696-1.984L30.434 20l-1.74-18.015z"
          fill="#D80027"
        />
        <path d="M11.304 1.985C4.614 5.22 0 12.071 0 20c0 7.93 4.615 14.78 11.304 18.015V1.985z" fill="#000" />
        <path d="M28.695 1.985v36.03C35.385 34.78 40 27.929 40 20c0-7.93-4.615-14.78-11.305-18.015z" fill="#496E2D" />
        <path
          d="M20 13.043a6.956 6.956 0 100 13.913 6.956 6.956 0 000-13.912zm0 11.305a4.348 4.348 0 110-8.696 4.348 4.348 0 010 8.696z"
          fill="#FFDA44"
        />
        <path
          d="M19.999 17.391c-.96 0-1.74.779-1.74 1.74v2.608h3.479v-2.608c0-.961-.779-1.74-1.74-1.74z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192583">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Afghanistan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/AlandIslands.tsx
Tamaño: 1271 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function AlandIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192695)">
        <path
          d="M39.311 25.217A20.02 20.02 0 0040 20c0-1.805-.24-3.554-.689-5.217L18.261.075A19.898 19.898 0 007.826 4.132L.69 14.782A20.022 20.022 0 000 20c0 1.795.238 3.534.681 5.189l7.145 10.678a19.898 19.898 0 0010.435 4.057l21.05-14.707z"
          fill="#FFDA44"
        />
        <path
          d="M.69 25.217a20.017 20.017 0 007.137 10.65v-10.65H.689zM18.262 39.924c.573.05 1.153.076 1.739.076 9.24 0 17.016-6.267 19.31-14.783h-21.05v14.707zM39.312 14.783C37.017 6.267 29.242 0 20 0c-.586 0-1.166.027-1.74.076v14.707h21.05zM7.827 4.132a20.017 20.017 0 00-7.138 10.65h7.138V4.133z"
          fill="#0052B4"
        />
        <path
          d="M39.83 17.391H15.653V.475c-1.848.41-3.6 1.074-5.217 1.957v14.96H.169a20.172 20.172 0 000 5.217h10.266v14.96a19.863 19.863 0 005.217 1.956V22.609h24.179a20.195 20.195 0 000-5.218z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192695">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function AlandIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Albania.tsx
Tamaño: 988 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Albania(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192807)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#D80027" />
        <path
          d="M31.304 14.844H24.06A2.609 2.609 0 1020 11.601a2.609 2.609 0 10-4.06 3.243H8.695c0 1.921 1.673 3.479 3.594 3.479h-.116a3.478 3.478 0 003.479 3.478c0 .622.164 1.206.45 1.71l-2.885 2.886 2.213 2.213 3.14-3.14c.123.045.25.082.382.106l-1.897 4.284L20 33.044l2.945-3.184-1.898-4.284c.132-.025.259-.06.382-.106l3.14 3.14 2.213-2.213-2.885-2.886c.286-.505.45-1.088.45-1.71a3.478 3.478 0 003.479-3.479h-.116c1.92 0 3.594-1.557 3.594-3.478z"
          fill="#000"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192807">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Albania(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Algeria.tsx
Tamaño: 924 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Algeria(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192919)">
        <path d="M20 0c11.045 0 20 8.954 20 20s-8.955 20-20 20c0-.87-2.61-20-2.61-20L20 0z" fill="#F0F0F0" />
        <path d="M20 40C8.954 40 0 31.046 0 20S8.954 0 20 0" fill="#496E2D" />
        <path
          d="M24.299 16.164l-1.641 2.261L20 17.563l1.644 2.26-1.641 2.261 2.656-.865 1.644 2.26-.002-2.794 2.657-.865-2.658-.862-.002-2.794z"
          fill="#D80027"
        />
        <path
          d="M21.66 25.652a5.652 5.652 0 112.688-10.625 6.956 6.956 0 100 9.945c-.8.434-1.715.68-2.688.68z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192919">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Algeria(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/AmericanSamoa.tsx
Tamaño: 1303 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function AmericanSamoa(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193033)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M29.703 2.509A19.908 19.908 0 0020 0C8.955 0 .001 8.953 0 19.998l13.913-6.955L29.703 2.51zM0 20.002C.001 31.047 8.955 40 20 40c3.521 0 6.83-.911 9.703-2.509l-15.79-10.535L0 20.002z"
          fill="#0052B4"
        />
        <path
          d="M31.37 3.545a20.023 20.023 0 00-1.668-1.036L0 19.998v.004l29.702 17.489c.574-.319 1.13-.665 1.668-1.036L3.424 20 31.369 3.545z"
          fill="#D80027"
        />
        <path
          d="M34.783 19.254H32.4c.62-.744.582-1.85-.116-2.548.739-.739.739-1.938 0-2.677l-.045.045c.74-.74.784-1.982.045-2.722L21.576 22.06c.74.74 1.917.73 2.656-.009l.206-.188 5.127-.466v2.205h1.74v-2.363L33.913 21l.87-1.747z"
          fill="#A2001D"
        />
        <path d="M21.74 24.348l-1.74-.87 1.74-.87h11.304v1.74H21.74z" fill="#FFDA44" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193033">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function AmericanSamoa(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Andorra.tsx
Tamaño: 1453 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Andorra(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193145)">
        <path
          d="M11.304 38.016A19.92 19.92 0 0019.999 40a19.92 19.92 0 008.696-1.984L30.434 20l-1.74-18.015A19.92 19.92 0 0020 0a19.92 19.92 0 00-8.695 1.985L9.564 20l1.74 18.016z"
          fill="#FFDA44"
        />
        <path d="M28.695 38.015C35.385 34.78 40 27.929 40 20c0-7.93-4.615-14.78-11.305-18.015v36.03z" fill="#D80027" />
        <path d="M11.304 38.015V1.985C4.614 5.22 0 12.071 0 20c0 7.93 4.614 14.78 11.304 18.015z" fill="#0052B4" />
        <path
          d="M20 26.956V20h5.217v2.609c0 .453-.87 2.113-3.015 3.478-.813.517-1.655.683-2.202.87zM14.783 14.783h5.218V20h-5.218v-5.217z"
          fill="#D80027"
        />
        <path
          d="M22.608 13.043A1.74 1.74 0 0020 11.54a1.74 1.74 0 00-2.609 1.505h-4.348v8.695c0 3.237 2.57 5.11 4.587 6.08A1.74 1.74 0 0020 30.2a1.74 1.74 0 002.37-2.381c2.015-.97 4.586-2.843 4.586-6.08v-8.696h-4.348zm1.74 8.696c0 .453 0 1.832-2.147 3.197A10.53 10.53 0 0120 25.974a10.528 10.528 0 01-2.202-1.038c-2.146-1.365-2.146-2.744-2.146-3.197v-6.087h8.695v6.087z"
          fill="#FF9811"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193145">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Andorra(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Angola.tsx
Tamaño: 1312 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Angola(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193257)">
        <path d="M0 20C0 8.954 8.954 0 20 0s20 8.954 20 20c-.87 0-20 2.609-20 2.609L0 20z" fill="#D80027" />
        <path d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20" fill="#000" />
        <path
          d="M17.258 15.907l1.695 1.23-.646 1.993 1.694-1.232 1.696 1.23-.649-1.992 1.695-1.232-2.095.001-.65-1.992-.645 1.993-2.095.001z"
          fill="#FFDA44"
        />
        <path
          d="M25 11.34a9.936 9.936 0 00-5-1.337v2.608a7.343 7.343 0 013.696.988c3.53 2.038 4.743 6.567 2.705 10.097-2.038 3.53-6.567 4.743-10.097 2.705a7.34 7.34 0 01-2.47-2.33l-2.178 1.438A9.936 9.936 0 0015 28.66c4.775 2.757 10.903 1.115 13.66-3.66 2.757-4.775 1.115-10.903-3.66-13.66z"
          fill="#FFDA44"
        />
        <path
          d="M14.235 18.26a2.609 2.609 0 001.036 3.541l8.473 4.63c-.576 1.053-.27 2.335.783 2.912l2.289 1.252a2.174 2.174 0 002.95-.864l1.252-2.289-16.783-9.181z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193257">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Angola(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Anguilla.tsx
Tamaño: 1898 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Anguilla(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193370)">
        <path
          d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20C0 20.005 20 .002 20 0c11.046 0 20 8.954 20 20z"
          fill="#0052B4"
        />
        <path
          d="M19.947 20h.054v-.053l-.054.053zM20 10.435V0h-.003C8.952.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.053V16.31l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M10.12 2.609a20.095 20.095 0 00-7.51 7.51V20h5.217V7.826H20V2.61h-9.882z" fill="#D80027" />
        <path d="M20 17.54l-7.105-7.105h-2.46L20.002 20v-2.46z" fill="#D80027" />
        <path
          d="M33.824 22.927c.575-.79.96-1.757.96-2.927v-8.696c-.727.546-1.63.87-2.61.87a4.34 4.34 0 01-3.478-1.74 4.341 4.341 0 01-3.478 1.74 4.329 4.329 0 01-2.609-.87V20c0 1.17.384 2.136.96 2.927h10.255z"
          fill="#F3F3F3"
        />
        <path
          d="M32.016 18.387c.277-.676.492-1.663.492-2.154 0-.79-1.03-1.43-1.03-1.43s-1.028.64-1.028 1.43c0 .491.215 1.479.492 2.154l-.594 1.341a2.996 2.996 0 002.262 0l-.594-1.341zM27.993 14.043c-.723.098-1.686.405-2.111.651-.684.395-.724 1.606-.724 1.606s1.07.571 1.753.177c.425-.246 1.172-.926 1.619-1.504l1.459-.156a2.998 2.998 0 00-1.131-1.96l-.865 1.186zM26.242 19.699c.447.577 1.194 1.257 1.62 1.503.683.394 1.752-.177 1.752-.177s-.04-1.211-.723-1.606c-.426-.245-1.389-.553-2.112-.65l-.864-1.186a3.002 3.002 0 00-1.132 1.96l1.46.156z"
          fill="#FF9811"
        />
        <path d="M23.354 22.609c1.624 2.606 5.342 3.478 5.342 3.478s3.72-.872 5.343-3.478H23.353z" fill="#338AF3" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193370">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Anguilla(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/AntiguaAndBarbuda.tsx
Tamaño: 1163 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function AntiguaAndBarbuda(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193483)">
        <path
          d="M0 20c0 1.37.138 2.707.4 4L20 25.217 39.6 24c.262-1.293.4-2.63.4-4s-.138-2.708-.4-4L20 14.783.4 16c-.262 1.292-.4 2.63-.4 4z"
          fill="#0052B4"
        />
        <path d="M39.6 24H.4c1.853 9.129 9.924 16 19.6 16 9.675 0 17.746-6.871 19.6-16z" fill="#F0F0F0" />
        <path d="M.4 16h39.2C37.745 6.871 29.675 0 20 0 10.324 0 2.253 6.871.4 16z" fill="#000" />
        <path
          d="M28.696 16H11.305l3.553-1.671-1.892-3.442 3.858.738.489-3.897L20 10.595l2.688-2.867.489 3.897 3.858-.738-1.892 3.442 3.553 1.67z"
          fill="#FFDA44"
        />
        <path
          d="M0 20c0 11.046 8.954 20 20 20L4 8a19.91 19.91 0 00-4 12zM20 40c11.046 0 20-8.954 20-20a19.91 19.91 0 00-4-12L20 40z"
          fill="#A2001D"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193483">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function AntiguaAndBarbuda(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Argentina.tsx
Tamaño: 1000 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Argentina(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192479)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 0C12.07 0 5.22 4.614 1.984 11.304h36.031C34.78 4.614 27.93 0 20 0zM20 40c7.929 0 14.78-4.614 18.015-11.304H1.985C5.218 35.386 12.07 40 20 40z"
          fill="#338AF3"
        />
        <path
          d="M25.977 20l-2.443 1.149 1.301 2.366-2.652-.508-.336 2.68-1.848-1.971-1.847 1.97-.336-2.679-2.653.508 1.301-2.366L14.022 20l2.442-1.149-1.3-2.365 2.652.507.336-2.68 1.847 1.971 1.848-1.97.336 2.679 2.652-.507-1.3 2.365L25.977 20z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192479">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Argentina(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Armenia.tsx
Tamaño: 826 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Armenia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192591)">
        <path
          d="M40 20c0-2.446-.44-4.79-1.244-6.957L20 12.174l-18.756.87A19.958 19.958 0 000 20c0 2.446.44 4.79 1.244 6.956l18.756.87 18.756-.87A19.955 19.955 0 0040 20z"
          fill="#0052B4"
        />
        <path d="M20 40c8.6 0 15.93-5.428 18.756-13.044H1.244C4.07 34.572 11.401 40 20 40z" fill="#FF9811" />
        <path d="M1.244 13.043h37.512C35.93 5.428 28.6 0 20 0 11.4 0 4.07 5.428 1.244 13.043z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192591">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Armenia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Aruba.tsx
Tamaño: 1173 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Aruba(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192703)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M20 40c6.063 0 11.494-2.697 15.162-6.956H4.84C8.508 37.303 13.94 40 20 40zM40 20C40 8.954 31.046 0 20 0S0 8.954 0 20c0 1.805.24 3.554.689 5.217h38.622C39.76 23.554 40 21.805 40 20zM1.59 27.826c.385.906.836 1.777 1.346 2.609h34.129c.51-.832.96-1.703 1.346-2.609H1.59z"
          fill="#338AF3"
        />
        <path
          d="M9.165 12.614L5.258 10.89l3.907-1.725 1.725-3.907 1.724 3.907 3.908 1.725-3.908 1.724-1.724 3.908-1.725-3.908z"
          fill="#F0F0F0"
        />
        <path
          d="M10.89 7.412l1.065 2.413 2.414 1.065-2.414 1.065-1.065 2.413-1.065-2.413-2.413-1.065 2.413-1.065 1.065-2.413z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192703">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Aruba(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Australia.tsx
Tamaño: 1861 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Australia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192815)">
        <path
          d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20C0 20.005 20 .002 20 0c11.046 0 20 8.954 20 20z"
          fill="#0052B4"
        />
        <path
          d="M19.947 20h.054v-.053l-.054.053zM20 10.435V0h-.003C8.953.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.054v-3.635l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M10.12 2.609a20.095 20.095 0 00-7.51 7.51V20h5.217V7.826H20V2.61h-9.882z" fill="#D80027" />
        <path d="M20 17.54l-7.105-7.105h-2.46L20.002 20v-2.46z" fill="#D80027" />
        <path
          d="M12.061 23.478l1.098 2.295 2.478-.572-1.11 2.289 1.994 1.58-2.482.56.007 2.544-1.985-1.592-1.985 1.592.007-2.544-2.481-.56 1.993-1.58-1.11-2.29 2.479.573 1.097-2.295zM29.943 27.826l.548 1.148 1.24-.287-.555 1.145.997.79-1.241.28.003 1.272-.992-.796-.993.796.004-1.272-1.241-.28.996-.79-.555-1.145 1.24.287.549-1.148zM24.837 15.652l.549 1.148 1.24-.287-.556 1.145.997.79-1.24.28.002 1.272-.992-.796-.992.796.003-1.272-1.24-.28.996-.79-.555-1.145 1.24.287.548-1.148zM29.943 8.696l.548 1.147 1.24-.286-.555 1.144.996.79-1.24.28.003 1.272-.992-.795-.993.795.004-1.272-1.241-.28.996-.79-.555-1.144 1.24.286.549-1.147zM34.404 13.913l.548 1.148 1.24-.287-.555 1.145.996.79-1.24.28.003 1.272-.992-.796-.993.796.004-1.272-1.241-.28.996-.79-.555-1.145 1.24.287.549-1.148zM31.213 20l.432 1.329h1.397l-1.13.82.432 1.33-1.13-.822-1.13.821.43-1.328-1.13-.821h1.398L31.213 20z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192815">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Australia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Austria.tsx
Tamaño: 820 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Austria(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192927)">
        <path
          d="M38.756 26.957A19.955 19.955 0 0040 20c0-2.446-.44-4.79-1.244-6.956L20 11.304l-18.756 1.74A19.958 19.958 0 000 20c0 2.447.44 4.79 1.244 6.957L20 28.696l18.756-1.74z"
          fill="#F0F0F0"
        />
        <path
          d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40zM20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192927">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Austria(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Azerbaijan.tsx
Tamaño: 1229 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Azerbaijan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193041)">
        <path
          d="M40 20c0-2.446-.44-4.79-1.244-6.957L20 12.174l-18.756.87A19.958 19.958 0 000 20c0 2.446.44 4.79 1.244 6.956l18.756.87 18.756-.87A19.956 19.956 0 0040 20z"
          fill="#D80027"
        />
        <path d="M20 40c8.6 0 15.93-5.428 18.756-13.044H1.244C4.07 34.572 11.401 40 20 40z" fill="#6DA544" />
        <path d="M1.244 13.043h37.512C35.93 5.428 28.6 0 20 0 11.4 0 4.07 5.428 1.244 13.043z" fill="#338AF3" />
        <path
          d="M20.435 25.652a5.652 5.652 0 112.689-10.625 6.956 6.956 0 100 9.945c-.8.434-1.716.68-2.689.68z"
          fill="#F0F0F0"
        />
        <path
          d="M24.782 16.087l.749 2.105 2.018-.959-.96 2.018 2.106.749-2.105.749.96 2.018-2.02-.96-.748 2.106-.748-2.105-2.019.959.96-2.018L20.869 20l2.106-.749-.96-2.018 2.019.96.748-2.106z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193041">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Azerbaijan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/AzoresIslands.tsx
Tamaño: 1846 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function AzoresIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193153)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M0 20c0 7.58 4.218 14.176 10.435 17.568V2.432C4.218 5.824 0 12.419 0 20z" fill="#D80027" />
        <path d="M0 20c0 9.24 6.267 17.016 14.783 19.311V.689C6.267 2.984 0 10.759 0 20z" fill="#0052B4" />
        <path d="M7.174 6.956v3.261a2.935 2.935 0 105.87 0v-3.26h-5.87z" fill="#D80027" />
        <path
          d="M10.108 11.413c-.66 0-1.196-.536-1.196-1.196V8.696h2.391v1.521c0 .66-.536 1.196-1.195 1.196z"
          fill="#F0F0F0"
        />
        <path
          d="M21.74 20.87h-5.218a1.74 1.74 0 00-3.478 0H7.826c0 .96.837 1.739 1.797 1.739h-.058c0 .96.779 1.739 1.74 1.739 0 .96.778 1.739 1.739 1.739h3.478c.96 0 1.739-.779 1.739-1.74.96 0 1.74-.778 1.74-1.738h-.059c.96 0 1.797-.779 1.797-1.74zM22.453 18.087l-.456.73.554.66-.836-.208-.457.731-.06-.86-.837-.208.8-.323-.06-.86.553.66.8-.322zM19.788 15.851l-.179.843.746.43-.857.091-.179.843-.35-.787-.858.09.64-.577-.35-.787.747.43.64-.576zM16.52 14.662l.12.853.85.15-.775.378.12.853-.599-.62-.774.378.404-.761-.598-.62.848.15.405-.761zM13.043 14.662l.405.76.848-.15-.598.621.404.76-.774-.377-.6.62.12-.854-.774-.377.849-.15.12-.853zM9.774 15.851l.64.577.747-.431-.35.787.64.577-.857-.09-.35.787-.18-.843-.857-.09.746-.43-.179-.844zM7.11 18.087l.8.322.554-.66-.06.86.799.323-.836.208-.06.86-.457-.73-.836.208.554-.66-.457-.732z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193153">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function AzoresIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Bahamas.tsx
Tamaño: 838 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Bahamas(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193265)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M12.175 13.043h26.582C35.93 5.428 28.6 0 20 0A19.935 19.935 0 005.859 5.859l6.316 7.184zM12.175 26.956h26.582C35.93 34.573 28.6 40 20 40a19.935 19.935 0 01-14.142-5.858l6.316-7.186z"
          fill="#338AF3"
        />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#000" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193265">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Bahamas(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Bahrain.tsx
Tamaño: 775 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Bahrain(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193378)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 0c-4.014 0-7.75 1.183-10.883 3.219l5.144 3.447L7.826 10l6.435 3.334-6.435 3.333 6.435 3.333-6.435 3.333 6.435 3.333L7.826 30l6.435 3.333-5.144 3.449A19.905 19.905 0 0020 40c11.046 0 20-8.954 20-20S31.046 0 20 0z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193378">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Bahrain(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/BalearicIslands.tsx
Tamaño: 1117 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function BalearicIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193491)">
        <path d="M20 0c11.046 0 20 8.954 20 20s-8.954 20-20 20S0 31.046 0 20" fill="#FFDA44" />
        <path
          d="M19.564 8.889H36.63a20.112 20.112 0 00-4.061-4.444H19.564v4.444zM19.564 17.778h20.312a19.884 19.884 0 00-1.016-4.444H19.564v4.444zM1.14 26.667h37.72c.5-1.416.846-2.904 1.016-4.445H.123c.17 1.541.516 3.03 1.016 4.445zM7.43 35.556h25.14a20.112 20.112 0 004.061-4.445H3.37a20.112 20.112 0 004.061 4.445z"
          fill="#D80027"
        />
        <path d="M20 0C8.954 0 0 8.954 0 20h20V0z" fill="#4A1F63" />
        <path
          d="M16.522 10.435v1.74h-.87v-1.74h-1.739v1.74h-.87v-3.48H9.565v3.48h-.87v-1.74H6.957v1.74h-.87v-1.74H4.349v5.217H18.26v-5.217h-1.74z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193491">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function BalearicIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Bangladesh.tsx
Tamaño: 600 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Bangladesh(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192487)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#496E2D" />
        <path d="M15.653 28.696a8.696 8.696 0 100-17.392 8.696 8.696 0 000 17.392z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192487">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Bangladesh(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Barbados.tsx
Tamaño: 1221 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Barbados(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192599)">
        <path
          d="M28.695 1.985A19.92 19.92 0 0019.999 0a19.92 19.92 0 00-8.695 1.985L9.564 20l1.74 18.016A19.92 19.92 0 0019.999 40a19.92 19.92 0 008.696-1.984L30.434 20l-1.74-18.015z"
          fill="#FFDA44"
        />
        <path
          d="M11.304 1.985C4.614 5.22 0 12.071 0 20c0 7.93 4.615 14.78 11.304 18.015V1.985zM28.695 1.985v36.03C35.385 34.78 40 27.929 40 20c0-7.93-4.615-14.78-11.305-18.015z"
          fill="#0052B4"
        />
        <path
          d="M26.087 12.174l1.166.583-1.166-.583-1.167-.583c-.07.14-1.594 3.24-1.843 7.974h-1.773v-7.391L20 10.434l-1.305 1.74v7.391h-1.773c-.249-4.734-1.772-7.834-1.843-7.974l-2.333 1.166c.016.032 1.602 3.26 1.602 8.113v1.304h4.347v7.391h2.61v-7.391h4.347v-1.305c0-2.509.434-4.578.798-5.872.397-1.41.8-2.235.805-2.243l-1.168-.58z"
          fill="#000"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192599">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Barbados(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/BasqueCountry.tsx
Tamaño: 1576 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function BasqueCountry(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192711)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M.17 22.609a19.898 19.898 0 003.965 9.567l10.648-9.567H.17zM17.392 39.83V25.218L7.824 35.865a19.898 19.898 0 009.568 3.966zM17.392.17a19.899 19.899 0 00-9.568 3.965l9.568 10.648V.169zM.17 17.391h14.613L4.135 7.824A19.897 19.897 0 00.17 17.39zM22.61.17v14.613l9.567-10.648A19.9 19.9 0 0022.609.169zM39.832 17.391a19.899 19.899 0 00-3.965-9.567L25.219 17.39h14.613zM25.219 22.609l10.648 9.567a19.899 19.899 0 003.965-9.567H25.22zM22.61 39.83a19.899 19.899 0 009.567-3.965l-9.568-10.648v14.614z"
          fill="#D80027"
        />
        <path
          d="M35.867 32.178L23.689 20 35.867 7.822a20.202 20.202 0 00-3.69-3.69L20 16.312 7.822 4.133a20.191 20.191 0 00-3.69 3.69L16.312 20 4.133 32.178a20.225 20.225 0 003.69 3.689L20 23.689l12.178 12.178a20.224 20.224 0 003.689-3.69z"
          fill="#496E2D"
        />
        <path
          d="M22.609 39.83V22.61H39.83a20.176 20.176 0 000-5.218H22.609V.17a20.196 20.196 0 00-5.218 0v17.222H.17a20.184 20.184 0 000 5.218h17.222V39.83a20.192 20.192 0 005.218 0z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192711">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function BasqueCountry(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Belarus.tsx
Tamaño: 1290 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Belarus(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192823)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FCFCFC" />
        <path
          d="M8.26 18.55l-2.174-3.943 2.174-3.882 2.174 3.882L8.26 18.55zM3.912 18.55l-2.174-3.943 2.174-3.882 2.174 3.882-2.174 3.944zM8.26 29.276l-2.174-3.944 2.174-3.883 2.174 3.883-2.174 3.944zM3.912 29.276l-2.174-3.944 2.174-3.883 2.174 3.883-2.174 3.944zM10.433 3.882l-.615-1.099a20.055 20.055 0 00-3.093 2.259l1.534 2.784 2.174-3.944zM8.26 32.174l-1.551 2.77A20.055 20.055 0 009.8 37.206l.634-1.15-2.174-3.882z"
          fill="#A2001D"
        />
        <path
          d="M12.174 25.218V38.41A19.934 19.934 0 0020 40c8.6 0 15.93-5.427 18.756-13.043l-26.582-1.74z"
          fill="#6DA544"
        />
        <path
          d="M38.756 26.956A19.955 19.955 0 0040 20C40 8.954 31.046 0 20 0c-2.777 0-5.422.567-7.826 1.59v25.367h26.582z"
          fill="#A2001D"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192823">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Belarus(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Belgium.tsx
Tamaño: 835 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Belgium(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192935)">
        <path
          d="M26.957 1.244A19.957 19.957 0 0020 0c-2.446 0-4.79.44-6.956 1.244L11.304 20l1.74 18.756A19.955 19.955 0 0020 40c2.447 0 4.79-.44 6.957-1.244L28.696 20l-1.74-18.756z"
          fill="#FFDA44"
        />
        <path d="M40 20c0-8.6-5.427-15.93-13.043-18.756v37.512C34.573 35.93 40.001 28.6 40.001 20z" fill="#D80027" />
        <path d="M0 20c0 8.6 5.428 15.93 13.043 18.756V1.244C5.428 4.07 0 11.401 0 20z" fill="#000" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192935">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Belgium(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Belize.tsx
Tamaño: 1301 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Belize(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193049)">
        <path
          d="M40 20c0-6.864-3.459-12.92-8.728-16.522L20 2.608l-11.272.87C3.458 7.08 0 13.136 0 20c0 6.864 3.459 12.92 8.728 16.522l11.272.87 11.272-.87C36.542 32.92 40 26.864 40 20z"
          fill="#0052B4"
        />
        <path
          d="M31.273 3.478A19.906 19.906 0 0020.001 0 19.906 19.906 0 008.729 3.478h22.544zM8.729 36.522A19.906 19.906 0 0020 40c4.181 0 8.063-1.284 11.272-3.478H8.73z"
          fill="#A2001D"
        />
        <path d="M20 29.565a9.565 9.565 0 000-19.13 9.565 9.565 0 100 19.13z" fill="#F0F0F0" />
        <path d="M20 27.826a7.826 7.826 0 100-15.652 7.826 7.826 0 000 15.652z" fill="#6DA544" />
        <path d="M20 25.217a5.217 5.217 0 100-10.434 5.217 5.217 0 000 10.434z" fill="#F0F0F0" />
        <path d="M20 18.696L17.174 20v2.174L20 23.913l2.826-1.74V20L20 18.696z" fill="#0052B4" />
        <path d="M17.174 17.391h5.652V20h-5.652v-2.609z" fill="#FFDA44" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193049">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Belize(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Benin.tsx
Tamaño: 754 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Benin(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193161)">
        <path
          d="M13.043 18.26l1.74 21.051A20.02 20.02 0 0020 40c11.045 0 20-8.954 20-20l-26.957-1.74z"
          fill="#D80027"
        />
        <path d="M13.043 20L14.782.689A20.022 20.022 0 0120 0c11.045 0 20 8.954 20 20H13.042z" fill="#FFDA44" />
        <path d="M0 20c0 9.24 6.267 17.016 14.783 19.311V.689C6.267 2.984 0 10.759 0 20z" fill="#6DA544" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193161">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Benin(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Bermuda.tsx
Tamaño: 1448 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Bermuda(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193273)">
        <path
          d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20C0 20.005 20 .002 20 0c11.046 0 20 8.954 20 20z"
          fill="#D80027"
        />
        <path d="M20 9.565v6.746l-6.957-6.746H20zM10.434 20h5.876l-5.876-7.826-.87 6.087.87 1.739z" fill="#0052B4" />
        <path
          d="M19.947 20h.054v-.053l-.054.053zM20 10.435V0h-.003C8.952.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.053V16.31l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M10.12 2.609a20.095 20.095 0 00-7.51 7.51v10.75h5.217V7.826H20.87V2.61H10.12z" fill="#D80027" />
        <path d="M20.796 18.335l-7.901-7.9h-2.46l10.36 10.36v-2.46z" fill="#D80027" />
        <path d="M22.61 10.435V20c0 4.66 12.173 4.66 12.173 0v-9.565H22.61z" fill="#F3F3F3" />
        <path d="M22.61 20c0 4.66 6.086 6.087 6.086 6.087s6.087-1.428 6.087-6.087H22.61z" fill="#6DA544" />
        <path d="M28.695 16.174l-2.826 1.217V20l2.826 1.74L31.521 20v-2.609l-2.826-1.217z" fill="#A2001D" />
        <path d="M25.87 14.783h5.651v2.608H25.87v-2.608z" fill="#338AF3" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193273">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Bermuda(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Bhutan.tsx
Tamaño: 1554 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Bhutan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193386)">
        <path
          d="M34.142 34.142c-7.81 7.81-20.474 7.81-28.284 0-7.81-7.81-7.81-20.474 0-28.284.003 0 17.973-5.31 25.784 2.5 7.81 7.81 2.506 25.779 2.5 25.784z"
          fill="#FFDA44"
        />
        <path
          d="M34.142 34.142c7.81-7.81 7.81-20.474 0-28.284-7.81-7.81-20.474-7.81-28.285 0l28.285 28.284z"
          fill="#D80027"
        />
        <path
          d="M25.228 25.23a3.04 3.04 0 01-2.604-.177 3.047 3.047 0 01-1.165-4.143l-.249-.14a5.66 5.66 0 004.327-5.562 5.639 5.639 0 00-1.932-4.183l-1.826 1.87a3.039 3.039 0 011.15 2.344 3.047 3.047 0 01-3.007 3.08l.003.286a5.66 5.66 0 00-6.98-.966 5.64 5.64 0 00-2.656 3.765l2.533.646a3.039 3.039 0 011.455-2.167 3.047 3.047 0 014.17 1.063l.247-.146a5.66 5.66 0 002.653 6.528 5.64 5.64 0 004.588.419l-.707-2.517zm-5.285-5.172z"
          fill="#FF9811"
        />
        <path
          d="M27.405 13.545L25.99 18.59l-4.241-.783-2.73-5.628-7.376 2.617-.582-1.639-1.93-.238 1.455 4.098 5.075-1.298 1.443 4.065-3.509 5.178 5.955 5.078-1.129 1.324.759 1.79 2.822-3.308-3.662-3.747 2.799-3.281 6.238.45L28.8 15.57l1.71.316 1.172-1.552-4.276-.79zm-7.407 6.591z"
          fill="#FFEACF"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193386">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Bhutan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Bolivia.tsx
Tamaño: 826 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Bolivia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193499)">
        <path
          d="M40 20c0-2.447-.44-4.79-1.244-6.957L20 12.173l-18.756.87A19.955 19.955 0 000 20c0 2.446.44 4.79 1.244 6.956l18.756.87 18.756-.87A19.956 19.956 0 0040 20z"
          fill="#FFDA44"
        />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#6DA544" />
        <path d="M1.244 13.043h37.512C35.93 5.428 28.6 0 20 0 11.4 0 4.07 5.428 1.244 13.043z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193499">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Bolivia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Bonaire.tsx
Tamaño: 1354 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Bonaire(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192495)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M5.857 5.858C1.571 10.144-.363 15.892.056 21.498L21.496.055C15.893-.362 10.145 1.571 5.858 5.858z"
          fill="#FFDA44"
        />
        <path
          d="M7.14 35.318c7.859 6.611 19.605 6.22 27.001-1.176 7.397-7.396 7.788-19.143 1.176-27L7.141 35.317z"
          fill="#0052B4"
        />
        <path
          d="M19.929 19.194l1.723-.933-1.723-.934a6.091 6.091 0 00-5.082-5.082l-.934-1.723-.934 1.723a6.091 6.091 0 00-5.082 5.082l-1.723.934 1.723.933a6.091 6.091 0 005.082 5.082L13.913 26l.934-1.723a6.092 6.092 0 005.082-5.083zm-6.016 2.545a3.478 3.478 0 110-6.956 3.478 3.478 0 010 6.956z"
          fill="#000"
        />
        <path
          d="M13.913 15.652l.753 1.304h1.507l-.753 1.305.753 1.304h-1.506l-.754 1.304-.753-1.304h-1.506l.753-1.304-.753-1.305h1.506l.753-1.304z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192495">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Bonaire(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/BosniaAndHerzegovina.tsx
Tamaño: 1690 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function BosniaAndHerzegovina(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192607)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 0C12.91 0 6.68 3.69 3.13 9.256l27.122 27.92C36.09 33.683 40 27.299 40 20 40 8.954 31.046 0 20 0z"
          fill="#FFDA44"
        />
        <path
          d="M40 20c0-5.19-1.976-9.916-5.217-13.47V33.47A19.927 19.927 0 0040.001 20zM24.983 37.646l2.095-.001.647-1.993.648 1.992h1.051a19.976 19.976 0 001.867-1.136l-27.8-27.8a20.007 20.007 0 00-1.251 2.09l.247.76 2.095-.002-1.694 1.232.648 1.992-1.695-1.23-1.012.736C.29 16.096 0 18.014 0 20c0 11.046 8.954 20 20 20 2.335 0 4.577-.4 6.66-1.137l-1.677-1.217zM4.462 19.131l.646-1.993-1.696-1.23 2.095-.002.647-1.993.648 1.992 2.095-.001-1.694 1.232.649 1.992-1.696-1.23-1.694 1.233zm4.314 4.347l.646-1.993-1.695-1.23 2.095-.001.646-1.993.649 1.992 2.095-.001-1.694 1.232.648 1.992-1.695-1.23-1.695 1.232zm4.315 4.348l.646-1.993-1.696-1.23 2.095-.002.646-1.992.649 1.992 2.095-.002-1.694 1.233.649 1.992-1.696-1.23-1.694 1.232zm6.008 3.116l-1.694 1.232.646-1.993-1.695-1.23 2.095-.002.646-1.993.648 1.992h2.095l-1.694 1.232.649 1.992-1.696-1.23zm2.62 5.58l.647-1.993-1.696-1.23 2.095-.002.646-1.993.649 1.992 2.095-.001-1.694 1.232.648 1.992-1.695-1.23-1.695 1.233z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192607">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function BosniaAndHerzegovina(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Botswana.tsx
Tamaño: 999 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Botswana(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192719)">
        <path
          d="M.944 13.913A19.981 19.981 0 000 20c0 2.122.332 4.167.944 6.087l19.056.87 19.056-.87c.612-1.92.944-3.965.944-6.087 0-2.123-.332-4.168-.944-6.087L20 13.043l-19.056.87z"
          fill="#F0F0F0"
        />
        <path
          d="M40 20c0-1.186-.104-2.349-.302-3.478H.302a20.106 20.106 0 000 6.956h39.396c.198-1.13.302-2.292.302-3.478z"
          fill="#000"
        />
        <path
          d="M20 40c8.924 0 16.481-5.844 19.056-13.913H.946C3.52 34.156 11.077 40 20 40zM20 0C11.079 0 3.52 5.844.946 13.913h38.111C36.481 5.844 28.924 0 20.001 0z"
          fill="#338AF3"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192719">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Botswana(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Brazil.tsx
Tamaño: 944 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Brazil(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192831)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#6DA544" />
        <path d="M20 7.826L36.522 20 20 32.174 3.48 20 20 7.826z" fill="#FFDA44" />
        <path d="M20 26.956a6.956 6.956 0 100-13.912 6.956 6.956 0 000 13.912z" fill="#F0F0F0" />
        <path
          d="M16.52 19.565c-1.209 0-2.376.184-3.475.526a6.956 6.956 0 0012.651 3.9 11.723 11.723 0 00-9.175-4.426zM26.828 21.333a6.956 6.956 0 00-13.22-4.078 14.35 14.35 0 012.914-.299c4.04 0 7.695 1.68 10.306 4.377z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192831">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Brazil(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/BritishColumbia.tsx
Tamaño: 4566 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function BritishColumbia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192943)">
        <path d="M0 20C0 8.954 8.954 0 20 0s20 8.954 20 20H0z" fill="#F0F0F0" />
        <path
          d="M14.783 18.907L13.69 20h1.093v-1.093zM25.217 18.907V20h1.093l-1.093-1.093zM.577 15.217A20.04 20.04 0 000 20h6.31l4.783-4.783H.577zM28.906 15.217L33.69 20h6.31c0-1.648-.2-3.25-.576-4.783H28.906z"
          fill="#0052B4"
        />
        <path
          d="M27.676 15.217h-2.46L30 20h2.46l-4.783-4.783zM14.783 17.677v-2.46L10 20h2.46l2.323-2.323z"
          fill="#D80027"
        />
        <path
          d="M9.37 3.058a20.087 20.087 0 00-2.347 1.724h4.07L9.37 3.058zM32.976 4.782a20.075 20.075 0 00-2.345-1.724l-1.725 1.724h4.07z"
          fill="#0052B4"
        />
        <path
          d="M22.608 12.609h15.98a19.984 19.984 0 00-3.065-5.218H22.608V.17a20.198 20.198 0 00-5.217 0v7.222H4.475A19.982 19.982 0 001.41 12.61h15.98V20h5.218v-7.391z"
          fill="#D80027"
        />
        <path
          d="M14.781 4.782l-3.015-3.015c-.557.252-1.1.53-1.63.83l2.186 2.185h2.46zM25.217 4.783l3.015-3.016a19.922 19.922 0 00-1.762-.697l-1.253 1.253v2.46z"
          fill="#D80027"
        />
        <path d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20h40z" fill="#F0F0F0" />
        <path
          d="M36.666 22.55c-1.667 0-1.667-1.523-3.334-1.523-1.666 0-1.666 1.524-3.333 1.524-1.666 0-1.666-1.524-3.333-1.524-1.667 0-1.667 1.524-3.333 1.524-1.667 0-1.667-1.524-3.334-1.524s-1.667 1.524-3.333 1.524c-1.667 0-1.667-1.524-3.333-1.524-1.667 0-1.667 1.524-3.334 1.524s-1.667-1.524-3.333-1.524c-1.667 0-1.667 1.524-3.333 1.524-1.658 0-1.668-1.507-3.308-1.523.047.914.156 1.813.32 2.69 1.33.196 1.446 1.5 2.988 1.5 1.666 0 1.666-1.524 3.333-1.524 1.666 0 1.666 1.523 3.333 1.523 1.667 0 1.667-1.523 3.334-1.523 1.666 0 1.666 1.523 3.333 1.523 1.667 0 1.667-1.523 3.333-1.523 1.667 0 1.667 1.523 3.334 1.523s1.667-1.523 3.333-1.523c1.667 0 1.667 1.523 3.333 1.523 1.667 0 1.667-1.523 3.334-1.523 1.666 0 1.666 1.523 3.333 1.523 1.542 0 1.658-1.303 2.987-1.498.165-.879.274-1.777.32-2.691-1.64.016-1.65 1.523-3.307 1.523zM33.332 26.244c-1.667 0-1.667 1.524-3.334 1.524-1.666 0-1.666-1.524-3.333-1.524-1.666 0-1.666 1.524-3.333 1.524-1.667 0-1.667-1.524-3.334-1.524-1.666 0-1.666 1.524-3.333 1.524-1.666 0-1.666-1.524-3.333-1.524-1.667 0-1.667 1.524-3.334 1.524-1.666 0-1.666-1.524-3.333-1.524-1.667 0-1.667 1.524-3.333 1.524-1.191 0-1.531-.777-2.236-1.222a19.896 19.896 0 001.815 3.852c.128.024.267.037.42.037 1.667 0 1.667-1.524 3.334-1.524s1.667 1.524 3.333 1.524c1.667 0 1.667-1.524 3.334-1.524s1.667 1.524 3.333 1.524c1.667 0 1.667-1.524 3.333-1.524 1.667 0 1.667 1.524 3.334 1.524s1.667-1.524 3.333-1.524c1.667 0 1.667 1.524 3.333 1.524 1.667 0 1.667-1.524 3.334-1.524 1.666 0 1.666 1.524 3.333 1.524.154 0 .293-.013.42-.037a19.901 19.901 0 001.816-3.852c-.705.444-1.045 1.222-2.236 1.222-1.667 0-1.667-1.524-3.333-1.524z"
          fill="#0052B4"
        />
        <path
          d="M39.988 19.372l.005.166-.005-.166zM.006 19.538l.005-.166-.005.166zM0 20zM0 20c0 .364.01.726.03 1.086 1.636.018 1.647 1.523 3.303 1.523C5 22.609 5 21.085 6.666 21.085c1.667 0 1.667 1.524 3.334 1.524s1.667-1.524 3.334-1.524c1.666 0 1.666 1.524 3.333 1.524 1.666 0 1.666-1.524 3.333-1.524 1.667 0 1.667 1.524 3.333 1.524 1.667 0 1.667-1.524 3.334-1.524 1.666 0 1.666 1.524 3.333 1.524 1.666 0 1.667-1.524 3.333-1.524 1.667 0 1.667 1.524 3.334 1.524 1.656 0 1.667-1.505 3.303-1.523.02-.36.03-.722.03-1.086H0zM39.994 19.539z"
          fill="#F0F0F0"
        />
        <path
          d="M33.333 31.462c-1.666 0-1.666 1.524-3.333 1.524-1.666 0-1.666-1.524-3.333-1.524-1.667 0-1.667 1.524-3.333 1.524-1.667 0-1.667-1.524-3.334-1.524s-1.667 1.524-3.333 1.524c-1.667 0-1.667-1.524-3.333-1.524-1.667 0-1.667 1.524-3.334 1.524s-1.667-1.524-3.333-1.524c-1.151 0-1.508.726-2.167 1.176a20.085 20.085 0 006.42 5.184l9.08-.457 9.082.457a20.087 20.087 0 006.419-5.184c-.66-.45-1.016-1.176-2.168-1.176z"
          fill="#0052B4"
        />
        <path
          d="M31.093 31.939l-6.084 1.163-.77-6.145L20 31.477l-4.237-4.52-.771 6.145-6.084-1.163 2.984 5.425-.975.459A19.913 19.913 0 0020 40c3.271 0 6.358-.785 9.084-2.177l-.974-.458 2.983-5.426z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192943">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function BritishColumbia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/BritishIndianOceanTerritory.tsx
Tamaño: 6123 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function BritishIndianOceanTerritory(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193057)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M36.666 22.393c-1.667 0-1.667-1.523-3.334-1.523-1.666 0-1.666 1.523-3.333 1.523-1.666 0-1.666-1.523-3.333-1.523-1.667 0-1.667 1.523-3.333 1.523-1.667 0-1.667-1.523-3.334-1.523s-1.667 1.523-3.333 1.523c-1.667 0-1.667-1.523-3.333-1.523-1.667 0-1.667 1.523-3.334 1.523S8.332 20.87 6.666 20.87c-1.667 0-1.667 1.523-3.333 1.523-1.658 0-1.668-1.507-3.308-1.523.047.915.156 1.813.32 2.692 1.33.195 1.446 1.498 2.988 1.498 1.666 0 1.666-1.524 3.333-1.524 1.667 0 1.667 1.524 3.333 1.524 1.667 0 1.667-1.524 3.334-1.524S15 25.06 16.666 25.06c1.667 0 1.667-1.524 3.333-1.524 1.667 0 1.667 1.524 3.334 1.524s1.667-1.524 3.333-1.524c1.667 0 1.667 1.524 3.333 1.524 1.667 0 1.667-1.524 3.334-1.524 1.666 0 1.666 1.524 3.333 1.524 1.542 0 1.658-1.303 2.987-1.498.165-.879.274-1.777.32-2.692-1.64.017-1.65 1.523-3.307 1.523zM33.333 26.087c-1.667 0-1.667 1.524-3.333 1.524-1.667 0-1.667-1.524-3.334-1.524-1.666 0-1.666 1.524-3.333 1.524-1.667 0-1.667-1.524-3.333-1.524-1.667 0-1.667 1.524-3.334 1.524-1.666 0-1.666-1.524-3.333-1.524-1.667 0-1.667 1.524-3.333 1.524-1.667 0-1.667-1.524-3.334-1.524C5 26.087 5 27.611 3.333 27.611c-1.228 0-1.552-.826-2.304-1.262a19.9 19.9 0 001.776 3.869c.156.038.33.06.528.06C5 30.277 5 28.753 6.666 28.753c1.667 0 1.667 1.523 3.334 1.523 1.666 0 1.666-1.523 3.333-1.523 1.667 0 1.667 1.523 3.333 1.523 1.667 0 1.667-1.523 3.333-1.523 1.667 0 1.667 1.523 3.334 1.523s1.667-1.523 3.333-1.523c1.667 0 1.667 1.523 3.334 1.523 1.666 0 1.666-1.523 3.333-1.523 1.666 0 1.666 1.523 3.333 1.523.198 0 .372-.021.529-.059a19.893 19.893 0 001.775-3.869c-.752.436-1.076 1.262-2.304 1.262-1.666 0-1.666-1.524-3.333-1.524zM39.533 15.698c-1.218.253-1.373 1.478-2.868 1.478-1.667 0-1.667-1.524-3.333-1.524-1.667 0-1.667 1.524-3.334 1.524-1.666 0-1.666-1.524-3.333-1.524-1.666 0-1.666 1.524-3.333 1.524-1.667 0-1.667-1.524-3.334-1.524-.9 0-1.314.445-1.768.854v2.667c.454-.41.868-.854 1.768-.854 1.667 0 1.667 1.524 3.334 1.524s1.667-1.524 3.333-1.524c1.667 0 1.667 1.524 3.333 1.524 1.667 0 1.667-1.524 3.334-1.524 1.666 0 1.666 1.524 3.333 1.524 1.542 0 1.658-1.303 2.987-1.499.085 0 .18 0 .278-.002-.074-.9-.208-1.782-.397-2.643zM38.072 11.428c-.345.29-.744.53-1.407.53-1.667 0-1.667-1.523-3.333-1.523-1.667 0-1.667 1.524-3.334 1.524-1.666 0-1.666-1.524-3.333-1.524-1.666 0-1.666 1.524-3.333 1.524-1.667 0-1.667-1.524-3.334-1.524-.9 0-1.314.445-1.768.854v2.666c.454-.409.868-.853 1.768-.853 1.667 0 1.667 1.523 3.334 1.523 1.666 0 1.666-1.523 3.333-1.523 1.667 0 1.667 1.523 3.333 1.523 1.667 0 1.667-1.523 3.334-1.523 1.666 0 1.666 1.523 3.333 1.523 1.182 0 1.527-.766 2.222-1.211a19.9 19.9 0 00-.815-1.986zM33.474 5.221a2.626 2.626 0 00-.142-.004c-1.667 0-1.667 1.524-3.334 1.524-1.666 0-1.666-1.524-3.333-1.524C25 5.217 25 6.741 23.332 6.741c-1.667 0-1.667-1.524-3.334-1.524-.9 0-1.314.445-1.768.854v2.667c.454-.409.868-.854 1.768-.854 1.667 0 1.667 1.524 3.334 1.524s1.667-1.524 3.333-1.524c1.667 0 1.667 1.524 3.333 1.524 1.667 0 1.667-1.524 3.334-1.524 1.666 0 1.666 1.524 3.333 1.524.103 0 .199-.006.29-.017a20.096 20.096 0 00-3.48-4.17zM25.111.66c-.457.412-.87.864-1.779.864C21.666 1.524 21.666 0 20 0c-.862 0-1.278.408-1.71.801v2.667c.431-.393.848-.801 1.71-.801 1.667 0 1.667 1.524 3.334 1.524 1.666 0 1.666-1.524 3.333-1.524 1.666 0 1.666 1.524 3.333 1.524.7 0 1.105-.269 1.464-.58A19.904 19.904 0 0025.11.66zM23.332 38.046c-1.667 0-1.667-1.524-3.333-1.524-1.667 0-1.667 1.524-3.334 1.524-1.666 0-1.666-1.524-3.333-1.524-1.276 0-1.576.893-2.395 1.312a19.873 19.873 0 007.415 2.098c.41-.375.827-.744 1.647-.744.82 0 1.236.37 1.646.744a19.875 19.875 0 007.415-2.098c-.819-.419-1.118-1.312-2.394-1.312-1.667 0-1.667 1.524-3.334 1.524zM30 32.828c-1.668 0-1.668-1.524-3.334-1.524-1.667 0-1.667 1.524-3.333 1.524-1.667 0-1.667-1.524-3.334-1.524s-1.667 1.524-3.333 1.524c-1.667 0-1.667-1.524-3.333-1.524-1.667 0-1.667 1.524-3.334 1.524s-1.667-1.524-3.333-1.524c-1.199 0-1.536.789-2.25 1.231.448.556.924 1.089 1.428 1.593.225-.096.49-.157.821-.157 1.667 0 1.667 1.524 3.334 1.524s1.667-1.524 3.334-1.524c1.666 0 1.666 1.524 3.333 1.524 1.666 0 1.666-1.524 3.333-1.524 1.667 0 1.667 1.524 3.334 1.524 1.666 0 1.666-1.524 3.333-1.524 1.666 0 1.666 1.524 3.333 1.524 1.667 0 1.667-1.524 3.333-1.524.332 0 .597.061.822.158.504-.505.98-1.038 1.428-1.594-.714-.442-1.05-1.23-2.25-1.23-1.666 0-1.666 1.523-3.333 1.523z"
          fill="#0052B4"
        />
        <path d="M19.947 20h.054v-.053l-.054.053z" fill="#F0F0F0" />
        <path
          d="M20 10.435v5.876l-6.957-6.746 6.957.87zM10.434 20h5.876l-5.876-7.826-.87 6.087.87 1.739z"
          fill="#0052B4"
        />
        <path
          d="M20 10.435V0h-.003C8.953.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.053V16.31l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M10.12 2.609a20.095 20.095 0 00-7.51 7.51V20h5.217V7.826H20V2.61h-9.882z" fill="#D80027" />
        <path d="M20 17.54l-7.105-7.105h-2.46L20.002 20v-2.46z" fill="#D80027" />
        <path d="M26.088 10.435h7.826l-3.913 3.913-3.913-3.913z" fill="#6DA544" />
        <path d="M29.13 13.478h1.74v4.783h-1.74v-4.783zM29.13 26.087h1.74v4.782h-1.74v-4.782z" fill="#A2001D" />
        <path
          d="M35.218 23.478a2.609 2.609 0 00-4.348-1.944V20h.87v-1.74h-.87v-.869h-1.739v.87h-.87V20h.87v1.534a2.609 2.609 0 00-3.478 3.888v1.535h8.695v-1.535c.534-.477.87-1.171.87-1.944z"
          fill="#FFDA44"
        />
        <path
          d="M32.608 22.609a.857.857 0 00-.579.221l-1.16 1.038H29.13l-1.16-1.038a.87.87 0 00-1.158 1.296l.58.519v.572h5.216v-.572l.58-.518a.87.87 0 00-.58-1.518z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193057">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function BritishIndianOceanTerritory(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/BritishVirginIslands.tsx
Tamaño: 1645 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function BritishVirginIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193169)">
        <path
          d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20C0 20.005 20 .002 20 0c11.046 0 20 8.954 20 20z"
          fill="#0052B4"
        />
        <path
          d="M19.947 20h.054v-.053l-.054.053zM20 10.435V0h-.003C8.952.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.053V16.31l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M10.12 2.609a20.095 20.095 0 00-7.51 7.51V20h5.217V7.826H20V2.61h-9.882z" fill="#D80027" />
        <path d="M28.695 20l-5.406 5.406a6.085 6.085 0 0010.811 0L28.695 20z" fill="#FFDA44" />
        <path d="M20 17.54l-7.105-7.105h-2.46L20.002 20v-2.46z" fill="#D80027" />
        <path
          d="M22.61 10.435V20c0 4.66 6.086 6.087 6.086 6.087s6.087-1.428 6.087-6.087v-9.565H22.61z"
          fill="#6DA544"
        />
        <path d="M27.39 14.783H30v6.956h-2.61v-6.956z" fill="#F0F0F0" />
        <path d="M28.695 16.087a1.304 1.304 0 100-2.609 1.304 1.304 0 000 2.609z" fill="#A2001D" />
        <path
          d="M24.348 12.174h1.739v1.739h-1.74v-1.74zM24.348 16.087h1.739v1.74h-1.74v-1.74zM24.348 20h1.739v1.74h-1.74V20zM31.305 12.174h1.739v1.739h-1.74v-1.74zM31.305 16.087h1.739v1.74h-1.74v-1.74zM31.305 20h1.739v1.74h-1.74V20z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193169">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function BritishVirginIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Brunei.tsx
Tamaño: 1642 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Brunei(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193281)">
        <path
          d="M20.001 39.997c11.044 0 19.997-8.953 19.997-19.997S31.045.003 20.001.003.004 8.956.004 20 8.957 39.997 20 39.997z"
          fill="#F0F0F0"
        />
        <path
          d="M2.682 10.002A20.01 20.01 0 00.67 14.863l33.443 19.309a20.016 20.016 0 003.205-4.173L2.681 10.002z"
          fill="#000"
        />
        <path
          d="M30 2.682C22-1.938 12.133-.398 5.89 5.828L39.33 25.136c2.27-8.52-1.33-17.834-9.33-22.454zM10.002 37.318c8.002 4.62 17.868 3.08 24.112-3.146L.671 14.864c-2.27 8.52 1.33 17.834 9.332 22.454z"
          fill="#FFDA44"
        />
        <path
          d="M25.652 17.826a5.651 5.651 0 11-10.624-2.688 6.956 6.956 0 109.944 0c.434.8.68 1.715.68 2.688z"
          fill="#D80027"
        />
        <path d="M18.697 11.306h2.609v13.041h-2.609V11.306z" fill="#D80027" />
        <path
          d="M24.349 13.914h-8.695c0 .6.523 1.087 1.123 1.087h-.036c0 .6.487 1.087 1.087 1.087 0 .6.487 1.086 1.087 1.086h2.173c.6 0 1.087-.486 1.087-1.086.6 0 1.087-.487 1.087-1.087h-.036c.6 0 1.123-.487 1.123-1.087zM13.914 25.217h12.172v2.608H13.914v-2.608z"
          fill="#D80027"
        />
        <path d="M22.61 26.086h5.216v2.609h-5.217v-2.609zM12.176 26.086h5.216v2.609h-5.216v-2.609z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193281">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Brunei(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Bulgaria.tsx
Tamaño: 827 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Bulgaria(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193394)">
        <path
          d="M40 20c0-2.447-.44-4.79-1.244-6.957L20 12.173l-18.756.87A19.957 19.957 0 000 20c0 2.446.44 4.79 1.244 6.956l18.756.87 18.756-.87A19.956 19.956 0 0040 20z"
          fill="#496E2D"
        />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#D80027" />
        <path d="M1.244 13.043h37.512C35.93 5.428 28.6 0 20 0 11.4 0 4.07 5.428 1.244 13.043z" fill="#F0F0F0" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193394">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Bulgaria(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/BurkinaFaso.tsx
Tamaño: 755 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function BurkinaFaso(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193507)">
        <path d="M0 20C0 8.954 8.954 0 20 0s20 8.954 20 20c-.87 0-20 2.609-20 2.609L0 20z" fill="#D80027" />
        <path d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20" fill="#6DA544" />
        <path
          d="M20 13.043l1.51 4.65h4.89l-3.955 2.874 1.51 4.65L20 22.344l-3.956 2.873 1.511-4.65-3.955-2.874h4.889l1.51-4.65z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193507">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function BurkinaFaso(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Burundi.tsx
Tamaño: 1418 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Burundi(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192503)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M32.178 4.133c-7.16-5.51-17.195-5.51-24.356 0L20 16.31 32.178 4.133zM20 23.69L7.822 35.866c7.16 5.51 17.196 5.51 24.356 0L20 23.689z"
          fill="#D80027"
        />
        <path
          d="M16.31 20L4.132 7.822c-5.51 7.16-5.51 17.195 0 24.356L16.31 20zM23.69 20l12.177 12.178c5.51-7.16 5.51-17.195 0-24.356L23.69 20z"
          fill="#6DA544"
        />
        <path d="M20 28.696a8.696 8.696 0 100-17.391 8.696 8.696 0 000 17.39z" fill="#F0F0F0" />
        <path
          d="M20 13.913l.752 1.304h1.507l-.753 1.305.753 1.304h-1.507L20 19.131l-.753-1.305H17.74l.753-1.304-.753-1.305h1.506L20 13.913zM16.171 20l.753 1.304h1.506l-.753 1.305.753 1.304h-1.506l-.753 1.304-.753-1.304h-1.506l.753-1.304-.753-1.305h1.506L16.171 20zM23.828 20l.753 1.304h1.506l-.753 1.305.753 1.304H24.58l-.753 1.304-.753-1.304h-1.507l.753-1.304-.753-1.305h1.506L23.829 20z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192503">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Burundi(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Cambodia.tsx
Tamaño: 1058 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Cambodia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192615)">
        <path
          d="M0 20c0 3.465.881 6.724 2.432 9.565L20 31.305l17.568-1.74A19.911 19.911 0 0040 20a19.91 19.91 0 00-2.432-9.565L20 8.695l-17.568 1.74A19.91 19.91 0 000 20z"
          fill="#D80027"
        />
        <path
          d="M2.432 10.435h35.136C34.176 4.218 27.581 0 20 0 12.419 0 5.824 4.218 2.432 10.435zM20 40c7.58 0 14.176-4.218 17.568-10.435H2.432C5.824 35.782 12.419 40 20 40z"
          fill="#0052B4"
        />
        <path
          d="M26.957 23.913v-2.609h-1.74v-3.478l-1.738-1.74-1.74 1.74v-3.478L20 12.608l-1.739 1.74v3.478l-1.739-1.74-1.74 1.74v3.478h-1.738v2.609h-1.74v2.609h17.392v-2.609h-1.74z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192615">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Cambodia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Cameroon.tsx
Tamaño: 1031 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Cameroon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192727)">
        <path
          d="M28.695 1.985A19.92 19.92 0 0019.999 0a19.92 19.92 0 00-8.695 1.985L9.564 20l1.74 18.016A19.92 19.92 0 0019.999 40a19.92 19.92 0 008.696-1.984L30.434 20l-1.74-18.015z"
          fill="#D80027"
        />
        <path
          d="M20 13.043l1.727 5.314h5.588l-4.521 3.285 1.727 5.314L20 23.672l-4.52 3.284 1.726-5.314-4.52-3.285h5.587L20 13.044z"
          fill="#FFDA44"
        />
        <path d="M11.304 1.985C4.614 5.22 0 12.071 0 20c0 7.93 4.615 14.78 11.304 18.015V1.985z" fill="#496E2D" />
        <path d="M28.695 1.985v36.03C35.385 34.78 40 27.929 40 20c0-7.93-4.615-14.78-11.305-18.015z" fill="#FFDA44" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192727">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Cameroon(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Canada.tsx
Tamaño: 899 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Canada(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192839)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M40 20c0-7.93-4.615-14.78-11.305-18.015v36.03C35.385 34.782 40 27.93 40 20zM0 20c0 7.93 4.614 14.78 11.304 18.016V1.985C4.614 5.22 0 12.07 0 20zM23.478 22.609l3.478-1.74-1.74-.869v-1.74L21.74 20l1.739-3.478h-1.74L20 13.913l-1.74 2.609h-1.739L18.261 20l-3.479-1.74V20l-1.739.87 3.478 1.739-.87 1.739h3.479v2.608h1.739v-2.608h3.478l-.87-1.74z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192839">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Canada(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/CanaryIslands.tsx
Tamaño: 843 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function CanaryIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192951)">
        <path
          d="M20 0c-2.447 0-4.79.44-6.957 1.244L12.173 20l.87 18.756A19.955 19.955 0 0020 40c2.446 0 4.79-.44 6.956-1.244L27.826 20l-.87-18.756A19.958 19.958 0 0020 0z"
          fill="#338AF3"
        />
        <path d="M40 20c0-8.6-5.427-15.93-13.043-18.756v37.512C34.573 35.93 40.001 28.599 40.001 20z" fill="#FFDA44" />
        <path d="M13.043 38.756V1.244C5.428 4.07 0 11.4 0 20c0 8.6 5.428 15.93 13.043 18.756z" fill="#F0F0F0" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192951">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function CanaryIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/CapeVerde.tsx
Tamaño: 1974 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function CapeVerde(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193065)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 40c6.063 0 11.494-2.697 15.162-6.956H4.84C8.508 37.303 13.94 40 20 40zM40 20C40 8.954 31.046 0 20 0S0 8.954 0 20c0 1.805.24 3.554.689 5.217h38.622C39.76 23.554 40 21.805 40 20z"
          fill="#0052B4"
        />
        <path
          d="M1.59 27.826c.385.906.836 1.777 1.346 2.609h34.129c.51-.832.96-1.703 1.346-2.609H1.59z"
          fill="#D80027"
        />
        <path
          d="M14.297 21.304l.324.997h1.048l-.848.616.324.996-.848-.616-.848.616.324-.996-.847-.616h1.047l.324-.997zM14.297 34.348l.324.996h1.048l-.848.616.324.996-.848-.615-.848.615.324-.996-.847-.616h1.047l.324-.996zM8.225 29.937l.324.996h1.047l-.847.616.324.996-.848-.616-.848.616.324-.996-.847-.616H7.9l.324-.996zM10.543 22.609l.324.996h1.048l-.848.616.324.996-.848-.615-.847.615.324-.996-.848-.616h1.048l.323-.996zM6.854 26.712H7.9l.324-.997.324.997h1.047l-.847.616.324.996-.848-.616-.848.616.324-.996-.847-.616zM9.696 35.462l.324-.997-.848-.615h1.048l.323-.997.324.997h1.048l-.848.615.324.997-.848-.616-.847.616zM20.366 29.937l-.324.996h-1.048l.848.616-.324.996.848-.616.847.616-.324-.996.848-.616h-1.048l-.323-.996zM18.047 22.609l-.323.996h-1.048l.847.616-.323.996.847-.615.848.615-.324-.996.848-.616H18.37l-.324-.996zM21.737 26.712H20.69l-.324-.997-.324.997h-1.048l.848.616-.324.996.848-.616.847.616-.323-.996.847-.616zM18.895 35.462l-.324-.997.848-.615H18.37l-.324-.997-.323.997h-1.048l.847.615-.323.997.847-.616.848.616z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193065">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function CapeVerde(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/CaribbeanNetherlands.tsx
Tamaño: 2455 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function CaribbeanNetherlands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
      <g clipPath="url(#clip0_2435_78628)">
        <mask
          id="mask0_2435_78628"
          style={{ maskType: 'alpha' }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="40"
          height="40"
        >
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#F0F0F0"
          />
        </mask>
        <g mask="url(#mask0_2435_78628)">
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#F0F0F0"
          />
          <rect
            x="5.58594"
            y="34.0461"
            width="40.2"
            height="25.6"
            transform="rotate(-34 5.58594 34.0461)"
            fill="#0052B4"
          />
          <rect
            x="-22.1992"
            y="-1.32031"
            width="40.2"
            height="25.6"
            transform="rotate(-34 -22.1992 -1.32031)"
            fill="#FFDA44"
          />
          <path
            d="M13.2012 12.2008L14.7012 14.6027L17.5313 14.7008L16.2012 17.2008L17.5313 19.7008L14.7012 19.7989L13.2012 22.2008L11.7012 19.7989L8.87104 19.7008L10.2012 17.2008L8.87104 14.7008L11.7012 14.6027L13.2012 12.2008Z"
            fill="#D80027"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M13.2012 7.20156L14.0327 8.64178C18.1175 9.03443 21.3674 12.2845 21.7598 16.3694L23.2012 17.2016L21.7599 18.0337C21.3679 22.1191 18.1175 25.3697 14.0322 25.7622L13.2012 27.2016L12.3703 25.7625C8.28284 25.3714 5.03046 22.1192 4.63913 18.0318L3.20117 17.2016L4.63921 16.3713C5.03089 12.2844 8.28286 9.03274 12.3698 8.64147L13.2012 7.20156ZM13.1996 24.602C17.2865 24.602 20.5996 21.2889 20.5996 17.202C20.5996 13.115 17.2865 9.80195 13.1996 9.80195C9.1127 9.80195 5.79961 13.115 5.79961 17.202C5.79961 21.2889 9.1127 24.602 13.1996 24.602Z"
            fill="black"
          />
        </g>
      </g>
      <defs>
        <clipPath id="clip0_2435_78628">
          <rect width="40" height="40" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function CaribbeanNetherlands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Catalan.tsx
Tamaño: 1324 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Catalan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
      <g clipPath="url(#clip0_2435_78752)">
        <mask
          id="mask0_2435_78752"
          style={{ maskType: 'alpha' }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="40"
          height="40"
        >
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#FFDA44"
          />
        </mask>
        <g mask="url(#mask0_2435_78752)">
          <path d="M50.25 0H-9.75V40H50.25V0Z" fill="#FFDA44" />
          <path
            d="M-9.75 6.66667H50.25H-9.75ZM50.25 15.5556H-9.75H50.25ZM-9.75 24.4445H50.25H-9.75ZM50.25 33.3333H-9.75H50.25Z"
            fill="black"
          />
          <path
            d="M-9.75 6.66667H50.25M50.25 15.5556H-9.75M-9.75 24.4444H50.25M50.25 33.3333H-9.75"
            stroke="#D80027"
            strokeWidth="4.44445"
          />
        </g>
      </g>
      <defs>
        <clipPath id="clip0_2435_78752">
          <rect width="40" height="40" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Catalan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/CaymanIslands.tsx
Tamaño: 2042 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function CaymanIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193177)">
        <path
          d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20C0 20.005 20 .002 20 0c11.046 0 20 8.954 20 20z"
          fill="#0052B4"
        />
        <path
          d="M19.947 20h.054v-.053l-.054.053zM20 10.435V0h-.003C8.952.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.053V16.31l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M28.695 14.783a3.478 3.478 0 100-6.957 3.478 3.478 0 000 6.957z" fill="#6DA544" />
        <path d="M10.12 2.609a20.095 20.095 0 00-7.51 7.51V20h5.217V7.826H20V2.61h-9.882z" fill="#D80027" />
        <path
          d="M20 17.54l-7.105-7.105h-2.46L20.002 20v-2.46zM22.61 10.435h12.173v5.217H22.61v-5.217z"
          fill="#D80027"
        />
        <path
          d="M22.61 23.478v3.479h1.83a6.062 6.062 0 004.256 1.739c1.658 0 3.16-.664 4.257-1.74h1.831v-3.478H22.608z"
          fill="#FFDA44"
        />
        <path
          d="M22.61 14.783V20c0 4.66 6.086 6.087 6.086 6.087s6.087-1.428 6.087-6.087v-5.217H22.61z"
          fill="#338AF3"
        />
        <path
          d="M28.696 17.57c-1.522 0-1.522 1.39-3.043 1.39-1.522 0-1.522-1.39-3.044-1.39v2.434c1.522 0 1.522 1.392 3.044 1.392 1.521 0 1.521-1.392 3.043-1.392 1.522 0 1.522 1.392 3.044 1.392 1.521 0 1.521-1.392 3.043-1.392V17.57c-1.522 0-1.522 1.39-3.043 1.39-1.522 0-1.522-1.39-3.044-1.39zM28.696 12.696c-1.522 0-1.522 1.39-3.043 1.39-1.522 0-1.522-1.39-3.044-1.39v2.434c1.522 0 1.522 1.392 3.044 1.392 1.521 0 1.521-1.392 3.043-1.392 1.522 0 1.522 1.392 3.044 1.392 1.521 0 1.521-1.392 3.043-1.392v-2.434c-1.522 0-1.522 1.39-3.043 1.39-1.522 0-1.522-1.39-3.044-1.39z"
          fill="#F3F3F3"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193177">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function CaymanIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/CentralAfricanRepublic.tsx
Tamaño: 1553 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function CentralAfricanRepublic(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193289)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M37.568 10.435A20.045 20.045 0 0025.218.688l-.87 9.747h13.22zM2.432 10.435h13.22l-.87-9.747a20.046 20.046 0 00-12.35 9.747z"
          fill="#0052B4"
        />
        <path
          d="M24.348 20v9.565h13.22A19.91 19.91 0 0040 20H24.348zM15.652 20H0c0 3.465.881 6.724 2.432 9.565h13.22V20z"
          fill="#6DA544"
        />
        <path
          d="M2.432 29.565a20.046 20.046 0 0012.35 9.747l.87-8.524-13.22-1.223zM25.217 39.312a20.046 20.046 0 0012.351-9.747l-13.22 1.223.87 8.524z"
          fill="#FFDA44"
        />
        <path d="M24.348 30.788l13.22-1.223h-13.22v1.223zM15.652 29.565H2.432l13.22 1.223v-1.223z" fill="#FFDA44" />
        <path
          d="M20 0c-1.805 0-3.553.24-5.217.689v38.622c1.664.448 3.412.689 5.218.689 1.805 0 3.553-.24 5.217-.689V.689A20.02 20.02 0 0020.001 0z"
          fill="#D80027"
        />
        <path
          d="M10.758 4.348l.54 1.66h1.746l-1.412 1.027.54 1.66-1.414-1.026-1.412 1.027.54-1.661-1.413-1.027h1.746l.54-1.66z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193289">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function CentralAfricanRepublic(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Ceuta.tsx
Tamaño: 2041 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Ceuta(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193402)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 0A19.938 19.938 0 005.857 5.858L20 20V0zM0 20a19.938 19.938 0 005.858 14.142L20 20H0zM20 40a19.938 19.938 0 0014.142-5.858L20 20v20zM40 20a19.938 19.938 0 00-5.858-14.142L20 20h20z"
          fill="#000"
        />
        <path
          d="M13.043 13.913l6.957.87 6.956-.87V9.74l-2.783 1.391L20 6.957l-4.175 4.173-2.782-1.39v4.173z"
          fill="#FFDA44"
        />
        <path
          d="M20 30.435a6.964 6.964 0 01-6.957-6.957v-6.956l2.609-2.609h8.695l2.609 2.609v6.956A6.964 6.964 0 0120 30.435z"
          fill="#D80027"
        />
        <path
          d="M20 27.826a4.353 4.353 0 01-4.348-4.348v-6.956h8.696v6.956A4.353 4.353 0 0120 27.826z"
          fill="#F0F0F0"
        />
        <path
          d="M13.043 13.913h2.609v2.609h-2.609v-2.609zM24.348 13.913h2.608v2.609h-2.608v-2.609zM24.348 19.565h2.608v2.609h-2.608v-2.609zM13.043 19.565h2.609v2.609h-2.609v-2.609zM20 27.826c-.455 0-.893-.07-1.305-.2v2.684a6.949 6.949 0 002.61 0v-2.684c-.413.13-.85.2-1.305.2zM15.709 24.184l-2.082 2.082a6.98 6.98 0 001.509 2.18l1.844-1.844a4.34 4.34 0 01-1.271-2.418zM26.37 26.266l-2.082-2.082a4.341 4.341 0 01-1.27 2.419l1.843 1.844a6.986 6.986 0 001.51-2.18z"
          fill="#FFDA44"
        />
        <path
          d="M19.13 17.971v1.45a.87.87 0 001.74 0v-1.45h-1.74zM19.13 23.768v1.45a.87.87 0 001.74 0v-1.45h-1.74zM21.738 20.87v1.449a.87.87 0 001.74 0v-1.45h-1.74zM19.13 20.87v1.449a.87.87 0 001.74 0v-1.45h-1.74zM16.521 20.87v1.449a.87.87 0 001.74 0v-1.45h-1.74z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193402">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Ceuta(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Chad.tsx
Tamaño: 834 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Chad(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193515)">
        <path
          d="M20 0c-2.447 0-4.79.44-6.957 1.244L12.173 20l.87 18.756A19.955 19.955 0 0020 40c2.446 0 4.79-.44 6.956-1.244L27.826 20l-.87-18.756A19.958 19.958 0 0020 0z"
          fill="#FFDA44"
        />
        <path d="M40 20c0-8.6-5.427-15.93-13.043-18.756v37.512C34.573 35.93 40.001 28.599 40.001 20z" fill="#D80027" />
        <path d="M13.043 38.756V1.244C5.428 4.07 0 11.4 0 20c0 8.6 5.428 15.93 13.043 18.756z" fill="#0052B4" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193515">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Chad(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Chile.tsx
Tamaño: 839 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Chile(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192511)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20s20 0 20 0h20z" fill="#D80027" />
        <path d="M0 20C0 8.954 8.954 0 20 0v20H0z" fill="#0052B4" />
        <path
          d="M11.906 6.956l1.295 3.986h4.19l-3.39 2.463 1.295 3.986-3.39-2.463-3.39 2.463 1.294-3.985-3.39-2.464h4.19l1.296-3.986z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192511">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Chile(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/China.tsx
Tamaño: 1138 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function China(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192623)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#D80027" />
        <path
          d="M10.945 12.172l1.727 5.312h5.586l-4.516 3.29 1.727 5.312-4.524-3.281-4.523 3.28 1.734-5.312-4.523-3.289h5.586l1.726-5.312zM23.71 30.977l-1.32-1.625-1.953.757 1.133-1.757-1.32-1.633 2.023.539 1.141-1.758.11 2.094 2.03.539-1.96.75.117 2.094zM26.336 26.21l.625-2L25.25 23l2.094-.031.617-2 .68 1.984 2.093-.023-1.68 1.25.673 1.984-1.711-1.21-1.68 1.257zM29.875 14.68l-.922 1.883 1.5 1.46-2.07-.296-.922 1.875-.36-2.063-2.078-.297 1.86-.976-.36-2.07 1.5 1.46 1.852-.976zM23.766 8.977l-.157 2.085 1.946.79-2.04.5-.148 2.093-1.101-1.78-2.04.5 1.352-1.602-1.11-1.774 1.946.79 1.352-1.602z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192623">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function China(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/ChristmasIsland.tsx
Tamaño: 3417 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function ChristmasIsland(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
      <g clipPath="url(#clip0_2435_78574)">
        <mask
          id="mask0_2435_78574"
          style={{ maskType: 'alpha' }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="40"
          height="40"
        >
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#496E2D"
          />
        </mask>
        <g mask="url(#mask0_2435_78574)">
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#0052B4"
          />
          <path
            d="M6.71732 18.3654L7.11484 19.4486L8.20962 19.084L7.61054 20.0702L8.57819 20.6988L7.43363 20.8453L7.54549 21.9938L6.71732 21.1903L5.88915 21.9938L6.00102 20.8453L4.85645 20.6988L5.8241 20.0702L5.22502 19.084L6.3198 19.4486L6.71732 18.3654Z"
            fill="#F0F0F0"
          />
          <path
            d="M2.69364 23.2144L3.08661 24.0664L4.01832 24.1769L3.32948 24.8139L3.51234 25.7341L2.69364 25.2759L1.87494 25.7341L2.05779 24.8139L1.36895 24.1769L2.30066 24.0664L2.69364 23.2144Z"
            fill="#F0F0F0"
          />
          <path
            d="M0.908727 13L1.30625 14.0833L2.40103 13.7187L1.80194 14.7049L2.7696 15.3335L1.62503 15.48L1.73689 16.6284L0.908727 15.8249L0.0805612 16.6284L0.192421 15.48L-0.952144 15.3335L0.0155087 14.7049L-0.583576 13.7187L0.511207 14.0833L0.908727 13Z"
            fill="#F0F0F0"
          />
          <path d="M40 0H-12L52 40L40 0Z" fill="#6DA544" />
          <path
            d="M31 19C35.6246 18.7188 38.0012 17.8176 42.0427 15.2963M48 13.5185L42.0427 15.2963M42.0427 15.2963C42.8177 14.0617 44.3094 11.5037 44.0769 11.1481C43.8444 10.7926 42.6239 8.23457 42.0427 7M42.0427 15.2963L37.3932 11.1481L42.0427 13V15.2963Z"
            stroke="#FFDA44"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <circle cx="20" cy="20" r="7.5" fill="#FFDA44" />
          <path
            d="M22.1956 16.5573C21.1687 18.0204 18.4467 18.1645 18.4467 18.1645C18.4467 18.1645 17.7869 18.2393 17.3752 18.1645C16.3461 17.9773 15.7687 16.0211 15.2324 16.5573C14.7645 17.0251 15.8349 17.5063 15.7681 18.1645C15.692 18.9149 14.8521 19.0335 14.6967 19.7716C14.6105 20.181 13.9083 20.5078 14.1594 20.8425C14.5563 21.3718 16.1769 20.3068 16.8384 20.3068C18.4456 20.3068 18.9813 21.3787 20.5895 21.3787C21.1242 21.3787 20.5895 24.593 20.5895 24.593L22.1967 25.1287C22.1967 25.1287 22.6169 23.8407 22.7324 22.9859C22.8725 21.9493 22.7324 20.8425 23.267 20.3068C23.5975 19.9757 23.4111 20.0257 23.8038 19.7716C24.549 19.2894 25.8079 18.9584 25.411 18.1645C25.2786 17.8998 24.9688 17.9094 24.8752 17.6287C24.8091 17.4303 24.8752 17.3022 24.8752 17.093C24.8752 16.4654 25.319 15.9297 24.8752 15.4859C24.4314 15.0421 23.7702 15.1093 23.2681 15.4859C22.8939 15.7666 22.4643 16.1744 22.1956 16.5573Z"
            fill="#6DA544"
          />
        </g>
      </g>
      <defs>
        <clipPath id="clip0_2435_78574">
          <rect width="40" height="40" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function ChristmasIsland(props: React.SVGProps<SVGSVGElement>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/CocosIsland.tsx
Tamaño: 1608 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function CocosIsland(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192847)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#6DA544" />
        <path
          d="M30.702 28.696l.55 1.147 1.239-.286-.555 1.144.996.79-1.24.28.003 1.272-.993-.795-.992.795.003-1.272-1.24-.28.996-.79-.555-1.144 1.24.286.548-1.147zM25.597 16.522l.549 1.147 1.24-.286-.556 1.145.997.79-1.241.28.003 1.271-.992-.795-.992.795.003-1.271-1.24-.28.996-.79-.555-1.145 1.24.286.548-1.147zM30.702 9.565l.55 1.148 1.238-.287-.554 1.145.996.79-1.24.28.003 1.272-.993-.796-.992.796.003-1.272-1.24-.28.996-.79-.555-1.145 1.24.287.548-1.148zM35.161 14.783l.55 1.147 1.239-.286-.555 1.144.996.79-1.24.28.003 1.272-.993-.796-.992.796.003-1.272-1.24-.28.996-.79-.555-1.144 1.24.286.548-1.147zM31.973 20.87l.432 1.328h1.397l-1.13.821.431 1.329-1.13-.821-1.13.82.432-1.328-1.13-.82h1.396l.432-1.33z"
          fill="#FFDA44"
        />
        <path
          d="M22.175 25.652a5.652 5.652 0 112.69-10.625 6.956 6.956 0 100 9.945c-.8.434-1.716.68-2.69.68zM12.578 7.826a3.476 3.476 0 00-6.023 0h6.023zM12.59 7.846L9.566 10.87 6.543 7.846a3.478 3.478 0 106.047 0z"
          fill="#FFDA44"
        />
        <path d="M8.695 10v2.934a3.486 3.486 0 001.74 0V10h-1.74z" fill="#A2001D" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192847">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function CocosIsland(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Colombia.tsx
Tamaño: 741 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Colombia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192959)">
        <path d="M0 20C0 8.954 8.954 0 20 0s20 8.954 20 20l-20 1.74L0 20z" fill="#FFDA44" />
        <path
          d="M2.676 30C6.134 35.978 12.596 40 20 40c7.402 0 13.865-4.022 17.323-10L20 28.696 2.675 30z"
          fill="#D80027"
        />
        <path d="M37.324 30A19.907 19.907 0 0040 20H0c0 3.643.975 7.058 2.676 10h34.648z" fill="#0052B4" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192959">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Colombia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Comoros.tsx
Tamaño: 1790 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Comoros(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193073)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M40 19.942H18.32c-4.305 4.305-6.908 7.628-9.566 10.286l11.304 1.018L37.6 29.507A19.91 19.91 0 0040 20v-.058z"
          fill="#D80027"
        />
        <path
          d="M8.755 10.377h28.782C34.135 4.192 27.558 0 20 0A19.934 19.934 0 005.889 5.83l2.866 4.547z"
          fill="#FFDA44"
        />
        <path
          d="M9.624 29.507c-1.798 1.798-2.493 3.305-3.794 4.605A19.936 19.936 0 0020 40c7.605 0 14.218-4.244 17.6-10.493H9.624z"
          fill="#0052B4"
        />
        <path d="M5.858 5.8c-7.81 7.81-7.81 20.474 0 28.284L20 19.942 5.858 5.8z" fill="#6DA544" />
        <path
          d="M5.275 19.942a6.088 6.088 0 014.782-5.945 6.087 6.087 0 100 11.89 6.088 6.088 0 01-4.782-5.945z"
          fill="#F0F0F0"
        />
        <path
          d="M9.99 14.725l.325.996h1.047l-.848.616.324.996-.847-.615-.848.615.324-.996-.848-.616h1.048l.324-.996zM9.99 17.333l.325.997h1.047l-.848.616.324.996-.847-.616-.848.616.324-.996-.848-.616h1.048l.324-.997zM9.99 19.942l.325.997h1.047l-.848.615.324.997-.847-.616-.848.616.324-.997-.848-.615h1.048l.324-.997z"
          fill="#F0F0F0"
        />
        <path
          d="M9.99 22.55l.325.997h1.047l-.848.616.324.997-.847-.616-.848.616.324-.997-.848-.616h1.048l.324-.996z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193073">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Comoros(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/CookIslands.tsx
Tamaño: 1877 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function CookIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193185)">
        <path
          d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20C0 20.005 20 .002 20 0c11.046 0 20 8.954 20 20z"
          fill="#0052B4"
        />
        <path
          d="M19.947 20h.054v-.053l-.054.053zM20 10.435V0h-.003C8.952.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.053V16.31l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M10.12 2.609a20.095 20.095 0 00-7.51 7.51V20h5.217V7.826H20V2.61h-9.882z" fill="#D80027" />
        <path d="M20 17.54l-7.105-7.105h-2.46L20.002 20v-2.46z" fill="#D80027" />
        <path
          d="M26.956 20l.37 1.139h1.197l-.968.704.37 1.138-.97-.704-.968.704.37-1.139-.968-.703h1.197l.37-1.139zM22.038 22.038l1.066.543.847-.847-.187 1.183 1.067.544-1.183.187-.187 1.183-.544-1.067-1.183.187.847-.847-.543-1.066zM20 26.956l1.139-.37V25.39l.704.969 1.138-.37-.704.968.704.97-1.139-.37-.703.968v-1.197L20 26.957zM22.038 31.875l.543-1.066-.847-.847 1.183.187.544-1.067.187 1.183 1.183.187-1.067.544.187 1.183-.847-.847-1.066.543zM26.956 33.913l-.37-1.139h-1.197l.968-.703-.37-1.14.969.704.969-.703-.37 1.139.968.703h-1.197l-.37 1.139zM31.875 31.875l-1.067-.543-.846.847.187-1.183-1.067-.544 1.183-.187.187-1.183.543 1.067 1.183-.187-.847.847.544 1.066zM33.913 26.956l-1.139.37v1.198l-.704-.969-1.138.37.704-.969-.704-.968 1.138.37.704-.969v1.198l1.139.37zM31.875 22.038l-.543 1.067.846.846-1.182-.187-.544 1.067-.187-1.183-1.183-.187 1.067-.544-.187-1.182.846.846 1.067-.543z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193185">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function CookIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Corsica.tsx
Tamaño: 1232 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Corsica(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193297)">
        <path
          d="M39.5 20c0 10.77-8.73 19.5-19.5 19.5S.5 30.77.5 20 9.23.5 20 .5 39.5 9.23 39.5 20z"
          fill="#FCFCFC"
          stroke="#F3F3F3"
        />
        <path
          d="M26.963 16.94a7.659 7.659 0 00-14.657-3.113l-.944 3.425.87.87-1.74 3.478 1.74.87-.87.869v.87l.87.87v1.738l.869.87 2.608-.87s0 .87.87 1.74c.87.869 1.74 2.608 1.74 2.608s2.608.87 4.347-1.739c1.74-2.609 3.478-3.478 3.478-3.478l-1.676-3.353a7.636 7.636 0 002.495-5.655z"
          fill="#000"
        />
        <path
          d="M27.587 19.869c3.534-.596 4.122-7.515 4.122-7.515h-4.87c2.523 6.087-.117 6.496-.117 6.496-.357-.266-13.154-6.328-13.56-6.482-.098.13-.457.474-.895 1.543-.437 1.07-.544 2.032-.544 2.032.204.134 13.795 4.88 14.154 4.919.713.466 1.59 1.86 1.1 5.992l4.687-1.32s-1.59-4.232-4.077-5.665z"
          fill="#ACABB1"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193297">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Corsica(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/CostaRica.tsx
Tamaño: 912 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function CostaRica(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193410)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M38.756 13.043H1.244A19.957 19.957 0 000 20c0 2.446.44 4.79 1.244 6.956h37.512A19.957 19.957 0 0040 20c0-2.447-.44-4.79-1.244-6.957z"
          fill="#D80027"
        />
        <path
          d="M20 0C13.94 0 8.509 2.697 4.84 6.956h30.322C31.494 2.697 26.062 0 20 0zM35.162 33.044H4.84C8.508 37.303 13.94 40 20 40c6.063 0 11.494-2.697 15.162-6.956z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193410">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function CostaRica(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Croatia.tsx
Tamaño: 2230 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Croatia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193523)">
        <path
          d="M40 20c0-2.447-.44-4.79-1.244-6.957L20 12.173l-18.756.87A19.957 19.957 0 000 20c0 2.446.44 4.79 1.244 6.956l18.756.87 18.756-.87A19.958 19.958 0 0040 20z"
          fill="#F0F0F0"
        />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#0052B4" />
        <path d="M1.244 13.043h37.512C35.93 5.428 28.6 0 20 0 11.4 0 4.07 5.428 1.244 13.043z" fill="#D80027" />
        <path
          d="M25.217 13.913h-3.479l.58-4.348 2.319-1.739 2.319 1.74v3.478l-1.74.87zM14.782 13.913h3.478l-.58-4.348-2.318-1.739-2.319 1.74v3.478l1.739.87z"
          fill="#338AF3"
        />
        <path d="M22.32 13.913h-4.638V9.565L20 7.826l2.319 1.74v4.347z" fill="#0052B4" />
        <path
          d="M13.043 13.044v9.565a6.95 6.95 0 002.797 5.573l1.217-.305 1.537 1.546a6.96 6.96 0 002.804.001l1.754-1.46 1.007.215a6.948 6.948 0 002.797-5.57v-9.565H13.043z"
          fill="#F0F0F0"
        />
        <path
          d="M13.043 13.043h2.783v2.783h-2.783v-2.783zM18.607 13.043h2.783v2.783h-2.783v-2.783zM24.174 13.043h2.782v2.783h-2.782v-2.783zM15.826 15.826h2.783v2.782h-2.783v-2.782zM21.39 15.826h2.783v2.782h-2.782v-2.782zM13.043 18.608h2.783v2.782h-2.783v-2.782zM15.826 21.39h2.783v2.783h-2.783V21.39zM18.607 18.608h2.783v2.782h-2.783v-2.782zM24.174 18.608h2.782v2.782h-2.782v-2.782zM21.39 21.39h2.783v2.783h-2.782V21.39z"
          fill="#D80027"
        />
        <path
          d="M18.607 24.173h2.783v2.783h-2.783v-2.783zM15.826 24.173h-2.603a6.934 6.934 0 001.351 2.783h1.252v-2.783zM24.174 26.956h1.251a6.935 6.935 0 001.352-2.783h-2.603v2.783z"
          fill="#D80027"
        />
        <path
          d="M15.826 26.956v1.214a6.929 6.929 0 002.783 1.255v-2.47h-2.783zM21.39 26.956v2.47a6.927 6.927 0 002.783-1.256v-1.214h-2.782z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193523">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Croatia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Cuba.tsx
Tamaño: 1065 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Cuba(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192519)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 0C13.459 0 7.65 3.143 4 8h32.002C32.352 3.143 26.544 0 20 0zM20 40c6.544 0 12.353-3.142 16.002-8H4c3.649 4.858 9.458 8 16 8zM0 20c0 1.37.138 2.708.4 4h39.2c.262-1.292.4-2.63.4-4s-.138-2.707-.4-4H.4c-.262 1.293-.4 2.63-.4 4z"
          fill="#0052B4"
        />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#D80027" />
        <path
          d="M8.095 14.783l1.295 3.985h4.191l-3.39 2.464 1.295 3.985-3.39-2.463-3.391 2.463L6 21.232l-3.39-2.464H6.8l1.295-3.985z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192519">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Cuba(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Curacao.tsx
Tamaño: 1034 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Curacao(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192631)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M20 40c6.563 0 12.387-3.16 16.034-8.043H3.967C7.614 36.84 13.437 40 20 40zM40 20C40 8.954 31.046 0 20 0S0 8.954 0 20c0 2.365.412 4.634 1.165 6.74h37.67A19.96 19.96 0 0040 20z"
          fill="#0052B4"
        />
        <path
          d="M13.689 12.827l1.079 3.32h3.492l-2.825 2.054 1.08 3.321-2.826-2.052-2.826 2.052 1.08-3.321-2.826-2.053h3.492l1.08-3.321zM7.692 9.348l.648 1.993h2.095L8.74 12.573l.647 1.993-1.695-1.232-1.695 1.232.647-1.993L4.95 11.34h2.096l.647-1.993z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192631">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Curacao(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Cyprus.tsx
Tamaño: 1015 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Cyprus(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192743)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F5F5F5" />
        <path
          d="M31.304 17.391h-2.609a8.696 8.696 0 11-17.391 0H8.695c0 5.173 3.475 9.535 8.218 10.878-.52.988-.44 2.232.302 3.159l2.843-2.278 2.842 2.277c.75-.936.824-2.195.287-3.188 4.69-1.376 8.117-5.711 8.117-10.848z"
          fill="#6DA544"
        />
        <path
          d="M13.043 16.522s0 4.348 4.348 4.348l.87.87H20s.869-2.61 2.608-2.61c0 0 0-1.739 1.74-1.739h2.608s-.87-3.478 3.478-6.087l-1.739-.87s-6.087 4.349-10.435 3.48v1.738h-1.739l-.87-.87-2.608 1.74z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192743">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Cyprus(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/CzechRepublic.tsx
Tamaño: 755 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function CzechRepublic(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192855)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M18.26 20S5.87 34.145 5.857 34.142A19.937 19.937 0 0020 40c11.045 0 20-8.954 20-20H18.26z"
          fill="#D80027"
        />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#0052B4" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192855">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function CzechRepublic(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/DemocraticRepublicOfCongo.tsx
Tamaño: 1287 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function DemocraticRepublicOfCongo(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192967)">
        <path
          d="M37.779 10.83a19.989 19.989 0 00-3.636-4.973 19.985 19.985 0 00-4.973-3.636L15.08 15.08 2.22 29.17a19.987 19.987 0 003.637 4.972 19.986 19.986 0 004.972 3.636l14.09-12.86 12.86-14.09z"
          fill="#FFDA44"
        />
        <path
          d="M5.857 34.143a20.13 20.13 0 002.673 2.246L36.39 8.53a20.122 20.122 0 00-4.92-4.919L3.611 31.47a20.12 20.12 0 002.246 2.674z"
          fill="#D80027"
        />
        <path
          d="M5.857 5.857c-6.31 6.31-7.52 15.787-3.636 23.314L29.17 2.22C21.644-1.664 12.167-.452 5.857 5.857zM34.143 34.142c6.31-6.31 7.521-15.786 3.637-23.313L10.83 37.78c7.527 3.885 17.004 2.673 23.313-3.637z"
          fill="#338AF3"
        />
        <path
          d="M10.658 6.086l1.079 3.322h3.492l-2.825 2.053 1.08 3.321-2.826-2.052-2.826 2.052 1.08-3.321-2.826-2.053h3.492l1.08-3.322z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192967">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function DemocraticRepublicOfCongo(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Denmark.tsx
Tamaño: 859 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Denmark(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193081)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M15.652 17.391h24.179C38.552 7.578 30.16 0 20 0a20.07 20.07 0 00-4.349.475v16.916zM10.435 17.391V2.431C4.944 5.429 1.012 10.925.17 17.392h10.265zM10.435 22.609H.17c.842 6.467 4.774 11.963 10.265 14.96v-14.96zM15.652 22.609v16.916c1.4.31 2.855.475 4.348.475 10.162 0 18.553-7.578 19.83-17.391H15.653z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193081">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Denmark(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Djibouti.tsx
Tamaño: 981 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Djibouti(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193193)">
        <path
          d="M18.26 21.74S5.87 5.854 5.857 5.857A19.937 19.937 0 0120 0c11.045 0 20 8.954 20 20l-21.74 1.74z"
          fill="#338AF3"
        />
        <path
          d="M18.26 20S5.87 34.145 5.857 34.142A19.937 19.937 0 0020 40c11.045 0 20-8.954 20-20H18.26z"
          fill="#6DA544"
        />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#F0F0F0" />
        <path
          d="M8.095 14.783l1.295 3.985h4.191l-3.39 2.464 1.295 3.985-3.39-2.463-3.391 2.463L6 21.232l-3.39-2.464H6.8l1.295-3.985z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193193">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Djibouti(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Dominica.tsx
Tamaño: 3148 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Dominica(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193305)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M23.914 39.616c7.906-1.568 14.135-7.797 15.703-15.703H23.914v15.703zM.385 23.913c1.568 7.906 7.796 14.135 15.703 15.703V23.913H.385zM39.617 16.087C38.05 8.18 31.821 1.952 23.914.384v15.703h15.703zM16.088.384C8.18 1.952 1.953 8.18.385 16.087h15.703V.384z"
          fill="#496E2D"
        />
        <path
          d="M18.697 23.913h-2.61v15.703c.852.169 1.723.283 2.61.34V23.913zM18.697 16.087V.043c-.887.057-1.758.172-2.61.34v15.704h2.61z"
          fill="#FFDA44"
        />
        <path
          d="M21.304.044A20.207 20.207 0 0020 0c-.439 0-.873.016-1.305.044v16.043h2.609V.044zM18.695 39.956c.432.028.866.044 1.305.044a20.2 20.2 0 001.304-.044V23.913h-2.609v16.043z"
          fill="#000"
        />
        <path
          d="M16.086 18.696v-2.61H.383a20 20 0 00-.34 2.61h16.043zM23.912 18.696h16.044a20.012 20.012 0 00-.34-2.61H23.911v2.61z"
          fill="#FFDA44"
        />
        <path
          d="M23.912 21.304h16.044a20.195 20.195 0 000-2.609H23.912v2.61zM.044 18.696C.016 19.127 0 19.562 0 20c0 .438.016.873.044 1.304h16.043v-2.608H.044z"
          fill="#000"
        />
        <path
          d="M20 29.565A9.565 9.565 0 0029.567 20a9.565 9.565 0 00-9.565-9.565 9.565 9.565 0 100 19.13z"
          fill="#D80027"
        />
        <path
          d="M22.18 21.067c-.712-1.423-1.636-2.865-1.636-2.865s.023-.657.023-1.048a1.067 1.067 0 00-2.13-.092.841.841 0 00-.334 1.585c.134-.312.396-.556.72-.668.053.043.11.082.17.115l.137.065s-.507 1.43-.507 2.197c0 2.158 1.423 2.823 1.423 2.823v.023l-.712.711h1.423V22.49l.711.712c.007-.014 1.348-.862.712-2.135zM20 12.174l.324.996h1.048l-.848.616.324.997-.848-.616-.847.616.324-.997-.848-.616h1.048l.323-.996zM15.399 13.669l.847.615.848-.615-.324.996.848.616H16.57l-.323.996-.324-.996h-1.048l.848-.616-.324-.996zM12.557 17.582h1.047l.324-.997.324.997h1.047l-.847.616.324.996-.848-.616-.848.616.324-.996-.847-.616zM12.557 22.419l.847-.616-.324-.997.848.616.848-.616-.324.997.848.616h-1.048l-.324.996-.324-.996h-1.047zM15.399 26.331l.324-.996-.848-.616h1.048l.324-.996.323.996h1.048l-.848.616.324.997-.848-.616-.847.615zM20 27.826l-.323-.996h-1.048l.848-.616-.324-.996.847.615.848-.616-.324.997.848.616h-1.048l-.324.996zM24.6 26.331l-.848-.615-.847.616.323-.997-.847-.616h1.048l.323-.996.324.996h1.048l-.848.616.324.996zM27.442 22.418h-1.047l-.324.997-.324-.996h-1.048l.848-.616-.324-.997.848.616.847-.616-.323.997.847.615zM27.442 17.582l-.847.615.323.997-.847-.616-.848.616.324-.996-.848-.616h1.048l.324-.997.324.997h1.047zM24.6 13.669l-.324.996.848.616h-1.048l-.324.996-.323-.996H22.38l.848-.616-.324-.996.847.615.848-.615z"
          fill="#496E2D"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193305">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Dominica(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/DominicanRepublic.tsx
Tamaño: 1200 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function DominicanRepublic(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193418)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M.69 25.218A20.035 20.035 0 0014.782 39.31V25.218H.69z" fill="#D80027" />
        <path d="M14.783.689A20.035 20.035 0 00.689 14.783h14.094V.689z" fill="#0052B4" />
        <path d="M39.31 14.783A20.035 20.035 0 0025.217.689v14.094H39.31z" fill="#D80027" />
        <path d="M25.217 39.311A20.035 20.035 0 0039.31 25.217H25.217v14.094z" fill="#0052B4" />
        <path
          d="M25.218 20a5.217 5.217 0 11-10.435 0c0-2.882 5.218-5.217 5.218-5.217s5.217 2.335 5.217 5.217z"
          fill="#496E2D"
        />
        <path d="M14.783 20a5.217 5.217 0 1110.435 0" fill="#0052B4" />
        <path d="M17.064 17.391v3.261a2.935 2.935 0 105.87 0v-3.26h-5.87z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193418">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function DominicanRepublic(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/EastTimor.tsx
Tamaño: 967 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function EastTimor(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193531)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M20 0c-4.896 0-9.38 1.76-12.857 4.682L28.696 20 7.143 35.318A19.918 19.918 0 0020 40c11.045 0 20-8.954 20-20S31.046 0 20 0z"
          fill="#D80027"
        />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#000" />
        <path
          d="M5.546 15.418L8.589 18.3l3.68-2.005-1.798 3.785 3.044 2.88-4.156-.54-1.8 3.785-.768-4.12-4.156-.541 3.68-2.005-.77-4.12z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193531">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function EastTimor(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Ecuador.tsx
Tamaño: 1326 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Ecuador(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192527)">
        <path d="M0 20C0 8.954 8.954 0 20 0s20 8.954 20 20l-20 1.74L0 20z" fill="#FFDA44" />
        <path
          d="M2.676 30C6.134 35.978 12.596 40 20 40c7.402 0 13.865-4.022 17.323-10L20 28.696 2.675 30z"
          fill="#D80027"
        />
        <path d="M37.324 30A19.907 19.907 0 0040 20H0c0 3.643.975 7.058 2.676 10h34.648z" fill="#0052B4" />
        <path d="M20 26.956a6.956 6.956 0 100-13.912 6.956 6.956 0 000 13.912z" fill="#FFDA44" />
        <path
          d="M20 24.348A4.353 4.353 0 0115.652 20v-2.609A4.353 4.353 0 0120 13.044a4.353 4.353 0 014.348 4.347V20A4.353 4.353 0 0120 24.348z"
          fill="#338AF3"
        />
        <path
          d="M26.956 9.565H21.74a1.74 1.74 0 00-3.479 0h-5.217c0 .96.837 1.74 1.797 1.74h-.058c0 .96.779 1.739 1.74 1.739 0 .96.778 1.739 1.738 1.739h3.479c.96 0 1.739-.779 1.739-1.74.96 0 1.739-.778 1.739-1.739h-.058c.96 0 1.797-.778 1.797-1.739z"
          fill="#000"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192527">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Ecuador(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Egypt.tsx
Tamaño: 1002 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Egypt(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192639)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#D80027" />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#000" />
        <path
          d="M26.956 17.826H21.74a1.74 1.74 0 00-3.479 0h-5.217c0 .96.837 1.74 1.797 1.74h-.058c0 .96.779 1.738 1.74 1.738 0 .96.778 1.74 1.738 1.74h3.479c.96 0 1.739-.78 1.739-1.74.96 0 1.739-.778 1.739-1.739h-.058c.96 0 1.797-.778 1.797-1.739z"
          fill="#FF9811"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192639">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Egypt(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/ElSalvador.tsx
Tamaño: 1040 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function ElSalvador(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192751)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 0C12.07 0 5.22 4.614 1.984 11.304h36.031C34.78 4.614 27.93 0 20 0zM20 40c7.929 0 14.78-4.614 18.015-11.304H1.985C5.218 35.386 12.07 40 20 40z"
          fill="#0052B4"
        />
        <path d="M15.984 20.87l4.017-6.957 4.016 6.957h-8.033z" fill="#FFDA44" />
        <path d="M25.218 23.166l-5.217 2.61-5.218-2.61v-3.478h10.435v3.478z" fill="#6DA544" />
        <path
          d="M24.918 14.211l-1.844 1.845a4.348 4.348 0 11-6.148 0l-1.846-1.845a6.956 6.956 0 109.838 0z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192751">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function ElSalvador(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/England.tsx
Tamaño: 726 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function England(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192863)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M39.83 17.391H22.61V.17a20.198 20.198 0 00-5.218 0v17.222H.17a20.196 20.196 0 000 5.218h17.222V39.83a20.193 20.193 0 005.218 0V22.609H39.83a20.191 20.191 0 000-5.218z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192863">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function England(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/EquatorialGuinea.tsx
Tamaño: 1262 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function EquatorialGuinea(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192975)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M12.175 13.043h26.582C35.93 5.428 28.6 0 20 0A19.935 19.935 0 005.859 5.859l6.316 7.184z"
          fill="#6DA544"
        />
        <path
          d="M12.175 26.956h26.582C35.93 34.573 28.6 40 20 40a19.935 19.935 0 01-14.142-5.858l6.316-7.186z"
          fill="#D80027"
        />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#0052B4" />
        <path
          d="M23.479 16.522v4.348c0 2.662 3.478 3.478 3.478 3.478s3.478-.816 3.478-3.479v-4.347H23.48z"
          fill="#DEDDE0"
        />
        <path d="M26.088 20.087h1.739v2.522h-1.74v-2.522z" fill="#786145" />
        <path d="M28.695 19.13a1.74 1.74 0 10-3.478 0 .87.87 0 000 1.74h3.479a.87.87 0 000-1.74z" fill="#6DA544" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192975">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function EquatorialGuinea(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Eritrea.tsx
Tamaño: 1241 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Eritrea(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193089)">
        <path
          d="M18.26 18.26S5.87 34.146 5.857 34.143A19.937 19.937 0 0020 40c11.045 0 20-8.954 20-20l-21.74-1.74z"
          fill="#338AF3"
        />
        <path
          d="M18.26 20S5.87 5.855 5.857 5.858A19.937 19.937 0 0120 0c11.045 0 20 8.954 20 20H18.26z"
          fill="#6DA544"
        />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284C5.858 34.145 40 20 40 20L5.858 5.858z" fill="#D80027" />
        <path
          d="M10.435 11.74a6.964 6.964 0 00-6.956 6.956v2.608a6.964 6.964 0 006.956 6.957 6.964 6.964 0 006.957-6.957v-2.608a6.964 6.964 0 00-6.957-6.957zm4.348 9.564a4.355 4.355 0 01-3.044 4.148v-2.843l1.846-1.846-1.845-1.845v-1.526H9.13V20l-1.844 1.844 1.845 1.845v1.763a4.355 4.355 0 01-3.044-4.148v-2.608a4.353 4.353 0 014.348-4.348 4.353 4.353 0 014.348 4.348v2.608z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193089">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Eritrea(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Estonia.tsx
Tamaño: 822 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Estonia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193201)">
        <path
          d="M0 20c0 2.447.44 4.79 1.244 6.956l18.756.87 18.756-.87A19.955 19.955 0 0040 20c0-2.446-.44-4.79-1.244-6.956L20 12.174l-18.756.87A19.958 19.958 0 000 20z"
          fill="#000"
        />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#0052B4" />
        <path d="M38.756 26.956H1.244C4.07 34.572 11.401 40 20 40c8.6 0 15.93-5.428 18.756-13.044z" fill="#F0F0F0" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193201">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Estonia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Ethiopia.tsx
Tamaño: 1389 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Ethiopia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193313)">
        <path
          d="M0 20c0 2.447.44 4.79 1.244 6.957L20 28.696l18.756-1.74A19.953 19.953 0 0040 20c0-2.413-.427-4.726-1.21-6.867L20 11.303 1.21 13.133A19.959 19.959 0 000 20z"
          fill="#FFDA44"
        />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#D80027" />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#6DA544" />
        <path
          d="M20 29.565A9.565 9.565 0 0029.567 20a9.565 9.565 0 00-9.565-9.565 9.565 9.565 0 100 19.13z"
          fill="#0052B4"
        />
        <path
          d="M19.997 12.593l1.727 5.314h5.596l-4.53 3.285 1.741 5.33-4.534-3.3-4.527 3.294 1.733-5.324-4.525-3.285h5.592l1.727-5.314z"
          fill="#FFDA44"
        />
        <path
          d="M26.885 21.323l-5.478-1.78 3.385-4.66-1.407-1.022L20 18.52l-3.386-4.66-1.407 1.022 3.386 4.66-5.478 1.78.538 1.654 5.477-1.78v5.76h1.74v-5.76l5.477 1.78.538-1.654z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193313">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Ethiopia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/EuropeanUnion.tsx
Tamaño: 1498 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function EuropeanUnion(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193426)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#0052B4" />
        <path
          d="M20 7.826l.648 1.993h2.096l-1.696 1.232.648 1.993-1.695-1.232-1.696 1.232.648-1.993-1.695-1.232h2.095l.648-1.993zM11.392 11.392l1.867.951 1.481-1.481-.328 2.07 1.868.95-2.07.328-.328 2.07-.951-1.867-2.07.328 1.482-1.482-.951-1.867zM7.826 20l1.993-.648v-2.095l1.232 1.695 1.993-.647L11.812 20l1.232 1.695-1.993-.647-1.232 1.695v-2.095L7.826 20zM11.392 28.608l.95-1.867-1.48-1.481 2.069.328.951-1.867.328 2.07 2.07.327-1.867.951.327 2.07-1.481-1.482-1.867.951zM20 32.174l-.647-1.993h-2.095l1.695-1.232-.648-1.992 1.696 1.231 1.695-1.231-.648 1.992 1.696 1.232h-2.096l-.647 1.993zM28.609 28.608l-1.868-.95-1.481 1.48.328-2.069-1.867-.951 2.07-.328.327-2.07.951 1.868 2.07-.328-1.482 1.481.952 1.867zM32.174 20l-1.993.648v2.095l-1.231-1.695-1.993.647L28.189 20l-1.232-1.695 1.993.647 1.231-1.695v2.095l1.993.648zM28.609 11.392l-.952 1.867 1.482 1.482-2.07-.328-.951 1.867-.328-2.07-2.07-.328 1.868-.951-.328-2.07 1.482 1.482 1.867-.951z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193426">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function EuropeanUnion(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/FalklandIslands.tsx
Tamaño: 1822 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function FalklandIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193539)">
        <path
          d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20C0 20.005 20 .002 20 0c11.046 0 20 8.954 20 20z"
          fill="#0052B4"
        />
        <path
          d="M19.947 20h.054v-.053l-.054.053zM20 10.435V0h-.003C8.953.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.053V16.31l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M10.12 2.609a20.095 20.095 0 00-7.51 7.51V20h5.217V7.826H20V2.61h-9.882z" fill="#D80027" />
        <path d="M20 17.54l-7.105-7.105h-2.46L20 20v-2.46z" fill="#D80027" />
        <path d="M32.175 23.478v.87h-6.957v-.87H22.61v3.478h1.74v.87h8.695v-.87h1.74v-3.478h-2.61z" fill="#FFDA44" />
        <path
          d="M22.61 10.435V20c0 4.66 6.086 6.087 6.086 6.087s6.087-1.428 6.087-6.087v-9.565H22.61z"
          fill="#338AF3"
        />
        <path
          d="M28.696 17.57c-1.522 0-1.522 1.39-3.043 1.39-1.522 0-1.522-1.39-3.044-1.39v2.434c1.522 0 1.522 1.391 3.044 1.391 1.521 0 1.521-1.39 3.043-1.39 1.522 0 1.522 1.39 3.044 1.39 1.521 0 1.521-1.39 3.043-1.39v-2.436c-1.522 0-1.522 1.392-3.043 1.392-1.522 0-1.522-1.392-3.044-1.392zM28.696 12.696c-1.522 0-1.522 1.39-3.043 1.39-1.522 0-1.522-1.39-3.044-1.39v2.434c1.522 0 1.522 1.392 3.044 1.392 1.521 0 1.521-1.392 3.043-1.392 1.522 0 1.522 1.392 3.044 1.392 1.521 0 1.521-1.392 3.043-1.392v-2.434c-1.522 0-1.522 1.39-3.043 1.39-1.522 0-1.522-1.39-3.044-1.39z"
          fill="#F3F3F3"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193539">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function FalklandIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/FaroeIslands.tsx
Tamaño: 1171 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function FaroeIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192535)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M39.13 20l.7-2.609c-.115-.889-.29-1.76-.519-2.608h-21.05V.076a19.95 19.95 0 00-2.608.4L12.174 2.61l-1.739-.176c-.915.5-1.787 1.068-2.609 1.7v10.65H.69c-.228.848-.403 1.72-.519 2.608L.87 20l-.7 2.609c.116.889.29 1.76.52 2.608h7.136v10.65c.822.632 1.694 1.2 2.609 1.7l2.609-.176 2.608 2.133c.85.188 1.722.323 2.609.4V25.217h21.05c.229-.848.403-1.72.52-2.608L39.13 20z"
          fill="#0052B4"
        />
        <path
          d="M39.83 17.391H15.653V.475c-1.848.41-3.6 1.075-5.217 1.957v14.96H.169a20.201 20.201 0 000 5.217h10.266v14.96a19.86 19.86 0 005.217 1.956V22.609h24.179a20.193 20.193 0 000-5.218z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192535">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function FaroeIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Fiji.tsx
Tamaño: 1419 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Fiji(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192647)">
        <path
          d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20C0 20.005 20 .002 20 0c11.046 0 20 8.954 20 20z"
          fill="#338AF3"
        />
        <path d="M20 9.565v6.746l-6.957-6.746H20zM10.434 20h5.876l-5.876-7.826-.87 6.087.87 1.739z" fill="#0052B4" />
        <path
          d="M19.947 20h.054v-.053l-.054.053zM20 10.435V0h-.003C8.953.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.053V16.31l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M10.12 2.609a20.095 20.095 0 00-7.51 7.51V20h5.217V7.826H20V2.61h-9.882z" fill="#D80027" />
        <path d="M20 17.54l-7.105-7.105h-2.46L20 20v-2.46z" fill="#D80027" />
        <path
          d="M22.61 13.043V20c0 4.66 6.086 6.087 6.086 6.087s6.087-1.428 6.087-6.087v-6.957l-6.087-1.739-6.087 1.74z"
          fill="#F3F3F3"
        />
        <path
          d="M34.783 13.043v-2.608H22.61v2.608h5.218v5.218h-5.218V20h5.218v5.82c.524.186.87.267.87.267s.344-.08.869-.267V20h5.217v-1.74h-5.217v-5.217h5.217z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192647">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Fiji(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Finland.tsx
Tamaño: 738 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Finland(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192759)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M39.83 17.391H15.653V.475c-1.848.41-3.6 1.074-5.217 1.957v14.96H.169a20.172 20.172 0 000 5.217h10.266v14.96a19.863 19.863 0 005.217 1.956V22.609h24.179a20.195 20.195 0 000-5.218z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192759">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Finland(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/France.tsx
Tamaño: 718 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function France(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192871)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M40 20c0-8.6-5.427-15.93-13.043-18.756v37.512C34.573 35.93 40.001 28.599 40.001 20z" fill="#D80027" />
        <path d="M0 20c0 8.6 5.428 15.93 13.043 18.756V1.244C5.428 4.07 0 11.4 0 20z" fill="#0052B4" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192871">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function France(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/FrenchGuiana.tsx
Tamaño: 1956 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function FrenchGuiana(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
      <g clipPath="url(#clip0_2435_78592)">
        <mask
          id="mask0_2435_78592"
          style={{ maskType: 'alpha' }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="40"
          height="40"
        >
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#496E2D"
          />
        </mask>
        <g mask="url(#mask0_2435_78592)">
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#FFDA44"
          />
          <path
            d="M19.9995 23.1056C16.6693 23.1056 13.8873 20.7651 13.2047 17.6397C13.0998 18.1202 13.043 18.6184 13.043 19.1304C13.043 22.9725 16.1574 26.0869 19.9995 26.0869C23.8415 26.0869 26.9559 22.9724 26.9559 19.1304C26.9559 18.6184 26.8991 18.1202 26.7942 17.6396C26.1116 20.7652 23.3296 23.1056 19.9995 23.1056Z"
            fill="#FFDA44"
          />
          <path
            d="M19.9987 13.9131L20.6462 15.9059H22.7418L21.0466 17.1376L21.6941 19.1305L19.9987 17.8988L18.3035 19.1305L18.9511 17.1376L17.2559 15.9059H19.3513L19.9987 13.9131Z"
            fill="#FFDA44"
          />
          <path d="M40 0H-10L50 40L40 0Z" fill="#496E2D" />
          <path
            d="M20 10L22.2451 16.9098H29.5106L23.6327 21.1803L25.8779 28.0902L20 23.8197L14.1221 28.0902L16.3673 21.1803L10.4894 16.9098H17.7549L20 10Z"
            fill="#D80027"
          />
        </g>
      </g>
      <defs>
        <clipPath id="clip0_2435_78592">
          <rect width="40" height="40" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function FrenchGuiana(props: React.SVGProps<SVGSVGElement>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/FrenchPolynesia.tsx
Tamaño: 1143 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function FrenchPolynesia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192983)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M2.432 10.435h35.136C34.176 4.218 27.581 0 20 0 12.419 0 5.824 4.218 2.432 10.435zM20 40c7.58 0 14.176-4.218 17.568-10.435H2.432C5.824 35.782 12.419 40 20 40z"
          fill="#D80027"
        />
        <path
          d="M26.956 20c0 3.842-3.115 6.087-6.956 6.087-3.843 0-6.957-2.245-6.957-6.087a6.956 6.956 0 1113.913 0z"
          fill="#FFDA44"
        />
        <path d="M26.956 20a6.956 6.956 0 11-13.913 0" fill="#0052B4" />
        <path
          d="M15.652 18.26h1.74v3.479h-1.74v-3.478zM22.61 18.26h1.739v3.479h-1.74v-3.478zM19.13 15.652h1.74v6.087h-1.74v-6.087z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192983">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function FrenchPolynesia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/FrenchSouthernTerritories.tsx
Tamaño: 2597 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function FrenchSouthernTerritories(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
      <g clipPath="url(#clip0_2435_78606)">
        <mask
          id="mask0_2435_78606"
          style={{ maskType: 'alpha' }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="40"
          height="40"
        >
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#D80027"
          />
        </mask>
        <g mask="url(#mask0_2435_78606)">
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#0052B4"
          />
          <rect width="25" height="17" fill="#F0F0F0" />
          <rect x="16" y="-1" width="8" height="17" fill="#D80027" />
          <rect y="-1" width="8" height="17" fill="#0052B4" />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M21.6443 19.5H32.4691L31.4102 21.3826H28.1157V22.3239H30.7042L29.5276 24.2064H28.1157V27.6186L30.4689 23.8535L33.8811 29.1482H32.2338L31.8808 28.5599H29.1746L27.0567 32.325L24.9388 28.5599H22.2326L21.8796 29.1482H20.2324L23.5269 23.8535L26.1154 27.6186V21.3826H22.8209L21.6443 19.5ZM23.5701 26.2075L24.229 27.2665H22.9347L23.5701 26.2075ZM31.1778 27.2665L30.5189 26.2075L29.8835 27.2665H31.1778ZM20.1034 22.7641L19.6543 21.382L19.2052 22.7641H17.752L18.9277 23.6183L18.4786 25.0004L19.6543 24.1462L20.83 25.0004L20.3809 23.6183L21.5566 22.7641H20.1034ZM23.189 30.3253L23.6381 31.7075H25.0914L23.9156 32.5617L24.3647 33.9438L23.189 33.0896L22.0133 33.9438L22.4624 32.5617L21.2867 31.7075H22.7399L23.189 30.3253ZM31.4073 31.7075L30.9582 30.3253L30.5091 31.7075H29.0558L30.2315 32.5617L29.7825 33.9438L30.9582 33.0896L32.1339 33.9438L31.6848 32.5617L32.8605 31.7075H31.4073ZM27.0736 33.3815L27.5227 34.7637H28.9759L27.8002 35.6179L28.2493 37L27.0736 36.1458L25.8979 37L26.347 35.6179L25.1713 34.7637H26.6245L27.0736 33.3815ZM34.9299 22.7641L34.4808 21.382L34.0318 22.7641H32.5785L33.7542 23.6183L33.3051 25.0004L34.4808 24.1462L35.6565 25.0004L35.2075 23.6183L36.3832 22.7641H34.9299Z"
            fill="#F0F0F0"
          />
        </g>
      </g>
      <defs>
        <clipPath id="clip0_2435_78606">
          <rect width="40" height="40" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function FrenchSouthernTerritories(props: React.SVGProps<SVGSVGElement>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Gabon.tsx
Tamaño: 827 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Gabon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193097)">
        <path
          d="M38.756 26.956A19.955 19.955 0 0040 20c0-2.446-.44-4.79-1.244-6.957L20 11.304l-18.756 1.74A19.958 19.958 0 000 20c0 2.446.44 4.79 1.244 6.956L20 28.696l18.756-1.74z"
          fill="#FFDA44"
        />
        <path d="M20 40c8.6 0 15.93-5.428 18.756-13.044H1.244C4.07 34.572 11.401 40 20 40z" fill="#0052B4" />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#6DA544" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193097">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Gabon(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/GalapagosIslands.tsx
Tamaño: 835 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function GalapagosIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193209)">
        <path
          d="M40 20c0-2.446-.44-4.79-1.244-6.956L20 12.174l-18.756.87A19.957 19.957 0 000 20c0 2.447.44 4.79 1.244 6.956l18.756.87 18.756-.87A19.955 19.955 0 0040 20z"
          fill="#F0F0F0"
        />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#0052B4" />
        <path d="M1.244 13.043h37.512C35.93 5.428 28.6 0 20 0 11.4 0 4.07 5.428 1.244 13.043z" fill="#6DA544" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193209">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function GalapagosIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Galician.tsx
Tamaño: 4992 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Galician(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
      <g clipPath="url(#clip0_2435_78762)">
        <mask
          id="mask0_2435_78762"
          style={{ maskType: 'alpha' }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="40"
          height="40"
        >
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#F0F0F0"
          />
        </mask>
        <g mask="url(#mask0_2435_78762)">
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#F0F0F0"
          />
          <rect
            x="2.80078"
            y="2.25"
            width="48.0951"
            height="9.57207"
            transform="rotate(33.6274 2.80078 2.25)"
            fill="#338AF3"
          />
          <path
            d="M25.2 12.2545C25.2 10.8688 24.0583 9.74546 22.65 9.74546C21.9967 9.74546 21.4013 9.98742 20.95 10.3848V8.90906H21.8V7.23632H20.95V6.39999H19.25V7.23632H18.4V8.90906H19.25V10.3848C18.7987 9.98742 18.2033 9.74546 17.55 9.74546C16.1417 9.74546 15 10.8688 15 12.2545C15 12.9975 15.3285 13.6647 15.85 14.1242V15.6H24.35V14.1242C24.8716 13.6647 25.2 12.9975 25.2 12.2545Z"
            fill="#FFDA44"
          />
          <mask
            id="mask1_2435_78762"
            style={{ maskType: 'alpha' }}
            maskUnits="userSpaceOnUse"
            x="14"
            y="16"
            width="13"
            height="15"
          >
            <path
              d="M20.1011 30.4008C16.8479 30.4008 14.2012 27.7186 14.2012 24.4218V16.2008H26.0012V24.4218C26.0011 27.7186 23.3544 30.4008 20.1011 30.4008Z"
              fill="#0052B4"
            />
          </mask>
          <g mask="url(#mask1_2435_78762)">
            <path
              d="M20.1011 30.4008C16.8479 30.4008 14.2012 27.7186 14.2012 24.4218V16.2008H26.0012V24.4218C26.0011 27.7186 23.3544 30.4008 20.1011 30.4008Z"
              fill="#0052B4"
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M20.4 16.7992H19.8V17.5992L19 17.5992V18.1992H19.8V18.9992H20.4V18.1992H21.2V17.5992L20.4 17.5992V16.7992Z"
              fill="#F0F0F0"
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M24.6012 17.7992H24.0012V18.5992L23.2012 18.5992V19.1992H24.0012V19.9992H24.6012V19.1992H25.4012V18.5992L24.6012 18.5992V17.7992Z"
              fill="#F0F0F0"
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M24.6012 21.3996H24.0012V22.1996L23.2012 22.1996V22.7996H24.0012V23.5996H24.6012V22.7996H25.4012V22.1996L24.6012 22.1996V21.3996Z"
              fill="#F0F0F0"
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M24.6012 25H24.0012V25.8L23.2012 25.8V26.4H24.0012V27.2H24.6012V26.4H25.4012V25.8L24.6012 25.8V25Z"
              fill="#F0F0F0"
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M16.1988 17.7992H15.5988V18.5992L14.7988 18.5992V19.1992H15.5988V19.9992H16.1988V19.1992H16.9988V18.5992L16.1988 18.5992V17.7992Z"
              fill="#F0F0F0"
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M16.1988 21.3996H15.5988V22.1996L14.7988 22.1996V22.7996H15.5988V23.5996H16.1988V22.7996H16.9988V22.1996L16.1988 22.1996V21.3996Z"
              fill="#F0F0F0"
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M16.1988 25H15.5988V25.8L14.7988 25.8V26.4H15.5988V27.2H16.1988V26.4H16.9988V25.8L16.1988 25.8V25Z"
              fill="#F0F0F0"
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M21.7271 24.1271C22.1585 23.6958 22.4008 23.1108 22.4008 22.5008H20.1008H17.8008C17.8008 23.1108 18.0431 23.6958 18.4744 24.1271C18.8291 24.4818 19.2877 24.7086 19.7786 24.7781C19.7478 25.0288 19.7199 25.2739 19.6927 25.5131C19.4692 27.479 19.2912 29.0444 17.9008 30.0008C19.5175 30.6787 20.6008 30.7008 22.2008 30.0008C20.5477 28.9899 20.408 27.2162 20.2454 25.1531C20.2361 25.0356 20.2268 24.9171 20.2171 24.7978C20.7847 24.7691 21.3233 24.5309 21.7271 24.1271Z"
              fill="#FFDA44"
            />
            <circle cx="20.102" cy="20.9008" r="1.1" fill="#F0F0F0" />
          </g>
        </g>
      </g>
      <defs>
        <clipPath id="clip0_2435_78762">
          <rect width="40" height="40" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Galician(props: React.SVGProps<SVGSVGElement>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Gambia.tsx
Tamaño: 914 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Gambia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193321)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M20 0C11.732 0 4.636 5.018 1.59 12.174h36.82C35.365 5.018 28.27 0 20 0z" fill="#A2001D" />
        <path d="M20 40c8.268 0 15.364-5.018 18.41-12.174H1.59C4.636 34.982 11.732 40 20 40z" fill="#496E2D" />
        <path
          d="M39.311 14.783H.689A20.021 20.021 0 000 20c0 1.805.24 3.554.689 5.217h38.622C39.76 23.554 40 21.805 40 20c0-1.805-.24-3.554-.689-5.217z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193321">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Gambia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Georgia.tsx
Tamaño: 1143 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Georgia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193434)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M39.83 17.391H22.61V.17a20.198 20.198 0 00-5.218 0v17.222H.17a20.198 20.198 0 000 5.218h17.222V39.83a20.193 20.193 0 005.218 0V22.609H39.83a20.191 20.191 0 000-5.218z"
          fill="#D80027"
        />
        <path
          d="M12.175 9.565V6.957h-2.61v2.608H6.958v2.609h2.609v2.609h2.608v-2.609h2.61V9.565h-2.61zM30.434 9.565V6.957h-2.608v2.608h-2.61v2.609h2.61v2.609h2.608v-2.609h2.609V9.565h-2.609zM12.175 27.826v-2.608h-2.61v2.608H6.958v2.609h2.609v2.609h2.608v-2.61h2.61v-2.608h-2.61zM30.434 27.826v-2.608h-2.608v2.608h-2.61v2.609h2.61v2.609h2.608v-2.61h2.609v-2.608h-2.609z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193434">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Georgia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Germany.tsx
Tamaño: 860 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Germany(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193547)">
        <path
          d="M1.244 26.957C4.07 34.572 11.401 40 20 40c8.6 0 15.93-5.428 18.756-13.043L20 25.217l-18.756 1.74z"
          fill="#FFDA44"
        />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043L20 14.784l18.756-1.74C35.93 5.428 28.6 0 20 0z" fill="#000" />
        <path
          d="M1.244 13.043A19.957 19.957 0 000 20c0 2.446.44 4.79 1.244 6.956h37.512A19.957 19.957 0 0040 20c0-2.447-.44-4.79-1.244-6.957H1.244z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193547">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Germany(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Ghana.tsx
Tamaño: 999 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Ghana(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192543)">
        <path
          d="M0 20c0 2.446.44 4.79 1.244 6.956l18.756.87 18.756-.87A19.956 19.956 0 0040 20c0-2.446-.44-4.79-1.244-6.957L20 12.174l-18.756.87A19.958 19.958 0 000 20z"
          fill="#FFDA44"
        />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#D80027" />
        <path d="M38.756 26.956H1.244C4.07 34.572 11.401 40 20 40c8.6 0 15.93-5.428 18.756-13.044z" fill="#496E2D" />
        <path
          d="M20 13.043l1.727 5.315h5.588l-4.52 3.284 1.726 5.314L20 23.672l-4.52 3.284 1.726-5.314-4.52-3.284h5.587L20 13.043z"
          fill="#000"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192543">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Ghana(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Gibraltar.tsx
Tamaño: 1098 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Gibraltar(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192655)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F9F9F9" />
        <path
          d="M20 40c8.6 0 15.93-5.428 18.756-13.044H1.244C4.07 34.572 11.401 40 20 40zM27.827 16.522v-2.609h.87v-1.74h-1.74v.87h-1.739v-.87H23.48v1.74h.87v2.609h-1.74v-6.087h.87v-1.74h-1.74v.87h-.869v-.87h-1.739v.87h-.87v-.87h-1.738v1.74h.87v6.087h-1.74v-2.609h.87v-1.74h-1.74v.87h-1.739v-.87h-1.739v1.74h.87v2.609h-1.74v6.956h19.131v-6.956h-1.74z"
          fill="#D80027"
        />
        <path
          d="M20 22.609a2.609 2.609 0 00-.87 5.068v3.627h-2.608v3.479h4.347v-7.106A2.61 2.61 0 0020 22.61zm0 3.478a.87.87 0 110-1.74.87.87 0 010 1.74z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192655">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Gibraltar(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Greece.tsx
Tamaño: 961 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Greece(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192767)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 14.783h19.311a19.887 19.887 0 00-2.246-5.218H20v5.218zM7.55 35.652h24.9a20.1 20.1 0 004.614-5.217H2.937a20.104 20.104 0 004.614 5.217zM6.957 4.839a20.098 20.098 0 00-4.021 4.726h4.02V4.84zM20 20v-5.217h-7.826V20H6.956v-5.217H.69A20.022 20.022 0 000 20c0 1.805.24 3.554.689 5.217h38.622C39.76 23.554 40 21.805 40 20H20zM20 0c-2.777 0-5.422.567-7.826 1.59v7.975H20V4.348h12.45A19.915 19.915 0 0020 0z"
          fill="#338AF3"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192767">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Greece(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Greenland.tsx
Tamaño: 806 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Greenland(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192879)">
        <path d="M0 20C0 8.954 8.954 0 20 0s20 8.954 20 20c-.87 0-20 2.609-20 2.609L0 20z" fill="#F0F0F0" />
        <path d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20" fill="#D80027" />
        <path
          d="M13.913 29.565A9.565 9.565 0 0023.478 20a9.565 9.565 0 00-19.13 0 9.565 9.565 0 009.565 9.565z"
          fill="#F0F0F0"
        />
        <path d="M4.348 20a9.565 9.565 0 0119.13 0" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192879">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Greenland(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Grenada.tsx
Tamaño: 2252 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Grenada(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192991)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M8.729 3.478A19.906 19.906 0 0120 0c4.181 0 8.063 1.284 11.272 3.478l-11.272.87-11.272-.87z"
          fill="#A2001D"
        />
        <path d="M20 20l-1.276-1.276-.34.607L20 20z" fill="#0052B4" />
        <path
          d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858zM34.142 5.858c7.81 7.81 7.81 20.474 0 28.284L20 20 34.142 5.858z"
          fill="#496E2D"
        />
        <path d="M20 26.956a6.956 6.956 0 100-13.912 6.956 6.956 0 000 13.912z" fill="#A2001D" />
        <path
          d="M20 13.043l1.56 4.8h5.046l-4.082 2.966 1.559 4.8L20 22.642l-4.082 2.967 1.56-4.8-4.084-2.966h5.047l1.56-4.8zM20 0h-.006.014H20z"
          fill="#FFDA44"
        />
        <path
          d="M20.007 0h-.013A19.937 19.937 0 005.859 5.857h28.283A19.937 19.937 0 0020.007 0zM5.86 34.143A19.938 19.938 0 0020 40a19.937 19.937 0 0014.141-5.857H5.86z"
          fill="#A2001D"
        />
        <path
          d="M20 2.174l.324.996h1.048l-.848.616.324.996L20 4.167l-.847.615.324-.996-.848-.616h1.048L20 2.174zM15.15 2.174l.325.996h1.047l-.847.616.323.996-.847-.615-.848.615.324-.996-.848-.616h1.048l.324-.996zM24.85 2.174l.324.996h1.047l-.847.616.324.996-.848-.615-.848.615.324-.996-.848-.616h1.048l.324-.996zM20 35.217l.324.997h1.048l-.848.616.324.996L20 37.21l-.847.616.324-.996-.848-.616h1.048l.323-.997zM15.15 35.217l.325.997h1.047l-.847.616.323.996-.847-.616-.848.616.324-.996-.848-.616h1.048l.324-.997zM24.85 35.217l.324.997h1.047l-.847.616.324.996-.848-.616-.848.616.324-.996-.848-.616h1.048l.324-.997zM6.095 19.67a1.74 1.74 0 01-2.94 1.86c-.93-1.47-.39-3.87-.39-3.87s2.4.54 3.33 2.01z"
          fill="#FFDA44"
        />
        <path d="M5.09 22.204a.87.87 0 100-1.739.87.87 0 000 1.74z" fill="#A2001D" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192991">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Grenada(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Guadeloupe.tsx
Tamaño: 3706 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Guadeloupe(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
      <g clipPath="url(#clip0_2435_78649)">
        <mask
          id="mask0_2435_78649"
          style={{ maskType: 'alpha' }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="40"
          height="40"
        >
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#F0F0F0"
          />
        </mask>
        <g mask="url(#mask0_2435_78649)">
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#D80027"
          />
          <path d="M0 0V14.4H42.8V0H0Z" fill="#0052B4" />
          <path
            d="M21.4995 11.7H18.1995C18.1995 11.7 19.0573 10.7962 18.9995 10.1C18.9375 9.3524 18.2436 8.0833 17.6997 8.6C17.4841 8.80485 17.4995 9.3 17.4995 9.3C17.4995 9.3 15.0411 7.85815 16.3995 6.5C16.9996 5.9 18.9995 7.2 18.9995 7.2C18.9995 7.2 17.7995 4.4 19.7995 3.1C21.7997 4.4 20.6995 7.2 20.6995 7.2C20.6995 7.2 22.3996 5.9 23.1995 6.5C24.728 7.64653 22.2995 9.3 22.2995 9.3C22.2995 9.3 22.2561 8.78275 21.9997 8.6C21.3888 8.16459 20.7615 9.3524 20.6995 10.1C20.6418 10.7962 21.4995 11.7 21.4995 11.7Z"
            fill="#FFDA44"
          />
          <path
            d="M34.9097 11.7H31.6097C31.6097 11.7 32.4674 10.7962 32.4097 10.1C32.3476 9.3524 31.6537 8.0833 31.1099 8.6C30.8943 8.80485 30.9097 9.3 30.9097 9.3C30.9097 9.3 28.4512 7.85815 29.8097 6.5C30.4098 5.9 32.4097 7.2 32.4097 7.2C32.4097 7.2 31.2097 4.4 33.2097 3.1C35.2099 4.4 34.1097 7.2 34.1097 7.2C34.1097 7.2 35.8098 5.9 36.6097 6.5C38.1382 7.64653 35.7097 9.3 35.7097 9.3C35.7097 9.3 35.6663 8.78275 35.4099 8.6C34.799 8.16459 34.1717 9.3524 34.1097 10.1C34.0519 10.7962 34.9097 11.7 34.9097 11.7Z"
            fill="#FFDA44"
          />
          <path
            d="M8.31006 11.7H5.01005C5.01005 11.7 5.86781 10.7962 5.81005 10.1C5.74803 9.3524 5.05412 8.0833 4.51027 8.6C4.29465 8.80485 4.31005 9.3 4.31005 9.3C4.31005 9.3 1.85161 7.85815 3.21005 6.5C3.81019 5.9 5.81005 7.2 5.81005 7.2C5.81005 7.2 4.61005 4.4 6.61006 3.1C8.61027 4.4 7.51006 7.2 7.51006 7.2C7.51006 7.2 9.21016 5.9 10.0101 6.5C11.5386 7.64653 9.11005 9.3 9.11005 9.3C9.11005 9.3 9.06666 8.78275 8.81027 8.6C8.19939 8.16459 7.57208 9.3524 7.51006 10.1C7.4523 10.7962 8.31006 11.7 8.31006 11.7Z"
            fill="#FFDA44"
          />
          <path
            d="M7.69961 16.9L13.9996 20.7L20.5996 24.9L33.8996 30.4L32.2996 33.2L19.7996 28.1L3.09961 23.8L7.69961 16.9Z"
            fill="#496E2D"
          />
          <path
            d="M20 16.4L21.2671 18.3997L23.0902 16.8894L23.6773 19.1828L25.8779 18.3098L25.7276 20.6724L28.0902 20.5221L27.2172 22.7227L29.5106 23.3098L28.0003 25.1329L30 26.4L28.0003 27.6671L29.5106 29.4902L27.2172 30.0773L28.0902 32.2779L25.7276 32.1276L25.8779 34.4902L23.6773 33.6172L23.0902 35.9106L21.2671 34.4003L20 36.4L18.7329 34.4003L16.9098 35.9106L16.3227 33.6172L14.1221 34.4902L14.2724 32.1276L11.9098 32.2779L12.7828 30.0773L10.4894 29.4902L11.9997 27.6671L10 26.4L11.9997 25.1329L10.4894 23.3098L12.7828 22.7227L11.9098 20.5221L14.2724 20.6724L14.1221 18.3098L16.3227 19.1828L16.9098 16.8894L18.7329 18.3997L20 16.4Z"
            fill="#FFDA44"
          />
        </g>
      </g>
      <defs>
        <clipPath id="clip0_2435_78649">
          <rect width="40" height="40" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Guadeloupe(props: React.SVGProps<SVGSVGElement>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Guam.tsx
Tamaño: 1726 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Guam(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193105)">
        <path
          d="M8.729 36.522A19.906 19.906 0 0020 40c4.181 0 8.063-1.284 11.272-3.478l-11.272-1.74-11.272 1.74zM31.273 3.478A19.907 19.907 0 0020.001 0 19.906 19.906 0 008.729 3.478L20 5.218l11.272-1.74z"
          fill="#D80027"
        />
        <path
          d="M40 20c0-6.618-3.962-13.264-8.728-16.522H8.728C3.458 7.08 0 13.136 0 20c0 6.864 3.459 12.92 8.728 16.522h22.544C36.542 32.92 40 26.864 40 20z"
          fill="#0052B4"
        />
        <path
          d="M18.868 32.625c-.273-.235-6.694-5.817-6.694-12.625 0-6.809 6.42-12.39 6.694-12.625L20 6.405l1.132.97c.273.235 6.694 5.816 6.694 12.625s-6.42 12.39-6.694 12.625l-1.132.97-1.132-.97z"
          fill="#D80027"
        />
        <path
          d="M26.086 20c0-6.087-6.087-11.304-6.087-11.304S13.912 13.913 13.912 20c0 1.862.57 3.642 1.361 5.217h9.452c.79-1.575 1.361-3.355 1.361-5.217z"
          fill="#338AF3"
        />
        <path
          d="M26.086 20c0 1.862-.57 3.642-1.36 5.217l-4.727.87-4.726-.87c-.79-1.574-1.36-3.355-1.36-5.217h12.173z"
          fill="#0052B4"
        />
        <path d="M20 31.304s2.931-2.513 4.726-6.087h-9.453C17.068 28.791 20 31.304 20 31.304z" fill="#FFDA44" />
        <path d="M16.088 16.522h7.826l-3.913 3.913-3.913-3.913z" fill="#6DA544" />
        <path d="M18.695 19.13h2.609v7.827h-2.609V19.13z" fill="#A2001D" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193105">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Guam(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Guatemala.tsx
Tamaño: 1089 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Guatemala(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193217)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M40 20c0-7.93-4.615-14.78-11.305-18.015v36.03C35.385 34.78 40 27.93 40 20zM0 20c0 7.93 4.614 14.78 11.304 18.015V1.985C4.614 5.218 0 12.07 0 20z"
          fill="#338AF3"
        />
        <path
          d="M25.226 23.382L21.845 20l3.219-3.219-.146-1.7-.922-.922L20 18.155l-3.996-3.996-.922.922-.146 1.7 3.22 3.22-3.383 3.38 1.845 1.845L20 21.845l3.382 3.381 1.844-1.844z"
          fill="#ACABB1"
        />
        <path
          d="M24.918 15.081l-1.844 1.845a4.348 4.348 0 11-6.149 0L15.08 15.08a6.956 6.956 0 109.838 0z"
          fill="#6DA544"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193217">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Guatemala(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Guernsey.tsx
Tamaño: 962 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Guernsey(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193329)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M39.83 17.391H22.61V.17a20.198 20.198 0 00-5.218 0v17.222H.17a20.198 20.198 0 000 5.218h17.222V39.83a20.193 20.193 0 005.218 0V22.609H39.83a20.193 20.193 0 000-5.218z"
          fill="#D80027"
        />
        <path
          d="M25.652 20.87l1.304.87v-3.48l-1.304.87h-4.783v-4.782l.87-1.305H18.26l.87 1.305v4.782h-4.783l-1.304-.87v3.48l1.304-.87h4.783v4.782l-.87 1.304h3.479l-.87-1.304V20.87h4.783z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193329">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Guernsey(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Guinea.tsx
Tamaño: 835 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Guinea(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193555)">
        <path
          d="M26.956 1.244A19.957 19.957 0 0020 0c-2.447 0-4.79.44-6.957 1.244L12.173 20l.87 18.756A19.957 19.957 0 0020 40c2.446 0 4.79-.44 6.956-1.244L27.826 20l-.87-18.756z"
          fill="#FFDA44"
        />
        <path d="M0 20c0 8.6 5.428 15.93 13.043 18.756V1.244C5.428 4.07 0 11.4 0 20z" fill="#D80027" />
        <path d="M40 20c0-8.6-5.427-15.93-13.043-18.756v37.512C34.573 35.93 40.001 28.599 40.001 20z" fill="#6DA544" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193555">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Guinea(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/GuineaBissau.tsx
Tamaño: 1081 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function GuineaBissau(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193442)">
        <path
          d="M20 0c-1.806 0-3.555.24-5.218.689L13.043 20l1.74 19.311A20.02 20.02 0 0020 40c11.045 0 20-8.954 20-20S31.044 0 20 0z"
          fill="#FFDA44"
        />
        <path d="M13.043 20l1.74 19.311A20.02 20.02 0 0020 40c11.045 0 20-8.954 20-20H13.042z" fill="#6DA544" />
        <path d="M0 20c0 7.58 4.218 14.176 10.435 17.568V2.432C4.218 5.824 0 12.419 0 20z" fill="#D80027" />
        <path d="M0 20c0 9.24 6.267 17.016 14.783 19.311V.689C6.267 2.984 0 10.759 0 20z" fill="#D80027" />
        <path
          d="M7.558 14.783l1.295 3.985h4.191l-3.39 2.463 1.294 3.986-3.39-2.463-3.39 2.463 1.295-3.985-3.39-2.464h4.19l1.295-3.986z"
          fill="#000"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193442">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function GuineaBissau(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Guyana.tsx
Tamaño: 1298 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Guyana(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192551)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 0c-3.535 0-6.856.919-9.738 2.53v34.94A19.907 19.907 0 0020 40c11.046 0 20-8.954 20-20S31.047 0 20 0z"
          fill="#6DA544"
        />
        <path
          d="M10.319 2.496a20.042 20.042 0 00-3.178 2.186L22.46 20 7.14 35.318a20.047 20.047 0 003.178 2.186L39.999 20 10.32 2.496z"
          fill="#F0F0F0"
        />
        <path
          d="M8.63 3.545c-.609.423-1.195.877-1.753 1.363L20 20 6.877 35.092c.558.486 1.144.94 1.754 1.363L36.577 20 8.63 3.545z"
          fill="#FFDA44"
        />
        <path
          d="M7.141 4.682a20.14 20.14 0 00-1.284 1.176L18.26 20 5.857 34.142c.41.41.84.802 1.284 1.176L22.46 20 7.141 4.682z"
          fill="#000"
        />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192551">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Guyana(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Haiti.tsx
Tamaño: 1096 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Haiti(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192663)">
        <path d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20 20 0 20 0s20 8.954 20 20z" fill="#A2001D" />
        <path d="M0 20C0 8.954 8.954 0 20 0s20 8.954 20 20" fill="#0052B4" />
        <path d="M26.956 25.217L20 24.347l-6.957.87V14.783h13.913v10.434z" fill="#F0F0F0" />
        <path d="M20 24.348a3.478 3.478 0 100-6.957 3.478 3.478 0 000 6.957z" fill="#0052B4" />
        <path d="M20 22.609a1.74 1.74 0 100-3.479 1.74 1.74 0 000 3.479z" fill="#A2001D" />
        <path d="M17.39 16.522h5.218l-2.609 2.609-2.608-2.61z" fill="#6DA544" />
        <path d="M19.13 18.26h1.74v5.218h-1.74v-5.217z" fill="#FFDA44" />
        <path d="M22.782 22.956h-5.565l-4.174 2.262h13.913l-4.174-2.262z" fill="#6DA544" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192663">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Haiti(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Hawaii.tsx
Tamaño: 1343 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Hawaii(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192775)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M20 40c5.072 0 9.702-1.889 13.227-5H6.773C10.3 38.111 14.93 40 20 40z" fill="#D80027" />
        <path
          d="M.63 25a19.88 19.88 0 002.047 5h34.648a19.878 19.878 0 002.046-5L20 23.478.63 25zM39.37 15a19.878 19.878 0 00-2.045-5L20 9.565V0c-1.486 0-2.934.162-4.327.47C15.647.474 2.609 10.76 2.609 20c.334.058 17.392 1.74 17.392 1.74V15h19.37z"
          fill="#0052B4"
        />
        <path
          d="M20 12.478v-10h-6.334L15.674.471C7.432 2.288 1.1 9.189.13 17.717.045 18.467 0 19.228 0 20h10.13v-3.986L14.156 20h7.155l-7.645-7.522H20z"
          fill="#F0F0F0"
        />
        <path
          d="M20.01 20l-7.523-7.522H10.13L17.652 20H7.61V10h29.715a20.09 20.09 0 00-4.097-5H7.61v-.697a20.096 20.096 0 00-5 5.818V20H0c0 1.727.219 3.402.63 5h38.74c.411-1.598.63-3.273.63-5H20.01z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192775">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Hawaii(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Honduras.tsx
Tamaño: 1290 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Honduras(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192887)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 40c7.929 0 14.78-4.614 18.015-11.304H1.985C5.218 35.386 12.07 40 20 40zM20 0C12.07 0 5.22 4.614 1.984 11.304h36.031C34.78 4.614 27.93 0 20 0zM12.307 13.043l.648 1.993h2.095l-1.695 1.232.648 1.993-1.696-1.232-1.695 1.232.648-1.993-1.696-1.232h2.096l.647-1.992zM12.307 21.74l.648 1.992h2.095l-1.695 1.232.648 1.993-1.696-1.232-1.695 1.232.648-1.993-1.696-1.232h2.096l.647-1.993zM27.692 13.043l.648 1.993h2.095l-1.695 1.232.648 1.993-1.696-1.232-1.695 1.232.648-1.993-1.696-1.232h2.096l.647-1.992zM27.692 21.74l.648 1.992h2.095l-1.695 1.232.648 1.993-1.696-1.232-1.695 1.232.648-1.993-1.696-1.232h2.096l.647-1.993zM20 17.391l.648 1.993h2.096l-1.695 1.232.647 1.993-1.695-1.232-1.696 1.232.648-1.993-1.695-1.232h2.095l.648-1.993z"
          fill="#338AF3"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192887">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Honduras(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/HongKong.tsx
Tamaño: 1109 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function HongKong(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192999)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#D80027" />
        <path
          d="M22.065 15.13c-.454 1.891-1.262 1.53-1.658 3.18a4.348 4.348 0 012.032-8.456c-.792 3.298.033 3.586-.374 5.277zM16.007 16.532c1.658 1.016 1.065 1.673 2.51 2.56a4.348 4.348 0 01-7.412-4.547c2.891 1.773 3.42 1.077 4.902 1.987zM15.468 22.726c1.479-1.262 1.92-.496 3.21-1.597a4.348 4.348 0 01-6.614 5.646c2.58-2.202 2.081-2.92 3.404-4.049zM21.193 25.154c-.744-1.797.121-1.98-.527-3.546a4.348 4.348 0 013.325 8.034c-1.296-3.133-2.133-2.881-2.798-4.488zM25.27 20.46c-1.939.151-1.846-.728-3.536-.596a4.348 4.348 0 018.67-.68c-3.382.266-3.4 1.14-5.134 1.275z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192999">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function HongKong(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Hungary.tsx
Tamaño: 828 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Hungary(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193113)">
        <path
          d="M1.244 13.043A19.958 19.958 0 000 20c0 2.446.44 4.79 1.244 6.956L20 28.696l18.756-1.74A19.957 19.957 0 0040 20c0-2.446-.44-4.79-1.244-6.957L20 11.304l-18.756 1.74z"
          fill="#F0F0F0"
        />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#D80027" />
        <path d="M20 40c8.6 0 15.93-5.428 18.756-13.044H1.244C4.07 34.572 11.401 40 20 40z" fill="#6DA544" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193113">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Hungary(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Iceland.tsx
Tamaño: 1085 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Iceland(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193225)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M.69 25.217a20.017 20.017 0 007.137 10.65v-10.65H.689zM18.262 39.924c.573.05 1.153.076 1.739.076 9.24 0 17.016-6.267 19.31-14.783h-21.05v14.707zM39.312 14.783C37.017 6.267 29.242 0 20 0c-.586 0-1.166.027-1.74.076v14.707h21.05zM7.827 4.132a20.017 20.017 0 00-7.138 10.65h7.138V4.133z"
          fill="#0052B4"
        />
        <path
          d="M39.83 17.391H15.653V.475c-1.848.41-3.6 1.074-5.217 1.957v14.96H.169a20.172 20.172 0 000 5.217h10.266v14.96a19.863 19.863 0 005.217 1.956V22.609h24.179a20.195 20.195 0 000-5.218z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193225">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Iceland(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/India.tsx
Tamaño: 1111 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function India(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193337)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M20 0C12.07 0 5.22 4.614 1.984 11.304h36.031C34.78 4.614 27.93 0 20 0z" fill="#FF9811" />
        <path d="M20 40c7.929 0 14.78-4.614 18.015-11.304H1.985C5.218 35.386 12.07 40 20 40z" fill="#6DA544" />
        <path d="M20 26.956a6.956 6.956 0 100-13.912 6.956 6.956 0 000 13.912z" fill="#0052B4" />
        <path d="M20 24.348a4.348 4.348 0 100-8.696 4.348 4.348 0 000 8.696z" fill="#F0F0F0" />
        <path
          d="M20 14.635l1.341 3.042 3.305-.36L22.682 20l1.964 2.683-3.305-.36L20 25.365l-1.341-3.042-3.305.36L17.317 20l-1.963-2.683 3.305.36 1.34-3.042z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193337">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function India(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Indonesia.tsx
Tamaño: 575 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Indonesia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193450)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F1F1F1" />
        <path d="M0 20C0 8.954 8.954 0 20 0s20 8.954 20 20" fill="#A2001D" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193450">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Indonesia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Iran.tsx
Tamaño: 1404 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Iran(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193563)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M26.496 14.783H23.88c.021.287.033.578.033.87 0 1.934-.483 3.81-1.326 5.144-.26.412-.697.993-1.282 1.385v-7.4h-2.609v7.4c-.585-.392-1.022-.973-1.282-1.385-.843-1.335-1.327-3.21-1.327-5.145 0-.291.013-.582.034-.87h-2.616a14.83 14.83 0 00-.027.87c0 5.364 2.865 9.566 6.522 9.566s6.522-4.202 6.522-9.566c0-.293-.009-.583-.026-.87z"
          fill="#D80027"
        />
        <path
          d="M8.26 9.565h2.61v1.74h2.608v-1.74h2.609v1.74h2.608v-1.74h2.61v1.74h2.608v-1.74h2.608v1.74h2.61v-1.74h2.608v1.74h6.276C34.78 4.614 27.93 0 20 0 12.07 0 5.22 4.614 1.984 11.304h6.277V9.565z"
          fill="#6DA544"
        />
        <path
          d="M31.739 28.696v1.739H29.13v-1.74h-2.608v1.74h-2.609v-1.74h-2.609v1.74h-2.608v-1.74h-2.609v1.74h-2.609v-1.74H10.87v1.74H8.261v-1.74H1.984C5.22 35.386 12.071 40 20 40c7.93 0 14.78-4.614 18.015-11.304H31.74z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193563">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Iran(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Iraq.tsx
Tamaño: 1072 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Iraq(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192559)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#A2001D" />
        <path d="M20 40c8.6 0 15.93-5.428 18.756-13.044H1.244C4.07 34.572 11.401 40 20 40z" fill="#000" />
        <path
          d="M15.218 18.696h-3.856a1.74 1.74 0 011.682-1.305v-2.608a4.353 4.353 0 00-4.348 4.347v2.174h6.522c.24 0 .435.196.435.435v.87H6.957v2.608h11.304V21.74a3.047 3.047 0 00-3.043-3.043zM21.74 22.609v-7.826h-2.61v10.434h4.349V22.61h-1.74zM30.435 22.609v-7.826h-2.61v7.826h-.869V20h-2.608v5.218h7.826v-2.61h-1.74z"
          fill="#496E2D"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192559">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Iraq(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Ireland.tsx
Tamaño: 719 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Ireland(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192671)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M40 20c0-8.6-5.427-15.93-13.043-18.756v37.512C34.573 35.93 40.001 28.6 40.001 20z" fill="#FF9811" />
        <path d="M0 20c0 8.6 5.428 15.93 13.043 18.756V1.244C5.428 4.07 0 11.401 0 20z" fill="#6DA544" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192671">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Ireland(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/IsleOfMan.tsx
Tamaño: 815 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function IsleOfMan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192783)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#D80027" />
        <path
          d="M27.405 13.407l-1.414 5.045-4.241-.784-2.73-5.627-7.376 2.617-.582-1.639-1.93-.238 1.455 4.098 5.075-1.298 1.443 4.064-3.509 5.179 5.955 5.078-1.129 1.324.759 1.79 2.822-3.308-3.662-3.747 2.799-3.281 6.238.45 1.421-7.697 1.71.316 1.172-1.553-4.276-.789z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192783">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function IsleOfMan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Israel.tsx
Tamaño: 1146 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Israel(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192895)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M27.53 15.652h-5.02L20 11.304l-2.51 4.348h-5.021L14.979 20l-2.51 4.348h5.02L20 28.696l2.51-4.348h5.021L25.02 20l2.51-4.348zM23.083 20l-1.541 2.671h-3.084l-1.542-2.67 1.541-2.672h3.084L23.084 20zM20 14.658l.573.994h-1.147l.574-.994zm-4.627 2.671h1.148l-.574.994-.574-.994zm0 5.342l.574-.994.574.994h-1.148zM20 25.341l-.574-.993h1.147l-.573.994zm4.625-2.67h-1.147l.574-.994.573.994zm-1.147-5.342h1.147l-.573.994-.574-.994zM32.45 4.348H7.55a20.101 20.101 0 00-4.614 5.217h34.129a20.105 20.105 0 00-4.615-5.217zM7.55 35.652h24.9a20.1 20.1 0 004.614-5.217H2.937a20.104 20.104 0 004.614 5.217z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192895">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Israel(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Italy.tsx
Tamaño: 717 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Italy(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193007)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M40 20c0-8.6-5.427-15.93-13.043-18.756v37.512C34.573 35.93 40.001 28.6 40.001 20z" fill="#D80027" />
        <path d="M0 20c0 8.6 5.428 15.93 13.043 18.756V1.244C5.428 4.07 0 11.401 0 20z" fill="#6DA544" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193007">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Italy(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/IvoryCoast.tsx
Tamaño: 867 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function IvoryCoast(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193121)">
        <path
          d="M20 40c2.446 0 4.79-.44 6.956-1.244L27.826 20l-.87-18.756A19.958 19.958 0 0020 0c-2.447 0-4.79.44-6.957 1.244L12.173 20l.87 18.756A19.955 19.955 0 0020 40z"
          fill="#F0F0F0"
        />
        <path d="M0 20c0 8.6 5.428 15.93 13.043 18.756V1.244C5.428 4.07 0 11.401 0 20z" fill="#FF9811" />
        <path
          d="M26.957 1.244v37.512C34.573 35.93 40.001 28.6 40.001 20c0-8.6-5.428-15.93-13.044-18.756z"
          fill="#6DA544"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193121">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function IvoryCoast(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Jamaica.tsx
Tamaño: 1109 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Jamaica(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193233)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M32.177 4.134A19.91 19.91 0 0020 0 19.91 19.91 0 007.824 4.134L20 16.311 32.177 4.134z"
          fill="#6DA544"
        />
        <path
          d="M4.134 7.824A19.911 19.911 0 000 20c0 4.582 1.542 8.804 4.134 12.176L16.311 20 4.134 7.824z"
          fill="#000"
        />
        <path
          d="M7.824 35.866A19.91 19.91 0 0020 40c4.583 0 8.804-1.542 12.177-4.134L20 23.689 7.824 35.866z"
          fill="#6DA544"
        />
        <path
          d="M35.866 32.176A19.91 19.91 0 0040 20a19.91 19.91 0 00-4.134-12.176L23.689 20l12.177 12.176z"
          fill="#000"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193233">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Jamaica(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Japan.tsx
Tamaño: 590 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Japan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193345)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M20 28.696a8.696 8.696 0 100-17.391 8.696 8.696 0 000 17.39z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193345">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Japan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Jersey.tsx
Tamaño: 1086 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Jersey(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193458)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#EFEFEF" />
        <path
          d="M35.867 32.178L23.689 20 35.867 7.822a20.22 20.22 0 00-3.69-3.689L20 16.311 7.822 4.133a20.191 20.191 0 00-3.69 3.69L16.312 20 4.133 32.178a20.222 20.222 0 003.689 3.69L20 23.688l12.178 12.178a20.185 20.185 0 003.689-3.69z"
          fill="#D80027"
        />
        <path
          d="M16.521 6.087l3.479.87 3.478-.87V3.131l-1.391.695L20 1.74l-2.087 2.087-1.392-.695v2.956z"
          fill="#FFDA44"
        />
        <path
          d="M16.521 6.087V8.26c0 2.663 3.479 3.478 3.479 3.478s3.478-.816 3.478-3.478V6.087h-6.957z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193458">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Jersey(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Jordan.tsx
Tamaño: 1132 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Jordan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193571)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M12.175 13.043h26.582C35.93 5.428 28.6 0 20 0A19.935 19.935 0 005.859 5.859l6.316 7.184z"
          fill="#000"
        />
        <path
          d="M12.175 26.956h26.582C35.93 34.573 28.6 40 20 40a19.935 19.935 0 01-14.142-5.858l6.316-7.186z"
          fill="#6DA544"
        />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#D80027" />
        <path
          d="M7.938 15.652l1.098 2.296 2.479-.573-1.11 2.289 1.993 1.58-2.482.56.007 2.544-1.985-1.592-1.985 1.592.007-2.544-2.481-.56 1.993-1.58-1.11-2.29 2.478.574 1.098-2.296z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193571">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Jordan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Kazakhstan.tsx
Tamaño: 1147 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Kazakhstan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192567)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#338AF3" />
        <path
          d="M31.304 20.217H8.695c0 1.561 1.36 2.827 2.92 2.827h-.094a2.826 2.826 0 002.826 2.826 2.826 2.826 0 002.827 2.826h5.652a2.826 2.826 0 002.826-2.826 2.826 2.826 0 002.826-2.826h-.094c1.56 0 2.92-1.266 2.92-2.827z"
          fill="#FFDA44"
        />
        <path d="M27.826 16.522a7.826 7.826 0 01-15.652 0" fill="#338AF3" />
        <path
          d="M25.977 16.522l-2.443 1.149 1.301 2.365-2.652-.507-.336 2.68-1.848-1.971-1.847 1.97-.336-2.68-2.653.508 1.301-2.365-2.442-1.15 2.442-1.148-1.3-2.366 2.652.508.336-2.68 1.847 1.97 1.848-1.97.336 2.68 2.652-.508-1.3 2.366 2.442 1.149z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192567">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Kazakhstan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Kenya.tsx
Tamaño: 1813 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Kenya(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192679)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M20 0C12.07 0 5.22 4.614 1.984 11.304h36.031C34.78 4.614 27.93 0 20 0z" fill="#000" />
        <path d="M20 40c-7.93 0-14.78-4.614-18.016-11.304h36.031C34.78 35.386 27.93 40 20 40z" fill="#496E2D" />
        <path
          d="M39.056 13.913H.944A19.985 19.985 0 000 20c0 2.123.332 4.168.944 6.087h38.111c.613-1.92.945-3.964.945-6.087 0-2.122-.332-4.168-.944-6.087z"
          fill="#A2001D"
        />
        <path
          d="M26.227 9.242L23.858 8.15 20 16.887 16.14 8.15l-2.369 1.093L18.563 20l-4.791 10.758 2.368 1.093L20 23.113l3.858 8.738 2.369-1.093L21.436 20l4.791-10.758z"
          fill="#F0F0F0"
        />
        <path
          d="M21.608 10.273a18.418 18.418 0 00-1.609-1.577s-.691.575-1.608 1.577v19.454c.917 1.002 1.608 1.577 1.608 1.577s.692-.575 1.609-1.577V10.273z"
          fill="#F0F0F0"
        />
        <path
          d="M15.652 14.003v11.994c.97 1.716 2.155 3.123 3.044 4.056V9.947c-.889.932-2.075 2.34-3.044 4.056zM24.348 14.003c-.969-1.716-2.155-3.124-3.043-4.056v20.107c.888-.933 2.074-2.34 3.043-4.057V14.003z"
          fill="#A2001D"
        />
        <path
          d="M24.348 14.003v11.994c.98-1.739 1.739-3.794 1.739-5.997s-.759-4.258-1.74-5.997zM15.651 14.003v11.994c-.98-1.739-1.739-3.794-1.739-5.997s.758-4.258 1.74-5.997z"
          fill="#000"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192679">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Kenya(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Kiribati.tsx
Tamaño: 4055 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Kiribati(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192791)">
        <path d="M0 20C0 8.954 8.954 0 20 0s20 8.954 20 20" fill="#D80027" />
        <path
          d="M26.956 18.6l-2.843 1.337 1.514 2.753-3.086-.59-.392 3.117L20 22.924l-2.15 2.293-.39-3.118-3.087.59 1.514-2.752-2.843-1.337 2.843-1.337-1.514-2.753 3.086.59.392-3.118L20 14.275l2.15-2.293.39 3.118 3.087-.59-1.513 2.753 2.842 1.337zM25.216 6.522h-3.913a1.304 1.304 0 00-2.609 0h-3.913c0 .72.628 1.304 1.348 1.304h-.044c0 .72.584 1.304 1.305 1.304 0 .72.584 1.305 1.304 1.305h2.609c.72 0 1.304-.584 1.304-1.305.72 0 1.305-.584 1.305-1.304h-.044c.72 0 1.348-.584 1.348-1.304z"
          fill="#FFDA44"
        />
        <path d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20h40z" fill="#F0F0F0" />
        <path
          d="M19.998 40c6.252 0 11.833-2.869 15.5-7.361-.66-.45-1.015-1.177-2.166-1.177-1.667 0-1.667 1.524-3.334 1.524-1.666 0-1.666-1.524-3.333-1.524-1.667 0-1.667 1.524-3.333 1.524-1.667 0-1.667-1.524-3.334-1.524s-1.667 1.524-3.333 1.524c-1.666 0-1.666-1.524-3.333-1.524-1.667 0-1.667 1.524-3.334 1.524s-1.667-1.524-3.333-1.524c-1.151 0-1.508.726-2.167 1.176C8.166 37.131 13.747 40 19.998 40zM36.666 22.55c-1.667 0-1.667-1.523-3.334-1.523-1.666 0-1.666 1.524-3.333 1.524-1.666 0-1.666-1.524-3.333-1.524-1.667 0-1.667 1.524-3.333 1.524-1.667 0-1.667-1.524-3.334-1.524s-1.667 1.524-3.333 1.524c-1.667 0-1.667-1.524-3.333-1.524-1.667 0-1.667 1.524-3.334 1.524s-1.667-1.524-3.333-1.524c-1.667 0-1.667 1.524-3.333 1.524-1.658 0-1.668-1.507-3.308-1.523.047.914.156 1.813.32 2.69 1.33.196 1.446 1.5 2.988 1.5 1.666 0 1.666-1.524 3.333-1.524 1.666 0 1.666 1.523 3.333 1.523 1.667 0 1.667-1.523 3.334-1.523 1.666 0 1.666 1.523 3.333 1.523 1.667 0 1.667-1.523 3.333-1.523 1.667 0 1.667 1.523 3.334 1.523s1.667-1.523 3.333-1.523c1.667 0 1.667 1.523 3.333 1.523 1.667 0 1.667-1.523 3.334-1.523 1.666 0 1.666 1.523 3.333 1.523 1.542 0 1.658-1.303 2.987-1.498.165-.879.274-1.777.32-2.691-1.64.016-1.65 1.523-3.307 1.523zM33.332 26.244c-1.667 0-1.667 1.524-3.334 1.524-1.666 0-1.666-1.524-3.333-1.524-1.666 0-1.666 1.524-3.333 1.524-1.667 0-1.667-1.524-3.334-1.524-1.666 0-1.666 1.524-3.333 1.524-1.666 0-1.666-1.524-3.333-1.524-1.667 0-1.667 1.524-3.334 1.524-1.666 0-1.666-1.524-3.333-1.524-1.667 0-1.667 1.524-3.333 1.524-1.191 0-1.531-.777-2.236-1.222a19.896 19.896 0 001.815 3.852c.128.024.267.037.42.037 1.667 0 1.667-1.524 3.334-1.524s1.667 1.524 3.333 1.524c1.667 0 1.667-1.524 3.334-1.524s1.667 1.524 3.333 1.524c1.667 0 1.667-1.524 3.333-1.524 1.667 0 1.667 1.524 3.334 1.524s1.667-1.524 3.333-1.524c1.667 0 1.667 1.524 3.333 1.524 1.667 0 1.667-1.524 3.334-1.524 1.666 0 1.666 1.524 3.333 1.524.154 0 .293-.013.42-.037a19.907 19.907 0 001.816-3.852c-.705.444-1.045 1.222-2.236 1.222-1.667 0-1.667-1.524-3.333-1.524z"
          fill="#0052B4"
        />
        <path
          d="M39.938 18.42c-1.604.038-1.626 1.522-3.272 1.522-1.666 0-1.666-1.524-3.333-1.524-1.667 0-1.667 1.524-3.333 1.524-1.667 0-1.667-1.524-3.333-1.524-1.667 0-1.667 1.524-3.334 1.524-1.666 0-1.666-1.524-3.333-1.524-1.667 0-1.667 1.524-3.334 1.524-1.666 0-1.666-1.524-3.333-1.524-1.666 0-1.666 1.524-3.333 1.524-1.667 0-1.667-1.524-3.334-1.524C5 18.418 5 19.942 3.333 19.942c-1.645 0-1.667-1.484-3.271-1.522a20.298 20.298 0 00-.032 2.666c1.636.018 1.647 1.523 3.303 1.523C5 22.609 5 21.085 6.666 21.085c1.667 0 1.667 1.524 3.334 1.524s1.667-1.524 3.334-1.524c1.666 0 1.666 1.524 3.333 1.524 1.666 0 1.666-1.524 3.333-1.524 1.667 0 1.667 1.524 3.333 1.524 1.667 0 1.667-1.524 3.334-1.524 1.666 0 1.666 1.524 3.333 1.524 1.666 0 1.667-1.524 3.333-1.524 1.667 0 1.667 1.524 3.334 1.524 1.656 0 1.667-1.505 3.303-1.523a20.352 20.352 0 00-.032-2.666z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192791">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Kiribati(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Kosovo.tsx
Tamaño: 1420 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Kosovo(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192903)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#0052B4" />
        <path
          d="M8.786 12.174l.431 1.329h1.397l-1.13.82.432 1.33-1.13-.822-1.13.821.431-1.328-1.13-.821h1.397l.432-1.329zM13.133 10.87l.432 1.329h1.397l-1.13.82.431 1.33-1.13-.822-1.13.821.432-1.328-1.13-.822h1.397l.431-1.328zM17.48 9.565l.433 1.33h1.396l-1.13.82.432 1.329-1.13-.821-1.13.82.431-1.328-1.13-.82h1.397l.432-1.33zM31.215 12.174l-.431 1.329h-1.397l1.13.82-.432 1.33 1.13-.822 1.13.821-.431-1.328 1.13-.821h-1.397l-.432-1.329zM26.868 10.87l-.432 1.329h-1.397l1.13.82-.431 1.33 1.13-.822 1.13.821-.432-1.328 1.13-.822H27.3l-.431-1.328zM22.52 9.565l-.432 1.33h-1.397l1.13.82-.431 1.329 1.13-.821 1.13.82-.432-1.328 1.13-.82h-1.396l-.432-1.33z"
          fill="#F0F0F0"
        />
        <path
          d="M23.477 20.87L20 16.521l-1.74.87v1.738l-2.608 1.74h-1.739v2.246a6.957 6.957 0 014.348 6.45H20v-1.74l1.738-1.739 1.74 1.74 1.738-1.74v-1.74l1.74-2.608-3.479-.87z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192903">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Kosovo(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Kuwait.tsx
Tamaño: 938 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Kuwait(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193015)">
        <path
          d="M38.756 26.956A19.957 19.957 0 0040 20c0-2.447-.44-4.79-1.244-6.957L20 11.304l-18.756 1.74A19.958 19.958 0 000 20c0 2.446.44 4.79 1.244 6.956L20 28.696l18.756-1.74z"
          fill="#F0F0F0"
        />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#D80027" />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#6DA544" />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284l7.186-7.185V13.044L5.857 5.858z" fill="#000" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193015">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Kuwait(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Kyrgyzstan.tsx
Tamaño: 1324 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Kyrgyzstan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193129)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#D80027" />
        <path
          d="M29.78 20l-3.996 1.88 2.129 3.87-4.34-.83-.55 4.384L20 26.08l-3.023 3.224-.55-4.384-4.34.83 2.128-3.87L10.22 20l3.996-1.88-2.128-3.87 4.34.83.55-4.384L20 13.92l3.023-3.224.55 4.384 4.34-.83-2.129 3.87L29.781 20z"
          fill="#FFDA44"
        />
        <path d="M20 26.087a6.087 6.087 0 100-12.174 6.087 6.087 0 000 12.174z" fill="#D80027" />
        <path
          d="M16.956 20c-.147 0-.292.008-.434.022.005.843.31 1.614.814 2.214a6.1 6.1 0 011.176-1.947A4.326 4.326 0 0016.956 20zM18.83 23.276a3.468 3.468 0 002.34 0 4.35 4.35 0 00-1.17-2.03 4.35 4.35 0 00-1.17 2.03zM23.01 18.261a3.476 3.476 0 00-6.024 0 6.047 6.047 0 013.012.819 6.047 6.047 0 013.012-.819zM21.486 20.289a6.098 6.098 0 011.176 1.947c.504-.6.81-1.371.814-2.214a4.36 4.36 0 00-1.99.267z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193129">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Kyrgyzstan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Laos.tsx
Tamaño: 933 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Laos(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193241)">
        <path
          d="M38.015 11.304C34.78 4.614 27.93 0 20 0 12.07 0 5.22 4.614 1.984 11.304L20 13.044l18.015-1.74zM1.984 28.696C5.22 35.386 12.071 40 20 40c7.93 0 14.78-4.614 18.015-11.304L20 26.956l-18.016 1.74z"
          fill="#D80027"
        />
        <path
          d="M38.016 11.304H1.985A19.92 19.92 0 000 20c0 3.116.713 6.066 1.985 8.696h36.03A19.918 19.918 0 0040 20a19.92 19.92 0 00-1.984-8.696z"
          fill="#0052B4"
        />
        <path d="M20 26.956a6.956 6.956 0 100-13.912 6.956 6.956 0 000 13.912z" fill="#F0F0F0" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193241">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Laos(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Latvia.tsx
Tamaño: 703 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Latvia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193353)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 0C10.76 0 2.985 6.267.69 14.783h38.622C37.017 6.267 29.24 0 20 0zM20 40c9.241 0 17.017-6.267 19.312-14.782H.689C2.984 33.733 10.76 40 20 40z"
          fill="#A2001D"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193353">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Latvia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Lebanon.tsx
Tamaño: 813 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Lebanon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193466)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 0C12.07 0 5.22 4.614 1.984 11.304h36.031C34.78 4.614 27.93 0 20 0zM20 40c7.929 0 14.78-4.614 18.015-11.304H1.985C5.218 35.386 12.07 40 20 40z"
          fill="#D80027"
        />
        <path d="M25.218 23.478l-5.217-9.565-5.218 9.565h3.913v2.609h2.609v-2.609h3.913z" fill="#6DA544" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193466">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Lebanon(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Lesotho.tsx
Tamaño: 994 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Lesotho(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193579)">
        <path
          d="M0 20c0 3.116.713 6.066 1.985 8.695l18.015.87 18.016-.87A19.92 19.92 0 0040 20a19.92 19.92 0 00-1.984-8.696L20 10.434l-18.015.87A19.92 19.92 0 000 20z"
          fill="#F0F0F0"
        />
        <path d="M20 40c7.929 0 14.78-4.614 18.015-11.304H1.985C5.218 35.386 12.07 40 20 40z" fill="#6DA544" />
        <path d="M20 0C12.07 0 5.22 4.614 1.984 11.304h36.031C34.78 4.614 27.93 0 20 0z" fill="#0052B4" />
        <path
          d="M21.304 19.565v-4.782h-2.608v4.782l-3.151 3.151A5.214 5.214 0 0020 25.218a5.214 5.214 0 004.455-2.502l-3.15-3.15z"
          fill="#000"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193579">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Lesotho(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Liberia.tsx
Tamaño: 1800 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Liberia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193598)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M4.572 7.273H35.43a20.108 20.108 0 00-3.928-3.637h-23a20.106 20.106 0 00-3.929 3.637zM0 20c0 .613.03 1.22.083 1.818h39.834a20.238 20.238 0 000-3.636H.083A20.244 20.244 0 000 20zM2.182 29.09H37.82a19.869 19.869 0 001.428-3.635H.754a19.865 19.865 0 001.428 3.636zM8.5 36.364h23.001a20.113 20.113 0 003.928-3.637H4.572A20.117 20.117 0 008.5 36.364zM.754 14.546h38.494a19.867 19.867 0 00-1.428-3.637H2.182a19.872 19.872 0 00-1.428 3.636z"
          fill="#F0F0F0"
        />
        <path
          d="M9.566 3.636h21.936A19.908 19.908 0 0020.002 0c-2.61 0-7.182 1.346-10.436 3.636zM19.13 10.91h18.69a20.022 20.022 0 00-2.391-3.637H19.13v3.636zM19.13 18.182h20.787a19.927 19.927 0 00-.67-3.636H19.131v3.636zM.754 25.455h38.494c.331-1.172.557-2.388.67-3.637H.084c.112 1.249.339 2.465.67 3.637zM4.572 32.727H35.43a20.033 20.033 0 002.39-3.636H2.183a20.026 20.026 0 002.39 3.636zM20 40c4.282 0 8.248-1.346 11.501-3.636H8.5A19.908 19.908 0 0020 40z"
          fill="#D80027"
        />
        <path d="M.754 14.546a19.925 19.925 0 00-.67 3.636h19.917V0C10.846 0 3.128 6.15.754 14.546z" fill="#0052B4" />
        <path
          d="M11.906 5.217L13.2 9.203h4.19l-3.39 2.463 1.295 3.986-3.39-2.463-3.39 2.463 1.294-3.986-3.39-2.463h4.19l1.296-3.986z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193598">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Liberia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Libya.tsx
Tamaño: 1189 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Libya(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193711)">
        <path
          d="M1.985 11.304A19.92 19.92 0 000 20c0 3.116.713 6.066 1.985 8.696L20 30.435l18.016-1.74A19.92 19.92 0 0040 20a19.92 19.92 0 00-1.984-8.696L20 9.565l-18.015 1.74z"
          fill="#000"
        />
        <path d="M1.984 28.696C5.22 35.386 12.07 40 20 40c7.93 0 14.78-4.614 18.015-11.304H1.984z" fill="#496E2D" />
        <path d="M1.984 11.304h36.03C34.779 4.614 27.928 0 19.999 0 12.07 0 5.22 4.614 1.984 11.304z" fill="#D80027" />
        <path
          d="M24.655 16.343l1.642 2.261 2.657-.862-1.643 2.26 1.64 2.26-2.656-.864-1.644 2.26.002-2.795-2.657-.865 2.658-.861.002-2.794z"
          fill="#F0F0F0"
        />
        <path
          d="M20.177 25.652a5.652 5.652 0 112.689-10.625 6.956 6.956 0 100 9.945c-.8.434-1.715.68-2.689.68z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193711">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Libya(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Liechtenstein.tsx
Tamaño: 825 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Liechtenstein(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193824)">
        <path d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20c.87 0 20-2.609 20-2.609L40 20z" fill="#D80027" />
        <path d="M0 20C0 8.954 8.954 0 20 0s20 8.954 20 20" fill="#0052B4" />
        <path
          d="M14.782 13.913a2.609 2.609 0 00-4.347-1.944v-1.534h.87v-1.74h-.87v-.869h-1.74v.87h-.87v1.739h.87v1.534a2.609 2.609 0 00-3.478 3.888v1.534h8.696v-1.534c.534-.478.87-1.172.87-1.944z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193824">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Liechtenstein(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Lithuania.tsx
Tamaño: 840 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Lithuania(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193963)">
        <path
          d="M38.756 26.957A19.955 19.955 0 0040 20c0-2.446-.44-4.79-1.244-6.956L20 11.304l-18.756 1.74A19.955 19.955 0 000 20c0 2.447.44 4.79 1.244 6.957L20 28.696l18.756-1.74z"
          fill="#6DA544"
        />
        <path d="M38.756 13.043C35.93 5.428 28.6 0 20 0 11.4 0 4.07 5.428 1.244 13.043h37.512z" fill="#FFDA44" />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193963">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Lithuania(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Luxembourg.tsx
Tamaño: 713 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Luxembourg(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194049)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#D80027" />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#338AF3" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194049">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Luxembourg(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Macao.tsx
Tamaño: 1723 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Macao(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194183)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#496E2D" />
        <path
          d="M23.478 19.166c-.49 0-.957.098-1.39.254a4.258 4.258 0 00.396-1.745c0-2.484-2.484-4.347-2.484-4.347s-2.485 1.863-2.485 4.347c0 .628.16 1.216.396 1.745a4.1 4.1 0 00-1.39-.254c-2.484 0-4.347 2.485-4.347 2.485s1.863 2.484 4.348 2.484c1.456 0 2.699-.854 3.478-1.56.78.706 2.022 1.56 3.478 1.56 2.485 0 4.348-2.485 4.348-2.485s-1.864-2.484-4.348-2.484z"
          fill="#F0F0F0"
        />
        <path
          d="M20 7.826l.513 1.58h1.661l-1.343.976.512 1.58L20 10.984l-1.343.976.512-1.58-1.343-.976h1.66L20 7.826zM13.685 10.588l.987.89 1.15-.665-.54 1.214.988.889-1.322-.139-.54 1.214-.276-1.3-1.322-.139 1.151-.664-.276-1.3zM9.063 15.211l1.299.277.664-1.15.14 1.32 1.299.277-1.214.54.139 1.321-.89-.987-1.213.54.664-1.15-.889-.988zM26.315 10.588l-.987.89-1.15-.665.54 1.214-.988.889 1.322-.139.54 1.214.276-1.3 1.322-.139-1.15-.664.275-1.3zM30.94 15.211l-1.3.277-.665-1.15-.139 1.32-1.299.277 1.214.54-.14 1.321.89-.987 1.213.54-.664-1.15.89-.988z"
          fill="#FFDA44"
        />
        <path
          d="M20 31.092a8.655 8.655 0 005.252-1.767H14.748A8.655 8.655 0 0020 31.092zM12.03 25.874a8.692 8.692 0 001.036 1.767h13.869a8.69 8.69 0 001.037-1.767H12.03z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194183">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Macao(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Madagascar.tsx
Tamaño: 753 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Madagascar(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194276)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F2F2F2" />
        <path
          d="M13.043 20v18.756A19.954 19.954 0 0020 40c11.045 0 20-8.954 20-20s-26.957 0-26.957 0z"
          fill="#6DA544"
        />
        <path d="M20 0c-2.447 0-4.79.44-6.957 1.244V20h26.956C40 8.954 31.045 0 20 0z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194276">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Madagascar(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Madeira.tsx
Tamaño: 1247 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Madeira(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194389)">
        <path
          d="M28.695 1.985A19.92 19.92 0 0019.999 0a19.92 19.92 0 00-8.695 1.985L9.564 20l1.74 18.016A19.92 19.92 0 0019.999 40a19.92 19.92 0 008.696-1.984L30.434 20l-1.74-18.015z"
          fill="#FFDA44"
        />
        <path
          d="M11.304 1.985C4.614 5.22 0 12.071 0 20c0 7.93 4.614 14.78 11.304 18.015V1.985zM28.695 1.985v36.03C35.385 34.78 40 27.929 40 20c0-7.93-4.615-14.78-11.305-18.015z"
          fill="#0052B4"
        />
        <path
          d="M25.652 21.74l1.304 1.738v-6.956l-1.304 1.739h-3.913v-3.913l1.739-1.305H16.52l1.74 1.305v3.913h-3.914l-1.304-1.74v6.957l1.304-1.739h3.913v3.913l-1.739 1.304h6.957l-1.74-1.304V21.74h3.914z"
          fill="#D80027"
        />
        <path
          d="M25.218 19.13H20.87v-4.347h-1.739v4.348h-4.348v1.738h4.348v4.348h1.74V20.87h4.347v-1.738z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194389">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Madeira(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Malawi.tsx
Tamaño: 1017 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Malawi(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194501)">
        <path
          d="M0 20c0 2.446.44 4.79 1.244 6.956l18.756.87 18.756-.87A19.956 19.956 0 0040 20c0-2.447-.44-4.79-1.244-6.957L20 12.173l-18.756.87A19.958 19.958 0 000 20z"
          fill="#D80027"
        />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#000" />
        <path d="M38.756 26.956H1.244C4.07 34.572 11.401 40 20 40c8.6 0 15.93-5.428 18.756-13.044z" fill="#496E2D" />
        <path
          d="M25.977 9.565l-2.442-1.149 1.3-2.365-2.652.507-.336-2.68-1.848 1.971-1.847-1.97-.336 2.68-2.653-.508 1.301 2.365-2.442 1.15h11.955z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194501">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Malawi(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Malaysia.tsx
Tamaño: 1285 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Malaysia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194613)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M19.13 20H40c0-1.805-.24-3.554-.689-5.217h-20.18V20zM19.13 9.565h17.935a20.104 20.104 0 00-4.615-5.217H19.13v5.217zM20 40c4.707 0 9.034-1.627 12.45-4.348H7.55A19.914 19.914 0 0020 40zM2.936 30.435h34.129a19.88 19.88 0 002.247-5.217H.689a19.878 19.878 0 002.247 5.217z"
          fill="#D80027"
        />
        <path d="M20 20V0C8.954 0 0 8.954 0 20h20z" fill="#0052B4" />
        <path
          d="M13.3 17.12a4.946 4.946 0 112.352-9.297 6.087 6.087 0 100 8.702c-.7.379-1.5.594-2.352.594z"
          fill="#FFDA44"
        />
        <path
          d="M14.693 8.696l.878 1.836 1.983-.459-.888 1.832 1.595 1.264-1.986.448.006 2.035-1.588-1.273-1.588 1.273.005-2.035-1.985-.448 1.595-1.264-.888-1.832 1.983.459.878-1.836z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194613">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Malaysia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Maldives.tsx
Tamaño: 731 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Maldives(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193606)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#D80027" />
        <path d="M6.957 10.435h26.087v19.13H6.957v-19.13z" fill="#6DA544" />
        <path
          d="M23.22 25.652a5.652 5.652 0 112.689-10.625 6.957 6.957 0 100 9.945c-.8.434-1.715.68-2.689.68z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193606">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Maldives(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Mali.tsx
Tamaño: 835 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Mali(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193719)">
        <path
          d="M26.957 1.244A19.957 19.957 0 0020 0c-2.446 0-4.79.44-6.956 1.244L11.304 20l1.74 18.756A19.955 19.955 0 0020 40c2.447 0 4.79-.44 6.957-1.244L28.696 20l-1.74-18.756z"
          fill="#FFDA44"
        />
        <path d="M40 20c0-8.6-5.427-15.93-13.043-18.756v37.512C34.573 35.93 40.001 28.6 40.001 20z" fill="#D80027" />
        <path d="M0 20c0 8.6 5.428 15.93 13.043 18.756V1.244C5.428 4.07 0 11.401 0 20z" fill="#6DA544" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193719">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Mali(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Malta.tsx
Tamaño: 727 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Malta(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193832)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M20 0c11.046 0 20 8.954 20 20s-8.954 20-20 20" fill="#D80027" />
        <path
          d="M13.913 7.826V5.217h-2.609v2.61H8.695v2.608h2.61v2.608h2.608v-2.608h2.608V7.826h-2.608z"
          fill="#ACABB1"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193832">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Malta(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/MarshallIsland.tsx
Tamaño: 1208 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function MarshallIsland(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193956)">
        <path
          d="M20 40c11.046 0 20-8.954 20-20 0-3.357-.828-6.52-2.29-9.297l-17.733 9.32 9.32-17.734A19.911 19.911 0 0020 0C8.954 0 0 8.954 0 20a19.938 19.938 0 005.858 14.142A19.937 19.937 0 0020 40z"
          fill="#0052B4"
        />
        <path
          d="M37.69 10.725a19.995 19.995 0 00-3.572-4.844 19.994 19.994 0 00-4.843-3.57L5.834 34.166l31.855-23.441z"
          fill="#F0F0F0"
        />
        <path d="M5.834 34.166l31.855-23.441a19.995 19.995 0 00-3.57-4.844L5.833 34.166z" fill="#FF9811" />
        <path
          d="M17.368 11.728l-2.443 1.15 1.3 2.365-2.652-.508-.336 2.68-1.847-1.97-1.848 1.97-.336-2.68-2.652.508 1.3-2.366-2.442-1.149 2.443-1.149-1.3-2.365 2.651.507.336-2.68 1.848 1.971 1.847-1.97.336 2.68 2.653-.508-1.3 2.365 2.442 1.15z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193956">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function MarshallIsland(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Martinique.tsx
Tamaño: 2269 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Martinique(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194057)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M39.83 17.391a19.91 19.91 0 00-5.687-11.533A19.91 19.91 0 0022.609.17v17.22h17.22zM17.392.171A19.91 19.91 0 005.858 5.858 19.911 19.911 0 00.172 17.392h17.22V.171zM.172 22.609a19.91 19.91 0 005.686 11.533 19.913 19.913 0 0011.534 5.687v-17.22H.172zM22.61 39.829a19.91 19.91 0 0011.533-5.687 19.91 19.91 0 005.686-11.533H22.61v17.22z"
          fill="#0052B4"
        />
        <path
          d="M26.827 12.69c0-.266.216-.482.482-.482h1.033a2.965 2.965 0 002.962-2.961 2.965 2.965 0 00-2.962-2.962h-.98a2.04 2.04 0 00-1.224-.389c-.989 0-1.79.641-1.79 1.432 0 .783.786 1.418 1.761 1.43v.006h2.233a.483.483 0 010 .965H27.31a2.965 2.965 0 00-2.961 2.961 2.965 2.965 0 002.961 2.962h3.995v-2.48H27.31a.482.482 0 01-.482-.482zM11.175 12.69c0-.266.216-.482.482-.482h1.033a2.965 2.965 0 002.962-2.961 2.965 2.965 0 00-2.962-2.962h-.981a2.04 2.04 0 00-1.224-.389c-.988 0-1.79.641-1.79 1.432 0 .783.786 1.418 1.762 1.43v.006h2.233a.483.483 0 010 .965h-1.033a2.965 2.965 0 00-2.962 2.961 2.965 2.965 0 002.962 2.962h3.995v-2.48h-3.995a.482.482 0 01-.482-.482zM26.827 31.142c0-.266.216-.482.482-.482h1.034a2.965 2.965 0 002.961-2.962 2.965 2.965 0 00-2.961-2.961h-.982a2.04 2.04 0 00-1.223-.39c-.989 0-1.79.642-1.79 1.432 0 .784.786 1.419 1.761 1.431v.006h2.233a.483.483 0 010 .964H27.31a2.965 2.965 0 00-2.961 2.962 2.965 2.965 0 002.961 2.962h3.995v-2.48H27.31a.483.483 0 01-.482-.482zM11.175 31.142c0-.266.216-.482.482-.482h1.033a2.965 2.965 0 002.962-2.962 2.965 2.965 0 00-2.962-2.961h-.981a2.04 2.04 0 00-1.224-.39c-.988 0-1.79.642-1.79 1.432 0 .784.786 1.419 1.762 1.431v.006h2.233a.483.483 0 010 .964h-1.033a2.965 2.965 0 00-2.962 2.962 2.965 2.965 0 002.962 2.962h3.995v-2.48h-3.995a.482.482 0 01-.482-.482z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194057">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Martinique(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Mauritania.tsx
Tamaño: 835 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Mauritania(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194190)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#496E2D" />
        <path
          d="M20 23.106a6.958 6.958 0 01-6.795-5.466 6.956 6.956 0 1013.59 0 6.958 6.958 0 01-6.796 5.466z"
          fill="#FFDA44"
        />
        <path
          d="M19.999 13.913l.647 1.993h2.096l-1.695 1.232.647 1.992L20 17.9l-1.695 1.232.647-1.993-1.695-1.232h2.095L20 13.913z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194190">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Mauritania(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Mauritius.tsx
Tamaño: 939 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Mauritius(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194284)">
        <path
          d="M2.432 10.435L20 12.174l17.568-1.74C34.176 4.219 27.581 0 20 0 12.419 0 5.824 4.218 2.432 10.435z"
          fill="#D80027"
        />
        <path
          d="M2.432 29.565L20 31.305l17.568-1.74A19.91 19.91 0 0040 20l-20-1.74L0 20c0 3.465.881 6.724 2.432 9.565z"
          fill="#FFDA44"
        />
        <path d="M2.432 10.435A19.91 19.91 0 000 20h40a19.91 19.91 0 00-2.432-9.565H2.432z" fill="#0052B4" />
        <path d="M20 40c7.58 0 14.176-4.218 17.568-10.435H2.432C5.824 35.782 12.419 40 20 40z" fill="#6DA544" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194284">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Mauritius(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Mayotte.tsx
Tamaño: 8101 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Mayotte(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
      <g clipPath="url(#clip0_2435_78664)">
        <mask
          id="mask0_2435_78664"
          style={{ maskType: 'alpha' }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="40"
          height="40"
        >
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#F0F0F0"
          />
        </mask>
        <g mask="url(#mask0_2435_78664)">
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#F0F0F0"
          />
          <path
            d="M18.697 17.3349C18.6635 17.2179 18.5653 17.1311 18.4632 17.1311C18.361 17.1311 18.2535 17.2074 18.2292 17.3066C17.9366 18.5054 18.8859 19.716 20.101 19.734C21.3299 19.7523 22.382 18.5928 22.0312 17.3066C22.0016 17.1981 21.8804 17.126 21.768 17.1311C21.6659 17.1358 21.556 17.2352 21.5338 17.3349C21.4168 17.8614 20.8531 18.5426 20.101 18.5349C19.3573 18.5273 18.8724 17.9491 18.697 17.3349Z"
            fill="#F0F0F0"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M24.4592 20.7578H15.8047V20.7578C15.8041 20.7578 15.8035 20.7578 15.803 20.7578C15.2538 20.7578 14.8086 21.203 14.8086 21.7522C14.8086 22.2942 15.2423 22.7349 15.7816 22.7463C15.2423 22.7577 14.8086 23.1984 14.8086 23.7405C14.8086 24.2825 15.2423 24.7232 15.7816 24.7346C15.2423 24.746 14.8086 25.1867 14.8086 25.7287C14.8086 26.2779 15.2538 26.7231 15.803 26.7231C16.3518 26.7231 16.7968 26.2784 16.7973 25.7296H16.9727C16.9731 26.2784 17.4181 26.7231 17.967 26.7231C18.5159 26.7231 18.9609 26.2784 18.9614 25.7296H19.1406C19.1411 26.2784 19.5861 26.7231 20.135 26.7231C20.6839 26.7231 21.1289 26.2784 21.1294 25.7296H21.3008C21.3013 26.2784 21.7463 26.7231 22.2951 26.7231C22.844 26.7231 23.289 26.2784 23.2895 25.7296H23.4648C23.4653 26.2784 23.9103 26.7231 24.4592 26.7231C25.0084 26.7231 25.4536 26.2779 25.4536 25.7287C25.4536 25.1867 25.0199 24.746 24.4806 24.7346C25.0199 24.7232 25.4536 24.2825 25.4536 23.7405C25.4536 23.1984 25.0199 22.7577 24.4806 22.7463C25.0199 22.735 25.4536 22.2942 25.4536 21.7522C25.4536 21.2038 25.0096 20.7591 24.4615 20.7578H24.4592Z"
            fill="#D80027"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M15.7816 18.7678C15.2423 18.7792 14.8086 19.2199 14.8086 19.7619C14.8086 20.3111 15.2538 20.7563 15.803 20.7563L15.8047 20.7563V20.757H24.4615V20.7563C25.0096 20.7551 25.4536 20.3103 25.4536 19.7619C25.4536 19.2199 25.0199 18.7792 24.4806 18.7678C25.0199 18.7564 25.4536 18.3157 25.4536 17.7737C25.4536 17.2316 25.0199 16.7909 24.4806 16.7795C25.0199 16.7682 25.4536 16.3274 25.4536 15.7854C25.4536 15.2362 25.0084 14.791 24.4592 14.791C23.9101 14.791 23.465 15.2361 23.4648 15.7852H23.2895C23.2894 15.2361 22.8442 14.791 22.2951 14.791C21.746 14.791 21.3009 15.2361 21.3008 15.7852H21.1294C21.1292 15.2361 20.6841 14.791 20.135 14.791C19.5859 14.791 19.1407 15.2361 19.1406 15.7852H18.9614C18.9613 15.2361 18.5161 14.791 17.967 14.791C17.4179 14.791 16.9728 15.2361 16.9727 15.7852H16.7973C16.7972 15.2361 16.3521 14.791 15.803 14.791C15.2538 14.791 14.8086 15.2362 14.8086 15.7854C14.8086 16.3274 15.2423 16.7682 15.7816 16.7795C15.2423 16.7909 14.8086 17.2316 14.8086 17.7737C14.8086 18.3157 15.2423 18.7564 15.7816 18.7678Z"
            fill="#0052B4"
          />
          <path
            d="M18.6618 17.3349C18.6284 17.2179 18.5302 17.1311 18.428 17.1311C18.3259 17.1311 18.2183 17.2074 18.1941 17.3066C17.9014 18.5054 18.8507 19.716 20.0658 19.734C21.2948 19.7523 22.3468 18.5928 21.996 17.3066C21.9664 17.1981 21.8452 17.126 21.7328 17.1311C21.6308 17.1358 21.5208 17.2352 21.4987 17.3349C21.3817 17.8614 20.8179 18.5426 20.0658 18.5349C19.3222 18.5273 18.8373 17.9491 18.6618 17.3349Z"
            fill="#F0F0F0"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M21.8681 21.8687C21.8681 21.7395 21.9729 21.6348 22.1021 21.6348C22.2313 21.6348 22.336 21.7395 22.336 21.8687V22.4601L22.8491 22.1639C22.961 22.0993 23.1041 22.1376 23.1687 22.2495C23.2333 22.3614 23.195 22.5045 23.083 22.5691L22.5805 22.8593L23.0952 23.1565C23.2071 23.2211 23.2454 23.3642 23.1808 23.4761C23.1162 23.588 22.9731 23.6263 22.8612 23.5617L22.336 23.2585V23.8575C22.336 23.9867 22.2313 24.0914 22.1021 24.0914C21.9729 24.0914 21.8681 23.9867 21.8681 23.8575V23.2705L21.3608 23.5635C21.2489 23.6281 21.1058 23.5897 21.0412 23.4778C20.9765 23.3659 21.0149 23.2228 21.1268 23.1582L21.6446 22.8593L21.1389 22.5673C21.027 22.5027 20.9887 22.3596 21.0533 22.2477C21.1179 22.1358 21.261 22.0975 21.3729 22.1621L21.8681 22.448V21.8687Z"
            fill="#FFDA44"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M17.8876 21.8687C17.8876 21.7395 17.9924 21.6348 18.1216 21.6348C18.2508 21.6348 18.3556 21.7395 18.3556 21.8687V22.4601L18.8686 22.1639C18.9805 22.0993 19.1236 22.1376 19.1882 22.2495C19.2528 22.3614 19.2145 22.5045 19.1026 22.5691L18.6 22.8593L19.1147 23.1565C19.2266 23.2211 19.265 23.3642 19.2003 23.4761C19.1357 23.588 18.9926 23.6263 18.8807 23.5617L18.3556 23.2585V23.8575C18.3556 23.9867 18.2508 24.0914 18.1216 24.0914C17.9924 24.0914 17.8876 23.9867 17.8876 23.8575V23.2705L17.3803 23.5635C17.2684 23.6281 17.1253 23.5897 17.0607 23.4778C16.9961 23.3659 17.0344 23.2228 17.1463 23.1582L17.6641 22.8593L17.1584 22.5673C17.0465 22.5027 17.0082 22.3596 17.0728 22.2477C17.1374 22.1358 17.2805 22.0975 17.3924 22.1621L17.8876 22.448V21.8687Z"
            fill="#FFDA44"
          />
          <path
            d="M11.1247 14.2637C11.3414 14.6971 10.2474 15.1411 10.2474 15.1411C12.3531 15.9599 10.9643 16.7191 11.7974 17.2468C12.2987 17.5643 12.3703 18.0921 12.3396 18.486C12.3163 18.7848 12.0153 18.9459 11.7248 18.8726L8.98978 18.1827C8.98978 18.1827 11.1247 19.4694 12.3531 20.3176C13.9083 21.3916 14.5494 22.7269 14.5758 24.6168C14.6134 27.3135 12.9434 29.9278 10.2474 29.9981C6.88386 30.0857 6.82557 26.0206 6.82557 26.0206H7.32276C7.32276 26.0206 8.09072 28.7378 9.45772 28.799C10.8748 28.8624 11.7974 28.1555 11.7974 26.0206C11.7974 22.6214 7.32258 23.0374 6.6501 19.0016C6.26406 16.6848 7.52768 14.7023 10.2474 13.9712C10.5962 13.8775 10.9632 13.9407 11.1247 14.2637Z"
            fill="#A4A4A4"
          />
          <path
            d="M29.1409 14.2637C28.9242 14.6971 30.0183 15.1411 30.0183 15.1411C27.9125 15.9599 29.3013 16.7191 28.4682 17.2468C27.9669 17.5643 27.8953 18.0921 27.926 18.486C27.9493 18.7848 28.2503 18.9459 28.5409 18.8726L31.2758 18.1827C31.2758 18.1827 29.1409 19.4694 27.9125 20.3176C26.3573 21.3916 25.7162 22.7269 25.6899 24.6168C25.6522 27.3135 27.3222 29.9278 30.0183 29.9981C33.3818 30.0857 33.4401 26.0206 33.4401 26.0206H32.9429C32.9429 26.0206 32.1749 28.7378 30.8079 28.799C29.3908 28.8624 28.4682 28.1555 28.4682 26.0206C28.4682 22.6214 32.943 23.0374 33.6155 19.0016C34.0016 16.6848 32.7379 14.7023 30.0183 13.9712C29.6695 13.8775 29.3024 13.9407 29.1409 14.2637Z"
            fill="#A4A4A4"
          />
          <rect x="8" y="9" width="24" height="2" fill="#D80027" />
          <path
            d="M35.5147 18.2129L34.2278 18.944C33.8312 20.3714 33.4753 20.9783 32.707 21.8686L33.3212 22.5998C35.1611 21.7091 35.5747 20.6927 35.5147 18.2129Z"
            fill="#434343"
          />
          <path
            d="M4.75488 18.2129L6.04171 18.944C6.43836 20.3714 6.79424 20.9783 7.5625 21.8686L6.94833 22.5998C5.10844 21.7091 4.69481 20.6927 4.75488 18.2129Z"
            fill="#434343"
          />
        </g>
      </g>
      <defs>
        <clipPath id="clip0_2435_78664">
          <rect width="40" height="40" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Mayotte(props: React.SVGProps<SVGSVGElement>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Melilla.tsx
Tamaño: 1853 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Melilla(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194397)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#338AF3" />
        <path d="M9.564 21.74h20.87v2.608H9.564v-2.609z" fill="#818085" />
        <path
          d="M13.043 13.913l6.957.87 6.956-.87V9.74l-2.783 1.391L20 6.957l-4.175 4.173-2.782-1.39v4.173z"
          fill="#FFDA44"
        />
        <path
          d="M11.304 26.957H8.695v-4.783l.87-1.304-.87-1.305v-3.043h2.61v10.435zM31.304 26.957h-2.609V16.522h2.61v3.043l-.87 1.326.87 1.283v4.783z"
          fill="#F0F0F0"
        />
        <path d="M8.695 19.565h22.609v2.609H8.695v-2.609z" fill="#ACABB1" />
        <path
          d="M20 30.435a6.964 6.964 0 01-6.957-6.957v-9.565h13.913v9.565A6.964 6.964 0 0120 30.435z"
          fill="#F0F0F0"
        />
        <path
          d="M20 27.826a4.353 4.353 0 01-4.348-4.348v-6.956h8.696v6.956A4.353 4.353 0 0120 27.826z"
          fill="#0052B4"
        />
        <path
          d="M13.043 13.913h2.609v2.609h-2.609v-2.609zM24.348 13.913h2.608v2.609h-2.608v-2.609zM24.348 19.565h2.608v2.609h-2.608v-2.609zM13.043 19.565h2.609v2.609h-2.609v-2.609zM18.695 13.913h2.609v2.609h-2.609v-2.609zM20 27.826c-.455 0-.893-.07-1.305-.2v2.684a6.949 6.949 0 002.61 0v-2.684c-.413.13-.85.2-1.305.2zM15.709 24.184l-2.082 2.082a6.98 6.98 0 001.509 2.18l1.844-1.844a4.34 4.34 0 01-1.271-2.418zM26.37 26.266l-2.082-2.082a4.342 4.342 0 01-1.27 2.419l1.843 1.843a6.986 6.986 0 001.51-2.18z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194397">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Melilla(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Mexico.tsx
Tamaño: 1096 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Mexico(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194509)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M40 20c0-7.93-4.615-14.78-11.305-18.015v36.03C35.385 34.782 40 27.93 40 20z" fill="#D80027" />
        <path
          d="M0 20c0 7.93 4.614 14.78 11.304 18.016V1.985C4.614 5.22 0 12.07 0 20zM14.783 20a5.217 5.217 0 1010.435 0v-1.739H14.783v1.74z"
          fill="#6DA544"
        />
        <path
          d="M26.956 16.522H21.74a1.74 1.74 0 00-3.479 0h-5.217c0 .96.837 1.739 1.797 1.739h-.058c0 .96.779 1.739 1.74 1.739 0 .96.778 1.739 1.738 1.739h3.479c.96 0 1.739-.779 1.739-1.74.96 0 1.739-.778 1.739-1.738h-.058c.96 0 1.797-.779 1.797-1.74z"
          fill="#FF9811"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194509">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Mexico(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Micronesia.tsx
Tamaño: 1002 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Micronesia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194621)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#338AF3" />
        <path
          d="M20 8.696l.862 2.657h2.794l-2.26 1.642.863 2.657L20 14.01l-2.26 1.642.863-2.657-2.26-1.642h2.794l.863-2.657zM8.695 20l2.657-.863v-2.794l1.643 2.26 2.657-.863L14.01 20l1.642 2.26-2.657-.863-1.643 2.26v-2.794L8.695 20zM20 31.304l-.864-2.657h-2.794l2.26-1.642-.863-2.657 2.26 1.642 2.26-1.642-.863 2.657 2.26 1.642h-2.793l-.864 2.657zM31.304 20l-2.657.863v2.794l-1.642-2.26-2.657.863L25.99 20l-1.642-2.26 2.657.863 1.642-2.26v2.794l2.657.863z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194621">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Micronesia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Moldova.tsx
Tamaño: 1390 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Moldova(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193614)">
        <path
          d="M28.695 1.985A19.92 19.92 0 0019.999 0a19.92 19.92 0 00-8.695 1.985L9.564 20l1.74 18.016A19.92 19.92 0 0019.999 40a19.92 19.92 0 008.696-1.984L30.434 20l-1.74-18.015z"
          fill="#FFDA44"
        />
        <path d="M11.304 1.985C4.614 5.22 0 12.071 0 20c0 7.93 4.615 14.78 11.304 18.015V1.985z" fill="#0052B4" />
        <path d="M28.695 1.985v36.03C35.385 34.78 40 27.929 40 20c0-7.93-4.615-14.78-11.305-18.015z" fill="#D80027" />
        <path
          d="M26.956 15.736h-4.783a2.174 2.174 0 10-4.347 0h-4.783c0 1.182 1.03 2.14 2.212 2.14h-.072a2.14 2.14 0 002.14 2.14 2.14 2.14 0 001.745 2.103l-1.686 3.808a6.934 6.934 0 002.617.511c.927 0 1.81-.182 2.618-.511l-1.687-3.808a2.14 2.14 0 001.745-2.102 2.14 2.14 0 002.14-2.14h-.07c1.181 0 2.21-.96 2.21-2.141z"
          fill="#FF9811"
        />
        <path d="M20 18.696L17.174 20v2.609L20 24.348l2.826-1.74V20L20 18.696z" fill="#0052B4" />
        <path d="M17.174 17.391h5.652V20h-5.652v-2.609z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193614">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Moldova(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Monaco.tsx
Tamaño: 572 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Monaco(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193727)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M0 20C0 8.954 8.954 0 20 0s20 8.954 20 20" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193727">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Monaco(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Mongolia.tsx
Tamaño: 1248 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Mongolia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193840)">
        <path
          d="M20 40c2.446 0 4.79-.44 6.956-1.244L27.826 20l-.87-18.756A19.958 19.958 0 0020 0c-2.447 0-4.79.44-6.957 1.244L12.173 20l.87 18.756A19.955 19.955 0 0020 40z"
          fill="#0052B4"
        />
        <path
          d="M0 20c0 8.6 5.428 15.93 13.043 18.756V1.244C5.428 4.07 0 11.401 0 20zM26.957 1.244v37.512C34.573 35.93 40.001 28.6 40.001 20c0-8.6-5.428-15.93-13.044-18.756z"
          fill="#A2001D"
        />
        <path
          d="M9.566 20h1.74v6.956h-1.74V20zM2.61 20h1.739v6.956h-1.74V20zM6.958 24.348a1.74 1.74 0 100-3.478 1.74 1.74 0 000 3.478zM6.957 17.391a.87.87 0 100-1.739.87.87 0 000 1.74zM5.219 25.218h3.478v1.739H5.219v-1.74zM5.219 18.26h3.478V20H5.219v-1.74zM6.956 10.435l.616 1.895h1.993l-1.612 1.171.615 1.896-1.612-1.172-1.612 1.172.616-1.896-1.612-1.17H6.34l.616-1.896z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193840">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Mongolia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Montenegro.tsx
Tamaño: 1412 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Montenegro(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193970)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M40 20c0-6.864-3.459-12.92-8.728-16.522H8.728C3.458 7.08 0 13.136 0 20c0 6.864 3.459 12.92 8.728 16.522h22.544C36.542 32.92 40 26.864 40 20z"
          fill="#A2001D"
        />
        <path
          d="M15.652 14.783h8.696v-3.479l-1.74.87L20 9.565l-2.608 2.609-1.74-.87v3.479zM27.826 20H23.48a2.007 2.007 0 10-3.506-1.948A2.006 2.006 0 1016.468 20h-4.294c0 1.33 1.158 2.408 2.488 2.408h-.08c0 1.09.725 2.012 1.72 2.308l-1.954 1.954 1.844 1.845 2.617-2.617c.102.038.208.068.318.088l-1.581 3.57a6.5 6.5 0 002.454.48 6.5 6.5 0 002.454-.48l-1.581-3.57c.11-.02.216-.05.318-.088l2.617 2.617 1.844-1.845-1.954-1.954a2.409 2.409 0 001.72-2.308h-.08c1.33 0 2.488-1.078 2.488-2.408z"
          fill="#FFDA44"
        />
        <path d="M20 21.304l-2.826 1.305v2.608L20 26.957l2.826-1.74V22.61L20 21.304z" fill="#6DA544" />
        <path d="M17.174 20h5.652v3.478h-5.652V20z" fill="#0052B4" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193970">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Montenegro(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Montserrat.tsx
Tamaño: 1314 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Montserrat(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194065)">
        <path
          d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20C0 20.005 20 .002 20 0c11.046 0 20 8.954 20 20z"
          fill="#0052B4"
        />
        <path
          d="M19.947 20h.054v-.053l-.054.053zM20 10.435V0h-.003C8.952.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.053V16.31l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M10.12 2.609a20.095 20.095 0 00-7.51 7.51V20h5.217V7.826H20V2.61h-9.882z" fill="#D80027" />
        <path d="M20 17.54l-7.105-7.105h-2.46L20.002 20v-2.46z" fill="#D80027" />
        <path
          d="M22.61 10.435V20c0 4.66 6.086 6.087 6.086 6.087s6.087-1.428 6.087-6.087v-9.565H22.61z"
          fill="#338AF3"
        />
        <path d="M22.61 20c0 4.66 6.086 6.087 6.086 6.087s6.087-1.428 6.087-6.087H22.61z" fill="#A2001D" />
        <path d="M31.305 14.783h-1.739v-1.74h-1.739v1.74h-1.74v1.739h1.74v5.217h1.74v-5.217h1.738v-1.74z" fill="#000" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194065">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Montserrat(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Morocco.tsx
Tamaño: 952 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Morocco(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194197)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#D80027" />
        <path
          d="M31.818 16.413H22.79L20 7.826l-2.79 8.587h-9.03l7.306 5.308-2.79 8.587L19.998 25l7.305 5.307-2.79-8.587 7.304-5.308zm-14.29 4.643l.944-2.904h3.054l.943 2.904L20 22.851l-2.47-1.795zm3.433-4.643h-1.923l.961-2.96.962 2.96zm2.988 3.568l-.595-1.829h3.112l-2.518 1.83zm-7.305-1.829l-.595 1.83-2.517-1.83h3.112zm-.642 7.603l.962-2.96 1.556 1.13-2.518 1.83zm5.476-1.83l1.556-1.13.962 2.96-2.518-1.83z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194197">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Morocco(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Mozambique.tsx
Tamaño: 1469 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Mozambique(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194292)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M10.811 27.826L5.86 34.142A19.935 19.935 0 0020.001 40c8.268 0 15.363-5.018 18.409-12.174H10.81z"
          fill="#FFDA44"
        />
        <path
          d="M38.44 12.246C35.413 5.052 28.298 0 20 0A19.935 19.935 0 005.86 5.859l5.008 6.387h27.573z"
          fill="#496E2D"
        />
        <path d="M4.348 14.71v10.507H39.31A20.01 20.01 0 0040 20c0-1.831-.247-3.605-.708-5.29H4.348z" fill="#000" />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#A2001D" />
        <path
          d="M8.095 14.783l1.295 3.985h4.191l-3.39 2.464 1.295 3.985-3.39-2.463-3.391 2.463L6 21.232l-3.39-2.464H6.8l1.295-3.985z"
          fill="#FFDA44"
        />
        <path d="M4.305 20h7.58v3.478h-7.58V20z" fill="#F0F0F0" />
        <path
          d="M13.32 16.012l-1.23-1.23-3.995 3.997-3.996-3.996-1.23 1.23 4 3.992-4 4 1.23 1.212 3.996-3.988 3.996 3.988 1.23-1.213-4-4 4-3.992z"
          fill="#000"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194292">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Mozambique(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Myanmar.tsx
Tamaño: 1022 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Myanmar(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194405)">
        <path
          d="M38.756 26.956A19.954 19.954 0 0040 20c0-2.447-.44-4.79-1.244-6.957L20 11.304l-18.756 1.74A19.956 19.956 0 000 20c0 2.446.44 4.79 1.244 6.956L20 28.696l18.756-1.74z"
          fill="#6DA544"
        />
        <path d="M38.756 13.043C35.93 5.428 28.6 0 20 0 11.4 0 4.07 5.428 1.244 13.043h37.512z" fill="#FFDA44" />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#D80027" />
        <path
          d="M33.715 16.92H23.238L20 6.958l-3.238 9.964H6.285l8.476 6.158-3.237 9.965L20 26.957l8.476 6.087-3.237-9.965 8.476-6.158z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194405">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Myanmar(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Namibia.tsx
Tamaño: 1323 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Namibia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194517)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M5.857 34.142a20.123 20.123 0 002.673 2.246L36.387 8.531a20.108 20.108 0 00-4.919-4.919L3.611 31.47a20.118 20.118 0 002.246 2.673z"
          fill="#A2001D"
        />
        <path
          d="M5.857 5.858c-6.31 6.31-7.52 15.785-3.636 23.312L29.169 2.222C21.643-1.663 12.167-.451 5.857 5.858z"
          fill="#0052B4"
        />
        <path
          d="M34.142 34.142c6.31-6.31 7.521-15.785 3.637-23.312L10.83 37.778c7.527 3.885 17.003 2.674 23.312-3.636z"
          fill="#496E2D"
        />
        <path
          d="M16.522 11.304l-2.241 1.054 1.193 2.17-2.433-.465-.309 2.459-1.695-1.808-1.695 1.808-.308-2.458-2.434.465 1.194-2.17-2.241-1.055 2.24-1.054L6.6 8.08l2.434.465.308-2.458 1.695 1.808 1.695-1.808.309 2.458 2.433-.465-1.193 2.17 2.241 1.054z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194517">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Namibia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Nato.tsx
Tamaño: 1578 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Nato(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194629)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#0052B4" />
        <path
          d="M28.583 21.395L32.174 20l-3.59-1.395-1.973-.767-3.204-1.245-1.245-3.204a6.986 6.986 0 014.449 4.45l1.972.766a8.717 8.717 0 00-7.188-7.188L20 7.827l-1.395 3.59a8.717 8.717 0 00-7.188 7.188L7.827 20l3.59 1.395a8.717 8.717 0 007.188 7.188L20 32.174l1.395-3.59a8.717 8.717 0 007.188-7.189zm-6.52-3.458L20 20h7.372l-5.309 2.063L20 20v7.372l-2.063-5.309L20 20h-7.372l5.309-2.063L20 20v-7.372l2.063 5.309zm-4.225-4.548l-1.245 3.204-3.204 1.246a6.986 6.986 0 014.45-4.45zm-4.449 8.773l3.204 1.245 1.245 3.204a6.986 6.986 0 01-4.449-4.45zm8.773 4.449l1.245-3.204 3.204-1.245a6.986 6.986 0 01-4.45 4.449z"
          fill="#F0F0F0"
        />
        <path
          d="M27.372 20H20l2.063 2.063L27.373 20zM12.627 20h7.372l-2.063-2.063L12.627 20zM19.999 27.372V20l-2.063 2.063 2.063 5.31zM20 20l2.063-2.063L20 12.627V20z"
          fill="#0052B4"
        />
        <path
          d="M19.13 2.609h1.74v3.478h-1.74V2.609zM2.61 19.13h3.478v1.74H2.609v-1.74zM19.13 33.913h1.74v3.478h-1.74v-3.478zM33.914 19.13h3.478v1.74h-3.478v-1.74z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194629">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Nato(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Nauru.tsx
Tamaño: 1107 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Nauru(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193622)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#0052B4" />
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M20 0C9.54 0 .958 8.03.076 18.26h39.848C39.042 8.03 30.46 0 20 0zM20 40c10.46 0 19.042-8.03 19.924-18.26H.076C.958 31.97 9.54 40 20 40z"
          fill="#0052B4"
        />
        <path
          d="M16.522 26.956l-2.241 1.055 1.193 2.17-2.433-.466-.309 2.459-1.695-1.808-1.695 1.808-.308-2.459-2.434.466 1.194-2.17-2.241-1.055 2.24-1.054-1.193-2.17 2.434.466.308-2.459 1.695 1.808 1.695-1.808.309 2.459 2.433-.466-1.193 2.17 2.241 1.054z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193622">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Nauru(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Nepal.tsx
Tamaño: 1354 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Nepal(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193735)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#EBEBEB" />
        <path
          d="M39.882 22.174L17.95.103c-.99.1-1.958.274-2.9.514C6.4 2.82 0 20 0 20s28 18.737 31.194 16.575c.64-.432 1.252-.9 1.835-1.402l-12.998-13h19.851z"
          fill="#0052B4"
        />
        <path
          d="M34.783 20L15.332.55C6.538 2.651 0 10.561 0 20c0 11.046 8.954 20 20 20 4.19 0 8.078-1.29 11.291-3.491L14.783 20h20z"
          fill="#D80027"
        />
        <path
          d="M19.022 29.53l-2.443-1.148 1.301-2.366-2.652.508-.336-2.68-1.848 1.97-1.847-1.97-.336 2.68-2.653-.508 1.301 2.366-2.443 1.149L9.51 30.68l-1.3 2.365 2.652-.507.336 2.68 1.847-1.972 1.848 1.971.336-2.68 2.652.508-1.3-2.365 2.442-1.15zM17.393 11.092l-1.777-.835.946-1.72-1.929.368-.244-1.949-1.344 1.434-1.344-1.434-.244 1.95-1.93-.37.947 1.72-1.777.836 4.348.87 4.348-.87zM18.261 11.092a5.217 5.217 0 11-10.435 0"
          fill="#EBEBEB"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193735">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Nepal(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Netherlands.tsx
Tamaño: 714 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Netherlands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193848)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#A2001D" />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#0052B4" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193848">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Netherlands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/NewZealand.tsx
Tamaño: 1409 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function NewZealand(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193977)">
        <path
          d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20C0 20.005 20 .002 20 0c11.046 0 20 8.954 20 20z"
          fill="#0052B4"
        />
        <path
          d="M19.947 20h.054v-.053l-.054.053zM20 10.435V0h-.003C8.953.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.053V16.31l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M10.12 2.609a20.095 20.095 0 00-7.51 7.51V20h5.217V7.826H20V2.61h-9.882z" fill="#D80027" />
        <path
          d="M20 17.54l-7.105-7.105h-2.46L20.002 20v-2.46zM34.635 14.84l.432 1.33h1.397l-1.13.82.431 1.329-1.13-.821-1.13.82.432-1.328-1.13-.82h1.397l.431-1.33zM29.641 24.406l.648 1.993h2.095L30.69 27.63l.648 1.993-1.696-1.232-1.695 1.232.648-1.993-1.696-1.231h2.096l.647-1.993zM29.83 8.754l.54 1.66h1.747l-1.413 1.027.54 1.66-1.413-1.026-1.413 1.027.54-1.661-1.413-1.027h1.746l.54-1.66zM25.026 14.783l.648 1.992h2.095l-1.695 1.232L26.72 20l-1.695-1.232L23.331 20l.648-1.993-1.696-1.232h2.096l.647-1.992z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193977">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function NewZealand(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Nicaragua.tsx
Tamaño: 1174 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Nicaragua(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194073)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 0C12.07 0 5.22 4.614 1.984 11.304h36.031C34.78 4.614 27.93 0 20 0zM20 40c7.929 0 14.78-4.614 18.015-11.304H1.985C5.218 35.386 12.07 40 20 40z"
          fill="#338AF3"
        />
        <path
          d="M20 13.913a6.087 6.087 0 10-.001 12.174 6.087 6.087 0 000-12.174zm0 9.565a3.478 3.478 0 11-.001-6.956 3.478 3.478 0 010 6.956z"
          fill="#FFDA44"
        />
        <path d="M23.013 20.87L20.001 20l-3.013.87-1.004 1.739h8.033l-1.004-1.74z" fill="#0052B4" />
        <path d="M20 15.652l-2.008 3.478L20 20l2.009-.87L20 15.652z" fill="#338AF3" />
        <path d="M16.988 20.87h6.025l-1.004-1.74h-4.017l-1.004 1.74z" fill="#6DA544" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194073">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Nicaragua(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Niger.tsx
Tamaño: 926 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Niger(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194204)">
        <path
          d="M1.985 11.304A19.92 19.92 0 000 20c0 3.116.713 6.066 1.985 8.696L20 30.435l18.016-1.74A19.92 19.92 0 0040 20a19.92 19.92 0 00-1.984-8.696L20 9.565l-18.015 1.74z"
          fill="#F0F0F0"
        />
        <path d="M1.984 28.696C5.22 35.386 12.07 40 20 40c7.93 0 14.78-4.614 18.015-11.304H1.984z" fill="#6DA544" />
        <path
          d="M1.984 11.304h36.03C34.779 4.614 27.928 0 19.999 0S5.22 4.614 1.984 11.304zM20 26.956a6.956 6.956 0 100-13.912 6.956 6.956 0 000 13.912z"
          fill="#FF9811"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194204">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Niger(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Nigeria.tsx
Tamaño: 710 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Nigeria(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194300)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M0 20c0 8.6 5.428 15.93 13.043 18.756V1.244C5.428 4.07 0 11.401 0 20zM40 20c0-8.6-5.427-15.93-13.043-18.756v37.512C34.573 35.93 40.001 28.6 40.001 20z"
          fill="#6DA544"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194300">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Nigeria(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Niue.tsx
Tamaño: 1709 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Niue(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194413)">
        <path
          d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20C0 20.005 20 .002 20 0c11.046 0 20 8.954 20 20z"
          fill="#FFDA44"
        />
        <path d="M20 9.565v6.746l-6.957-6.746H20zM10.434 20h5.876l-5.876-7.826-.87 6.087.87 1.739z" fill="#0052B4" />
        <path
          d="M19.947 20h.054v-.053l-.054.053zM20 10.435V0h-.003C8.952.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.053V16.31l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M20 17.54l-7.105-7.105h-2.46L20.002 20v-2.46z" fill="#D80027" />
        <path
          d="M10.12 2.609c-.772.439-1.51.928-2.213 1.462h.82L6.56 5.647l.828 2.55-2.169-1.576-.23.168a20.06 20.06 0 00-2.379 3.33V20h5.218V7.826H20V2.61h-9.882z"
          fill="#D80027"
        />
        <path
          d="M8.544 3.606a20.04 20.04 0 00-.638.465L6.558 5.647l-1.34.974-.234.17a20.095 20.095 0 00-1.379 1.753 3.696 3.696 0 004.938-4.938z"
          fill="#0052B4"
        />
        <path
          d="M4.984 6.79l.233-.169 2.169 1.576-.828-2.55 2.168-1.576h-.82a20.125 20.125 0 00-2.922 2.72zM13.823 3.478l.432 1.329h1.396l-1.13.821.432 1.328-1.13-.82-1.13.82.431-1.328-1.13-.821h1.397l.432-1.329zM5.217 12.174l.432 1.329h1.397l-1.13.82.431 1.33-1.13-.822-1.13.821.432-1.328-1.13-.822h1.397l.431-1.328z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194413">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Niue(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/NorfolkIsland.tsx
Tamaño: 912 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function NorfolkIsland(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194525)">
        <path
          d="M28.695 1.985A19.92 19.92 0 0019.999 0a19.92 19.92 0 00-8.695 1.985L9.564 20l1.74 18.016A19.92 19.92 0 0019.999 40a19.92 19.92 0 008.696-1.984L30.434 20l-1.74-18.015z"
          fill="#F0F0F0"
        />
        <path
          d="M11.304 1.985C4.614 5.22 0 12.071 0 20c0 7.93 4.614 14.78 11.304 18.015V1.985zM28.695 1.985v36.03C35.385 34.78 40 27.929 40 20S35.385 5.22 28.695 1.985zM25.218 26.087L20.001 9.565l-5.218 16.522h3.913v4.348h2.609v-4.348h3.913z"
          fill="#6DA544"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194525">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function NorfolkIsland(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/NorthKorea.tsx
Tamaño: 1206 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function NorthKorea(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194637)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 0C13.94 0 8.509 2.697 4.84 6.956h30.322C31.494 2.697 26.062 0 20 0zM35.162 33.044H4.84C8.508 37.303 13.94 40 20 40c6.063 0 11.494-2.697 15.162-6.956z"
          fill="#0052B4"
        />
        <path
          d="M37.065 9.565H2.934A19.905 19.905 0 000 20c0 3.824 1.074 7.397 2.935 10.435h34.13A19.905 19.905 0 0040 20c0-3.824-1.074-7.397-2.935-10.435z"
          fill="#D80027"
        />
        <path d="M12.305 27.696a7.696 7.696 0 100-15.392 7.696 7.696 0 000 15.392z" fill="#F0F0F0" />
        <path
          d="M12.304 12.304l1.726 5.315h5.597l-4.53 3.284 1.74 5.33-4.533-3.3-4.528 3.294 1.734-5.324-4.526-3.284h5.593l1.727-5.315z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194637">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function NorthKorea(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/NorthernCyprus.tsx
Tamaño: 1012 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function NorthernCyprus(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193630)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M4.84 6.956a20.07 20.07 0 00-1.904 2.61h34.129a20.057 20.057 0 00-1.904-2.61H4.839zM4.84 33.044H35.16a20.073 20.073 0 001.904-2.61H2.935a20.065 20.065 0 001.904 2.61zM17.44 16.343l1.642 2.261 2.657-.862-1.643 2.26 1.64 2.26-2.656-.864-1.644 2.26.002-2.795-2.657-.865 2.658-.861.002-2.794z"
          fill="#D80027"
        />
        <path
          d="M12.962 25.652a5.652 5.652 0 112.69-10.625 6.956 6.956 0 100 9.945c-.8.434-1.716.68-2.69.68z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193630">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function NorthernCyprus(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/NorthernMarianasIslands.tsx
Tamaño: 2093 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function NorthernMarianasIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193743)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#338AF3" />
        <path
          d="M19.37 32.593a1.303 1.303 0 01-1.16-.852 1.306 1.306 0 01-2.327-.6 1.306 1.306 0 01-2.157-1.059 1.303 1.303 0 01-1.9-1.47 1.303 1.303 0 01-1.567-1.82 1.305 1.305 0 01-1.169-2.098 1.304 1.304 0 01-.72-2.293 1.304 1.304 0 01-.245-2.388 1.305 1.305 0 01.24-2.39 1.305 1.305 0 01.715-2.294 1.306 1.306 0 011.165-2.1 1.304 1.304 0 011.563-1.825 1.303 1.303 0 011.895-1.474 1.305 1.305 0 012.156-1.062 1.305 1.305 0 012.324-.606 1.305 1.305 0 012.398-.124 1.304 1.304 0 012.376.358 1.305 1.305 0 012.255.831 1.304 1.304 0 012.04 1.268 1.306 1.306 0 011.744 1.651 1.305 1.305 0 011.378 1.968 1.306 1.306 0 01.952 2.206 1.304 1.304 0 01.488 2.352c.466.198.794.66.795 1.199V20c0 .539-.327 1.001-.793 1.2a1.304 1.304 0 01-.482 2.353 1.306 1.306 0 01-.948 2.208 1.305 1.305 0 01-1.373 1.972 1.306 1.306 0 01-1.74 1.655 1.306 1.306 0 01-2.038 1.272 1.305 1.305 0 01-.849 1.165c-.506.188 0 0 0 0a1.305 1.305 0 01-1.403-.329 1.305 1.305 0 01-2.375.364 1.304 1.304 0 01-1.238.733z"
          fill="#F3F3F3"
        />
        <path d="M20 28.696a8.696 8.696 0 100-17.391 8.696 8.696 0 000 17.39z" fill="#338AF3" />
        <path
          d="M21.903 17.048c.427-.316.705-.823.705-1.396v-.87c0-.96-.778-1.739-1.739-1.739H19.13c-.96 0-1.739.78-1.739 1.74v.87c0 .572.278 1.079.705 1.395l-1.575 15.995s.87.87 3.479.87c2.608 0 3.478-.87 3.478-.87l-1.575-15.995z"
          fill="#BDBCC1"
        />
        <path
          d="M20 13.043l1.51 4.65h4.89l-3.955 2.874 1.51 4.65L20 22.344l-3.956 2.873 1.511-4.65-3.955-2.874h4.889l1.51-4.65z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193743">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function NorthernMarianasIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/NorthernSami.tsx
Tamaño: 1753 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function NorthernSami(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
      <g clipPath="url(#clip0_2435_78839)">
        <mask
          id="mask0_2435_78839"
          style={{ maskType: 'alpha' }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="40"
          height="40"
        >
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#D80027"
          />
        </mask>
        <g mask="url(#mask0_2435_78839)">
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#D80027"
          />
          <rect x="20" y="-3" width="20" height="44" fill="#0052B4" />
          <rect width="3.5" height="44" transform="matrix(-1 0 0 1 20 -3)" fill="#FFDA44" />
          <rect width="3.5" height="44" transform="matrix(-1 0 0 1 16.5 -3)" fill="#6DA544" />
          <path
            d="M16.5 33C23.6797 33 29.5 27.1797 29.5 20C29.5 12.8203 23.6797 7 16.5 7V9C22.5751 9 27.5 13.9249 27.5 20C27.5 26.0751 22.5751 31 16.5 31V33Z"
            fill="#D80027"
          />
          <path
            d="M16.5 33C9.3203 33 3.5 27.1797 3.5 20C3.5 12.8203 9.3203 7 16.5 7V9C10.4249 9 5.5 13.9249 5.5 20C5.5 26.0751 10.4249 31 16.5 31V33Z"
            fill="#0052B4"
          />
        </g>
      </g>
      <defs>
        <clipPath id="clip0_2435_78839">
          <rect width="40" height="40" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function NorthernSami(props: React.SVGProps<SVGSVGElement>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Norway.tsx
Tamaño: 1084 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Norway(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193856)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M.69 25.217a20.017 20.017 0 007.137 10.65v-10.65H.689zM18.262 39.924c.573.05 1.153.076 1.739.076 9.24 0 17.016-6.267 19.31-14.783h-21.05v14.707zM39.312 14.783C37.017 6.267 29.242 0 20 0c-.586 0-1.166.027-1.74.076v14.707h21.05zM7.827 4.132a20.017 20.017 0 00-7.138 10.65h7.138V4.133z"
          fill="#D80027"
        />
        <path
          d="M39.83 17.391H15.653V.475c-1.848.41-3.6 1.074-5.217 1.957v14.96H.169a20.172 20.172 0 000 5.217h10.266v14.96a19.863 19.863 0 005.217 1.956V22.609h24.179a20.195 20.195 0 000-5.218z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193856">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Norway(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Occitan.tsx
Tamaño: 6396 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Occitan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
      <g clipPath="url(#clip0_2435_78802)">
        <mask
          id="mask0_2435_78802"
          style={{ maskType: 'alpha' }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="40"
          height="40"
        >
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#FFDA44"
          />
        </mask>
        <g mask="url(#mask0_2435_78802)">
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#D80027"
          />
          <path
            d="M9.26172 20.0007L9.71567 20.3558C10.4436 20.925 11.6311 22.1421 11.9551 24.2011L12.0408 24.7445L12.4567 24.3807C13.155 23.77 15.2303 22.1704 18.2652 21.7331C17.8278 24.7677 16.2281 26.8428 15.6173 27.5411L15.2536 27.957L15.797 28.0426C17.8562 28.3667 19.0733 29.554 19.6426 30.2819L19.9977 30.7359L20.3528 30.2819C20.922 29.554 22.1391 28.3667 24.1983 28.0426L24.7418 27.957L24.378 27.5411C23.7673 26.8428 22.1676 24.7677 21.7302 21.7331C24.765 22.1704 26.8403 23.77 27.5386 24.3807L27.9546 24.7445L28.0402 24.2011C28.3643 22.1421 29.5517 20.925 30.2796 20.3558L30.7336 20.0007L30.2796 19.6457C29.5517 19.0764 28.3643 17.8594 28.0402 15.8005L27.9546 15.257L27.5386 15.6207C26.8403 16.2315 24.765 17.8311 21.7302 18.2684C22.1676 15.2338 23.7673 13.1587 24.378 12.4604L24.7418 12.0445L24.1983 11.9589C22.1391 11.6348 20.922 10.4475 20.3528 9.71959L19.9977 9.26562L19.6426 9.71959C19.0733 10.4475 17.8562 11.6348 15.797 11.9589L15.2536 12.0445L15.6173 12.4604C16.2281 13.1587 17.8278 15.2338 18.2652 18.2684C15.2303 17.8311 13.155 16.2315 12.4567 15.6207L12.0408 15.257L11.9551 15.8005C11.6311 17.8594 10.4436 19.0764 9.71567 19.6457L9.26172 20.0007ZM11.0091 20.0007C12.3936 18.7174 12.7133 17.2934 12.7133 17.2934C14.7344 18.9968 17.8865 19.3807 19.4624 19.4655C19.3775 17.8897 18.9936 14.7379 17.2901 12.7169C17.2901 12.7169 18.7142 12.3973 19.9977 11.0129C21.2812 12.3973 22.7052 12.7169 22.7052 12.7169C21.0018 14.7379 20.6179 17.8897 20.5329 19.4655C22.1089 19.3807 25.261 18.9968 27.2821 17.2934C27.2821 17.2934 27.6017 18.7174 28.9862 20.0007C27.6017 21.2841 27.2821 22.7081 27.2821 22.7081C25.261 21.0047 22.1089 20.6208 20.5329 20.5359C20.6179 22.1118 21.0018 25.2636 22.7052 27.2846C22.7052 27.2846 21.2812 27.6042 19.9977 28.9886C18.7142 27.6042 17.2901 27.2846 17.2901 27.2846C18.9936 25.2636 19.3775 22.1118 19.4624 20.5359C17.8865 20.6208 14.7344 21.0047 12.7133 22.7081C12.7133 22.7081 12.3936 21.2841 11.0091 20.0007Z"
            fill="#FFDA44"
          />
          <path
            d="M8.89547 20.8938C9.39003 20.8938 9.79095 20.4929 9.79095 19.9984C9.79095 19.5039 9.39003 19.103 8.89547 19.103C8.40092 19.103 8 19.5039 8 19.9984C8 20.4929 8.40092 20.8938 8.89547 20.8938Z"
            fill="#FFDA44"
          />
          <path
            d="M11.9209 15.7993C12.4154 15.7993 12.8163 15.3984 12.8163 14.9039C12.8163 14.4094 12.4154 14.0085 11.9209 14.0085C11.4263 14.0085 11.0254 14.4094 11.0254 14.9039C11.0254 15.3984 11.4263 15.7993 11.9209 15.7993Z"
            fill="#FFDA44"
          />
          <path
            d="M11.9209 25.9904C12.4154 25.9904 12.8163 25.5895 12.8163 25.095C12.8163 24.6005 12.4154 24.1996 11.9209 24.1996C11.4263 24.1996 11.0254 24.6005 11.0254 25.095C11.0254 25.5895 11.4263 25.9904 11.9209 25.9904Z"
            fill="#FFDA44"
          />
          <path
            d="M14.9091 12.8142C15.4037 12.8142 15.8046 12.4134 15.8046 11.9188C15.8046 11.4243 15.4037 11.0234 14.9091 11.0234C14.4146 11.0234 14.0137 11.4243 14.0137 11.9188C14.0137 12.4134 14.4146 12.8142 14.9091 12.8142Z"
            fill="#FFDA44"
          />
          <path
            d="M14.9091 28.9755C15.4037 28.9755 15.8046 28.5746 15.8046 28.0801C15.8046 27.5855 15.4037 27.1847 14.9091 27.1847C14.4146 27.1847 14.0137 27.5855 14.0137 28.0801C14.0137 28.5746 14.4146 28.9755 14.9091 28.9755Z"
            fill="#FFDA44"
          />
          <path
            d="M20.0009 9.7908C20.4955 9.7908 20.8964 9.38992 20.8964 8.8954C20.8964 8.40088 20.4955 8 20.0009 8C19.5064 8 19.1055 8.40088 19.1055 8.8954C19.1055 9.38992 19.5064 9.7908 20.0009 9.7908Z"
            fill="#FFDA44"
          />
          <path
            d="M20.0009 32.001C20.4955 32.001 20.8964 31.6002 20.8964 31.1056C20.8964 30.6111 20.4955 30.2102 20.0009 30.2102C19.5064 30.2102 19.1055 30.6111 19.1055 31.1056C19.1055 31.6002 19.5064 32.001 20.0009 32.001Z"
            fill="#FFDA44"
          />
          <path
            d="M25.0927 12.8142C25.5873 12.8142 25.9882 12.4134 25.9882 11.9188C25.9882 11.4243 25.5873 11.0234 25.0927 11.0234C24.5982 11.0234 24.1973 11.4243 24.1973 11.9188C24.1973 12.4134 24.5982 12.8142 25.0927 12.8142Z"
            fill="#FFDA44"
          />
          <path
            d="M25.0927 28.9755C25.5873 28.9755 25.9882 28.5746 25.9882 28.0801C25.9882 27.5855 25.5873 27.1847 25.0927 27.1847C24.5982 27.1847 24.1973 27.5855 24.1973 28.0801C24.1973 28.5746 24.5982 28.9755 25.0927 28.9755Z"
            fill="#FFDA44"
          />
          <path
            d="M28.081 15.7993C28.5756 15.7993 28.9765 15.3984 28.9765 14.9039C28.9765 14.4094 28.5756 14.0085 28.081 14.0085C27.5865 14.0085 27.1855 14.4094 27.1855 14.9039C27.1855 15.3984 27.5865 15.7993 28.081 15.7993Z"
            fill="#FFDA44"
          />
          <path
            d="M28.081 25.9904C28.5756 25.9904 28.9765 25.5895 28.9765 25.095C28.9765 24.6005 28.5756 24.1996 28.081 24.1996C27.5865 24.1996 27.1855 24.6005 27.1855 25.095C27.1855 25.5895 27.5865 25.9904 28.081 25.9904Z"
            fill="#FFDA44"
          />
          <path
            d="M31.1064 20.8938C31.601 20.8938 32.0019 20.4929 32.0019 19.9984C32.0019 19.5039 31.601 19.103 31.1064 19.103C30.6119 19.103 30.2109 19.5039 30.2109 19.9984C30.2109 20.4929 30.6119 20.8938 31.1064 20.8938Z"
            fill="#FFDA44"
          />
        </g>
      </g>
      <defs>
        <clipPath id="clip0_2435_78802">
          <rect width="40" height="40" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Occitan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Oman.tsx
Tamaño: 1238 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Oman(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193984)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M0 20c0 7.58 4.218 14.176 10.435 17.568V2.432C4.218 5.824 0 12.419 0 20z" fill="#D80027" />
        <path
          d="M38.756 26.957A19.958 19.958 0 0040 20c0-2.446-.44-4.79-1.244-6.956H1.244A19.955 19.955 0 000 20c0 2.447.44 4.79 1.244 6.957L20 28.696l18.756-1.74z"
          fill="#D80027"
        />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#6DA544" />
        <path d="M0 20c0 9.24 6.267 17.016 14.783 19.311V.689C6.267 2.984 0 10.759 0 20z" fill="#D80027" />
        <path
          d="M12.237 8.801l-1.845-1.844-1.23 1.23-1.23-1.23L6.089 8.8l1.23 1.23-1.23 1.23 1.845 1.844 1.23-1.23 1.229 1.23 1.845-1.844-1.23-1.23 1.23-1.23z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193984">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Oman(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/OrkneyIslands.tsx
Tamaño: 1266 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function OrkneyIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194081)">
        <path
          d="M39.311 25.218A20.02 20.02 0 0040 20c0-1.805-.24-3.554-.689-5.217L18.261.076A19.898 19.898 0 007.826 4.133L.69 14.783A20.02 20.02 0 000 20c0 1.795.238 3.534.681 5.189l7.145 10.679a19.898 19.898 0 0010.435 4.056l21.05-14.706z"
          fill="#FFDA44"
        />
        <path
          d="M.69 25.218a20.017 20.017 0 007.137 10.65v-10.65H.689zM18.262 39.924c.573.05 1.153.076 1.739.076 9.24 0 17.016-6.267 19.31-14.782h-21.05v14.706zM39.312 14.783C37.017 6.267 29.242 0 20 0c-.586 0-1.166.027-1.74.076v14.707h21.05zM7.827 4.132a20.018 20.018 0 00-7.138 10.65h7.138V4.133z"
          fill="#D80027"
        />
        <path
          d="M39.83 17.391H15.653V.475c-1.848.41-3.6 1.074-5.217 1.957v14.96H.169a20.2 20.2 0 000 5.217h10.266v14.96a19.863 19.863 0 005.217 1.956V22.609h24.179a20.195 20.195 0 000-5.218z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194081">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function OrkneyIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Ossetia.tsx
Tamaño: 829 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Ossetia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194211)">
        <path
          d="M38.756 26.956A19.955 19.955 0 0040 20c0-2.446-.44-4.79-1.244-6.957L20 11.304l-18.756 1.74A19.958 19.958 0 000 20c0 2.446.44 4.79 1.244 6.956L20 28.696l18.756-1.74z"
          fill="#D80027"
        />
        <path d="M20 40c8.6 0 15.93-5.428 18.756-13.044H1.244C4.07 34.572 11.401 40 20 40z" fill="#FFDA44" />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#F0F0F0" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194211">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Ossetia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Pakistan.tsx
Tamaño: 1062 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Pakistan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194308)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M0 20c0 7.58 4.218 14.176 10.435 17.568V2.432C4.218 5.824 0 12.419 0 20z" fill="#F0F0F0" />
        <path
          d="M20 0a19.91 19.91 0 00-9.565 2.432v35.136A19.91 19.91 0 0020.002 40c11.045 0 20-8.954 20-20S31.046 0 20 0z"
          fill="#496E2D"
        />
        <path
          d="M28.55 23.308a5.652 5.652 0 11-4.043-10.187 6.957 6.957 0 105.825 8.062 5.626 5.626 0 01-1.781 2.125zM28.442 13.044l1.425 1.536 1.902-.88-1.02 1.83 1.424 1.535-2.056-.405-1.02 1.83-.25-2.08-2.056-.405 1.901-.88-.25-2.081z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194308">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Pakistan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Palau.tsx
Tamaño: 595 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Palau(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194421)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#338AF3" />
        <path d="M15.653 28.696a8.696 8.696 0 100-17.392 8.696 8.696 0 000 17.392z" fill="#FFDA44" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194421">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Palau(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Palestine.tsx
Tamaño: 905 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Palestine(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194533)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M12.175 13.043h26.582C35.93 5.428 28.6 0 20 0A19.935 19.935 0 005.859 5.859l6.316 7.184z"
          fill="#000"
        />
        <path
          d="M12.175 26.956h26.582C35.93 34.573 28.6 40 20 40a19.935 19.935 0 01-14.142-5.858l6.316-7.186z"
          fill="#6DA544"
        />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194533">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Palestine(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Panama.tsx
Tamaño: 1004 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Panama(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194645)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M0 20c0 11.046 8.954 20 20 20V20H0z" fill="#0052B4" />
        <path d="M20 0c11.046 0 20 8.954 20 20H20V0z" fill="#D80027" />
        <path
          d="M11.906 6.957l1.295 3.985h4.19l-3.39 2.464 1.295 3.985-3.39-2.463-3.39 2.463 1.294-3.985-3.39-2.464h4.19l1.296-3.985z"
          fill="#0052B4"
        />
        <path
          d="M28.095 22.609l1.295 3.985h4.191l-3.39 2.464 1.295 3.986-3.39-2.464-3.391 2.464L26 29.058l-3.39-2.464h4.19l1.295-3.985z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194645">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Panama(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/PapuaNewGuinea.tsx
Tamaño: 1895 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function PapuaNewGuinea(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193638)">
        <path
          d="M34.142 34.142c-7.81 7.81-20.474 7.81-28.284 0-7.81-7.81-7.81-20.474 0-28.284 7.81-7.81 19.244-6.581 27.054 1.23 7.81 7.81 9.04 19.244 1.23 27.054z"
          fill="#000"
        />
        <path d="M5.857 5.858c7.81-7.81 20.474-7.81 28.285 0 7.81 7.81 7.81 20.474 0 28.284" fill="#A2001D" />
        <path
          d="M15.284 26.957l.323.996h1.048l-.848.616.324.996-.847-.616-.848.616.324-.996-.848-.616h1.048l.324-.996zM12.608 17.391l.54 1.661h1.746l-1.413 1.026.54 1.661-1.413-1.026-1.413 1.026.54-1.66-1.413-1.027h1.747l.539-1.66zM12.608 29.565l.54 1.661h1.746l-1.413 1.026.54 1.661-1.413-1.026-1.413 1.026.54-1.66-1.413-1.027h1.746l.54-1.66zM17.713 21.74l.54 1.66H20l-1.412 1.026.54 1.661-1.414-1.026-1.412 1.026.54-1.66-1.413-1.027h1.746l.54-1.66zM7.503 21.74l.54 1.66h1.745l-1.412 1.026.54 1.661-1.413-1.026-1.413 1.026.54-1.66L5.217 23.4h1.746l.54-1.66z"
          fill="#F0F0F0"
        />
        <path
          d="M33.48 14.81a5.177 5.177 0 00-3.302-1.513l3.735-2.906a6.939 6.939 0 00-5.428-2.018 5.192 5.192 0 00-1.335-2.286L25.674 9.04a2.174 2.174 0 10-2.951 2.951l-2.951 1.476a5.191 5.191 0 002.287 1.336 6.936 6.936 0 002.017 5.427l3.264-4.196c.245-.242.57-.376.915-.376.348 0 .675.136.922.382.246.247.382.574.382.923 0 .348-.136.676-.382.922l1.23 1.23c.574-.575.891-1.34.891-2.152a3.02 3.02 0 00-.604-1.82c.57.152 1.11.45 1.557.897a3.482 3.482 0 010 4.92l1.23 1.23a5.183 5.183 0 001.528-3.69 5.184 5.184 0 00-1.528-3.69z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193638">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function PapuaNewGuinea(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Paraguay.tsx
Tamaño: 1049 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Paraguay(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193751)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M20 0C12.07 0 5.22 4.614 1.984 11.304h36.031C34.78 4.614 27.93 0 20 0z" fill="#D80027" />
        <path d="M20 40c7.929 0 14.78-4.614 18.015-11.304H1.985C5.218 35.386 12.07 40 20 40z" fill="#0052B4" />
        <path
          d="M24.918 14.211l-1.844 1.845a4.348 4.348 0 11-6.148 0l-1.846-1.845a6.956 6.956 0 109.838 0z"
          fill="#6DA544"
        />
        <path
          d="M20 16.522l.648 1.993h2.096l-1.695 1.231.647 1.993-1.695-1.232-1.696 1.232.648-1.993-1.695-1.231h2.095l.648-1.993z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193751">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Paraguay(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Peru.tsx
Tamaño: 707 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Peru(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193864)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M40 20c0-8.6-5.427-15.93-13.043-18.756v37.512C34.573 35.93 40.001 28.6 40.001 20zM0 20c0 8.6 5.428 15.93 13.043 18.756V1.244C5.428 4.07 0 11.401 0 20z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193864">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Peru(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Philippines.tsx
Tamaño: 1364 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Philippines(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193991)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M20 0v20L5.857 34.142A19.938 19.938 0 0020 40c11.045 0 20-8.954 20-20S20 0 20 0z" fill="#D80027" />
        <path d="M20 0A19.938 19.938 0 005.857 5.858L20 20h20C40 8.954 31.045 0 20 0z" fill="#0052B4" />
        <path
          d="M13.694 20l-2.443-1.149 1.301-2.366-2.652.508-.336-2.68-1.848 1.971-1.847-1.97-.337 2.679-2.652-.508 1.3 2.366L1.739 20l2.443 1.149-1.3 2.365 2.652-.507.336 2.68 1.847-1.971 1.848 1.97.336-2.679 2.652.508-1.3-2.366L13.693 20zM5.332 7.826l.813 1.136 1.332-.421-.83 1.124.813 1.136-1.325-.442-.83 1.124.01-1.397-1.325-.441 1.332-.422.01-1.397zM5.332 28.517l.813 1.136 1.332-.422-.83 1.124.813 1.136-1.325-.441-.83 1.124.01-1.397-1.325-.442 1.332-.421.01-1.397zM16.926 18.172l-.813 1.136-1.332-.422.83 1.124-.813 1.136 1.325-.441.83 1.124-.01-1.397 1.325-.442-1.332-.421-.01-1.397z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193991">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Philippines(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/PitcairnIslands.tsx
Tamaño: 1568 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function PitcairnIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194089)">
        <path
          d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20C0 20.005 20 .002 20 0c11.046 0 20 8.954 20 20z"
          fill="#0052B4"
        />
        <path
          d="M19.947 20h.054v-.053l-.054.053zM20 10.435V0h-.003C8.952.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.053V16.31l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M10.12 2.609a20.095 20.095 0 00-7.51 7.51V20h5.217V7.826H20V2.61h-9.882z" fill="#D80027" />
        <path d="M20 17.54l-7.105-7.105h-2.46L20.002 20v-2.46z" fill="#D80027" />
        <path d="M31.304 12.174l-2.609.87-2.609-.87-.87-2.174.87-2.174h5.218L30.434 10l.87 2.174z" fill="#ACABB1" />
        <path
          d="M22.61 12.174v9.565c0 4.66 6.086 6.087 6.086 6.087s6.087-1.428 6.087-6.087v-9.565H22.61z"
          fill="#338AF3"
        />
        <path
          d="M23.158 24.005c1.496 2.873 5.538 3.821 5.538 3.821s4.043-.948 5.539-3.82l-5.538-9.223-5.539 9.222z"
          fill="#6DA544"
        />
        <path
          d="M34.783 21.642l-6.087-9.468-6.087 9.468v.097c0 .862.21 1.614.549 2.266l5.538-8.615 5.539 8.615c.34-.652.548-1.404.548-2.266v-.097z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194089">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function PitcairnIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Poland.tsx
Tamaño: 575 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Poland(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194218)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194218">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Poland(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Portugal.tsx
Tamaño: 1068 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Portugal(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194316)">
        <path
          d="M0 20c0 8.6 5.428 15.93 13.043 18.756L14.783 20l-1.74-18.756C5.428 4.07 0 11.401 0 20z"
          fill="#6DA544"
        />
        <path
          d="M40 20C40 8.954 31.045 0 20 0c-2.447 0-4.79.44-6.957 1.244v37.512A19.956 19.956 0 0020 40c11.045 0 20-8.954 20-20z"
          fill="#D80027"
        />
        <path d="M13.044 26.956a6.957 6.957 0 100-13.913 6.957 6.957 0 000 13.913z" fill="#FFDA44" />
        <path d="M9.13 16.522v4.348a3.913 3.913 0 107.827 0v-4.348H9.131z" fill="#D80027" />
        <path
          d="M13.043 22.174c-.72 0-1.305-.585-1.305-1.304v-1.74h2.609v1.74c0 .719-.585 1.304-1.304 1.304z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194316">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Portugal(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/PuertoRico.tsx
Tamaño: 1071 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function PuertoRico(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194429)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 0C13.459 0 7.65 3.142 4 8h32.002C32.353 3.142 26.544 0 20 0zM20 40c6.544 0 12.353-3.142 16.002-8H4c3.649 4.858 9.458 8 16 8zM0 20c0 1.37.138 2.708.4 4h39.2c.262-1.292.4-2.63.4-4s-.138-2.708-.4-4H.4c-.262 1.292-.4 2.63-.4 4z"
          fill="#D80027"
        />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#0052B4" />
        <path
          d="M8.095 14.783l1.295 3.985h4.191l-3.39 2.464 1.295 3.985-3.39-2.463-3.391 2.463L6 21.232l-3.39-2.464H6.8l1.295-3.985z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194429">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function PuertoRico(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Qatar.tsx
Tamaño: 831 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Qatar(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194541)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M40 20C40 8.954 31.046 0 20 0A19.905 19.905 0 009.355 3.066L13.74 4.93 7.826 7.441l5.913 2.513-5.913 2.512 5.913 2.512-5.913 2.512L13.74 20l-5.913 2.513 5.913 2.512-5.913 2.511 5.913 2.512-5.913 2.513 5.913 2.511-4.382 1.862A19.907 19.907 0 0020 40c11.046 0 20-8.954 20-20z"
          fill="#751A46"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194541">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Qatar(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/RapaNui.tsx
Tamaño: 890 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function RapaNui(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194653)">
        <path
          d="M39.5 20c0 10.77-8.73 19.5-19.5 19.5S.5 30.77.5 20 9.23.5 20 .5 39.5 9.23 39.5 20z"
          fill="#FCFCFC"
          stroke="#F3F3F3"
        />
        <path
          d="M26.087 16.522v1.739h2.387a10.485 10.485 0 01-3.864 3.275 2.174 2.174 0 00-3.687 1.031 10.535 10.535 0 01-1.845 0 2.174 2.174 0 00-3.687-1.03 10.483 10.483 0 01-3.865-3.276h2.387v-1.74H7.826c0 6.724 5.45 12.175 12.174 12.175 6.724 0 12.174-5.45 12.174-12.174h-6.087z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194653">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function RapaNui(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/RepublicOfMacedonia.tsx
Tamaño: 1367 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function RepublicOfMacedonia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193646)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M23.042 39.77a19.893 19.893 0 008.785-3.642L20 20l3.042 19.77zM16.96.23a19.895 19.895 0 00-8.786 3.642L20 20 16.96.23z"
          fill="#D80027"
        />
        <path
          d="M8.174 36.128a19.895 19.895 0 008.785 3.642L20.001 20 8.174 36.128zM3.872 8.173A19.894 19.894 0 00.23 16.958L20 20 3.872 8.173zM.23 23.042a19.893 19.893 0 003.643 8.785L20 20 .23 23.042zM39.77 16.958a19.893 19.893 0 00-3.642-8.785L20 20l19.77-3.042zM31.827 3.872A19.894 19.894 0 0023.042.23L20 20 31.827 3.872z"
          fill="#D80027"
        />
        <path d="M36.128 31.827a19.896 19.896 0 003.642-8.785L20 20l16.128 11.827z" fill="#D80027" />
        <path d="M20.001 26.956a6.956 6.956 0 100-13.912 6.956 6.956 0 000 13.912z" fill="#D80027" />
        <path d="M20 25.217a5.217 5.217 0 100-10.434 5.217 5.217 0 000 10.434z" fill="#FFDA44" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193646">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function RepublicOfMacedonia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/RepublicOfTheCongo.tsx
Tamaño: 914 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function RepublicOfTheCongo(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193759)">
        <path
          d="M10.84 37.785l14.693-12.25 12.25-14.693a20.089 20.089 0 00-8.614-8.62L14.465 14.465 2.221 29.17a20.087 20.087 0 008.62 8.615z"
          fill="#FFDA44"
        />
        <path
          d="M34.143 34.143c6.31-6.31 7.521-15.787 3.637-23.314L10.83 37.78c7.527 3.885 17.004 2.673 23.313-3.636z"
          fill="#D80027"
        />
        <path
          d="M5.857 5.857c-6.31 6.31-7.52 15.786-3.636 23.313L29.17 2.22C21.643-1.663 12.166-.452 5.857 5.858z"
          fill="#6DA544"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193759">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function RepublicOfTheCongo(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Reunion.tsx
Tamaño: 1427 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Reunion(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
      <g clipPath="url(#clip0_2435_78712)">
        <mask
          id="mask0_2435_78712"
          style={{ maskType: 'alpha' }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="40"
          height="40"
        >
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#F0F0F0"
          />
        </mask>
        <g mask="url(#mask0_2435_78712)">
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#F0F0F0"
          />
          <path d="M-10 0H50V40H-10V0Z" fill="#0052B4" />
          <path d="M20 20L-10 40H50L20 20Z" fill="#D80027" />
          <path d="M-10 18.5V21.5L50 18.5V21.5L-10 18.5Z" fill="#FFDA44" />
          <path d="M20 20L-10 2.5V0H-7.5L20 20ZM20 20L47.5 0H50V2.5L20 20Z" fill="#FFDA44" />
          <path d="M20 20L18.5 0H21.5L20 20Z" fill="#FFDA44" />
        </g>
      </g>
      <defs>
        <clipPath id="clip0_2435_78712">
          <rect width="40" height="40" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Reunion(props: React.SVGProps<SVGSVGElement>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Romania.tsx
Tamaño: 836 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Romania(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193872)">
        <path
          d="M26.957 1.244A19.96 19.96 0 0020 0c-2.446 0-4.79.44-6.956 1.244L11.304 20l1.74 18.756A19.952 19.952 0 0020 40c2.447 0 4.79-.44 6.957-1.244L28.696 20l-1.74-18.756z"
          fill="#FFDA44"
        />
        <path d="M40 20c0-8.6-5.427-15.93-13.043-18.756v37.512C34.573 35.93 40.001 28.6 40.001 20z" fill="#D80027" />
        <path d="M0 20c0 8.6 5.428 15.93 13.043 18.756V1.244C5.428 4.07 0 11.401 0 20z" fill="#0052B4" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193872">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Romania(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Russia.tsx
Tamaño: 816 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Russia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193998)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M38.756 26.956A19.955 19.955 0 0040 20c0-2.447-.44-4.79-1.244-6.957H1.244A19.957 19.957 0 000 20c0 2.446.44 4.79 1.244 6.956L20 28.696l18.756-1.74z"
          fill="#0052B4"
        />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193998">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Russia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Rwanda.tsx
Tamaño: 1147 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Rwanda(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194097)">
        <path
          d="M0 20c0 3.465.881 6.724 2.432 9.565L20 31.305l17.568-1.74A19.911 19.911 0 0040 20l-20-1.74L0 20z"
          fill="#FFDA44"
        />
        <path
          d="M37.568 10.435C34.176 4.218 27.581 0 20 0 12.42 0 5.824 4.218 2.432 10.435A19.91 19.91 0 000 20h40a19.91 19.91 0 00-2.432-9.565z"
          fill="#338AF3"
        />
        <path d="M20 40c7.58 0 14.176-4.218 17.568-10.435H2.432C5.824 35.782 12.419 40 20 40z" fill="#496E2D" />
        <path
          d="M22.61 11.705l2.442 1.149-1.3 2.365 2.652-.507.336 2.68 1.847-1.971 1.848 1.97.336-2.679 2.652.507-1.3-2.365 2.442-1.15-2.443-1.148 1.301-2.366-2.652.508-.337-2.68-1.847 1.97-1.847-1.97-.336 2.68-2.653-.508 1.301 2.366-2.443 1.149z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194097">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Rwanda(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/SabaIsland.tsx
Tamaño: 1047 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function SabaIsland(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194225)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 0C19.981-.014-.005 19.995 0 20 0 8.954 8.954 0 20 0zM20 0c.019-.014 20.005 19.995 20 20C40 8.954 31.046 0 20 0z"
          fill="#D80027"
        />
        <path
          d="M20 40c-.019.014-20.005-19.995-20-20 0 11.046 8.954 20 20 20zM20 40c.019.014 20.005-19.995 20-20 0 11.046-8.954 20-20 20z"
          fill="#0052B4"
        />
        <path
          d="M20 10.435l2.159 6.643h6.985l-5.651 4.105 2.158 6.643-5.65-4.105-5.651 4.105 2.158-6.643-5.65-4.105h6.984l2.159-6.643z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194225">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function SabaIsland(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/SahrawiArabDemocraticRepublic.tsx
Tamaño: 1266 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function SahrawiArabDemocraticRepublic(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194324)">
        <path
          d="M1.985 11.304A19.921 19.921 0 000 20c0 3.116.713 6.066 1.985 8.696L20 30.435l18.016-1.74A19.92 19.92 0 0040 20c0-3.116-.713-6.066-1.984-8.696L20 9.565l-18.015 1.74z"
          fill="#F0F0F0"
        />
        <path d="M1.984 28.696C5.22 35.386 12.07 40 20 40c7.93 0 14.78-4.614 18.015-11.304H1.984z" fill="#496E2D" />
        <path d="M1.984 11.304h36.03C34.779 4.614 27.928 0 19.999 0 12.07 0 5.22 4.614 1.984 11.304z" fill="#000" />
        <path
          d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858zM25.218 20a6.088 6.088 0 014.783-5.945 6.087 6.087 0 100 11.89A6.088 6.088 0 0125.218 20z"
          fill="#D80027"
        />
        <path
          d="M30.255 16.087l.863 2.657h2.794l-2.26 1.642.863 2.658-2.26-1.643-2.26 1.643.863-2.658-2.26-1.642h2.794l.863-2.657z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194324">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function SahrawiArabDemocraticRepublic(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Samoa.tsx
Tamaño: 1166 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Samoa(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194549)">
        <path d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20L20 0c11.046 0 20 8.954 20 20z" fill="#D80027" />
        <path d="M20 20V0C8.954 0 0 8.954 0 20h20z" fill="#0052B4" />
        <path
          d="M16.02 13.044l.324.996h1.047l-.847.616.324.996-.848-.615-.848.615.324-.996-.848-.616h1.048l.324-.996zM10.758 5.218l.54 1.66h1.746l-1.412 1.027.54 1.66-1.414-1.026-1.412 1.026.54-1.66-1.413-1.027h1.746l.54-1.66zM15.975 6.957l.54 1.66h1.746l-1.413 1.027.54 1.66-1.413-1.026-1.412 1.026.54-1.66-1.413-1.027h1.745l.54-1.66zM11.852 13.913l.54 1.66h1.746L12.725 16.6l.54 1.66-1.413-1.026-1.412 1.027.54-1.66-1.414-1.027h1.747l.54-1.66zM7.28 9.565l.54 1.661h1.746l-1.413 1.026.54 1.661-1.413-1.026-1.413 1.026.54-1.66-1.413-1.027H6.74l.54-1.66z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194549">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Samoa(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/SanMarino.tsx
Tamaño: 1598 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function SanMarino(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194661)">
        <path d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20c.87 0 20-2.609 20-2.609L40 20z" fill="#338AF3" />
        <path d="M0 20C0 8.954 8.954 0 20 0s20 8.954 20 20" fill="#F0F0F0" />
        <path
          d="M27.94 13.8L20 21.74l-7.938-7.94a9.51 9.51 0 00-1.627 5.33v2.609c0 4.189 2.707 7.757 6.463 9.049a2.893 2.893 0 00.318 3.125l2.843-2.278 2.842 2.278a2.894 2.894 0 00.3-3.16c3.705-1.32 6.365-4.862 6.365-9.014V19.13a9.51 9.51 0 00-1.627-5.33z"
          fill="#6DA544"
        />
        <path
          d="M20 28.696a6.964 6.964 0 01-6.957-6.957v-2.608A6.964 6.964 0 0120 12.174a6.964 6.964 0 016.956 6.957v2.608A6.964 6.964 0 0120 28.696z"
          fill="#FFDA44"
        />
        <path
          d="M24.348 21.74v-2.61A4.353 4.353 0 0020 14.784a4.353 4.353 0 00-4.348 4.348v2.608l4.348.87 4.348-.87z"
          fill="#338AF3"
        />
        <path d="M15.652 21.74A4.353 4.353 0 0020 26.086a4.353 4.353 0 004.348-4.348h-8.696z" fill="#6DA544" />
        <path
          d="M25.218 12.174a2.609 2.609 0 00-4.348-1.944V8.696h.87v-1.74h-.87v-.87h-1.739v.87h-.87v1.74h.87v1.534a2.609 2.609 0 00-3.478 3.888v1.534h8.695v-1.534c.534-.478.87-1.172.87-1.944z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194661">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function SanMarino(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/SaoTomeAndPrince.tsx
Tamaño: 1140 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function SaoTomeAndPrince(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193654)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M12.175 13.043h26.582C35.93 5.428 28.6 0 20 0A19.935 19.935 0 005.859 5.859l6.316 7.184zM12.175 26.956h26.582C35.93 34.572 28.6 40 20 40a19.935 19.935 0 01-14.142-5.858l6.316-7.186z"
          fill="#6DA544"
        />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#D80027" />
        <path
          d="M25.395 16.522l.864 2.657h2.794l-2.26 1.642.863 2.657-2.26-1.642-2.26 1.642.863-2.657-2.26-1.642h2.793l.863-2.657zM34.093 16.522l.863 2.657h2.794l-2.26 1.642.863 2.657-2.26-1.642-2.26 1.642.863-2.657-2.26-1.642h2.794l.863-2.657z"
          fill="#000"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193654">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function SaoTomeAndPrince(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Sardinia.tsx
Tamaño: 2231 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Sardinia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193767)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M39.83 17.391H22.61V.17a20.198 20.198 0 00-5.218 0v17.222H.17a20.198 20.198 0 000 5.218h17.222V39.83a20.193 20.193 0 005.218 0V22.609H39.83a20.193 20.193 0 000-5.218z"
          fill="#D80027"
        />
        <path d="M29.566 6.957a3.48 3.48 0 00-3.369 2.608l3.369.87 3.369-.87a3.48 3.48 0 00-3.37-2.608z" fill="#000" />
        <path
          d="M26.086 14.783l4.348.87v-1.85a3.484 3.484 0 002.499-2.499l-3.368-.87h-4.348l.87 2.61v1.739z"
          fill="#000"
        />
        <path d="M32.933 9.565h-7.716v3.479h.87v-1.74h6.846a3.481 3.481 0 000-1.739z" fill="#ACABB1" />
        <path d="M11.304 6.957a3.48 3.48 0 00-3.368 2.608l3.368.87 3.369-.87a3.48 3.48 0 00-3.369-2.608z" fill="#000" />
        <path
          d="M7.827 14.783l4.348.87v-1.85a3.485 3.485 0 002.498-2.499l-3.368-.87H6.957l.87 2.61v1.739z"
          fill="#000"
        />
        <path d="M14.674 9.565H6.957v3.479h.87v-1.74h6.846a3.486 3.486 0 000-1.739z" fill="#ACABB1" />
        <path
          d="M29.566 24.348a3.48 3.48 0 00-3.369 2.608l3.369.87 3.369-.87a3.48 3.48 0 00-3.37-2.608zM26.086 32.174l4.348.87v-1.85a3.484 3.484 0 002.499-2.498l-3.368-.87h-4.348l.87 2.609v1.739z"
          fill="#000"
        />
        <path d="M32.933 26.956h-7.716v3.479h.87v-1.74h6.846a3.481 3.481 0 000-1.739z" fill="#ACABB1" />
        <path
          d="M11.304 24.348a3.48 3.48 0 00-3.368 2.608l3.368.87 3.369-.87a3.48 3.48 0 00-3.369-2.608z"
          fill="#000"
        />
        <path
          d="M7.827 32.174l4.348.87v-1.85a3.485 3.485 0 002.498-2.498l-3.368-.87H6.957l.87 2.609v1.739z"
          fill="#000"
        />
        <path d="M14.674 26.956H6.957v3.479h.87v-1.74h6.846a3.486 3.486 0 000-1.739z" fill="#ACABB1" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193767">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Sardinia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/SaudiArabia.tsx
Tamaño: 1308 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function SaudiArabia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193880)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#6DA544" />
        <path
          d="M11.305 23.913a2.609 2.609 0 002.608 2.608h7.826c0 1.201.974 2.174 2.174 2.174h2.609c1.2 0 2.174-.973 2.174-2.174v-2.608H11.305zM28.913 11.304v6.087c0 .96-.78 1.74-1.74 1.74v2.608a4.353 4.353 0 004.349-4.348v-6.087h-2.609zM10.218 17.391c0 .96-.78 1.74-1.74 1.74v2.608a4.353 4.353 0 004.348-4.348v-6.087h-2.608v6.087z"
          fill="#F0F0F0"
        />
        <path
          d="M25 11.304h2.609v6.087H25v-6.087zM21.087 14.783a.435.435 0 01-.87 0v-3.479H17.61v3.479a.435.435 0 01-.87 0v-3.479h-2.608v3.479a3.047 3.047 0 003.043 3.043c.647 0 1.246-.203 1.74-.548a3.026 3.026 0 002.123.523 1.74 1.74 0 01-1.689 1.33v2.608a4.353 4.353 0 004.348-4.348v-6.087h-2.609v3.479z"
          fill="#F0F0F0"
        />
        <path d="M14.13 19.13h3.914v2.609H14.13V19.13z" fill="#F0F0F0" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193880">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function SaudiArabia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Scotland.tsx
Tamaño: 921 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Scotland(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194005)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M32.177 4.134A19.91 19.91 0 0020 0 19.91 19.91 0 007.824 4.134L20 16.311 32.177 4.134zM4.134 7.824A19.911 19.911 0 000 20c0 4.582 1.542 8.804 4.134 12.176L16.311 20 4.134 7.824zM7.824 35.866A19.91 19.91 0 0020 40c4.583 0 8.804-1.542 12.177-4.134L20 23.689 7.824 35.867zM35.866 32.176A19.91 19.91 0 0040 20a19.91 19.91 0 00-4.134-12.176L23.689 20l12.177 12.176z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194005">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Scotland(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Senegal.tsx
Tamaño: 985 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Senegal(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194105)">
        <path
          d="M28.695 1.985A19.92 19.92 0 0019.999 0a19.92 19.92 0 00-8.695 1.985L9.564 20l1.74 18.016A19.92 19.92 0 0019.999 40a19.92 19.92 0 008.696-1.984L30.434 20l-1.74-18.015z"
          fill="#FFDA44"
        />
        <path
          d="M20 13.044l1.727 5.314h5.588l-4.521 3.284 1.727 5.315L20 23.672l-4.52 3.285 1.726-5.315-4.52-3.284h5.587L20 13.044zM11.304 1.985C4.614 5.22 0 12.071 0 20c0 7.93 4.615 14.78 11.304 18.015V1.985z"
          fill="#496E2D"
        />
        <path d="M28.695 1.985v36.03C35.385 34.78 40 27.929 40 20S35.385 5.22 28.695 1.985z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194105">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Senegal(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Serbia.tsx
Tamaño: 1521 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Serbia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194232)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 0C8.954 0 0 8.954 0 20c0 2.446.44 4.79 1.244 6.956h37.512A19.957 19.957 0 0040 20C40 8.954 31.046 0 20 0z"
          fill="#0052B4"
        />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#D80027" />
        <path d="M5.172 11.304v9.977c0 5.676 7.414 7.415 7.414 7.415S20 26.956 20 21.28v-9.977H5.172z" fill="#D80027" />
        <path
          d="M8.238 13.043h8.696V9.566l-1.74.87-2.608-2.609-2.609 2.609-1.739-.87v3.479zM18.261 22.67l-5.652-5.652-5.652 5.652 1.845 1.845 3.807-3.807 3.808 3.807 1.844-1.845z"
          fill="#FFDA44"
        />
        <path
          d="M18.261 17.391h-2.637a1.74 1.74 0 10-3.038-1.69 1.738 1.738 0 10-3.037 1.69H6.957c0 .96.837 1.74 1.797 1.74h-.058c0 .96.779 1.739 1.74 1.739 0 .85.61 1.557 1.417 1.708l-1.37 3.094a5.636 5.636 0 002.126.415c.753 0 1.47-.148 2.127-.415l-1.37-3.094a1.739 1.739 0 001.417-1.708c.96 0 1.74-.779 1.74-1.74h-.058c.96 0 1.796-.778 1.796-1.739z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194232">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Serbia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Seychelles.tsx
Tamaño: 1109 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Seychelles(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194332)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M33.5 5.245A19.927 19.927 0 0020 0c-.852 0-1.691.054-2.515.157L7.826 11.304.633 25.01a19.877 19.877 0 002.092 5.072L20 20 33.5 5.245z"
          fill="#FFDA44"
        />
        <path
          d="M36.652 31.081l-27.982 5.4A19.906 19.906 0 0020 40c6.948 0 13.067-3.542 16.652-8.919z"
          fill="#6DA544"
        />
        <path
          d="M33.504 5.248L2.736 30.1a20.075 20.075 0 002.866 3.779L40 20c0-5.84-2.504-11.096-6.496-14.752z"
          fill="#D80027"
        />
        <path d="M0 20c0 1.73.22 3.409.633 5.01L17.485.157C7.626 1.394 0 9.807 0 20z" fill="#0052B4" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194332">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Seychelles(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/SierraLeone.tsx
Tamaño: 833 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function SierraLeone(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194445)">
        <path
          d="M38.756 26.957A19.955 19.955 0 0040 20c0-2.446-.44-4.79-1.244-6.956L20 11.304l-18.756 1.74A19.955 19.955 0 000 20c0 2.447.44 4.79 1.244 6.957L20 28.696l18.756-1.74z"
          fill="#F0F0F0"
        />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#338AF3" />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#6DA544" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194445">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function SierraLeone(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Singapore.tsx
Tamaño: 1330 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Singapore(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194557)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M0 20C0 8.954 8.954 0 20 0s20 8.954 20 20" fill="#D80027" />
        <path
          d="M12.173 10.435a6.088 6.088 0 014.783-5.946 6.087 6.087 0 100 11.89 6.088 6.088 0 01-4.783-5.944zM19.998 4.783l.432 1.328h1.397l-1.13.821.432 1.329-1.13-.821-1.13.82.431-1.328-1.13-.82h1.397l.431-1.33z"
          fill="#F0F0F0"
        />
        <path
          d="M16.61 7.391l.432 1.329h1.397l-1.13.821.431 1.329-1.13-.821-1.13.82.431-1.328-1.13-.821h1.397l.432-1.329zM23.387 7.391l.432 1.329h1.397l-1.13.821.431 1.329-1.13-.821-1.13.82.432-1.328-1.13-.821h1.396l.432-1.329zM22.084 11.304l.432 1.329h1.397l-1.13.821.432 1.329-1.13-.821-1.13.82.431-1.328-1.13-.821h1.397l.431-1.329zM17.915 11.304l.431 1.329h1.397l-1.13.821.432 1.329-1.13-.821-1.13.82.431-1.328-1.13-.821h1.397l.432-1.329z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194557">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Singapore(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/SintEustatius.tsx
Tamaño: 1986 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function SintEustatius(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194669)">
        <path
          d="M8.729 36.522A19.906 19.906 0 0020 40c4.181 0 8.063-1.284 11.272-3.478l-11.272-1.74-11.272 1.74zM31.273 3.478A19.907 19.907 0 0020.001 0 19.906 19.906 0 008.729 3.478L20 5.218l11.272-1.74z"
          fill="#D80027"
        />
        <path
          d="M8.729 36.522A19.906 19.906 0 0020 40c4.181 0 8.063-1.284 11.272-3.478l-11.272-1.74-11.272 1.74zM31.273 3.478A19.907 19.907 0 0020.001 0 19.906 19.906 0 008.729 3.478L20 5.218l11.272-1.74z"
          fill="#D80027"
        />
        <path
          d="M39.95 18.696c-.474-6.173-4.224-12.174-8.677-15.218H8.73C3.796 6.85.45 12.373.043 18.696L20.001 20l19.949-1.304zM.043 21.304C.45 27.627 3.796 33.15 8.728 36.522h22.545c4.933-3.372 8.279-8.895 8.686-15.218L20 20 .043 21.304z"
          fill="#0052B4"
        />
        <path
          d="M39.95 18.695H21.303V2.61h-2.608v16.087H.042a20.324 20.324 0 000 2.608h18.654v16.087h2.608V21.304h18.654c.028-.431.042-.866.042-1.304 0-.435-.018-.87-.05-1.305z"
          fill="#D80027"
        />
        <path d="M7.826 20L20 12.348 32.174 20 20 27.652 7.826 20z" fill="#F0F0F0" />
        <path
          d="M13.043 23.478h15.652l-3.478-5.217L23.477 20l-1.738-.87-1.74 2.609h-3.478l-1.739-1.74-1.739 3.48z"
          fill="#6DA544"
        />
        <path
          d="M20 14.783l.432 1.328h1.397l-1.13.821.431 1.329L20 17.44l-1.13.82.432-1.328-1.13-.821h1.397L20 14.782z"
          fill="#FFDA44"
        />
        <path
          d="M20 10.162L4.348 20 20 29.838 35.652 20 20 10.162zM9.25 20L20 13.243 30.75 20 20 26.757 9.25 20z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194669">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function SintEustatius(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/SintMaarten.tsx
Tamaño: 1394 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function SintMaarten(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193662)">
        <path
          d="M18.26 21.74S5.87 5.854 5.857 5.857A19.937 19.937 0 0120 0c11.045 0 20 8.954 20 20l-21.74 1.74z"
          fill="#D80027"
        />
        <path
          d="M18.26 20S5.87 34.145 5.857 34.142A19.937 19.937 0 0020 40c11.045 0 20-8.954 20-20H18.26z"
          fill="#0052B4"
        />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#F0F0F0" />
        <path
          d="M2.192 20a5.652 5.652 0 1011.268 0H2.192zM7.825 17.391a1.74 1.74 0 100-3.478 1.74 1.74 0 000 3.478z"
          fill="#FFDA44"
        />
        <path
          d="M3.912 15.217v5.653c0 2.995 3.913 3.913 3.913 3.913s3.913-.918 3.913-3.913v-5.653H3.912z"
          fill="#D80027"
        />
        <path
          d="M7.828 22.962c-.726-.26-2.176-.928-2.176-2.093v-3.913H10v3.913c0 1.168-1.45 1.834-2.172 2.093z"
          fill="#338AF3"
        />
        <path d="M8.695 19.13v-.87l-.87-.434-.869.435v.87l-.435.434v1.74h2.61v-1.74l-.436-.434z" fill="#F3F3F3" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193662">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function SintMaarten(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Slovakia.tsx
Tamaño: 1540 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Slovakia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193775)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 40c11.046 0 20-8.954 20-20 0-2.447-.44-4.79-1.244-6.957H1.244A19.956 19.956 0 000 20c0 11.046 8.954 20 20 20z"
          fill="#0052B4"
        />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#D80027" />
        <path d="M5.172 11.304v9.977c0 5.676 7.414 7.415 7.414 7.415S20 26.956 20 21.28v-9.977H5.172z" fill="#F0F0F0" />
        <path
          d="M6.91 11.304v9.977c0 .667.148 1.296.441 1.886H17.82c.293-.59.441-1.22.441-1.886v-9.977H6.91z"
          fill="#D80027"
        />
        <path
          d="M16.064 18.26h-2.609v-1.738h1.74v-1.74h-1.74v-1.739h-1.739v1.74H9.977v1.739h1.74v1.739h-2.61V20h2.61v1.74h1.738V20h2.609v-1.74z"
          fill="#F0F0F0"
        />
        <path
          d="M9.724 25.595c1.12.704 2.272 1.113 2.861 1.295.59-.182 1.741-.591 2.862-1.296 1.13-.71 1.922-1.522 2.372-2.427a3.03 3.03 0 00-2.447-.478 3.044 3.044 0 00-5.573 0 3.046 3.046 0 00-2.447.478c.45.905 1.241 1.717 2.372 2.427z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193775">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Slovakia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Slovenia.tsx
Tamaño: 1036 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Slovenia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193888)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M38.756 13.044H17.391V7.826H6.956v5.218H1.244A19.957 19.957 0 000 20c0 2.447.44 4.79 1.244 6.957L20 28.696l18.756-1.74A19.958 19.958 0 0040 20c0-2.446-.44-4.79-1.244-6.956z"
          fill="#0052B4"
        />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#D80027" />
        <path
          d="M6.957 13.044v1.739c0 3.993 5.218 5.217 5.218 5.217s5.217-1.224 5.217-5.217v-1.74l-1.74 1.74-3.477-2.609-3.479 2.609-1.739-1.74z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193888">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Slovenia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/SolomonIslands.tsx
Tamaño: 1520 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function SolomonIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194012)">
        <path
          d="M34.143 34.143c7.5-7.501 7.797-19.477.892-27.333L20 20 6.81 35.034c7.857 6.906 19.832 6.61 27.333-.891z"
          fill="#496E2D"
        />
        <path
          d="M5.857 5.857c7.501-7.5 19.476-7.797 27.333-.891L20 20 4.966 33.19c-6.906-7.856-6.61-19.832.891-27.333z"
          fill="#0052B4"
        />
        <path
          d="M33.189 4.966L4.965 33.19c.285.324.581.643.891.953.31.31.629.606.954.891L35.033 6.81a20.276 20.276 0 00-.891-.953c-.31-.31-.629-.606-.953-.891z"
          fill="#FFDA44"
        />
        <path
          d="M8.426 6.956l.432 1.328h1.397l-1.13.821.432 1.33-1.13-.822-1.13.821.43-1.329-1.13-.82h1.398l.431-1.33zM15.563 6.956l.432 1.328h1.397l-1.13.821.431 1.33-1.13-.822-1.13.821.432-1.329-1.13-.82h1.396l.432-1.33zM8.426 13.913l.432 1.328h1.397l-1.13.821.432 1.329-1.13-.821-1.13.821.43-1.329-1.13-.82h1.398l.431-1.33zM15.563 13.913l.432 1.328h1.397l-1.13.821.431 1.329-1.13-.821-1.13.821.432-1.329-1.13-.82h1.396l.432-1.33zM11.995 10.434l.432 1.329h1.396l-1.13.82.432 1.33-1.13-.822-1.13.822.431-1.33-1.13-.82h1.397l.432-1.329z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194012">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function SolomonIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Somalia.tsx
Tamaño: 677 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Somalia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194113)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#338AF3" />
        <path
          d="M20 10.435l2.16 6.643h6.984l-5.651 4.105 2.158 6.643-5.65-4.105-5.651 4.105 2.158-6.643-5.65-4.105h6.984l2.159-6.643z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194113">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Somalia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Somaliland.tsx
Tamaño: 1671 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Somaliland(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194239)">
        <path
          d="M38.756 26.956A19.957 19.957 0 0040 20c0-2.446-.44-4.79-1.244-6.957L20 11.304l-18.756 1.74A19.958 19.958 0 000 20c0 2.446.44 4.79 1.244 6.956L20 28.696l18.756-1.74z"
          fill="#F0F0F0"
        />
        <path d="M20 40c8.6 0 15.93-5.428 18.756-13.044H1.244C4.07 34.572 11.401 40 20 40z" fill="#D80027" />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#496E2D" />
        <path
          d="M20 15.652l1.078 3.322h3.493l-2.826 2.052 1.08 3.322-2.826-2.053-2.825 2.053 1.08-3.322-2.826-2.052h3.492L20 15.652z"
          fill="#000"
        />
        <path
          d="M25.94 3.913v4.058c0 .64-.52 1.16-1.159 1.16v1.739c1.599 0 2.899-1.3 2.899-2.9V3.914h-1.74zM13.478 7.97c0 .64-.52 1.16-1.16 1.16v1.74c1.599 0 2.899-1.3 2.899-2.9V3.914h-1.74v4.058z"
          fill="#F0F0F0"
        />
        <path
          d="M23.332 3.913h1.74v4.058h-1.74V3.913zM20.724 6.232a.29.29 0 01-.58 0V3.913h-1.74v2.319a.29.29 0 01-.579 0V3.913h-1.74v2.319c0 1.119.911 2.029 2.03 2.029.43 0 .83-.136 1.16-.365a2.017 2.017 0 001.415.348 1.16 1.16 0 01-1.126.886v1.74c1.599 0 2.899-1.3 2.899-2.9V3.914h-1.74v2.319z"
          fill="#F0F0F0"
        />
        <path d="M16.086 9.13h2.609v1.74h-2.61V9.13z" fill="#F0F0F0" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194239">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Somaliland(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/SouthAfrica.tsx
Tamaño: 1331 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function SouthAfrica(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194340)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M5.858 34.142c-7.81-7.81-7.81-20.474 0-28.284L17.39 20 5.858 34.142z" fill="#000" />
        <path
          d="M17.392 20L2.653 10.04c-.457.794-.86 1.623-1.206 2.482L8.91 20l-7.462 7.479c.346.857.749 1.686 1.206 2.48L17.393 20z"
          fill="#FFDA44"
        />
        <path
          d="M39.831 17.391h-22.44L5.858 5.858a20.077 20.077 0 00-3.205 4.182l9.94 9.96-9.94 9.959a20.074 20.074 0 003.205 4.183l11.533-11.533h22.44a20.192 20.192 0 000-5.218z"
          fill="#6DA544"
        />
        <path
          d="M7.824 35.865A19.911 19.911 0 0020.001 40c9.24 0 17.016-6.267 19.311-14.783h-20.84L7.824 35.865z"
          fill="#0052B4"
        />
        <path
          d="M39.312 14.783C37.017 6.267 29.242 0 20.001 0A19.911 19.911 0 007.824 4.135l10.648 10.648h20.84z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194340">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function SouthAfrica(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/SouthGeorgiaSouthSandwichIslands.tsx
Tamaño: 3725 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function SouthGeorgiaSouthSandwichIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
      <g clipPath="url(#clip0_2435_78727)">
        <path
          d="M40 20C40 31.0456 31.0456 40 20 40C8.95437 40 0 31.0456 0 20C0 20.0048 20 0.0021875 20 0C31.0456 0 40 8.95437 40 20Z"
          fill="#0052B4"
        />
        <path
          d="M24.8115 16.2721C24.9449 15.6892 25.4963 14.9025 25.4963 14.9025C25.1861 14.6892 24.989 14.5906 24.4691 14.5601C23.5978 14.7115 23.4549 15.0784 23.4419 15.9297C23.4419 15.9297 23.7829 17.2993 23.4419 17.9841C23.1008 18.6689 22.5436 19.0113 22.1999 20.3809C21.8562 21.7506 22.7462 23.1202 24.4691 23.4626C25.1539 23.5987 25.6462 23.3358 26.1811 23.1202C25.1127 22.8783 24.8085 22.7841 24.1267 22.093C24.3168 21.2187 24.5708 20.87 25.1539 20.3809L25.4963 21.7506C25.4963 21.7506 26.1666 20.6695 26.1811 19.6961C26.2025 18.2561 24.4901 17.676 24.8115 16.2721Z"
          fill="#F0F0F0"
        />
        <path
          d="M30.9634 16.6145H26.5121C26.5121 16.6145 26.5112 19.0113 26.5121 20.0385C26.5132 21.2713 28.7373 22.7778 28.7373 22.7778C28.7373 22.7778 30.9635 21.1732 30.9634 20.0385C30.9632 18.6689 30.9634 16.6145 30.9634 16.6145Z"
          fill="#6DA544"
        />
        <path
          d="M33.0187 14.5604C32.3697 14.2483 31.3066 15.2452 31.3066 15.2452L31.649 15.5876V19.3541L31.9914 21.7509L33.0187 22.0933L34.7307 22.7781L34.0459 21.7509C34.0459 21.7509 34.4797 19.8767 34.3883 18.6693C34.305 17.5697 34.1195 16.9512 33.7035 15.93C33.4778 15.3762 33.5576 14.8196 33.0187 14.5604Z"
          fill="black"
        />
        <path
          d="M28.5686 6.5L27.199 7.86961L25.8293 6.5L25.1445 7.52721L26.5141 8.21202L25.8293 8.89682L27.199 9.92403V11.6361H30.2806L29.9382 9.58163L27.5414 8.89682L29.2534 7.52721L28.5686 6.5Z"
          fill="#A2001D"
        />
        <circle cx="28.7394" cy="13.712" r="1.71202" fill="#A4A4A4" />
        <path
          d="M19.9473 20H20.0008C20.0008 19.982 20.0008 19.9645 20.0008 19.9465C19.983 19.9644 19.9652 19.9822 19.9473 20Z"
          fill="#F0F0F0"
        />
        <path
          d="M20 10.4348C20 6.91563 20 4.60977 20 0H19.9966C8.95242 0.001875 0 8.95539 0 20H10.4348V14.1241L16.3106 20H19.9466C19.9644 19.9822 19.9822 19.9644 20.0001 19.9465C20.0001 18.5991 20.0001 17.3968 20.0001 16.3108L14.1241 10.4348H20Z"
          fill="#F0F0F0"
        />
        <path
          d="M10.1191 2.60867C6.99102 4.38984 4.39047 6.99031 2.60938 10.1184V20H7.8268V7.82625V7.8261H20.0007C20.0007 6.18055 20.0007 4.61289 20.0007 2.60867H10.1191Z"
          fill="#D80027"
        />
        <path
          d="M20.0008 17.5405L12.8949 10.4348H10.4355V10.435L20.0006 20H20.0008C20.0008 20 20.0008 18.3041 20.0008 17.5405Z"
          fill="#D80027"
        />
        <path
          d="M32.4667 24.9646C29.7387 24.3026 28.241 24.2929 25.5333 24.9646C24.1955 24.0617 23.6114 23.8458 22.9333 24.0979C22.7621 24.7201 22.883 25.1599 23.8 26.2646L22.5 27.9979L23.3667 28.8646L24.6667 27.1313C25.3031 27.6828 25.5591 28.195 25.9667 29.2979C26.2376 28.2314 26.2834 27.6334 25.9667 26.6979C28.3348 25.6981 29.677 25.8054 32.0333 26.6979C31.768 27.9455 31.894 28.588 32.4667 29.2979C32.4588 28.5521 32.6714 28.1282 33.3333 27.1313L34.6333 28.8646L35.5 27.9979L34.2 26.2646L34.2176 26.23C34.6969 25.2893 34.9696 24.7541 34.6333 24.0979C33.7488 24.0628 33.2757 24.2834 32.4667 24.9646Z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="clip0_2435_78727">
          <rect width="40" height="40" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function SouthGeorgiaSouthSandwichIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/SouthKorea.tsx
Tamaño: 1847 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function SouthKorea(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194453)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M26.956 20c0 1.74-3.115 6.087-6.956 6.087-3.843 0-6.957-4.348-6.957-6.087a6.956 6.956 0 1113.913 0z"
          fill="#D80027"
        />
        <path d="M26.956 20a6.956 6.956 0 11-13.913 0" fill="#0052B4" />
        <path
          d="M27.373 26.15l1.844-1.845 1.23 1.23-1.844 1.844-1.23-1.23zM24.299 29.223l1.844-1.844 1.23 1.23-1.845 1.844-1.23-1.23zM31.063 29.838l1.844-1.845 1.23 1.23-1.845 1.844-1.23-1.23zM27.986 32.912l1.845-1.844 1.23 1.23-1.845 1.844-1.23-1.23zM29.217 27.993l1.844-1.844 1.23 1.23-1.845 1.844-1.23-1.23zM26.143 31.067l1.844-1.844 1.23 1.23-1.845 1.844-1.23-1.23zM31.07 13.854l-4.918-4.918 1.23-1.23 4.918 4.919-1.23 1.23zM26.15 12.625l-1.844-1.844 1.23-1.23 1.844 1.845-1.23 1.23zM29.225 15.7l-1.845-1.844 1.23-1.23 1.844 1.844-1.23 1.23zM29.84 8.936l-1.845-1.844 1.23-1.23 1.844 1.844-1.23 1.23zM32.914 12.011l-1.844-1.844 1.23-1.23 1.844 1.844-1.23 1.23zM7.09 27.99l4.918 4.918-1.23 1.23L5.86 29.22l1.23-1.23zM12.008 29.218l1.844 1.845-1.23 1.23-1.844-1.845 1.23-1.23zM8.934 26.145l1.844 1.845-1.23 1.23-1.844-1.845 1.23-1.23zM10.78 24.3l4.918 4.919-1.23 1.23L9.55 25.53l1.23-1.23zM12.008 7.088L7.09 12.006l-1.23-1.23 4.918-4.918 1.23 1.23zM13.852 8.932L8.933 13.85l-1.23-1.23 4.919-4.918 1.23 1.23zM15.7 10.777l-4.919 4.919-1.23-1.23 4.919-4.918 1.23 1.23z"
          fill="#000"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194453">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function SouthKorea(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/SouthSudan.tsx
Tamaño: 1220 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function SouthSudan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194565)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M38.44 12.246C35.413 5.052 28.298 0 20 0A19.935 19.935 0 005.86 5.859l5.008 6.387h27.573z"
          fill="#000"
        />
        <path
          d="M10.925 27.681l-5.066 6.46A19.935 19.935 0 0020.001 40c8.324 0 15.46-5.086 18.47-12.319H10.925z"
          fill="#496E2D"
        />
        <path d="M4.348 14.71v10.507H39.31A20.01 20.01 0 0040 20c0-1.831-.247-3.605-.708-5.29H4.348z" fill="#A2001D" />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#0052B4" />
        <path
          d="M6.515 15.028l2.441 3.406 3.995-1.27-2.485 3.375 2.44 3.407-3.977-1.321-2.485 3.374.027-4.19-3.977-1.322 3.994-1.269.027-4.19z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194565">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function SouthSudan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Spain.tsx
Tamaño: 825 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Spain(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194677)">
        <path
          d="M0 20c0 2.447.44 4.79 1.244 6.957L20 28.696l18.756-1.74A19.958 19.958 0 0040 20c0-2.446-.44-4.79-1.244-6.956L20 11.304l-18.756 1.74A19.957 19.957 0 000 20z"
          fill="#FFDA44"
        />
        <path
          d="M38.756 13.043C35.93 5.428 28.6 0 20 0 11.4 0 4.07 5.428 1.244 13.043h37.512zM1.244 26.956C4.07 34.572 11.401 40 20 40c8.6 0 15.93-5.428 18.756-13.044H1.244z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194677">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Spain(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/SriLanka.tsx
Tamaño: 1369 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function SriLanka(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193670)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M15.653 3.478H8.73c-.307.21-.608.428-.902.654L6.087 20l1.74 15.867c.294.227.595.445.902.655h6.924V3.478z"
          fill="#FF9811"
        />
        <path d="M0 20c0 6.465 3.068 12.212 7.826 15.868V4.133C3.068 7.789 0 13.536 0 20z" fill="#6DA544" />
        <path d="M32.174 12.193v.5l.018.003-.018-.503z" fill="#FFDA44" />
        <path
          d="M38.407 25.217h-3.768l-1.595 1.74v3.478h-3.478v-1.74h1.74v-3.478h-7.827v2.174h-1.74v-4.143a2.602 2.602 0 01-.869-1.944V10a2.609 2.609 0 012.61-2.609v16.087h3.477l1.194-.994a4.16 4.16 0 01-.324-1.614V18.26h-2.609v-5.217h5.218c0-.87 1.304-1.74 1.304-1.74s1.304.87 1.304 1.74v5.217c.968.012 2.505-.014 4.165 0a5.276 5.276 0 01-.687-2.609c0-1.534.663-2.914 1.718-3.868a20.08 20.08 0 00-6.967-8.306H18.262v33.044h13.011a20.044 20.044 0 007.822-10.554l-.688-.75z"
          fill="#A2001D"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193670">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function SriLanka(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/StBarts.tsx
Tamaño: 1503 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function StBarts(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193783)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M35.71 16.087h-6.58c0-1.2-.973-2.174-2.174-2.174l-1.74 3.478s1.856 5.218 1.798 5.218h2.174c1.2 0 2.174-.974 2.174-2.174 1.2 0 2.174-.973 2.174-2.174h-.073c1.2 0 2.246-.973 2.246-2.174zM4.29 16.087h6.579c0-1.2.973-2.174 2.174-2.174l1.739 3.478s-1.855 5.218-1.797 5.218H10.81c-1.2 0-2.174-.974-2.174-2.174-1.2 0-2.174-.973-2.174-2.174h.072c-1.2 0-2.246-.973-2.246-2.174z"
          fill="#ACABB1"
        />
        <path
          d="M26.956 27.826v.87H13.043v-.87H9.564v3.478h3.479v.87h13.913v-.87h3.478v-3.478h-3.478z"
          fill="#FFDA44"
        />
        <path
          d="M13.043 13.913v8.696c0 5.324 6.957 6.956 6.957 6.956s6.956-1.632 6.956-6.956v-8.696L20 13.043l-6.957.87z"
          fill="#0052B4"
        />
        <path d="M13.043 17.392h13.913v5.217H13.043v-5.217z" fill="#D80027" />
        <path
          d="M23.478 9.565v1.305l-.87.434-.87-.87V7.827H18.26v2.609l-.87.87-.869-.435V9.565h-3.478v4.348h13.913V9.565h-3.478z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193783">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function StBarts(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/StLucia.tsx
Tamaño: 737 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function StLucia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193896)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#338AF3" />
        <path d="M12.61 26.956h14.782l-7.391-17.39-7.392 17.39z" fill="#F3F3F3" />
        <path d="M15.178 25.218L20 14.248l4.823 10.97h-9.645z" fill="#333" />
        <path d="M12.61 26.956h14.782L20.001 20l-7.392 6.956z" fill="#FFDA44" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193896">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function StLucia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/StVincentAndTheGrenadines.tsx
Tamaño: 1064 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function StVincentAndTheGrenadines(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194019)">
        <path
          d="M29.565 2.432A19.91 19.91 0 0020 0a19.91 19.91 0 00-9.566 2.432L8.695 20l1.74 17.568A19.91 19.91 0 0020 40c3.465 0 6.723-.882 9.565-2.432L31.305 20l-1.74-17.568z"
          fill="#FFDA44"
        />
        <path d="M10.435 37.568V2.432C4.218 5.824 0 12.419 0 20c0 7.58 4.218 14.176 10.435 17.568z" fill="#338AF3" />
        <path
          d="M40 20c0-7.58-4.219-14.176-10.436-17.568v35.136C35.782 34.176 40 27.581 40 20zM15.652 25.217L12.174 20l3.478-5.217L19.131 20l-3.479 5.217zM24.347 25.217L20.87 20l3.478-5.217L27.826 20l-3.479 5.217zM20 32.174l-3.479-5.218L20 21.74l3.478 5.217L20 32.174z"
          fill="#6DA544"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194019">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function StVincentAndTheGrenadines(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Sudan.tsx
Tamaño: 942 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Sudan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194121)">
        <path
          d="M1.985 11.305A19.92 19.92 0 000 20c0 3.117.713 6.066 1.985 8.696L20 30.435l18.016-1.74A19.92 19.92 0 0040 20a19.92 19.92 0 00-1.984-8.695L20 9.565l-18.015 1.74z"
          fill="#F0F0F0"
        />
        <path d="M1.984 28.696C5.22 35.386 12.07 40 20 40c7.93 0 14.78-4.614 18.015-11.304H1.984z" fill="#000" />
        <path d="M1.984 11.304h36.03C34.779 4.614 27.928 0 19.999 0 12.07 0 5.22 4.614 1.984 11.304z" fill="#D80027" />
        <path d="M5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L20 20 5.858 5.858z" fill="#496E2D" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194121">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Sudan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Suriname.tsx
Tamaño: 1091 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Suriname(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194246)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M38.756 13.043H1.244A19.96 19.96 0 000 20c0 2.446.44 4.79 1.244 6.956h37.512A19.955 19.955 0 0040 20c0-2.446-.44-4.79-1.244-6.957z"
          fill="#A2001D"
        />
        <path
          d="M20.058 40c6.85 0 12.895-3.445 16.5-8.696h-33C7.164 36.555 13.209 40 20.059 40zM20.058 0c6.85 0 12.895 3.445 16.5 8.696h-33C7.164 3.445 13.209 0 20.059 0z"
          fill="#6DA544"
        />
        <path
          d="M20 13.043l1.727 5.315h5.588l-4.521 3.284 1.727 5.314L20 23.672l-4.522 3.284 1.727-5.314-4.52-3.284h5.587L20 13.043z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194246">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Suriname(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Swaziland.tsx
Tamaño: 1746 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Swaziland(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194348)">
        <path
          d="M38.016 28.696A19.92 19.92 0 0040 20a19.92 19.92 0 00-1.984-8.696L20 10.434l-18.015.87A19.921 19.921 0 000 20c0 3.116.713 6.066 1.985 8.696l18.015.87 18.016-.87z"
          fill="#FFDA44"
        />
        <path d="M20 0C12.07 0 5.22 4.614 1.984 11.304h36.031C34.78 4.614 27.93 0 20 0z" fill="#000" />
        <path d="M20 40c-7.93 0-14.78-4.614-18.016-11.304h36.031C34.78 35.386 27.93 40 20 40z" fill="#0052B4" />
        <path
          d="M39.056 13.913H.944A19.985 19.985 0 000 20c0 2.123.332 4.168.944 6.087h38.111c.613-1.92.945-3.964.945-6.087 0-2.122-.332-4.168-.944-6.087z"
          fill="#A2001D"
        />
        <path d="M6.957 19.13h26.087v1.74H6.957v-1.74zM10.435 15.652h19.131v1.74h-19.13v-1.74z" fill="#FFDA44" />
        <path
          d="M29.69 20s-4.472 5.217-9.69 5.217c-5.217 0-5.217-5.217-5.217-5.217s0-5.217 5.218-5.217c5.217 0 9.69 5.217 9.69 5.217z"
          fill="#F0F0F0"
        />
        <path d="M20 25.217c-5.217 0-9.69-5.217-9.69-5.217s4.473-5.217 9.69-5.217" fill="#000" />
        <path d="M16.521 18.26h1.74v3.48h-1.74v-3.48z" fill="#F0F0F0" />
        <path d="M21.738 18.26h1.74v3.48h-1.74v-3.48z" fill="#000" />
        <path
          d="M6.956 21.74a1.74 1.74 0 100-3.48 1.74 1.74 0 000 3.48zM33.044 21.74a1.74 1.74 0 100-3.48 1.74 1.74 0 000 3.48z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194348">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Swaziland(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Sweden.tsx
Tamaño: 860 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Sweden(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194461)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M15.652 17.391h24.179C38.552 7.578 30.16 0 20 0c-1.494 0-2.949.165-4.349.475v16.916zM10.435 17.391V2.431C4.944 5.429 1.012 10.926.17 17.392h10.265zM10.435 22.609H.17c.842 6.467 4.774 11.963 10.265 14.96v-14.96zM15.652 22.609v16.916c1.4.31 2.855.475 4.348.475 10.162 0 18.553-7.578 19.83-17.391H15.653z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194461">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Sweden(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Switzerland.tsx
Tamaño: 655 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Switzerland(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194573)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#D80027" />
        <path
          d="M30.434 16.522h-6.957V9.565h-6.956v6.957H9.564v6.956h6.957v6.957h6.956v-6.957h6.957v-6.956z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194573">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Switzerland(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Syria.tsx
Tamaño: 1008 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Syria(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194685)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#D80027" />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#000" />
        <path
          d="M11.95 15.217l1.08 3.321h3.492l-2.825 2.053 1.079 3.322-2.825-2.053-2.826 2.053 1.08-3.322-2.826-2.053h3.492l1.08-3.32zM28.05 15.217l1.08 3.321h3.492l-2.826 2.053 1.08 3.322-2.826-2.053-2.825 2.053 1.079-3.322-2.825-2.053h3.492l1.08-3.32z"
          fill="#6DA544"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194685">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Syria(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Taiwan.tsx
Tamaño: 1161 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Taiwan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193678)">
        <path d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20L20 0c11.046 0 20 8.954 20 20z" fill="#D80027" />
        <path d="M20 20V0C8.954 0 0 8.954 0 20h20z" fill="#0052B4" />
        <path
          d="M17.391 11.705l-2.443 1.149 1.301 2.365-2.652-.507-.336 2.68-1.848-1.971-1.847 1.97-.336-2.68-2.653.508 1.301-2.365-2.442-1.15 2.442-1.148-1.3-2.366 2.652.508.336-2.68 1.847 1.971 1.848-1.97.336 2.679 2.652-.508-1.3 2.366 2.442 1.149z"
          fill="#F0F0F0"
        />
        <path d="M11.414 15.427a3.723 3.723 0 100-7.446 3.723 3.723 0 000 7.446z" fill="#0052B4" />
        <path
          d="M11.413 13.688a1.986 1.986 0 01-1.983-1.983c0-1.094.89-1.984 1.983-1.984 1.094 0 1.984.89 1.984 1.984 0 1.094-.89 1.983-1.984 1.983z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193678">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Taiwan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Tajikistan.tsx
Tamaño: 1699 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Tajikistan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193791)">
        <path
          d="M1.985 11.304A19.921 19.921 0 000 20c0 3.116.713 6.066 1.985 8.696L20 30.435l18.016-1.74A19.92 19.92 0 0040 20c0-3.116-.713-6.066-1.984-8.696L20 9.565l-18.015 1.74z"
          fill="#F0F0F0"
        />
        <path d="M1.984 28.696C5.22 35.386 12.07 40 20 40c7.93 0 14.78-4.614 18.015-11.304H1.984z" fill="#6DA544" />
        <path d="M1.984 11.304h36.03C34.779 4.614 27.928 0 19.999 0S5.22 4.615 1.984 11.304z" fill="#D80027" />
        <path
          d="M16.521 25.218h6.957V22.26l-1.391.696L20 20.87l-2.087 2.087-1.392-.696v2.957zM12.541 21.74l.324.995h1.048l-.848.616.324.997-.848-.616-.847.616.324-.997-.848-.616h1.048l.323-.996zM13.545 18.26l.324.997h1.048l-.848.616.324.996-.848-.615-.847.615.323-.996-.847-.616h1.048l.323-.996zM16.415 15.652l.323.997h1.048l-.848.616.324.996-.848-.616-.847.616.324-.996-.848-.616h1.048l.323-.997zM27.457 21.74l-.323.995h-1.048l.848.616-.324.997.847-.616.848.616-.324-.997.848-.616H27.78l-.324-.996zM26.453 18.26l-.323.997h-1.048l.848.616-.324.996.847-.615.848.615-.324-.996.848-.616h-1.048l-.324-.996zM23.584 15.652l-.323.997h-1.048l.847.616-.323.996.847-.616.848.616-.324-.996.848-.616h-1.048l-.324-.997zM20 14.348l.324.996h1.048l-.848.616.324.996-.848-.615-.847.615.324-.996-.848-.616h1.048l.323-.996z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193791">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Tajikistan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Tanzania.tsx
Tamaño: 1017 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Tanzania(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193904)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M5.857 34.142a20.123 20.123 0 002.673 2.246L36.387 8.531a20.107 20.107 0 00-4.919-4.919L3.611 31.47a20.13 20.13 0 002.246 2.673z"
          fill="#000"
        />
        <path
          d="M5.857 5.858c-6.31 6.31-7.52 15.785-3.636 23.312L29.169 2.222C21.643-1.663 12.167-.451 5.857 5.858z"
          fill="#6DA544"
        />
        <path
          d="M34.142 34.142c6.31-6.31 7.521-15.785 3.637-23.312L10.83 37.778c7.527 3.885 17.003 2.674 23.312-3.636z"
          fill="#338AF3"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193904">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Tanzania(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Thailand.tsx
Tamaño: 911 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Thailand(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194026)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M38.756 13.043H1.244A19.955 19.955 0 000 20c0 2.446.44 4.79 1.244 6.956h37.512A19.957 19.957 0 0040 20c0-2.447-.44-4.79-1.244-6.957z"
          fill="#0052B4"
        />
        <path
          d="M20 0C13.94 0 8.509 2.697 4.84 6.956h30.322C31.494 2.697 26.062 0 20 0zM35.162 33.044H4.84C8.508 37.303 13.94 40 20 40c6.063 0 11.494-2.697 15.162-6.956z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194026">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Thailand(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Tibet.tsx
Tamaño: 1643 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Tibet(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194129)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M8.729 3.478A19.906 19.906 0 0120 0c4.181 0 8.063 1.284 11.272 3.478l-11.272.87-11.272-.87z"
          fill="#FFDA44"
        />
        <path
          d="M5.859 34.141l9.222-9.221L20 16.521l4.919 8.397 9.222 9.222A19.934 19.934 0 0040 20.001c0-6.865-3.459-12.92-8.728-16.522H8.728C3.458 7.08 0 13.136 0 20c0 5.523 2.24 10.522 5.859 14.141z"
          fill="#D80027"
        />
        <path
          d="M38.48 27.658L23.857 21.6l1.06 3.32 9.224 9.223a20.03 20.03 0 004.34-6.484zM40 20c0-2.713-.54-5.299-1.52-7.658L20 20h20zM34.141 5.86a20.11 20.11 0 00-2.869-2.381h-4.426L20 20 34.141 5.86zM20 3.479h-6.846L20 20V3.48zM5.859 5.86a20.029 20.029 0 00-4.34 6.482L20 20 5.86 5.86zM0 20c0 2.713.54 5.3 1.52 7.658L20 20H0z"
          fill="#0052B4"
        />
        <path
          d="M8.729 36.522A19.906 19.906 0 0020 40c4.181 0 8.063-1.284 11.272-3.478H8.73zM20.001 20l4.92 4.919a6.956 6.956 0 10-9.838 0L20 19.999zM23.044 30c0 1.68-1.363 2.174-3.044 2.174-1.68 0-3.043-.493-3.043-2.174a3.044 3.044 0 016.087 0z"
          fill="#FFDA44"
        />
        <path d="M23.044 30a3.044 3.044 0 01-6.087 0" fill="#0052B4" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194129">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Tibet(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Togo.tsx
Tamaño: 1015 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Togo(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194253)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M20 0c-.014 0-.87 8-.87 8h16.871c-3.648-4.858-9.457-8-16-8zM20 40c6.544 0 12.353-3.142 16.002-8H4c3.649 4.858 9.458 8 16 8zM39.6 16H19.13l.87 8h19.6c.262-1.292.4-2.63.4-4s-.138-2.708-.4-4z"
          fill="#496E2D"
        />
        <path d="M20 24V0C8.954 0 0 8.954 0 20c0 1.37.138 2.708.4 4H20z" fill="#D80027" />
        <path
          d="M11.037 9.565l1.295 3.986h4.19l-3.39 2.463L14.427 20l-3.39-2.463L7.647 20l1.294-3.986-3.39-2.463h4.19l1.296-3.986z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194253">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Togo(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Tokelau.tsx
Tamaño: 1300 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Tokelau(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194356)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path
          d="M32.174 9.565c-.18.862-.261 1.78-.261 2.696 0 5.276 3.145 9.842 7.653 11.898A20.08 20.08 0 0040 20C40 8.954 31.046 0 20 0S0 8.954 0 20s8.954 20 20 20c6.85 0 12.895-3.445 16.5-8.696H11.304v-2.608h26.712c.273-.566.52-1.146.74-1.74H11.304l20.87-17.39z"
          fill="#0052B4"
        />
        <path
          d="M14.692 10.435l.432 1.328h1.396l-1.13.822.432 1.328-1.13-.821-1.13.821.431-1.329-1.13-.82h1.397l.432-1.33zM9.018 20l.54 1.66h1.746L9.89 22.688l.54 1.66-1.413-1.026-1.413 1.027.54-1.661-1.413-1.026H8.48L9.019 20zM9.018 6.087l.54 1.66h1.746L9.89 8.775l.54 1.66-1.413-1.026-1.413 1.027.54-1.661-1.413-1.026H8.48l.54-1.661zM4.67 13.913l.54 1.66h1.746L5.544 16.6l.54 1.66-1.414-1.026-1.412 1.027.54-1.661-1.413-1.026H4.13l.54-1.661z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194356">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Tokelau(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Tonga.tsx
Tamaño: 748 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Tonga(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194469)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M13.044 10.435V7.826h-2.61v2.609H7.827v2.609h2.609v2.608h2.609v-2.608h2.608v-2.61h-2.608z"
          fill="#D80027"
        />
        <path d="M20 0v20H0c0 11.046 8.954 20 20 20s20-8.954 20-20S31.046 0 20 0z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194469">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Tonga(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Transnistria.tsx
Tamaño: 844 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Transnistria(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194581)">
        <path
          d="M39.312 14.783C37.017 6.267 29.24 0 20 0 10.76 0 2.983 6.267.688 14.783l19.311.87 19.312-.87zM.69 25.218C2.983 33.733 10.76 40 20 40c9.241 0 17.017-6.267 19.312-14.782L20 24.348l-19.312.87z"
          fill="#A2001D"
        />
        <path
          d="M39.311 14.783H.689A20.021 20.021 0 000 20c0 1.805.24 3.554.689 5.217h38.622C39.76 23.554 40 21.805 40 20c0-1.805-.24-3.554-.689-5.217z"
          fill="#6DA544"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194581">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Transnistria(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/TrinidadAndTobago.tsx
Tamaño: 1096 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function TrinidadAndTobago(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194693)">
        <path
          d="M10.83 2.22a19.988 19.988 0 00-4.973 3.637 19.986 19.986 0 00-3.636 4.972l12.86 14.09 14.09 12.86a19.994 19.994 0 004.972-3.636 19.993 19.993 0 003.636-4.973l-12.86-14.09L10.83 2.22z"
          fill="#F0F0F0"
        />
        <path
          d="M34.143 34.143a20.116 20.116 0 002.246-2.673L8.53 3.61a20.114 20.114 0 00-4.92 4.92L31.47 36.389a20.115 20.115 0 002.674-2.246z"
          fill="#000"
        />
        <path
          d="M5.857 34.143c6.31 6.31 15.786 7.521 23.314 3.636L2.22 10.83c-3.885 7.528-2.673 17.004 3.636 23.314zM34.143 5.857c-6.31-6.31-15.786-7.52-23.313-3.636l26.95 26.95c3.884-7.527 2.673-17.004-3.637-23.314z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194693">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function TrinidadAndTobago(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Tunisia.tsx
Tamaño: 937 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Tunisia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193686)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#D80027" />
        <path d="M20 29.565a9.565 9.565 0 000-19.13 9.565 9.565 0 100 19.13z" fill="#F0F0F0" />
        <path
          d="M21.177 16.343l1.64 2.261 2.659-.862-1.644 2.26 1.64 2.26-2.656-.864-1.643 2.26.001-2.795-2.656-.865 2.657-.861.002-2.794z"
          fill="#D80027"
        />
        <path
          d="M22.173 25.652a5.652 5.652 0 112.689-10.625 6.957 6.957 0 100 9.945c-.8.434-1.715.68-2.689.68z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193686">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Tunisia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Turkey.tsx
Tamaño: 840 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Turkey(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193799)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#D80027" />
        <path
          d="M19.18 16.343l1.642 2.261 2.658-.862-1.644 2.26 1.64 2.26-2.656-.864-1.643 2.26.001-2.795-2.657-.865 2.658-.861.002-2.794z"
          fill="#F0F0F0"
        />
        <path
          d="M14.703 25.652a5.652 5.652 0 112.688-10.625 6.956 6.956 0 100 9.945c-.8.434-1.715.68-2.688.68z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193799">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Turkey(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Turkmenistan.tsx
Tamaño: 2773 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Turkmenistan(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193912)">
        <path
          d="M20 0a20.07 20.07 0 00-4.347.475L14.783 20l.87 19.525c1.4.31 2.854.475 4.347.475 11.046 0 20-8.954 20-20S31.047 0 20 0zM5.217 6.529A19.927 19.927 0 000 20c0 5.19 1.976 9.916 5.217 13.471L6.087 20l-.87-13.47z"
          fill="#496E2D"
        />
        <path
          d="M29.252 15.086a6.088 6.088 0 00-2.494-7.211 6.087 6.087 0 11-4.015 11.192 6.088 6.088 0 006.509-3.981zM23.793 7.123l-.855 1.105-1.315-.472.787 1.154-.855 1.105 1.34-.391.787 1.154.043-1.396 1.34-.391-1.314-.472.042-1.396z"
          fill="#F0F0F0"
        />
        <path
          d="M26.102 10.723l-.855 1.104-1.315-.471.786 1.154-.855 1.105 1.341-.391.787 1.154.042-1.396 1.341-.391-1.315-.472.043-1.396zM19.723 8.434l-.855 1.105-1.315-.472.786 1.154-.855 1.105 1.341-.391.787 1.154.042-1.396 1.341-.391-1.315-.472.043-1.396zM19.63 12.557l-.856 1.105-1.315-.472.787 1.155-.855 1.105 1.34-.391.787 1.154.043-1.396 1.34-.392-1.314-.471.042-1.397zM23.553 13.965l-.855 1.105-1.315-.472.787 1.155-.856 1.104 1.342-.39.786 1.154.042-1.396 1.341-.392-1.314-.471.042-1.397z"
          fill="#F0F0F0"
        />
        <path d="M5.217 6.529V33.47a19.979 19.979 0 0010.435 6.053V.475A19.979 19.979 0 005.217 6.53z" fill="#D80027" />
        <path d="M9.2 10.53L7.453 9.229v-1.84L9.2 6.086h2.47l1.748 1.301v1.84L11.67 10.53H9.2z" fill="#F0F0F0" />
        <path
          d="M10.435 6.087H9.2L7.453 7.388v.9h2.982V6.087zM10.435 10.53h1.236l1.747-1.301v-.94h-2.982v2.241z"
          fill="#FF9811"
        />
        <path d="M9.2 33.913L7.453 32.61v-1.84L9.2 29.47h2.47l1.748 1.301v1.84l-1.747 1.302H9.2z" fill="#F0F0F0" />
        <path
          d="M10.435 29.47H9.2L7.453 30.77v.9h2.982V29.47zM10.435 33.913h1.236l1.747-1.302v-.938h-2.982v2.24z"
          fill="#FF9811"
        />
        <path
          d="M9.198 22.221L7.451 20.92v-1.84l1.747-1.302h2.47l1.748 1.302v1.84l-1.747 1.301h-2.47zM13.477 25.085h-.76v-.761h-1.338l-.945-.946-.945.946H8.15v.76h-.76v1.523h.76v.76H9.49l.945.946.946-.946h1.337v-.76h.76v-1.522zM13.477 13.393h-.76v-.76h-1.338l-.945-.946-.945.945H8.15v.761h-.76v1.522h.76v.76H9.49l.945.946.946-.945h1.337v-.761h.76v-1.522z"
          fill="#496E2D"
        />
        <path
          d="M9.564 19.13h1.74v1.74h-1.74v-1.74zM10.434 15.023a.87.87 0 100-1.739.87.87 0 000 1.74zM10.434 26.715a.87.87 0 100-1.739.87.87 0 000 1.74z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193912">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Turkmenistan(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/TurksAndCaicos.tsx
Tamaño: 1700 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function TurksAndCaicos(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194033)">
        <path
          d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20C0 20.005 20 .002 20 0c11.046 0 20 8.954 20 20z"
          fill="#0052B4"
        />
        <path
          d="M19.947 20h.054v-.053l-.054.053zM20 10.435V0h-.003C8.952.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.053V16.31l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M10.12 2.609a20.095 20.095 0 00-7.51 7.51V20h5.217V7.826H20V2.61h-9.882z" fill="#D80027" />
        <path d="M20 17.54l-7.105-7.105h-2.46L20.002 20v-2.46z" fill="#D80027" />
        <path
          d="M22.61 10.435V20c0 4.66 6.086 6.087 6.086 6.087s6.087-1.428 6.087-6.087v-9.565H22.61z"
          fill="#FFDA44"
        />
        <path
          d="M27.826 13.913c0 .96-.779 3.478-1.74 3.478-.96 0-1.738-2.517-1.738-3.478 0-.96 1.739-1.74 1.739-1.74s1.739.78 1.739 1.74z"
          fill="#FF9811"
        />
        <path
          d="M32.442 15.807c.28-.685.498-1.686.498-2.184 0-.8-1.043-1.45-1.043-1.45s-1.043.65-1.043 1.45c0 .498.218 1.5.498 2.184l-.602 1.36a3.04 3.04 0 002.294 0l-.602-1.36z"
          fill="#A2001D"
        />
        <path d="M27.391 20s-.87 1.739-.87 3.478h4.348C30.87 21.74 30 20 30 20l-1.304-.87-1.304.87z" fill="#6DA544" />
        <path d="M30 20v-.435a1.304 1.304 0 00-2.61 0V20H30z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194033">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function TurksAndCaicos(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Tuvalu.tsx
Tamaño: 2088 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Tuvalu(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194137)">
        <path
          d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20C0 20.005 20 .002 20 0c11.046 0 20 8.954 20 20z"
          fill="#338AF3"
        />
        <path d="M9.564 20h6.746l-5.876-6.956-.87 2.609V20zM20 16.311l-6.957-6.746H20v6.746z" fill="#0052B4" />
        <path
          d="M19.947 20h.054v-.054l-.054.054zM20 10.435V0h-.003C8.953.002 0 8.955 0 20h10.435v-5.876L16.31 20h3.636l.053-.053V16.31l-5.876-5.876H20z"
          fill="#F0F0F0"
        />
        <path d="M10.12 2.609a20.095 20.095 0 00-7.51 7.51V20h5.217V7.826H20V2.61h-9.882z" fill="#D80027" />
        <path d="M20 17.54l-7.105-7.105h-2.46L20.002 20v-2.46z" fill="#D80027" />
        <path
          d="M21.829 33.044l.431 1.328h1.397l-1.13.821.432 1.329-1.13-.821-1.13.82.431-1.328-1.13-.82h1.397l.432-1.33zM32.954 24.348l.431 1.328h1.397l-1.13.821.432 1.329-1.13-.821-1.13.82.431-1.328-1.13-.82h1.397l.432-1.33zM35.74 11.304l.432 1.329h1.397l-1.13.82.432 1.33-1.13-.822-1.13.821.431-1.328-1.13-.821h1.397l.432-1.329zM36.432 20.87l.432 1.328h1.397l-1.13.82.431 1.33-1.13-.822-1.13.821.432-1.328-1.13-.821H36l.431-1.329zM23.832 29.918l1.245.635.988-.988-.219 1.38 1.245.634-1.38.218-.219 1.38-.634-1.245-1.38.219.988-.988-.634-1.245zM23.832 24.701l1.245.634.988-.987-.219 1.38 1.245.633-1.38.22-.219 1.379-.634-1.245-1.38.219.988-.988-.634-1.245zM28.18 28.045l1.244.635.988-.988-.218 1.38 1.244.634-1.38.218-.218 1.38-.634-1.245-1.38.219.988-.988-.634-1.245zM28.18 16.875l1.244.634.988-.988-.218 1.38 1.244.634-1.38.219-.218 1.38-.634-1.245-1.38.219.988-.988-.634-1.245zM32.392 16.741l1.245.634.988-.987-.218 1.38 1.244.633-1.38.22L34.053 20l-.634-1.245-1.38.219.988-.988-.635-1.245z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194137">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Tuvalu(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Uganda.tsx
Tamaño: 1551 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Uganda(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194260)">
        <path
          d="M34.906 33.333A19.924 19.924 0 0040 20c0-5.123-1.927-9.795-5.094-13.333L20 5.217 5.094 6.667A19.924 19.924 0 000 20c0 5.123 1.927 9.795 5.094 13.333L20 34.783l14.906-1.45z"
          fill="#FFDA44"
        />
        <path d="M5.094 6.667h29.811A19.949 19.949 0 0020 0 19.949 19.949 0 005.094 6.667z" fill="#000" />
        <path d="M0 20l20 1.74L40 20a19.96 19.96 0 00-1.14-6.667H1.14A19.962 19.962 0 000 20z" fill="#D80027" />
        <path d="M1.14 26.667h37.72A19.965 19.965 0 0040 20H0c0 2.338.402 4.581 1.14 6.667z" fill="#000" />
        <path d="M34.905 33.333H5.094A19.949 19.949 0 0019.999 40a19.949 19.949 0 0014.906-6.667z" fill="#D80027" />
        <path d="M26.674 20a6.674 6.674 0 11-13.348 0 6.674 6.674 0 1113.348 0z" fill="#F0F0F0" />
        <path
          d="M22.445 20.34L20 19.28s.572-1.898.602-2.028a1.3 1.3 0 00-.348-1.218l.615-.614a2.167 2.167 0 00-1.537-.637c-.6 0-1.144.243-1.537.636l.615.615a1.3 1.3 0 00-.326 1.301l-.926.926h1.683s-.696 1.045-1.076 1.903c-.38.858.005 1.905.883 2.295l.508.226.844.793v.87l-.87.87h1.74v-1.74l.793-.793h1.641l.024-.05a1.74 1.74 0 00-.883-2.295z"
          fill="#000"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194260">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Uganda(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Ukraine.tsx
Tamaño: 573 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Ukraine(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194364)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#FFDA44" />
        <path d="M0 20C0 8.954 8.954 0 20 0s20 8.954 20 20" fill="#338AF3" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194364">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Ukraine(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/UnitedArabEmirates.tsx
Tamaño: 914 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function UnitedArabEmirates(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194477)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M11.305 26.956l1.739 11.8A19.955 19.955 0 0020 40c8.6 0 15.93-5.427 18.756-13.044H11.305z"
          fill="#000"
        />
        <path
          d="M11.305 13.043l1.739-11.8A19.955 19.955 0 0120 0c8.6 0 15.93 5.428 18.756 13.043H11.305z"
          fill="#6DA544"
        />
        <path d="M0 20c0 8.6 5.428 15.93 13.043 18.756V1.244C5.428 4.07 0 11.4 0 20z" fill="#A2001D" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194477">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function UnitedArabEmirates(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/UnitedKingdom.tsx
Tamaño: 1636 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function UnitedKingdom(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194589)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M4.135 7.823a19.927 19.927 0 00-3.446 6.96h10.405l-6.96-6.96zM39.31 14.783a19.927 19.927 0 00-3.445-6.96l-6.959 6.96h10.405zM.69 25.218a19.93 19.93 0 003.445 6.958l6.959-6.959H.689zM32.178 4.134A19.929 19.929 0 0025.218.69v10.404l6.96-6.959zM7.824 35.866a19.927 19.927 0 006.96 3.445V28.907l-6.96 6.959zM14.783.689a19.93 19.93 0 00-6.959 3.445l6.96 6.96V.688zM25.219 39.311a19.927 19.927 0 006.959-3.445l-6.96-6.96v10.405zM28.906 25.218l6.96 6.959a19.926 19.926 0 003.445-6.96H28.906z"
          fill="#0052B4"
        />
        <path
          d="M39.83 17.391H22.61V.17a20.198 20.198 0 00-5.218 0v17.222H.17a20.198 20.198 0 000 5.218h17.222V39.83a20.191 20.191 0 005.218 0V22.609H39.83a20.191 20.191 0 000-5.218z"
          fill="#D80027"
        />
        <path
          d="M25.217 25.218l8.925 8.924c.41-.41.801-.839 1.175-1.284l-7.64-7.64h-2.46zM14.782 25.218l-8.925 8.924c.41.41.84.802 1.284 1.176l7.641-7.641v-2.46zM14.782 14.783L5.857 5.858c-.41.41-.802.84-1.175 1.284l7.64 7.64h2.46zM25.217 14.783l8.925-8.925c-.41-.41-.84-.802-1.284-1.176l-7.641 7.641v2.46z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194589">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function UnitedKingdom(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/UnitedNations.tsx
Tamaño: 1698 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function UnitedNations(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194701)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#338AF3" />
        <path
          d="M19.943 13.044a6.956 6.956 0 100 13.913 6.956 6.956 0 000-13.913zM18.203 20a1.74 1.74 0 113.479 0 1.74 1.74 0 01-3.478 0zm3.543-2.974a3.455 3.455 0 00-.876-.378v-1.781c.785.14 1.508.456 2.129.906l-1.253 1.253zm-2.615-.408a3.45 3.45 0 00-.918.365l-1.258-1.258a5.19 5.19 0 012.176-.879v1.772zm-.918 6.4c.284.162.592.286.918.364v1.773a5.186 5.186 0 01-2.176-.879l1.258-1.258zm2.657.335c.312-.086.606-.214.876-.378l1.253 1.253a5.19 5.19 0 01-2.129.906v-1.781zm2.09-1.623c.153-.267.273-.555.351-.86h1.776a5.186 5.186 0 01-.868 2.119L22.96 21.73zm.351-2.6a3.454 3.454 0 00-.351-.86l1.259-1.258c.434.621.737 1.34.868 2.119H23.31zm-7.596-2.185l1.253 1.252c-.174.287-.308.6-.394.934H14.8c.135-.807.456-1.55.916-2.186zM14.8 20.87h1.775c.086.333.22.647.394.934l-1.253 1.252a5.187 5.187 0 01-.916-2.186z"
          fill="#F0F0F0"
        />
        <path
          d="M31.247 20c0-3.092-1.242-5.894-3.253-7.935l-1.845 1.845a8.696 8.696 0 11-12.355-.059l-1.844-1.844A11.269 11.269 0 008.639 20c0 5.173 3.474 9.535 8.217 10.878-.52.988-.44 2.231.302 3.158l2.843-2.278 2.842 2.278c.75-.936.825-2.195.287-3.188 4.691-1.376 8.117-5.711 8.117-10.848z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194701">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function UnitedNations(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/UnitedStates.tsx
Tamaño: 1787 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function UnitedStates(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193694)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M19.13 20H40c0-1.805-.24-3.554-.689-5.217h-20.18V20zM19.13 9.565h17.935a20.106 20.106 0 00-4.615-5.217H19.13v5.217zM20 40c4.707 0 9.034-1.627 12.45-4.348H7.55A19.914 19.914 0 0020 40zM2.936 30.435h34.129a19.88 19.88 0 002.247-5.218H.689a19.882 19.882 0 002.247 5.218z"
          fill="#D80027"
        />
        <path
          d="M9.264 3.123h1.823L9.392 4.355l.647 1.993-1.695-1.232-1.695 1.232.56-1.722a20.11 20.11 0 00-3.88 4.323h.584l-1.08.784c-.167.28-.328.566-.483.855l.515 1.586-.961-.699a19.808 19.808 0 00-.654 1.553l.568 1.747h2.095l-1.695 1.232L2.865 18 1.17 16.768l-1.015.738C.053 18.323 0 19.156 0 20h20V0c-3.95 0-7.634 1.146-10.736 3.123zM10.04 18l-1.695-1.232L6.649 18l.647-1.993-1.695-1.232h2.095l.648-1.992.647 1.992h2.096l-1.695 1.232.647 1.993zm-.647-7.819l.647 1.993-1.695-1.232-1.695 1.232.647-1.993-1.695-1.232h2.095l.648-1.993.647 1.993h2.096l-1.695 1.232zM17.213 18l-1.695-1.232L13.823 18l.647-1.993-1.695-1.232h2.095l.648-1.992.647 1.992h2.096l-1.695 1.232.647 1.993zm-.648-7.819l.648 1.993-1.695-1.232-1.695 1.232.647-1.993-1.695-1.232h2.095l.648-1.993.647 1.993h2.096l-1.695 1.232zm0-5.826l.648 1.993-1.695-1.232-1.695 1.232.647-1.993-1.695-1.232h2.095l.648-1.993.647 1.993h2.096l-1.695 1.232z"
          fill="#0052B4"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193694">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function UnitedStates(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/UnitedStatesMinorOutlyingIslands.tsx
Tamaño: 1863 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function UnitedStatesMinorOutlyingIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
      <g clipPath="url(#clip0_2435_78853)">
        <mask
          id="mask0_2435_78853"
          style={{ maskType: 'alpha' }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="40"
          height="40"
        >
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#F2F2F2"
          />
        </mask>
        <g mask="url(#mask0_2435_78853)">
          <path
            d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
            fill="#0052B4"
          />
          <rect y="15" width="40" height="10" fill="#F0F0F0" />
          <rect y="18" width="40" height="4" fill="#D80027" />
          <path
            d="M17 8.5L17.5613 10.2275H19.3776L17.9082 11.2951L18.4695 13.0225L17 11.9549L15.5305 13.0225L16.0918 11.2951L14.6224 10.2275H16.4387L17 8.5Z"
            fill="#F0F0F0"
          />
          <path
            d="M35 26.5L35.5613 28.2275H37.3776L35.9082 29.2951L36.4695 31.0225L35 29.9549L33.5305 31.0225L34.0918 29.2951L32.6224 28.2275H34.4387L35 26.5Z"
            fill="#F0F0F0"
          />
          <path
            d="M9.5 3.5L10.0613 5.22746H11.8776L10.4082 6.29508L10.9695 8.02254L9.5 6.95492L8.03054 8.02254L8.59182 6.29508L7.12236 5.22746H8.93871L9.5 3.5Z"
            fill="#F0F0F0"
          />
        </g>
      </g>
      <defs>
        <clipPath id="clip0_2435_78853">
          <rect width="40" height="40" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function UnitedStatesMinorOutlyingIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Uruguay.tsx
Tamaño: 1231 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Uruguay(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193807)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M20 14.783h19.311a19.887 19.887 0 00-2.246-5.218H20v5.218zM7.55 35.652h24.9a20.1 20.1 0 004.614-5.217H2.937a20.104 20.104 0 004.614 5.217zM20 0v4.348h12.45A19.914 19.914 0 0020 0z"
          fill="#338AF3"
        />
        <path
          d="M20 14.783h19.311a19.887 19.887 0 00-2.246-5.218H20v5.218zM0 20c0 1.805.24 3.554.689 5.217h38.622C39.76 23.554 40 21.805 40 20H0z"
          fill="#338AF3"
        />
        <path
          d="M17.391 11.705l-2.443 1.149 1.301 2.365-2.652-.507-.336 2.68-1.848-1.971-1.847 1.97-.336-2.679-2.653.507 1.301-2.365-2.442-1.15 2.442-1.148-1.3-2.366 2.652.508.336-2.68 1.847 1.97 1.848-1.97.336 2.68 2.652-.508-1.3 2.366 2.442 1.149z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193807">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Uruguay(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Uzbekistán.tsx
Tamaño: 2429 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Uzbekistán(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193920)">
        <path
          d="M.944 13.913A19.98 19.98 0 000 20c0 2.122.332 4.167.944 6.087l19.056.87 19.056-.87c.612-1.92.944-3.965.944-6.087 0-2.123-.332-4.168-.944-6.087L20 13.043l-19.056.87z"
          fill="#F0F0F0"
        />
        <path
          d="M39.055 13.913l-19.056-.87-19.055.87c-.182.57-.338 1.15-.47 1.74h39.05a19.92 19.92 0 00-.47-1.74zM.475 24.348c.13.59.287 1.17.468 1.739h.002l19.054.87 19.055-.87c.182-.569.338-1.15.47-1.74H.473z"
          fill="#D80027"
        />
        <path d="M20 40c8.924 0 16.48-5.844 19.056-13.913H.946C3.52 34.156 11.077 40 20 40z" fill="#6DA544" />
        <path d="M20 0C11.079 0 3.52 5.844.946 13.913h38.111C36.481 5.844 28.924 0 20.001 0z" fill="#338AF3" />
        <path
          d="M9.14 8.261a3.914 3.914 0 013.074-3.822 3.913 3.913 0 100 7.644A3.914 3.914 0 019.14 8.261zM14.527 10.04l.264.815h.857l-.693.504.265.815-.694-.504-.693.504.265-.815-.694-.504h.857l.266-.815zM17.263 10.04l.265.815h.857l-.694.504.265.815-.693-.504-.694.504.265-.815-.693-.504h.857l.265-.815zM20 10.04l.264.815h.857l-.693.504.265.815-.694-.504-.694.504.265-.815-.693-.504h.857L20 10.04zM22.735 10.04l.265.815h.858l-.694.504.265.815-.694-.504-.693.504.265-.815-.694-.504h.858l.264-.815zM25.472 10.04l.265.815h.857l-.694.504.265.815-.693-.504-.694.504.265-.815-.693-.504h.857l.265-.815zM17.263 7.194l.265.815h.857l-.694.504.265.815-.693-.504-.694.504.265-.815-.693-.504h.857l.265-.815zM20 7.194l.264.815h.857l-.693.504.265.815-.694-.504-.694.504.265-.815-.693-.504h.857L20 7.194zM22.735 7.194l.265.815h.858l-.694.504.265.815-.694-.504-.693.504.265-.815-.694-.504h.858l.264-.815zM25.472 7.194l.265.815h.857l-.694.504.265.815-.693-.504-.694.504.265-.815-.693-.504h.857l.265-.815zM20 4.348l.264.815h.857l-.693.504.265.815-.694-.503-.694.503.265-.815-.693-.504h.857L20 4.348zM22.735 4.348l.265.815h.858l-.694.504.265.815-.694-.503-.693.503.265-.815-.694-.504h.858l.264-.815zM25.472 4.348l.265.815h.857l-.694.504.265.815-.693-.503-.694.503.265-.815-.693-.504h.857l.265-.815z"
          fill="#F0F0F0"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193920">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Uzbekistán(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Vanuatu.tsx
Tamaño: 2089 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Vanuatu(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_193949)">
        <path
          d="M40 20c0-.884-.058-1.755-.17-2.609H17.392L5.858 5.858c-7.81 7.81-7.81 20.474 0 28.284L17.39 22.61h22.44c.11-.854.169-1.725.169-2.609z"
          fill="#000"
        />
        <path
          d="M39.993 20.455zM39.975 21.002l-.006.114.006-.114zM39.948 21.438l-.013.168.013-.169zM39.88 17.82l.022.201-.021-.2zM39.969 18.884l.006.115-.006-.115zM39.99 19.43l.003.115-.003-.116zM39.935 18.394l.013.169-.013-.169z"
          fill="#F0F0F0"
        />
        <path
          d="M39.83 17.391c.01.069.017.138.026.206C38.668 7.685 30.232 0 20 0A19.937 19.937 0 005.857 5.858l11.534 11.533h22.44z"
          fill="#D80027"
        />
        <path
          d="M39.83 22.609H17.39L5.857 34.142A19.938 19.938 0 0020 40c10.232 0 18.669-7.685 19.856-17.597l-.026.206z"
          fill="#6DA544"
        />
        <path d="M39.902 21.979l-.021.2c.007-.066.015-.133.021-.2z" fill="#F0F0F0" />
        <path
          d="M39.947 18.563zM39.855 17.597zM39.902 18.021zM40 20zM39.968 21.116zM39.935 21.606zM39.88 22.18zM39.994 19.545zM39.975 18.998zM39.991 20.57z"
          fill="#000"
        />
        <path
          d="M39.981 19.123H16.657L4.676 7.144c-.387.408-.807.979-1.067 1.385l11.458 11.464L3.6 31.46c.227.404.721 1.002 1.069 1.39l11.988-11.988h23.327a20.088 20.088 0 00-.003-1.739z"
          fill="#FFDA44"
        />
        <path
          d="M4.859 24.264v-1.676a3.035 3.035 0 003.032-3.031 2.147 2.147 0 00-2.145-2.145c-.806 0-1.462.655-1.462 1.461 0 .515.42.934.935.934a.529.529 0 00.528-.528h1.675a2.206 2.206 0 01-2.203 2.204 2.612 2.612 0 01-2.61-2.61 3.14 3.14 0 013.137-3.136 3.825 3.825 0 013.82 3.82 4.712 4.712 0 01-4.707 4.707z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_193949">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Vanuatu(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/VaticanCity.tsx
Tamaño: 1049 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function VaticanCity(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194145)">
        <path d="M20 0c11.045 0 20 8.954 20 20s-8.955 20-20 20c0-.87-2.61-20-2.61-20L20 0z" fill="#F0F0F0" />
        <path d="M20 40C8.954 40 0 31.046 0 20S8.954 0 20 0" fill="#FFDA44" />
        <path
          d="M27.659 17.403l3.759 4.973a2.61 2.61 0 101.387-1.049l-5.858-7.75-1.387 1.05-2.081 1.572 2.097 2.775 2.083-1.57zm5.411 5.717a.87.87 0 111.049 1.387.87.87 0 01-1.049-1.387z"
          fill="#ACABB1"
        />
        <path
          d="M34.106 18.974l2.097-2.774-2.08-1.574-1.388-1.048-5.858 7.75a2.61 2.61 0 101.387 1.048l3.759-4.973 2.083 1.571zm-7.325 5.364a.87.87 0 11-1.387-1.048.87.87 0 011.387 1.048z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194145">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function VaticanCity(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Venezuela.tsx
Tamaño: 1812 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Venezuela(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194176)">
        <path
          d="M38.016 28.696A19.919 19.919 0 0040 20a19.92 19.92 0 00-1.984-8.696L20 9.565l-18.015 1.74A19.92 19.92 0 000 20c0 3.116.713 6.066 1.985 8.696L20 30.435l18.016-1.74z"
          fill="#0052B4"
        />
        <path d="M20 40c7.929 0 14.78-4.614 18.015-11.304H1.985C5.218 35.386 12.07 40 20 40z" fill="#D80027" />
        <path
          d="M34.637 23.926l-1.057.825.459 1.26-1.112-.75-1.056.826.37-1.289-1.112-.75 1.34-.046.37-1.289.458 1.26 1.34-.047zM31.932 19.24l-.71 1.138.861 1.026-1.3-.323-.71 1.136-.095-1.337-1.3-.325 1.243-.502-.094-1.337.862 1.027 1.243-.502zM27.788 15.763l-.279 1.312 1.161.67-1.333.14-.279 1.311-.545-1.224-1.333.14.996-.897-.545-1.225 1.16.67.997-.897zM22.703 13.913l.187 1.328 1.32.232-1.204.588.186 1.328-.931-.965-1.205.588.63-1.184-.932-.964 1.32.233.63-1.184zM17.294 13.913l.63 1.184 1.32-.233-.932.964.63 1.184-1.205-.588-.932.965.187-1.328-1.205-.587 1.32-.233.187-1.328zM12.21 15.763l.997.897 1.16-.67-.545 1.225.996.897-1.333-.14-.545 1.224-.279-1.31-1.333-.14 1.161-.671-.279-1.312zM8.067 19.24l1.243.503.862-1.027-.093 1.338 1.242.502-1.3.324-.094 1.337-.71-1.136-1.301.324.862-1.027-.71-1.137zM5.361 23.926l1.34.047.459-1.26.37 1.289 1.34.047-1.112.75.37 1.288-1.057-.825-1.112.749.459-1.26-1.057-.825z"
          fill="#F0F0F0"
        />
        <path d="M38.015 11.304C34.78 4.614 27.93 0 20 0 12.07 0 5.22 4.614 1.984 11.304h36.031z" fill="#FFDA44" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194176">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Venezuela(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Vietnam.tsx
Tamaño: 678 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Vietnam(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194372)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#D80027" />
        <path
          d="M20 10.435l2.159 6.643h6.985l-5.651 4.105 2.158 6.643-5.65-4.105-5.651 4.105 2.158-6.643-5.65-4.105h6.984l2.159-6.643z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194372">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Vietnam(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/VirginIslands.tsx
Tamaño: 1651 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function VirginIslands(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194485)">
        <path
          d="M39.5 20c0 10.77-8.73 19.5-19.5 19.5S.5 30.77.5 20 9.23.5 20 .5 39.5 9.23 39.5 20z"
          fill="#FCFCFC"
          stroke="#F3F3F3"
        />
        <path
          d="M23.397 13.972a3.397 3.397 0 00-6.793 0H9.13c0 1.847 1.609 3.345 3.456 3.345h-.111a3.344 3.344 0 003.344 3.344 3.344 3.344 0 002.726 3.285l-.009.02h2.927l-.009-.02a3.344 3.344 0 002.726-3.285 3.345 3.345 0 003.344-3.344h-.111c1.847 0 3.456-1.498 3.456-3.345h-7.473z"
          fill="#FFDA44"
        />
        <path
          d="M18.506 23.62L16.4 28.373a9.537 9.537 0 003.6.703 9.534 9.534 0 003.6-.703l-2.107-4.755h-2.986z"
          fill="#FFDA44"
        />
        <path
          d="M15.652 15.643v5.85c0 3.329 4.348 4.349 4.348 4.349s4.348-1.02 4.348-4.348v-5.851h-8.696z"
          fill="#F0F0F0"
        />
        <path
          d="M4.85 20.14l2.352 6.578 2.327-6.577h1.776l-3.393 8.696h-1.42L3.073 20.14H4.85zM32.174 28.837V20.14h1.69v8.696h-1.69z"
          fill="#338AF3"
        />
        <path
          d="M17.39 17.532v7.09c.598.44 1.241.743 1.74.937v-8.027h-1.74zM22.608 17.532v7.09c-.598.44-1.24.743-1.739.937v-8.027h1.74z"
          fill="#D80027"
        />
        <path d="M15.652 15.643h8.696v2.759h-8.696v-2.76z" fill="#0052B4" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194485">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function VirginIslands(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Wales.tsx
Tamaño: 1163 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Wales(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194597)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M40 20c0 11.046-8.954 20-20 20S0 31.046 0 20" fill="#496E2D" />
        <path
          d="M34.611 13.917a5.219 5.219 0 00-4.92-3.482h-4.473A5.218 5.218 0 0020 15.652c0 .942.251 1.846.687 2.609-1.66-.014-3.197.011-4.165 0v-5.112l.206-.205c.922-.923.614-2.46.614-2.46s-1.536-.307-2.459.615l-1.075 1.075H12.61a4.782 4.782 0 00-4.782 4.782h3.478v3.914c0 .572.115 1.117.324 1.614l-1.194.994H8.696V21.74H6.957v3.478h7.826v3.479h-1.739v1.739h3.478v-3.479l1.594-1.912h3.769l1.594 1.912v1.74h-1.74v1.739h6.957v-9.566a2.609 2.609 0 012.72-2.605 3.478 3.478 0 013.196-4.346zm-9.393 14.779v-3.653h.145l1.594 1.913v1.74h-1.739z"
          fill="#D80027"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194597">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Wales(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Yemen.tsx
Tamaño: 705 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Yemen(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194709)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path d="M20 40c8.6 0 15.93-5.427 18.756-13.044H1.244C4.07 34.573 11.401 40 20 40z" fill="#000" />
        <path d="M20 0C11.4 0 4.07 5.428 1.244 13.043h37.512C35.93 5.428 28.6 0 20 0z" fill="#D80027" />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194709">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Yemen(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Zambia.tsx
Tamaño: 1073 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Zambia(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_194437)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#496E2D" />
        <path d="M27.826 20H20v20c2.338 0 4.581-.402 6.667-1.14L27.827 20z" fill="#D80027" />
        <path d="M33.333 34.906A19.948 19.948 0 0040 20h-7.826l1.16 14.906z" fill="#FF9811" />
        <path d="M26.666 20v18.86a19.987 19.987 0 006.667-3.954V20h-6.667z" fill="#000" />
        <path
          d="M36.956 13.043H31.74a1.74 1.74 0 00-3.479 0h-5.217c0 .961.837 1.74 1.797 1.74h-.058c0 .96.779 1.739 1.74 1.739 0 .96.778 1.739 1.738 1.739h3.479c.96 0 1.739-.779 1.739-1.74.96 0 1.739-.778 1.739-1.738h-.058c.96 0 1.797-.78 1.797-1.74z"
          fill="#FF9811"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_194437">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Zambia(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/Zimbabwe.tsx
Tamaño: 1935 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';

export function Zimbabwe(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg width={40} height={40} fill="none" {...props}>
      <g clipPath="url(#prefix__clip0_568_192735)">
        <path d="M20 40c11.046 0 20-8.954 20-20S31.046 0 20 0 0 8.954 0 20s8.954 20 20 20z" fill="#F0F0F0" />
        <path
          d="M38.085 11.453a20.05 20.05 0 00-4.078-5.726L20 4.347 5.992 5.728l-.133.133 5.594 5.593 8.547.261 18.085-.26zM5.86 34.14c.073.074.146.148.221.22L20 35.652l13.919-1.292a20.055 20.055 0 004.126-5.726l-25.871-.808-6.315 6.315z"
          fill="#FFDA44"
        />
        <path d="M39.8 17.18l-23.278-.658L20 20l-3.479 3.478 23.268-.571a20.15 20.15 0 00.012-5.727z" fill="#000" />
        <path d="M20 0C14.545 0 9.6 2.185 5.992 5.727h28.016A19.934 19.934 0 0020 0z" fill="#6DA544" />
        <path
          d="M17.182 17.18h22.62a19.86 19.86 0 00-1.715-5.727H11.455l5.727 5.727zM11.367 28.634h26.679a19.86 19.86 0 001.744-5.727H17.094l-5.727 5.727z"
          fill="#D80027"
        />
        <path d="M20 40c5.411 0 10.32-2.15 13.92-5.64H6.081C9.682 37.85 14.59 40 20.001 40z" fill="#6DA544" />
        <path
          d="M7.141 4.682c-.444.374-.873.766-1.284 1.176L20 20 5.857 34.142c.41.41.84.802 1.284 1.176L22.46 20 7.141 4.682z"
          fill="#000"
        />
        <path
          d="M8.04 14.783l1.295 3.985h4.191l-3.39 2.464 1.295 3.985-3.39-2.463-3.391 2.463 1.295-3.985-3.39-2.464h4.19l1.295-3.985z"
          fill="#D80027"
        />
        <path
          d="M11.602 20.326l-3.374-1.195s-.25-2.34-.265-2.42a1.305 1.305 0 10-2.538.59l-.946.953H6.16C6.161 20 4.858 20 4.858 21.739l.723 1.74h4.348l.724-1.74a1.74 1.74 0 00.135-.51c.624-.253.814-.903.814-.903z"
          fill="#FFDA44"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_568_192735">
          <path fill="#fff" d="M0 0h40v40H0z" />
        </clipPath>
      </defs>
    </svg>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
export function Zimbabwe(props: React.SVGProps<SVGSVGElement>) {
return (
<svg width={40} height={40} fill="none" {...props}>
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/eskib
Tamaño: 0 bytes
Lenguaje detectado: ESKIB

### CONTENIDO ORIGINAL ###



### ANALISIS AUTOMATICO (ESPAÑOL) ###

Sin cabecera detectada en las primeras líneas.
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/icons/flags/index.tsx
Tamaño: 18089 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Afghanistan } from './Afghanistan';
import { Albania } from './Albania';
import { Algeria } from './Algeria';
import { AmericanSamoa } from './AmericanSamoa';
import { Andorra } from './Andorra';
import { Angola } from './Angola';
import { Argentina } from './Argentina';
import { Armenia } from './Armenia';
import { Aruba } from './Aruba';
import { Australia } from './Australia';
import { Austria } from './Austria';
import { Azerbaijan } from './Azerbaijan';
import { Bahrain } from './Bahrain';
import { Bangladesh } from './Bangladesh';
import { Barbados } from './Barbados';
import { BasqueCountry } from './BasqueCountry';
import { Belarus } from './Belarus';
import { Belgium } from './Belgium';
import { Belize } from './Belize';
import { Benin } from './Benin';
import { Bermuda } from './Bermuda';
import { Bhutan } from './Bhutan';
import { Bolivia } from './Bolivia';
import { BosniaAndHerzegovina } from './BosniaAndHerzegovina';
import { Botswana } from './Botswana';
import { Brazil } from './Brazil';
import { Brunei } from './Brunei';
import { Bulgaria } from './Bulgaria';
import { BurkinaFaso } from './BurkinaFaso';
import { Burundi } from './Burundi';
import { Cambodia } from './Cambodia';
import { Cameroon } from './Cameroon';
import { Canada } from './Canada';
import { CentralAfricanRepublic } from './CentralAfricanRepublic';
import { Chad } from './Chad';
import { Chile } from './Chile';
import { China } from './China';
import { CocosIsland } from './CocosIsland';
import { Colombia } from './Colombia';
import { Comoros } from './Comoros';
import { CostaRica } from './CostaRica';
import { Croatia } from './Croatia';
import { Curacao } from './Curacao';
import { Cyprus } from './Cyprus';
import { CzechRepublic } from './CzechRepublic';
import { DemocraticRepublicOfCongo } from './DemocraticRepublicOfCongo';
import { Denmark } from './Denmark';
import { Djibouti } from './Djibouti';
import { DominicanRepublic } from './DominicanRepublic';
import { Ecuador } from './Ecuador';
import { Egypt } from './Egypt';
import { ElSalvador } from './ElSalvador';
import { EquatorialGuinea } from './EquatorialGuinea';
import { Eritrea } from './Eritrea';
import { Estonia } from './Estonia';
import { Ethiopia } from './Ethiopia';
import { Fiji } from './Fiji';
import { Finland } from './Finland';
import { France } from './France';
import { FrenchPolynesia } from './FrenchPolynesia';
import { Gabon } from './Gabon';
import { Gambia } from './Gambia';
import { Georgia } from './Georgia';
import { Germany } from './Germany';
import { Ghana } from './Ghana';
import { Gibraltar } from './Gibraltar';
import { Greece } from './Greece';
import { Greenland } from './Greenland';
import { Guam } from './Guam';
import { Guatemala } from './Guatemala';
import { Guernsey } from './Guernsey';
import { Guinea } from './Guinea';
import { GuineaBissau } from './GuineaBissau';
import { Guyana } from './Guyana';
import { Hawaii } from './Hawaii';
import { Honduras } from './Honduras';
import { HongKong } from './HongKong';
import { Hungary } from './Hungary';
import { Iceland } from './Iceland';
import { India } from './India';
import { Indonesia } from './Indonesia';
import { Iran } from './Iran';
import { Iraq } from './Iraq';
import { Ireland } from './Ireland';
import { IsleOfMan } from './IsleOfMan';
import { Israel } from './Israel';
import { Italy } from './Italy';
import { IvoryCoast } from './IvoryCoast';
import { Jamaica } from './Jamaica';
import { Japan } from './Japan';
import { Jersey } from './Jersey';
import { Jordan } from './Jordan';
import { Kazakhstan } from './Kazakhstan';
import { Kenya } from './Kenya';
import { Kuwait } from './Kuwait';
import { Kyrgyzstan } from './Kyrgyzstan';
import { Laos } from './Laos';
import { Latvia } from './Latvia';
import { Lebanon } from './Lebanon';
import { Lesotho } from './Lesotho';
import { Libya } from './Libya';
import { Liechtenstein } from './Liechtenstein';
import { Lithuania } from './Lithuania';
import { Luxembourg } from './Luxembourg';
import { Madagascar } from './Madagascar';
import { Malawi } from './Malawi';
import { Malaysia } from './Malaysia';
import { Maldives } from './Maldives';
import { Mali } from './Mali';
import { Malta } from './Malta';
import { Martinique } from './Martinique';
import { Mauritania } from './Mauritania';
import { Mauritius } from './Mauritius';
import { Mexico } from './Mexico';
import { Moldova } from './Moldova';
import { Monaco } from './Monaco';
import { Mongolia } from './Mongolia';
import { Montenegro } from './Montenegro';
import { Morocco } from './Morocco';
import { Mozambique } from './Mozambique';
import { Myanmar } from './Myanmar';
import { Namibia } from './Namibia';
import { Nauru } from './Nauru';
import { Nepal } from './Nepal';
import { Netherlands } from './Netherlands';
import { NewZealand } from './NewZealand';
import { Nicaragua } from './Nicaragua';
import { Niger } from './Niger';
import { Nigeria } from './Nigeria';
import { NorthernMarianasIslands } from './NorthernMarianasIslands';
import { Norway } from './Norway';
import { Oman } from './Oman';
import { Pakistan } from './Pakistan';
import { Palau } from './Palau';
import { Panama } from './Panama';
import { PapuaNewGuinea } from './PapuaNewGuinea';
import { Paraguay } from './Paraguay';
import { Peru } from './Peru';
import { Philippines } from './Philippines';
import { Poland } from './Poland';
import { Portugal } from './Portugal';
import { PuertoRico } from './PuertoRico';
import { Qatar } from './Qatar';
import { RepublicOfTheCongo } from './RepublicOfTheCongo';
import { Romania } from './Romania';
import { Russia } from './Russia';
import { Rwanda } from './Rwanda';
import { Samoa } from './Samoa';
import { SaoTomeAndPrince } from './SaoTomeAndPrince';
import { SaudiArabia } from './SaudiArabia';
import { Senegal } from './Senegal';
import { Serbia } from './Serbia';
import { Singapore } from './Singapore';
import { SintMaarten } from './SintMaarten';
import { Slovakia } from './Slovakia';
import { Slovenia } from './Slovenia';
import { Somalia } from './Somalia';
import { SouthAfrica } from './SouthAfrica';
import { SouthKorea } from './SouthKorea';
import { SouthSudan } from './SouthSudan';
import { Spain } from './Spain';
import { SriLanka } from './SriLanka';
import { StBarts } from './StBarts';
import { StVincentAndTheGrenadines } from './StVincentAndTheGrenadines';
import { Sudan } from './Sudan';
import { Suriname } from './Suriname';
import { Sweden } from './Sweden';
import { Switzerland } from './Switzerland';
import { Syria } from './Syria';
import { Taiwan } from './Taiwan';
import { Tajikistan } from './Tajikistan';
import { Tanzania } from './Tanzania';
import { Thailand } from './Thailand';
import { Togo } from './Togo';
import { Tonga } from './Tonga';
import { TrinidadAndTobago } from './TrinidadAndTobago';
import { Tunisia } from './Tunisia';
import { Turkey } from './Turkey';
import { Turkmenistan } from './Turkmenistan';
import { Tuvalu } from './Tuvalu';
import { Uganda } from './Uganda';
import { Ukraine } from './Ukraine';
import { UnitedArabEmirates } from './UnitedArabEmirates';
import { UnitedKingdom } from './UnitedKingdom';
import { UnitedStates } from './UnitedStates';
import { Uruguay } from './Uruguay';
import { Vanuatu } from './Vanuatu';
import { VaticanCity } from './VaticanCity';
import { Venezuela } from './Venezuela';
import { Vietnam } from './Vietnam';
import { Yemen } from './Yemen';
import { Zambia } from './Zambia';
import { Macao } from './Macao';
import { MarshallIsland } from './MarshallIsland';
import { RepublicOfMacedonia } from './RepublicOfMacedonia';
import { EastTimor } from './EastTimor';
import { Uzbekistán } from './Uzbekistán';
import { VirginIslands } from './VirginIslands';
import { CaribbeanNetherlands } from './CaribbeanNetherlands';
import { ChristmasIsland } from './ChristmasIsland';
import { FrenchGuiana } from './FrenchGuiana';
import { FrenchSouthernTerritories } from './FrenchSouthernTerritories';
import { Guadeloupe } from './Guadeloupe';
import { Mayotte } from './Mayotte';
import { Reunion } from './Reunion';
import { SouthGeorgiaSouthSandwichIslands } from './SouthGeorgiaSouthSandwichIslands';
import { Catalan } from './Catalan';
import { Galician } from './Galician';
import { Occitan } from './Occitan';
import { NorthernSami } from './NorthernSami';
import { UnitedStatesMinorOutlyingIslands } from './UnitedStatesMinorOutlyingIslands';
import { SahrawiArabDemocraticRepublic } from './SahrawiArabDemocraticRepublic';

export const FlagMap = Object.freeze({
  zh_TW: Taiwan,
  fa_AF: Afghanistan,
  tk_AF: Afghanistan,
  sq_AL: Albania,
  el_AL: Albania,
  ar_DZ: Algeria,
  en_AS: AmericanSamoa,
  sm_AS: AmericanSamoa,
  to_AS: AmericanSamoa,
  ca_AD: Andorra,
  pt_AO: Angola,
  es_AR: Argentina,
  en_AR: Argentina,
  it_AR: Argentina,
  de_AR: Argentina,
  fr_AR: Argentina,
  gn_AR: Argentina,
  hy_AM: Armenia,
  nl_AW: Aruba,
  es_AW: Aruba,
  en_AW: Aruba,
  en_AU: Australia,
  de_AT: Austria,
  hr_AT: Austria,
  hu_AT: Austria,
  sl_AT: Austria,
  az_AZ: Azerbaijan,
  ru_AZ: Azerbaijan,
  hy_AZ: Azerbaijan,
  ar_BH: Bahrain,
  en_BH: Bahrain,
  fa_BH: Bahrain,
  ur_BH: Bahrain,
  bn_BD: Bangladesh,
  en_BD: Bangladesh,
  en_BB: Barbados,
  be_BY: Belarus,
  ru_BY: Belarus,
  nl_BE: Belgium,
  fr_BE: Belgium,
  de_BE: Belgium,
  en_BZ: Belize,
  es_BZ: Belize,
  fr_BJ: Benin,
  en_BM: Bermuda,
  pt_BM: Bermuda,
  dz_BT: Bhutan,
  es_BO: Bolivia,
  qu_BO: Bolivia,
  ay_BO: Bolivia,
  nl_BQ: CaribbeanNetherlands,
  en_BQ: CaribbeanNetherlands,
  sr_BA: BosniaAndHerzegovina,
  en_BW: Botswana,
  pt_BR: Brazil,
  es_BR: Brazil,
  en_BR: Brazil,
  fr_BR: Brazil,
  ms_BN: Brunei,
  bg_BG: Bulgaria,
  fr_BF: BurkinaFaso,
  fr_BI: Burundi,
  rn_BI: Burundi,
  fr_KH: Cambodia,
  en_KH: Cambodia,
  fr_CM: Cameroon,
  en_CA: Canada,
  fr_CA: Canada,
  iu_CA: Canada,
  fr_CF: CentralAfricanRepublic,
  sg_CF: CentralAfricanRepublic,
  ln_CF: CentralAfricanRepublic,
  kg_CF: CentralAfricanRepublic,
  fr_TD: Chad,
  es_CL: Chile,
  zh_CN: China,
  yue_CN: China,
  ug_CN: China,
  za_CN: China,
  zh_HK: HongKong,
  yue_HK: HongKong,
  en_HK: HongKong,
  pt_MO: Macao,
  en_CX: ChristmasIsland,
  en_CC: CocosIsland,
  es_CO: Colombia,
  ar_KM: Comoros,
  fr_KM: Comoros,
  fr_CG: RepublicOfTheCongo,
  kg_CG: RepublicOfTheCongo,
  ln_CG: RepublicOfTheCongo,
  es_CR: CostaRica,
  en_CR: CostaRica,
  hr_HR: Croatia,
  sr_HR: Croatia,
  nl_CW: Curacao,
  el_CY: Cyprus,
  en_CY: Cyprus,
  cs_CZ: CzechRepublic,
  sk_CZ: CzechRepublic,
  fr_CI: IvoryCoast,
  fr_CD: DemocraticRepublicOfCongo,
  ln_CD: DemocraticRepublicOfCongo,
  kg_CD: DemocraticRepublicOfCongo,
  sw_CD: DemocraticRepublicOfCongo,
  da_DK: Denmark,
  en_DK: Denmark,
  fr_DJ: Djibouti,
  ar_DJ: Djibouti,
  so_DJ: Djibouti,
  aa_DJ: Djibouti,
  es_DO: DominicanRepublic,
  es_EC: Ecuador,
  ar_EG: Egypt,
  en_EG: Egypt,
  fr_EG: Egypt,
  es_SV: ElSalvador,
  es_GQ: EquatorialGuinea,
  fr_GQ: EquatorialGuinea,
  ar_ER: Eritrea,
  ti_ER: Eritrea,
  et_EE: Estonia,
  ru_EE: Estonia,
  am_ET: Ethiopia,
  om_ET: Ethiopia,
  ti_ET: Ethiopia,
  so_ET: Ethiopia,
  fj_FJ: Fiji,
  fi_FI: Finland,
  sv_FI: Finland,
  fr_FR: France,
  br_FR: France,
  co_FR: France,
  ca_FR: France,
  eu_FR: France,
  oc_FR: France,
  fr_GF: FrenchGuiana,
  ty_PF: FrenchPolynesia,
  fr_TF: FrenchSouthernTerritories,
  fr_GA: Gabon,
  wo_GM: Gambia,
  ff_GM: Gambia,
  ru_GE: Georgia,
  hy_GE: Georgia,
  az_GE: Georgia,
  de_DE: Germany,
  ak_GH: Ghana,
  ee_GH: Ghana,
  tw_GH: Ghana,
  es_GI: Gibraltar,
  it_GI: Gibraltar,
  pt_GI: Gibraltar,
  el_GR: Greece,
  en_GR: Greece,
  fr_GR: Greece,
  kl_GL: Greenland,
  en_GL: Greenland,
  fr_GP: Guadeloupe,
  en_GU: Guam,
  es_GT: Guatemala,
  en_GG: Guernsey,
  fr_GN: Guinea,
  pt_GW: GuineaBissau,
  en_GY: Guyana,
  it_VA: VaticanCity,
  fr_VA: VaticanCity,
  es_HN: Honduras,
  hu_HU: Hungary,
  is_IS: Iceland,
  en_IS: Iceland,
  de_IS: Iceland,
  da_IS: Iceland,
  sv_IS: Iceland,
  no_IS: Iceland,
  en_IN: India,
  hi_IN: India,
  bn_IN: India,
  te_IN: India,
  mr_IN: India,
  ta_IN: India,
  ur_IN: India,
  kn_IN: India,
  ml_IN: India,
  or_IN: India,
  pa_IN: India,
  as_IN: India,
  bh_IN: India,
  ks_IN: India,
  ne_IN: India,
  sd_IN: India,
  kok_IN: India,
  sa_IN: India,
  fr_IN: India,
  id_ID: Indonesia,
  en_ID: Indonesia,
  nl_ID: Indonesia,
  jv_ID: Indonesia,
  fa_IR: Iran,
  ar_IQ: Iraq,
  hy_IQ: Iraq,
  en_IE: Ireland,
  ga_IE: Ireland,
  en_IM: IsleOfMan,
  gv_IM: IsleOfMan,
  he_IL: Israel,
  en_IL: Israel,
  it_IT: Italy,
  ca_IT: Italy,
  co_IT: Italy,
  sl_IT: Italy,
  en_JM: Jamaica,
  ja_JP: Japan,
  en_JE: Jersey,
  fr_JE: Jersey,
  ar_JO: Jordan,
  en_JO: Jordan,
  kk_KZ: Kazakhstan,
  ru_KZ: Kazakhstan,
  sw_KE: Kenya,
  ar_KW: Kuwait,
  en_KW: Kuwait,
  ky_KG: Kyrgyzstan,
  uz_KG: Kyrgyzstan,
  ru_KG: Kyrgyzstan,
  lo_LA: Laos,
  fr_LA: Laos,
  en_LA: Laos,
  lv_LV: Latvia,
  ru_LV: Latvia,
  lt_LV: Latvia,
  ar_LB: Lebanon,
  en_LB: Lebanon,
  hy_LB: Lebanon,
  st_LS: Lesotho,
  zu_LS: Lesotho,
  xh_LS: Lesotho,
  ar_LY: Libya,
  it_LY: Libya,
  en_LY: Libya,
  de_LI: Liechtenstein,
  lt_LT: Lithuania,
  ru_LT: Lithuania,
  pl_LT: Lithuania,
  lb_LU: Luxembourg,
  de_LU: Luxembourg,
  fr_LU: Luxembourg,
  fr_MG: Madagascar,
  mg_MG: Madagascar,
  ny_MW: Malawi,
  swk_MW: Malawi,
  ms_MY: Malaysia,
  en_MY: Malaysia,
  ta_MY: Malaysia,
  te_MY: Malaysia,
  ml_MY: Malaysia,
  pa_MY: Malaysia,
  th_MY: Malaysia,
  dv_MV: Maldives,
  en_MV: Maldives,
  fr_ML: Mali,
  bm_ML: Mali,
  en_MT: Malta,
  mh_MH: MarshallIsland,
  en_MH: MarshallIsland,
  fr_MQ: Martinique,
  fr_MR: Mauritania,
  wo_MR: Mauritania,
  en_MU: Mauritius,
  fr_MU: Mauritius,
  fr_YT: Mayotte,
  es_MX: Mexico,
  fr_MC: Monaco,
  en_MC: Monaco,
  it_MC: Monaco,
  ru_MN: Mongolia,
  sr_ME: Montenegro,
  hu_ME: Montenegro,
  sq_ME: Montenegro,
  hr_ME: Montenegro,
  ar_MA: Morocco,
  fr_MA: Morocco,
  pt_MZ: Mozambique,
  my_MM: Myanmar,
  en_NA: Namibia,
  af_NA: Namibia,
  de_NA: Namibia,
  hz_NA: Namibia,
  naq_NA: Namibia,
  na_NR: Nauru,
  ne_NP: Nepal,
  en_NP: Nepal,
  nl_NL: Netherlands,
  fy_NL: Netherlands,
  en_NZ: NewZealand,
  es_NI: Nicaragua,
  en_NI: Nicaragua,
  fr_NE: Niger,
  ha_NE: Niger,
  kr_NE: Niger,
  dje_NE: Niger,
  en_NG: Nigeria,
  ha_NG: Nigeria,
  yo_NG: Nigeria,
  ig_NG: Nigeria,
  ff_NG: Nigeria,
  fil_MP: NorthernMarianasIslands,
  tl_MP: NorthernMarianasIslands,
  en_MP: NorthernMarianasIslands,
  no_NO: Norway,
  nb_NO: Norway,
  nn_NO: Norway,
  se_NO: Norway,
  fi_NO: Norway,
  ar_OM: Oman,
  en_OM: Oman,
  ur_OM: Oman,
  ur_PK: Pakistan,
  en_PK: Pakistan,
  pa_PK: Pakistan,
  sd_PK: Pakistan,
  ja_PW: Palau,
  fil_PW: Palau,
  es_PA: Panama,
  en_PA: Panama,
  ho_PG: PapuaNewGuinea,
  es_PY: Paraguay,
  gn_PY: Paraguay,
  es_PE: Peru,
  qu_PE: Peru,
  ay_PE: Peru,
  tl_PH: Philippines,
  en_PH: Philippines,
  fil_PH: Philippines,
  ceb_PH: Philippines,
  tsg_PH: Philippines,
  pl_PL: Poland,
  pt_PT: Portugal,
  es_PR: PuertoRico,
  ar_QA: Qatar,
  es_QA: Qatar,
  ko_KR: SouthKorea,
  en_KR: SouthKorea,
  ro_MD: Moldova,
  ru_MD: Moldova,
  tr_MD: Moldova,
  ro_RO: Romania,
  hu_RO: Romania,
  ru_RU: Russia,
  tt_RU: Russia,
  kv_RU: Russia,
  ce_RU: Russia,
  ba_RU: Russia,
  av_RU: Russia,
  rw_RW: Rwanda,
  fr_RW: Rwanda,
  sw_RW: Rwanda,
  fr_RE: Reunion,
  fr_BL: StBarts,
  fr_MF: France,
  fr_VC: StVincentAndTheGrenadines,
  sm_WS: Samoa,
  pt_ST: SaoTomeAndPrince,
  ar_SA: SaudiArabia,
  fr_SN: Senegal,
  wo_SN: Senegal,
  sr_RS: Serbia,
  hu_RS: Serbia,
  en_SG: Singapore,
  ms_SG: Singapore,
  ta_SG: Singapore,
  zh_SG: Singapore,
  nl_SX: SintMaarten,
  en_SX: SintMaarten,
  sk_SK: Slovakia,
  hu_SK: Slovakia,
  sl_SI: Slovenia,
  so_SO: Somalia,
  it_SO: Somalia,
  zu_ZA: SouthAfrica,
  xh_ZA: SouthAfrica,
  af_ZA: SouthAfrica,
  nso_ZA: SouthAfrica,
  en_ZA: SouthAfrica,
  tn_ZA: SouthAfrica,
  st_ZA: SouthAfrica,
  ts_ZA: SouthAfrica,
  ss_ZA: SouthAfrica,
  ve_ZA: SouthAfrica,
  nr_ZA: SouthAfrica,
  en_GS: SouthGeorgiaSouthSandwichIslands,
  en_SS: SouthSudan,
  es_ES: Spain,
  ca_ES: Catalan,
  gl_ES: Galician,
  eu_ES: BasqueCountry,
  oc_ES: Occitan,
  si_LK: SriLanka,
  ta_LK: SriLanka,
  en_LK: SriLanka,
  ar_SD: Sudan,
  en_SD: Sudan,
  en_SR: Suriname,
  jv_SR: Suriname,
  no_SJ: Norway,
  ru_SJ: Russia,
  sv_SE: Sweden,
  se_SE: NorthernSami,
  de_CH: Switzerland,
  fr_CH: Switzerland,
  it_CH: Switzerland,
  rm_CH: Switzerland,
  ar_SY: Syria,
  hy_SY: Syria,
  fr_SY: Syria,
  en_SY: Syria,
  tg_TJ: Tajikistan,
  ru_TJ: Tajikistan,
  th_TH: Thailand,
  en_TH: Thailand,
  sq_MK: RepublicOfMacedonia,
  tr_MK: RepublicOfMacedonia,
  sr_MK: RepublicOfMacedonia,
  id_TL: EastTimor,
  en_TL: EastTimor,
  fr_TG: Togo,
  ee_TG: Togo,
  ha_TG: Togo,
  to_TO: Tonga,
  en_TT: TrinidadAndTobago,
  fr_TT: TrinidadAndTobago,
  es_TT: TrinidadAndTobago,
  ar_TN: Tunisia,
  fr_TN: Tunisia,
  tr_TR: Turkey,
  az_TR: Turkey,
  av_TR: Turkey,
  tk_TM: Turkmenistan,
  ru_TM: Turkmenistan,
  uz_TM: Turkmenistan,
  en_TV: Tuvalu,
  sm_TV: Tuvalu,
  lg_UG: Uganda,
  sw_UG: Uganda,
  ar_UG: Uganda,
  uk_UA: Ukraine,
  ru_UA: Ukraine,
  pl_UA: Ukraine,
  hu_UA: Ukraine,
  ar_AE: UnitedArabEmirates,
  fa_AE: UnitedArabEmirates,
  en_AE: UnitedArabEmirates,
  hi_AE: UnitedArabEmirates,
  ur_AE: UnitedArabEmirates,
  en_GB: UnitedKingdom,
  cy_GB: UnitedKingdom,
  gd_GB: UnitedKingdom,
  sw_TZ: Tanzania,
  en_TZ: Tanzania,
  ar_TZ: Tanzania,
  en_UM: UnitedStatesMinorOutlyingIslands,
  en_VI: VirginIslands,
  en_US: UnitedStates,
  es_US: UnitedStates,
  haw_US: Hawaii,
  fr_US: UnitedStates,
  es_UY: Uruguay,
  uz_UZ: Uzbekistán,
  ru_UZ: Uzbekistán,
  tg_UZ: Uzbekistán,
  bi_VU: Vanuatu,
  es_VE: Venezuela,
  vi_VN: Vietnam,
  en_VN: Vietnam,
  fr_VN: Vietnam,
  ar_EH: SahrawiArabDemocraticRepublic,
  ar_YE: Yemen,
  bem_ZM: Zambia,
  ny_ZM: Zambia,
  en_ZW: Zambia,
  sn_ZW: Zambia,
  nr_ZW: Zambia,
  nd_ZW: Zambia,
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Afghanistan } from './Afghanistan';
import { Albania } from './Albania';
import { Algeria } from './Algeria';
import { AmericanSamoa } from './AmericanSamoa';
import { Andorra } from './Andorra';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/pages/CreateGroupPage.tsx
Tamaño: 520 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { useNavigate } from 'react-router-dom';
import { ROUTES } from '../routes';
import { CreateGroupSidebar } from '../components/CreateGroupSidebar';

export function CreateGroupPage() {
  const navigate = useNavigate();

  const onClose = () => {
    navigate(ROUTES.HOME);
  };

  const onGroupCreated = (groupIdentifier: string) => {
    navigate(`/translations/edit/${groupIdentifier}`);
  };

  return <CreateGroupSidebar open onClose={onClose} onGroupCreated={onGroupCreated} />;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { useNavigate } from 'react-router-dom';
import { ROUTES } from '../routes';
import { CreateGroupSidebar } from '../components/CreateGroupSidebar';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/pages/EditGroupPage.tsx
Tamaño: 619 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { EditGroupSidebar } from '../components/EditGroupSidebar';

export function EditGroupPage() {
  const { identifier } = useParams();
  const navigate = useNavigate();

  const onClose = () => {
    navigate(`/translations/edit/${identifier}`);
  };
  const onGroupUpdated = (groupIdentifier: string) => {
    navigate(`/translations/edit/${groupIdentifier}`);
  };

  if (!identifier) {
    return null;
  }

  return <EditGroupSidebar open onGroupUpdated={onGroupUpdated} onClose={onClose} groupIdentifier={identifier} />;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { EditGroupSidebar } from '../components/EditGroupSidebar';
export function EditGroupPage() {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/pages/EditGroupTranslationsPage.tsx
Tamaño: 831 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { EditTranslationFileProvider } from '../context/useEditTranslationFileContext';
import { EditTranslationsSidebar } from '../components/EditTranslationsSidebar';
import { ROUTES } from '../routes';

export function EditGroupTranslationsPage() {
  const { identifier } = useParams();
  const navigate = useNavigate();

  const onClose = () => {
    navigate(ROUTES.HOME);
  };

  const onEditGroup = (groupIdentifier: string) => {
    navigate(`/translations/edit/${groupIdentifier}/settings`);
  };

  if (!identifier) {
    return null;
  }

  return (
    <EditTranslationFileProvider>
      <EditTranslationsSidebar open onEditGroup={onEditGroup} onClose={onClose} identifier={identifier} />;
    </EditTranslationFileProvider>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { EditTranslationFileProvider } from '../context/useEditTranslationFileContext';
import { EditTranslationsSidebar } from '../components/EditTranslationsSidebar';
import { ROUTES } from '../routes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/pages/SingleTranslationFileEditPage.tsx
Tamaño: 549 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { SingleTranslationFileEditSidebar } from '../components/UploadFilesSection/SingleTranslationFileEditSidebar';

export function SingleTranslationFileEditPage() {
  const { identifier } = useParams();
  const navigate = useNavigate();

  const onClose = () => {
    navigate(`/translations/edit/${identifier}`);
  };

  if (!identifier) {
    return null;
  }

  return <SingleTranslationFileEditSidebar open onClose={onClose} identifier={identifier} />;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { SingleTranslationFileEditSidebar } from '../components/UploadFilesSection/SingleTranslationFileEditSidebar';
export function SingleTranslationFileEditPage() {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/pages/TranslationGroupsPage.tsx
Tamaño: 3864 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Container, Group, UnstyledButton } from '@mantine/core';
import { useDisclosure } from '@mantine/hooks';
import { colors, PageContainer, Text, Title, When, IRow } from '@novu/design-system';
import { useState } from 'react';
import { Outlet, useNavigate } from 'react-router-dom';
import { Flex } from '@novu/novui/jsx';
import { useEnvironment } from '../../../hooks';
import { useGetDefaultLocale, ITranslationGroup, useFetchLocales, useFetchTranslationGroups } from '../hooks';
import { FlagIcon } from '../components/shared';

import { DefaultLocaleModal } from '../components/DefaultLocaleModal';
import { TranslationGroupEmptyList } from '../components/TranslationGroup/TranslationGroupEmptyList';
import { TranslationGroupListToolbar } from '../components/TranslationGroup/TranslationGroupListToolbar';
import { TranslationGroupsList } from '../components/TranslationGroup/TranslationGroupsList';
import { ROUTES } from '../routes';

export const TranslationGroupsPage = () => {
  const [page, setPage] = useState(0);
  const { defaultLocale } = useGetDefaultLocale();
  const navigate = useNavigate();
  const { translationGroups, isLoading, totalCount, pageSize } = useFetchTranslationGroups(page);
  const { getLocale } = useFetchLocales();
  const [defaultLocaleOpened, { close: closeDefaultLocale, open: openDefaultLocale }] = useDisclosure(false);

  const hasTranslationGroups = translationGroups && translationGroups.length > 0;
  const handlePageChange = (pageNumber: number) => {
    setPage(pageNumber);
  };

  const handleAddGroupButtonClick = () => {
    if (!defaultLocale) {
      openDefaultLocale();

      return;
    }
    navigate(ROUTES.TRANSLATION_GROUP_CREATE);
  };

  const onRowClick = (row: IRow<ITranslationGroup>) => {
    navigate(ROUTES.TRANSLATION_GROUP_EDIT.replace(':identifier', row.original.identifier));
  };

  const { readonly } = useEnvironment();

  return (
    <PageContainer>
      <Group position="apart" mx={24} mt={24} mb={16} align="center">
        <Flex align="center" gap="75">
          <Title size={2} data-test-id="translation-title">
            Translations
          </Title>
        </Flex>

        <When truthy={hasTranslationGroups}>
          <Group spacing={12} align="center">
            <Text color={colors.B60}>Default:</Text>
            <UnstyledButton
              onClick={() => {
                openDefaultLocale();
              }}
              disabled={readonly}
            >
              <Group spacing={4} align="center">
                <FlagIcon locale={defaultLocale || ''} />
                <Text>{getLocale(defaultLocale || '')?.langName}</Text>
              </Group>
            </UnstyledButton>
          </Group>
        </When>
      </Group>

      <When truthy={isLoading || hasTranslationGroups}>
        <Container fluid sx={{ padding: '8px 24px' }}>
          <TranslationGroupListToolbar
            isLoading={isLoading}
            onAddGroupClick={handleAddGroupButtonClick}
            readonly={readonly}
          />
        </Container>
        <TranslationGroupsList
          data={translationGroups!}
          onRowClick={onRowClick}
          isLoading={isLoading}
          page={page}
          pageSize={pageSize!}
          totalCount={totalCount!}
          handlePageChange={handlePageChange}
        />
      </When>
      <When truthy={!hasTranslationGroups && !isLoading}>
        <TranslationGroupEmptyList handleAddGroupButtonClick={handleAddGroupButtonClick} readonly={readonly} />
      </When>

      <DefaultLocaleModal
        open={defaultLocaleOpened}
        onClose={closeDefaultLocale}
        onSave={() => {
          closeDefaultLocale();
          if (!hasTranslationGroups) {
            navigate(ROUTES.TRANSLATION_GROUP_CREATE);
          }
        }}
      />
      <Outlet />
    </PageContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Container, Group, UnstyledButton } from '@mantine/core';
import { useDisclosure } from '@mantine/hooks';
import { colors, PageContainer, Text, Title, When, IRow } from '@novu/design-system';
import { useState } from 'react';
import { Outlet, useNavigate } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/ee/translations/utils/createTranslationMarks.ts
Tamaño: 2307 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { parseWithoutProcessing } from '@handlebars/parser';
import { MustacheStatement, PathExpression, StringLiteral } from '@handlebars/parser/types/ast';
import { editor as NEditor, Range } from 'monaco-editor';

export const createTranslationMarks = (
  newValue: string | undefined,
  variables: any
): NEditor.IModelDeltaDecoration[] => {
  if (!variables.translations) {
    return [];
  }

  const decorators: NEditor.IModelDeltaDecoration[] = [];

  try {
    const result = parseWithoutProcessing(newValue || '');

    for (let index = 0; index < result.body.length; index += 1) {
      const line = result.body[index];
      if (line.type !== 'MustacheStatement') {
        continue;
      }
      const statement: MustacheStatement = line as MustacheStatement;

      if ((statement.path as PathExpression).head !== 'i18n') {
        continue;
      }

      const badParam = statement.params.find((param) => {
        if (param.type !== 'PathExpression' && param.type !== 'StringLiteral') {
          return false;
        }

        const pathExpression = param as PathExpression | StringLiteral;
        const variable = pathExpression.original;
        const keys = variable.split('.');
        let context = variables.translations;

        for (const key of keys) {
          if (!context[key]) {
            return true;
          }
          context = context[key];
        }
        if (context) {
          return false;
        }

        return true;
      });

      if (!badParam) {
        continue;
      }

      const range = new Range(
        statement.loc.start.line,
        statement.loc.start.column + 1,
        statement.loc.end.line,
        statement.loc.end.column + 1
      );

      decorators.push({
        range,
        options: {
          className: 'markerWiggledLine',
          glyphMarginClassName: 'markerGlyphWarning',
          glyphMarginHoverMessage: [
            {
              value:
                'The variable has no keys for any language. Specify keys for the variable in the translations page',
            },
          ],
        },
      });
      decorators.push({
        range,
        options: {
          inlineClassName: 'markerWarningText',
        },
      });
    }
  } catch (e) {
    /* empty */
  }

  return decorators;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - createTranslationMarks(newValue: string | undefined,
  variables: any
): NEditor.IModelDeltaDecoration[])
 - badParam(statement.params.find((param))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/index.ts
Tamaño: 1156 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './integrations';
export * from './useApiKeys';
export * from './useAuth';
export * from './useBlueprint';
export * from './useBootIntercom';
export * from './useCountdownTimer';
export * from './useCreateWorkflowFromBlueprint';
export * from './useDataRef';
export * from './useDebounce';
export * from './useDebouncedSearch';
export * from './useEffectOnce';
export * from './useEnvironment';
export * from './useEnvironmentChanges';
export * from './useFeatureFlag';
export * from './useHover';
export * from './useHoverOverItem';
export * from './useInlineComponent';
export * from './useIsDarkTheme';
export * from './useIsMounted';
export * from './useIsSynced';
export * from './useKeyDown';
export * from './useLayouts';
export * from './useLayoutsEditor';
export * from './useMonitoring';
export * from './useNotificationGroup';
export * from './useProcessVariables';
export * from './usePrompt';
export * from './useRedirectURL';
export * from './useRouteScopes';
export * from './useSubscribers';
export * from './useTemplates';
export * from './useThemeChange';
export * from './useVariablesManager';
export * from './useApiKey';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useApiKey.ts
Tamaño: 327 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import { getApiKeys } from '../api/environment';

export const useAPIKeys = () => {
  const res = useQuery<{ key: string }[]>(['getApiKeys'], getApiKeys);
  const { data: apiKeys } = res;
  const apiKey = apiKeys?.length ? apiKeys[0].key : '';

  return { ...res, apiKey };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useAPIKeys())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useApiKeys.ts
Tamaño: 427 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import { IApiKey } from '@novu/shared';
import { QueryKeys } from '../api/query.keys';
import { getApiKeys } from '../api/environment';
import { useEnvironment } from '../components/providers/EnvironmentProvider';

export function useApiKeys() {
  const { environment } = useEnvironment();

  return useQuery<IApiKey[]>([QueryKeys.getApiKeys, environment?._id], getApiKeys);
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useApiKeys()
Declaraciones 'export' encontradas:
- export function useApiKeys

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useAuth.ts
Tamaño: 64 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export { useAuth } from '../components/providers/AuthProvider';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useBlueprint.ts
Tamaño: 825 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useNavigate, useSearchParams } from 'react-router-dom';
import { useEffect } from 'react';

import { useSegment } from '../components/providers/SegmentProvider';
import { ROUTES } from '../constants/routes';

export const useBlueprint = () => {
  const [params] = useSearchParams();
  const blueprintId = params.get('blueprintId');
  const navigate = useNavigate();
  const segment = useSegment();
  const id = localStorage.getItem('blueprintId');

  useEffect(() => {
    if (id) {
      navigate(ROUTES.WORKFLOWS_CREATE, {
        replace: true,
      });
    }
  }, [navigate, id]);

  useEffect(() => {
    if (blueprintId) {
      segment.track('Notification directory CTA clicked', {
        blueprintId,
      });
      localStorage.setItem('blueprintId', blueprintId);
    }
  }, [blueprintId, segment]);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useBlueprint())
 - id(localStorage.getItem('blueprintId');

  useEffect(())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useBootIntercom.ts
Tamaño: 974 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { useIntercom } from 'react-use-intercom';
import { useAuth } from './useAuth';
import { INTERCOM_APP_ID } from '../config';

export function useBootIntercom() {
  const { currentOrganization, currentUser } = useAuth();
  const { boot } = useIntercom();

  useEffect(() => {
    const shouldBootIntercom = !!INTERCOM_APP_ID && currentUser && currentOrganization;
    if (shouldBootIntercom) {
      boot({
        userId: currentUser._id,
        email: currentUser?.email ?? '',
        name: `${currentUser?.firstName} ${currentUser?.lastName}`,
        createdAt: currentUser?.createdAt,
        company: {
          name: currentOrganization?.name,
          companyId: currentOrganization?._id as string,
        },
        userHash: currentUser.servicesHashes?.intercom,
        customLauncherSelector: '#intercom-launcher',
        hideDefaultLauncher: true,
      });
    }
  }, [boot, currentUser, currentOrganization]);
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useBootIntercom()
Declaraciones 'export' encontradas:
- export function useBootIntercom

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useCountdownTimer.ts
Tamaño: 1540 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useInterval } from '@mantine/hooks';
import { useState, useEffect, useCallback } from 'react';

const DEFAULT_MINIMUM_TIME_SECONDS = 0;

interface IUseCountdownTimerProps {
  startTimeSeconds: number;
  minimumTimeSeconds?: number;
}

/**
 * Create a countdown timer that ticks every second.
 */
export const useCountdownTimer = ({
  startTimeSeconds,
  minimumTimeSeconds = DEFAULT_MINIMUM_TIME_SECONDS,
}: IUseCountdownTimerProps) => {
  const [timeRemaining, setTimeRemaining] = useState<number>(startTimeSeconds);

  const interval = useInterval(() => {
    setTimeRemaining((prev) => Math.max(prev - 1, minimumTimeSeconds));
  }, 1000);

  // tick
  useEffect(() => {
    if (timeRemaining <= minimumTimeSeconds) {
      interval.stop();
    }
  }, [timeRemaining]);

  useEffect(() => {
    return () => {
      interval.stop();
    };
  }, []);

  /**
   * Reset the amount of time remaining and restart the timer.
   * @param timeToSet Defaults to the {startTimeSeconds} if no value is provided.
   */
  const resetTimer = (timeToSetSeconds: number = startTimeSeconds) => {
    setTimeRemaining(timeToSetSeconds);
    interval.start();
  };

  const startTimer = useCallback(() => {
    // don't allow the timer to start if it's already at or below the minimum
    if (timeRemaining > minimumTimeSeconds) {
      interval.start();
    }
  }, [interval, timeRemaining, minimumTimeSeconds]);

  return {
    timeRemaining,
    resetTimer,
    stopTimer: interval.stop,
    startTimer,
    isRunning: interval.active,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - minimumTimeSeconds(DEFAULT_MINIMUM_TIME_SECONDS,
}: IUseCountdownTimerProps))
 - interval(useInterval(())
 - number(startTimeSeconds))
 - startTimer(useCallback(())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useCreateInAppIntegration.tsx
Tamaño: 1505 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ChannelTypeEnum, InAppProviderIdEnum } from '@novu/shared';
import type { IResponseError, ICreateIntegrationBodyDto } from '@novu/shared';
import { useMutation, useQueryClient } from '@tanstack/react-query';

import { createIntegration } from '../api/integration';
import { QueryKeys } from '../api/query.keys';
import { useIntegrations } from './integrations';

export const useCreateInAppIntegration = (onSuccess: (data: any) => void) => {
  const { integrations } = useIntegrations();
  const queryClient = useQueryClient();

  const { mutateAsync: createIntegrationApi, isLoading } = useMutation<
    { _id: string; active: boolean },
    IResponseError,
    ICreateIntegrationBodyDto
  >(createIntegration, {
    onSuccess: (data) => {
      queryClient.setQueryData([QueryKeys.integrationsList], (oldData: any[] | undefined) => {
        return [...(oldData || []), data];
      });
      onSuccess(data);
    },
  });

  return {
    create: async () => {
      if (!integrations) {
        return;
      }
      const integration = integrations.find((item) => {
        return item.channel === ChannelTypeEnum.IN_APP && item.providerId === InAppProviderIdEnum.Novu;
      });
      if (integration) {
        return;
      }
      await createIntegrationApi({
        providerId: InAppProviderIdEnum.Novu,
        channel: ChannelTypeEnum.IN_APP,
        credentials: {
          hmac: false,
        },
        active: true,
        check: false,
      });
    },
    isLoading,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ChannelTypeEnum, InAppProviderIdEnum } from '@novu/shared';
import type { IResponseError, ICreateIntegrationBodyDto } from '@novu/shared';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { createIntegration } from '../api/integration';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/hooks/useCreateWorkflowFromBlueprint.ts
Tamaño: 1428 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useMutation, UseMutationOptions } from '@tanstack/react-query';
import { WorkflowCreationSourceEnum, type INotificationTemplate, slugify } from '@novu/shared';

import { useCreateTemplateFromBlueprint } from '../api/hooks';
import { getBlueprintTemplateById, getTemplateById } from '../api/notification-templates';
import { getWorkflowBlueprintDetails } from '../utils';

export const useCreateWorkflowFromBlueprint = (
  options: UseMutationOptions<INotificationTemplate, any, { blueprintIdentifier: string }> = {}
) => {
  const { mutateAsync: createTemplateFromBlueprint } = useCreateTemplateFromBlueprint();

  const { mutate: createWorkflowFromBlueprint, ...createWorkflowFromBlueprintMutationProps } = useMutation(
    async ({ blueprintIdentifier }) => {
      const blueprintData = await getBlueprintTemplateById(blueprintIdentifier);
      const { name: blueprintName } = getWorkflowBlueprintDetails(blueprintData.name);

      try {
        const workflowIdentifier = slugify(blueprintName);

        return await getTemplateById(workflowIdentifier);
      } catch (_error) {
        return await createTemplateFromBlueprint({
          blueprint: { ...blueprintData, name: blueprintName },
          params: { __source: WorkflowCreationSourceEnum.ONBOARDING_GET_STARTED },
        });
      }
    },
    options
  );

  return { ...createWorkflowFromBlueprintMutationProps, createWorkflowFromBlueprint };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useDataRef.ts
Tamaño: 148 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useRef } from 'react';

export const useDataRef = <T>(data: T) => {
  const ref = useRef<T>(data);
  ref.current = data;

  return ref;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useDataRef(<T>(data: T))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useDebounce.ts
Tamaño: 490 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useCallback, useEffect } from 'react';
import debounce from 'lodash.debounce';

import { useDataRef } from './useDataRef';

export const useDebounce = <Arguments = unknown | unknown[]>(callback: (args: Arguments) => void, ms = 0) => {
  const callbackRef = useDataRef(callback);

  const debouncedCallback = useCallback(debounce(callbackRef.current, ms), [callbackRef, ms]);

  useEffect(() => debouncedCallback.cancel, [debouncedCallback.cancel]);

  return debouncedCallback;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - Arguments(unknown | unknown[]>(callback: (args: Arguments))
 - ms(0))
 - debouncedCallback(useCallback(debounce(callbackRef.current, ms), [callbackRef, ms]);

  useEffect(())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useDebouncedSearch.ts
Tamaño: 294 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useDebounce } from './useDebounce';

interface IDebouncedFunction {
  (value: string): void;
  cancel: () => void;
}

export const useDebouncedSearch = (setSearch: (newSearch: string) => void): IDebouncedFunction => {
  return useDebounce((value: string) => setSearch(value), 500);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useDebouncedSearch(setSearch: (newSearch: string))
 - IDebouncedFunction(> {
  return useDebounce((value: string))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useEffectOnce.ts
Tamaño: 371 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect, useRef } from 'react';

export const useEffectOnce = (effect: () => void, condition: boolean) => {
  const didRunRef = useRef(false);
  const effectRef = useRef(effect);
  effectRef.current = effect;

  useEffect(() => {
    if (condition && !didRunRef.current) {
      didRunRef.current = true;
      effectRef.current();
    }
  }, [condition]);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useEffectOnce(effect: ())
 - current(effect;

  useEffect(())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useEnvironment.ts
Tamaño: 78 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export { useEnvironment } from '../components/providers/EnvironmentProvider';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useEnvironmentChanges.ts
Tamaño: 1285 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';

import { useEnvironment } from './useEnvironment';

import { getPromotedChanges, getUnpromotedChanges } from '../api/changes';
import { QueryKeys } from '../api/query.keys';

export function usePromotedChanges(page = 0, limit = 10) {
  const { environment } = useEnvironment();
  const {
    data,
    isLoading: isLoadingHistory,
    refetch: refetchHistory,
  } = useQuery(
    [QueryKeys.currentPromotedChanges, environment?._id, page, limit],
    () => getPromotedChanges(page, limit),
    {
      keepPreviousData: true,
    }
  );

  return {
    isLoadingHistory,
    history: data?.data,
    totalHistoryCount: data?.totalCount,
    historyPageSize: data?.pageSize,
    refetchHistory,
  };
}

export function useUnPromotedChanges(page = 0, limit = 10) {
  const { environment } = useEnvironment();
  const {
    data,
    isLoading: isLoadingChanges,
    refetch: refetchChanges,
  } = useQuery(
    [QueryKeys.currentUnpromotedChanges, environment?._id, page, limit],
    () => getUnpromotedChanges(page, limit),
    {
      keepPreviousData: true,
    }
  );

  return {
    isLoadingChanges,
    changes: data?.data,
    totalChangesCount: data?.totalCount,
    changesPageSize: data?.pageSize,
    refetchChanges,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - usePromotedChanges(page = 0, limit = 10)
 - useUnPromotedChanges(page = 0, limit = 10)
Declaraciones 'export' encontradas:
- export function usePromotedChanges
- export function useUnPromotedChanges

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useFeatureFlag.ts
Tamaño: 581 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useFlags } from 'launchdarkly-react-client-sdk';
import { FeatureFlagsKeysEnum, prepareBooleanStringFeatureFlag } from '@novu/shared';
import { LAUNCH_DARKLY_CLIENT_SIDE_ID } from '../config';

function isLaunchDarklyEnabled() {
  return !!LAUNCH_DARKLY_CLIENT_SIDE_ID;
}

export const useFeatureFlag = (key: FeatureFlagsKeysEnum, defaultValue = false): boolean => {
  const flags = useFlags();

  if (!isLaunchDarklyEnabled()) {
    return prepareBooleanStringFeatureFlag(window._env_[key] || process.env[key], defaultValue);
  }

  return flags[key] ?? defaultValue;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - isLaunchDarklyEnabled()
Asignaciones con arrow functions encontradas (posibles funciones):
 - defaultValue(false): boolean)
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useFrameworkTerminalScript.ts
Tamaño: 421 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';

export const useFrameworkTerminalScript = () => {
  useEffect(() => {
    if (!document.getElementById('framework-terminal-loader')) {
      const script = document.createElement('script');
      script.src = 'https://cdn.jsdelivr.net/gh/novuhq/docs/framework-terminal.min.js';
      script.id = 'framework-terminal-loader';
      document.body.appendChild(script);
    }
  }, []);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useFrameworkTerminalScript())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useHover.ts
Tamaño: 361 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useCallback, useState } from 'react';

export const useHover = () => {
  const [isHovered, setIsHovered] = useState(false);

  const onMouseEnter = useCallback(() => {
    setIsHovered(true);
  }, []);

  const onMouseLeave = useCallback(() => {
    setIsHovered(false);
  }, []);

  return {
    isHovered,
    onMouseEnter,
    onMouseLeave,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useHover())
 - onMouseEnter(useCallback(())
 - onMouseLeave(useCallback(())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useHoverOverItem.ts
Tamaño: 789 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useRef, useState } from 'react';

interface IProps {
  enterDelay?: number;
}

export const useHoverOverItem = <T>(props: IProps = {}) => {
  const [item, setItem] = useState<T | undefined>(undefined);
  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null);
  const enterDelay = props.enterDelay || props.enterDelay === 0 ? props.enterDelay : 500;

  const onMouseEnter = (newItem?: T) => {
    if (timeoutRef.current) {
      clearTimeout(timeoutRef.current);
    }
    timeoutRef.current = setTimeout(() => {
      setItem(newItem);
    }, enterDelay);
  };

  const onMouseLeave = () => {
    if (timeoutRef.current) {
      clearTimeout(timeoutRef.current);
    }
    setItem(undefined);
  };

  return {
    item,
    onMouseEnter,
    onMouseLeave,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - IProps({}))
 - onMouseEnter(newItem?: T))
 - current(setTimeout(())
 - onMouseLeave())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useInlineComponent.tsx
Tamaño: 600 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMemo } from 'react';
import type { ComponentType, ReactNode } from 'react';
import { useDataRef } from './useDataRef';

export const useInlineComponent: <T>(
  Component: ComponentType<T>,
  props: T & { children?: ReactNode }
) => ComponentType = (Component, props) => {
  const dataRef = useDataRef(props);

  return useMemo(() => {
    const componentName = Component.displayName || Component.name;

    const OuterComponent = () => <Component {...dataRef.current} />;

    OuterComponent.displayName = `${componentName}HOC`;

    return OuterComponent;
  }, [Component, dataRef]);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMemo } from 'react';
import type { ComponentType, ReactNode } from 'react';
import { useDataRef } from './useDataRef';
export const useInlineComponent: <T>(
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/hooks/useIsDarkTheme.ts
Tamaño: 218 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useMantineTheme } from '@mantine/core';
import React from 'react';

export function useIsDarkTheme() {
  const { colorScheme } = useMantineTheme();
  const isDark = colorScheme === 'dark';

  return isDark;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useIsDarkTheme()
Declaraciones 'export' encontradas:
- export function useIsDarkTheme

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useIsMounted.ts
Tamaño: 268 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';

export const useIsMounted = () => {
  const [isMounted, setIsMounted] = useState(false);

  useEffect(() => {
    setIsMounted(true);

    return () => {
      setIsMounted(false);
    };
  }, []);

  return isMounted;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useIsMounted())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useIsSynced.ts
Tamaño: 1447 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useMemo } from 'react';
import { INotificationTemplate } from '@novu/shared';

import { useDiscover } from '../studio/hooks';
import { createHash } from '../utils/create-hash';
import { useWorkflows } from './useNovuAPI';

export function useIsSynced() {
  const { data: bridgeDiscoverData, isLoading: isLoadingBridgeWorkflows } = useDiscover();
  const { data: originData, isLoading: isLoadingOriginWorkflows, refetch } = useWorkflows({ page: 0, limit: 100 });

  const isSynced = useMemo(() => {
    if (isLoadingBridgeWorkflows || isLoadingOriginWorkflows) {
      return true;
    }

    const bridgeDiscoverWorkflows =
      bridgeDiscoverData?.workflows.sort((workflowA, workflowB) =>
        workflowA.workflowId.localeCompare(workflowB.workflowId)
      ) || undefined;
    const originWorkflows =
      originData?.data
        .map((workflow: INotificationTemplate) => workflow.rawData)
        .filter((el) => !!el)
        .sort((workflowA, workflowB) => workflowA.workflowId.localeCompare(workflowB.workflowId)) || undefined;

    const bridgeDiscoverWorkflowsHash = createHash(JSON.stringify(bridgeDiscoverWorkflows || ''));
    const storedWorkflowsHash = createHash(JSON.stringify(originWorkflows || ''));

    return storedWorkflowsHash === bridgeDiscoverWorkflowsHash;
  }, [bridgeDiscoverData, originData, isLoadingBridgeWorkflows, isLoadingOriginWorkflows]);

  return { isSynced, refetchOriginWorkflows: refetch };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useIsSynced()
Asignaciones con arrow functions encontradas (posibles funciones):
 - isSynced(useMemo(())
 - bridgeDiscoverWorkflows(bridgeDiscoverData?.workflows.sort((workflowA, workflowB))
 - originWorkflows(originData?.data
        .map((workflow: INotificationTemplate))
Declaraciones 'export' encontradas:
- export function useIsSynced

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useKeyDown.ts
Tamaño: 480 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { useDataRef } from './useDataRef';

export const useKeyDown = (key: string, callback: () => void) => {
  const callbackRef = useDataRef(callback);

  useEffect(() => {
    const handleKeyDown = (e) => {
      if (e.key === key) {
        callbackRef.current();
      }
    };

    document.addEventListener('keydown', handleKeyDown);

    return () => document.removeEventListener('keydown', handleKeyDown);
  }, [callbackRef, key]);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useKeyDown(key: string, callback: ())
 - callbackRef(useDataRef(callback);

  useEffect(())
 - handleKeyDown(e))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useLayouts.ts
Tamaño: 760 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import { ILayoutEntity } from '@novu/shared';

import { useEnvironment } from './useEnvironment';

import { QueryKeys } from '../api/query.keys';
import { getLayoutsList } from '../api/layouts';

export function useLayouts(page = 0, pageSize = 10) {
  const { environment } = useEnvironment();
  const { data, isLoading, refetch } = useQuery<{
    data: ILayoutEntity[];
    totalCount: number;
    pageSize: number;
  }>([QueryKeys.getLayoutsList, environment?._id, page, pageSize], () => getLayoutsList(page, pageSize), {
    keepPreviousData: true,
  });

  return {
    layouts: data?.data,
    isLoading,
    totalCount: data?.totalCount,
    pageSize: data?.pageSize,
    refetchLayouts: refetch,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useLayouts(page = 0, pageSize = 10)
Declaraciones 'export' encontradas:
- export function useLayouts

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useLayoutsEditor.ts
Tamaño: 1207 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';
import type { ILayoutEntity, IResponseError } from '@novu/shared';

import { QueryKeys } from '../api/query.keys';
import { createLayout, getLayoutById, updateLayoutById } from '../api/layouts';

export function useLayoutsEditor(id: string) {
  const queryClient = useQueryClient();
  const { mutateAsync: createNewLayout, isLoading: isLoadingCreate } = useMutation(createLayout, {
    onSuccess: () => {
      queryClient.refetchQueries([QueryKeys.changesCount]);
    },
  });

  const { mutateAsync: updateLayout, isLoading: isLoadingUpdate } = useMutation<
    ILayoutEntity,
    IResponseError,
    { layoutId: string; data: any }
  >(({ layoutId, data }) => updateLayoutById(layoutId, data), {
    onSuccess: () => {
      queryClient.refetchQueries([QueryKeys.changesCount]);
    },
  });

  const { data: layout, isLoading: isLoadingLayout } = useQuery<ILayoutEntity>(
    [QueryKeys.getLayoutById, id],
    () => getLayoutById(id),
    {
      enabled: !!id,
    }
  );

  return {
    layout,
    isLoading: (!!id && isLoadingLayout) || isLoadingCreate || isLoadingUpdate,
    createNewLayout,
    updateLayout,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useLayoutsEditor(id: string)
Declaraciones 'export' encontradas:
- export function useLayoutsEditor

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useMonitoring.ts
Tamaño: 2254 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { useLDClient } from 'launchdarkly-react-client-sdk';
import {
  setUser as sentrySetUser,
  configureScope as sentryConfigureScope,
  setTags as setSentryTags,
} from '@sentry/react';
import { useSegment } from '../components/providers/SegmentProvider';
import { useAuth } from './useAuth';

export function useMonitoring() {
  const { currentUser, currentOrganization } = useAuth();
  const ldClient = useLDClient();
  const segment = useSegment();

  const isNovuUser = currentUser && currentUser._id && !currentUser._id.startsWith('user_');
  const isNovuOrganization =
    currentOrganization && currentOrganization._id && !currentOrganization._id.startsWith('org_');

  /*
   * if the identifier present isn't a novu identifier, we don't want to pollute our data with
   * clerk identifiers, so we will skip monitoring.
   */
  const shouldMonitor = isNovuUser && isNovuOrganization;

  useEffect(() => {
    if (currentUser && currentOrganization && shouldMonitor) {
      segment.identify(currentUser);

      sentrySetUser({
        email: currentUser.email ?? '',
        username: `${currentUser.firstName} ${currentUser.lastName}`,
        id: currentUser._id,
      });

      setSentryTags({
        // user tags
        'user.createdAt': currentUser.createdAt,
        // organization tags
        'organization.id': currentOrganization._id,
        'organization.name': currentOrganization.name,
        'organization.tier': currentOrganization.apiServiceLevel,
        'organization.createdAt': currentOrganization.createdAt,
      });
    } else {
      sentryConfigureScope((scope) => scope.setUser(null));
    }
  }, [currentUser, currentOrganization, segment, shouldMonitor]);

  useEffect(() => {
    if (!ldClient) {
      return;
    }

    if (currentOrganization && shouldMonitor) {
      ldClient.identify({
        kind: 'organization',
        key: currentOrganization._id,
        name: currentOrganization.name,
        createdAt: currentOrganization.createdAt,
        tier: currentOrganization.apiServiceLevel,
      });
    } else {
      ldClient.identify({
        kind: 'user',
        anonymous: true,
      });
    }
  }, [ldClient, currentOrganization, shouldMonitor]);
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useMonitoring()
Asignaciones con arrow functions encontradas (posibles funciones):
 - shouldMonitor(isNovuUser && isNovuOrganization;

  useEffect(())
Declaraciones 'export' encontradas:
- export function useMonitoring

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useNewDashboardOptIn.ts
Tamaño: 1516 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useCallback } from 'react';
import { useUser } from '@clerk/clerk-react';
import { NewDashboardOptInStatusEnum } from '@novu/shared';

import { NEW_DASHBOARD_URL } from '../config';
import { useSegment } from '../components/providers/SegmentProvider';

export function useNewDashboardOptIn() {
  const { user, isLoaded } = useUser();
  const segment = useSegment();

  const updateUserOptInStatus = useCallback(
    async (status: NewDashboardOptInStatusEnum) => {
      if (!user) return;

      await user.update({
        unsafeMetadata: {
          ...user.unsafeMetadata,
          newDashboardOptInStatus: status,
          newDashboardFirstVisit: true,
        },
      });
    },
    [user]
  );

  const redirectToNewDashboard = useCallback(() => {
    window.location.href = NEW_DASHBOARD_URL || window.location.origin;
  }, []);

  const optIn = useCallback(async () => {
    segment.track('New dashboard opt-in');
    await updateUserOptInStatus(NewDashboardOptInStatusEnum.OPTED_IN);
    localStorage.setItem('mantine-theme', 'light');
    redirectToNewDashboard();
  }, [segment, updateUserOptInStatus, redirectToNewDashboard]);

  const dismiss = useCallback(() => {
    segment.track('New dashboard opt-in dismissed');
    updateUserOptInStatus(NewDashboardOptInStatusEnum.DISMISSED);
  }, [segment, updateUserOptInStatus]);

  return {
    isLoaded,
    optIn,
    dismiss,
    status: user?.unsafeMetadata?.newDashboardOptInStatus as NewDashboardOptInStatusEnum | null | undefined,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useNewDashboardOptIn()
Asignaciones con arrow functions encontradas (posibles funciones):
 - updateUserOptInStatus(useCallback(
    async (status: NewDashboardOptInStatusEnum))
 - redirectToNewDashboard(useCallback(())
 - optIn(useCallback(async ())
 - dismiss(useCallback(())
Declaraciones 'export' encontradas:
- export function useNewDashboardOptIn

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useNotificationGroup.ts
Tamaño: 308 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import { getNotificationGroups } from '../api/notification-groups';

export function useNotificationGroup() {
  const { data, isLoading } = useQuery(['notificationGroups'], getNotificationGroups);

  return {
    groups: data,
    loading: isLoading,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useNotificationGroup()
Declaraciones 'export' encontradas:
- export function useNotificationGroup

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useNovuAPI.ts
Tamaño: 2345 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useCallback, useMemo } from 'react';
import { useMutation, useQuery } from '@tanstack/react-query';
import * as mixpanel from 'mixpanel-browser';
import { INotificationTemplate, IPaginationWithQueryParams } from '@novu/shared';
import { buildApiHttpClient } from '../api/api.client';

import { useStudioState } from '../studio/StudioStateProvider';
import { useEnvironment } from './useEnvironment';

export function useNovuAPI() {
  const { devSecretKey } = useStudioState();
  const { currentEnvironment } = useEnvironment();

  return useMemo(
    () => buildApiHttpClient({ secretKey: devSecretKey, environmentId: currentEnvironment?._id }),
    [currentEnvironment?._id, devSecretKey]
  );
}

// WIP: This method should accept more parameters, not just transactionId
export const useNotifications = (transactionId: string, options?: any) => {
  const api = useNovuAPI();

  return useQuery<{ data: any[] }>(
    ['notifications', `transaction-${transactionId}`],
    () => api.getNotifications({ page: 0, transactionId }),
    options
  );
};

export const useNotification = (notificationId: string, options?: any) => {
  const api = useNovuAPI();

  return useQuery(['notifications', notificationId], () => api.getNotification(notificationId), options);
};

export const useApiKeys = (options?: any) => {
  const api = useNovuAPI();

  return useQuery<{ key: string }[]>(['getApiKeys'], () => api.getApiKeys(), options);
};

export const useTelemetry = () => {
  const api = useNovuAPI();

  const { mutate } = useMutation(({ event, data }: { event: string; data?: Record<string, unknown> }) =>
    api.postTelemetry(event, data)
  );

  return useCallback(
    (event: string, data?: Record<string, unknown>) => {
      const mixpanelEnabled = !!process.env.REACT_APP_MIXPANEL_KEY;

      if (mixpanelEnabled) {
        const sessionReplayProperties = mixpanel.get_session_recording_properties();

        data = {
          ...(data || {}),
          ...sessionReplayProperties,
        };
      }

      return mutate({ event: `${event} - [WEB]`, data });
    },
    [mutate]
  );
};

export const useWorkflows = (params: IPaginationWithQueryParams) => {
  const api = useNovuAPI();

  return useQuery<{ data: INotificationTemplate[] }>(['origin-workflows'], async () => {
    return api.getNotificationsList(params);
  });
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useNovuAPI()
Asignaciones con arrow functions encontradas (posibles funciones):
 - useNotifications(transactionId: string, options?: any))
 - api(useNovuAPI();

  return useQuery<{ data: any[] }>(
    ['notifications', `transaction-${transactionI...)
 - useNotification(notificationId: string, options?: any))
 - api(useNovuAPI();

  return useQuery(['notifications', notificationId], ())
 - useApiKeys(options?: any))
 - api(useNovuAPI();

  return useQuery<{ key: string }[]>(['getApiKeys'], ())
 - useTelemetry())
 - useWorkflows(params: IPaginationWithQueryParams))
 - api(useNovuAPI();

  return useQuery<{ data: INotificationTemplate[] }>(['origin-workflows'], async ())
Declaraciones 'export' encontradas:
- export function useNovuAPI
- export  const
- export  const
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useOnboardingExperiment.ts
Tamaño: 614 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { ChannelTypeEnum, EmailProviderIdEnum } from '@novu/shared';

import { useIntegrations } from './integrations';
import { IS_SELF_HOSTED } from '../config';

export function useOnboardingExperiment() {
  const { integrations, loading: areIntegrationsLoading } = useIntegrations();

  const emailIntegrationOtherThanNovu = integrations?.find(
    (integration) =>
      integration.channel === ChannelTypeEnum.EMAIL && integration.providerId !== EmailProviderIdEnum.Novu
  );

  return {
    isOnboardingExperimentEnabled: !areIntegrationsLoading && !emailIntegrationOtherThanNovu && !IS_SELF_HOSTED,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useOnboardingExperiment()
Asignaciones con arrow functions encontradas (posibles funciones):
 - emailIntegrationOtherThanNovu(integrations?.find(
    (integration))
Declaraciones 'export' encontradas:
- export function useOnboardingExperiment

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useOptInRedirect.ts
Tamaño: 1867 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useCallback, useLayoutEffect } from 'react';
import { useLocation } from 'react-router-dom';
import { NewDashboardOptInStatusEnum } from '@novu/shared';

import { useNewDashboardOptIn } from './useNewDashboardOptIn';
import { ROUTES } from '../constants/routes';
import { IS_EE_AUTH_ENABLED, NEW_DASHBOARD_URL } from '../config';
import { useEnvironment } from './useEnvironment';

export const useOptInRedirect = () => {
  const { pathname } = useLocation();
  const { environment } = useEnvironment();
  const { status, isLoaded } = useNewDashboardOptIn();

  const getNewDashboardUrl = useCallback(
    (currentRoute: string): string | undefined => {
      const newDashboardUrl = NEW_DASHBOARD_URL || window.location.origin;

      switch (currentRoute) {
        case ROUTES.WORKFLOWS:
          return `${newDashboardUrl}/env/${environment?.slug}/workflows`;
        case ROUTES.ACTIVITIES:
          return `${newDashboardUrl}/env/${environment?.slug}/activity-feed`;
        case ROUTES.INTEGRATIONS:
          return `${newDashboardUrl}/integrations`;
        case ROUTES.API_KEYS:
          return `${newDashboardUrl}/env/${environment?.slug}/api-keys`;
        default:
          return undefined;
      }
    },
    [environment]
  );

  const checkAndRedirect = useCallback(() => {
    if (!IS_EE_AUTH_ENABLED) return false;
    if (!isLoaded || !status || status !== NewDashboardOptInStatusEnum.OPTED_IN) return false;

    const newDashboardUrl = getNewDashboardUrl(pathname);
    if (newDashboardUrl) {
      window.location.href = newDashboardUrl;

      return true;
    }

    return false;
  }, [isLoaded, status, pathname, getNewDashboardUrl]);

  // handling of updates to deps
  useLayoutEffect(() => {
    checkAndRedirect();
  }, [checkAndRedirect]);

  // immediate redirect check for initial render
  return checkAndRedirect();
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useOptInRedirect())
 - getNewDashboardUrl(useCallback(
    (currentRoute: string): string | undefined)
 - checkAndRedirect(useCallback(())
 - href(newDashboardUrl;

      return true;
    }

    return false;
  }, [isLoaded, status, pathname, getN...)
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useOrganizations.ts
Tamaño: 281 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import { IOrganizationEntity } from '@novu/shared';
import { getOrganizations } from '../api/organization';

export function useOrganizations() {
  return useQuery<IOrganizationEntity[]>(['/v1/organizations'], getOrganizations);
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useOrganizations()
Declaraciones 'export' encontradas:
- export function useOrganizations

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/usePageViewTracking.tsx
Tamaño: 934 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { useSegment } from '../components/providers/SegmentProvider';

type LocationField = keyof Pick<Location, 'href' | 'hash' | 'host' | 'hostname' | 'origin' | 'pathname'>;
export interface IUsePageViewTrackingProps {
  urlOverride?: string;
  locationField?: LocationField;
}

const DEFAULT_LOCATION_FIELD: LocationField = 'pathname';
/**
 * Use analytics tracking for the current page URL onMount.
 *
 * If using the options, ensure they are properly memoized, otherwise a tracking event will fire each time
 * on of the fields changes.
 */
export function usePageViewTracking(
  { urlOverride, locationField = DEFAULT_LOCATION_FIELD }: IUsePageViewTrackingProps = {
    locationField: DEFAULT_LOCATION_FIELD,
  }
): void {
  const segment = useSegment();

  useEffect(() => {
    segment.pageView(urlOverride ?? window.location[locationField]);
  }, [segment, urlOverride, locationField]);
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect } from 'react';
import { useSegment } from '../components/providers/SegmentProvider';
type LocationField = keyof Pick<Location, 'href' | 'hash' | 'host' | 'hostname' | 'origin' | 'pathname'>;
export interface IUsePageViewTrackingProps {
/**
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/hooks/usePaginatedQuery.ts
Tamaño: 3028 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { QueryFunction, QueryKey, UseQueryOptions, useQuery } from '@tanstack/react-query';
import {
  IUsePaginationQueryParamsStateOptions,
  usePaginationQueryParamsState,
  IUseSearchQueryParamStateOptions,
  useSearchQueryParamState,
} from '@novu/design-system';
import { IPaginationWithQueryParams } from '@novu/shared';

type IPaginatedQueryContext = Required<IPaginationWithQueryParams>;

/** Enhanced query function with pagination context */
type TPaginatedQueryFunction<TResponse extends object> = (ctx: IPaginatedQueryContext) => QueryFunction<TResponse>;

const calculateTotalPageCount = ({
  totalItemCount,
  pageSizeQueryParam,
}: {
  totalItemCount: number | undefined;
  pageSizeQueryParam: number;
}) => (totalItemCount === undefined ? undefined : Math.ceil(totalItemCount / pageSizeQueryParam));

export interface UsePaginatedQueryProps<TResponse extends object> {
  queryKey: QueryKey | ((paginationCtx: IPaginatedQueryContext) => QueryKey);
  buildQueryFn: TPaginatedQueryFunction<TResponse>;
  /** Return the *total* number of items for the query */
  getTotalItemCount: (resp: TResponse) => number;
  queryOptions?: Omit<UseQueryOptions<TResponse>, 'queryKey' | 'queryFn'>;
  paginationOptions?: IUsePaginationQueryParamsStateOptions & IUseSearchQueryParamStateOptions;
}

export const usePaginatedQuery = <TResponse extends object>({
  queryKey,
  buildQueryFn,
  queryOptions,
  getTotalItemCount,
  paginationOptions = {},
}: UsePaginatedQueryProps<TResponse>) => {
  const { currentPageNumberQueryParam, pageSizeQueryParam, setCurrentPageNumberQueryParam, setPageSizeQueryParam } =
    usePaginationQueryParamsState(paginationOptions);
  const { searchQueryParam, setSearchQueryParam } = useSearchQueryParamState(paginationOptions);
  const page = currentPageNumberQueryParam - 1;

  const paginationParams = { page, limit: pageSizeQueryParam, query: searchQueryParam };
  const queryKeyToUse =
    typeof queryKey === 'function'
      ? queryKey(paginationParams)
      : [...queryKey, page, pageSizeQueryParam, searchQueryParam];

  // hydrate the function with the pagination context so that the caller can include it in the request
  const hydratedQueryFn = buildQueryFn(paginationParams);

  const queryResponse = useQuery<TResponse>(queryKeyToUse, hydratedQueryFn, queryOptions);

  const totalItemCount = queryResponse.data ? getTotalItemCount(queryResponse.data) : undefined;
  const totalPageCount = calculateTotalPageCount({ totalItemCount, pageSizeQueryParam });

  const setSearchQueryParamCallback = (search: string) => {
    setSearchQueryParam(search);
    setCurrentPageNumberQueryParam(1);
  };

  return {
    // return all the React Query fields so that the caller can use them
    ...queryResponse,
    // forward the pagination state
    totalItemCount,
    totalPageCount,
    currentPageNumberQueryParam,
    pageSizeQueryParam,
    searchQueryParam,
    setCurrentPageNumberQueryParam,
    setPageSizeQueryParam,
    setSearchQueryParam: setSearchQueryParamCallback,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - calculateTotalPageCount({
  totalItemCount,
  pageSizeQueryParam,
}: {
  totalItemCount: number | undefined;
  pageSizeQuery...)
 - paginationOptions({},
}: UsePaginatedQueryProps<TResponse>))
 - setSearchQueryParamCallback(search: string))
Declaraciones 'export' encontradas:
- export  interface
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useProcessVariables.ts
Tamaño: 1424 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { TemplateVariableTypeEnum, IMustacheVariable, ITemplateVariable } from '@novu/shared';
import { useMemo } from 'react';
import set from 'lodash.set';
import get from 'lodash.get';

const processVariables = (variables: IMustacheVariable[]) => {
  const varsObj: Record<string, any> = {};

  variables
    .filter((variable) => variable.type !== TemplateVariableTypeEnum.ARRAY)
    .forEach((variable) => {
      set(varsObj, variable.name, getVariableValue(variable));
    });

  variables
    .filter((variable) => variable.type === TemplateVariableTypeEnum.ARRAY)
    .forEach((variable) => {
      set(varsObj, variable.name, [get(varsObj, variable.name, [])]);
    });

  return JSON.stringify(varsObj, null, 2);
};

const getVariableValue = (variable: IMustacheVariable) => {
  if (variable.type === TemplateVariableTypeEnum.BOOLEAN) {
    return variable.defaultValue;
  }
  if (variable.type === TemplateVariableTypeEnum.STRING) {
    return variable.defaultValue ? variable.defaultValue : variable.name;
  }

  if (variable.type === TemplateVariableTypeEnum.ARRAY) {
    return [];
  }

  return '';
};

export const useProcessVariables = (variables: ITemplateVariable[] | undefined = [], asString = true) => {
  return useMemo(() => {
    let processed = processVariables(variables);

    if (!asString) {
      processed = JSON.parse(processed);
    }

    return processed;
  }, [variables, asString]);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - processVariables(variables: IMustacheVariable[]))
 - getVariableValue(variable: IMustacheVariable))
 - asString(true))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useProductFeature.ts
Tamaño: 620 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { ApiServiceLevelEnum, productFeatureEnabledForServiceLevel, ProductFeatureKeyEnum } from '@novu/shared';
import { useEffect, useState } from 'react';
import { useAuth } from './useAuth';

export const useProductFeature = (feature: ProductFeatureKeyEnum) => {
  const { currentOrganization } = useAuth();
  const [enabled, setEnabled] = useState(false);

  useEffect(() => {
    setEnabled(
      productFeatureEnabledForServiceLevel[feature].includes(
        currentOrganization?.apiServiceLevel as ApiServiceLevelEnum
      )
    );
  }, [feature, currentOrganization?.apiServiceLevel]);

  return enabled;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useProductFeature(feature: ProductFeatureKeyEnum))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/usePrompt.ts
Tamaño: 1905 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useContext, useEffect, useCallback, useState } from 'react';
import { UNSAFE_NavigationContext as NavigationContext, useLocation, useNavigate } from 'react-router-dom';

export function useBlocker(blocker, when = true) {
  const { navigator } = useContext(NavigationContext);

  useEffect(() => {
    if (!when) return;

    const unblock = (navigator as any).block((tx) => {
      const autoUnblockingTx = {
        ...tx,
        retry() {
          unblock();
          tx.retry();
        },
      };

      blocker(autoUnblockingTx);
    });

    return unblock;
  }, [navigator, blocker, when]);
}

export const usePrompt = (
  when: boolean,
  checkNextLocation = (nextLocation, location) => {
    return nextLocation.location.pathname !== location.pathname;
  }
): [boolean, () => void, () => void] => {
  const navigate = useNavigate();
  const location = useLocation();
  const [showPrompt, setShowPrompt] = useState(false);
  const [lastLocation, setLastLocation] = useState<any>(null);
  const [confirmedNavigation, setConfirmedNavigation] = useState(false);

  const cancelNavigation = useCallback(() => {
    setShowPrompt(false);
  }, []);

  const handleBlockedNavigation = useCallback(
    (nextLocation) => {
      if (!confirmedNavigation && checkNextLocation(nextLocation, location)) {
        setShowPrompt(true);
        setLastLocation(nextLocation);

        return false;
      }

      return true;
    },
    [location, confirmedNavigation, checkNextLocation]
  );

  const confirmNavigation = useCallback(() => {
    setShowPrompt(false);
    setConfirmedNavigation(true);
  }, []);

  useEffect(() => {
    if (confirmedNavigation && lastLocation) {
      navigate(lastLocation.location.pathname);
    }
  }, [navigate, confirmedNavigation, lastLocation]);

  useBlocker(handleBlockedNavigation, when);

  return [showPrompt, confirmNavigation, cancelNavigation];
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useBlocker(blocker, when = true)
Asignaciones con arrow functions encontradas (posibles funciones):
 - unblock(navigator as any).block((tx))
 - checkNextLocation(nextLocation, location))
 - cancelNavigation(useCallback(())
 - handleBlockedNavigation(useCallback(
    (nextLocation))
 - confirmNavigation(useCallback(())
Declaraciones 'export' encontradas:
- export function useBlocker
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useRedirectURL.ts
Tamaño: 1556 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useCallback } from 'react';
import { createCookieHandler } from '../utils/cookies';
import { assertProtocol } from '../utils/url';

const novuRedirectURLCookie = createCookieHandler('nv_redirect_url');

const REDIRECT_URL_SEARCH_PARAM = 'redirect_url';

const REDIRECT_COOKIE_EXPIRY_DAYS = 7;

export function useRedirectURL() {
  const setRedirectURL = useCallback(() => {
    const redirectURLFromParams = new URL(window.location.href).searchParams.get(REDIRECT_URL_SEARCH_PARAM) || '';

    // If there is a redirect URL in the URL, set it in the cookie.
    if (redirectURLFromParams) {
      // Protect against XSS attacks via the javascript: pseudo protocol.
      assertProtocol(redirectURLFromParams);
      // Expires in 7 days.
      novuRedirectURLCookie.set(redirectURLFromParams, { expires: REDIRECT_COOKIE_EXPIRY_DAYS });

      // Clean the URL so that the redirect URL doesn't get used again.
      const url = new URL(window.location.href);
      url.searchParams.delete(REDIRECT_URL_SEARCH_PARAM);
      window.history.replaceState({}, '', url.href);
    }
  }, []);

  const getRedirectURL = useCallback(() => {
    const redirectURLFromCookie = novuRedirectURLCookie.get();

    // If there is a cookie in the URL, redirect to that URL. Otherwise, its a noop.
    if (redirectURLFromCookie) {
      // Clean the cookie first, so that it doesn't get used again.
      novuRedirectURLCookie.remove();

      return redirectURLFromCookie;
    }

    return '';
  }, []);

  return {
    setRedirectURL,
    getRedirectURL,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useRedirectURL()
Asignaciones con arrow functions encontradas (posibles funciones):
 - setRedirectURL(useCallback(())
 - getRedirectURL(useCallback(())
Declaraciones 'export' encontradas:
- export function useRedirectURL

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useRouteScopes.ts
Tamaño: 588 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useMemo } from 'react';
import { useLocation } from 'react-router-dom';
import { PUBLIC_ROUTES_PREFIXES } from '../constants/routes';

export function useRouteScopes() {
  const location = useLocation();
  const inPublicRoute = useMemo(
    () => !!Array.from(PUBLIC_ROUTES_PREFIXES.values()).find((prefix) => location.pathname.startsWith(prefix)),
    [location]
  );
  const inPrivateRoute = !inPublicRoute;
  const inStudioRoute = useMemo(() => location.pathname.startsWith('/studio'), [location]);

  return {
    inPublicRoute,
    inPrivateRoute,
    inStudioRoute,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useRouteScopes()
Asignaciones con arrow functions encontradas (posibles funciones):
 - inPublicRoute(useMemo(
    ())
 - inStudioRoute(useMemo(())
Declaraciones 'export' encontradas:
- export function useRouteScopes

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useSubscribers.ts
Tamaño: 681 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import { ISubscriber } from '@novu/shared';

import { useEnvironment } from './useEnvironment';

import { getSubscribersList } from '../api/subscribers';

export function useSubscribers(page = 0, limit = 10) {
  const { environment } = useEnvironment();
  const { data, isLoading } = useQuery<{ data: ISubscriber[]; hasMore: boolean; pageSize: number }>(
    ['subscribersList', environment?._id, page, limit],
    () => getSubscribersList(page, limit),
    {
      keepPreviousData: true,
    }
  );

  return {
    subscribers: data?.data,
    loading: isLoading,
    pageSize: data?.pageSize,
    hasMore: data?.hasMore,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useSubscribers(page = 0, limit = 10)
Declaraciones 'export' encontradas:
- export function useSubscribers

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useTemplates.ts
Tamaño: 1961 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { INotificationTemplate, isBridgeWorkflow, WorkflowIntegrationStatus, ResourceTypeEnum } from '@novu/shared';
import { IUsePaginationQueryParamsStateOptions } from '@novu/design-system';

import { useEnvironment } from './useEnvironment';
import { getNotificationsList } from '../api/notification-templates';
import { usePaginatedQuery } from './usePaginatedQuery';

export type INotificationTemplateExtended = INotificationTemplate & {
  id: string;
  status: string;
  notificationGroup: { name: string };
  workflowIntegrationStatus?: WorkflowIntegrationStatus;
  bridge?: boolean;
};

/** allow override of paginated inputs */
export function useTemplates({
  pageIndex,
  pageSize,
  areSearchParamsEnabled = false,
}: {
  pageIndex?: IUsePaginationQueryParamsStateOptions['initialPageNumber'];
  pageSize?: IUsePaginationQueryParamsStateOptions['initialPageSize'];
} & Pick<IUsePaginationQueryParamsStateOptions, 'areSearchParamsEnabled'> = {}) {
  const { environment } = useEnvironment();

  const {
    data,
    isLoading,
    totalItemCount = 0,
    totalPageCount = 0,
    ...paginatedQueryResp
  } = usePaginatedQuery<{
    data: INotificationTemplateExtended[];
    totalCount: number;
    pageSize: number;
  }>({
    queryKey: ['notification-templates', environment?._id],
    buildQueryFn:
      ({ page, limit, query }) =>
      () =>
        getNotificationsList({ page, limit, query }),
    getTotalItemCount: (resp) => resp.totalCount,
    queryOptions: {
      keepPreviousData: true,
    },
    paginationOptions: {
      areSearchParamsEnabled,
      initialPageNumber: (pageIndex ?? 0) + 1,
      initialPageSize: pageSize,
    },
  });

  return {
    ...paginatedQueryResp,
    templates: data?.data.map((template) => {
      return {
        ...template,
        bridge: isBridgeWorkflow(template.type),
      };
    }),
    loading: isLoading,
    totalCount: data?.totalCount,
    totalItemCount,
    totalPageCount,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useTemplates({
  pageIndex,
  pageSize,
  areSearchParamsEnabled = false,
}: {
  pageIndex?: IUsePaginationQueryParamsStateOptions['initialPageNumber'];
  pageSize?: IUsePaginationQueryParamsStateOptions['initialPageSize'];
} & Pick<IUsePaginationQueryParamsStateOptions, 'areSearchParamsEnabled'> = {})
Declaraciones 'export' encontradas:
- export  type
- export function useTemplates

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useTenants.ts
Tamaño: 946 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { UseQueryOptions, useQuery } from '@tanstack/react-query';

import { IPaginatedResponseDto, ITenantEntity } from '@novu/shared';

import { QueryKeys } from '../api/query.keys';
import { getTenants } from '../api/tenants';
import { useEnvironment } from './useEnvironment';

export function useTenants({
  options,
  page,
  limit,
}: {
  options?: UseQueryOptions<IPaginatedResponseDto<ITenantEntity>, any>;
  page?: number;
  limit?: number;
}) {
  const { environment } = useEnvironment();
  const { data, isLoading, ...rest } = useQuery<IPaginatedResponseDto<ITenantEntity>, any>(
    [QueryKeys.tenantsList, environment?._id, page, limit],
    () => getTenants({ page, limit }),
    {
      refetchOnMount: false,
      keepPreviousData: true,
      ...options,
    }
  );

  return {
    tenants: data?.data,
    hasMore: data?.hasMore,
    page: data?.page,
    pageSize: data?.pageSize,
    loading: isLoading,
    ...rest,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useTenants({
  options,
  page,
  limit,
}: {
  options?: UseQueryOptions<IPaginatedResponseDto<ITenantEntity>, any>;
  page?: number;
  limit?: number;
})
Declaraciones 'export' encontradas:
- export function useTenants

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useThemeChange.tsx
Tamaño: 1553 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ColorScheme, useMantineColorScheme } from '@mantine/core';
import { IconOutlineDarkMode, IconOutlineLightMode, IconOutlineTonality, IconType } from '@novu/novui/icons';
import { ColorSchemePreferenceEnum, THEME_TITLE_LOOKUP, useLocalThemePreference } from '@novu/design-system';
import { useEffect, useMemo } from 'react';
import { useSegment } from '../components/providers/SegmentProvider';
import { useDebounce } from './useDebounce';

type ThemeChange = { colorScheme: ColorScheme; themeStatus: ColorSchemePreferenceEnum };

export const ICON_BY_THEME_PREFERENCE: Record<ColorSchemePreferenceEnum, IconType> = {
  [ColorSchemePreferenceEnum.DARK]: IconOutlineDarkMode,
  [ColorSchemePreferenceEnum.LIGHT]: IconOutlineLightMode,
  [ColorSchemePreferenceEnum.SYSTEM]: IconOutlineTonality,
};

export default function useThemeChange() {
  const { themeStatus } = useLocalThemePreference();
  const { colorScheme, toggleColorScheme } = useMantineColorScheme();
  const segment = useSegment();

  const trackThemeChange = useDebounce<ThemeChange>((args) => {
    segment.track('Theme is set - [Theme]', args);
  }, 500);

  useEffect(() => {
    trackThemeChange({ colorScheme, themeStatus });
  }, [colorScheme, themeStatus, trackThemeChange]);

  const Icon = useMemo(
    () => ICON_BY_THEME_PREFERENCE[themeStatus] ?? ICON_BY_THEME_PREFERENCE[ColorSchemePreferenceEnum.SYSTEM],
    [themeStatus]
  );

  const themeLabel = THEME_TITLE_LOOKUP[themeStatus];

  return {
    Icon,
    colorScheme,
    themeLabel,
    toggleColorScheme,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ColorScheme, useMantineColorScheme } from '@mantine/core';
import { IconOutlineDarkMode, IconOutlineLightMode, IconOutlineTonality, IconType } from '@novu/novui/icons';
import { ColorSchemePreferenceEnum, THEME_TITLE_LOOKUP, useLocalThemePreference } from '@novu/design-system';
import { useEffect, useMemo } from 'react';
import { useSegment } from '../components/providers/SegmentProvider';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/hooks/useVariablesManager.ts
Tamaño: 2807 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useLayoutEffect, useState } from 'react';
import { useFieldArray, useFormContext } from 'react-hook-form';
import { parse } from '@handlebars/parser';
import isEqual from 'lodash.isequal';
import { getTemplateVariables } from '@novu/shared';

import { IForm, ITemplates } from '../pages/templates/components/formTypes';
import { useStepFormPath } from '../pages/templates/hooks/useStepFormPath';
import { useStepIndex } from '../pages/templates/hooks/useStepIndex';

const getTextContent = ({ templateToParse, fields }: { templateToParse?: ITemplates; fields: string[] }): string => {
  return fields
    .map((con) => con.split('.').reduce((a, b) => a && a[b], templateToParse ?? {}))
    .map((con) => (Array.isArray(con) ? con.map((innerCon) => `${innerCon.content} ${innerCon?.url}`).join(' ') : con))
    .join(' ');
};

export const useVariablesManager = (contents: string[]) => {
  const { stepIndex, variantIndex } = useStepIndex();
  const { watch, control, getValues } = useFormContext<IForm>();
  const stepFormPath = useStepFormPath();
  const variablesArray = useFieldArray({ control, name: `${stepFormPath}.template.variables` });
  const variableArray = watch(`${stepFormPath}.template.variables`);

  const [textContent, setTextContent] = useState<string>(() =>
    getTextContent({ templateToParse: getValues(`${stepFormPath}.template`), fields: contents })
  );

  useLayoutEffect(() => {
    const subscription = watch((values) => {
      const steps = values.steps ?? [];
      if (!steps.length || !steps[stepIndex]) return;

      const step = steps[stepIndex];
      let template = step?.template;
      if (step && typeof variantIndex !== 'undefined' && variantIndex > -1) {
        template = step.variants?.[variantIndex]?.template;
      }

      setTextContent(getTextContent({ templateToParse: template as ITemplates, fields: contents }));
    });

    return () => subscription.unsubscribe();
  }, [stepIndex, variantIndex, watch, setTextContent, contents]);

  useLayoutEffect(() => {
    try {
      const ast = parse(textContent);
      const variables = getTemplateVariables(ast.body);
      const arrayFields = [...(variableArray || [])];

      variables.forEach((vari) => {
        if (!arrayFields.find((field) => field.name === vari.name)) {
          arrayFields.push(vari);
        }
      });

      arrayFields.forEach((vari, ind) => {
        if (!variables.find((field) => field.name === vari.name)) {
          delete arrayFields[ind];
        }
      });

      const newVariablesArray = arrayFields.filter((field) => !!field);

      if (!isEqual(variableArray, newVariablesArray)) {
        variablesArray.replace(newVariablesArray);
      }
    } catch (e) {
      /* empty */
    }
  }, [textContent, variableArray]);

  return variablesArray;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - getTextContent({ templateToParse, fields }: { templateToParse?: ITemplates; fields: string[] }): string)
 - useVariablesManager(contents: string[]))
 - subscription(watch((values))
 - template(step.variants?.[variantIndex]?.template;
      }

      setTextContent(getTextContent({ templateToPa...)
 - arrayFields([...(variableArray || [])];

      variables.forEach((vari))
 - newVariablesArray(arrayFields.filter((field))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/useWebContainerSupport.ts
Tamaño: 318 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useMemo } from 'react';
import { isChrome, isEdge, browserName } from 'react-device-detect';

export const useWebContainerSupported = () => {
  return useMemo(() => {
    const isBrave = browserName === 'Brave';
    const isSupported = isChrome || isEdge || isBrave;

    return { isSupported };
  }, []);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useWebContainerSupported())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/integrations/index.ts
Tamaño: 203 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './useIntegrations';
export * from './useActiveIntegrations';
export * from './useIntegrationLimit';
export * from './useHasActiveIntegrations';
export * from './useGetPrimaryIntegration';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/integrations/useActiveIntegrations.ts
Tamaño: 612 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { UseQueryOptions, useQuery } from '@tanstack/react-query';

import { getActiveIntegrations } from '../../api/integration';
import { QueryKeys } from '../../api/query.keys';
import type { IntegrationEntity } from '../../pages/integrations/types';

export function useActiveIntegrations(options: UseQueryOptions<IntegrationEntity[], any, IntegrationEntity[]> = {}) {
  const { data, ...rest } = useQuery<IntegrationEntity[], any, IntegrationEntity[]>(
    [QueryKeys.activeIntegrations],
    getActiveIntegrations,
    {
      ...options,
    }
  );

  return {
    integrations: data,
    ...rest,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useActiveIntegrations(options: UseQueryOptions<IntegrationEntity[], any, IntegrationEntity[]> = {})
Declaraciones 'export' encontradas:
- export function useActiveIntegrations

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/integrations/useGetPrimaryIntegration.ts
Tamaño: 1074 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { ChannelTypeEnum } from '@novu/shared';
import { useMemo } from 'react';
import { useHasActiveIntegrations } from './useHasActiveIntegrations';

type UseHasPrimaryIntegrationProps = {
  filterByEnv?: boolean;
  channelType?: ChannelTypeEnum;
};

export function useGetPrimaryIntegration({ filterByEnv = true, channelType }: UseHasPrimaryIntegrationProps) {
  const isPrimaryStep = useMemo(
    () => channelType === ChannelTypeEnum.EMAIL || channelType === ChannelTypeEnum.SMS,
    [channelType]
  );

  const { activeIntegrationsByEnv, hasActiveIntegration } = useHasActiveIntegrations({
    filterByEnv,
    channelType,
  });

  const getPrimaryIntegration = useMemo(() => {
    if (!hasActiveIntegration || !isPrimaryStep) {
      return undefined;
    }

    return activeIntegrationsByEnv?.find((integration) => integration.primary && integration.channel === channelType)
      ?.providerId;
  }, [hasActiveIntegration, activeIntegrationsByEnv, channelType, isPrimaryStep]);

  return {
    primaryIntegration: getPrimaryIntegration,
    isPrimaryStep,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useGetPrimaryIntegration({ filterByEnv = true, channelType }: UseHasPrimaryIntegrationProps)
Asignaciones con arrow functions encontradas (posibles funciones):
 - isPrimaryStep(useMemo(
    ())
 - getPrimaryIntegration(useMemo(())
Declaraciones 'export' encontradas:
- export function useGetPrimaryIntegration

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/integrations/useHasActiveIntegrations.ts
Tamaño: 2425 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { ChannelTypeEnum, EmailProviderIdEnum, SmsProviderIdEnum } from '@novu/shared';
import { useMemo } from 'react';
import { useEnvironment } from '../useEnvironment';
import { useActiveIntegrations } from './useActiveIntegrations';
import { useIntegrationLimit } from './useIntegrationLimit';

type UseHasActiveIntegrationsProps = {
  filterByEnv?: boolean;
  channelType?: ChannelTypeEnum;
};

export function useHasActiveIntegrations({ filterByEnv = true, channelType }: UseHasActiveIntegrationsProps) {
  const { integrations } = useActiveIntegrations();
  const { environment } = useEnvironment();
  const { isLimitReached: isEmailLimitReached } = useIntegrationLimit(ChannelTypeEnum.EMAIL);
  const { isLimitReached: isSmsLimitReached } = useIntegrationLimit(ChannelTypeEnum.SMS);

  const isChannelStep = useMemo(() => {
    if (!channelType) {
      return false;
    }

    return [
      ChannelTypeEnum.IN_APP,
      ChannelTypeEnum.EMAIL,
      ChannelTypeEnum.PUSH,
      ChannelTypeEnum.SMS,
      ChannelTypeEnum.CHAT,
    ].includes(channelType);
  }, [channelType]);

  const activeIntegrationsByEnv = useMemo(() => {
    if (filterByEnv) {
      return integrations?.filter((integration) => integration._environmentId === environment?._id);
    }

    return integrations;
  }, [integrations, filterByEnv, environment?._id]);

  const hasActiveIntegration = useMemo(() => {
    if (!isChannelStep) {
      return true;
    }

    const isEmailStep = channelType === ChannelTypeEnum.EMAIL;
    const isSmsStep = channelType === ChannelTypeEnum.SMS;

    const isActive = !!activeIntegrationsByEnv?.some((integration) => integration.channel === channelType);

    if (isActive && isEmailStep) {
      const isNovuProvider = activeIntegrationsByEnv?.some(
        (integration) => integration.providerId === EmailProviderIdEnum.Novu && integration.primary
      );

      return isNovuProvider ? !isEmailLimitReached : isActive;
    }

    if (isActive && isSmsStep) {
      const isNovuProvider = activeIntegrationsByEnv?.some(
        (integration) => integration.providerId === SmsProviderIdEnum.Novu && integration.primary
      );

      return isNovuProvider ? !isSmsLimitReached : isActive;
    }

    return isActive;
  }, [activeIntegrationsByEnv, channelType, isEmailLimitReached, isSmsLimitReached, isChannelStep]);

  return { activeIntegrationsByEnv, hasActiveIntegration, isChannelStep };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useHasActiveIntegrations({ filterByEnv = true, channelType }: UseHasActiveIntegrationsProps)
Asignaciones con arrow functions encontradas (posibles funciones):
 - isChannelStep(useMemo(())
 - activeIntegrationsByEnv(useMemo(())
 - hasActiveIntegration(useMemo(())
 - isActive(!!activeIntegrationsByEnv?.some((integration))
 - isNovuProvider(activeIntegrationsByEnv?.some(
        (integration))
 - isNovuProvider(activeIntegrationsByEnv?.some(
        (integration))
Declaraciones 'export' encontradas:
- export function useHasActiveIntegrations

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/integrations/useIntegrationLimit.ts
Tamaño: 711 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import { ChannelTypeEnum } from '@novu/shared';

import { getIntegrationLimit } from '../../api/integration';
import { IS_SELF_HOSTED } from '../../config/index';

const isLimitFetchingEnabled = !IS_SELF_HOSTED;

export function useIntegrationLimit(type: ChannelTypeEnum) {
  const {
    data = { limit: 0, count: 0 },
    isLoading,
    refetch,
  } = useQuery(['integrationLimit', type], () => getIntegrationLimit(type), {
    enabled: isLimitFetchingEnabled,
  });

  const isLimitReached = isLimitFetchingEnabled && data.limit === data.count;

  return {
    data,
    loading: isLoading,
    refetch,
    isLimitFetchingEnabled,
    isLimitReached,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useIntegrationLimit(type: ChannelTypeEnum)
Declaraciones 'export' encontradas:
- export function useIntegrationLimit

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/integrations/useIntegrations.ts
Tamaño: 639 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { UseQueryOptions, useQuery } from '@tanstack/react-query';

import { getIntegrations } from '../../api/integration';
import type { IntegrationEntity } from '../../pages/integrations/types';
import { QueryKeys } from '../../api/query.keys';

export function useIntegrations(options: UseQueryOptions<IntegrationEntity[], any, IntegrationEntity[]> = {}) {
  const { data, isLoading, ...rest } = useQuery<IntegrationEntity[], any, IntegrationEntity[]>(
    [QueryKeys.integrationsList],
    getIntegrations,
    { refetchOnMount: false, ...options }
  );

  return {
    integrations: data,
    loading: isLoading,
    ...rest,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useIntegrations(options: UseQueryOptions<IntegrationEntity[], any, IntegrationEntity[]> = {})
Declaraciones 'export' encontradas:
- export function useIntegrations

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/workflow/useControlsHandler.ts
Tamaño: 1334 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import { useState } from 'react';
import { useSegment } from '../../components/providers/SegmentProvider';

export function useControlsHandler(
  getPreview: (controls) => Promise<any>,
  workflowId: string,
  stepId: string,
  source: string
) {
  const segment = useSegment();
  const [controls, setControls] = useState({});
  const [payload, setPayload] = useState({});

  const {
    data: preview,
    isLoading,
    refetch: fetchPreview,
    error,
  } = useQuery<any, any, any>(
    ['preview', workflowId, stepId, payload, controls],
    () =>
      getPreview({
        workflowId,
        stepId,
        payload,
        controls,
      }),
    {
      enabled: !!workflowId && !!stepId,
    }
  );

  const onControlsChange = (type: string, form: any, id?: string) => {
    switch (type) {
      case 'step':
        segment.track('Step Controls Changes', {
          key: id,
          origin: source,
        });
        setControls(form.formData);
        break;
      case 'payload':
        setPayload(form.formData);
        break;
      default:
        throw new Error('Invalid control type');
    }
  };

  return {
    preview,
    isLoading,
    fetchPreview,
    error,
    controls,
    payload,
    setControls,
    setPayload,
    onControlsChange,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useControlsHandler(getPreview: (controls)
Asignaciones con arrow functions encontradas (posibles funciones):
 - onControlsChange(type: string, form: any, id?: string))
Declaraciones 'export' encontradas:
- export function useControlsHandler

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/workflowPreferences/useCloudWorkflowPreferences.ts
Tamaño: 2232 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { useQuery } from '@tanstack/react-query';
import { buildWorkflowPreferences, PreferencesTypeEnum, WorkflowPreferences } from '@novu/shared';
import { AxiosError, HttpStatusCode } from 'axios';
import { QueryKeys } from '../../api/query.keys';
import { useNovuAPI } from '../useNovuAPI';

export const useCloudWorkflowPreferences = (
  workflowId: string
): {
  isLoading: boolean;
  workflowUserPreferences: WorkflowPreferences | null;
  workflowResourcePreferences: WorkflowPreferences | null;
  refetch: () => void;
} => {
  const api = useNovuAPI();
  const [workflowUserPreferences, setWorkflowUserPreferences] = useState<WorkflowPreferences | null>(null);
  const [workflowResourcePreferences, setWorkflowResourcePreferences] = useState<WorkflowPreferences | null>(null);

  const { data, isLoading, refetch } = useQuery<{
    workflowUserPreferences: WorkflowPreferences;
    workflowResourcePreferences: WorkflowPreferences;
  }>([QueryKeys.getWorkflowPreferences(workflowId)], async () => {
    try {
      const result = await api.getPreferences(workflowId as string);

      return {
        workflowUserPreferences: result?.data?.source[PreferencesTypeEnum.USER_WORKFLOW],
        workflowResourcePreferences: result?.data?.source[PreferencesTypeEnum.WORKFLOW_RESOURCE],
      };
    } catch (err: unknown) {
      if (!checkIsAxiosError(err) || err.response?.status !== HttpStatusCode.NotFound) {
        throw err;
      }

      // if preferences aren't found (404), use default so that user can modify them to upsert properly.
      return {
        workflowUserPreferences: buildWorkflowPreferences(undefined),
        workflowResourcePreferences: buildWorkflowPreferences(undefined),
      };
    }
  });

  useEffect(() => {
    if (data) {
      setWorkflowUserPreferences(data.workflowUserPreferences);
      setWorkflowResourcePreferences(data.workflowResourcePreferences);
    }
  }, [data]);

  return {
    isLoading,
    workflowUserPreferences,
    workflowResourcePreferences,
    refetch,
  };
};

function checkIsAxiosError(err: unknown): err is AxiosError {
  return typeof err === 'object' && !!err && 'name' in err && err.name === 'AxiosError';
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - checkIsAxiosError(err: unknown)
Asignaciones con arrow functions encontradas (posibles funciones):
 - useCloudWorkflowPreferences(workflowId: string
): {
  isLoading: boolean;
  workflowUserPreferences: WorkflowPreferences | null;...)
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/workflowPreferences/useStudioWorkflowPreferences.ts
Tamaño: 840 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useMemo } from 'react';
import { buildWorkflowPreferences, WorkflowPreferences } from '@novu/shared';
import { useDiscover } from '../../studio/hooks/useBridgeAPI';

export const useStudioWorkflowPreferences = (
  workflowId: string
): {
  isLoading: boolean;
  workflowChannelPreferences: WorkflowPreferences | undefined;
} => {
  const { data, isLoading } = useDiscover();

  const workflowChannelPreferences: WorkflowPreferences = useMemo(() => {
    const workflowPreference = data?.workflows?.find((workflow) => workflow.workflowId === workflowId)?.preferences;

    // if incomplete preferences are discovered from framework, populate the rest based on whatever is provided.
    return buildWorkflowPreferences(workflowPreference);
  }, [data, workflowId]);

  return {
    isLoading,
    workflowChannelPreferences,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useStudioWorkflowPreferences(workflowId: string
): {
  isLoading: boolean;
  workflowChannelPreferences: WorkflowPreferences | un...)
 - WorkflowPreferences(useMemo(())
 - workflowPreference(data?.workflows?.find((workflow))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/hooks/workflowPreferences/useUpdateWorkflowPreferences.ts
Tamaño: 989 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { IResponseError, WorkflowPreferences } from '@novu/shared';
import { useMutation, UseMutationOptions } from '@tanstack/react-query';
import { useNovuAPI } from '../useNovuAPI';

export const useUpdateWorkflowPreferences = (
  workflowId: string,
  options: Omit<
    UseMutationOptions<WorkflowPreferences | null, IResponseError, WorkflowPreferences | null>,
    'mutationFn'
  >
): {
  isLoading: boolean;
  updateWorkflowPreferences: (data: WorkflowPreferences | null) => Promise<WorkflowPreferences | null>;
} => {
  const api = useNovuAPI();

  const { mutateAsync: updateWorkflowPreferences, isLoading } = useMutation<
    WorkflowPreferences | null,
    IResponseError,
    WorkflowPreferences | null
  >(
    (data) => {
      if (data === null) {
        return api.deletePreferences(workflowId);
      } else {
        return api.upsertPreferences(workflowId, data);
      }
    },
    { ...options }
  );

  return {
    isLoading,
    updateWorkflowPreferences,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useUpdateWorkflowPreferences(workflowId: string,
  options: Omit<
    UseMutationOptions<WorkflowPreferences | null, IResponseErr...)
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/BillingPages.tsx
Tamaño: 192 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IS_SELF_HOSTED } from '../config';
import { Routes } from '../ee/billing';

export const BillingRoutes = () => {
  if (IS_SELF_HOSTED) {
    return null;
  }

  return <Routes />;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IS_SELF_HOSTED } from '../config';
import { Routes } from '../ee/billing';
export const BillingRoutes = () => {
if (IS_SELF_HOSTED) {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/HomePage.tsx
Tamaño: 195 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Navigate } from 'react-router-dom';
import { ROUTES } from '../constants/routes';

function HomePage() {
  return <Navigate to={ROUTES.WORKFLOWS} replace />;
}

export default HomePage;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Navigate } from 'react-router-dom';
import { ROUTES } from '../constants/routes';
function HomePage() {
return <Navigate to={ROUTES.WORKFLOWS} replace />;
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/TranslationPages.tsx
Tamaño: 201 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IS_SELF_HOSTED } from '../config';
import { Routes } from '../ee/translations';

export const TranslationRoutes = () => {
  if (IS_SELF_HOSTED) {
    return null;
  }

  return <Routes />;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IS_SELF_HOSTED } from '../config';
import { Routes } from '../ee/translations';
export const TranslationRoutes = () => {
if (IS_SELF_HOSTED) {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/ActivitiesPage.tsx
Tamaño: 8347 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useCallback, useEffect, useState } from 'react';
import { useQuery } from '@tanstack/react-query';
import { Controller, useForm } from 'react-hook-form';
import { useLocation } from 'react-router-dom';
import { ChannelTypeEnum } from '@novu/shared';
import styled from '@emotion/styled';

import { Select, Input, Button } from '@novu/design-system';
import { Flex } from '@mantine/core';
import { useTemplates } from '../../hooks';
import { getActivityList } from '../../api/activity';
import PageContainer from '../../components/layout/components/PageContainer';
import PageHeader from '../../components/layout/components/PageHeader';
import { ActivityStatistics } from './components/ActivityStatistics';
import { ActivityGraph } from './components/ActivityGraph';
import { ActivityList } from './components/ActivityList';
import { ExecutionDetailsModal } from '../../components/execution-detail/ExecutionDetailsModal';
import { IActivityGraphStats } from './interfaces';
import { FIRST_100_WORKFLOWS } from '../../constants/workflowConstants';

const FiltersContainer = styled.div`
  gap: 15px;
  padding: 30px;
`;

interface IFiltersForm {
  channels: ChannelTypeEnum[];
  templates: string[];
  transactionId: string;
  email: string;
  subscriberId: string;
}

const initialFormState: IFiltersForm = {
  channels: [],
  templates: [],
  transactionId: '',
  email: '',
  subscriberId: '',
};

export function ActivitiesPage() {
  const { templates, loading: loadingTemplates } = useTemplates(FIRST_100_WORKFLOWS);
  const [page, setPage] = useState<number>(0);
  const [isModalOpen, setToggleModal] = useState<boolean>(false);
  const [notificationId, setNotificationId] = useState<string>('');
  const [filters, setFilters] = useState<IFiltersForm>(initialFormState);
  const { data, isLoading, isFetching } = useQuery<{ data: any[]; hasMore: boolean; pageSize: number }>(
    ['activitiesList', page, filters],
    () => getActivityList(page, filters),
    { keepPreviousData: true }
  );
  const { search } = useLocation();

  const onFiltersChange = useCallback((formData: Partial<IFiltersForm>) => {
    setFilters((old) => ({ ...old, ...formData }));
  }, []);

  function handleTableChange(pageIndex) {
    setPage(pageIndex);
  }

  const {
    control,
    setValue,
    reset,
    formState: { isDirty },
    getValues,
  } = useForm<IFiltersForm>({
    defaultValues: initialFormState,
  });

  function onRowClick(event, selectedNotificationId) {
    event.preventDefault();
    setNotificationId(selectedNotificationId);
    setToggleModal((state) => !state);
  }

  function onModalClose() {
    setNotificationId('');
    setToggleModal(false);
  }

  const onBarClick = (item: IActivityGraphStats) => {
    setValue('channels', item.channels, { shouldDirty: true });
    setValue('templates', item.templates, { shouldDirty: true });
    onFiltersChange({ channels: item.channels, templates: item.templates });
  };

  const onClearClick = () => {
    reset(initialFormState);
    onFiltersChange(initialFormState);
  };

  useEffect(() => {
    const searchParams = new URLSearchParams(search);
    const transactionId = searchParams.get('transactionId');
    if (transactionId) {
      setValue('transactionId', transactionId);
      onFiltersChange({ transactionId });
    }
  }, [search, onFiltersChange, setValue]);

  return (
    <PageContainer title="Activity Feed">
      <PageHeader title="Activity Feed" />
      <ActivityStatistics />
      <ActivityGraph onBarClick={onBarClick} />
      <form>
        <FiltersContainer>
          <Flex mih={50} gap="md" justify="flex-start" align="flex-start" direction="row" wrap="wrap">
            <Controller
              render={({ field }) => (
                <Select
                  label="Channels"
                  type="multiselect"
                  placeholder="Select channel"
                  data={[
                    { value: ChannelTypeEnum.SMS, label: 'SMS' },
                    { value: ChannelTypeEnum.EMAIL, label: 'Email' },
                    { value: ChannelTypeEnum.IN_APP, label: 'In-App' },
                    { value: ChannelTypeEnum.PUSH, label: 'Push' },
                  ]}
                  data-test-id="activities-filter"
                  value={field.value}
                  onChange={(value) => {
                    field.onChange(value);
                  }}
                />
              )}
              control={control}
              name="channels"
            />
            <Controller
              render={({ field }) => (
                <Select
                  label="Workflows"
                  type="multiselect"
                  data-test-id="templates-filter"
                  loading={loadingTemplates}
                  placeholder="Select workflow"
                  data={(templates || []).map((template) => ({
                    value: template._id as string,
                    label: template.name,
                  }))}
                  value={field.value}
                  onChange={(value) => {
                    field.onChange(value);
                  }}
                />
              )}
              control={control}
              name="templates"
            />
            <div style={{ minWidth: '250px' }}>
              <Controller
                render={({ field, fieldState }) => (
                  <Input
                    {...field}
                    error={fieldState.error?.message}
                    label="Transaction ID"
                    placeholder="Search by transaction id"
                    value={field.value || ''}
                    data-test-id="transactionId-filter"
                  />
                )}
                control={control}
                name="transactionId"
              />
            </div>

            <div style={{ minWidth: '250px' }}>
              <Controller
                render={({ field, fieldState }) => (
                  <Input
                    {...field}
                    error={fieldState.error?.message}
                    label="E-mail"
                    placeholder="Search by subscriber email"
                    value={field.value || ''}
                    data-test-id="email-filter"
                  />
                )}
                control={control}
                name="email"
              />
            </div>
            <div style={{ minWidth: '250px' }}>
              <Controller
                render={({ field, fieldState }) => (
                  <Input
                    {...field}
                    error={fieldState.error?.message}
                    label="Subscriber ID"
                    placeholder="Search by subscriberId"
                    value={field.value || ''}
                    data-test-id="subscriberId-filter"
                  />
                )}
                control={control}
                name="subscriberId"
              />
            </div>
            <div style={{ paddingTop: 10, marginLeft: 'auto' }}>
              <Button
                variant="subtle"
                size="md"
                mt={30}
                onClick={onClearClick}
                data-test-id="clear-filters"
                disabled={!isDirty}
                style={{ marginRight: 15 }}
              >
                Clear
              </Button>
              <Button
                variant="gradient"
                loading={isLoading || isLoading}
                size="md"
                mt={30}
                onClick={() => onFiltersChange(getValues())}
                data-test-id="submit-filters"
              >
                Search
              </Button>
            </div>
          </Flex>
        </FiltersContainer>
      </form>
      <ActivityList
        loading={isLoading || isFetching}
        data={data?.data || []}
        onRowClick={onRowClick}
        pagination={{
          pageSize: data?.pageSize,
          current: page,
          onPageChange: handleTableChange,
          minimalPagination: true,
          hasMore: data?.hasMore,
        }}
      />
      <ExecutionDetailsModal
        onViewDigestExecution={setNotificationId}
        notificationId={notificationId}
        modalVisibility={isModalOpen}
        onClose={onModalClose}
      />
    </PageContainer>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useCallback, useEffect, useState } from 'react';
import { useQuery } from '@tanstack/react-query';
import { Controller, useForm } from 'react-hook-form';
import { useLocation } from 'react-router-dom';
import { ChannelTypeEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/components/ActivityGraph.tsx
Tamaño: 4199 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import styled from '@emotion/styled';
import { BarElement, CategoryScale, Chart as ChartJS, Legend, LinearScale, Title, Tooltip } from 'chart.js';
import { Bar, getElementAtEvent } from 'react-chartjs-2';
import { useEffect, useState, useRef, useMemo } from 'react';
import { useMantineTheme } from '@mantine/core';
import cloneDeep from 'lodash.clonedeep';
import { differenceInDays, format, isSameDay, subDays } from 'date-fns';

import { MessageContainer } from './MessageContainer';
import { ActivityGraphGlobalStyles } from './ActivityGraphGlobalStyles';
import { getActivityGraphStats } from '../../../api/activity';
import { IActivityGraphStats } from '../interfaces';
import { getOptions, getChartData } from '../services';

ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);

export function ActivityGraph({ onBarClick }: { onBarClick: (item: IActivityGraphStats) => void }) {
  const chartRef = useRef();
  const [isTriggerSent, setIsTriggerSent] = useState<boolean>(false);
  const [graphState, setGraphState] = useState<IActivityGraphStats[]>([]);
  const { data: activityGraphStats, isLoading: loadingActivityStats } = useQuery<IActivityGraphStats[]>(
    ['activityGraphStats'],
    getActivityGraphStats
  );
  const isDark = useMantineTheme().colorScheme === 'dark';

  useEffect(() => {
    if (!activityGraphStats) return;

    if (checkIsTriggerSent(activityGraphStats)) {
      setGraphState(fillDateGaps(activityGraphStats));
      setIsTriggerSent(true);
    }
  }, [activityGraphStats]);

  const activityGraphStatsLength = graphState?.length ? graphState?.length : 0;

  const options = useMemo(
    () => getOptions(isTriggerSent, activityGraphStatsLength),
    [isTriggerSent, activityGraphStatsLength]
  );

  const data = useMemo(() => getChartData(graphState, isDark), [graphState, isDark]);

  const onClick = (event) => {
    const [barItem] = getElementAtEvent(chartRef.current as any, event);
    if (barItem) {
      const { datasetIndex } = barItem;
      const item = data.datasets[datasetIndex].data[barItem.index];

      onBarClick(item);
    }
  };

  return (
    <Wrapper>
      <ActivityGraphGlobalStyles isTriggerSent={isTriggerSent} isDark={isDark} />

      {!isTriggerSent && !loadingActivityStats ? <MessageContainer isDark={isDark} /> : null}

      <Bar ref={chartRef} id="chart-bar-styles" options={options} data={data} onClick={onClick} />
    </Wrapper>
  );
}

function checkIsTriggerSent(activityGraphStats: IActivityGraphStats[] | undefined) {
  return activityGraphStats?.length && activityGraphStats?.length > 0;
}

const Wrapper = styled.div`
  padding: 0 30px;
  display: flex;
  align-items: center;
  flex-direction: column;
  position: relative;
`;

function fillDateGaps(data: IActivityGraphStats[]): IActivityGraphStats[] {
  const containsCurrentDate = unshiftCurrentDay(data);

  return containsCurrentDate.reduce(
    (
      newArray: IActivityGraphStats[],
      currentModel: IActivityGraphStats,
      index: number,
      originalArray: IActivityGraphStats[]
    ) => {
      const nextModel = originalArray[index + 1];

      if (nextModel) {
        const currentDate = new Date(currentModel._id);
        const daysBetween = differenceInDays(currentDate, new Date(nextModel._id));
        const fillerDates = Array.from({ length: daysBetween - 1 }, (_value, dayIndex) => {
          return {
            _id: format(subDays(currentDate, dayIndex + 1), 'yyyy-MM-dd'),
            count: 0,
            templates: [],
            channels: [],
          };
        });

        newArray.push(currentModel, ...fillerDates);
      } else {
        newArray.push(currentModel);
      }

      return newArray;
    },
    []
  );
}

function unshiftCurrentDay(data: IActivityGraphStats[]): IActivityGraphStats[] {
  const currentDate = format(new Date(), 'yyyy-MM-dd');
  const isContainsCurrentDate = isSameDay(new Date(data[0]._id), new Date(currentDate));

  if (isContainsCurrentDate) return data;

  const clonedDate = cloneDeep(data);
  clonedDate.unshift({ _id: currentDate, count: 0, templates: [], channels: [] });

  return clonedDate;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useQuery } from '@tanstack/react-query';
import styled from '@emotion/styled';
import { BarElement, CategoryScale, Chart as ChartJS, Legend, LinearScale, Title, Tooltip } from 'chart.js';
import { Bar, getElementAtEvent } from 'react-chartjs-2';
import { useEffect, useState, useRef, useMemo } from 'react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/components/ActivityGraphGlobalStyles.tsx
Tamaño: 1652 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { css, Global } from '@emotion/react';
import { colors } from '@novu/design-system';

export function ActivityGraphGlobalStyles({ isTriggerSent, isDark }: { isTriggerSent: boolean; isDark: boolean }) {
  return <Global styles={chartStyles(isTriggerSent, isDark)} />;
}

function chartStyles(isTriggerSent: boolean, isDark: boolean) {
  return css`
    #chart-bar-styles {
      height: 175px;
      filter: ${isTriggerSent ? 'none' : 'blur(4px)'};
      pointer-events: ${isTriggerSent ? 'auto' : 'none'};
    }

    #chartjs-tooltip {
      display: flex;
      justify-content: center;
      box-shadow: 0 5px 15px rgba(38, 68, 128, 0.05);
      background: ${isDark ? colors.B20 : colors.white};
      border-radius: 7px;
      padding: 12px 15px 14px 15px;
      pointer-events: none;
      position: absolute;
      z-index: 1;

      &:after {
        display: inline-block;
        bottom: -9px;
        content: '';
        position: absolute;
        left: calc(50% - 5px);
        border-top: 10px solid ${isDark ? colors.B20 : colors.white};
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
      }
    }

    .tooltip-title {
      display: flex;
      justify-content: center;
      height: 17px;
      margin-bottom: 4px;
      color: ${colors.B60};
    }

    .tooltip-body {
      position: static;
      display: flex;
      justify-content: center;
      font-weight: 700;
      height: 17px;
      color: #ff512f;
      background: -webkit-linear-gradient(90deg, #dd2476 0%, #ff512f 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
  `;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { css, Global } from '@emotion/react';
import { colors } from '@novu/design-system';
export function ActivityGraphGlobalStyles({ isTriggerSent, isDark }: { isTriggerSent: boolean; isDark: boolean }) {
return <Global styles={chartStyles(isTriggerSent, isDark)} />;
#chart-bar-styles {
#chartjs-tooltip {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/components/ActivityItem.tsx
Tamaño: 7161 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { createStyles, CSSObject, Grid, MantineTheme, Text, UnstyledButton, useMantineTheme } from '@mantine/core';
import { JobStatusEnum } from '@novu/shared';
import { format } from 'date-fns';
import styled from '@emotion/styled';
import { useClipboard } from '@mantine/hooks';

import { CheckCircle, colors, ErrorIcon, Timer } from '@novu/design-system';
import { ActivityStep } from './ActivityStep';
import { DigestedStep } from './DigestedStep';

import { When } from '../../../components/utils/When';
import { useNotificationStatus } from '../hooks/useNotificationStatus';
import { CopyButton } from './CopyButton';

const JOB_LENGTH_UPPER_THRESHOLD = 3;

const checkJobsLength = (item) => {
  return getJobsLength(item) > JOB_LENGTH_UPPER_THRESHOLD;
};

const getJobsLength = (item) => {
  let { length } = item.jobs;
  if (item._digestedNotificationId) {
    length += 1;
  }

  return length;
};

interface IUnstyledButtonProps {
  isOld: boolean;
}

const useStyles = createStyles(
  (theme: MantineTheme, { isOld }: IUnstyledButtonProps): Record<string, CSSObject> => ({
    unstyledButton: {
      width: '100%',
      cursor: isOld ? 'default' : 'pointer',
      '&:hover': {
        '[data-copy]': {
          visibility: 'visible',
        },
      },
    },
    copyButton: {
      display: 'inline',
      visibility: 'hidden',
      position: 'relative',
      top: '2px',
      marginLeft: '8px',
    },
  })
);

export const ActivityItem = ({ item, onClick }) => {
  const status = useNotificationStatus(item);
  const theme = useMantineTheme();
  const [isOld, setIsOld] = useState<boolean>(false);
  const [digestedNode, setDigestedNode] = useState<string>('');
  const { classes } = useStyles({ isOld });
  const { copy } = useClipboard();

  useEffect(() => {
    const details = item.jobs.reduce((items: any[], job) => [...items, ...job.executionDetails], []);
    if (item._digestedNotificationId !== null) {
      setDigestedNode(item._digestedNotificationId);
    }
    setIsOld(details.length === 0);
  }, [item]);

  return (
    <UnstyledButton
      onClick={isOld ? undefined : (event) => onClick(event, item._id)}
      className={classes.unstyledButton}
    >
      <ListItem dark={theme.colorScheme === 'dark'}>
        <Grid gutter={10}>
          <Grid.Col span={3}>
            <div
              style={{
                marginBottom: '16px',
              }}
            >
              <Grid align="center">
                <When truthy={!isOld}>
                  <Grid.Col
                    span={1}
                    sx={{
                      paddingRight: '30px',
                    }}
                  >
                    <span>
                      <When truthy={status !== JobStatusEnum.COMPLETED && status !== JobStatusEnum.FAILED}>
                        <Timer width={26} height={26} />
                      </When>
                      <When truthy={status === JobStatusEnum.COMPLETED}>
                        <CheckCircle width="26" height="26" color={colors.success} />
                      </When>
                      <When truthy={status === JobStatusEnum.FAILED}>
                        <ErrorIcon width="26" height="26" color={colors.error} />
                      </When>
                    </span>
                  </Grid.Col>
                </When>
                <Grid.Col span={10}>
                  <h3
                    style={{
                      margin: '0px',
                      marginBottom: '5px',
                    }}
                    data-test-id="row-template-name"
                  >
                    {renderWorkflowName(item)}
                  </h3>
                  <When truthy={isOld}>
                    <Text>Done</Text>
                  </When>
                  <When truthy={!isOld}>
                    <When truthy={status === JobStatusEnum.COMPLETED}>
                      <Text data-test-id="status-badge-item" color={colors.success}>
                        Done
                      </Text>
                    </When>
                    <When truthy={status === JobStatusEnum.FAILED}>
                      <Text data-test-id="status-badge-item" color={colors.error}>
                        Failed
                      </Text>
                    </When>
                  </When>
                </Grid.Col>
              </Grid>
            </div>
            <div>
              <small>
                <b>Date:</b> {format(new Date(item.createdAt), 'dd/MM/yyyy HH:mm')}
              </small>
              <div data-test-id="subscriber-id">
                <small>
                  <b>Subscriber id:</b>
                  {item?.subscriber?.subscriberId ? item.subscriber.subscriberId : 'Deleted Subscriber'}
                </small>
                {item?.subscriber?.subscriberId && (
                  <CopyButton className={classes.copyButton} onCopy={() => copy(item.subscriber.subscriberId)} />
                )}
              </div>
              <div data-test-id="transaction-id">
                <small>
                  <b>Transaction id:</b> {item.transactionId}
                </small>
                <CopyButton className={classes.copyButton} onCopy={() => copy(item.transactionId)} />
              </div>
            </div>
          </Grid.Col>
          <Grid.Col span={9}>
            <Grid
              columns={checkJobsLength(item) ? 10 : 12}
              justify="end"
              align="center"
              sx={{
                margin: 0,
                height: '100%',
              }}
            >
              {item.jobs.slice(0, JOB_LENGTH_UPPER_THRESHOLD).map((job) => (
                <ActivityStep
                  isOld={isOld}
                  key={`activity-step-${job._id}`}
                  span={checkJobsLength(item) ? 3 : 4}
                  job={job}
                />
              ))}
              <When truthy={!checkJobsLength(item) && digestedNode}>
                <DigestedStep digestedId={digestedNode} onClick={onClick} />
              </When>
              <When truthy={checkJobsLength(item)}>
                <Grid.Col span={1}>
                  <Text align="center" size="xl">
                    +{getJobsLength(item) - JOB_LENGTH_UPPER_THRESHOLD}
                  </Text>
                </Grid.Col>
              </When>
            </Grid>
          </Grid.Col>
        </Grid>
      </ListItem>
    </UnstyledButton>
  );
};

const ListItem = styled.div<{ dark: boolean }>`
  padding: 20px;
  padding-left: 15px;
  margin-left: 30px;
  margin-right: 30px;
  border: 1px solid ${({ dark }) => (dark ? colors.B30 : colors.B80)};
  margin-bottom: 15px;
  border-radius: 7px;
  color: ${({ dark }) => (dark ? colors.B80 : colors.B40)};

  &:hover {
    background-color: ${({ dark }) => (dark ? colors.B20 : colors.BGLight)};
    border-radius: 7px;
  },
`;

function renderWorkflowName(item: any) {
  if (!item?.template && item?.bridge?.workflow?.workflowId) {
    return item.bridge.workflow.workflowId;
  }

  return item?.template?.name ? item.template.name : 'Deleted Template';
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect, useState } from 'react';
import { createStyles, CSSObject, Grid, MantineTheme, Text, UnstyledButton, useMantineTheme } from '@mantine/core';
import { JobStatusEnum } from '@novu/shared';
import { format } from 'date-fns';
import styled from '@emotion/styled';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/components/ActivityList.tsx
Tamaño: 2033 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { Button, LoadingOverlay, Pagination, useMantineColorScheme } from '@mantine/core';

import { colors, ChevronLeft, ChevronRight } from '@novu/design-system';
import { ActivityItem } from './ActivityItem';

export type Data = Record<string, any>;

export interface IListProps {
  data?: Data[];
  loading?: boolean;
  pagination?: any;
  onRowClick: (Event, string) => void;
}

export function ActivityList({ data: userData, pagination = false, loading = false, onRowClick }: IListProps) {
  const { pageSize, total, onPageChange, current } = pagination;
  const { colorScheme } = useMantineColorScheme();
  const data = React.useMemo(() => (userData || [])?.map((row) => ({ ...row })) as Data[], [userData]);
  const getPageCount = () => Math.ceil(total / pageSize);

  return (
    <div style={{ position: 'relative', minHeight: 500 }}>
      <LoadingOverlay
        visible={loading}
        overlayColor={colorScheme === 'dark' ? colors.B30 : colors.B98}
        loaderProps={{
          color: colors.error,
        }}
      />
      <div data-test-id="activities-table">
        {data.map((item) => {
          return <ActivityItem onClick={onRowClick} key={`activity-item-${item._id}`} item={item} />;
        })}
      </div>

      <div
        style={{
          marginTop: '10px',
          display: 'flex',
          width: '100%',
          justifyContent: 'center',
          alignItems: 'center',
          padding: '15px',
        }}
      >
        <Button.Group>
          <Button
            variant="outline"
            disabled={pagination?.current === 0 || loading}
            onClick={() => onPageChange(pagination?.current - 1)}
          >
            <ChevronLeft />
          </Button>
          <Button
            variant="outline"
            disabled={!pagination?.hasMore || loading}
            onClick={() => onPageChange(pagination?.current + 1)}
          >
            <ChevronRight />
          </Button>
        </Button.Group>
      </div>
    </div>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { Button, LoadingOverlay, Pagination, useMantineColorScheme } from '@mantine/core';
import { colors, ChevronLeft, ChevronRight } from '@novu/design-system';
import { ActivityItem } from './ActivityItem';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/components/ActivityStatistics.tsx
Tamaño: 2381 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import styled from '@emotion/styled';
import { Skeleton, useMantineTheme } from '@mantine/core';

import { colors } from '@novu/design-system';
import { getActivityStats } from '../../../api/activity';
import { formatNumber } from '../../../utils';

export function ActivityStatistics() {
  const { data: activityStats } = useQuery<{
    monthlySent: number;
    weeklySent: number;
  }>(['activityStats'], getActivityStats);
  const isDark = useMantineTheme().colorScheme === 'dark';
  const weekCount = typeof activityStats?.weeklySent === 'number' ? formatNumber(activityStats.weeklySent, 0) : null;
  const monthCount = typeof activityStats?.monthlySent === 'number' ? formatNumber(activityStats.monthlySent, 0) : null;

  return (
    <>
      <ContentWrapper>
        <StatisticsBox>
          <StyledNumber isColored={false} data-test-id="activity-stats-weekly-sent">
            <StyledNumber isColored={false}>{weekCount || <Skeleton height={30} width="40%" />}</StyledNumber>
          </StyledNumber>
          <StatsLabel isColored={false} isDark={isDark}>
            This week
          </StatsLabel>
        </StatisticsBox>
        <StatisticsBox>
          <StyledNumber isColored={false}>{monthCount || <Skeleton height={30} width="50%" />}</StyledNumber>
          <StatsLabel isColored isDark={isDark}>
            This month
          </StatsLabel>
        </StatisticsBox>
      </ContentWrapper>
    </>
  );
}

const StatisticsBox = styled.div`
  padding-right: 30px;
`;

const ContentWrapper = styled.div`
  display: flex;
  justify-content: flex-start;
  margin-bottom: 30px;
  padding-left: 30px;
`;

const StyledNumber = styled.div<{ isColored: boolean }>`
  font-size: 26px;
  font-weight: 900;
  line-height: 30px;
  text-align: left;
  margin-bottom: 2px;
  background: ${({ isColored }: { isColored: boolean }) =>
    isColored ? '-webkit-linear-gradient(90deg, #dd2476 0%, #ff512f 100%)' : colors.B60};
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
`;

const StatsLabel = styled.div<{ isColored: boolean; isDark: boolean }>`
  font-size: 14px;
  line-height: 17px;
  font-weight: 700;
  color: ${({ isColored, isDark }) => {
    const notColoredThemeTextColor = isDark ? colors.white : colors.B40;

    return !isColored ? colors.B60 : notColoredThemeTextColor;
  }};
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useQuery } from '@tanstack/react-query';
import styled from '@emotion/styled';
import { Skeleton, useMantineTheme } from '@mantine/core';
import { colors } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/components/ActivityStep.tsx
Tamaño: 4056 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Grid, Text, useMantineTheme } from '@mantine/core';
import { JobStatusEnum, StepTypeEnum } from '@novu/shared';
import capitalize from 'lodash.capitalize';
import styled from '@emotion/styled';
import {
  colors,
  shadows,
  CheckCircle,
  ErrorIcon,
  Digest,
  Mail,
  Mobile,
  Chat,
  Sms,
  InApp,
  Timer,
} from '@novu/design-system';
import { When } from '../../../components/utils/When';

const TypeIcon = ({ type }: { type: StepTypeEnum }) => {
  const theme = useMantineTheme();

  switch (type) {
    case StepTypeEnum.EMAIL:
      return <Mail width={22} height={22} />;
    case StepTypeEnum.SMS:
      return <Sms width={22} height={22} />;
    case StepTypeEnum.CHAT:
      return <Chat width={22} height={22} />;
    case StepTypeEnum.PUSH:
      return <Mobile width={22} height={22} />;
    case StepTypeEnum.IN_APP:
      return <InApp width={22} height={22} />;
    case StepTypeEnum.DIGEST:
      return (
        <div style={{ zoom: 0.65, width: 28, marginLeft: 4 }}>
          <Digest color={theme.colorScheme === 'dark' ? colors.B80 : colors.B40} />
        </div>
      );
    case StepTypeEnum.DELAY:
      return <Timer width={22} height={22} />;
    default:
      return null;
  }
};

export const ActivityStep = ({ job, span = 4, isOld }) => {
  const { status } = job;
  const theme = useMantineTheme();

  return (
    <Grid.Col
      span={span}
      sx={{
        padding: 0,
        paddingLeft: '10px',
        height: '100%',
      }}
    >
      <StepItem dark={theme.colorScheme === 'dark'} data-test-id={`${job.type}-step`}>
        <Grid
          sx={{
            margin: 0,
          }}
        >
          <When truthy={!isOld}>
            <span
              style={{
                marginRight: '8px',
              }}
            >
              <When truthy={status !== JobStatusEnum.COMPLETED && status !== JobStatusEnum.FAILED}>
                <Timer width={16} height={16} />
              </When>
              <When truthy={status === JobStatusEnum.COMPLETED}>
                <CheckCircle width="16" height="16" color={colors.success} />
              </When>
              <When truthy={status === JobStatusEnum.FAILED}>
                <ErrorIcon width="16" height="16" color={colors.error} />
              </When>
            </span>
          </When>
          <When truthy={!isOld}>
            <Header
              dark={theme.colorScheme === 'dark'}
              done={status === JobStatusEnum.COMPLETED}
              failed={status === JobStatusEnum.FAILED}
            >
              {capitalize(job.type?.replace('_', ' '))}
            </Header>
          </When>
          <When truthy={isOld}>
            <Header dark={theme.colorScheme === 'dark'} done={false} failed={false}>
              {capitalize(job.type?.replace('_', ' '))}
            </Header>
          </When>
          <span
            style={{
              position: 'absolute',
              top: '15px',
              right: '15px',
            }}
          >
            <TypeIcon type={job.type} />
          </span>
        </Grid>
        <Text
          sx={{
            color: theme.colorScheme === 'dark' ? colors.B80 : colors.B40,
            fontSize: '12px',
            position: 'absolute',
            left: '15px',
            bottom: '15px',
            right: '15px',
          }}
        >
          {job.executionDetails?.at(-1)?.detail}
        </Text>
      </StepItem>
    </Grid.Col>
  );
};

const StepItem = styled.div<{ dark: boolean }>`
  background: ${({ dark }) => (dark ? colors.B20 : colors.B98)};
  padding: 15px;
  box-shadow: ${({ dark }) => (dark ? shadows.dark : 'none')};
  border-radius: 7px;
  height: 100%;
  width: 100%;
  position: relative;
`;

const Header = styled.h4<{ done: boolean; failed; dark: boolean }>`
  color: ${({ done, failed, dark }) => {
    if (failed) {
      return colors.error;
    }

    if (done) {
      return colors.success;
    }

    return dark ? colors.white : colors.B40;
  }};
  margin-top: 0px;
  margin-bottom: 16px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Grid, Text, useMantineTheme } from '@mantine/core';
import { JobStatusEnum, StepTypeEnum } from '@novu/shared';
import capitalize from 'lodash.capitalize';
import styled from '@emotion/styled';
import {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/components/CopyButton.tsx
Tamaño: 1851 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { SVGProps, useState } from 'react';
import { createStyles, Tooltip, UnstyledButton, UnstyledButtonProps } from '@mantine/core';
import { useTimeout } from '@mantine/hooks';

export const CopyIcon = (props: SVGProps<SVGSVGElement>) => {
  return (
    <svg {...props} xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none">
      <path
        d="M2.80001 8.80004H2.20001C1.88174 8.80004 1.57652 8.67361 1.35147 8.44856C1.12643 8.22352 1 7.91829 1 7.60003V2.20001C1 1.88174 1.12643 1.57652 1.35147 1.35147C1.57652 1.12643 1.88174 1 2.20001 1H7.60003C7.91829 1 8.22352 1.12643 8.44856 1.35147C8.67361 1.57652 8.80004 1.88174 8.80004 2.20001V2.80001M6.39979 5.19996H11.7998C12.4626 5.19996 12.9998 5.73722 12.9998 6.39997V11.8C12.9998 12.4627 12.4626 13 11.7998 13H6.39979C5.73705 13 5.19979 12.4627 5.19979 11.8V6.39997C5.19979 5.73722 5.73705 5.19996 6.39979 5.19996Z"
        stroke="#828299"
      />
    </svg>
  );
};

export type CopyProps = UnstyledButtonProps & {
  onCopy: () => void;
};

const useCopyButtonStyles = createStyles({
  root: {
    svg: {
      width: '12px',
      height: '12px',
    },
  },
});

export const CopyButton = ({ onCopy, className, ...props }: CopyProps) => {
  const [copied, setCopied] = useState(false);
  const { start: closeTooltip } = useTimeout(() => setCopied(false), 1000);
  const { classes } = useCopyButtonStyles();

  return (
    <Tooltip label="Copied" opened={copied} closeDelay={500}>
      <UnstyledButton
        data-copy
        className={`${className} ${classes.root}`}
        {...props}
        onClick={(event) => {
          event.preventDefault();
          event.stopPropagation();

          onCopy();
          setCopied(true);
          closeTooltip();
        }}
      >
        <CopyIcon />
      </UnstyledButton>
    </Tooltip>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { SVGProps, useState } from 'react';
import { createStyles, Tooltip, UnstyledButton, UnstyledButtonProps } from '@mantine/core';
import { useTimeout } from '@mantine/hooks';
export const CopyIcon = (props: SVGProps<SVGSVGElement>) => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/components/DigestedStep.tsx
Tamaño: 842 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Center, Grid, UnstyledButton } from '@mantine/core';
import { colors, Text } from '@novu/design-system';

export const DigestedStep = ({ digestedId, span = 4, onClick }) => {
  return (
    <Grid.Col
      span={span}
      sx={{
        padding: 0,
        paddingLeft: '10px',
        height: '100%',
      }}
    >
      <Center mt={20}>
        <Text align="center" mr={10} size="md" color={colors.B60}>
          Remaining execution has been merged to an active Digest.
        </Text>
      </Center>
      <Center mt={10}>
        <UnstyledButton
          component="span"
          onClick={(event) => {
            event.stopPropagation();
            onClick(event, digestedId);
          }}
        >
          <Text gradient>View Digest Execution</Text>
        </UnstyledButton>
      </Center>
    </Grid.Col>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Center, Grid, UnstyledButton } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
export const DigestedStep = ({ digestedId, span = 4, onClick }) => {
return (
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/components/MessageContainer.tsx
Tamaño: 1394 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { colors, Text } from '@novu/design-system';

export function MessageContainer({ isDark }: { isDark: boolean }) {
  return (
    <>
      <Wrapper isDark={isDark}>
        <StyledTitle>YOUR ACTIVITY FEED</StyledTitle>
        <StyledText>Here you will see the activity graph once you send some events</StyledText>
      </Wrapper>
    </>
  );
}

const Wrapper = styled.div<{ isDark: boolean }>`
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  position: absolute;
  padding: 12px 15px 14px;
  height: 64px;
  background: ${({ isDark }) => {
    return isDark ? colors.B20 : colors.white;
  }};
  box-shadow: 0 5px 15px rgba(38, 68, 128, 0.05);

  border-radius: 7px;
  z-index: 2;

  &:after {
    display: inline-block;
    bottom: -9px;
    content: '';
    position: absolute;
    left: calc(50% - 5px);
    border-top: 10px solid
      ${({ isDark }) => {
        return isDark ? colors.B20 : colors.white;
      }};
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
  }
`;

const StyledTitle = styled(Text)`
  background: -webkit-linear-gradient(90deg, #dd2476 0%, #ff512f 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-size: 11px;
  margin: 12px 0 8px 0;
`;

const StyledText = styled(Text)`
  margin: 0 15px 14px 15px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { colors, Text } from '@novu/design-system';
export function MessageContainer({ isDark }: { isDark: boolean }) {
return (
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/components/ProviderImage.tsx
Tamaño: 735 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMantineColorScheme } from '@mantine/core';
import styled from '@emotion/styled';
import { providers } from '@novu/shared';
import { CONTEXT_PATH } from '../../../config';

export const ProviderImage = ({ providerId }: { providerId: string | undefined }) => {
  const { colorScheme } = useMantineColorScheme();
  if (!providerId) {
    return null;
  }
  const provider: any = providers.find((item: any) => item.id === providerId);

  if (!provider) {
    return null;
  }

  return (
    <Logo
      src={`${CONTEXT_PATH}/static/images/providers/${colorScheme}/${provider.logoFileName[`${colorScheme}`]}`}
      alt={provider.displayName}
    />
  );
};

const Logo = styled.img`
  max-width: 140px;
  max-height: 20px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMantineColorScheme } from '@mantine/core';
import styled from '@emotion/styled';
import { providers } from '@novu/shared';
import { CONTEXT_PATH } from '../../../config';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/consts/index.ts
Tamaño: 24 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './mock';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/consts/mock/activity-graph-stats.mock.ts
Tamaño: 2815 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { IActivityGraphStats } from '../../interfaces';

export const activityGraphStatsMock: IActivityGraphStats[] = [
  {
    _id: '2022-03-30',
    count: 122,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-29',
    count: 121,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-28',
    count: 103,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-27',
    count: 142,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-26',
    count: 97,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-25',
    count: 66,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-24',
    count: 85,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-23',
    count: 43,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-22',
    count: 12,
    templates: [],
    channels: [],
  },

  {
    _id: '2022-03-21',
    count: 23,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-20',
    count: 54,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-19',
    count: 112,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-18',
    count: 23,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-17',
    count: 64,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-16',
    count: 23,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-15',
    count: 32,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-14',
    count: 76,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-13',
    count: 66,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-12',
    count: 25,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-11',
    count: 43,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-10',
    count: 11,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-09',
    count: 32,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-08',
    count: 50,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-07',
    count: 8,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-06',
    count: 10,
    templates: [],
    channels: [],
  },

  {
    _id: '2022-03-05',
    count: 14,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-04',
    count: 17,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-03',
    count: 12,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-02',
    count: 33,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-03-01',
    count: 22,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-02-27',
    count: 1,
    templates: [],
    channels: [],
  },
  {
    _id: '2022-02-26',
    count: 4,
    templates: [],
    channels: [],
  },
];


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/consts/mock/index.ts
Tamaño: 45 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './activity-graph-stats.mock';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/hooks/useNotificationStatus.ts
Tamaño: 738 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { JobStatusEnum } from '@novu/shared';
import { useEffect, useState } from 'react';

export const useNotificationStatus = (notification: any): JobStatusEnum => {
  const [status, setStatus] = useState(JobStatusEnum.PENDING);

  useEffect(() => {
    const jobs = notification?.jobs || [];
    const result = jobs
      ?.map((job) => {
        return job.status;
      })
      .reduce((prev: JobStatusEnum, item: JobStatusEnum) => {
        if (prev === JobStatusEnum.FAILED) {
          return prev;
        }
        if ([JobStatusEnum.PENDING, JobStatusEnum.DELAYED].includes(prev)) {
          return prev;
        }

        return item;
      }, undefined);
    setStatus(result);
  }, [notification]);

  return status;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useNotificationStatus(notification: any): JobStatusEnum)
 - result(jobs
      ?.map((job))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/interfaces/index.ts
Tamaño: 522 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { ScriptableContext } from 'chart.js';
import { ChannelTypeEnum } from '@novu/shared';

export interface IChartData {
  datasets: IDataSet[];
  labels: string[][];
}

export interface IDataSet {
  data: Array<IActivityGraphStats & { dateLabel: string }>;
  backgroundColor: string;
  hoverBackgroundColor: (context: ScriptableContext<'bar'>) => CanvasGradient;
  borderRadius: number;
}

export interface IActivityGraphStats {
  _id: string;
  count: number;
  templates: string[];
  channels: ChannelTypeEnum[];
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  interface
- export  interface
- export  interface

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/services/index.ts
Tamaño: 29 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './chart-bar';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/services/chart-bar/data.service.ts
Tamaño: 2067 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import cloneDeep from 'lodash.clonedeep';
import { ScriptableContext } from 'chart.js';
import { format, subDays } from 'date-fns';
import { colors } from '@novu/design-system';
import { IActivityGraphStats, IChartData } from '../../interfaces';
import { activityGraphStatsMock } from '../../consts';

export function getChartData(data: IActivityGraphStats[] | undefined, isDark: boolean): IChartData {
  if (!data || data?.length === 0) {
    return buildChartDataContainer(activityGraphStatsMock, isDark);
  }

  if (data.length < 7) {
    return buildChartDataContainer(fillWeekData(data), isDark);
  }

  return buildChartDataContainer(data, isDark);
}

function buildChartDataContainer(data: IActivityGraphStats[], isDark: boolean): any {
  return {
    datasets: [
      {
        backgroundColor: isDark ? colors.B20 : colors.BGLight,
        hoverBackgroundColor: createGradientColor(),
        data: buildChartData(data),
        borderRadius: 7,
        parsing: {
          xAxisKey: 'dateLabel',
          yAxisKey: 'count',
        },
      },
    ],
  };
}

function fillWeekData(data: IActivityGraphStats[]) {
  const fullWeekData = cloneDeep(data);
  for (let i = data.length - 1; i < 6; i += 1) {
    const earliestDate = fullWeekData[i]._id;
    const newDate = format(subDays(new Date(earliestDate), 1), 'yyyy-MM-dd');

    fullWeekData.push({ _id: newDate, count: 0, templates: [], channels: [] });
  }

  return fullWeekData;
}

function buildChartData(data: IActivityGraphStats[]): Array<IActivityGraphStats & { dateLabel: string }> {
  return data.map((item) => {
    const titleDate = new Date(item._id);

    return {
      ...item,
      dateLabel: `${format(titleDate, 'EEE')} ${format(titleDate, 'dd')}/${format(titleDate, 'MM')}`,
    };
  });
}

function createGradientColor() {
  return (context: ScriptableContext<'bar'>) => {
    const { ctx } = context.chart;
    const gradient = ctx.createLinearGradient(0, 0, 0, 200);

    gradient.addColorStop(0, '#DD2476');
    gradient.addColorStop(1, '#FF512F');

    return gradient;
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - getChartData(data: IActivityGraphStats[] | undefined, isDark: boolean)
 - buildChartDataContainer(data: IActivityGraphStats[], isDark: boolean)
 - fillWeekData(data: IActivityGraphStats[])
 - buildChartData(data: IActivityGraphStats[])
 - createGradientColor()
Asignaciones con arrow functions encontradas (posibles funciones):
 - newDate(format(subDays(new Date(earliestDate), 1), 'yyyy-MM-dd');

    fullWeekData.push({ _id: newDate, cou...)
 - titleDate(new Date(item._id);

    return {
      ...item,
      dateLabel: `${format(titleDate, 'EEE')} ${for...)
Declaraciones 'export' encontradas:
- export function getChartData

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/services/chart-bar/index.ts
Tamaño: 66 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './option.service';
export * from './data.service';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/activities/services/chart-bar/option.service.ts
Tamaño: 4658 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { format, parse } from 'date-fns';

export function getOptions(this: any, isTriggerSent: boolean, daysCount: number) {
  return {
    maintainAspectRatio: false,
    responsive: true,
    height: 300,

    legend: {
      display: false,
    },

    onHover: (event, el) => {
      if (el.length > 0) {
        event.native.target.style.cursor = 'pointer';
      } else {
        event.native.target.style.cursor = 'default';
      }
    },

    scales: getScalesConfiguration.call(this, daysCount),

    plugins: {
      tooltip: getTooltipConfiguration(),
      legend: hideTitle(),
    },
  };
}

function hideTitle() {
  return {
    display: false,
  };
}

function getScalesConfiguration(daysCount: number) {
  return {
    x: {
      reverse: true,
      grid: {
        display: false,
      },
      ticks: {
        callback(value, index) {
          if (daysCount < 8) {
            return showLabel.call(this, value);
          }

          return hideEverySecondTickLabel.call(this, index, value);
        },
      },
    },
    y: {
      display: false,
    },
  };
}

function hideEverySecondTickLabel(this: any, index, val) {
  return index % 2 === 0 ? this.getLabelForValue(val) : '';
}

function showLabel(this: any, value) {
  return this.getLabelForValue(value);
}

function getTooltipConfiguration() {
  return {
    legend: {
      display: false,
    },

    // Disable the on-canvas tooltip
    enabled: false,

    external: (context) => {
      // Tooltip Element
      let tooltipEl = document.getElementById('chartjs-tooltip');

      // Create element on first render
      if (!tooltipEl) {
        tooltipEl = document.createElement('div');
        tooltipEl.id = 'chartjs-tooltip';
        tooltipEl.innerHTML = '<table></table>';
        document.body.appendChild(tooltipEl);
        tooltipEl.style.position = 'absolute';
      }

      // Hide if no tooltip
      const tooltipModel = context.tooltip;
      if (tooltipModel.opacity === 0) {
        tooltipEl.style.opacity = '0';

        return;
      }

      function getBody(bodyItem: string[]): string[] {
        return bodyItem;
      }

      // Set Text
      if (tooltipModel.body) {
        const titleLines = tooltipModel.title || [];
        const bodyLines = tooltipModel.body.map(
          (bodyItem: { before: string[]; after: string[]; lines: string[] }): string[] => {
            return getBody(bodyItem.lines);
          }
        );

        let innerHtml = '';

        innerHtml = buildTitle(innerHtml, titleLines);

        innerHtml = buildBody(innerHtml, bodyLines);

        updateTableInnerHtml(tooltipEl, innerHtml);
      }

      updateToolTipStyles(context, tooltipEl, tooltipModel);
    },
  };
}

function buildTitle(html: string, titleLines: string[]) {
  let resHtml = html;

  resHtml += '<div class="tooltip-title">';

  titleLines.forEach(function (title) {
    const displayTitle = buildDisplayTitle(title);

    resHtml += `<span >${displayTitle}</th></tr>`;
  });
  resHtml += '</div>';

  return resHtml;
}

function buildBody(html: string, bodyLines) {
  let resHtml = html;

  resHtml += '<div class="tooltip-body">';
  bodyLines.forEach(function (body) {
    const bodyText: string | string[] = getBodyText(body) || '';

    resHtml += `<span >${bodyText} Total</span>`;
  });
  resHtml += '</div>';

  return resHtml;
}

function updateTableInnerHtml(tooltipEl: HTMLElement, innerHtml: string) {
  const tableRoot = tooltipEl.querySelector('table');

  if (tableRoot) {
    tableRoot.innerHTML = innerHtml;
  }
}

function updateToolTipStyles(context, tooltipEl: HTMLElement, tooltipModel) {
  const position = context.chart.canvas.getBoundingClientRect();

  tooltipEl.style.opacity = '1';
  tooltipEl.style.left = `${position.left + window.scrollX + tooltipModel.caretX - tooltipModel.width - 30}px`;
  tooltipEl.style.top = `${position.top + window.scrollY + tooltipModel.caretY - tooltipModel.height - 30}px`;
}

function getBodyText(body: string[]): string | string[] {
  const total = body.find((bodyItem) => bodyItem.toLowerCase().includes('total'));
  if (total) {
    const count = total.split(':')[1];

    return `${count} Total`;
  }

  return body;
}

function buildDisplayTitle(title) {
  const dayMonth = title.split(' ')[1].split('/');
  const dateString = `${normalizeDateNumber(dayMonth[1])}-${normalizeDateNumber(dayMonth[0])}`;
  const data = parse(dateString, 'MM-dd', new Date());

  return `${format(data, 'EEEE')}, ${format(data, 'LLLL')} ${format(data, 'do')}`;
}

export function normalizeDateNumber(num: string): string {
  if (num.length < 2) {
    return `0${num}`;
  }

  return num;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - getOptions(this: any, isTriggerSent: boolean, daysCount: number)
 - hideTitle()
 - getScalesConfiguration(daysCount: number)
 - hideEverySecondTickLabel(this: any, index, val)
 - showLabel(this: any, value)
 - getTooltipConfiguration()
 - getBody(bodyItem: string[])
 - buildTitle(html: string, titleLines: string[])
 - buildBody(html: string, bodyLines)
 - updateTableInnerHtml(tooltipEl: HTMLElement, innerHtml: string)
 - updateToolTipStyles(context, tooltipEl: HTMLElement, tooltipModel)
 - getBodyText(body: string[])
 - buildDisplayTitle(title)
 - normalizeDateNumber(num: string)
Asignaciones con arrow functions encontradas (posibles funciones):
 - bodyLines(tooltipModel.body.map(
          (bodyItem: { before: string[]; after: string[]; lines: string[] }):...)
 - total(body.find((bodyItem))
Declaraciones 'export' encontradas:
- export function getOptions
- export function normalizeDateNumber

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/InvitationPage.tsx
Tamaño: 4267 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useParams, Link, useNavigate } from 'react-router-dom';
import { useQuery, useQueryClient } from '@tanstack/react-query';
import { useEffect } from 'react';
import { Center, LoadingOverlay } from '@mantine/core';
import { IGetInviteResponseDto } from '@novu/shared';

import { colors, Text, Button, PageMeta } from '@novu/design-system';
import { getInviteTokenData } from '../../api/invitation';
import AuthLayout from '../../components/layout/components/AuthLayout';
import { SignUpForm } from './components/SignUpForm';
import { useAuth } from '../../hooks/useAuth';
import { ROUTES } from '../../constants/routes';
import { useAcceptInvite } from './components/useAcceptInvite';
import { LoginForm } from './components/LoginForm';

export default function InvitationPage() {
  const queryClient = useQueryClient();
  const { currentUser, logout } = useAuth();
  const { token: invitationToken } = useParams<{ token: string }>();
  const { isLoading: isAcceptingInvite, acceptInvite } = useAcceptInvite();
  const navigate = useNavigate();
  const { data, isLoading } = useQuery<IGetInviteResponseDto, IGetInviteResponseDto>(
    ['getInviteTokenData'],
    () => getInviteTokenData(invitationToken || ''),
    {
      enabled: !!invitationToken,
      refetchOnWindowFocus: false,
    }
  );
  const inviterFirstName = data?.inviter?.firstName || '';
  const organizationName = data?.organization.name || '';
  const existingUserId = data?._userId;
  const isLoggedInAsInvitedUser = !!(existingUserId && currentUser && currentUser._id === existingUserId);
  const Form = existingUserId ? LoginForm : SignUpForm;

  useEffect(() => {
    (async () => {
      if (invitationToken && isLoggedInAsInvitedUser) {
        await acceptInvite(invitationToken);
        navigate(ROUTES.WORKFLOWS);
      }
    })();
  }, [acceptInvite, invitationToken, isLoggedInAsInvitedUser]);

  useEffect(() => {
    return () => {
      queryClient.removeQueries(['getInviteTokenData']);
    };
  }, [queryClient]);

  if (isLoading) {
    return (
      <LoadingOverlay
        visible
        overlayColor={colors.B30}
        loaderProps={{
          color: colors.error,
        }}
      />
    );
  }

  /*
   * TODO: The moment the invited user signs-in or up, currentUser is set and the UI flickers to the Active Session screen,
   * before the next rendering cycle that will actually redirect the next page. We will tackle this in a separate PR.
   */
  if (currentUser) {
    const title = 'Accept invite';

    return (
      <AuthLayout title={title}>
        <PageMeta title={title} />
        <Center inline mb={40} mt={20}>
          <Text size="lg" color={colors.B60}>
            {isLoggedInAsInvitedUser && isAcceptingInvite ? (
              <p>Accepting invitation...</p>
            ) : (
              <p>
                The invitation is not valid for user with email ${currentUser.email}. Please log in with the right user.
              </p>
            )}
          </Text>
        </Center>
        <Button data-test-id="success-screen-reset" onClick={() => logout()} inherit>
          Log out
        </Button>
        <Center mt={20}>
          <Text mr={10} size="md" color={colors.B60}>
            Go to
          </Text>
          <Link to="/quickstart">
            <Text>Dashboard</Text>
          </Link>
        </Center>
      </AuthLayout>
    );
  }

  const title = existingUserId ? 'Sign In & Accept Invite' : 'Get Started';

  return (
    <AuthLayout title={title}>
      <PageMeta title={title} />
      inviterFirstName && organizationName && (
      <Center inline mb={60} mt={20} data-test-id="invitation-description">
        <Text size="lg" mr={4} color={colors.B60}>
          {"You've been invited by "}
        </Text>
        <Text size="lg" weight="bold" mr={4}>
          {inviterFirstName[0].toUpperCase() + inviterFirstName.slice(1)}
        </Text>
        <Text size="lg" mr={4} color={colors.B60}>
          {' to join '}
        </Text>
        <Text size="lg" weight="bold">
          {organizationName}
        </Text>
        <Text size="lg" color={colors.B60}>
          .
        </Text>
      </Center>
      )
      <Form email={data?.email} invitationToken={invitationToken} />
    </AuthLayout>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useParams, Link, useNavigate } from 'react-router-dom';
import { useQuery, useQueryClient } from '@tanstack/react-query';
import { useEffect } from 'react';
import { Center, LoadingOverlay } from '@mantine/core';
import { IGetInviteResponseDto } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/LoginPage.tsx
Tamaño: 371 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { colors, Text, PageMeta } from '@novu/design-system';
import { LoginForm } from './components/LoginForm';
import AuthLayout from '../../components/layout/components/AuthLayout';

const title = 'Sign In';

export default function LoginPage() {
  return (
    <AuthLayout title={title}>
      <PageMeta title={title} />
      <LoginForm />
    </AuthLayout>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { colors, Text, PageMeta } from '@novu/design-system';
import { LoginForm } from './components/LoginForm';
import AuthLayout from '../../components/layout/components/AuthLayout';
const title = 'Sign In';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/PasswordResetPage.tsx
Tamaño: 1348 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useParams, useNavigate } from 'react-router-dom';
import { useState } from 'react';
import { Button, colors, Text, PageMeta } from '@novu/design-system';
import AuthLayout from '../../components/layout/components/AuthLayout';
import { PasswordResetRequestForm } from './components/PasswordResetRequestForm';
import { PasswordResetForm } from './components/PasswordResetForm';
import { ROUTES } from '../../constants/routes';

const title = 'Reset password';

export function PasswordResetPage() {
  const navigate = useNavigate();
  const { token } = useParams<{ token: string }>();
  const [showSentSuccess, setShowSentSuccess] = useState<boolean>();

  if (showSentSuccess) {
    return (
      <AuthLayout title="Reset Sent!">
        <PageMeta title={title} />
        <Text size="lg" color={colors.B60} mb={60} mt={20}>
          We've sent a password reset link to the account associated with your email
        </Text>
        <Button data-test-id="success-screen-reset" onClick={() => navigate(ROUTES.AUTH_LOGIN)} inherit>
          Go Back
        </Button>
      </AuthLayout>
    );
  }

  return (
    <AuthLayout title={title}>
      <PageMeta title={title} />
      {!token && <PasswordResetRequestForm onSent={() => setShowSentSuccess(true)} />}
      {token && <PasswordResetForm token={token} />}
    </AuthLayout>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useParams, useNavigate } from 'react-router-dom';
import { useState } from 'react';
import { Button, colors, Text, PageMeta } from '@novu/design-system';
import AuthLayout from '../../components/layout/components/AuthLayout';
import { PasswordResetRequestForm } from './components/PasswordResetRequestForm';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/SignUpPage.tsx
Tamaño: 361 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { PageMeta } from '@novu/design-system';
import { SignUpForm } from './components/SignUpForm';
import AuthLayout from '../../components/layout/components/AuthLayout';

const title = 'Sign up';

export default function SignUpPage() {
  return (
    <AuthLayout title={title}>
      <PageMeta title={title} />
      <SignUpForm />
    </AuthLayout>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { PageMeta } from '@novu/design-system';
import { SignUpForm } from './components/SignUpForm';
import AuthLayout from '../../components/layout/components/AuthLayout';
const title = 'Sign up';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/components/LoginForm.tsx
Tamaño: 5879 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { Link, useNavigate, useLocation, useSearchParams } from 'react-router-dom';
import { useMutation } from '@tanstack/react-query';
import { useForm } from 'react-hook-form';
import { captureException } from '@sentry/react';
import { Center } from '@mantine/core';
import { PasswordInput, Button, colors, Input, Text } from '@novu/design-system';
import type { IResponseError } from '@novu/shared';
import { useAuth, useRedirectURL } from '../../../hooks';
import { useSegment } from '../../../components/providers/SegmentProvider';
import { api } from '../../../api/api.client';
import { useAcceptInvite } from './useAcceptInvite';
import { ROUTES } from '../../../constants/routes';
import { OAuth } from './OAuth';
import { parseServerErrorMessage } from '../../../utils/errors';

type LoginFormProps = {
  invitationToken?: string;
  email?: string;
};

export interface LocationState {
  redirectTo?: {
    pathname?: string;
  };
}

export function LoginForm({ email, invitationToken }: LoginFormProps) {
  const segment = useSegment();

  const { setRedirectURL } = useRedirectURL();
  useEffect(() => setRedirectURL(), []);

  const { login, currentUser, currentOrganization } = useAuth();
  const [params] = useSearchParams();
  const tokenInQuery = params.get('token');
  const source = params.get('source');
  const sourceWidget = params.get('source_widget');
  // TODO: Deprecate the legacy cameCased format in search param
  const invitationTokenFromGithub = params.get('invitationToken') || params.get('invitation_token') || '';

  const { isLoading: isLoadingAcceptInvite, acceptInvite } = useAcceptInvite();
  const navigate = useNavigate();
  const location = useLocation();
  const state = location.state as LocationState;
  const { isLoading, mutateAsync, error } = useMutation<
    { token: string },
    IResponseError,
    {
      email: string;
      password: string;
    }
  >((data) => api.post('/v1/auth/login', data));

  const handleLoginInUseEffect = async () => {
    // if currentUser is true, it means user exists, then while accepting invitation, InvitationPage will handle accept this case
    if (currentUser) {
      return;
    }

    // if token from OAuth or CLI is not present
    if (!tokenInQuery) {
      return;
    }

    // handle github login after invitation
    if (invitationTokenFromGithub) {
      await login(tokenInQuery);
      const updatedToken = await acceptInvite(invitationTokenFromGithub);

      if (updatedToken) {
        await login(updatedToken, ROUTES.WORKFLOWS);

        return;
      }
    }

    if (currentOrganization) {
      navigate(ROUTES.WORKFLOWS);
    } else {
      await login(tokenInQuery, ROUTES.WORKFLOWS);
    }

    if (source === 'cli') {
      segment.track('Dashboard Visit', {
        widget: sourceWidget || 'unknown',
        source: 'cli',
      });
      await login(tokenInQuery, ROUTES.WORKFLOWS);

      return;
    }

    await login(tokenInQuery, ROUTES.WORKFLOWS);
  };

  useEffect(() => {
    handleLoginInUseEffect();
  }, [login, currentUser]);

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm({
    defaultValues: {
      email: email || '',
      password: '',
    },
  });

  const onLogin = async (data) => {
    const itemData = {
      email: data.email,
      password: data.password,
    };

    try {
      const response = await mutateAsync(itemData);
      const { token } = response as any;
      await login(token);

      if (invitationToken) {
        const updatedToken = await acceptInvite(invitationToken);
        if (updatedToken) {
          await login(updatedToken);
        }
      }

      navigate(state?.redirectTo?.pathname || ROUTES.WORKFLOWS);
    } catch (e: any) {
      if (e.statusCode !== 400) {
        captureException(e);
      }
    }
  };

  const emailClientError = errors.email?.message;
  let emailServerError = parseServerErrorMessage(error);

  // TODO: Use a more human-friendly message in the IsEmail validator and remove this patch
  if (emailServerError === 'email must be an email') {
    emailServerError = 'Please provide a valid email address';
  }

  return (
    <>
      <OAuth invitationToken={invitationToken} isLoginPage={true} />
      <form noValidate onSubmit={handleSubmit(onLogin)}>
        <Input
          error={emailClientError || emailServerError}
          {...register('email', {
            required: 'Please provide an email address',
            pattern: { value: /^\S+@\S+\.\S+$/, message: 'Please provide a valid email address' },
          })}
          required
          label="Email"
          type="email"
          placeholder="Type your email address..."
          disabled={!!invitationToken}
          data-test-id="email"
          mt={5}
        />
        <PasswordInput
          error={errors.password?.message}
          mt={20}
          {...register('password', {
            required: 'Please input a password',
          })}
          required
          label="Password"
          placeholder="Type your password..."
          data-test-id="password"
        />

        <Link to={ROUTES.AUTH_RESET_REQUEST}>
          <Text my={30} gradient align="center">
            Forgot Your Password?
          </Text>
        </Link>

        <Button
          submit
          mt={60}
          inherit
          loading={isLoading || isLoadingAcceptInvite}
          disabled={isLoadingAcceptInvite}
          data-test-id="submit-btn"
        >
          {invitationToken ? 'Sign In & Accept' : 'Sign In'}
        </Button>
        <Center mt={20}>
          <Text mr={10} size="md" color={colors.B60}>
            Don't have an account yet?
          </Text>
          <Link to={ROUTES.AUTH_SIGNUP}>
            <Text gradient>Sign Up</Text>
          </Link>
        </Center>
      </form>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect } from 'react';
import { Link, useNavigate, useLocation, useSearchParams } from 'react-router-dom';
import { useMutation } from '@tanstack/react-query';
import { useForm } from 'react-hook-form';
import { captureException } from '@sentry/react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/components/OAuth.tsx
Tamaño: 1594 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Divider, Button as MantineButton } from '@mantine/core';
import styled from '@emotion/styled';

import { colors, GitHub, Text } from '@novu/design-system';

import { PropsWithChildren } from 'react';
import { When } from '../../../components/utils/When';
import { IS_SELF_HOSTED } from '../../../config';
import { buildGithubLink } from './gitHubUtils';

export function OAuth({
  invitationToken,
  isLoginPage = false,
}: {
  invitationToken?: string | undefined;
  isLoginPage?: boolean;
}) {
  const githubLink = buildGithubLink({ invitationToken, isLoginPage });

  return (
    <When truthy={!IS_SELF_HOSTED}>
      <>
        <Container>
          <OAuthButton
            component="a"
            href={githubLink}
            my={30}
            variant="white"
            fullWidth
            radius="md"
            leftIcon={<GitHub />}
            sx={{ color: colors.B40, fontSize: '16px', fontWeight: 700, height: '50px', marginRight: 10 }}
            data-test-id="github-button"
          >
            Sign In with GitHub
          </OAuthButton>
        </Container>
        <Divider label={<Text color={colors.B40}>Or</Text>} color={colors.B30} labelPosition="center" my="md" />
      </>
    </When>
  );
}

const Container = styled.div`
  display: flex;
  justify-content: space-between;
`;

const OAuthButton = styled(MantineButton)<
  PropsWithChildren<{
    component: 'a';
    my: number;
    href: string;
    variant: 'white';
    fullWidth: boolean;
    radius: 'md';
    leftIcon: any;
    sx: any;
  }>
>`
  :hover {
    color: ${colors.B40};
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Divider, Button as MantineButton } from '@mantine/core';
import styled from '@emotion/styled';
import { colors, GitHub, Text } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/components/PasswordRequirementPopover.tsx
Tamaño: 2658 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState, useMemo, PropsWithChildren } from 'react';
import { Text, Box, createStyles, Popover } from '@mantine/core';
import { Control, useWatch } from 'react-hook-form';
import { Check, Close, colors } from '@novu/design-system';
import { PasswordStrengthBar } from './PasswordStrengthBar';

const usePopoverStyles = createStyles(({ colorScheme }) => ({
  dropdown: {
    padding: '12px 20px 14px 15px',
    backgroundColor: colorScheme === 'dark' ? colors.B20 : colors.white,
    position: 'absolute',
    color: colorScheme === 'dark' ? colors.white : colors.B40,
    border: 'none',
    marginTop: '1px',
  },
  arrow: {
    backgroundColor: colorScheme === 'dark' ? colors.B20 : colors.white,
    height: '7px',
    border: 'none',
    margin: '0px',
  },
}));

function PasswordRequirement({ meets, label }: { meets: boolean; label: string }) {
  return (
    <Text color={meets ? 'teal' : 'red'} sx={{ display: 'flex', alignItems: 'center' }} mt={7} size="sm">
      {meets ? <Check /> : <Close />} <Box ml={10}>{label}</Box>
    </Text>
  );
}

const requirements = [
  { re: /^.{8,64}$/, label: 'Minimum 8 characters, Maximum 64 characters' },
  { re: /[0-9]/, label: 'Includes number' },
  { re: /[a-z]/, label: 'Includes lowercase letter' },
  { re: /[A-Z]/, label: 'Includes uppercase letter' },
  { re: /[#?!@$%^&*()-]/, label: 'Includes special symbol #?!@$%^&*()-' },
];

interface IPasswordRequirementPopoverProps {
  control: Control<any>;
  passwordInputName?: string;
}

export function PasswordRequirementPopover({
  control,
  children,
  passwordInputName = 'password',
}: PropsWithChildren<IPasswordRequirementPopoverProps>) {
  const [popoverOpened, setPopoverOpened] = useState(false);
  const password = useWatch({
    control,
    name: passwordInputName,
  });

  const { classes } = usePopoverStyles();
  const checks = useMemo(
    () =>
      requirements.map((requirement, index) => (
        <PasswordRequirement key={index} label={requirement.label} meets={requirement.re.test(password)} />
      )),
    [password]
  );

  return (
    <div>
      <Popover
        opened={popoverOpened}
        position="bottom"
        width="target"
        transition="pop"
        classNames={classes}
        middlewares={{ flip: false, shift: false }}
      >
        <Popover.Target>
          <div onFocusCapture={() => setPopoverOpened(true)} onBlurCapture={() => setPopoverOpened(false)}>
            {children}
          </div>
        </Popover.Target>
        <Popover.Dropdown>
          <PasswordStrengthBar password={password} />
          {checks}
        </Popover.Dropdown>
      </Popover>
    </div>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState, useMemo, PropsWithChildren } from 'react';
import { Text, Box, createStyles, Popover } from '@mantine/core';
import { Control, useWatch } from 'react-hook-form';
import { Check, Close, colors } from '@novu/design-system';
import { PasswordStrengthBar } from './PasswordStrengthBar';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/components/PasswordResetForm.tsx
Tamaño: 4200 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useNavigate } from 'react-router-dom';
import { useMutation } from '@tanstack/react-query';
import { useForm } from 'react-hook-form';
import { captureException } from '@sentry/react';
import { showNotification } from '@mantine/notifications';
import { passwordConstraints } from '@novu/shared';
import type { IResponseError } from '@novu/shared';
import { PasswordInput, Button, colors, Text } from '@novu/design-system';
import { useAuth } from '../../../hooks/useAuth';
import { api } from '../../../api/api.client';
import { PasswordRequirementPopover } from './PasswordRequirementPopover';
import { ROUTES } from '../../../constants/routes';

type Props = {
  token: string;
};

export function PasswordResetForm({ token }: Props) {
  const { login } = useAuth();

  const navigate = useNavigate();
  const { isLoading, mutateAsync, isError, error } = useMutation<
    { token: string },
    IResponseError,
    {
      password: string;
      token: string;
    }
  >((data) => api.post(`/v1/auth/reset`, data));

  const onForgotPassword = async (data) => {
    if (data.password !== data.passwordRepeat) {
      return showNotification({
        message: 'Passwords do not match',
        color: 'red',
      });
    }

    const itemData = {
      password: data.password,
      token,
    };

    try {
      const response = await mutateAsync(itemData);

      login(response.token);

      showNotification({
        message: 'Password was changed successfully',
        color: 'green',
      });
      navigate(ROUTES.WORKFLOWS);
    } catch (e: any) {
      if (e.statusCode !== 400) {
        captureException(e);
      }
    }

    return true;
  };

  const {
    register,
    handleSubmit,
    control,
    formState: { errors },
  } = useForm({
    defaultValues: {
      password: '',
      passwordRepeat: '',
    },
  });

  return (
    <>
      <form noValidate name="reset-form" onSubmit={handleSubmit(onForgotPassword)}>
        <PasswordRequirementPopover control={control}>
          <PasswordInput
            error={errors.password?.message as string}
            mt={20}
            {...register('password', {
              required: 'Please input your password',
              minLength: { value: passwordConstraints.minLength, message: 'Minimum 8 characters' },
              maxLength: {
                value: passwordConstraints.maxLength,
                message: 'Maximum 64 characters',
              },
              pattern: {
                value: passwordConstraints.pattern,
                message:
                  'The password must contain minimum 8 and maximum 64 characters, at least one uppercase letter, one lowercase letter, one number and one special character #?!@$%^&*()-',
              },
            })}
            required
            label="Password"
            placeholder="Type your new password"
            data-test-id="password"
          />
        </PasswordRequirementPopover>
        <PasswordInput
          error={errors.passwordRepeat?.message}
          mt={20}
          {...register('passwordRepeat', {
            required: 'Please input your password',
            minLength: { value: passwordConstraints.minLength, message: 'Minimum 8 characters' },
            maxLength: {
              value: passwordConstraints.maxLength,
              message: 'Maximum 64 characters',
            },
            pattern: {
              value: passwordConstraints.pattern,
              message:
                'The password must contain minimum 8 and maximum 64 characters, at least one uppercase letter, one lowercase letter, one number and one special character #?!@$%^&*()-',
            },
          })}
          required
          label="Repeat Password"
          placeholder="Type it again"
          data-test-id="password-repeat"
        />
        <Button mt={60} inherit loading={isLoading} submit data-test-id="submit-btn">
          Reset Password
        </Button>
      </form>
      {isError && (
        <Text data-test-id="error-alert-banner" mt={20} size="lg" weight="bold" align="center" color={colors.error}>
          {' '}
          {error?.message}
        </Text>
      )}
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useNavigate } from 'react-router-dom';
import { useMutation } from '@tanstack/react-query';
import { useForm } from 'react-hook-form';
import { captureException } from '@sentry/react';
import { showNotification } from '@mantine/notifications';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/components/PasswordResetRequestForm.tsx
Tamaño: 2188 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMutation } from '@tanstack/react-query';
import { captureException } from '@sentry/react';
import { Link } from 'react-router-dom';
import { useForm } from 'react-hook-form';
import { Center } from '@mantine/core';
import { Button, colors, Input, Text } from '@novu/design-system';
import type { IResponseError } from '@novu/shared';

import { api } from '../../../api/api.client';
import { ROUTES } from '../../../constants/routes';

type Props = {
  onSent: () => void;
};

export function PasswordResetRequestForm({ onSent }: Props) {
  const { isLoading, mutateAsync, isError, error } = useMutation<
    { success: boolean },
    IResponseError,
    {
      email: string;
    }
  >((data) => api.post(`/v1/auth/reset/request`, data));

  const onForgotPassword = async (data) => {
    const itemData = {
      email: data.email,
    };

    try {
      await mutateAsync(itemData);
      onSent();
    } catch (e: any) {
      if (e.statusCode !== 400) {
        captureException(e);
      }
    }
  };

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm({});

  return (
    <>
      <form noValidate name="reset-form" onSubmit={handleSubmit(onForgotPassword)}>
        <Input
          error={errors.email?.message as string}
          {...register('email', {
            required: 'Please provide an email',
            pattern: { value: /^\S+@\S+\.\S+$/, message: 'Please provide a valid email' },
          })}
          required
          label="Email"
          placeholder="Type your email..."
          data-test-id="email"
          mt={20}
        />
        <Button mt={60} inherit loading={isLoading} submit data-test-id="submit-btn">
          Reset Password
        </Button>
        <Center mt={20}>
          <Text mr={10} size="md" color={colors.B60}>
            Know your password?
          </Text>
          <Link to={ROUTES.AUTH_LOGIN}>
            <Text gradient>Sign In</Text>
          </Link>
        </Center>
      </form>
      {isError && error?.message && (
        <Text mt={20} size="lg" weight="bold" align="center" color={colors.error}>
          {error.message}
        </Text>
      )}
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMutation } from '@tanstack/react-query';
import { captureException } from '@sentry/react';
import { Link } from 'react-router-dom';
import { useForm } from 'react-hook-form';
import { Center } from '@mantine/core';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/components/PasswordStrengthBar.tsx
Tamaño: 282 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import PasswordStrength from 'react-password-strength-bar';
import { passwordConstraints } from '@novu/shared';

export function PasswordStrengthBar({ password }: { password: string }) {
  return <PasswordStrength password={password} minLength={passwordConstraints.minLength} />;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import PasswordStrength from 'react-password-strength-bar';
import { passwordConstraints } from '@novu/shared';
export function PasswordStrengthBar({ password }: { password: string }) {
return <PasswordStrength password={password} minLength={passwordConstraints.minLength} />;
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/components/SetupLoader.tsx
Tamaño: 601 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Loader, Paper } from '@mantine/core';
import { colors, Text } from '@novu/design-system';

type Props = {
  title: string;
};

const SetupLoader = ({ title }: Props) => {
  return (
    <Paper
      sx={{
        minHeight: '100vh',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        flexDirection: 'column',
        position: 'fixed',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
      }}
    >
      <Loader color={colors.error} size={32} />
      <Text>{title}</Text>
    </Paper>
  );
};

export default SetupLoader;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Loader, Paper } from '@mantine/core';
import { colors, Text } from '@novu/design-system';
type Props = {
title: string;
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/components/SignUpForm.tsx
Tamaño: 7380 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect, useMemo, useState } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { useMutation } from '@tanstack/react-query';
import { useForm } from 'react-hook-form';
import { Center } from '@mantine/core';
import { passwordConstraints, UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';
import type { IResponseError } from '@novu/shared';
import { PasswordInput, Button, colors, Input, Text, Checkbox } from '@novu/design-system';

import { useAuth } from '../../../hooks/useAuth';
import { api } from '../../../api/api.client';
import { useRedirectURL } from '../../../hooks';
import { useAcceptInvite } from './useAcceptInvite';
import { PasswordRequirementPopover } from './PasswordRequirementPopover';
import { ROUTES } from '../../../constants/routes';
import { OAuth } from './OAuth';
import { useSegment } from '../../../components/providers/SegmentProvider';
import { useStudioState } from '../../../studio/hooks';
import { navigateToWorkflows } from '../../../utils';

type SignUpFormProps = {
  invitationToken?: string;
  email?: string;
};

export type SignUpFormInputType = {
  email: string;
  password: string;
  fullName: string;
};

export function SignUpForm({ invitationToken, email }: SignUpFormProps) {
  const { setRedirectURL } = useRedirectURL();
  useEffect(() => setRedirectURL(), []);
  const location = useLocation();

  const { login } = useAuth();
  const { isLoading: isAcceptInviteLoading, acceptInvite } = useAcceptInvite();
  const segment = useSegment();
  const state = useStudioState();

  const { isLoading, mutateAsync, isError, error } = useMutation<
    { token: string },
    IResponseError,
    {
      firstName: string;
      lastName: string;
      email: string;
      password: string;
      invitationToken?: string;
    }
  >((data) => api.post('/v1/auth/register', data));

  const onSubmit = async (data) => {
    const parsedSearchParams = new URLSearchParams(location.search);
    const origin = parsedSearchParams.get('origin');
    const anonymousId = parsedSearchParams.get('anonymous_id');

    const [firstName, lastName] = data?.fullName.trim().split(' ');
    const itemData = {
      firstName,
      lastName,
      email: data.email,
      password: data.password,
      origin,
      invitationToken,
    };

    const response = await mutateAsync(itemData);
    const { token } = response as any;
    await login(token);

    if (state?.anonymousId && anonymousId) {
      segment.alias(anonymousId, (response as any).user?.id);
    }

    if (invitationToken) {
      const updatedToken = await acceptInvite(invitationToken);
      if (updatedToken) {
        await login(updatedToken);
      }
      navigateToWorkflows();
    } else {
      navigateToWorkflows();
    }
  };

  const {
    register,
    handleSubmit,
    control,
    formState: { errors },
  } = useForm<SignUpFormInputType>({
    defaultValues: {
      email,
      fullName: '',
      password: '',
    },
  });

  const [accepted, setAccepted] = useState<boolean>(false);

  const serverErrorString = useMemo<string>(() => {
    return Array.isArray(error?.message) ? error?.message[0] : error?.message;
  }, [error]);

  const emailServerError = useMemo<string>(() => {
    if (serverErrorString === 'User already exists') return 'An account with this email already exists';
    if (serverErrorString === 'email must be an email') return 'Please provide a valid email';

    return '';
  }, [serverErrorString]);

  const accountCreationError = useMemo<string>(() => {
    if (serverErrorString === 'Account creation is disabled')
      return 'The creation of new accounts is currently disabled. Please contact your administrator.';

    return '';
  }, [serverErrorString]);

  return (
    <>
      <OAuth invitationToken={invitationToken} />
      <form noValidate name="login-form" onSubmit={handleSubmit(onSubmit)}>
        <Input
          error={errors.fullName?.message}
          {...register('fullName', {
            required: 'Please input full name',
          })}
          required
          data-test-id="fullName"
          label="Full Name"
          placeholder="Your full name goes here"
          mt={5}
        />
        <Input
          error={errors.email?.message || emailServerError}
          disabled={!!email}
          {...register('email', {
            required: 'Please provide an email',
            pattern: { value: /^\S+@\S+\.\S+$/, message: 'Please provide a valid email' },
          })}
          required
          label="Email"
          placeholder="Type your email..."
          data-test-id="email"
          mt={20}
        />

        <PasswordRequirementPopover control={control}>
          <PasswordInput
            error={errors.password?.message}
            mt={20}
            {...register('password', {
              required: 'Password, not your birthdate',
              minLength: { value: passwordConstraints.minLength, message: 'Minimum 8 characters' },
              maxLength: {
                value: passwordConstraints.maxLength,
                message: 'Maximum 64 characters',
              },
              pattern: {
                value: passwordConstraints.pattern,
                message:
                  'The password must contain minimum 8 and maximum 64 characters, at least one uppercase letter, one lowercase letter, one number and one special character #?!@$%^&*()-',
              },
            })}
            required
            label="Password"
            placeholder="Type your password..."
            data-test-id="password"
          />
        </PasswordRequirementPopover>
        <Checkbox
          onChange={() => setAccepted(!accepted)}
          required
          label={<Accept />}
          data-test-id="accept-cb"
          mt={20}
          mb={20}
        />

        {accountCreationError && (
          <Text mt={20} size="lg" align="center" color={colors.error}>
            {accountCreationError}
          </Text>
        )}

        <Button
          disabled={!accepted}
          mt={20}
          inherit
          loading={isLoading || isAcceptInviteLoading}
          submit
          data-test-id="submitButton"
        >
          Sign Up {invitationToken ? '& Accept Invite' : null}
        </Button>
        <Center mt={20}>
          <Text mr={10} size="md" color={colors.B60}>
            Already have an account?
          </Text>
          <Link to={ROUTES.AUTH_LOGIN}>
            <Text gradient> Sign In</Text>
          </Link>
        </Center>
      </form>
      {isError && !emailServerError && !accountCreationError && (
        <Text mt={20} size="lg" weight="bold" align="center" color={colors.error}>
          {' '}
          {error?.message}
        </Text>
      )}
    </>
  );
}

function Accept() {
  return (
    <>
      <span>I accept the </span>
      <a
        style={{ textDecoration: 'underline' }}
        href={`https://novu.co/terms${UTM_CAMPAIGN_QUERY_PARAM}`}
        target="_blank"
        rel="noopener noreferrer"
      >
        Terms and Conditions
      </a>
      <span> and have read the </span>
      <a
        style={{ textDecoration: 'underline' }}
        href={`https://novu.co/privacy${UTM_CAMPAIGN_QUERY_PARAM}`}
        target="_blank"
        rel="noopener noreferrer"
      >
        Privacy Policy
      </a>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect, useMemo, useState } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { useMutation } from '@tanstack/react-query';
import { useForm } from 'react-hook-form';
import { Center } from '@mantine/core';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/components/gitHubUtils.ts
Tamaño: 558 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { SignUpOriginEnum } from '@novu/shared';

import { API_ROOT } from '../../../config';

export const buildGithubLink = ({
  invitationToken,
  isLoginPage,
}: {
  invitationToken?: string;
  isLoginPage?: boolean;
}) => {
  const queryParams = new URLSearchParams();
  queryParams.append('source', SignUpOriginEnum.WEB);
  if (invitationToken) {
    queryParams.append('invitationToken', invitationToken);
  }
  if (isLoginPage) {
    queryParams.append('isLoginPage', 'true');
  }

  return `${API_ROOT}/v1/auth/github?${queryParams.toString()}`;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - buildGithubLink({
  invitationToken,
  isLoginPage,
}: {
  invitationToken?: string;
  isLoginPage?: boolean;
}))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/components/useAcceptInvite.ts
Tamaño: 852 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useCallback } from 'react';
import { useMutation } from '@tanstack/react-query';
import { captureException } from '@sentry/react';
import type { IResponseError } from '@novu/shared';

import { api } from '../../../api/api.client';
import { errorMessage } from '../../../utils/notifications';

export function useAcceptInvite() {
  const { isLoading, mutateAsync, error } = useMutation<string, IResponseError, string>((tokenItem) =>
    api.post(`/v1/invites/${tokenItem}/accept`, {})
  );

  const acceptInvite = useCallback(
    async (invitationToken: string) => {
      try {
        return await mutateAsync(invitationToken);
      } catch (e: unknown) {
        errorMessage('Failed to accept an invite.');

        captureException(e);
      }
    },
    [mutateAsync]
  );

  return {
    acceptInvite,
    isLoading,
    error,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useAcceptInvite()
Asignaciones con arrow functions encontradas (posibles funciones):
 - acceptInvite(useCallback(
    async (invitationToken: string))
Declaraciones 'export' encontradas:
- export function useAcceptInvite

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/components/useDomainHook.ts
Tamaño: 1345 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useCallback, useEffect, useRef } from 'react';

interface DomainInfo {
  domain: string;
  domainWithoutSuffix: string;
  hostname: string;
  isIcann: boolean;
  isIp: boolean;
  isPrivate: boolean;
  publicSuffix: string;
  subdomain: string;
}

function stripProtocol(url: string): string {
  return (url || '').replace(/(https?)?(:\/+)?/, '');
}

function fallbackParser(url: string) {
  const parts = stripProtocol(url).split('.');

  if (parts.length > 2) {
    const [subdomain, ...domainParts] = parts;

    return {
      subdomain: subdomain || '',
      domain: domainParts.join('.'),
    };
  }

  return {
    subdomain: '',
    domain: url,
  };
}

export function useDomainParser(): { parse: (url: string) => Partial<DomainInfo> } {
  const tldParser = useRef(null);

  useEffect(() => {
    import(
      /* webpackIgnore: true */

      // @ts-expect-error - TODO: fix this
      'https://unpkg.com/tldts/dist/es6/index.js?module'
    )
      .then((mod) => (tldParser.current = mod))
      .catch(() => (tldParser.current = null));
  }, []);

  const parse = useCallback((url: string) => {
    url = stripProtocol(url);

    if (tldParser.current) {
      return (tldParser.current as any).parse(url, { allowPrivateDomains: true }) as DomainInfo;
    }

    return fallbackParser(url);
  }, []);

  return { parse };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - stripProtocol(url: string)
 - fallbackParser(url: string)
 - useDomainParser()
Asignaciones con arrow functions encontradas (posibles funciones):
 - tldParser(useRef(null);

  useEffect(())
 - current(mod))
      .catch(())
 - parse(useCallback((url: string))
Declaraciones 'export' encontradas:
- export function useDomainParser

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/components/dynamic-checkbox/DynamicCheckBox.styles.ts
Tamaño: 1027 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { createStyles } from '@mantine/core';
import { colors } from '@novu/design-system';

export const checkboxStyles = createStyles((theme, _params, getRef) => {
  const dark = theme.colorScheme === 'dark';

  return {
    input: {
      position: 'absolute',

      backgroundColor: 'transparent',
      border: `1px solid grey`,

      '&:hover': {
        border: `1px solid white`,
      },

      '&:checked': {
        backgroundImage: colors.horizontal,
        border: 'transparent',
      },
    },

    label: {
      paddingLeft: 4,
      fontSize: '14px',
      fontWeight: 'bold',
      color: dark ? colors.B60 : colors.B60,
    },
  };
});

export const tooltipStyles = createStyles((theme, _params, getRef) => {
  const dark = theme.colorScheme === 'dark';

  return {
    tooltip: {
      padding: '16px',
      background: dark ? colors.B20 : colors.white,
      color: dark ? colors.B60 : colors.B60,
      fontSize: '14px',
      boxShadow: dark ? 'none' : '0px 5px 15px 0px #2644800D',
    },
  };
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - checkboxStyles(createStyles((theme, _params, getRef))
 - tooltipStyles(createStyles((theme, _params, getRef))
Declaraciones 'export' encontradas:
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/auth/components/dynamic-checkbox/DynamicCheckBox.tsx
Tamaño: 2499 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { SVGProps, useState } from 'react';
import { CheckboxProps } from '@mantine/core';
import styled from '@emotion/styled';

import { colors, Checkbox, Tooltip } from '@novu/design-system';
import { ProductUseCasesEnum } from '@novu/shared';

import { checkboxStyles, tooltipStyles } from './DynamicCheckBox.styles';

type IDynamicCheckBoxProps = CheckboxProps;

export function DynamicCheckBox({ ...props }: IDynamicCheckBoxProps) {
  const { classes: checkboxClasses } = checkboxStyles();
  const { classes: tooltipClasses } = tooltipStyles();
  const [isHovered, setIsHovered] = useState(false);
  const [isChecked, setIsChecked] = useState(false);

  const handleCheckboxChange = (event) => {
    setIsChecked(event.currentTarget.checked);

    if (props.onChange) {
      props.onChange(event);
    }
  };

  return (
    <Checkbox
      checked={isChecked}
      className="innerCheckbox"
      classNames={checkboxClasses}
      label={props.label}
      onChange={handleCheckboxChange}
    />
  );
}

const Container = styled.div<{ checked: boolean }>`
  border-radius: 8px;
  padding: 8px;
  margin: 0 4px 0 4px;
  transition: background 0.6s ease;
  background: transparent;

  &:hover {
    background: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B30 : colors.white)};
  }

  &:hover .innerCheckbox {
    input {
      border: 1px solid ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B15)};
    }

    label {
      color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B15)};
    }
  }

  ${({ theme, checked }) => {
    return (
      checked &&
      `  
        label {
          color: ${theme.colorScheme === 'dark' ? colors.white : colors.B15};
        }
      `
    );
  }};
`;

const tooltipLabel = {
  [ProductUseCasesEnum.IN_APP]:
    'Utilize Novu’s pre-built customizable in-app component. Or opt for the headless library to create your own in-app notification center',
  [ProductUseCasesEnum.MULTI_CHANNEL]:
    'Notify subscribers using a wide range of channels:In-App, Email, Chat, Push, and SMS.',
  [ProductUseCasesEnum.DIGEST]: 'Digest collects multiple trigger events, aggregates them into a single message.',
  [ProductUseCasesEnum.DELAY]:
    'The delay action awaits a specified amount of time before moving on to trigger the following steps of the workflow.',
  [ProductUseCasesEnum.TRANSLATION]:
    'Upload translations to use them as variables or in the autosuggest for the editor.',
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { SVGProps, useState } from 'react';
import { CheckboxProps } from '@mantine/core';
import styled from '@emotion/styled';
import { colors, Checkbox, Tooltip } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/brand/BrandInputs.tsx
Tamaño: 1121 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ColorInput } from '@novu/design-system';
import { Control, Controller, UseFormSetValue } from 'react-hook-form';
import { Stack } from '@novu/novui/jsx';
import { IBrandFormValues } from './BrandingPage.const';
import { inputWrapperStyles, Text } from './BrandingPage.styles';
import { BrandLogoUpload } from './BrandLogoUpload';

type BrandInputsProps = {
  setValue: UseFormSetValue<IBrandFormValues>;
  control: Control<IBrandFormValues, any>;
};

export function BrandInputs({ control, setValue }: BrandInputsProps) {
  return (
    <>
      <Stack gap="75">
        <Text variant="strong">Brand logo</Text>
        <Controller
          render={({ field }) => <BrandLogoUpload field={field} setValue={setValue} />}
          control={control}
          name="logo"
        />
      </Stack>

      <div className={inputWrapperStyles}>
        <Controller
          render={({ field }) => (
            <ColorInput label="Brand color" data-test-id="brand-color-picker" disallowInput={false} {...field} />
          )}
          control={control}
          name="color"
        />
      </div>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ColorInput } from '@novu/design-system';
import { Control, Controller, UseFormSetValue } from 'react-hook-form';
import { Stack } from '@novu/novui/jsx';
import { IBrandFormValues } from './BrandingPage.const';
import { inputWrapperStyles, Text } from './BrandingPage.styles';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/brand/BrandLogoUpload.tsx
Tamaño: 3298 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Dropzone } from '@mantine/dropzone';
import { ActionButton, errorMessage, IconDelete, IconOutlineFileUpload } from '@novu/design-system';
import { UploadTypesEnum } from '@novu/shared';
import { useRef } from 'react';
import { ControllerRenderProps, UseFormSetValue } from 'react-hook-form';
import { css, cx } from '@novu/novui/css';
import { Stack } from '@novu/novui/jsx';
import { useUploadToStorage } from '../../api/hooks/useUploadToStorage';
import { ACCEPTABLE_ORG_IMAGE_TYPES, BRAND_LOGO_SIZE, IBrandFormValues } from './BrandingPage.const';
import {
  dropzoneOverlayStyles,
  dropzoneRootStyles,
  dropzoneTextStyles,
  dropzoneWrapperStyles,
  Text,
} from './BrandingPage.styles';

type BrandLogoUploadProps = {
  field: ControllerRenderProps<IBrandFormValues, 'logo'>;
  setValue: UseFormSetValue<IBrandFormValues>;
};

export function BrandLogoUpload({ field, setValue }: BrandLogoUploadProps) {
  const dropzoneRef = useRef<() => void>(null);

  const { uploadToStorage } = useUploadToStorage({
    onSuccess: (path) => {
      setValue('logo', path, { shouldDirty: true });
    },
    onError: (e) => {
      errorMessage(`Failed to upload branding image: ${e.message}`);
    },
  });

  const handleUpload = async (files: File[]) => {
    const file = files[0];
    if (!file) return;

    uploadToStorage({ file, type: UploadTypesEnum.BRANDING });
  };

  const removeFile = () => {
    setValue('file', null);
    setValue('logo', '');
  };

  return (
    /**
     * group className is used to target the dropzone overlay styles
     * REF: https://panda-css.com/docs/concepts/conditional-styles#group-selectors
     */
    <div className={cx('group', dropzoneWrapperStyles)}>
      {field.value && (
        <div className={dropzoneOverlayStyles}>
          <div>
            <ActionButton onClick={() => dropzoneRef.current?.()} Icon={IconOutlineFileUpload} />
            <Text className={dropzoneTextStyles}>Update</Text>
          </div>

          <div>
            <ActionButton onClick={removeFile} Icon={IconDelete} />
            <Text className={dropzoneTextStyles}>Remove</Text>
          </div>
        </div>
      )}
      <Dropzone
        classNames={{
          root: dropzoneRootStyles,
        }}
        openRef={dropzoneRef}
        accept={ACCEPTABLE_ORG_IMAGE_TYPES}
        multiple={false}
        onDrop={handleUpload}
        data-test-id="upload-image-button"
      >
        <div
          className={css({
            minHeight: BRAND_LOGO_SIZE,
            minWidth: BRAND_LOGO_SIZE,
            display: 'flex',
          })}
        >
          {field.value ? (
            <img
              data-test-id="logo-image-wrapper"
              src={field.value}
              className={css({
                minHeight: BRAND_LOGO_SIZE,
                minWidth: BRAND_LOGO_SIZE,
                objectFit: 'contain',
              })}
              alt="avatar"
            />
          ) : (
            <Stack gap="25" direction="column" align="center" justify="center" flexGrow={1}>
              <ActionButton onClick={() => dropzoneRef.current?.()} Icon={IconOutlineFileUpload} />
              <Text className={dropzoneTextStyles}>Upload</Text>
            </Stack>
          )}
        </div>
      </Dropzone>
    </div>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Dropzone } from '@mantine/dropzone';
import { ActionButton, errorMessage, IconDelete, IconOutlineFileUpload } from '@novu/design-system';
import { UploadTypesEnum } from '@novu/shared';
import { useRef } from 'react';
import { ControllerRenderProps, UseFormSetValue } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/brand/BrandingPage.const.ts
Tamaño: 718 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { MimeTypesEnum } from '@novu/shared';
import { OrgColorType, UpdateOrgBrandingPayloadType } from '../../api/organization';

export const DEFAULT_BRANDING_COLOR: OrgColorType = '#f47373';
export const DEFAULT_FONT_COLOR: OrgColorType = DEFAULT_BRANDING_COLOR;
export const DEFAULT_FONT_FAMILY = 'inherit';
export const BRAND_LOGO_SIZE = '6.25rem';

export const FONT_FAMILIES = [
  DEFAULT_FONT_FAMILY,
  'Fira Code',
  'Roboto',
  'Montserrat',
  'Open Sans',
  'Lato',
  'Nunito',
  'Oswald',
  'Raleway',
];

export interface IBrandFormValues extends UpdateOrgBrandingPayloadType {
  file: File | null;
}

export const ACCEPTABLE_ORG_IMAGE_TYPES = [MimeTypesEnum.JPEG, MimeTypesEnum.PNG, MimeTypesEnum.JPG];


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const
- export  const
- export  const
- export  const
- export  const
- export  interface
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/brand/BrandingPage.styles.ts
Tamaño: 1813 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { css } from '@novu/novui/css';
import { styled } from '@novu/novui/jsx';
import { text } from '@novu/novui/recipes';

export const dropzoneWrapperStyles = css({
  position: 'relative',
  // TODO: use border radius values from Design-System once available
  rounded: '7px',
  px: '150',
  py: '200',
  width: '15rem',
  // TODO: use border values from Design-System once available
  border: '1px solid',
  // TODO: Remove legacy colors, once the design system is updated
  borderColor: {
    base: 'legacy.B80',
    _dark: 'legacy.B30',
  },
  _hover: {
    cursor: 'pointer',
    // TODO: Remove legacy colors, once the design system is updated
    backgroundColor: {
      base: 'legacy.white !important',
      _dark: 'legacy.BGDark !important',
    },
    opacity: '0.8',
    backdropFilter: 'blur(6px)',
  },
});

export const dropzoneOverlayStyles = css({
  display: 'none',
  justifyContent: 'center',
  alignItems: 'center',
  gap: '150',
  // TODO: use z-index value from Design-System once available
  zIndex: '20',
  // TODO: use border radius values from Design-System once available
  rounded: '7px',
  position: 'absolute',
  top: '0',
  left: '0',
  backdropFilter: 'blur(5px)',
  width: '100%',
  height: '100%',
  /**
   * _groupHover is used style the element based on its parent element's state or attribute
   * REF: https://panda-css.com/docs/concepts/conditional-styles#group-selectors
   */
  _groupHover: {
    display: 'flex',
  },
});

export const dropzoneRootStyles = css({
  background: 'none !important',
  border: 'none !important',
});

export const Text = styled('p', text);

export const dropzoneTextStyles = css({
  // TODO: Remove legacy colors, once the design system is updated
  color: 'legacy.B70',
});

export const inputWrapperStyles = css({
  width: '15rem',
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/brand/BrandingPage.tsx
Tamaño: 2919 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Button, LoadingOverlay } from '@novu/design-system';
import { useForm } from 'react-hook-form';
import { css } from '@novu/novui/css';
import { Stack } from '@novu/novui/jsx';
import { useEffect } from 'react';
import { useUpdateOrganizationBranding, useFetchOrganization } from '../../api/hooks';
import { useAuth } from '../../hooks/useAuth';
import { successMessage } from '../../utils/notifications';
import { SettingsPageContainer } from '../settings/SettingsPageContainer';
import {
  DEFAULT_BRANDING_COLOR,
  DEFAULT_FONT_COLOR,
  DEFAULT_FONT_FAMILY,
  IBrandFormValues,
} from './BrandingPage.const';
import { BrandInputs } from './BrandInputs';
import { InAppInputs } from './InAppInputs';

export function BrandingPage() {
  const { currentOrganization } = useAuth();
  const { data: organizationData, isLoading: isLoadingOrganization } = useFetchOrganization();

  const {
    setValue,
    handleSubmit,
    control,
    reset,
    formState: { isDirty },
  } = useForm<IBrandFormValues>({
    defaultValues: {
      fontFamily: DEFAULT_FONT_FAMILY,
      color: DEFAULT_BRANDING_COLOR,
      fontColor: DEFAULT_FONT_COLOR,
      logo: '',
      file: null,
    },
  });

  // Update form values when organization data is loaded
  useEffect(() => {
    if (organizationData?.branding) {
      const branding = organizationData.branding;

      reset({
        fontFamily: branding.fontFamily || DEFAULT_FONT_FAMILY,
        color: branding.color || DEFAULT_BRANDING_COLOR,
        fontColor: branding.fontColor || DEFAULT_FONT_COLOR,
        logo: branding.logo || '',
        file: null,
      });
    }
  }, [organizationData, reset]);

  const { isLoading, updateOrganizationBranding } = useUpdateOrganizationBranding({
    onSuccess: (data) => {
      successMessage('Branding info updated successfully');

      reset({
        fontFamily: data.fontFamily || DEFAULT_FONT_FAMILY,
        color: data.color || DEFAULT_BRANDING_COLOR,
        fontColor: data.fontColor || DEFAULT_FONT_COLOR,
        logo: data.logo || '',
        file: null,
      });
    },
  });

  const saveBrandsForm = async (data: IBrandFormValues) => {
    await updateOrganizationBranding(data);
  };

  return (
    <SettingsPageContainer title="Branding">
      <LoadingOverlay visible={!currentOrganization || isLoadingOrganization}>
        <form noValidate onSubmit={handleSubmit(saveBrandsForm)}>
          <Stack gap="200">
            <BrandInputs control={control} setValue={setValue} />
            <InAppInputs control={control} />
            <Button
              className={css({ alignSelf: 'flex-start' })}
              submit
              loading={isLoading}
              data-test-id="submit-branding-settings"
              disabled={!isDirty}
            >
              Update
            </Button>
          </Stack>
        </form>
      </LoadingOverlay>
    </SettingsPageContainer>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Button, LoadingOverlay } from '@novu/design-system';
import { useForm } from 'react-hook-form';
import { css } from '@novu/novui/css';
import { Stack } from '@novu/novui/jsx';
import { useEffect } from 'react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/brand/InAppInputs.tsx
Tamaño: 1148 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ColorInput, Select } from '@novu/design-system';
import { Control, Controller } from 'react-hook-form';
import { FONT_FAMILIES, IBrandFormValues } from './BrandingPage.const';
import { inputWrapperStyles } from './BrandingPage.styles';

type InAppInputsProps = {
  control: Control<IBrandFormValues, any>;
};

export function InAppInputs({ control }: InAppInputsProps) {
  return (
    <>
      <div className={inputWrapperStyles}>
        <Controller
          render={({ field }) => (
            <ColorInput label="In-App font color" data-test-id="font-color-picker" disallowInput={false} {...field} />
          )}
          control={control}
          name="fontColor"
        />
      </div>
      <div className={inputWrapperStyles}>
        <Controller
          render={({ field }) => (
            <Select
              label="In-App font family"
              placeholder="Select a font family"
              data={FONT_FAMILIES}
              data-test-id="font-family-selector"
              {...field}
            />
          )}
          control={control}
          name="fontFamily"
        />
      </div>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ColorInput, Select } from '@novu/design-system';
import { Control, Controller } from 'react-hook-form';
import { FONT_FAMILIES, IBrandFormValues } from './BrandingPage.const';
import { inputWrapperStyles } from './BrandingPage.styles';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/changes/PromoteChangesPage.tsx
Tamaño: 3322 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import styled from '@emotion/styled';

import { Button, Tabs } from '@novu/design-system';
import PageHeader from '../../components/layout/components/PageHeader';
import PageContainer from '../../components/layout/components/PageContainer';
import { useEnvironment, usePromotedChanges, useUnPromotedChanges } from '../../hooks';
import { ChangesTable } from './components/ChangesTableLayout';
import { bulkPromoteChanges } from '../../api/changes';
import { QueryKeys } from '../../api/query.keys';
import { errorMessage, successMessage } from '../../utils/notifications';
import { ROUTES } from '../../constants/routes';

const PENDING = 'Pending';
const HISTORY = 'History';

export function PromoteChangesPage() {
  const [page, setPage] = useState<number>(0);
  const navigate = useNavigate();
  const { readonly } = useEnvironment();

  const { changes, isLoadingChanges, changesPageSize, totalChangesCount } = useUnPromotedChanges(page);
  const { history, isLoadingHistory, historyPageSize, totalHistoryCount } = usePromotedChanges(page);

  const queryClient = useQueryClient();
  const { mutate, isLoading } = useMutation(bulkPromoteChanges, {
    onSuccess: () => {
      queryClient.refetchQueries([QueryKeys.currentUnpromotedChanges]);
      queryClient.refetchQueries([QueryKeys.currentPromotedChanges]);
      queryClient.refetchQueries([QueryKeys.changesCount]);
      successMessage('All changes were promoted');
    },
    onError: (err: any) => {
      errorMessage(err?.message || 'Something went wrong! Failed to promote changes');
    },
  });

  function handleTableChange(pageIndex) {
    setPage(pageIndex);
  }

  if (readonly) {
    navigate(ROUTES.HOME);
  }

  const menuTabs = [
    {
      value: PENDING,
      content: (
        <ChangesTable
          key={page}
          loading={isLoadingChanges}
          changes={changes}
          handleTableChange={handleTableChange}
          page={page}
          pageSize={changesPageSize}
          totalCount={totalChangesCount}
          dataTestId="pending-changes-table"
        />
      ),
    },
    {
      value: HISTORY,
      content: (
        <ChangesTable
          key={page}
          loading={isLoadingHistory}
          changes={history}
          handleTableChange={handleTableChange}
          page={page}
          pageSize={historyPageSize}
          totalCount={totalHistoryCount}
          dataTestId="history-changes-table"
        />
      ),
    },
  ];

  return (
    <PageContainer title="Changes">
      <PageHeader
        title="Changes"
        actions={
          <Button
            disabled={isLoadingChanges || changes.length === 0}
            data-test-id="promote-all-btn"
            loading={isLoading}
            onClick={() => {
              mutate(changes.map((change) => change._id));
            }}
          >
            Promote All
          </Button>
        }
      />
      <StyledTabs>
        <Tabs menuTabs={menuTabs} defaultValue={PENDING} onTabChange={() => setPage(0)} />
      </StyledTabs>
    </PageContainer>
  );
}

const StyledTabs = styled.div`
  .mantine-Tabs-tabsList {
    margin-left: 30px;
    margin-top: 15px;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import styled from '@emotion/styled';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/changes/components/ChangesTableLayout.tsx
Tamaño: 5027 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import capitalize from 'lodash.capitalize';
import { format } from 'date-fns';
import { useMantineColorScheme } from '@mantine/core';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { ChangeEntityTypeEnum } from '@novu/shared';
import { useEffect } from 'react';
import { showNotification } from '@mantine/notifications';

import { IExtendedColumn, Table, Button, colors, Text, withCellLoading } from '@novu/design-system';
import { promoteChange } from '../../../api/changes';
import { QueryKeys } from '../../../api/query.keys';

export const ChangesTable = ({
  changes,
  loading,
  handleTableChange,
  page,
  pageSize,
  totalCount,
  dataTestId,
}: {
  changes: any[];
  loading: boolean;
  handleTableChange: (pageIndex) => void;
  page: number;
  pageSize: number;
  totalCount: number;
  dataTestId?: string;
}) => {
  const queryClient = useQueryClient();
  const { colorScheme } = useMantineColorScheme();
  const { mutate, isLoading, error } = useMutation(promoteChange, {
    onSuccess: () => {
      queryClient.refetchQueries([QueryKeys.currentUnpromotedChanges]);
      queryClient.refetchQueries([QueryKeys.currentPromotedChanges]);
      queryClient.refetchQueries([QueryKeys.changesCount]);
    },
  });

  useEffect(() => {
    if (!error) {
      return;
    }

    showNotification({
      message: (error as Error).message,
      color: 'red',
    });
  }, [error]);

  const columns: IExtendedColumn<any>[] = [
    {
      accessor: 'change',
      Header: 'Change',
      Cell: withCellLoading(
        ({
          row: {
            original: { type, templateName, messageType, previousDefaultLayout, translationGroup },
          },
        }) => (
          <div data-test-id="change-type">
            {type === ChangeEntityTypeEnum.NOTIFICATION_TEMPLATE && (
              <Text color={colorScheme === 'dark' ? colors.B40 : colors.B70}>Workflow Change</Text>
            )}
            {type === ChangeEntityTypeEnum.MESSAGE_TEMPLATE && (
              <Text color={colorScheme === 'dark' ? colors.B40 : colors.B70}>Message Change</Text>
            )}
            {type === ChangeEntityTypeEnum.NOTIFICATION_GROUP && (
              <Text color={colorScheme === 'dark' ? colors.B40 : colors.B70}>Notification Group Change</Text>
            )}
            {type === ChangeEntityTypeEnum.FEED && (
              <Text color={colorScheme === 'dark' ? colors.B40 : colors.B70}>Feed Change</Text>
            )}
            {type === ChangeEntityTypeEnum.LAYOUT && (
              <Text color={colorScheme === 'dark' ? colors.B40 : colors.B70}>Layout Change</Text>
            )}
            {type === ChangeEntityTypeEnum.DEFAULT_LAYOUT && (
              <Text color={colorScheme === 'dark' ? colors.B40 : colors.B70}>Default Layout Change</Text>
            )}
            {type === ChangeEntityTypeEnum.TRANSLATION_GROUP && (
              <Text color={colorScheme === 'dark' ? colors.B40 : colors.B70}>Translation Group Change</Text>
            )}
            {type === ChangeEntityTypeEnum.TRANSLATION && (
              <Text color={colorScheme === 'dark' ? colors.B40 : colors.B70}>Translation Change</Text>
            )}
            {previousDefaultLayout && (
              <Text data-test-id="previous-default-layout-content" rows={1} mt={5}>
                Previous Default Layout: {previousDefaultLayout}
              </Text>
            )}
            <Text data-test-id="change-content" rows={1} mt={5}>
              {translationGroup ? `${translationGroup}, ` : null}
              {templateName}
              {messageType ? `, ${messageType}` : null}
            </Text>
          </div>
        )
      ),
    },
    {
      accessor: 'user',
      Header: 'Changed By',
      Cell: withCellLoading(({ row: { original } }) => (
        <Text data-test-id="subscriber-name" rows={1}>
          {capitalize(original.user?.firstName)} {capitalize(original.user?.lastName)}
        </Text>
      )),
    },
    {
      accessor: 'createdAt',
      Header: 'Date Changed',
      Cell: withCellLoading(({ row: { original } }) => {
        return format(new Date(original.createdAt), 'dd/MM/yyyy');
      }),
    },
    {
      accessor: '_id',
      Header: '',
      Cell: withCellLoading(({ row: { original } }) => {
        return (
          <div style={{ textAlign: 'right', paddingRight: '20px' }}>
            <Button
              variant="outline"
              data-test-id="promote-btn"
              onClick={() => {
                mutate(original._id);
              }}
              disabled={original.enabled}
              loading={isLoading}
            >
              Promote
            </Button>
          </div>
        );
      }),
    },
  ];

  return (
    <Table
      data-test-id={dataTestId}
      loading={loading}
      data={changes || []}
      columns={columns}
      pagination={{
        pageSize,
        current: page,
        total: totalCount,
        onPageChange: handleTableChange,
      }}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import capitalize from 'lodash.capitalize';
import { format } from 'date-fns';
import { useMantineColorScheme } from '@mantine/core';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { ChangeEntityTypeEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/CreateProviderPage.tsx
Tamaño: 975 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useLocation, useNavigate, useParams } from 'react-router-dom';

import { CreateProviderInstanceSidebar } from './components/multi-provider/CreateProviderInstanceSidebar';
import { ROUTES } from '../../constants/routes';

export function CreateProviderPage() {
  const { channel, providerId } = useParams();
  const navigate = useNavigate();
  const location = useLocation();

  const onIntegrationCreated = (integrationId: string) => {
    navigate(`/integrations/${integrationId}`);
  };

  return (
    <CreateProviderInstanceSidebar
      isOpened
      onGoBack={() => {
        if (location.pathname.includes(`${ROUTES.INTEGRATIONS_CREATE}/`)) {
          navigate(ROUTES.INTEGRATIONS_CREATE);

          return;
        }

        navigate(ROUTES.INTEGRATIONS);
      }}
      onClose={() => {
        navigate(ROUTES.INTEGRATIONS);
      }}
      onIntegrationCreated={onIntegrationCreated}
      providerId={providerId}
      channel={channel}
    />
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useLocation, useNavigate, useParams } from 'react-router-dom';
import { CreateProviderInstanceSidebar } from './components/multi-provider/CreateProviderInstanceSidebar';
import { ROUTES } from '../../constants/routes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/IntegrationsList.tsx
Tamaño: 3695 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Container } from '@mantine/core';
import { Outlet } from 'react-router-dom';
import { useMemo } from 'react';
import { Row } from 'react-table';
import { ChannelTypeEnum } from '@novu/shared';

import { Table, Text, withCellLoading, IExtendedColumn } from '@novu/design-system';
import PageContainer from '../../components/layout/components/PageContainer';
import PageHeader from '../../components/layout/components/PageHeader';
import { useEnvironment, useIntegrations } from '../../hooks';
import { IntegrationsListToolbar } from './components/IntegrationsListToolbar';
import { IntegrationNameCell } from './components/IntegrationNameCell';
import type { ITableIntegration } from './types';
import { IntegrationChannelCell } from './components/IntegrationChannelCell';
import { IntegrationEnvironmentCell } from './components/IntegrationEnvironmentCell';
import { IntegrationStatusCell } from './components/IntegrationStatusCell';
import { When } from '../../components/utils/When';
import { IntegrationsListNoData } from './components/IntegrationsListNoData';
import { mapToTableIntegration } from './utils';
import { ConditionCell } from './components/ConditionCell';

const columns: IExtendedColumn<ITableIntegration>[] = [
  {
    accessor: 'name',
    Header: 'Name',
    Cell: IntegrationNameCell,
  },
  {
    accessor: 'provider',
    Header: 'Provider',
    Cell: withCellLoading(
      ({ row: { original } }) => {
        return (
          <Text data-test-id="integration-provider-cell" rows={1}>
            {original.provider}
          </Text>
        );
      },
      { loadingTestId: 'integration-provider-cell-loading' }
    ),
  },
  {
    accessor: 'channel',
    Header: 'Channel',
    Cell: IntegrationChannelCell,
  },
  {
    accessor: 'environment',
    Header: 'Environment',
    Cell: IntegrationEnvironmentCell,
  },
  {
    accessor: 'conditions',
    Header: 'Condition',
    width: 100,
    maxWidth: 100,
    Cell: ConditionCell,
  },
  {
    accessor: 'active',
    Header: 'Status',
    width: 125,
    maxWidth: 125,
    Cell: IntegrationStatusCell,
  },
];

export const IntegrationsList = ({
  withOutlet = true,
  onAddProviderClick,
  onRowClickCallback,
  onChannelClick,
}: {
  withOutlet?: boolean;
  onAddProviderClick: React.MouseEventHandler<HTMLButtonElement>;
  onRowClickCallback: (row: Row<ITableIntegration>) => void;
  onChannelClick: (channel: ChannelTypeEnum) => void;
}) => {
  const { environments, isLoaded } = useEnvironment();
  const { integrations, loading: areIntegrationsLoading } = useIntegrations();
  const isLoading = !isLoaded || areIntegrationsLoading;
  const hasIntegrations = integrations && integrations?.length > 0;

  const data = useMemo<ITableIntegration[] | undefined>(() => {
    return (integrations ?? []).map((el) => mapToTableIntegration(el, environments));
  }, [integrations, environments]);

  return (
    <PageContainer title="Integrations">
      <PageHeader title="Integration Store" />
      <When truthy={hasIntegrations}>
        <Container fluid sx={{ padding: '0 24px 8px 30px' }}>
          <IntegrationsListToolbar onAddProviderClick={onAddProviderClick} areIntegrationsLoading={isLoading} />
        </Container>
      </When>
      <When truthy={hasIntegrations || isLoading}>
        <Table
          onRowClick={onRowClickCallback}
          loading={isLoading}
          data-test-id="integrations-list-table"
          columns={columns}
          data={data}
        />
      </When>
      <When truthy={!hasIntegrations && !isLoading}>
        <IntegrationsListNoData onChannelClick={onChannelClick} />
      </When>
      {withOutlet && <Outlet />}
    </PageContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Container } from '@mantine/core';
import { Outlet } from 'react-router-dom';
import { useMemo } from 'react';
import { Row } from 'react-table';
import { ChannelTypeEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/IntegrationsListModal.tsx
Tamaño: 7052 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useCallback, useEffect, useReducer } from 'react';
import { Group, Modal, ActionIcon, createStyles, MantineTheme } from '@mantine/core';
import { Row } from 'react-table';
import { ChannelTypeEnum } from '@novu/shared';
import { colors, Close } from '@novu/design-system';

import { useKeyDown } from '../../hooks';
import { useSegment } from '../../components/providers/SegmentProvider';
import { IntegrationsStoreModalAnalytics } from './constants';
import type { IIntegratedProvider, ITableIntegration } from './types';
import { IntegrationsList } from './IntegrationsList';
import { SelectProviderSidebar } from './components/multi-provider/SelectProviderSidebar';
import { CreateProviderInstanceSidebar } from './components/multi-provider/CreateProviderInstanceSidebar';
import { UpdateProviderSidebar } from './components/multi-provider/v2';

enum SidebarType {
  SELECT = 'select',
  CREATE = 'create',
  UPDATE = 'update',
}

enum ActionsTypeEnum {
  CLEAR = 'CLEAR',
  SHOW_SELECT_SIDEBAR = 'SHOW_SELECT_SIDEBAR',
  SHOW_CREATE_SIDEBAR = 'SHOW_CREATE_SIDEBAR',
  SHOW_UPDATE_SIDEBAR = 'SHOW_UPDATE_SIDEBAR',
}

type ActionType =
  | { type: ActionsTypeEnum.CLEAR }
  | { type: ActionsTypeEnum.SHOW_SELECT_SIDEBAR; payload: { scrollTo?: ChannelTypeEnum } }
  | { type: ActionsTypeEnum.SHOW_CREATE_SIDEBAR; payload: { provider: IIntegratedProvider } }
  | {
      type: ActionsTypeEnum.SHOW_UPDATE_SIDEBAR;
      payload: { integrationIdToEdit: string };
    };

interface IModalState {
  scrollTo?: ChannelTypeEnum;
  sidebarType?: SidebarType;
  provider?: IIntegratedProvider | null;
  integrationIdToEdit?: string;
}

const reducer = (state: IModalState, action: ActionType) => {
  switch (action.type) {
    case ActionsTypeEnum.CLEAR:
      return {};
    case ActionsTypeEnum.SHOW_SELECT_SIDEBAR:
      return {
        ...state,
        sidebarType: SidebarType.SELECT,
        scrollTo: action.payload.scrollTo,
      };
    case ActionsTypeEnum.SHOW_CREATE_SIDEBAR:
      return {
        ...state,
        sidebarType: SidebarType.CREATE,
        provider: action.payload.provider,
      };
    case ActionsTypeEnum.SHOW_UPDATE_SIDEBAR:
      return {
        ...state,
        sidebarType: SidebarType.UPDATE,
        integrationIdToEdit: action.payload.integrationIdToEdit,
      };
    default:
      return state;
  }
};

export function IntegrationsListModal({
  isOpen,
  onClose,
  selectedProvider = null,
  scrollTo: scrollToProp,
}: {
  scrollTo?: ChannelTypeEnum;
  isOpen: boolean;
  onClose: () => void;
  selectedProvider?: IIntegratedProvider | null;
}) {
  const [{ integrationIdToEdit, provider, sidebarType, scrollTo }, dispatch] = useReducer(reducer, {
    sidebarType: scrollToProp ? SidebarType.SELECT : undefined,
    provider: selectedProvider,
  });

  const segment = useSegment();
  const { classes } = useModalStyles();

  const handleModalClose = () => {
    onClose();
    dispatch({ type: ActionsTypeEnum.CLEAR });

    segment.track(IntegrationsStoreModalAnalytics.CLOSE_MODAL);
  };

  const onRowClickCallback = (item: Row<ITableIntegration>) => {
    const integration = item.original;
    dispatch({
      type: ActionsTypeEnum.SHOW_UPDATE_SIDEBAR,
      payload: { integrationIdToEdit: integration.integrationId },
    });

    segment.track(IntegrationsStoreModalAnalytics.SELECT_PROVIDER_CLICK, {
      providerId: integration.providerId,
      channel: integration.channel,
      name: integration.provider,
      active: integration.active,
    });
  };

  const onSidebarClose = () => dispatch({ type: ActionsTypeEnum.CLEAR });

  const showSelectSidebar = useCallback(
    (scrollToChannel?: ChannelTypeEnum) =>
      dispatch({ type: ActionsTypeEnum.SHOW_SELECT_SIDEBAR, payload: { scrollTo: scrollToChannel } }),
    [dispatch]
  );

  const onSelectSidebarNextStepClick = (newProvider: IIntegratedProvider) => {
    dispatch({
      type: ActionsTypeEnum.SHOW_CREATE_SIDEBAR,
      payload: { provider: newProvider },
    });
  };

  const onIntegrationCreated = (integrationId: string) => {
    dispatch({
      type: ActionsTypeEnum.SHOW_UPDATE_SIDEBAR,
      payload: { integrationIdToEdit: integrationId },
    });
  };

  useKeyDown('Escape', () => {
    if (isOpen && !sidebarType) {
      handleModalClose();
    }
  });

  useEffect(() => {
    if (isOpen && scrollToProp) {
      showSelectSidebar(scrollToProp);
    }
  }, [showSelectSidebar, isOpen, scrollToProp]);

  return (
    <Modal
      withinPortal
      withCloseButton={false}
      closeOnEscape={!sidebarType}
      title={
        !sidebarType ? (
          <Group style={{ width: '100%' }} position={'apart'}>
            <ActionIcon variant={'transparent'} ml="auto" onClick={handleModalClose}>
              <Close />
            </ActionIcon>
          </Group>
        ) : undefined
      }
      classNames={classes}
      fullScreen
      opened={isOpen}
      onClose={handleModalClose}
      styles={{ modal: { overflowX: 'hidden', overflowY: sidebarType ? 'hidden' : 'auto' } }}
      data-test-id="integrations-list-modal"
    >
      <IntegrationsList
        withOutlet={false}
        onAddProviderClick={() => showSelectSidebar()}
        onRowClickCallback={onRowClickCallback}
        onChannelClick={showSelectSidebar}
      />
      <SelectProviderSidebar
        isOpened={sidebarType === SidebarType.SELECT}
        onClose={onSidebarClose}
        onNextStepClick={onSelectSidebarNextStepClick}
        scrollTo={scrollTo}
      />
      <CreateProviderInstanceSidebar
        isOpened={sidebarType === SidebarType.CREATE}
        onGoBack={showSelectSidebar}
        onClose={onSidebarClose}
        onIntegrationCreated={onIntegrationCreated}
        providerId={provider?.providerId}
        channel={provider?.channel}
      />

      <UpdateProviderSidebar
        key={integrationIdToEdit}
        isOpened={sidebarType === SidebarType.UPDATE}
        onClose={onSidebarClose}
        integrationId={integrationIdToEdit}
      />
    </Modal>
  );
}

const useModalStyles = createStyles((theme: MantineTheme) => {
  const dark = theme.colorScheme === 'dark';

  return {
    root: {
      backdropFilter: 'blur(5px)',
    },
    header: {
      position: 'sticky',
      top: 10,
      zIndex: 9,
      margin: 0,
      marginBottom: -28,
      marginRight: -34,
    },
    title: {
      width: '100%',
      marginRight: 0,
      h1: {
        fontSize: 22,
      },
      '@media screen and (min-width: 1367px)': {
        h1: {
          fontSize: 26,
        },
      },
    },
    modal: {
      padding: '0px 40px !important',
      backgroundColor: dark ? theme.fn.rgba(colors.BGDark, 0.8) : theme.fn.rgba(colors.white, 0.7),

      '.mantine-Drawer-root': {
        '&[data-expanded="true"]': {
          '.mantine-Drawer-drawer': {
            width: '100%',
            borderRadius: 0,
          },
        },

        '.mantine-Drawer-drawer': {
          top: 0,
        },
      },
    },
    body: {
      marginTop: 40,
      marginBottom: 40,
    },
  };
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useCallback, useEffect, useReducer } from 'react';
import { Group, Modal, ActionIcon, createStyles, MantineTheme } from '@mantine/core';
import { Row } from 'react-table';
import { ChannelTypeEnum } from '@novu/shared';
import { colors, Close } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/IntegrationsListPage.tsx
Tamaño: 1063 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ChannelTypeEnum } from '@novu/shared';
import { useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import { Row } from 'react-table';
import { ROUTES } from '../../constants/routes';

import { IntegrationsList } from './IntegrationsList';
import { ITableIntegration } from './types';

export const IntegrationsListPage = () => {
  const navigate = useNavigate();

  const onRowClickCallback = useCallback(
    (item: Row<ITableIntegration>) => {
      navigate(`/integrations/${item.original.integrationId}`);
    },
    [navigate]
  );

  const onAddProviderClickCallback = useCallback(() => {
    navigate(ROUTES.INTEGRATIONS_CREATE);
  }, [navigate]);

  const onChannelClickCallback = useCallback(
    (channel: ChannelTypeEnum) => {
      navigate(`${ROUTES.INTEGRATIONS_CREATE}?scrollTo=${channel}`);
    },
    [navigate]
  );

  return (
    <IntegrationsList
      onAddProviderClick={onAddProviderClickCallback}
      onRowClickCallback={onRowClickCallback}
      onChannelClick={onChannelClickCallback}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ChannelTypeEnum } from '@novu/shared';
import { useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import { Row } from 'react-table';
import { ROUTES } from '../../constants/routes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/UpdateProviderPage.tsx
Tamaño: 479 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useNavigate, useParams } from 'react-router-dom';

import { ROUTES } from '../../constants/routes';
import { UpdateProviderSidebar } from './components/multi-provider/v2';

export function UpdateProviderPage() {
  const { integrationId } = useParams();
  const navigate = useNavigate();

  const onClose = () => {
    navigate(ROUTES.INTEGRATIONS);
  };

  return <UpdateProviderSidebar key={integrationId} isOpened onClose={onClose} integrationId={integrationId} />;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useNavigate, useParams } from 'react-router-dom';
import { ROUTES } from '../../constants/routes';
import { UpdateProviderSidebar } from './components/multi-provider/v2';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/constants.ts
Tamaño: 995 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { ChannelTypeEnum, FILTER_TO_LABEL, FilterPartTypeEnum } from '@novu/shared';

export enum IntegrationsStoreModalAnalytics {
  CREATE_INTEGRATION_FORM_SUBMIT = 'Create Integration Form Submit - [Integrations Store Modal]',
  UPDATE_INTEGRATION_FORM_SUBMIT = 'Update Integration Form Submit - [Integrations Store Modal]',
  SELECT_PROVIDER_CLICK = 'Select Provider Click - [Integrations Store Modal]',
  CLOSE_MODAL = 'Close Modal - [Integrations Store Modal]',
  CREATE_INTEGRATION_INSTANCE = 'Create Integration Instance - [Integrations Multi Provider]',
}

export const CHANNEL_TYPE_TO_ICON_NAME = {
  [ChannelTypeEnum.EMAIL]: 'envelope',
  [ChannelTypeEnum.SMS]: 'message',
  [ChannelTypeEnum.PUSH]: 'mobile',
  [ChannelTypeEnum.CHAT]: 'paper-plane',
  [ChannelTypeEnum.IN_APP]: 'bell',
};

export const defaultIntegrationConditionsProps = {
  label: 'provider instance',
  filterPartsList: [{ value: FilterPartTypeEnum.TENANT, label: FILTER_TO_LABEL[FilterPartTypeEnum.TENANT] }],
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  enum
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/types.ts
Tamaño: 1443 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import type {
  ChannelTypeEnum,
  IConfigCredential,
  ICredentials,
  ILogoFileName,
  IProviderConfig,
  ProvidersIdEnum,
} from '@novu/shared';
import { IConditions } from '../../components/conditions';

export interface ITableIntegration {
  name: string;
  order: number;
  primary: boolean;
  integrationId: string;
  identifier: string;
  provider: string;
  providerId: ProvidersIdEnum;
  channel: string;
  channelType: ChannelTypeEnum;
  environment: string;
  active: boolean;
  logoFileName: IProviderConfig['logoFileName'];
  conditions?: IConditions[];
}

export interface IIntegratedProvider {
  providerId: ProvidersIdEnum;
  integrationId: string;
  displayName: string;
  channel: ChannelTypeEnum;
  hasCredentials?: boolean;
  credentials: IConfigCredential[];
  docReference: string;
  comingSoon: boolean;
  active: boolean;
  connected: boolean;
  conditions?: IConditions[];
  logoFileName: ILogoFileName;
  betaVersion: boolean;
  novu?: boolean;
  environmentId?: string;
  name?: string;
  identifier?: string;
  primary: boolean;
}

export interface IntegrationEntity {
  _id?: string;
  _environmentId: string;
  _organizationId: string;
  name: string;
  identifier: string;
  providerId: ProvidersIdEnum;
  channel: ChannelTypeEnum;
  credentials: ICredentials;
  conditions?: IConditions[];
  active: boolean;
  deleted: boolean;
  order: number;
  primary: boolean;
  deletedAt: string;
  deletedBy: string;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  interface
- export  interface
- export  interface

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/useGetIntegrationsByChannel.ts
Tamaño: 1019 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { ChannelTypeEnum } from '@novu/shared';
import { useMemo } from 'react';
import { useEnvironment, useIntegrations } from '../../hooks';

export interface IUseGetIntegrationsByChannelProps {
  channelType: ChannelTypeEnum;
}

/**
 * Fetch the integrations for a specified channel type in the current environment.
 */
export const useGetIntegrationsByChannel = ({ channelType }: IUseGetIntegrationsByChannelProps) => {
  const { environment, isLoaded } = useEnvironment();
  const { integrations: allIntegrations, loading: areIntegrationsLoading } = useIntegrations();
  const isLoading = !isLoaded || areIntegrationsLoading;

  const integrations = useMemo(() => {
    if (isLoading || !environment || !allIntegrations) {
      return [];
    }

    return allIntegrations.filter(
      (integration) => integration.channel === channelType && integration._environmentId === environment._id
    );
  }, [allIntegrations, isLoading, environment, channelType]);

  return {
    isLoading,
    integrations,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useGetIntegrationsByChannel({ channelType }: IUseGetIntegrationsByChannelProps))
 - integrations(useMemo(())
Declaraciones 'export' encontradas:
- export  interface
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/useProviders.ts
Tamaño: 4952 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import {
  ChannelTypeEnum,
  IConfigCredential,
  IProviderConfig,
  NOVU_SMS_EMAIL_PROVIDERS,
  PushProviderIdEnum,
  providers,
} from '@novu/shared';
import cloneDeep from 'lodash.clonedeep';
import { useMemo } from 'react';
import { IS_SELF_HOSTED } from '../../config';
import { useIntegrations } from '../../hooks';
import type { IIntegratedProvider, IntegrationEntity } from './types';

/*
 * temporary patch before migration script
 */
function fcmFallback(integration: IntegrationEntity | undefined, clonedCredentials) {
  if (integration?.providerId === PushProviderIdEnum.FCM) {
    const serviceAccount = integration?.credentials.serviceAccount
      ? integration?.credentials.serviceAccount
      : integration?.credentials.user;

    clonedCredentials?.forEach((cred) => {
      if (cred.key === 'serviceAccount') {
        cred.value = serviceAccount;
      }
    });
  }
}

function initializeProvidersByIntegration(integrations: IntegrationEntity[]): IIntegratedProvider[] {
  return integrations
    .filter((integrationItem) => {
      if (!IS_SELF_HOSTED) {
        return true;
      }

      return !NOVU_SMS_EMAIL_PROVIDERS.includes(integrationItem.providerId);
    })
    .map((integrationItem) => {
      const providerItem = providers.find((provItem) => integrationItem.providerId === provItem.id) as IProviderConfig;

      const clonedCredentials: IConfigCredential[] = cloneDeep(providerItem?.credentials);

      if (
        typeof clonedCredentials === 'object' &&
        integrationItem?.credentials &&
        Object.keys(clonedCredentials).length !== 0
      ) {
        clonedCredentials.forEach((credential) => {
          if (credential.type === 'boolean' || credential.type === 'switch') {
            credential.value = integrationItem.credentials[credential.key];

            return;
          }

          credential.value = integrationItem.credentials[credential.key]?.toString();
        });
      }

      // Remove this like after the run of the fcm-credentials-migration script
      fcmFallback(integrationItem, clonedCredentials);

      const hasCredentials = integrationItem?.credentials && Object.keys(integrationItem?.credentials).length !== 0;

      return {
        providerId: providerItem?.id || integrationItem.providerId,
        integrationId: integrationItem?._id ? integrationItem._id : '',
        displayName: providerItem?.displayName || integrationItem.name,
        channel: providerItem?.channel || integrationItem.channel,
        hasCredentials,
        credentials: (integrationItem?.credentials ? clonedCredentials : providerItem?.credentials) || [],
        docReference: providerItem?.docReference || '',
        comingSoon: !!providerItem?.comingSoon,
        betaVersion: !!providerItem?.betaVersion,
        active: integrationItem?.active ?? false,
        connected: !!integrationItem,
        logoFileName: providerItem?.logoFileName,
        environmentId: integrationItem?._environmentId,
        name: integrationItem?.name,
        identifier: integrationItem?.identifier,
        primary: integrationItem?.primary ?? false,
        conditions: integrationItem?.conditions ?? [],
      };
    });
}

function isConnected(provider: IIntegratedProvider) {
  if (!provider.credentials.length) return false;

  return provider.credentials?.some((cred) => {
    return cred.value;
  });
}

const sortProviders = (unsortedProviders: IIntegratedProvider[]) => {
  return unsortedProviders
    .sort((a, b) => Number(b.active) - Number(a.active))
    .sort((a, b) => Number(isConnected(b)) - Number(isConnected(a)));
};

export const useProviders = () => {
  const { integrations, loading: isLoading, refetch } = useIntegrations();

  const sortedProviders = useMemo(() => {
    if (integrations) {
      const initializedProviders = initializeProvidersByIntegration(integrations);

      return {
        emailProviders: sortProviders(
          initializedProviders.filter((providerItem) => providerItem.channel === ChannelTypeEnum.EMAIL)
        ),
        smsProvider: sortProviders(
          initializedProviders.filter((providerItem) => providerItem.channel === ChannelTypeEnum.SMS)
        ),
        chatProvider: sortProviders(
          initializedProviders.filter((providerItem) => providerItem.channel === ChannelTypeEnum.CHAT)
        ),
        pushProvider: sortProviders(
          initializedProviders.filter((providerItem) => providerItem.channel === ChannelTypeEnum.PUSH)
        ),
        inAppProvider: sortProviders(
          initializedProviders.filter((providerItem) => providerItem.channel === ChannelTypeEnum.IN_APP)
        ),
        providers: initializedProviders,
      };
    }

    return {
      emailProviders: [],
      smsProvider: [],
      chatProvider: [],
      pushProvider: [],
      inAppProvider: [],
      providers: [],
    };
  }, [integrations]);

  return {
    ...sortedProviders,
    isLoading,
    refetch,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - fcmFallback(integration: IntegrationEntity | undefined, clonedCredentials)
 - initializeProvidersByIntegration(integrations: IntegrationEntity[])
 - isConnected(provider: IIntegratedProvider)
Asignaciones con arrow functions encontradas (posibles funciones):
 - serviceAccount(integration?.credentials.serviceAccount
      ? integration?.credentials.serviceAccount
      : inte...)
 - value(serviceAccount;
      }
    });
  }
}

function initializeProvidersByIntegration(integrations: Integ...)
 - providerItem(providers.find((provItem))
 - sortProviders(unsortedProviders: IIntegratedProvider[]))
 - useProviders())
 - sortedProviders(useMemo(())
 - initializedProviders(initializeProvidersByIntegration(integrations);

      return {
        emailProviders: sortProvider...)
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/utils.ts
Tamaño: 1286 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { IEnvironment, providers } from '@novu/shared';

import type { IntegrationEntity, ITableIntegration } from './types';
import { CONTEXT_PATH } from '../../config';
import { CHANNEL_TYPE_TO_STRING } from '../../utils/channels';

export const mapToTableIntegration = (
  integration: IntegrationEntity,
  environments?: IEnvironment[]
): ITableIntegration => {
  const logoFileName = {
    light: `${CONTEXT_PATH}/static/images/providers/light/square/${integration.providerId}.svg`,
    dark: `${CONTEXT_PATH}/static/images/providers/dark/square/${integration.providerId}.svg`,
  };
  const environment = environments?.find((env) => env._id === integration._environmentId);
  const provider = providers.find((el) => el.id === integration.providerId);

  return {
    name: integration.name ?? provider?.displayName,
    primary: integration.primary,
    order: integration.order,
    integrationId: integration._id ?? '',
    identifier: integration.identifier,
    provider: provider?.displayName ?? '',
    channel: CHANNEL_TYPE_TO_STRING[integration.channel],
    channelType: integration.channel,
    environment: environment?.name ?? '',
    active: integration.active,
    logoFileName,
    providerId: integration.providerId,
    conditions: integration.conditions,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - mapToTableIntegration(integration: IntegrationEntity,
  environments?: IEnvironment[]
): ITableIntegration)
 - environment(environments?.find((env))
 - provider(providers.find((el))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/CardStatusBar.tsx
Tamaño: 1249 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { BoltGradient, colors, Text } from '@novu/design-system';

export function CardStatusBar({ active }: { active: boolean }) {
  const iconProps = active ? { fill: colors.success } : {};

  return (
    <Wrapper>
      <ActiveWrapper active={active}>
        <BoltGradient {...iconProps} />
        <StyledText data-test-id="card-status-bar-active">{active ? 'Active' : 'Disabled'}</StyledText>
      </ActiveWrapper>
    </Wrapper>
  );
}

const StyledText = styled(Text)`
  display: inline-block;
  margin: 0 6px;
`;

const SideElementBase = styled.div`
  display: flex;
  align-items: center;
`;

const ActiveWrapper = styled(SideElementBase)<{ active: boolean }>`
  ${({ active }) => {
    return !active
      ? `
      ${StyledText},
      {
       color: ${colors.B40};
        svg {
          fill: ${colors.B40};
        }  
      }
    `
      : `${StyledText},
      {
      background: ${colors.success};
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
        svg {
          fill: url(#paint0_linear_1062_464);
        }
      }
      `;
  }}
`;

const Wrapper = styled.div`
  display: flex;
  justify-content: space-between;

  svg {
    width: 16px;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { BoltGradient, colors, Text } from '@novu/design-system';
export function CardStatusBar({ active }: { active: boolean }) {
const iconProps = active ? { fill: colors.success } : {};
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/ChannelGroup.tsx
Tamaño: 3356 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Grid } from '@mantine/core';
import { Title } from '@novu/design-system';
import { ChannelTypeEnum, EmailProviderIdEnum, SmsProviderIdEnum } from '@novu/shared';
import { ProviderCard } from './ProviderCard';

import type { IIntegratedProvider } from '../types';
import { NovuIntegrationCard } from './NovuIntegrationCard';
import { When } from '../../../components/utils/When';
import { CONTEXT_PATH, IS_SELF_HOSTED } from '../../../config';

export function ChannelGroup({
  title,
  providers,
  onProviderClick,
  channel,
}: {
  providers: IIntegratedProvider[];
  title: string;
  onProviderClick: (visible: boolean, create: boolean, provider: IIntegratedProvider) => void;
  channel: ChannelTypeEnum;
}) {
  function handlerOnConnectClick(visible: boolean, create: boolean, provider: IIntegratedProvider) {
    onProviderClick(visible, create, provider);
  }

  return (
    <Grid mb={50}>
      <Grid.Col span={12} data-test-id={`integration-group-${title.toLowerCase()}`}>
        <Title size={2}>{title}</Title>
      </Grid.Col>
      <When truthy={channel === ChannelTypeEnum.EMAIL && !IS_SELF_HOSTED}>
        <Grid.Col sm={12} xs={6} md={4} lg={3}>
          <NovuIntegrationCard
            provider={{
              providerId: EmailProviderIdEnum.Novu,
              integrationId: '',
              displayName: 'Novu Email Provider',
              channel: ChannelTypeEnum.EMAIL,
              credentials: [],
              docReference: '',
              comingSoon: false,
              active:
                providers.filter((provider) => provider.active && provider.channel === ChannelTypeEnum.EMAIL).length ===
                0,
              connected: true,
              logoFileName: {
                dark: `${CONTEXT_PATH}/static/images/logo-light.webp`,
                light: `${CONTEXT_PATH}/static/images/logo.webp`,
              },
              betaVersion: false,
              novu: true,
              primary: false,
            }}
            onConnectClick={handlerOnConnectClick}
          />
        </Grid.Col>
      </When>

      <When truthy={channel === ChannelTypeEnum.SMS && !IS_SELF_HOSTED}>
        <Grid.Col sm={12} xs={6} md={4} lg={3}>
          <NovuIntegrationCard
            provider={{
              providerId: SmsProviderIdEnum.Novu,
              integrationId: '',
              displayName: 'Novu SMS Provider',
              channel: ChannelTypeEnum.SMS,
              credentials: [],
              docReference: '',
              comingSoon: false,
              active:
                providers.filter((provider) => provider.active && provider.channel === ChannelTypeEnum.SMS).length ===
                0,
              connected: true,
              logoFileName: {
                dark: `${CONTEXT_PATH}/static/images/logo-light.webp`,
                light: `${CONTEXT_PATH}/static/images/logo.webp`,
              },
              betaVersion: false,
              novu: true,
              primary: false,
            }}
            onConnectClick={handlerOnConnectClick}
          />
        </Grid.Col>
      </When>
      {providers.map((provider) => (
        <Grid.Col sm={12} xs={6} md={4} lg={3} key={provider.providerId}>
          <ProviderCard provider={provider} onConnectClick={handlerOnConnectClick} />
        </Grid.Col>
      ))}
    </Grid>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Grid } from '@mantine/core';
import { Title } from '@novu/design-system';
import { ChannelTypeEnum, EmailProviderIdEnum, SmsProviderIdEnum } from '@novu/shared';
import { ProviderCard } from './ProviderCard';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/ConditionCell.tsx
Tamaño: 1183 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, useMantineColorScheme } from '@mantine/core';
import { colors, IExtendedCellProps, withCellLoading, Condition } from '@novu/design-system';
import type { ITableIntegration } from '../types';

const ConditionCellBase = ({ row: { original } }: IExtendedCellProps<ITableIntegration>) => {
  const { colorScheme } = useMantineColorScheme();

  if (!original.conditions || original.conditions.length < 1) {
    return (
      <div
        data-test-id="integration-conditions-cell"
        style={{
          color: colorScheme === 'dark' ? colors.B40 : colors.B80,
        }}
      >
        -
      </div>
    );
  }

  return (
    <Group
      data-test-id="integration-conditions-cell"
      style={{
        padding: '4px 8px',
        textAlign: 'center',
        borderRadius: '60px',
        background: colorScheme === 'dark' ? colors.B30 : colors.B85,
        width: '43px',
      }}
      spacing={4}
    >
      <Condition />
      <div style={{ color: colorScheme === 'dark' ? colors.B80 : colors.B40 }}>
        {original.conditions?.[0]?.children?.length}
      </div>
    </Group>
  );
};

export const ConditionCell = withCellLoading(ConditionCellBase);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, useMantineColorScheme } from '@mantine/core';
import { colors, IExtendedCellProps, withCellLoading, Condition } from '@novu/design-system';
import type { ITableIntegration } from '../types';
const ConditionCellBase = ({ row: { original } }: IExtendedCellProps<ITableIntegration>) => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/ConditionIconButton.tsx
Tamaño: 2459 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import styled from '@emotion/styled';
import { Group } from '@mantine/core';
import {
  colors,
  When,
  Text,
  Modal,
  Button,
  Title,
  ActionButton,
  Condition,
  ConditionPlus,
  Warning,
} from '@novu/design-system';

const RemovesPrimary = () => {
  return (
    <Text mt={4} color="#EAA900">
      This action replaces the
      <br />
      primary provider flag
    </Text>
  );
};

export const ConditionIconButton = ({
  conditions = 0,
  primary = false,
  onClick,
}: {
  conditions?: number;
  primary?: boolean;
  onClick: () => void;
}) => {
  const [modalOpen, setModalOpen] = useState(false);

  return (
    <>
      <ActionButton
        tooltip={
          <>
            {conditions > 0 ? 'Edit' : 'Add'} Conditions
            <When truthy={primary}>
              <RemovesPrimary />
            </When>
          </>
        }
        tooltipPosition="bottom"
        Icon={conditions === 0 ? ConditionPlus : Condition}
        text={conditions > 0 ? `${conditions}` : undefined}
        onClick={() => {
          if (primary && conditions === 0) {
            setModalOpen(true);

            return;
          }
          onClick();
        }}
        data-test-id="header-add-conditions-btn"
      />
      <Modal
        opened={modalOpen}
        data-test-id="remove-primary-flag-modal"
        title={
          <Group spacing={8}>
            <Warning color="#EAA900" />
            <Title size={2} color="#EAA900">
              Primary flag will be removed
            </Title>
          </Group>
        }
        size="lg"
        onClose={() => {
          setModalOpen(false);
        }}
      >
        <Text color={colors.B60}>
          Adding conditions to the primary provider instance removes its primary status when a user applies changes by
          clicking the Update button. This can potentially cause notification failures for the steps that were using the
          primary provider.
        </Text>
        <Group mt={30} position="right">
          <Button
            variant="outline"
            onClick={() => {
              setModalOpen(false);
            }}
          >
            Cancel
          </Button>
          <Button
            onClick={() => {
              onClick();
              setModalOpen(false);
            }}
          >
            <Group spacing={8}>Got it</Group>
          </Button>
        </Group>
      </Modal>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import styled from '@emotion/styled';
import { Group } from '@mantine/core';
import {
colors,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/FrameworkDisplay.tsx
Tamaño: 3970 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Text, UnstyledButton, Group, useMantineTheme } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';
import { colors } from '@novu/notification-center';
import { AngularGradient, Copy, ReactGradient, VueGradient, JsGradient, CodeGradient } from '@novu/design-system';
import { UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';

import { useEnvironment } from '../../../hooks';
import { FrameworkEnum } from '../../quick-start/consts';

export const FrameworkDisplay = ({ setFramework }: { setFramework: (framework: string) => void }) => {
  const { environment } = useEnvironment();
  const theme = useMantineTheme();
  const clipboardEnvironmentIdentifier = useClipboard({ timeout: 1000 });
  const environmentIdentifier = environment?.identifier ?? '';

  const itemStyle = {
    background: theme.colorScheme === 'dark' ? colors.B17 : colors.B98,
    borderRadius: 8,
    padding: 16,
    lineHeight: '20px',
    fontSize: '14px',
  };

  return (
    <>
      <Text
        mb={16}
        sx={{
          color: theme.colorScheme === 'dark' ? colors.white : colors.B30,
        }}
      >
        Application ID:{' '}
        <Text display="inline" color={theme.colorScheme === 'dark' ? colors.B80 : colors.B60}>
          {environmentIdentifier}
        </Text>
        <UnstyledButton
          onClick={() => {
            clipboardEnvironmentIdentifier.copy(environmentIdentifier);
          }}
          ml={8}
        >
          <Copy
            color={theme.colorScheme === 'dark' ? colors.B80 : colors.B60}
            width={20}
            height={20}
            viewBox="0 0 25 25"
          />
        </UnstyledButton>
      </Text>
      <Group spacing={16} grow>
        <UnstyledButton
          sx={itemStyle}
          onClick={() => {
            setFramework(FrameworkEnum.REACT);
          }}
          data-test-id="in-app-select-framework-react"
        >
          <Group spacing={12}>
            <ReactGradient /> React
          </Group>
        </UnstyledButton>
        <UnstyledButton
          onClick={() => {
            setFramework(FrameworkEnum.ANGULAR);
          }}
          sx={itemStyle}
          data-test-id="in-app-select-framework-angular"
        >
          <Group spacing={12}>
            <AngularGradient /> Angular
          </Group>
        </UnstyledButton>
        <UnstyledButton
          onClick={() => {
            setFramework(FrameworkEnum.VUE);
          }}
          data-test-id="in-app-select-framework-vue"
          sx={itemStyle}
        >
          <Group spacing={12}>
            <VueGradient /> Vue
          </Group>
        </UnstyledButton>
      </Group>
      <Group spacing={16} mt={16} grow>
        <a
          href={`https://docs.novu.co/notification-center/client/web-component${UTM_CAMPAIGN_QUERY_PARAM}`}
          onClick={() => {
            setFramework('');
          }}
          rel="noreferrer"
          target="_blank"
          style={itemStyle}
          data-test-id="in-app-select-framework-web-component"
        >
          <Group noWrap spacing={12}>
            <JsGradient /> <Text truncate="end">Web Component</Text>
          </Group>
        </a>
        <a
          href={`https://docs.novu.co/notification-center/client/headless/get-started${UTM_CAMPAIGN_QUERY_PARAM}`}
          onClick={() => {
            setFramework('');
          }}
          rel="noreferrer"
          target="_blank"
          style={itemStyle}
          data-test-id="in-app-select-framework-headless"
        >
          <Group spacing={12}>
            <JsGradient /> Headless
          </Group>
        </a>
        <UnstyledButton
          onClick={() => {
            setFramework(FrameworkEnum.JS);
          }}
          data-test-id="in-app-select-framework-iframe"
          sx={itemStyle}
        >
          <Group spacing={12}>
            <CodeGradient /> iFrame
          </Group>
        </UnstyledButton>
      </Group>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Text, UnstyledButton, Group, useMantineTheme } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';
import { colors } from '@novu/notification-center';
import { AngularGradient, Copy, ReactGradient, VueGradient, JsGradient, CodeGradient } from '@novu/design-system';
import { UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/IntegrationChannel.tsx
Tamaño: 1472 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Skeleton } from '@mantine/core';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { ChannelTypeEnum } from '@novu/shared';

import { colors } from '@novu/design-system';
import { CHANNEL_TYPE_TO_ICON_NAME } from '../constants';

const IconSkeleton = styled(Skeleton)`
  width: 16px;
  height: 16px;
`;

const TextSkeleton = styled(Skeleton)`
  width: 80px;
  height: 16px;
`;

const ChannelCellHolder = styled.div`
  display: flex;
  align-items: flex-end;
  gap: 8px;
`;

const IconStyled = styled(FontAwesomeIcon)`
  font-size: 16px;
  color: ${colors.B40};
`;

const Text = styled.span<{ sameColor: boolean }>`
  color: ${({ theme, sameColor }) => {
    if (sameColor) {
      return colors.B40;
    }

    return theme.colorScheme === 'dark' ? colors.white : colors.B40;
  }};
  font-size: 14px;
`;

export const IntegrationChannel = ({
  name,
  type,
  testId,
  sameColor = false,
  isLoading,
}: {
  name: string;
  type?: ChannelTypeEnum;
  testId?: string;
  sameColor?: boolean;
  isLoading?: boolean;
}) => {
  if (isLoading) {
    return (
      <ChannelCellHolder data-test-id={testId}>
        <IconSkeleton />
        <TextSkeleton />
      </ChannelCellHolder>
    );
  }

  return (
    <ChannelCellHolder data-test-id={testId}>
      <IconStyled icon={CHANNEL_TYPE_TO_ICON_NAME[type ?? ''] as any} />
      <Text sameColor={sameColor}>{name}</Text>
    </ChannelCellHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Skeleton } from '@mantine/core';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { ChannelTypeEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/IntegrationChannelCell.tsx
Tamaño: 545 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IExtendedCellProps, withCellLoading } from '@novu/design-system';
import type { ITableIntegration } from '../types';
import { IntegrationChannel } from './IntegrationChannel';

const IntegrationChannelBase = ({ row: { original } }: IExtendedCellProps<ITableIntegration>) => {
  return <IntegrationChannel name={original.channel} testId="integration-channel-cell" type={original.channelType} />;
};

export const IntegrationChannelCell = withCellLoading(IntegrationChannelBase, {
  loadingTestId: 'integration-channel-cell-loading',
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IExtendedCellProps, withCellLoading } from '@novu/design-system';
import type { ITableIntegration } from '../types';
import { IntegrationChannel } from './IntegrationChannel';
const IntegrationChannelBase = ({ row: { original } }: IExtendedCellProps<ITableIntegration>) => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/IntegrationEnvironmentCell.tsx
Tamaño: 610 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IExtendedCellProps, withCellLoading } from '@novu/design-system';
import type { ITableIntegration } from '../types';
import { IntegrationEnvironmentPill } from './IntegrationEnvironmentPill';

const IntegrationEnvironment = ({ row: { original } }: IExtendedCellProps<ITableIntegration>) => {
  if (!original.environment) {
    return null;
  }

  return <IntegrationEnvironmentPill name={original.environment} testId="integration-environment-cell" />;
};

export const IntegrationEnvironmentCell = withCellLoading(IntegrationEnvironment, {
  loadingTestId: 'integration-environment-cell-loading',
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IExtendedCellProps, withCellLoading } from '@novu/design-system';
import type { ITableIntegration } from '../types';
import { IntegrationEnvironmentPill } from './IntegrationEnvironmentPill';
const IntegrationEnvironment = ({ row: { original } }: IExtendedCellProps<ITableIntegration>) => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/IntegrationEnvironmentPill.tsx
Tamaño: 1387 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Skeleton } from '@mantine/core';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';

import { colors } from '@novu/design-system';

const SkeletonPill = styled(Skeleton)`
  width: 120px;
  height: 28px;
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B30 : colors.B85)};
  border-radius: 16px;
`;

const EnvironmentPillHolder = styled.div`
  width: fit-content;
  display: flex;
  align-items: flex-end;
  gap: 8px;
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B30 : colors.B85)};
  border-radius: 16px;
  padding: 6px 8px;
`;

const EnvironmentName = styled.span`
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B80 : colors.B40)};
  font-size: 14px;
`;

const EnvironmentIcon = styled(FontAwesomeIcon)`
  font-size: 16px;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B60 : colors.B40)};
`;

export const IntegrationEnvironmentPill = ({
  name,
  testId,
  isLoading,
}: {
  name: string;
  testId?: string;
  isLoading?: boolean;
}) => {
  if (isLoading) {
    return <SkeletonPill />;
  }

  return (
    <EnvironmentPillHolder data-test-id={testId}>
      <EnvironmentIcon icon={name.toLowerCase() === 'production' ? 'rocket' : 'tools'} />
      <EnvironmentName>{name}</EnvironmentName>
    </EnvironmentPillHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Skeleton } from '@mantine/core';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { colors } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/IntegrationInput.tsx
Tamaño: 5198 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Input, PasswordInput, Select, Switch, Textarea, Tooltip } from '@novu/design-system';
import { CredentialsKeyEnum, IConfigCredential, secureCredentials } from '@novu/shared';
import { IntegrationSecretTextarea } from './IntegrationSecretTextarea';

const SwitchWrapper = styled.div`
  display: flex;
  align-items: center;
`;

const SwitchDescription = styled.div`
  color: ${({ theme }) => `${theme.colorScheme === 'dark' ? theme.colors.dark[3] : theme.colors.gray[6]}`};
  font-size: 14px !important;
  font-weight: 400;
  margin-top: '0px';
  margin-bottom: '10px';
  line-height: '17px';
`;

const SwitchLabel = styled.div`
  color: ${({ theme }) => `${theme.colorScheme === 'dark' ? theme.white : theme.colors.gray[8]}`};
  font-size: 14px !important;
  font-weight: 700;
  margin: 5px auto 5px 0px;
  line-height: 17px;
`;

export function IntegrationInput({
  credential,
  errors,
  field,
  register,
  ignoreTls,
}: {
  credential: IConfigCredential;
  errors: any;
  field: any;
  register?: any;
  ignoreTls?: boolean;
}) {
  if (isNeededToHide(credential.key)) {
    if (credential.type === 'text') {
      return <IntegrationSecretTextarea credential={credential} errors={errors} field={field} register={register} />;
    }

    return (
      <PasswordInput
        label={credential.displayName}
        required={credential.required}
        placeholder={credential.displayName}
        description={credential.description ?? ''}
        data-test-id={credential.key}
        error={errors[credential.key]?.message}
        {...field}
        {...register?.(credential.key, {
          required: credential.required && `Please enter a ${credential.displayName.toLowerCase()}`,
        })}
      />
    );
  }

  if (credential.type === 'text') {
    return (
      <Textarea
        label={credential.displayName}
        required={credential.required}
        placeholder={credential.displayName}
        description={credential.description ?? ''}
        data-test-id={credential.key}
        error={errors[credential.key]?.message}
        {...field}
        {...register?.(credential.key, {
          required: credential.required && `Please enter a ${credential.displayName.toLowerCase()}`,
        })}
      />
    );
  }

  if (credential.type === 'dropdown') {
    return (
      <Select
        {...field}
        label={credential.displayName}
        required={credential.required}
        description={credential.description}
        data-test-id={credential.key}
        error={errors[credential.key]?.message}
        data={credential.dropdown?.map((item) => ({
          label: item.name,
          value: item.value,
        }))}
      />
    );
  }

  if (credential.type === 'switch') {
    let switchComponent = (
      <Switch
        label={field.value ? 'Active' : 'Disabled'}
        required={credential.required}
        placeholder={credential.displayName}
        data-test-id={credential.key}
        error={errors[credential.key]?.message}
        {...register?.(credential.key)}
        checked={field.value}
        onChange={field.onChange}
      />
    );

    if (credential.tooltip) {
      switchComponent = (
        <Tooltip
          disabled={credential.tooltip.when !== field.value}
          withinPortal={false}
          position="top"
          width={250}
          multiline
          label={credential.tooltip.text}
        >
          <span>{switchComponent}</span>
        </Tooltip>
      );
    }

    return (
      <>
        <SwitchWrapper>
          {credential.displayName && <SwitchLabel>{credential.displayName}</SwitchLabel>}
          {switchComponent}
        </SwitchWrapper>
        {credential.description && <SwitchDescription>{credential.description}</SwitchDescription>}
      </>
    );
  }

  if (credential.type === 'boolean') {
    return (
      <>
        <SwitchWrapper>
          {credential.displayName && <SwitchLabel>{credential.displayName}</SwitchLabel>}
          <Switch
            required={credential.required}
            placeholder={credential.displayName}
            data-test-id={credential.key}
            error={errors[credential.key]?.message}
            {...register?.(credential.key)}
            checked={field.value}
            onChange={field.onChange}
          />
        </SwitchWrapper>
        {credential.description && <SwitchDescription>{credential.description}</SwitchDescription>}
      </>
    );
  }

  return (
    <>
      {credential.key === 'tlsOptions' && ignoreTls ? null : (
        <Input
          label={credential.displayName}
          required={credential.required}
          placeholder={credential.displayName}
          description={credential.description ?? ''}
          data-test-id={credential.key}
          error={errors[credential.key]?.message}
          {...field}
          {...register?.(credential.key, {
            required: credential.required && `Please enter a ${credential.displayName.toLowerCase()}`,
          })}
        />
      )}
    </>
  );
}

function isNeededToHide(keyString: CredentialsKeyEnum): boolean {
  return secureCredentials.some((param) => param === keyString);
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Input, PasswordInput, Select, Switch, Textarea, Tooltip } from '@novu/design-system';
import { CredentialsKeyEnum, IConfigCredential, secureCredentials } from '@novu/shared';
import { IntegrationSecretTextarea } from './IntegrationSecretTextarea';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/IntegrationNameCell.tsx
Tamaño: 3036 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Skeleton, useMantineColorScheme } from '@mantine/core';
import { useState } from 'react';

import { colors, IExtendedCellProps, Popover, Text, Star } from '@novu/design-system';
import { ChannelTypeEnum } from '@novu/shared';
import type { ITableIntegration } from '../types';

const CellHolder = styled.div`
  display: flex;
  align-items: center;
  gap: 16px;
`;

const NameHolder = styled.div`
  display: flex;
  gap: 8px;
`;

const DetailsHolder = styled.div`
  display: flex;
  flex-direction: column;
  gap: 4px;
`;

const Free = styled.span`
  color: ${colors.success};
  font-size: 14px;
  min-width: fit-content;
`;

const Identifier = styled.span`
  color: ${colors.B40};
  font-size: 12px;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
`;

const IconHolder = styled.div`
  position: relative;
  display: flex;
`;

const Image = styled.img`
  width: 24px;
  min-width: 24px;
  height: 24px;
`;

const Description = styled(Text)`
  color: ${colors.B60};
  font-size: 14px;
  line-height: 20px;
`;

export const IntegrationNameCell = ({ row: { original }, isLoading }: IExtendedCellProps<ITableIntegration>) => {
  const { colorScheme } = useMantineColorScheme();
  const [isPopoverOpened, setPopoverOpened] = useState(false);

  if (isLoading) {
    return (
      <CellHolder data-test-id="integration-name-cell-loading">
        <Skeleton width={24} height={24} />
        <DetailsHolder>
          <NameHolder>
            <Skeleton width={120} height={18} />
          </NameHolder>
          <Skeleton width={100} height={14} />
        </DetailsHolder>
      </CellHolder>
    );
  }

  return (
    <CellHolder data-test-id="integration-name-cell">
      <Popover
        opened={isPopoverOpened && original.primary}
        withArrow
        withinPortal
        offset={10}
        transitionDuration={300}
        position="top"
        width={230}
        styles={{ dropdown: { minHeight: 'initial !important' } }}
        content={
          <Description>
            {`The primary provider instance within the ${original.channel.toLowerCase()} ` +
              `channel in the ${original.environment.toLowerCase()} environment.`}
          </Description>
        }
        target={
          <IconHolder onMouseEnter={() => setPopoverOpened(true)} onMouseLeave={() => setPopoverOpened(false)}>
            <Image src={original.logoFileName[`${colorScheme}`]} alt={original.name} />
            {original.primary && <Star data-test-id="integration-name-cell-primary" />}
          </IconHolder>
        }
      />

      <DetailsHolder>
        <NameHolder>
          <Text rows={1}>{original.name}</Text>
          {original.name?.toLowerCase().includes('novu') && original.channelType !== ChannelTypeEnum.IN_APP && (
            <Free>Test Provider</Free>
          )}
        </NameHolder>
        {original.identifier && <Identifier>Provider identifier: {original.identifier}</Identifier>}
      </DetailsHolder>
    </CellHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Skeleton, useMantineColorScheme } from '@mantine/core';
import { useState } from 'react';
import { colors, IExtendedCellProps, Popover, Text, Star } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/IntegrationSecretTextarea.tsx
Tamaño: 2187 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Grid, UnstyledButton } from '@mantine/core';
import { IconOutlineVisibility, IconOutlineVisibilityOff, Textarea } from '@novu/design-system';
import { IConfigCredential } from '@novu/shared';
import { useState } from 'react';
import { When } from '../../../components/utils/When';

export const IntegrationSecretTextarea = ({
  credential,
  errors,
  field,
  register,
}: {
  credential: IConfigCredential;
  errors: any;
  field: any;
  register?: any;
}) => {
  const [hidden, setHidden] = useState(true);

  return (
    <Grid align="center">
      <Grid.Col span={11}>
        <When truthy={hidden}>
          <Textarea
            label={credential.displayName}
            required={credential.required}
            placeholder="*****************"
            description={
              credential.description ?? 'Click on the eye icon to edit and reveal the contents of this field'
            }
            data-test-id={credential.key}
            error={errors[credential.key]?.message}
            disabled
          />
        </When>
        <When truthy={!hidden}>
          <Textarea
            label={credential.displayName}
            required={credential.required}
            placeholder={credential.displayName}
            description={
              credential.description ?? 'Click on the eye icon to edit and reveal the contents of this field'
            }
            data-test-id={credential.key}
            error={errors[credential.key]?.message}
            {...field}
            {...register?.(credential.key, {
              required: credential.required && `Please enter a ${credential.displayName.toLowerCase()}`,
            })}
          />
        </When>
      </Grid.Col>
      <Grid.Col span={1}>
        <UnstyledButton
          sx={{
            fontSize: '20px',
          }}
          onClick={() => {
            setHidden(!hidden);
          }}
        >
          <When truthy={hidden}>
            <IconOutlineVisibility size={'20'} />
          </When>
          <When truthy={!hidden}>
            <IconOutlineVisibilityOff size={'20'} />
          </When>
        </UnstyledButton>
      </Grid.Col>
    </Grid>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Grid, UnstyledButton } from '@mantine/core';
import { IconOutlineVisibility, IconOutlineVisibilityOff, Textarea } from '@novu/design-system';
import { IConfigCredential } from '@novu/shared';
import { useState } from 'react';
import { When } from '../../../components/utils/When';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/IntegrationStatus.tsx
Tamaño: 949 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';

import { colors } from '@novu/design-system';

const StatusHolder = styled.div`
  width: fit-content;
  display: flex;
  align-items: flex-end;
  gap: 8px;
  color: ${colors.success};

  &[data-disabled='true'] {
    color: ${colors.B40};
  }
`;

const StatusIcon = styled(FontAwesomeIcon)`
  font-size: 16px;
`;

const StatusName = styled.span`
  font-size: 14px;
`;

const STATUS_TO_ICON = {
  Active: 'bolt',
  Disabled: 'bolt',
};

export const IntegrationStatus = ({ active, className }: { active: boolean; className?: string }) => {
  const status = active ? 'Active' : 'Disabled';

  return (
    <StatusHolder className={className} data-disabled={status === 'Disabled'} data-test-id="integration-status-cell">
      <StatusIcon icon={STATUS_TO_ICON[status] as any} />
      <StatusName>{status}</StatusName>
    </StatusHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { colors } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/IntegrationStatusCell.tsx
Tamaño: 485 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IExtendedCellProps, withCellLoading } from '@novu/design-system';
import type { ITableIntegration } from '../types';
import { IntegrationStatus } from './IntegrationStatus';

const IntegrationStatusCellBase = ({ row: { original } }: IExtendedCellProps<ITableIntegration>) => {
  return <IntegrationStatus active={original.active} />;
};

export const IntegrationStatusCell = withCellLoading(IntegrationStatusCellBase, {
  loadingTestId: 'integration-status-cell-loading',
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IExtendedCellProps, withCellLoading } from '@novu/design-system';
import type { ITableIntegration } from '../types';
import { IntegrationStatus } from './IntegrationStatus';
const IntegrationStatusCellBase = ({ row: { original } }: IExtendedCellProps<ITableIntegration>) => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/IntegrationsListNoData.tsx
Tamaño: 1862 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { ChannelTypeEnum } from '@novu/shared';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';

import { CardTile, colors } from '@novu/design-system';
import { CHANNEL_TYPE_TO_ICON_NAME } from '../constants';
import { CHANNEL_TYPE_TO_STRING } from '../../../utils/channels';

const NoDataHolder = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  height: 500px;
`;

const NoDataSubHeading = styled.p`
  margin: 0;
  font-size: 20px;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B40 : colors.B80)};
`;

const CardsContainer = styled.div`
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 24px;
  margin: 30px 20px;

  @media screen and (min-width: 1281px) {
    margin: 50px 40px;
  }
`;

export const CHANNELS_ORDER = [
  ChannelTypeEnum.IN_APP,
  ChannelTypeEnum.EMAIL,
  ChannelTypeEnum.CHAT,
  ChannelTypeEnum.PUSH,
  ChannelTypeEnum.SMS,
];

interface IntegrationsListNoDataProps {
  onChannelClick: (channel: ChannelTypeEnum) => void;
}

export const IntegrationsListNoData = ({ onChannelClick }: IntegrationsListNoDataProps) => {
  return (
    <NoDataHolder data-test-id="no-integrations-placeholder">
      <NoDataSubHeading>Choose a channel you want to start sending notifications</NoDataSubHeading>
      <CardsContainer>
        {CHANNELS_ORDER.map((channel) => (
          <CardTile
            key={channel}
            data-test-id={`integration-channel-card-${channel}`}
            onClick={() => {
              onChannelClick(channel);
            }}
          >
            <FontAwesomeIcon icon={CHANNEL_TYPE_TO_ICON_NAME[channel] as any} />
            <span>{CHANNEL_TYPE_TO_STRING[channel]}</span>
          </CardTile>
        ))}
      </CardsContainer>
    </NoDataHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { ChannelTypeEnum } from '@novu/shared';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { CardTile, colors } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/IntegrationsListToolbar.tsx
Tamaño: 691 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import React from 'react';

import { PlusButton } from '@novu/design-system';

const IntegrationsListToolbarHolder = styled.div`
  display: flex;
  justify-content: space-between;
`;

export const IntegrationsListToolbar = ({
  areIntegrationsLoading,
  onAddProviderClick,
}: {
  areIntegrationsLoading: boolean;
  onAddProviderClick: React.MouseEventHandler<HTMLButtonElement>;
}) => {
  return (
    <IntegrationsListToolbarHolder>
      <PlusButton
        label="Add a provider"
        onClick={onAddProviderClick}
        disabled={areIntegrationsLoading}
        data-test-id="add-provider"
      />
    </IntegrationsListToolbarHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import React from 'react';
import { PlusButton } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/LimitBar.tsx
Tamaño: 2945 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled/macro';
import { Stack, useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum } from '@novu/shared';
import { Link } from 'react-router-dom';
import { colors, Text } from '@novu/design-system';
import { When } from '../../../components/utils/When';

const WARNING_LIMIT = {
  [ChannelTypeEnum.EMAIL]: 50,
  [ChannelTypeEnum.SMS]: 5,
};

export const LimitBar = ({
  withLink = false,
  channel = ChannelTypeEnum.EMAIL,
  showDescription,
  limit,
  count,
  loading,
}: {
  withLink?: boolean;
  channel?: ChannelTypeEnum;
  showDescription?: boolean;
  limit: number;
  count: number;
  loading: boolean;
}) => {
  if (channel !== ChannelTypeEnum.EMAIL && channel !== ChannelTypeEnum.SMS) {
    return null;
  }

  if (loading) {
    return null;
  }

  if (withLink) {
    return (
      <Link to="/integrations">
        <LimitBarBase limit={limit} count={count} channel={channel} showDescription={showDescription} />
      </Link>
    );
  }

  return <LimitBarBase limit={limit} count={count} channel={channel} showDescription={showDescription} />;
};

const LimitBarBase = ({
  limit,
  count,
  channel = ChannelTypeEnum.EMAIL,
  showDescription,
}: {
  limit: number;
  count: number;
  channel?: ChannelTypeEnum;
  showDescription?: boolean;
}) => {
  const unit = channel === ChannelTypeEnum.EMAIL ? 'emails' : 'messages';

  const { colorScheme } = useMantineColorScheme();

  const isDark = colorScheme === 'dark';

  const descriptionColor = isDark ? colors.B60 : colors.B40;

  const warningLimit = WARNING_LIMIT[channel];
  const limitLeft = limit - count;

  return (
    <Stack spacing={2} sx={{ color: colors.B60 }}>
      <div>
        <Text data-test-id="limitbar-limit">
          {limitLeft}
          <span
            style={{
              color: descriptionColor,
            }}
          >
            {' '}
            {limitLeft === limit ? `${unit} per month` : `${unit} left`}
          </span>
        </Text>

        <ProgressContainer>
          <ProgressBar limitLeft={limitLeft} limit={limit} warningLimit={warningLimit} />
        </ProgressContainer>
        <When truthy={showDescription}>
          <Text color={descriptionColor}>
            To send more {unit}, configure a different {channel} provider
          </Text>
        </When>
      </div>
    </Stack>
  );
};

const ProgressContainer = styled.div`
  height: 2px;
  width: 100%;
  position: relative;
  border-radius: 3px;
  background: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B30 : colors.B60)};
  margin-top: 6px;
  margin-bottom: 6px;
  overflow: hidden;
`;

const ProgressBar = styled.div<{ limitLeft: number; limit: number; warningLimit: number }>`
  border-radius: '3px';
  background: ${({ limitLeft, warningLimit }) => (limitLeft > warningLimit ? colors.success : colors.error)};
  height: 2px;
  width: ${({ limitLeft, limit }) => (100 * limitLeft) / limit}%;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled/macro';
import { Stack, useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum } from '@novu/shared';
import { Link } from 'react-router-dom';
import { colors, Text } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/NovuEmailProviderModal.tsx
Tamaño: 1207 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled/macro';
import { List, Text } from '@mantine/core';
import { ChannelTypeEnum } from '@novu/shared';
import { colors } from '@novu/design-system';
import { useAuth } from '../../../hooks/useAuth';
import { NovuProviderBase } from './NovuProviderBase';

export function NovuEmailProviderModal({ onClose }: { onClose: () => void }) {
  return (
    <NovuProviderBase
      onClose={onClose}
      channel={ChannelTypeEnum.EMAIL}
      senderInformation={<EmailSenderInformation />}
    />
  );
}

function EmailSenderInformation() {
  const { currentOrganization } = useAuth();

  return (
    <div>
      <Text>Emails are sent on behalf of the:</Text>
      <List pl={5}>
        <List.Item>
          <Text>
            Sender name: <SenderDetailSpan>{currentOrganization?.name || 'Novu'}</SenderDetailSpan>
          </Text>
        </List.Item>
        <List.Item>
          <Text>
            Sender's email address: <SenderDetailSpan>no-reply@novu.co</SenderDetailSpan>
          </Text>
        </List.Item>
      </List>
    </div>
  );
}

const SenderDetailSpan = styled.span`
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B60 : colors.B40)};
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled/macro';
import { List, Text } from '@mantine/core';
import { ChannelTypeEnum } from '@novu/shared';
import { colors } from '@novu/design-system';
import { useAuth } from '../../../hooks/useAuth';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/NovuInAppForm.tsx
Tamaño: 5954 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { PropsWithChildren, useMemo } from 'react';
import styled from '@emotion/styled/macro';
import { Title, Text, Grid, Stack, useMantineColorScheme, TextProps } from '@mantine/core';
import { useMutation } from '@tanstack/react-query';
import { Controller, useForm } from 'react-hook-form';
import type { IResponseError, ICredentialsDto } from '@novu/shared';
import { UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';
import { Switch, Button, colors, CircleArrowRight } from '@novu/design-system';

import { IIntegratedProvider } from '../types';
import { updateIntegration } from '../../../api/integration';
import { When } from '../../../components/utils/When';
import { errorMessage, successMessage } from '../../../utils/notifications';

export const NovuInAppForm = ({
  provider,
  showModal,
}: {
  provider: IIntegratedProvider | null;
  showModal: (visible: boolean) => void;
}) => {
  const { colorScheme } = useMantineColorScheme();
  const { handleSubmit, control, watch } = useForm({
    shouldUseNativeValidation: false,
  });
  const hmac = watch('hmac');

  const { mutateAsync: updateIntegrationApi, isLoading: isLoadingUpdate } = useMutation<
    { res: string },
    IResponseError,
    {
      integrationId: string;
      data: { credentials: ICredentialsDto; active: boolean; check: boolean };
    }
  >(({ integrationId, data }) => updateIntegration(integrationId, data));

  const hmacDefaultValue = useMemo(() => {
    const credential = provider?.credentials?.find((item) => item.key === 'hmac');

    if (!credential) {
      return false;
    }

    if (typeof credential.value === 'boolean') {
      return credential.value;
    }

    return credential.value === 'true';
  }, [provider?.credentials]);

  const onSubmit = async (values) => {
    try {
      await updateIntegrationApi({
        integrationId: provider?.integrationId ?? '',
        data: { credentials: { hmac: values.hmac }, active: values.active, check: false },
      });
      successMessage('Successfully updated integration');

      showModal(false);
    } catch (e: any) {
      errorMessage(e.message || 'Unexpected error occurred');
    }
  };

  return (
    <form
      noValidate
      onSubmit={handleSubmit(onSubmit)}
      style={{
        overflow: 'hidden',
      }}
    >
      <Title
        sx={() => ({
          fontWeight: 700,
          color: colorScheme === 'dark' ? colors.white : colors.B40,
        })}
        order={2}
        mb={24}
      >
        In-App notification center
      </Title>
      <Grid>
        <Grid.Col span={8}>
          <Text mb={10} color={colorScheme === 'dark' ? colors.white : colors.B40}>
            Security HMAC encryption
          </Text>
          <Text color={colorScheme === 'dark' ? colors.B80 : colors.B70}>
            Verify if a request is performed by a specific user
          </Text>
        </Grid.Col>
        <Grid.Col span={4}>
          <Stack
            justify="end"
            sx={{
              height: '100%',
            }}
            align="end"
          >
            <SideElementBase>
              <Controller
                control={control}
                name="hmac"
                defaultValue={hmacDefaultValue}
                render={({ field }) => (
                  <>
                    <Switch
                      data-test-id="connect-integration-in-app-hmac"
                      checked={field.value}
                      onChange={field.onChange}
                    />
                    <Text
                      data-test-id="connect-integration-in-app-hmac-text"
                      ml={10}
                      color={field.value ? colors.error : colors.B60}
                    >
                      {field.value ? 'Active' : 'Disabled'}
                    </Text>
                  </>
                )}
              />
            </SideElementBase>
          </Stack>
        </Grid.Col>
      </Grid>
      <When truthy={hmac}>
        <WarningMessage>
          <Text color={colorScheme === 'dark' ? colors.white : colors.B40}>
            To finish security enabling, follow the step-by-step guide in our docs
          </Text>
          <CircleArrowRightStyled
            onClick={() => {
              window.open(
                `https://docs.novu.co/notification-center/client/iframe#enabling-hmac-encryption${UTM_CAMPAIGN_QUERY_PARAM}`
              );
            }}
          />
        </WarningMessage>
      </When>
      <Controller
        control={control}
        name="active"
        defaultValue={!!provider?.active}
        render={({ field }) => (
          <ActiveWrapper active={field.value}>
            <Switch checked={field.value} data-test-id="is_active_id" onChange={field.onChange} />
            <StyledText data-test-id="connect-integration-form-active-text">
              {field.value ? 'Active' : 'Disabled'}
            </StyledText>
          </ActiveWrapper>
        )}
      />
      <Button data-test-id="connect-integration-form-submit" submit mb={32} fullWidth loading={isLoadingUpdate}>
        Update
      </Button>
    </form>
  );
};

const StyledText = styled(Text)<PropsWithChildren<TextProps>>`
  display: inline-block;
  word-break: normal;
  margin: 0 10px;
`;

const SideElementBase = styled.div`
  display: flex;
  justify-content: flex-start;
  & > :first-of-type {
    width: auto;
  }
`;

const ActiveWrapper = styled(SideElementBase)<{ active: boolean }>`
  align-items: center;
  margin-top: 32px;
  margin-bottom: 32px;

  ${StyledText} {
    color: ${({ active }) => (active ? colors.success : colors.error)};
  }
`;

const WarningMessage = styled.div`
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 15px;
  color: ${colors.white};
  margin-top: 16px;

  background: ${colors.B17};
  border-radius: 7px;
`;

const CircleArrowRightStyled = styled(CircleArrowRight)`
  cursor: pointer;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { PropsWithChildren, useMemo } from 'react';
import styled from '@emotion/styled/macro';
import { Title, Text, Grid, Stack, useMantineColorScheme, TextProps } from '@mantine/core';
import { useMutation } from '@tanstack/react-query';
import { Controller, useForm } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/NovuInAppFrameworkHeader.tsx
Tamaño: 994 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';

import { Text, AngularLogo, IframeLogo, ReactLogo, VueLogo } from '@novu/design-system';
import { FrameworkEnum } from '../../quick-start/consts';

const NovuInAppFrameworkHeaderHolder = styled.div`
  display: flex;
  align-items: center;
  gap: 12px;
`;

const FRAMEWORKS_MAP = {
  [FrameworkEnum.REACT]: { logo: ReactLogo, title: 'React integration guide' },
  [FrameworkEnum.ANGULAR]: { logo: AngularLogo, title: 'Angular integration guide' },
  [FrameworkEnum.VUE]: { logo: VueLogo, title: 'Vue integration guide' },
  [FrameworkEnum.JS]: { logo: IframeLogo, title: 'iFrame integration guide' },
};

export const NovuInAppFrameworkHeader = ({ framework }: { framework: FrameworkEnum | null }) => {
  if (!framework) return null;

  const { logo: Icon, title } = FRAMEWORKS_MAP[framework];

  return (
    <NovuInAppFrameworkHeaderHolder>
      <Icon />
      <Text style={{ fontSize: 20 }}>{title}</Text>
    </NovuInAppFrameworkHeaderHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Text, AngularLogo, IframeLogo, ReactLogo, VueLogo } from '@novu/design-system';
import { FrameworkEnum } from '../../quick-start/consts';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/NovuInAppFrameworks.tsx
Tamaño: 2655 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { colors, Text, ReactLogo, AngularLogo, JavaScriptLogo, VueLogo, IframeLogo } from '@novu/design-system';
import { UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';

import { FrameworkEnum } from '../../quick-start/consts';

const NovuInAppFrameworksHolder = styled.div`
  display: flex;
  flex-direction: column;
  gap: 16px;
`;

const FrameworksGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-gap: 16px;
`;

const frameworkHolderStyles = (theme) => `
  display: flex;
  align-items: center;
  gap: 12px;
  flex: 1 0 0;
  padding: 16px;
  border-radius: 8px;
  background: ${theme.colorScheme === 'dark' ? colors.B20 : colors.BGLight};
  cursor: pointer;
  user-select: none;
  transition: all 250ms ease-in-out;

  &:hover {
    filter: ${theme.colorScheme === 'dark' ? 'brightness(1.1)' : 'brightness(0.95)'};
  }
`;

const FrameworkHolder = styled.div`
  ${({ theme }) => frameworkHolderStyles(theme)};
`;

const FrameworkHolderLink = styled.a`
  ${({ theme }) => frameworkHolderStyles(theme)};
`;

const frameworks = [
  { icon: ReactLogo, name: 'React', frameworkEnum: FrameworkEnum.REACT },
  { icon: AngularLogo, name: 'Angular', frameworkEnum: FrameworkEnum.ANGULAR },
  {
    icon: JavaScriptLogo,
    name: 'Web Component',
    href: `https://docs.novu.co/notification-center/client/web-component${UTM_CAMPAIGN_QUERY_PARAM}`,
  },
  {
    icon: JavaScriptLogo,
    name: 'Headless',
    href: `https://docs.novu.co/notification-center/client/headless/get-started${UTM_CAMPAIGN_QUERY_PARAM}`,
  },
  { icon: VueLogo, name: 'Vue', frameworkEnum: FrameworkEnum.VUE },
  { icon: IframeLogo, name: 'iFrame', frameworkEnum: FrameworkEnum.JS },
];

export const NovuInAppFrameworks = ({ onFrameworkClick }: { onFrameworkClick: (framework: FrameworkEnum) => void }) => {
  return (
    <NovuInAppFrameworksHolder data-test-id="novu-in-app-frameworks">
      <Text>Integrate In-App using a framework below</Text>
      <FrameworksGrid>
        {frameworks.map(({ name, icon: Icon, frameworkEnum, href }) =>
          frameworkEnum ? (
            <FrameworkHolder
              key={name}
              onClick={() => {
                onFrameworkClick(frameworkEnum);
              }}
            >
              <Icon />
              <Text>{name}</Text>
            </FrameworkHolder>
          ) : (
            <FrameworkHolderLink key={name} href={href} rel="noreferrer" target="_blank">
              <Icon />
              <Text>{name}</Text>
            </FrameworkHolderLink>
          )
        )}
      </FrameworksGrid>
    </NovuInAppFrameworksHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { colors, Text, ReactLogo, AngularLogo, JavaScriptLogo, VueLogo, IframeLogo } from '@novu/design-system';
import { UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';
import { FrameworkEnum } from '../../quick-start/consts';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/NovuInAppSetupWarning.tsx
Tamaño: 541 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { SetupWarning } from './SetupWarning';
import { useInAppActivated } from '../../../api/hooks';
import type { IIntegratedProvider } from '../types';

export const NovuInAppSetupWarning = ({ provider }: { provider: IIntegratedProvider | null }) => {
  const { isInAppActive } = useInAppActivated();

  if (!provider) return null;

  return (
    <SetupWarning
      show={!isInAppActive}
      message="Select a framework to set up credentials to start sending notifications."
      docReference={provider.docReference}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { SetupWarning } from './SetupWarning';
import { useInAppActivated } from '../../../api/hooks';
import type { IIntegratedProvider } from '../types';
export const NovuInAppSetupWarning = ({ provider }: { provider: IIntegratedProvider | null }) => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/NovuIntegrationCard.tsx
Tamaño: 5489 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { createStyles, Group, useMantineColorScheme } from '@mantine/core';
import { colors, shadows, Text, Tooltip } from '@novu/design-system';
import { ChannelTypeEnum, IConfigCredential } from '@novu/shared';
import { useIntegrationLimit } from '../../../hooks';
import type { IIntegratedProvider } from '../types';
import { CardStatusBar } from './CardStatusBar';
import { LimitBar } from './LimitBar';

export function NovuIntegrationCard({
  provider,
  onConnectClick = undefined,
  ribbonText = 'Starting provider',
}: {
  provider: IIntegratedProvider;
  onConnectClick?: (visible: boolean, create: boolean, provider: IIntegratedProvider) => void;
  ribbonText?: string;
}) {
  const { colorScheme } = useMantineColorScheme();
  const logoSrc = provider.logoFileName[`${colorScheme}`];
  const brightCard =
    provider.active ||
    provider.credentials.some((cred: IConfigCredential) => {
      return !cred.value;
    });

  const {
    data: { limit, count },
    loading,
    isLimitReached,
  } = useIntegrationLimit(provider.channel);

  const unit = provider.channel === ChannelTypeEnum.EMAIL ? 'emails' : 'messages';
  const { classes } = useStyles({ isLimitReached });

  return (
    <Tooltip
      classNames={classes}
      label={<TooltipLabel limit={limit} unit={unit} channel={provider.channel} isLimitReached={isLimitReached} />}
    >
      <StyledCard
        dark={colorScheme === 'dark'}
        active={brightCard}
        data-test-id="nouv-integration-provider-card"
        onClick={() => {
          if (onConnectClick) {
            onConnectClick(true, true, provider);
          }
        }}
        clickable={onConnectClick !== undefined}
      >
        <RibbonWrapper>
          <Ribbon>{ribbonText}</Ribbon>
        </RibbonWrapper>
        <StyledGroup position="apart">
          <CardHeader>
            <Logo src={logoSrc} alt={provider.displayName} />
          </CardHeader>

          <CardFooter>
            <LimitBar channel={provider.channel} limit={limit} count={count} loading={loading} />
            <div
              style={{
                marginTop: '12px',
              }}
            >
              <CardStatusBar active={limit - count > 0 && provider.active} />
            </div>
          </CardFooter>
        </StyledGroup>
      </StyledCard>
    </Tooltip>
  );
}

function TooltipLabel({
  channel,
  limit,
  unit,
  isLimitReached,
}: {
  limit: number;
  unit: string;
  channel: ChannelTypeEnum;
  isLimitReached: boolean;
}) {
  const label = isLimitReached
    ? `You have run out of available ${unit} for this month. Configure a different ${channel} provider to send more.`
    : `The predefined free Novu provider allows sending ${limit} ${unit} per month. Configure a different ${channel} provider to send more.`;

  return (
    <StyledLabelContainer>
      <StyledLabel isLimitReached={isLimitReached}>{label}</StyledLabel>
    </StyledLabelContainer>
  );
}

const StyledGroup = styled(Group)`
  height: 100%;
`;

const RibbonWrapper = styled.div`
  width: 115px;
  height: 115px;
  position: absolute;
  right: 10px;
  top: 10px;
  transform: rotate(45deg);
`;

const Ribbon = styled.div`
  background: ${colors.success};
  font-size: 9px;
  width: 100%;
  text-align: center;
  color: ${colors.white};
  line-height: 20px;
  font-weight: bold;
`;

const CardHeader = styled.div`
  display: flex;
  justify-content: space-between;
  width: 100%;

  svg {
    color: ${colors.B40};
  }
`;

const Logo = styled.img`
  max-width: 140px;
  max-height: 50px;
`;

const CardFooter = styled.div`
  width: 100%;
`;

const StyledCard = styled.div<{ dark: boolean; active: boolean; clickable: boolean }>`
  background-color: ${({ dark }) => (dark ? colors.B17 : colors.B98)};
  border-radius: 7px;
  display: inline-block;
  padding: 25px;
  height: 200px;
  width: 100%;
  min-width: 205px;
  transition: all 0.15s ease-in;
  position: relative;
  overflow: hidden;

  ${({ active }) => {
    return (
      !active &&
      `
      ${Logo} {
        opacity: 0.5;
      }
    `
    );
  }};

  &:hover {
    ${Logo} {
      opacity: 1;
    }
    cursor: ${({ clickable }) => (clickable ? 'pointer' : undefined)};
    ${({ dark, clickable }) =>
      clickable
        ? dark
          ? `
            background-color: ${colors.B20};
            box-shadow: ${shadows.dark};
          `
          : `
            background-color: ${colors.BGLight};
            box-shadow: ${shadows.light};
          `
        : undefined};
  }
`;

const StyledLabelContainer = styled.div`
  width: 300px;
`;

const StyledLabel = styled(Text)<{ isLimitReached: boolean }>`
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: break-word;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B60 : colors.B40)};

  ${({ isLimitReached }) => {
    if (isLimitReached) {
      return `
      color: ${colors.white};
      `;
    }
  }}
`;

const useStyles = createStyles((theme, { isLimitReached }: { isLimitReached: boolean }) => ({
  tooltip: {
    backgroundColor: isLimitReached ? colors.error : theme.colorScheme === 'dark' ? colors.B20 : colors.BGLight,
    color: colors.B60,
    boxShadow: theme.colorScheme === 'dark' ? shadows.dark : shadows.medium,
    padding: '12px 15px',
    fontSize: '14px',
    fontWeight: 400,
  },
  arrow: {
    backgroundColor: isLimitReached ? colors.error : theme.colorScheme === 'dark' ? colors.B20 : theme.white,
  },
}));


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { createStyles, Group, useMantineColorScheme } from '@mantine/core';
import { colors, shadows, Text, Tooltip } from '@novu/design-system';
import { ChannelTypeEnum, IConfigCredential } from '@novu/shared';
import { useIntegrationLimit } from '../../../hooks';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/NovuProviderBase.tsx
Tamaño: 2645 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import styled from '@emotion/styled';
import { Stack, Text, useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum, UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';
import { colors, Close } from '@novu/design-system';

import { When } from '../../../components/utils/When';
import { CONTEXT_PATH } from '../../../config';
import { useIntegrationLimit } from '../../../hooks';
import { LimitBar } from './LimitBar';

interface NovuProviderBaseProps {
  onClose: () => void;
  senderInformation?: React.ReactNode;
  channel: ChannelTypeEnum;
}

export function NovuProviderBase({ onClose, senderInformation, channel }: NovuProviderBaseProps) {
  const {
    data: { limit, count },
    loading,
  } = useIntegrationLimit(channel);

  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  const logoSrc = isDark ? `${CONTEXT_PATH}/static/images/logo-light.webp` : `${CONTEXT_PATH}/static/images/logo.webp`;

  const unit = channel === ChannelTypeEnum.EMAIL ? 'emails' : 'messages';

  return (
    <div
      style={{
        position: 'relative',
        padding: '18px',
      }}
    >
      <CloseButton data-test-id="connection-integration-form-close" type="button" onClick={onClose}>
        <Close />
      </CloseButton>

      <Stack spacing={24}>
        <div>
          <img src={logoSrc} alt="logo" style={{ maxWidth: 130, maxHeight: 32 }} />
        </div>
        <Stack spacing={24}>
          <Stack spacing={16}>
            <Text>
              The free Novu provider allows sending {limit} {unit} per month
            </Text>
            <LimitBar channel={channel} limit={limit} count={count} loading={loading} showDescription />
          </Stack>
          <When truthy={senderInformation}>{senderInformation}</When>
          <InlineDiv>
            <span>Read more about Integrations in</span>
            <a
              href={`https://docs.novu.co/platform/integrations/overview${UTM_CAMPAIGN_QUERY_PARAM}`}
              target="_blank"
              rel="noreferrer"
              style={{ color: '#DD2476 ', textDecoration: 'underline' }}
            >
              our docs
            </a>
          </InlineDiv>
        </Stack>
      </Stack>
    </div>
  );
}

const ColumnDiv = styled.div`
  display: flex;
  flex-direction: column;
`;

const InlineDiv = styled.div`
  display: inline;
  span {
    margin-right: 5px;
  }
`;

const CloseButton = styled.button`
  position: absolute;
  right: 0;
  top: 0;
  background: transparent;
  border: none;
  color: ${colors.B40};
  outline: none;

  &:hover {
    cursor: pointer;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import styled from '@emotion/styled';
import { Stack, Text, useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum, UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';
import { colors, Close } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/NovuSmsProviderModal.tsx
Tamaño: 262 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ChannelTypeEnum } from '@novu/shared';
import { NovuProviderBase } from './NovuProviderBase';

export function NovuSmsProviderModal({ onClose }: { onClose: () => void }) {
  return <NovuProviderBase onClose={onClose} channel={ChannelTypeEnum.SMS} />;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ChannelTypeEnum } from '@novu/shared';
import { NovuProviderBase } from './NovuProviderBase';
export function NovuSmsProviderModal({ onClose }: { onClose: () => void }) {
return <NovuProviderBase onClose={onClose} channel={ChannelTypeEnum.SMS} />;
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/PrimaryIconButton.tsx
Tamaño: 2646 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Group, Text } from '@mantine/core';
import { useState } from 'react';
import {
  When,
  Button,
  colors,
  Modal,
  Title,
  ActionButton,
  RemoveCondition,
  StarEmpty,
  Warning,
} from '@novu/design-system';

const IconButton = styled(Group)`
  text-align: center;
  border-radius: 8px;
  width: 32px;
  height: 32px;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B60 : colors.B30)};

  &:hover {
    background: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B30 : colors.B85)};
    color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B30)};
  }
`;

const RemovesCondition = () => {
  return (
    <Text mt={4} lineClamp={3} color="#EAA900">
      This action remove
      <br /> applied conditions
    </Text>
  );
};

export const PrimaryIconButton = ({
  conditions = 0,
  primary = false,
  onClick,
}: {
  conditions?: number;
  primary?: boolean;
  onClick: () => void;
}) => {
  const [modalOpen, setModalOpen] = useState(false);

  if (primary) {
    return null;
  }

  return (
    <>
      <ActionButton
        tooltip={
          <>
            Mark as Primary
            <When truthy={conditions > 0}>
              <RemovesCondition />
            </When>
          </>
        }
        tooltipPosition="bottom"
        Icon={StarEmpty}
        onClick={() => {
          if (conditions > 0) {
            setModalOpen(true);

            return;
          }
          onClick();
        }}
        data-test-id="header-make-primary-btn"
      />
      <Modal
        data-test-id="remove-conditions-modal"
        opened={modalOpen}
        title={
          <Group spacing={8}>
            <Warning color="#EAA900" />
            <Title color="#EAA900">Conditions will be removed</Title>
          </Group>
        }
        size="lg"
        onClose={() => {
          setModalOpen(false);
        }}
      >
        <Text color={colors.B60}>
          Marking this instance as primary will remove all conditions since primary instances can not have any
          conditions.
        </Text>
        <Group mt={30} position="right">
          <Button
            variant="outline"
            onClick={() => {
              setModalOpen(false);
            }}
          >
            Cancel
          </Button>
          <Button
            onClick={() => {
              onClick();
              setModalOpen(false);
            }}
          >
            <Group spacing={8}>
              <RemoveCondition /> Remove conditions
            </Group>
          </Button>
        </Group>
      </Modal>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Group, Text } from '@mantine/core';
import { useState } from 'react';
import {
When,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/ProviderCard.tsx
Tamaño: 4132 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Group, useMantineColorScheme } from '@mantine/core';
import { Button, colors, Settings, shadows } from '@novu/design-system';
import { IConfigCredential } from '@novu/shared';
import { When } from '../../../components/utils/When';
import { CONTEXT_PATH } from '../../../config';
import type { IIntegratedProvider } from '../types';
import { CardStatusBar } from './CardStatusBar';

export function ProviderCard({
  provider,
  onConnectClick,
}: {
  provider: IIntegratedProvider;
  onConnectClick: (visible: boolean, create: boolean, provider: IIntegratedProvider) => void;
}) {
  const { colorScheme } = useMantineColorScheme();
  const logoSrc = `${CONTEXT_PATH}/static/images/providers/${colorScheme}/${provider.logoFileName[`${colorScheme}`]}`;
  const brightCard =
    provider.active ||
    provider.credentials.some((cred: IConfigCredential) => {
      return !cred.value;
    });

  function handleOnClickSettings() {
    onConnectClick(true, false, provider);
  }

  return (
    <StyledCard
      dark={colorScheme === 'dark'}
      active={brightCard}
      data-test-id={`integration-provider-card-${provider.providerId}`}
      onClick={() => {
        if (provider.comingSoon) return;
        if (provider.connected) {
          handleOnClickSettings();
        } else {
          onConnectClick(true, true, provider);
        }
      }}
    >
      <When truthy={provider.comingSoon || provider.betaVersion}>
        <RibbonWrapper>
          <Ribbon>{provider.comingSoon ? 'COMING SOON' : 'BETA'}</Ribbon>
        </RibbonWrapper>
      </When>

      <StyledGroup position="apart">
        <CardHeader>
          <Logo src={logoSrc} alt={provider.displayName} />
          {provider.connected && !provider.betaVersion && !provider.novu ? (
            <Settings data-test-id="provider-card-settings-svg" />
          ) : null}
        </CardHeader>

        <CardFooter>
          {!provider.connected ? (
            <StyledButton fullWidth variant={'outline'} disabled={provider.comingSoon}>
              Connect
            </StyledButton>
          ) : (
            <CardStatusBar active={provider.active} />
          )}
        </CardFooter>
      </StyledGroup>
    </StyledCard>
  );
}

const StyledButton = styled(Button)`
  background-image: ${({ theme }) =>
    theme.colorScheme === 'dark'
      ? `linear-gradient(0deg, ${colors.B17} 0%, ${colors.B17} 100%),linear-gradient(99deg,#DD2476 0% 0%, #FF512F 100% 100%)`
      : `linear-gradient(0deg, ${colors.B98} 0%, ${colors.B98} 100%),linear-gradient(99deg,#DD2476 0% 0%, #FF512F 100% 100%)`};
`;

const StyledGroup = styled(Group)`
  height: 100%;
  justify-content: space-between;
  flex-direction: column;
`;

const RibbonWrapper = styled.div`
  width: 115px;
  height: 115px;
  position: absolute;
  right: 10px;
  top: 10px;
  transform: rotate(45deg);
`;

const Ribbon = styled.div`
  background: ${colors.horizontal};
  font-size: 9px;
  width: 100%;
  text-align: center;
  color: ${colors.white};
  line-height: 20px;
  font-weight: bold;
`;

const CardHeader = styled.div`
  display: flex;
  justify-content: space-between;
  width: 100%;

  svg {
    color: ${colors.B40};
  }
`;

const Logo = styled.img`
  max-width: 140px;
  max-height: 50px;
`;

const CardFooter = styled.div`
  width: 100%;
`;

const StyledCard = styled.div<{ dark: boolean; active: boolean }>`
  background-color: ${({ dark }) => (dark ? colors.B17 : colors.B98)};
  border-radius: 7px;
  display: inline-block;
  padding: 25px;
  height: 200px;
  width: 100%;
  min-width: 205px;
  transition: all 0.15s ease-in;
  position: relative;
  overflow: hidden;

  ${({ active }) => {
    return (
      !active &&
      `
      ${Logo} {
        opacity: 0.5;
      }
    `
    );
  }};

  &:hover {
    ${Logo} {
      opacity: 1;
    }
    cursor: pointer;
    ${({ dark }) =>
      dark
        ? `
            background-color: ${colors.B20};
            box-shadow: ${shadows.dark};
          `
        : `
            background-color: ${colors.BGLight};
            box-shadow: ${shadows.light};
          `};
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Group, useMantineColorScheme } from '@mantine/core';
import { Button, colors, Settings, shadows } from '@novu/design-system';
import { IConfigCredential } from '@novu/shared';
import { When } from '../../../components/utils/When';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/SelectProviderPage.tsx
Tamaño: 850 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ChannelTypeEnum } from '@novu/shared';
import { useSearchParams, useNavigate } from 'react-router-dom';

import { ROUTES } from '../../../constants/routes';
import type { IIntegratedProvider } from '../types';
import { SelectProviderSidebar } from './multi-provider/SelectProviderSidebar';

export const SelectProviderPage = () => {
  const navigate = useNavigate();
  const [params] = useSearchParams();
  const scrollTo = params.get('scrollTo') as ChannelTypeEnum | undefined;

  const onClose = () => {
    navigate(ROUTES.INTEGRATIONS);
  };

  const onNextStepClick = (selectedProvider: IIntegratedProvider) => {
    navigate(`/integrations/create/${selectedProvider.channel}/${selectedProvider.providerId}`);
  };

  return <SelectProviderSidebar isOpened scrollTo={scrollTo} onClose={onClose} onNextStepClick={onNextStepClick} />;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ChannelTypeEnum } from '@novu/shared';
import { useSearchParams, useNavigate } from 'react-router-dom';
import { ROUTES } from '../../../constants/routes';
import type { IIntegratedProvider } from '../types';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/SetupFrameworkHeader.tsx
Tamaño: 2384 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Group, Stack, Title, UnstyledButton } from '@mantine/core';
import { colors } from '@novu/notification-center';
import capitalize from 'lodash.capitalize';
import {
  shadows,
  AngularGradient,
  ArrowLeft,
  Close,
  CodeGradient,
  JsGradient,
  ReactGradient,
  VueGradient,
} from '@novu/design-system';
import { FrameworkEnum } from '../../quick-start/consts';

const Icon = ({ framework }: { framework: string }) => {
  switch (framework) {
    case FrameworkEnum.REACT:
      return <ReactGradient />;
    case FrameworkEnum.ANGULAR:
      return <AngularGradient />;
    case FrameworkEnum.VUE:
      return <VueGradient />;
    case FrameworkEnum.JS:
      return <CodeGradient />;
    default:
      return <JsGradient />;
  }
};

export const SetupFrameworkHeader = ({
  framework,
  onGoBack,
  onClose,
}: {
  framework: string;
  onGoBack: () => void;
  onClose: () => void;
}) => {
  return (
    <Header>
      <Group position="apart">
        <UnstyledButton mb={8} onClick={onGoBack}>
          <Group
            spacing={8}
            sx={{
              color: colors.B60,
            }}
          >
            <ArrowLeft />
            Go Back
          </Group>
        </UnstyledButton>
        <CloseButton data-test-id="connection-integration-close" type="button" onClick={onClose}>
          <Close />
        </CloseButton>
      </Group>
      <Stack align="center">
        <Group spacing={14}>
          <Icon framework={framework} />
          <Title color={colors.B60} size={24} order={2}>
            {framework === 'js' ? 'iFrame' : capitalize(framework)} integration guide
          </Title>
        </Group>
      </Stack>
    </Header>
  );
};

const CloseButton = styled.button`
  background: transparent;
  border: none;
  color: ${colors.B40};
  outline: none;

  &:hover {
    cursor: pointer;
  }
`;

const Header = styled.button`
  position: fixed;
  left: 0;
  right: 0;
  padding-left: 41px;
  padding-right: 20px;
  padding-top: 16px;
  padding-bottom: 24px;
  background: ${({ theme }) => {
    return theme.colorScheme === 'dark' ? colors.B15 : colors.white;
  }};
  top: 0;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  z-index: 9999;
  border: none;
  box-shadow: ${({ theme }) => {
    return theme.colorScheme === 'dark' ? shadows.dark : shadows.light;
  }};
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Group, Stack, Title, UnstyledButton } from '@mantine/core';
import { colors } from '@novu/notification-center';
import capitalize from 'lodash.capitalize';
import {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/SetupWarning.tsx
Tamaño: 991 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Group } from '@mantine/core';

import { DisconnectGradient } from '@novu/design-system';
import { When } from '../../../components/utils/When';

const WarningMessage = styled(Group)`
  display: flex;
  flex-direction: row;
  align-items: center;
  flex-wrap: nowrap;
  padding: 15px;
  color: #e54545;

  background: rgba(230, 69, 69, 0.15);
  border-radius: 7px;
  a {
    text-decoration: underline;
  }

  svg {
    min-width: 24px;
    width: 24px;
    height: 24px;
  }
`;

export const SetupWarning = ({
  show,
  message,
  docReference,
}: {
  show: boolean;
  message: string;
  docReference?: string;
}) => {
  return (
    <When truthy={show}>
      <WarningMessage spacing={12}>
        <DisconnectGradient />
        <div>
          {message}{' '}
          <a href={docReference} target="_blank" rel="noopener noreferrer">
            Explore set-up guide
          </a>
        </div>
      </WarningMessage>
    </When>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Group } from '@mantine/core';
import { DisconnectGradient } from '@novu/design-system';
import { When } from '../../../components/utils/When';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/UpdateIntegrationCommonFields.tsx
Tamaño: 2355 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Controller, useFormContext } from 'react-hook-form';
import styled from '@emotion/styled';
import { useClipboard } from '@mantine/hooks';

import { Input, Switch, Check, Copy } from '@novu/design-system';
import type { IIntegratedProvider } from '../types';

const CopyWrapper = styled.div`
  cursor: pointer;
  &:hover {
    opacity: 0.8;
  }
`;

export const UpdateIntegrationCommonFields = ({ provider }: { provider: IIntegratedProvider | null }) => {
  const {
    control,
    formState: { errors },
  } = useFormContext();
  const identifierClipboard = useClipboard({ timeout: 1000 });

  if (!provider) return null;

  return (
    <>
      <Controller
        control={control}
        name="active"
        defaultValue={false}
        render={({ field }) => (
          <Switch
            checked={field.value}
            label={field.value ? 'Active' : 'Disabled'}
            data-test-id="is_active_id"
            {...field}
          />
        )}
      />
      <Controller
        control={control}
        name="name"
        defaultValue={''}
        rules={{
          required: 'Required - Instance name',
        }}
        render={({ field }) => (
          <Input
            {...field}
            value={field.value ? field.value : provider?.displayName}
            required
            label="Name"
            error={errors.name?.message as string}
            data-test-id="provider-instance-name"
          />
        )}
      />
      <Controller
        control={control}
        name="identifier"
        defaultValue={''}
        rules={{
          required: 'Required - Provider identifier',
          pattern: {
            value: /^[A-Za-z0-9_-]+$/,
            message: 'Provider identifier must contains only alphabetical, numeric, dash or underscore characters',
          },
        }}
        render={({ field }) => (
          <Input
            {...field}
            required
            label="Provider identifier"
            error={errors.identifier?.message as string}
            rightSection={
              <CopyWrapper onClick={() => identifierClipboard.copy(field.value)}>
                {identifierClipboard.copied ? <Check /> : <Copy />}
              </CopyWrapper>
            }
            data-test-id="provider-instance-identifier"
          />
        )}
      />
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Controller, useFormContext } from 'react-hook-form';
import styled from '@emotion/styled';
import { useClipboard } from '@mantine/hooks';
import { Input, Switch, Check, Copy } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/UpdateIntegrationSidebarHeader.tsx
Tamaño: 7226 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ReactNode, useMemo, useState } from 'react';
import { Group, useMantineTheme } from '@mantine/core';
import { Controller, useFormContext, useWatch } from 'react-hook-form';
import { CHANNELS_WITH_PRIMARY } from '@novu/shared';
import {
  ActionButton,
  Button,
  colors,
  Dropdown,
  Modal,
  NameInput,
  Text,
  Title,
  DotsHorizontal,
  StarEmpty,
  Trash,
  When,
} from '@novu/design-system';

import { useEnvironment } from '../../../hooks';
import { ProviderImage } from './multi-provider/SelectProviderSidebar';
import type { IIntegratedProvider, IntegrationEntity } from '../types';
import { useProviders } from '../useProviders';
import { useDeleteIntegration } from '../../../api/hooks';
import { errorMessage, successMessage } from '../../../utils/notifications';
import { ProviderInfo } from './multi-provider/ProviderInfo';
import { useSelectPrimaryIntegrationModal } from './multi-provider/useSelectPrimaryIntegrationModal';
import { useMakePrimaryIntegration } from '../../../api/hooks/useMakePrimaryIntegration';
import { ConditionIconButton } from './ConditionIconButton';
import { PrimaryIconButton } from './PrimaryIconButton';

export const UpdateIntegrationSidebarHeader = ({
  provider,
  onSuccessDelete,
  children = null,
  openConditions,
}: {
  provider: IIntegratedProvider | null;
  onSuccessDelete: () => void;
  children?: ReactNode | null;
  openConditions: () => void;
}) => {
  const [isModalOpened, setModalIsOpened] = useState(false);
  const { control } = useFormContext();
  const { environments } = useEnvironment();
  const { colorScheme } = useMantineTheme();
  const { providers, isLoading } = useProviders();
  const canMarkAsPrimary = provider && !provider.primary && CHANNELS_WITH_PRIMARY.includes(provider.channel);
  const { openModal, SelectPrimaryIntegrationModal } = useSelectPrimaryIntegrationModal();

  const watchedConditions = useWatch({ control, name: 'conditions' });
  const numOfConditions: number = useMemo(() => {
    if (watchedConditions && watchedConditions[0] && watchedConditions[0].children) {
      return watchedConditions[0].children.length;
    }

    return 0;
  }, [watchedConditions]);

  const shouldSetNewPrimary = useMemo(() => {
    if (!provider) return false;

    const { channel: selectedChannel, environmentId, integrationId, primary } = provider;
    const hasSameChannelActiveIntegration = !!providers
      .filter((el) => el.integrationId !== integrationId)
      .find((el) => el.active && el.channel === selectedChannel && el.environmentId === environmentId);

    return hasSameChannelActiveIntegration && primary;
  }, [provider, providers]);

  const { makePrimaryIntegration, isLoading: isMarkingPrimary } = useMakePrimaryIntegration();

  const { deleteIntegration, isLoading: isDeleting } = useDeleteIntegration({
    onSuccess: (_, { name }) => {
      successMessage(`Instance configuration ${name} is deleted`);
      onSuccessDelete();
    },
    onError: (_, { name }) => {
      errorMessage(`Instance configuration ${name} could not be deleted`);
    },
  });

  const onDeleteClick = () => {
    if (!provider) {
      return;
    }

    if (shouldSetNewPrimary) {
      openModal({
        environmentId: provider.environmentId,
        channelType: provider.channel,
        exclude: (el: IntegrationEntity) => {
          return el._id === provider.integrationId;
        },
        onClose: () => {
          deleteIntegration({
            id: provider.integrationId,
            name: provider.name || provider.displayName,
          });
        },
      });

      return;
    }

    deleteIntegration({
      id: provider.integrationId,
      name: provider.name || provider.displayName,
    });
  };

  if (!provider) return null;

  return (
    <Group spacing={5}>
      <Group spacing={12} w="100%" h={28} noWrap>
        <ProviderImage providerId={provider.providerId} />
        <Controller
          control={control}
          name="name"
          defaultValue=""
          render={({ field }) => {
            return (
              <NameInput
                {...field}
                value={field.value ? field.value : provider.displayName}
                data-test-id="provider-instance-name"
                placeholder="Enter instance name"
                ml={-10}
              />
            );
          }}
        />
        <Group spacing={12} noWrap ml="auto">
          {children}
          <When truthy={canMarkAsPrimary}>
            <PrimaryIconButton
              primary={provider.primary}
              onClick={() => {
                makePrimaryIntegration({ id: provider.integrationId });
              }}
              conditions={numOfConditions}
            />
          </When>
          <ConditionIconButton primary={provider.primary} onClick={openConditions} conditions={numOfConditions} />
          <div>
            <Dropdown
              withArrow={false}
              offset={0}
              control={<ActionButton Icon={DotsHorizontal} />}
              middlewares={{ flip: false, shift: false }}
              position="bottom-end"
            >
              {canMarkAsPrimary && (
                <Dropdown.Item
                  onClick={() => {
                    makePrimaryIntegration({ id: provider.integrationId });
                  }}
                  icon={<StarEmpty color={colorScheme === 'dark' ? colors.white : colors.B30} />}
                  disabled={isLoading || isMarkingPrimary}
                >
                  Mark as primary
                </Dropdown.Item>
              )}
              <Dropdown.Item
                onClick={() => {
                  setModalIsOpened(true);
                }}
                icon={<Trash />}
                disabled={isLoading || isDeleting}
                data-critical
              >
                Delete
              </Dropdown.Item>
            </Dropdown>
          </div>
        </Group>
      </Group>
      <ProviderInfo provider={provider} environments={environments} />
      <Modal
        title={<Title size={2}>Delete {provider.name || provider.displayName} instance?</Title>}
        opened={isModalOpened}
        onClose={() => setModalIsOpened(false)}
        data-test-id="delete-provider-instance-modal"
      >
        <Text mb={30} size="lg" color={colors.B60}>
          {shouldSetNewPrimary
            ? 'Deleting the primary provider instance will cause to select another primary one. ' +
              'All workflows relying on its configuration will be linked to the selected primary provider instance.'
            : `Deleting a ${
                provider.primary ? 'primary ' : ''
              }provider instance will fail workflows relying on its configuration, leading to undelivered notifications.`}
        </Text>
        <Group position="right">
          <Button variant="outline" onClick={() => setModalIsOpened(false)}>
            Cancel
          </Button>
          <Button loading={isDeleting} onClick={onDeleteClick}>
            <Trash />
            {shouldSetNewPrimary ? 'Delete and relink' : 'Delete instance'}
          </Button>
        </Group>
      </Modal>
      <SelectPrimaryIntegrationModal />
    </Group>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ReactNode, useMemo, useState } from 'react';
import { Group, useMantineTheme } from '@mantine/core';
import { Controller, useFormContext, useWatch } from 'react-hook-form';
import { CHANNELS_WITH_PRIMARY } from '@novu/shared';
import {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/Modal/ChannelGroup.tsx
Tamaño: 3815 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Container, Grid } from '@mantine/core';
import { Title } from '@novu/design-system';
import { ChannelTypeEnum, EmailProviderIdEnum, SmsProviderIdEnum } from '@novu/shared';

import type { IIntegratedProvider } from '../../types';
import { When } from '../../../../components/utils/When';
import { CONTEXT_PATH, IS_SELF_HOSTED } from '../../../../config';
import { ProviderCard } from './ProviderCard';
import { NovuIntegrationCard } from './NovuIntegrationCard';

export function ChannelGroup({
  title,
  providers,
  onProviderClick,
  channel,
  selectedProvider,
}: {
  providers: IIntegratedProvider[];
  title: string;
  selectedProvider?: string;
  onProviderClick: (visible: boolean, create: boolean, provider: IIntegratedProvider) => void;
  channel: ChannelTypeEnum;
}) {
  function handlerOnConnectClick(visible: boolean, create: boolean, provider: IIntegratedProvider) {
    onProviderClick(visible, create, provider);
  }

  return (
    <Container id={channel} fluid>
      <Grid mx={0} mb={50}>
        <Grid.Col span={12} data-test-id={`integration-group-${title.toLowerCase()}`}>
          <Title size={2}>{title}</Title>
        </Grid.Col>
        <When truthy={channel === ChannelTypeEnum.EMAIL && !IS_SELF_HOSTED}>
          <Grid.Col lg={3} xl={2}>
            <NovuIntegrationCard
              selected={selectedProvider === EmailProviderIdEnum.Novu}
              provider={{
                providerId: EmailProviderIdEnum.Novu,
                integrationId: '',
                displayName: 'Novu Email Provider',
                channel: ChannelTypeEnum.EMAIL,
                credentials: [],
                docReference: '',
                comingSoon: false,
                active:
                  providers.filter((provider) => provider.active && provider.channel === ChannelTypeEnum.EMAIL)
                    .length === 0,
                connected: true,
                logoFileName: {
                  dark: `${CONTEXT_PATH}/static/images/logo-light.webp`,
                  light: `${CONTEXT_PATH}/static/images/logo.webp`,
                },
                betaVersion: false,
                novu: true,
                primary: false,
              }}
              onConnectClick={handlerOnConnectClick}
            />
          </Grid.Col>
        </When>
        <When truthy={channel === ChannelTypeEnum.SMS && !IS_SELF_HOSTED}>
          <Grid.Col lg={3} xl={2}>
            <NovuIntegrationCard
              selected={selectedProvider === SmsProviderIdEnum.Novu}
              provider={{
                providerId: SmsProviderIdEnum.Novu,
                integrationId: '',
                displayName: 'Novu SMS Provider',
                channel: ChannelTypeEnum.SMS,
                credentials: [],
                docReference: '',
                comingSoon: false,
                active:
                  providers.filter((provider) => provider.active && provider.channel === ChannelTypeEnum.SMS).length ===
                  0,
                connected: true,
                logoFileName: {
                  dark: `${CONTEXT_PATH}/static/images/logo-light.webp`,
                  light: `${CONTEXT_PATH}/static/images/logo.webp`,
                },
                betaVersion: false,
                novu: true,
                primary: false,
              }}
              onConnectClick={handlerOnConnectClick}
            />
          </Grid.Col>
        </When>
        {providers.map((provider) => (
          <Grid.Col lg={3} xl={2} key={provider.providerId}>
            <ProviderCard
              selected={selectedProvider === provider.providerId}
              provider={provider}
              onConnectClick={handlerOnConnectClick}
            />
          </Grid.Col>
        ))}
      </Grid>
    </Container>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Container, Grid } from '@mantine/core';
import { Title } from '@novu/design-system';
import { ChannelTypeEnum, EmailProviderIdEnum, SmsProviderIdEnum } from '@novu/shared';
import type { IIntegratedProvider } from '../../types';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/Modal/ConnectIntegrationForm.tsx
Tamaño: 14820 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { keyframes } from '@emotion/react';
import styled from '@emotion/styled';
import { ActionIcon, Alert, Center, Image, Stack, useMantineColorScheme } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';
import {
  Button,
  Check,
  Close,
  Copy,
  colors,
  IconOutlineWarning,
  Input,
  Switch,
  shadows,
  Text,
} from '@novu/design-system';
import type {
  IConfigCredential,
  ICreateIntegrationBodyDto,
  ICredentialsDto,
  IEnvironment,
  IOrganizationEntity,
  IResponseError,
} from '@novu/shared';
import { ChannelTypeEnum, ChatProviderIdEnum, CredentialsKeyEnum, ProvidersIdEnum } from '@novu/shared';
import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';
import { useEffect, useReducer, useRef } from 'react';
import { Controller, useForm, useWatch } from 'react-hook-form';
import { createIntegration, getWebhookSupportStatus, updateIntegration } from '../../../../api/integration';
import { QueryKeys } from '../../../../api/query.keys';
import { useSegment } from '../../../../components/providers/SegmentProvider';
import { When } from '../../../../components/utils/When';
import { API_ROOT, CONTEXT_PATH } from '../../../../config';
import { useEnvironment } from '../../../../hooks';
import { successMessage } from '../../../../utils/notifications';
import { IntegrationsStoreModalAnalytics } from '../../constants';
import type { IIntegratedProvider } from '../../types';
import { IntegrationInput } from '../IntegrationInput';

enum ACTION_TYPE_ENUM {
  HANDLE_SHOW_SWITCH = 'handle_show_switch',
  HANDLE_ALERT_AND_ERROR_MSG = 'handle_alert_and_error_msg',
  TOGGLE_CHECK = 'toggle_check',
  TOGGLE_IS_ACTIVE = 'set_is_active',
}

type ActionType =
  | { type: ACTION_TYPE_ENUM.TOGGLE_CHECK }
  | {
      type: ACTION_TYPE_ENUM.HANDLE_SHOW_SWITCH;
      payload: boolean;
    }
  | {
      type: ACTION_TYPE_ENUM.HANDLE_ALERT_AND_ERROR_MSG;
      payload: {
        isShowAlert: boolean;
        errorMsg: string;
      };
    }
  | {
      type: ACTION_TYPE_ENUM.TOGGLE_IS_ACTIVE;
    };

interface CheckIntegrationState {
  isActive: boolean;
  check: boolean;
  isShowSwitch: boolean;
  isShowAlert: boolean;
  errorMsg: string;
}

const checkIntegrationInitialState: CheckIntegrationState = {
  isActive: false,
  check: true,
  isShowSwitch: false,
  isShowAlert: false,
  errorMsg: '',
};

const checkIntegrationReducer = (
  state: typeof checkIntegrationInitialState,
  action: ActionType
): CheckIntegrationState => {
  switch (action.type) {
    case ACTION_TYPE_ENUM.HANDLE_SHOW_SWITCH:
      return {
        ...state,
        isShowSwitch: action.payload,
      };

    case ACTION_TYPE_ENUM.HANDLE_ALERT_AND_ERROR_MSG:
      return {
        ...state,
        isShowAlert: action.payload.isShowAlert,
        errorMsg: action.payload.errorMsg,
      };

    case ACTION_TYPE_ENUM.TOGGLE_CHECK:
      return {
        ...state,
        check: !state.check,
      };

    case ACTION_TYPE_ENUM.TOGGLE_IS_ACTIVE:
      return {
        ...state,
        isActive: !state.isActive,
      };

    default:
      return state;
  }
};

export function ConnectIntegrationForm({
  provider,
  organization,
  environment,
  createModel,
  onSuccessFormSubmit,
  onClose,
}: {
  provider: IIntegratedProvider;
  organization?: IOrganizationEntity;
  environment?: IEnvironment;
  createModel: boolean;
  onSuccessFormSubmit: () => void;
  onClose: () => void;
}) {
  const segment = useSegment();
  const alertRef = useRef<HTMLDivElement | null>(null);
  const {
    register,
    handleSubmit: handleSubmitIntegration,
    setValue,
    formState: { errors },
    control,
    watch,
  } = useForm({ shouldUseNativeValidation: false });

  const { colorScheme } = useMantineColorScheme();
  const webhookUrlClipboard = useClipboard({ timeout: 1000 });
  const [{ isActive, isShowAlert, isShowSwitch, check, errorMsg }, dispatch] = useReducer(checkIntegrationReducer, {
    ...checkIntegrationInitialState,
    isActive: !!provider?.active,
  });
  const queryClient = useQueryClient();

  const { mutateAsync: createIntegrationApi, isLoading: isLoadingCreate } = useMutation<
    { res: string },
    IResponseError,
    ICreateIntegrationBodyDto
  >(createIntegration);

  const { mutateAsync: updateIntegrationApi, isLoading: isLoadingUpdate } = useMutation<
    { res: string },
    IResponseError,
    {
      integrationId: string;
      data: { credentials: ICredentialsDto; active: boolean; check: boolean };
    }
  >(({ integrationId, data }) => updateIntegration(integrationId, data));

  const { data: webhookSupportStatus } = useQuery(
    ['webhookSupportStatus', provider?.providerId],
    () => getWebhookSupportStatus(provider?.providerId as string),
    {
      enabled: Boolean(
        provider?.providerId && [ChannelTypeEnum.EMAIL, ChannelTypeEnum.SMS].includes(provider.channel) && !createModel
      ),
    }
  );

  useEffect(() => {
    if (provider?.credentials) {
      for (const credential of provider.credentials) {
        setValue(credential.key, credential.value);
      }
    }
    if (provider) {
      dispatch({
        type: ACTION_TYPE_ENUM.HANDLE_ALERT_AND_ERROR_MSG,
        payload: {
          isShowAlert: false,
          errorMsg: '',
        },
      });
    }
  }, [setValue, provider]);

  async function onCreateIntegration(credentials: ICredentialsDto) {
    try {
      if (isShowAlert) {
        dispatch({
          type: ACTION_TYPE_ENUM.HANDLE_ALERT_AND_ERROR_MSG,
          payload: {
            isShowAlert: false,
            errorMsg: '',
          },
        });
      }
      if (createModel) {
        await createIntegrationApi({
          providerId: provider?.providerId ? provider?.providerId : '',
          channel: provider?.channel,
          credentials,
          active: isActive,
          check,
        });
        segment.track(IntegrationsStoreModalAnalytics.CREATE_INTEGRATION_FORM_SUBMIT, {
          providerId: provider?.providerId,
          channel: provider?.channel,
          name: provider?.displayName,
          active: provider?.active,
        });
      } else {
        await updateIntegrationApi({
          integrationId: provider?.integrationId ? provider?.integrationId : '',
          data: { credentials, active: isActive, check },
        });
        segment.track(IntegrationsStoreModalAnalytics.UPDATE_INTEGRATION_FORM_SUBMIT, {
          providerId: provider?.providerId,
          channel: provider?.channel,
          name: provider?.displayName,
          active: provider?.active,
        });
      }
      await queryClient.refetchQueries({
        predicate: ({ queryKey }) =>
          queryKey.includes(QueryKeys.integrationsList) || queryKey.includes(QueryKeys.activeIntegrations),
      });
    } catch (e: any) {
      dispatch({
        type: ACTION_TYPE_ENUM.HANDLE_SHOW_SWITCH,
        payload: true,
      });
      dispatch({
        type: ACTION_TYPE_ENUM.HANDLE_ALERT_AND_ERROR_MSG,
        payload: {
          isShowAlert: true,
          errorMsg: e?.message,
        },
      });
      alertRef.current?.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'end' });

      return;
    }

    successMessage(`Successfully ${createModel ? 'added' : 'updated'} integration`);

    onSuccessFormSubmit();
    onClose();
  }

  function handlerSwitchChange() {
    dispatch({
      type: ACTION_TYPE_ENUM.TOGGLE_IS_ACTIVE,
    });
  }

  function handlerCheckIntegrationChange() {
    dispatch({
      type: ACTION_TYPE_ENUM.TOGGLE_CHECK,
    });
  }

  const logoSrc = provider
    ? `${CONTEXT_PATH}/static/images/providers/${colorScheme}/${provider.logoFileName[`${colorScheme}`]}`
    : '';

  const webhookUrl = `${API_ROOT}/v1/webhooks/organizations/${organization?._id}/environments/${environment?._id}/${provider?.channel}/${provider?.providerId}`;

  return (
    <FormStyled
      name={'connect-integration-form'}
      noValidate
      onSubmit={(e) => {
        handleSubmitIntegration(onCreateIntegration)(e);
        e.stopPropagation();
      }}
    >
      <Header>
        <Stack spacing={10}>
          <Image
            radius="md"
            height={50}
            width={140}
            fit={'contain'}
            src={logoSrc}
            alt={`${provider?.providerId} image`}
          />
          <Center inline>
            <Text>
              Take a look at{' '}
              <a href={provider?.docReference} target="_blank" rel="noreferrer" style={{ color: '#DD2476 ' }}>
                our guide
              </a>{' '}
              for how to connect <strong>{provider?.displayName}</strong>.
            </Text>
          </Center>
        </Stack>
        <ActionIcon
          mt={-50}
          mr={-10}
          variant={'transparent'}
          onClick={onClose}
          data-test-id="connection-integration-form-close"
        >
          <Close />
        </ActionIcon>
      </Header>

      <CenterDiv>
        {provider?.credentials.map((credential: IConfigCredential) => (
          <InputWrapper key={`${credential.key}-${provider?.providerId}`}>
            <Controller
              name={credential.key}
              control={control}
              render={({ field }) => (
                <IntegrationInput credential={credential} errors={errors} field={field} register={register} />
              )}
            />
          </InputWrapper>
        ))}
        {webhookSupportStatus &&
          provider?.channel &&
          [ChannelTypeEnum.EMAIL, ChannelTypeEnum.SMS].includes(provider?.channel) && (
            <InputWrapper>
              <Input
                label="Webhook URL"
                value={webhookUrl}
                readOnly
                rightSection={
                  <CopyWrapper onClick={() => webhookUrlClipboard.copy(webhookUrl)}>
                    {webhookUrlClipboard.copied ? <Check /> : <Copy />}
                  </CopyWrapper>
                }
              />
            </InputWrapper>
          )}
        <ShareableUrl
          provider={provider?.providerId}
          hmacEnabled={useWatch({
            control,
            name: CredentialsKeyEnum.Hmac,
          })}
        />

        <Stack my={20}>
          <ActiveWrapper active={isActive}>
            <Controller
              control={control}
              name="isActive"
              render={({ field }) => (
                <Switch checked={isActive} data-test-id="is_active_id" {...field} onChange={handlerSwitchChange} />
              )}
            />
            <StyledText data-test-id="connect-integration-form-active-text">
              {isActive ? 'Active' : 'Disabled'}
            </StyledText>
          </ActiveWrapper>
          {provider?.channel === ChannelTypeEnum.EMAIL && isShowSwitch && (
            <CheckIntegrationWrapper>
              <Controller
                control={control}
                name="check"
                render={({ field }) => (
                  <Switch
                    checked={check}
                    data-test-id="is_check_integration_id"
                    {...field}
                    onChange={handlerCheckIntegrationChange}
                  />
                )}
              />
              <StyledText>Verify provider credentials</StyledText>
            </CheckIntegrationWrapper>
          )}
          <Alert
            ref={alertRef}
            icon={<IconOutlineWarning size={'16'} />}
            title="An error occurred!"
            color="red"
            mb={30}
            sx={{ display: isShowAlert ? 'initial' : 'none' }}
          >
            {errorMsg}
          </Alert>
        </Stack>
      </CenterDiv>
      <Footer>
        <Button onClick={onClose} variant={'outline'}>
          Cancel
        </Button>
        <Button submit loading={isLoadingUpdate || isLoadingCreate}>
          {createModel ? 'Connect' : 'Update'}
        </Button>
      </Footer>
    </FormStyled>
  );
}

const FormStyled = styled.form`
  flex: 1;
  display: flex;
  flex-direction: column;
  height: 100%;

  > *:last-child {
    margin-top: auto;
  }
`;

const StyledText = styled(Text)`
  display: inline-block;
  word-break: normal;
  margin: 0 10px;
`;

const SideElementBase = styled.div`
  display: flex;
  justify-content: flex-start;
  & > :first-of-type {
    width: auto;
  }
`;

const ActiveWrapper = styled(SideElementBase)<{ active: boolean }>`
  align-items: center;

  ${StyledText} {
    color: ${({ active }) => (active ? colors.success : colors.error)};
  }
`;

const Footer = styled.div`
  padding: 15px;
  height: 80px;
  display: flex;
  justify-content: right;
  align-items: center;
  gap: 20px;
  box-shadow: ${({ theme }) => (theme.colorScheme === 'dark' ? shadows.dark : shadows.medium)};
`;

const Header = styled.div`
  padding: 30px;
  height: 120px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-shadow: ${({ theme }) => (theme.colorScheme === 'dark' ? shadows.dark : shadows.medium)};
`;

const fadeIn = keyframes`
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
`;

const fadeOut = keyframes`
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
`;

const InputWrapper = styled.div`
  padding-bottom: 10px;
  label {
    font-weight: bold;
    margin-bottom: 10px;
    font-size: 14px;
  }
`;

const CheckIntegrationWrapper = styled(SideElementBase)`
  width: 100%;
  align-items: center;
  ${StyledText} {
    flex-grow: 1;
  }
`;

const CopyWrapper = styled.div`
  cursor: pointer;
  &:hover {
    opacity: 0.8;
  }
`;

const CenterDiv = styled.div`
  overflow: auto;
  padding: 30px;
`;

export function ShareableUrl({
  provider,
  hmacEnabled,
}: {
  provider: ProvidersIdEnum | undefined;
  hmacEnabled: boolean;
}) {
  const { environment } = useEnvironment();

  const oauthUrlClipboard = useClipboard({ timeout: 1000 });
  const display = provider === ChatProviderIdEnum.Slack;

  const subscriberId = '<SUBSCRIBER_ID>';
  const environmentId = `environmentId=${environment?._id}`;
  const integrationIdentifier = `&integrationIdentifier=<INTEGRATION_IDENTIFIER>`;
  const hmac = hmacEnabled ? '&hmacHash=<HMAC_HASH>' : '';

  const oauthUrl = `${API_ROOT}/v1/subscribers/${subscriberId}/credentials/slack/oauth?${environmentId}${integrationIdentifier}${hmac}`;

  return (
    <When truthy={display}>
      <InputWrapper>
        <Input
          label="Sharable URL"
          value={oauthUrl}
          rightSection={
            <CopyWrapper onClick={() => oauthUrlClipboard.copy(oauthUrl)}>
              {oauthUrlClipboard.copied ? <Check /> : <Copy />}
            </CopyWrapper>
          }
          disabled={true}
          description={'Use the URL below to share your app with any Slack workspace.'}
        />
      </InputWrapper>
    </When>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { keyframes } from '@emotion/react';
import styled from '@emotion/styled';
import { ActionIcon, Alert, Center, Image, Stack, useMantineColorScheme } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';
import {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/Modal/NovuIntegrationCard.tsx
Tamaño: 4043 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Group, useMantineColorScheme } from '@mantine/core';
import { colors, getGradient, shadows } from '@novu/design-system';
import { IConfigCredential } from '@novu/shared';
import { useIntegrationLimit } from '../../../../hooks';
import type { IIntegratedProvider } from '../../types';
import { CardStatusBar } from '../CardStatusBar';
import { LimitBar } from '../LimitBar';

export function NovuIntegrationCard({
  provider,
  onConnectClick = undefined,
  ribbonText = 'Starting provider',
  selected,
}: {
  provider: IIntegratedProvider;
  onConnectClick?: (visible: boolean, create: boolean, provider: IIntegratedProvider) => void;
  ribbonText?: string;
  selected: boolean;
}) {
  const { colorScheme } = useMantineColorScheme();
  const logoSrc = provider.logoFileName[`${colorScheme}`];
  const brightCard =
    provider.active ||
    provider.credentials.some((cred: IConfigCredential) => {
      return !cred.value;
    });

  const {
    data: { limit, count },
    loading,
  } = useIntegrationLimit(provider.channel);

  return (
    <StyledCard
      dark={colorScheme === 'dark'}
      active={brightCard}
      selected={selected}
      data-test-id="nouv-integration-provider-card"
      onClick={() => {
        if (onConnectClick) {
          onConnectClick(true, true, provider);
        }
      }}
      clickable={onConnectClick !== undefined}
    >
      <RibbonWrapper>
        <Ribbon>{ribbonText}</Ribbon>
      </RibbonWrapper>
      <StyledGroup position="apart">
        <CardHeader>
          <Logo src={logoSrc} alt={provider.displayName} />
        </CardHeader>
        <CardFooter>
          <LimitBar channel={provider.channel} limit={limit} count={count} loading={loading} />

          <div
            style={{
              marginTop: '10px',
            }}
          >
            <CardStatusBar active={limit - count > 0 && provider.active} />
          </div>
        </CardFooter>
      </StyledGroup>
    </StyledCard>
  );
}

const StyledGroup = styled(Group)`
  height: 100%;
  justify-content: space-between;
  flex-direction: column;
`;

const RibbonWrapper = styled.div`
  width: 115px;
  height: 115px;
  position: absolute;
  right: 10px;
  top: 10px;
  transform: rotate(45deg);
`;

const Ribbon = styled.div`
  background: ${colors.success};
  font-size: 9px;
  width: 100%;
  text-align: center;
  color: ${colors.white};
  line-height: 20px;
  font-weight: bold;
`;

const CardHeader = styled.div`
  display: flex;
  justify-content: space-between;
  width: 100%;

  svg {
    color: ${colors.B40};
  }
`;

const Logo = styled.img`
  max-width: 140px;
  max-height: 50px;
`;

const CardFooter = styled.div`
  width: 100%;
`;

const StyledCard = styled.div<{ dark: boolean; active: boolean; clickable: boolean; selected: boolean }>`
  background-color: ${({ dark }) => (dark ? colors.B17 : colors.B98)};
  box-shadow: ${({ theme }) => (theme.colorScheme === 'dark' ? shadows.dark : shadows.medium)};
  border: 1px solid transparent;
  border-radius: 7px;
  display: inline-block;
  padding: 25px;
  height: 200px;
  width: 100%;
  min-width: 205px;
  transition: all 0.15s ease-in;
  position: relative;
  overflow: hidden;

  ${({ active }) => {
    return (
      !active &&
      `
      ${Logo} {
        opacity: 0.5;
      }
    `
    );
  }};
  ${({ selected, dark }) => {
    return selected
      ? `
           background: ${dark ? getGradient(colors.B20) : getGradient(colors.BGLight)} padding-box, ${
             colors.vertical
           } border-box;
      `
      : undefined;
  }};

  &:hover {
    ${Logo} {
      opacity: 1;
    }
    cursor: ${({ clickable }) => (clickable ? 'pointer' : undefined)};
    ${({ dark, clickable }) =>
      clickable
        ? dark
          ? `
            background-color: ${colors.B20};
            box-shadow: ${shadows.dark};
          `
          : `
            background-color: ${colors.BGLight};
            box-shadow: ${shadows.light};
          `
        : undefined};
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Group, useMantineColorScheme } from '@mantine/core';
import { colors, getGradient, shadows } from '@novu/design-system';
import { IConfigCredential } from '@novu/shared';
import { useIntegrationLimit } from '../../../../hooks';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/Modal/ProviderCard.tsx
Tamaño: 4580 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Group, useMantineColorScheme } from '@mantine/core';
import { Button, colors, getGradient, Settings, shadows } from '@novu/design-system';
import { IConfigCredential } from '@novu/shared';
import { When } from '../../../../components/utils/When';
import { CONTEXT_PATH } from '../../../../config';
import type { IIntegratedProvider } from '../../types';
import { CardStatusBar } from '../CardStatusBar';

export function ProviderCard({
  provider,
  onConnectClick,
  selected,
}: {
  provider: IIntegratedProvider;
  selected: boolean;
  onConnectClick: (visible: boolean, create: boolean, provider: IIntegratedProvider) => void;
}) {
  const { colorScheme } = useMantineColorScheme();
  const logoSrc = `${CONTEXT_PATH}/static/images/providers/${colorScheme}/${provider.logoFileName[`${colorScheme}`]}`;
  const brightCard =
    provider.active ||
    provider.credentials.some((cred: IConfigCredential) => {
      return !cred.value;
    });

  function handleOnClickSettings() {
    onConnectClick(true, false, provider);
  }

  return (
    <StyledCard
      dark={colorScheme === 'dark'}
      selected={selected}
      active={brightCard}
      data-test-id={`integration-provider-card-${provider.providerId}`}
      onClick={() => {
        if (provider.comingSoon) return;
        if (provider.connected) {
          handleOnClickSettings();
        } else {
          onConnectClick(true, true, provider);
        }
      }}
    >
      <When truthy={provider.comingSoon || provider.betaVersion}>
        <RibbonWrapper>
          <Ribbon>{provider.comingSoon ? 'COMING SOON' : 'BETA'}</Ribbon>
        </RibbonWrapper>
      </When>

      <StyledGroup position="apart">
        <CardHeader>
          <Logo src={logoSrc} alt={provider.displayName} />
          {provider.connected && !provider.betaVersion && !provider.novu ? (
            <Settings data-test-id="provider-card-settings-svg" />
          ) : null}
        </CardHeader>

        <CardFooter>
          {!provider.connected ? (
            <StyledButton fullWidth variant={'outline'} disabled={provider.comingSoon}>
              Connect
            </StyledButton>
          ) : (
            <CardStatusBar active={provider.active} />
          )}
        </CardFooter>
      </StyledGroup>
    </StyledCard>
  );
}

const StyledButton = styled(Button)`
  background-image: ${({ theme }) =>
    theme.colorScheme === 'dark'
      ? `linear-gradient(0deg, ${colors.B17} 0%, ${colors.B17} 100%),linear-gradient(99deg,#DD2476 0% 0%, #FF512F 100% 100%)`
      : `linear-gradient(0deg, ${colors.B98} 0%, ${colors.B98} 100%),linear-gradient(99deg,#DD2476 0% 0%, #FF512F 100% 100%)`};
`;

const StyledGroup = styled(Group)`
  height: 100%;
  justify-content: space-between;
  flex-direction: column;
`;

const RibbonWrapper = styled.div`
  width: 115px;
  height: 115px;
  position: absolute;
  right: 10px;
  top: 10px;
  transform: rotate(45deg);
`;

const Ribbon = styled.div`
  background: ${colors.horizontal};
  font-size: 9px;
  width: 100%;
  text-align: center;
  color: ${colors.white};
  line-height: 20px;
  font-weight: bold;
`;

const CardHeader = styled.div`
  display: flex;
  justify-content: space-between;
  width: 100%;

  svg {
    color: ${colors.B40};
  }
`;

const Logo = styled.img`
  max-width: 140px;
  max-height: 50px;
`;

const CardFooter = styled.div`
  width: 100%;
`;

const StyledCard = styled.div<{ dark: boolean; active: boolean; selected: boolean }>`
  background-color: ${({ dark }) => (dark ? colors.B17 : colors.B98)};
  box-shadow: ${({ theme }) => (theme.colorScheme === 'dark' ? shadows.dark : shadows.medium)};
  border: 1px solid transparent;
  border-radius: 7px;
  display: inline-block;
  padding: 25px;
  height: 200px;
  width: 100%;
  min-width: 203px;
  position: relative;
  overflow: hidden;

  ${({ active }) => {
    return (
      !active &&
      `
      ${Logo} {
        opacity: 0.5;
      }
    `
    );
  }};

  ${({ selected, dark }) => {
    return selected
      ? `
           background: ${dark ? getGradient(colors.B20) : getGradient(colors.BGLight)} padding-box, ${
             colors.vertical
           } border-box;
      `
      : undefined;
  }};

  &:hover {
    ${Logo} {
      opacity: 1;
    }
    cursor: pointer;
    ${({ dark }) =>
      dark
        ? `
            background-color: ${colors.B20};
            box-shadow: ${shadows.dark};
          `
        : `
            background-color: ${colors.BGLight};
            box-shadow: ${shadows.light};
          `};
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Group, useMantineColorScheme } from '@mantine/core';
import { Button, colors, getGradient, Settings, shadows } from '@novu/design-system';
import { IConfigCredential } from '@novu/shared';
import { When } from '../../../../components/utils/When';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/multi-provider/CreateProviderInstanceSidebar.tsx
Tamaño: 11050 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, Radio, Text, Input, useMantineTheme } from '@mantine/core';
import { useEffect, useMemo } from 'react';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { Controller, useForm } from 'react-hook-form';
import styled from '@emotion/styled';
import { useDisclosure } from '@mantine/hooks';
import { ChannelTypeEnum, NOVU_PROVIDERS, providers } from '@novu/shared';
import type { IResponseError, ICreateIntegrationBodyDto } from '@novu/shared';
import {
  ActionButton,
  Button,
  colors,
  NameInput,
  Sidebar,
  ConditionPlus,
  ArrowLeft,
  Condition,
  inputStyles,
} from '@novu/design-system';

import { useEnvironment } from '../../../../hooks';
import { useSegment } from '../../../../components/providers/SegmentProvider';
import { createIntegration } from '../../../../api/integration';
import { defaultIntegrationConditionsProps, IntegrationsStoreModalAnalytics } from '../../constants';
import { errorMessage, successMessage } from '../../../../utils/notifications';
import { QueryKeys } from '../../../../api/query.keys';
import { ProviderImage } from './SelectProviderSidebar';
import { CHANNEL_TYPE_TO_STRING } from '../../../../utils/channels';
import type { IntegrationEntity } from '../../types';
import { useProviders } from '../../useProviders';
import { When } from '../../../../components/utils/When';
import { Conditions, IConditions } from '../../../../components/conditions';
import { ConditionIconButton } from '../ConditionIconButton';

interface ICreateProviderInstanceForm {
  name: string;
  environmentId: string;
  conditions: IConditions[];
}

export function CreateProviderInstanceSidebar({
  isOpened,
  providerId,
  channel,
  onClose,
  onGoBack,
  onIntegrationCreated,
}: {
  isOpened: boolean;
  channel?: string;
  providerId?: string;
  onClose: () => void;
  onGoBack: () => void;
  onIntegrationCreated: (id: string) => void;
}) {
  const { colorScheme } = useMantineTheme();
  const { environments, isLoaded } = useEnvironment();
  const { isLoading: areIntegrationsLoading, providers: integrations } = useProviders();
  const isLoading = !isLoaded || areIntegrationsLoading;
  const queryClient = useQueryClient();
  const segment = useSegment();
  const [conditionsFormOpened, { close: closeConditionsForm, open: openConditionsForm }] = useDisclosure(false);

  const provider = useMemo(
    () => providers.find((el) => el.channel === channel && el.id === providerId),
    [channel, providerId]
  );

  const { mutateAsync: createIntegrationApi, isLoading: isLoadingCreate } = useMutation<
    IntegrationEntity,
    IResponseError,
    ICreateIntegrationBodyDto
  >(createIntegration);

  const { handleSubmit, control, reset, watch, setValue, getValues } = useForm<ICreateProviderInstanceForm>({
    shouldUseNativeValidation: false,
    defaultValues: {
      name: '',
      environmentId: '',
      conditions: [],
    },
  });

  const watchedConditions = watch('conditions');
  const numOfConditions: number = useMemo(() => {
    if (watchedConditions && watchedConditions[0] && watchedConditions[0].children) {
      return watchedConditions[0].children.length;
    }

    return 0;
  }, [watchedConditions]);

  const selectedEnvironmentId = watch('environmentId');

  const showNovuProvidersErrorMessage = useMemo(() => {
    if (!provider || integrations.length === 0 || !NOVU_PROVIDERS.includes(provider.id)) {
      return false;
    }

    const found = integrations.find((integration) => {
      return integration.providerId === provider.id && integration.environmentId === selectedEnvironmentId;
    });

    return found !== undefined;
  }, [integrations, provider, selectedEnvironmentId]);

  const onCreateIntegrationInstance = async (data: ICreateProviderInstanceForm) => {
    try {
      if (!provider) {
        return;
      }

      const { channel: selectedChannel } = provider;
      const { environmentId, conditions } = data;

      const { _id: integrationId } = await createIntegrationApi({
        providerId: provider.id,
        channel: selectedChannel,
        name: data.name,
        credentials: {},
        active: true,
        check: false,
        conditions,
        _environmentId: environmentId,
      });

      segment.track(IntegrationsStoreModalAnalytics.CREATE_INTEGRATION_INSTANCE, {
        providerId: provider.id,
        channel: selectedChannel,
        name: data.name,
        environmentId,
      });
      successMessage('Integration was created');
      onIntegrationCreated(integrationId ?? '');

      queryClient.refetchQueries({
        predicate: ({ queryKey }) =>
          queryKey.includes(QueryKeys.integrationsList) || queryKey.includes(QueryKeys.activeIntegrations),
      });
    } catch (e: any) {
      errorMessage(e.message || 'Unexpected error');
    }
  };

  useEffect(() => {
    if (!environments?.length) {
      return;
    }

    reset({
      name: provider?.displayName ?? '',
      environmentId: environments.find((env) => env.name === 'Development')?._id || '',
      conditions: [],
    });
  }, [reset, environments, provider]);

  if (!provider) {
    return null;
  }

  const updateConditions = (conditions: IConditions[]) => {
    setValue('conditions', conditions, { shouldDirty: true });
  };

  if (conditionsFormOpened) {
    const [conditions, name] = getValues(['conditions', 'name']);

    return (
      <Conditions
        conditions={conditions}
        name={name}
        isOpened={conditionsFormOpened}
        updateConditions={updateConditions}
        onClose={closeConditionsForm}
        {...defaultIntegrationConditionsProps}
      />
    );
  }

  return (
    <Sidebar
      isOpened={isOpened}
      isLoading={isLoading}
      onSubmit={(e) => {
        handleSubmit(onCreateIntegrationInstance)(e);
        e.stopPropagation();
      }}
      onClose={onClose}
      customHeader={
        <Group spacing={12} w="100%" h={40} noWrap>
          <ActionButton
            Icon={ArrowLeft}
            onClick={onGoBack}
            data-test-id="create-provider-instance-sidebar-back"
            sx={{
              '> svg': {
                width: 16,
                height: 16,
              },
            }}
          />
          <ProviderImage providerId={provider?.id ?? ''} />
          <Controller
            control={control}
            name="name"
            defaultValue=""
            render={({ field }) => {
              return (
                <NameInput
                  {...field}
                  value={field.value !== undefined ? field.value : provider.displayName}
                  data-test-id="provider-instance-name"
                  placeholder="Enter instance name"
                  ml={-10}
                />
              );
            }}
          />
          <Group mt={-10} spacing={12} align="start" noWrap ml="auto">
            <ConditionIconButton data-test-id="add-conditions-icon-btn" onClick={openConditionsForm} />
          </Group>
        </Group>
      }
      customFooter={
        <Group ml="auto">
          <Button variant="outline" onClick={onClose} data-test-id="create-provider-instance-sidebar-cancel">
            Cancel
          </Button>
          <Button
            disabled={isLoading || isLoadingCreate || showNovuProvidersErrorMessage}
            loading={isLoadingCreate}
            submit
            data-test-id="create-provider-instance-sidebar-create"
          >
            Create
          </Button>
        </Group>
      }
      data-test-id="create-provider-instance-sidebar"
    >
      <Text color={colors.B40}>
        Specify assignment preferences to automatically allocate the provider instance to the{' '}
        {CHANNEL_TYPE_TO_STRING[provider.channel]} channel.
      </Text>
      <Controller
        control={control}
        name={'environmentId'}
        defaultValue="Development"
        render={({ field }) => {
          return (
            <Radio.Group
              styles={inputStyles}
              sx={{
                '.mantine-Group-root': {
                  paddingTop: 0,
                  paddingLeft: '10px',
                },
              }}
              label="Environment"
              description="Provider instance executes only for"
              spacing={26}
              {...field}
            >
              {environments
                ?.map((environment) => {
                  return { value: environment._id, label: environment.name };
                })
                .map((option) => (
                  <Radio
                    styles={() => ({
                      radio: {
                        backgroundColor: 'transparent',
                        borderColor: colors.B60,
                        '&:checked': { borderColor: 'transparent' },
                      },
                      label: {
                        paddingLeft: 10,
                        fontSize: '14px',
                        fontWeight: 400,
                      },
                    })}
                    key={option.value}
                    value={option.value}
                    label={option.label}
                  />
                ))}
            </Radio.Group>
          );
        }}
      />
      <Input.Wrapper
        label={
          <>
            <Group spacing={5}>
              Conditions
              <Text color={colors.B40} style={{ fontWeight: 'normal' }}>
                (optional)
              </Text>
            </Group>
          </>
        }
        description="Add a condition if you want to apply the provider instance to a specific tenant."
        styles={inputStyles}
      >
        <Group mt={16} position="left">
          <Button
            variant="outline"
            data-test-id="add-conditions-btn"
            onClick={openConditionsForm}
            icon={
              <>
                <When truthy={numOfConditions === 0}>
                  <Group spacing={8}>
                    <ConditionPlus />
                  </Group>
                </When>
                <When truthy={numOfConditions > 0}>
                  <Group spacing={2} color={colorScheme === 'dark' ? colors.white : colors.B30}>
                    <Condition />
                    {numOfConditions}
                  </Group>
                </When>
              </>
            }
          >
            {numOfConditions === 0 ? 'Add' : 'Edit'} conditions
          </Button>
        </Group>
      </Input.Wrapper>
      <When truthy={showNovuProvidersErrorMessage}>
        <WarningMessage>
          <Text data-test-id="novu-provider-error">
            You can only create one {provider.displayName} per environment.
          </Text>
        </WarningMessage>
      </When>
    </Sidebar>
  );
}

const WarningMessage = styled.div`
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 15px;
  margin-bottom: 40px;
  color: #e54545;

  background: rgba(230, 69, 69, 0.15);
  border-radius: 7px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, Radio, Text, Input, useMantineTheme } from '@mantine/core';
import { useEffect, useMemo } from 'react';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { Controller, useForm } from 'react-hook-form';
import styled from '@emotion/styled';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/multi-provider/NovuProviderSidebarContent.tsx
Tamaño: 1357 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, Stack, useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum } from '@novu/shared';

import { ErrorIcon, colors, Text } from '@novu/design-system';
import { LimitBar } from '../LimitBar';
import { useIntegrationLimit } from '../../../../hooks';
import type { IIntegratedProvider } from '../../types';

export const NovuProviderSidebarContent = ({ provider }: { provider: IIntegratedProvider | null }) => {
  const {
    data: { limit, count },
    loading,
  } = useIntegrationLimit(provider?.channel || ChannelTypeEnum.EMAIL);
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';
  const descriptionColor = isDark ? colors.B60 : colors.B40;

  return (
    <Stack spacing={16}>
      <Group pt={10} pb={10} spacing={16}>
        <ErrorIcon width="26" height="26" viewBox="0 0 22 22" color={descriptionColor} />
        <Text color={descriptionColor} data-test-id="novu-provider-limits">
          Novu provider allows sending max {limit} {provider?.channel === ChannelTypeEnum.EMAIL ? 'emails' : 'messages'}{' '}
          per month,
          <br />
          to send more messages, configure a different provider
        </Text>
      </Group>
      <LimitBar channel={provider?.channel} limit={limit} count={count} loading={loading} showDescription={false} />
    </Stack>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, Stack, useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum } from '@novu/shared';
import { ErrorIcon, colors, Text } from '@novu/design-system';
import { LimitBar } from '../LimitBar';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/multi-provider/ProviderInfo.tsx
Tamaño: 974 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import { ChannelTypeEnum, IEnvironment } from '@novu/shared';

import { CHANNEL_TYPE_TO_STRING } from '../../../../utils/channels';
import type { IIntegratedProvider } from '../../types';
import { IntegrationChannel } from '../IntegrationChannel';
import { IntegrationEnvironmentPill } from '../IntegrationEnvironmentPill';

export const ProviderInfo = ({
  provider,
  environments,
}: {
  provider: IIntegratedProvider | null;
  environments: IEnvironment[] | undefined;
}) => (
  <Group spacing={16} mt={10}>
    <IntegrationChannel
      name={CHANNEL_TYPE_TO_STRING[provider?.channel || ChannelTypeEnum.EMAIL]}
      type={provider?.channel || ChannelTypeEnum.EMAIL}
      testId="provider-instance-channel"
    />
    <IntegrationEnvironmentPill
      name={environments?.find((environment) => environment._id === provider?.environmentId)?.name || 'Development'}
      testId="provider-instance-environment"
    />
  </Group>
);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import { ChannelTypeEnum, IEnvironment } from '@novu/shared';
import { CHANNEL_TYPE_TO_STRING } from '../../../../utils/channels';
import type { IIntegratedProvider } from '../../types';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/multi-provider/SelectPrimaryIntegrationModal.tsx
Tamaño: 8769 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useCallback, useMemo, useState } from 'react';
import { Modal, useMantineTheme } from '@mantine/core';
import styled from '@emotion/styled';
import type { Row } from 'react-table';
import { ChannelTypeEnum } from '@novu/shared';
import {
  Button,
  colors,
  IExtendedColumn,
  Popover,
  shadows,
  Table,
  Text,
  Title,
  withCellLoading,
} from '@novu/design-system';
import { IntegrationChannel } from '../IntegrationChannel';
import { IntegrationEnvironmentPill } from '../IntegrationEnvironmentPill';
import { CHANNEL_TYPE_TO_STRING } from '../../../../utils/channels';
import { useEnvironment, useIntegrations } from '../../../../hooks';
import { IntegrationEntity, ITableIntegration } from '../../types';
import { mapToTableIntegration } from '../../utils';
import { IntegrationStatusCell } from '../IntegrationStatusCell';
import { IntegrationNameCell } from '../IntegrationNameCell';
import { useMakePrimaryIntegration } from '../../../../api/hooks/useMakePrimaryIntegration';
import { When } from '../../../../components/utils/When';

const ModalBodyHolder = styled.div`
  display: flex;
  width: 100%;
  flex-direction: column;
  justify-content: flex-end;
  gap: 16px;

  & [data-table-holder] {
    min-height: initial !important;
    overflow-x: hidden;
    overflow-y: auto;
    max-height: 70vh;
    padding-right: 5px;

    @media screen and (max-width: 1366px) {
      max-height: 400px;
    }
  }
`;

const Description = styled(Text)`
  color: ${colors.B60};
  font-size: 14px;
  line-height: 20px;
`;

const Warning = styled(Text)`
  color: ${colors.error};
  font-size: 14px;
  line-height: 20px;
`;

const MetaHolder = styled.div`
  display: flex;
  align-items: center;
  gap: 16px;
`;

const ButtonsHolder = styled.div`
  display: flex;
  justify-content: flex-end;
  align-items: flex-end;
  gap: 24px;
  flex: 1 0 0;
  margin-top: 14px;
`;

const columns: IExtendedColumn<ITableIntegration>[] = [
  {
    accessor: 'name',
    Header: 'Name',
    Cell: IntegrationNameCell,
  },
  {
    accessor: 'provider',
    Header: 'Provider',
    Cell: withCellLoading(
      ({ row: { original } }) => {
        return (
          <Text data-test-id="integration-provider-cell" rows={1}>
            {original.provider}
          </Text>
        );
      },
      { loadingTestId: 'integration-provider-cell-loading' }
    ),
  },
  {
    accessor: 'active',
    Header: 'Status',
    width: 125,
    maxWidth: 125,
    Cell: IntegrationStatusCell,
  },
];

const initialState: {
  selectedIntegrationId?: string;
  isActive: boolean;
  selectedRowId?: string;
  isPopoverOpened: boolean;
} = { isActive: true, isPopoverOpened: false };

export interface ISelectPrimaryIntegrationModalProps {
  isOpened: boolean;
  environmentId?: string;
  channelType?: ChannelTypeEnum;
  exclude?: (integration: IntegrationEntity) => boolean;
  onClose: () => void;
}

export const SelectPrimaryIntegrationModal = ({
  isOpened,
  environmentId,
  channelType = ChannelTypeEnum.EMAIL,
  exclude,
  onClose,
}: ISelectPrimaryIntegrationModalProps) => {
  const theme = useMantineTheme();
  const [{ selectedIntegrationId, isActive, selectedRowId, isPopoverOpened }, setSelectedState] =
    useState(initialState);

  const { environments, isLoaded } = useEnvironment();
  const environmentName = environments?.find((el) => el._id === environmentId)?.name ?? '';

  const onCloseCallback = useCallback(() => {
    setSelectedState(initialState);
    onClose();
  }, [onClose]);

  const { integrations, loading: areIntegrationsLoading } = useIntegrations();
  const { makePrimaryIntegration, isLoading: isMarkingPrimaryIntegration } = useMakePrimaryIntegration({
    onSuccess: () => onCloseCallback(),
  });
  const integrationsByEnvAndChannel = useMemo<ITableIntegration[]>(() => {
    const filteredIntegrations = (integrations ?? []).filter((el) => {
      let isNotExcluded = true;
      if (exclude) {
        isNotExcluded = !exclude(el);
      }

      if (environmentId) {
        return el.channel === channelType && el._environmentId === environmentId && isNotExcluded;
      }

      return el.channel === channelType && isNotExcluded;
    });

    return filteredIntegrations.map((el) => mapToTableIntegration(el, environments));
  }, [integrations, environments, channelType, environmentId, exclude]);

  const initialSelectedIndex = useMemo(() => {
    const primary = integrationsByEnvAndChannel.find((el) => el.primary);
    if (primary) {
      return integrationsByEnvAndChannel.indexOf(primary ?? {});
    }

    return -1;
  }, [integrationsByEnvAndChannel]);

  const isLoading = !isLoaded || areIntegrationsLoading;
  const isInitialProviderSelected = !selectedRowId || selectedRowId === `${initialSelectedIndex}`;
  const makePrimaryButtonDisabled = !selectedIntegrationId || isLoading || isInitialProviderSelected;
  const channelName = CHANNEL_TYPE_TO_STRING[channelType];

  const onRowSelectCallback = (row: Row<ITableIntegration>) => {
    setSelectedState((old) => ({
      ...old,
      selectedIntegrationId: row.original.integrationId,
      isActive: row.original.active,
      selectedRowId: row.id,
    }));
  };

  return (
    <Modal
      opened={isOpened}
      withinPortal
      overlayColor={theme.colorScheme === 'dark' ? colors.BGDark : colors.BGLight}
      overlayOpacity={0.7}
      styles={{
        root: {
          backdropFilter: 'blur(10px)',
        },
        modal: {
          backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.white,
          width: 800,
          '@media (max-width: 1366px)': {
            maxHeight: '650px',
          },
        },
        inner: {
          alignItems: 'center',
        },
        header: {
          marginBottom: '16px',
        },
      }}
      title={<Title size={2}>Select primary provider</Title>}
      shadow={theme.colorScheme === 'dark' ? shadows.dark : shadows.medium}
      radius="md"
      size="lg"
      onClose={() => onCloseCallback()}
    >
      <ModalBodyHolder data-test-id="select-primary-integration-modal">
        <Description>
          {`Please select the primary provider instance within the ${channelName.toLowerCase()} ` +
            `channel in the ${environmentName.toLowerCase()} environment.`}
        </Description>
        <MetaHolder>
          <IntegrationEnvironmentPill
            name={environmentName}
            testId="integration-environment-pill"
            isLoading={isLoading}
          />
          <IntegrationChannel
            type={channelType}
            name={channelName}
            sameColor
            isLoading={isLoading}
            testId="integration-channel-cell"
          />
        </MetaHolder>
        <When truthy={isLoading}>
          <Table loading loadingItems={5} data-test-id="integrations-list-table" columns={columns} withSelection />
        </When>
        <When truthy={!isLoading}>
          <Table
            data-test-id="integrations-list-table"
            columns={columns}
            data={integrationsByEnvAndChannel}
            withSelection
            onRowSelect={onRowSelectCallback}
            initialSelectedRows={initialSelectedIndex > -1 ? { [initialSelectedIndex]: true } : undefined}
          />
        </When>
        <ButtonsHolder>
          {!isActive && !isInitialProviderSelected && (
            <Warning>
              The selected provider instance will be activated as the primary provider can not be disabled.
            </Warning>
          )}
          <Button variant="outline" onClick={onCloseCallback}>
            Cancel
          </Button>
          <Popover
            opened={isPopoverOpened && isInitialProviderSelected}
            withArrow
            withinPortal
            offset={5}
            transitionDuration={300}
            position="top"
            width={230}
            styles={{ dropdown: { minHeight: 'initial !important' } }}
            content={<Description>The selected provider instance is already the primary provider</Description>}
            target={
              <span
                onMouseEnter={() => setSelectedState((old) => ({ ...old, isPopoverOpened: true }))}
                onMouseLeave={() => setSelectedState((old) => ({ ...old, isPopoverOpened: false }))}
              >
                <Button
                  loading={isMarkingPrimaryIntegration}
                  disabled={makePrimaryButtonDisabled}
                  onClick={() => makePrimaryIntegration({ id: selectedIntegrationId ?? '' })}
                  data-test-id="make-primary-button"
                >
                  Make primary
                </Button>
              </span>
            }
          />
        </ButtonsHolder>
      </ModalBodyHolder>
    </Modal>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useCallback, useMemo, useState } from 'react';
import { Modal, useMantineTheme } from '@mantine/core';
import styled from '@emotion/styled';
import type { Row } from 'react-table';
import { ChannelTypeEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/multi-provider/SelectProviderSidebar.tsx
Tamaño: 11107 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useCallback, useEffect, useMemo, useState } from 'react';
import styled from '@emotion/styled';
import { Group, Image, Space, Stack, Tabs, useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum, InAppProviderIdEnum } from '@novu/shared';
import {
  colors,
  Sidebar,
  Button,
  Input,
  Title,
  Tooltip,
  Text,
  getGradient,
  Search,
  useTabsStyles,
} from '@novu/design-system';

import { useLocation, useNavigate } from 'react-router-dom';
import { useDebounce } from '../../../../hooks';
import { ChannelTitle } from '../../../templates/components/ChannelTitle';
import type { IIntegratedProvider } from '../../types';
import { CHANNELS_ORDER } from '../IntegrationsListNoData';
import { CHANNEL_TYPE_TO_STRING } from '../../../../utils/channels';
import { getLogoFileName, initialProvidersList } from '../../../../utils/providers';
import { sortProviders } from './sort-providers';
import { When } from '../../../../components/utils/When';
import { CONTEXT_PATH } from '../../../../config';
import { useProviders } from '../../useProviders';
import { ROUTES } from '../../../../constants/routes';

const filterSearch = (list, search: string) =>
  list.filter((prov) => prov.displayName.toLowerCase().includes(search.toLowerCase()));

export function SelectProviderSidebar({
  scrollTo,
  isOpened,
  onClose,
  onNextStepClick,
}: {
  scrollTo?: ChannelTypeEnum;
  isOpened: boolean;
  onClose: () => void;
  onNextStepClick: (selectedProvider: IIntegratedProvider) => void;
}) {
  const [providersList, setProvidersList] = useState(initialProvidersList);
  const [selectedTab, setSelectedTab] = useState(ChannelTypeEnum.IN_APP);
  const { isLoading: isIntegrationsLoading, providers: integrations } = useProviders();
  const navigate = useNavigate();
  const { pathname } = useLocation();

  const inAppCount: number = useMemo(() => {
    const count = integrations.filter(
      (integration) =>
        integration.channel === ChannelTypeEnum.IN_APP && integration.providerId === InAppProviderIdEnum.Novu
    ).length;

    if (count === 2) {
      setSelectedTab(ChannelTypeEnum.EMAIL);
    }

    return count;
  }, [integrations]);

  const [selectedProvider, setSelectedProvider] = useState<IIntegratedProvider | null>(null);
  const { classes: tabsClasses } = useTabsStyles(false);

  const debouncedSearchChange = useDebounce((search: string) => {
    setProvidersList({
      [ChannelTypeEnum.EMAIL]: filterSearch(providersList[ChannelTypeEnum.EMAIL], search),
      [ChannelTypeEnum.SMS]: filterSearch(providersList[ChannelTypeEnum.SMS], search),
      [ChannelTypeEnum.PUSH]: filterSearch(providersList[ChannelTypeEnum.PUSH], search),
      [ChannelTypeEnum.IN_APP]: filterSearch(providersList[ChannelTypeEnum.IN_APP], search),
      [ChannelTypeEnum.CHAT]: filterSearch(providersList[ChannelTypeEnum.CHAT], search),
    });
  }, 500);

  const emptyProvidersList = Object.values(providersList).every((list) => list.length === 0);

  const onProviderClick = (provider) => () => setSelectedProvider(provider);

  const onTabChange = useCallback(
    (channel: ChannelTypeEnum) => {
      setSelectedTab(channel as ChannelTypeEnum);

      if (pathname.includes(ROUTES.INTEGRATIONS_CREATE)) {
        navigate(`${ROUTES.INTEGRATIONS_CREATE}?scrollTo=${channel}`);
      }
    },
    [navigate, pathname]
  );

  const onSidebarClose = () => {
    onClose();
    setProvidersList(initialProvidersList);
    setSelectedTab(inAppCount < 2 ? ChannelTypeEnum.IN_APP : ChannelTypeEnum.EMAIL);
  };

  const scrollToElement = (elementId: string) => {
    const element = document.getElementById(elementId);
    if (element && element.parentElement) {
      element.parentElement.scrollTo({
        behavior: 'smooth',
        top: element.offsetTop - 250,
      });
    }
  };

  // TODO: sometime the scrollTo url param needs to change and sometimes not (e.g. from /get-started)
  useEffect(() => {
    if (selectedTab && !isIntegrationsLoading) {
      onTabChange(selectedTab);
      scrollToElement(selectedTab);
    }
  }, [selectedTab, isIntegrationsLoading, onTabChange]);

  useEffect(() => {
    if (scrollTo && !isIntegrationsLoading) {
      onTabChange(scrollTo);
      scrollToElement(scrollTo);
    }
  }, [scrollTo, isIntegrationsLoading, onTabChange]);

  return (
    <Sidebar
      isOpened={isOpened}
      isLoading={isIntegrationsLoading}
      onClose={onSidebarClose}
      customHeader={
        <Stack spacing={8}>
          {selectedProvider !== null ? (
            <>
              <Group spacing={12} h={40}>
                <ProviderImage providerId={selectedProvider.providerId} />
                <Title size={2} data-test-id="selected-provider-name">
                  {selectedProvider.displayName}
                </Title>
              </Group>
              <Text color={colors.B40}>
                A provider instance for {CHANNEL_TYPE_TO_STRING[selectedProvider.channel]} channel
              </Text>
            </>
          ) : (
            <>
              <Group h={40}>
                <Title size={2}>Select a provider</Title>
              </Group>
              <Text color={colors.B40}>Select a provider to create instance for a channel</Text>
            </>
          )}
        </Stack>
      }
      customFooter={
        <Group ml="auto">
          <Button variant={'outline'} onClick={onSidebarClose} data-test-id="select-provider-sidebar-cancel">
            Cancel
          </Button>
          <Tooltip sx={{ position: 'absolute' }} disabled={selectedProvider !== null} label={'Select a provider'}>
            <span>
              <Button
                disabled={selectedProvider === null}
                onClick={() => {
                  if (selectedProvider === null) {
                    return;
                  }
                  onNextStepClick(selectedProvider);
                }}
                data-test-id="select-provider-sidebar-next"
              >
                Next
              </Button>
            </span>
          </Tooltip>
        </Group>
      }
      data-test-id="select-provider-sidebar"
    >
      <SelectProviderBodyContainer>
        <Input
          type={'search'}
          onChange={(e) => {
            debouncedSearchChange(e.target.value);
            if (e.target.value === '') {
              // added timeout of 1000ms so that scroll happens after provider list is rendered
              setTimeout(() => scrollToElement(selectedTab), 1000);
            }
          }}
          mb={20}
          placeholder={'Search a provider...'}
          rightSection={<Search />}
        />
        <Tabs classNames={tabsClasses} onTabChange={onTabChange} value={selectedTab}>
          <Tabs.List>
            {CHANNELS_ORDER.map((channelType) => {
              const list = providersList[channelType];

              return (
                <Tabs.Tab
                  key={channelType}
                  hidden={list.length === 0 || (channelType === ChannelTypeEnum.IN_APP && inAppCount === 2)}
                  value={channelType}
                >
                  <ChannelTitle spacing={5} channel={channelType} />
                </Tabs.Tab>
              );
            })}
          </Tabs.List>
        </Tabs>
        <Space h={20} />
        <CenterDiv>
          <When truthy={emptyProvidersList}>
            <Image
              src={`${CONTEXT_PATH}/static/images/empty-provider-search.svg`}
              data-test-id="select-provider-no-search-results-img"
            />
          </When>
          {!emptyProvidersList &&
            CHANNELS_ORDER.map((channelType) => {
              return (
                <ListProviders
                  key={channelType}
                  selectedProvider={selectedProvider}
                  onProviderClick={onProviderClick}
                  channelProviders={
                    channelType === ChannelTypeEnum.IN_APP && inAppCount === 2 ? [] : providersList[channelType]
                  }
                  channelType={channelType}
                />
              );
            })}
        </CenterDiv>
      </SelectProviderBodyContainer>
    </Sidebar>
  );
}

export const ProviderImage = ({ providerId }) => {
  const { colorScheme } = useMantineColorScheme();

  return (
    <img
      src={getLogoFileName(providerId, colorScheme)}
      alt={providerId}
      style={{
        height: '24px',
        maxWidth: '24px',
        width: '24px',
      }}
      data-test-id={`selected-provider-image-${providerId}`}
    />
  );
};

const ListProviders = ({
  channelProviders,
  channelType,
  onProviderClick,
  selectedProvider,
}: {
  channelProviders: IIntegratedProvider[];
  channelType: ChannelTypeEnum;
  onProviderClick: (provider: IIntegratedProvider) => () => void;
  selectedProvider: IIntegratedProvider | null;
}) => {
  const providers = useMemo(() => {
    return channelProviders.sort(sortProviders(channelType));
  }, [channelProviders, channelType]);

  return (
    <Stack
      hidden={providers.length === 0}
      pb={20}
      spacing={10}
      id={channelType}
      data-test-id={`providers-group-${channelType}`}
    >
      <ChannelTitle spacing={8} channel={channelType} />
      <div>
        {providers.map((provider) => {
          return (
            <StyledButton
              key={provider.providerId}
              onClick={onProviderClick(provider)}
              selected={provider.providerId === selectedProvider?.providerId}
              data-test-id={`provider-${provider.providerId}`}
            >
              <Group>
                <ProviderImage providerId={provider.providerId} />
                <Text>{provider.displayName}</Text>
              </Group>
            </StyledButton>
          );
        })}
      </div>
    </Stack>
  );
};

export const Footer = styled.div`
  display: flex;
  justify-content: right;
  align-items: center;
`;

const CenterDiv = styled.div`
  overflow: auto;
  color: ${colors.B60};
  font-size: 14px;
  line-height: 20px;
`;

const SelectProviderBodyContainer = styled.div`
  flex: 1;
  display: flex;
  flex-direction: column;
  height: 100%;
`;

const StyledButton = styled.div<{ selected: boolean }>`
  width: 100%;
  padding: 15px;
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B20 : colors.B98)};
  border-radius: 8px;

  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B40)};
  border: 1px solid transparent;

  margin-bottom: 12px;
  line-height: 1;
  &:hover {
    cursor: pointer;
  }

  ${({ selected, theme }) => {
    return selected
      ? `
           background: ${
             theme.colorScheme === 'dark' ? getGradient(colors.B20) : getGradient(colors.B98)
           } padding-box, ${colors.horizontal} border-box;
      `
      : undefined;
  }};
`;

export const SideBarWrapper = styled.div`
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B17 : colors.white)} !important;
  position: absolute;
  z-index: 1;
  width: 480px;
  top: 0;
  bottom: 0;
  right: 0;
  padding: 24px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useCallback, useEffect, useMemo, useState } from 'react';
import styled from '@emotion/styled';
import { Group, Image, Space, Stack, Tabs, useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum, InAppProviderIdEnum } from '@novu/shared';
import {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/multi-provider/sort-providers.ts
Tamaño: 2846 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import {
  ChannelTypeEnum,
  ChatProviderIdEnum,
  EmailProviderIdEnum,
  InAppProviderIdEnum,
  ProvidersIdEnum,
  PushProviderIdEnum,
  SmsProviderIdEnum,
} from '@novu/shared';

import type { IIntegratedProvider } from '../../types';

const providers: Record<ChannelTypeEnum, ProvidersIdEnum[]> = {
  [ChannelTypeEnum.CHAT]: [
    ChatProviderIdEnum.Slack,
    ChatProviderIdEnum.MsTeams,
    ChatProviderIdEnum.Discord,
    ChatProviderIdEnum.Mattermost,
    ChatProviderIdEnum.GrafanaOnCall,
  ],
  [ChannelTypeEnum.EMAIL]: [
    EmailProviderIdEnum.SendGrid,
    EmailProviderIdEnum.Mailjet,
    EmailProviderIdEnum.Postmark,
    EmailProviderIdEnum.Mailgun,
    EmailProviderIdEnum.Sendinblue,
    EmailProviderIdEnum.Mandrill,
    EmailProviderIdEnum.EmailJS,
    EmailProviderIdEnum.SES,
    EmailProviderIdEnum.MailerSend,
    EmailProviderIdEnum.Outlook365,
    EmailProviderIdEnum.Resend,
    EmailProviderIdEnum.Infobip,
    ...[
      EmailProviderIdEnum.CustomSMTP,
      EmailProviderIdEnum.NetCore,
      EmailProviderIdEnum.Clickatell,
      EmailProviderIdEnum.Novu,
      EmailProviderIdEnum.SparkPost,
      EmailProviderIdEnum.EmailWebhook,
    ].sort(),
  ],
  [ChannelTypeEnum.IN_APP]: [InAppProviderIdEnum.Novu],
  [ChannelTypeEnum.PUSH]: [
    PushProviderIdEnum.EXPO,
    PushProviderIdEnum.FCM,
    PushProviderIdEnum.APNS,
    PushProviderIdEnum.PushWebhook,
    PushProviderIdEnum.OneSignal,
    PushProviderIdEnum.Pushpad,
    PushProviderIdEnum.PusherBeams,
  ],
  [ChannelTypeEnum.SMS]: [
    SmsProviderIdEnum.Twilio,
    SmsProviderIdEnum.BurstSms,
    SmsProviderIdEnum.Nexmo,
    SmsProviderIdEnum.Plivo,
    SmsProviderIdEnum.Infobip,
    SmsProviderIdEnum.Sms77,
    SmsProviderIdEnum.Gupshup,
    ...[
      SmsProviderIdEnum.SmsCentral,
      SmsProviderIdEnum.SNS,
      SmsProviderIdEnum.Telnyx,
      SmsProviderIdEnum.Firetext,
      SmsProviderIdEnum.Clickatell,
      SmsProviderIdEnum.FortySixElks,
      SmsProviderIdEnum.Kannel,
      SmsProviderIdEnum.Maqsam,
      SmsProviderIdEnum.Termii,
      SmsProviderIdEnum.AfricasTalking,
      SmsProviderIdEnum.Novu,
      SmsProviderIdEnum.AzureSms,
      SmsProviderIdEnum.Bandwidth,
      SmsProviderIdEnum.Simpletexting,
      SmsProviderIdEnum.BrevoSms,
      SmsProviderIdEnum.ISendSms,
      SmsProviderIdEnum.EazySms,
      SmsProviderIdEnum.Sinch,
    ].sort(),
  ],
};

export const sortProviders = (
  channel: ChannelTypeEnum
): ((a: IIntegratedProvider, b: IIntegratedProvider) => 1 | -1 | 0) => {
  const order: ProvidersIdEnum[] = providers[channel];

  return (a: IIntegratedProvider, b: IIntegratedProvider) => {
    const aIndex = order.indexOf(a.providerId);
    const bIndex = order.indexOf(b.providerId);

    if (aIndex > bIndex) {
      return 1;
    }
    if (aIndex < bIndex) {
      return -1;
    }

    return 0;
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - sortProviders(channel: ChannelTypeEnum
): ((a: IIntegratedProvider, b: IIntegratedProvider))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/multi-provider/useSelectPrimaryIntegrationModal.tsx
Tamaño: 1257 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState, useCallback } from 'react';
import { useDisclosure } from '@mantine/hooks';

import { useInlineComponent } from '../../../../hooks';
import { ISelectPrimaryIntegrationModalProps, SelectPrimaryIntegrationModal } from './SelectPrimaryIntegrationModal';

export const useSelectPrimaryIntegrationModal = () => {
  const [isOpened, { open, close }] = useDisclosure(false);
  const [{ environmentId, channelType, exclude, onClose }, setModalProps] = useState<
    Partial<Pick<ISelectPrimaryIntegrationModalProps, 'environmentId' | 'channelType' | 'exclude' | 'onClose'>>
  >({});
  const onCloseCallback = useCallback(() => {
    close();
    onClose?.();
  }, [close, onClose]);

  const Component = useInlineComponent<ISelectPrimaryIntegrationModalProps>(SelectPrimaryIntegrationModal, {
    isOpened,
    environmentId,
    channelType,
    exclude,
    onClose: onCloseCallback,
  });

  const openModalCallback = useCallback(
    (props: Pick<ISelectPrimaryIntegrationModalProps, 'environmentId' | 'channelType' | 'exclude' | 'onClose'>) => {
      setModalProps({ ...props });
      open();
    },
    [open]
  );

  return {
    SelectPrimaryIntegrationModal: Component,
    openModal: openModalCallback,
    closeModal: close,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState, useCallback } from 'react';
import { useDisclosure } from '@mantine/hooks';
import { useInlineComponent } from '../../../../hooks';
import { ISelectPrimaryIntegrationModalProps, SelectPrimaryIntegrationModal } from './SelectPrimaryIntegrationModal';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/multi-provider/v2/Faq.tsx
Tamaño: 3032 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { useMantineColorScheme } from '@mantine/core';
import { colors, Text, Discord } from '@novu/design-system';
import { useIntercom } from 'react-use-intercom';

import { useSegment } from '../../../../../components/providers/SegmentProvider';
import { INTERCOM_APP_ID } from '../../../../../config';
import { discordInviteUrl, notificationCenterDocsUrl, OnBoardingAnalyticsEnum } from '../../../../quick-start/consts';

export function Faq() {
  const segment = useSegment();

  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  function handleOnDocsClick() {
    segment.track(OnBoardingAnalyticsEnum.CLICKED_DOCS);
  }

  function handleOnCommunityClick() {
    segment.track(OnBoardingAnalyticsEnum.CLICKED_ASK_COMMUNITY);
  }

  function handleOnHelpRequestClick() {
    segment.track(OnBoardingAnalyticsEnum.CLICKED_HELP_REQUEST);
  }

  return (
    <Text color={isDark ? colors.B70 : colors.B60}>
      <span style={{ fontWeight: 800 }}>Got stuck? </span>
      <span>Please send us a </span>

      {INTERCOM_APP_ID ? (
        <HelpRequestWithIntercom handleClick={handleOnHelpRequestClick} />
      ) : (
        <GradientSpan>help request, </GradientSpan>
      )}

      <span>ask the </span>
      <GradientSpan onClick={handleOnCommunityClick}>
        <a href={discordInviteUrl} target="_blank" rel="noreferrer">
          <Discord /> <span>community </span>
        </a>
      </GradientSpan>
      <span>or discover </span>
      <GradientSpan>
        <a href={notificationCenterDocsUrl} onClick={handleOnDocsClick} target="_blank" rel="noreferrer">
          our docs.
        </a>
      </GradientSpan>
    </Text>
  );
}

function HelpRequestWithIntercom({ handleClick }: { handleClick: () => void }) {
  const { show } = useIntercom();

  return (
    <GradientSpan
      onClick={() => {
        show();
        handleClick();
      }}
    >
      help request
    </GradientSpan>
  );
}

function getFrameworkTitle(framework) {
  return framework === 'demo' ? 'Great Choice!' : 'Quick Installation Guide';
}

const PageWrapper = styled.div`
  position: relative;
  flex: 1;
  height: 100%;
  min-height: 100%;
  display: flex;
  flex-direction: column;
`;

const HeaderWrapper = styled.div`
  padding: 42px 30px 0px 30px;
`;

const Title = styled.div`
  font-size: 28px;
  font-weight: 800;
  line-height: 1.4;
  color: ${colors.B40};
`;

const SecondaryTitle = styled.div<{ onlySecondary: boolean }>`
  font-size: 16px;
  line-height: 1.25;

  margin-top: ${({ onlySecondary }) => {
    return onlySecondary ? '127px' : '0';
  }};
`;

const Description = styled.div`
  font-size: 20px;
  margin-top: 10px;
`;

const ChildrenWrapper = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 1;
  padding-inline: 30px;
`;

const GradientSpan = styled.span`
  background: ${colors.horizontal};
  background-clip: text;
  text-fill-color: transparent;

  &:hover {
    cursor: pointer;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { useMantineColorScheme } from '@mantine/core';
import { colors, Text, Discord } from '@novu/design-system';
import { useIntercom } from 'react-use-intercom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/multi-provider/v2/SetupStatus.tsx
Tamaño: 1859 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, Stack } from '@mantine/core';
import { useEffect } from 'react';

import styled from '@emotion/styled';
import { Button, colors, Text, Label } from '@novu/design-system';
import { When } from '../../../../../components/utils/When';
import { useDataRef } from '../../../../../hooks';

export function SetupStatus({
  appInitialized,
  onDone,
  onConfigureLater,
}: {
  appInitialized: boolean;
  onDone: () => void;
  onConfigureLater?: () => void;
}) {
  const onDoneRef = useDataRef(onDone);
  function handleConfigureLater() {
    if (!onConfigureLater) {
      return;
    }
    onConfigureLater();
  }

  useEffect(() => {
    let timer;
    if (appInitialized) {
      timer = setTimeout(() => {
        onDoneRef.current();
      }, 1000);
    }

    return () => {
      clearTimeout(timer);
    };
  }, [onDoneRef, appInitialized]);

  return (
    <Stack>
      <Stack spacing={8}>
        <TextStyled>As soon as you run your application, it will send us a request to connect.</TextStyled>
        <TextStyled>
          Status: <Label color="blue">{appInitialized ? 'Connecting' : 'Pending'}...</Label>
        </TextStyled>
      </Stack>

      <When truthy={onConfigureLater !== undefined && typeof onConfigureLater === 'function'}>
        <Group spacing={128}>
          <Stack spacing={8}>
            <TextStyled>Don't want to configure the In-App center now?</TextStyled>
            <TextStyled>Configure it later in a notification workflow builder.</TextStyled>
          </Stack>
          <Button variant="outline" onClick={handleConfigureLater}>
            Configure Later
          </Button>
        </Group>
      </When>
    </Stack>
  );
}

const TextStyled = styled(Text)`
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B80 : colors.B60)};
  display: flex;
  align-items: center;
  gap: 5px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, Stack } from '@mantine/core';
import { useEffect } from 'react';
import styled from '@emotion/styled';
import { Button, colors, Text, Label } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/multi-provider/v2/SetupTimeline.tsx
Tamaño: 4572 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Stack, Timeline, useMantineColorScheme } from '@mantine/core';
import { useQuery } from '@tanstack/react-query';
import { colors, shadows, Text } from '@novu/design-system';
import { FeatureFlagsKeysEnum } from '@novu/shared';
import { getApiKeys } from '../../../../../api/environment';
import { When } from '../../../../../components/utils/When';
import { API_ROOT, ENV, IS_SELF_HOSTED, WS_URL } from '../../../../../config';
import { useEnvironment, useFeatureFlag } from '../../../../../hooks';
import { PrismOnCopy } from '../../../../settings/tabs/components/Prism';
import { SetupStatus } from './SetupStatus';
import {
  API_KEY,
  APPLICATION_IDENTIFIER,
  BACKEND_API_URL,
  BACKEND_SOCKET_URL,
  frameworkInstructions,
  frameworkInstructionsV2,
} from '../../../../quick-start/consts';
import { QueryKeys } from '../../../../../api/query.keys';
import { useInAppActivated } from '../../../../../api/hooks';

export const SetupTimeline = ({
  framework,
  onCopy,
  onDone,
  onConfigureLater,
}: {
  framework: string;
  onCopy?: (index: number) => void;
  onDone: () => void;
  onConfigureLater?: () => void;
}) => {
  const { environment } = useEnvironment();
  const { data: apiKeys } = useQuery<{ key: string }[]>([QueryKeys.getApiKeys], getApiKeys);
  const apiKey = apiKeys?.length ? apiKeys[0].key : '';
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';
  const isV2Enabled = useFeatureFlag(FeatureFlagsKeysEnum.IS_V2_ENABLED);
  const { isInAppActive } = useInAppActivated();

  const finalFrameworkInstructions = isV2Enabled ? frameworkInstructionsV2 : frameworkInstructions;
  const instructions = finalFrameworkInstructions.find((instruction) => instruction.key === framework)?.value ?? [];
  const environmentIdentifier = environment?.identifier ?? '';

  return (
    <Stack align="center" sx={{ width: '100%' }} data-test-id="setup-timeline">
      <TimelineWrapper isDark={isDark}>
        <Timeline
          active={instructions?.length + 1}
          bulletSize={40}
          lineWidth={2}
          styles={{
            itemBullet: {
              backgroundColor: 'grey',
            },
          }}
        >
          {instructions.map((instruction, index) => {
            return (
              <Timeline.Item
                bullet={
                  <div style={{}}>
                    <Text>{index + 1}</Text>
                  </div>
                }
                key={index}
                title={<div>{instruction.instruction}</div>}
              >
                <div style={{ marginTop: 10 }}>
                  <PrismOnCopy
                    language={instruction.language}
                    index={index}
                    code={`${updateCodeSnippet(instruction.snippet, environmentIdentifier, apiKey)}   `}
                    onCopy={onCopy}
                  />
                </div>
              </Timeline.Item>
            );
          })}
          <Timeline.Item
            bullet={
              <div style={{}}>
                <Text>{instructions?.length + 1}</Text>
              </div>
            }
            title={'Render the components and run application'}
          >
            <LoaderWrapper>
              <SetupStatus appInitialized={isInAppActive} onDone={onDone} onConfigureLater={onConfigureLater} />
            </LoaderWrapper>
          </Timeline.Item>
        </Timeline>
      </TimelineWrapper>

      <When truthy={framework === 'demo'}>
        <span style={{ color: colors.B60 }}>
          If your browser did not automatically open, go to localhost at http://127.0.0.1:3000
        </span>
      </When>
    </Stack>
  );
};

const LoaderWrapper = styled.div`
  margin-bottom: 20px;
  margin-top: 10px;
`;

function updateCodeSnippet(codeSnippet: string, environmentIdentifier: string, apiKey: string) {
  const concatUrls = ENV !== 'production' || !!IS_SELF_HOSTED;

  return codeSnippet
    .replace(APPLICATION_IDENTIFIER, environmentIdentifier)
    .replace(API_KEY, apiKey ?? '')
    .replace(BACKEND_API_URL, concatUrls ? API_ROOT : '')
    .replace(BACKEND_SOCKET_URL, concatUrls ? WS_URL : '');
}

const TimelineWrapper = styled.div<{ isDark: boolean }>`
  width: 100%;
  padding: 10px;
  border-radius: 7px;
  .mantine-Timeline-itemBullet {
    background-color: ${({ isDark }) => (isDark ? colors.B30 : colors.BGLight)};
    color: white;
    font-size: 16px;
    font-weight: bold;
    box-shadow: ${({ isDark }) => (isDark ? shadows.dark : shadows.light)};
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Stack, Timeline, useMantineColorScheme } from '@mantine/core';
import { useQuery } from '@tanstack/react-query';
import { colors, shadows, Text } from '@novu/design-system';
import { FeatureFlagsKeysEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/multi-provider/v2/UpdateProviderSidebarV2.tsx
Tamaño: 14203 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Box, Center, Group } from '@mantine/core';
import { useClipboard, useDisclosure } from '@mantine/hooks';
import { Button, Check, Copy, colors, Input, Sidebar, Text } from '@novu/design-system';
import {
  CHANNELS_WITH_PRIMARY,
  CredentialsKeyEnum,
  EmailProviderIdEnum,
  IConfigCredential,
  IConstructIntegrationDto,
  ICredentialsDto,
  InAppProviderIdEnum,
  SmsProviderIdEnum,
  slugify,
} from '@novu/shared';
import { useEffect, useMemo, useState } from 'react';
import { Controller, FormProvider, useForm, useWatch } from 'react-hook-form';
import { useWebhookSupportStatus } from '../../../../../api/hooks';
import { useUpdateIntegration } from '../../../../../api/hooks/useUpdateIntegration';
import { Conditions, IConditions } from '../../../../../components/conditions';
import { When } from '../../../../../components/utils/When';
import { useEnvironment } from '../../../../../hooks';
import { successMessage } from '../../../../../utils/notifications';
import { FrameworkEnum } from '../../../../quick-start/consts';
import { defaultIntegrationConditionsProps } from '../../../constants';
import type { IIntegratedProvider } from '../../../types';
import { useProviders } from '../../../useProviders';
import { IntegrationInput } from '../../IntegrationInput';
import { ShareableUrl } from '../../Modal/ConnectIntegrationForm';
import { NovuInAppFrameworkHeader } from '../../NovuInAppFrameworkHeader';
import { SetupWarning } from '../../SetupWarning';
import { UpdateIntegrationCommonFields } from '../../UpdateIntegrationCommonFields';
import { UpdateIntegrationSidebarHeader } from '../../UpdateIntegrationSidebarHeader';
import { NovuInAppFrameworks } from '../../v2';
import { NovuProviderSidebarContent } from '../NovuProviderSidebarContent';
import { useSelectPrimaryIntegrationModal } from '../useSelectPrimaryIntegrationModal';
import { Faq } from './Faq';
import { SetupTimeline } from './SetupTimeline';

interface IProviderForm {
  name: string;
  credentials: ICredentialsDto;
  active: boolean;
  identifier: string;
  conditions: IConditions[];
}

enum SidebarStateEnum {
  NORMAL = 'normal',
  EXPANDED = 'expanded',
}

export function UpdateProviderSidebar({
  isOpened,
  integrationId,
  onClose,
}: {
  isOpened: boolean;
  integrationId?: string;
  onClose: () => void;
}) {
  const { isLoaded: isEnvironmentLoaded } = useEnvironment();
  const [sidebarState, setSidebarState] = useState<SidebarStateEnum>(SidebarStateEnum.NORMAL);
  const [framework, setFramework] = useState<FrameworkEnum | null>(null);
  const { providers, isLoading: areProvidersLoading } = useProviders();
  const [selectedProvider, setSelectedProvider] = useState<IIntegratedProvider | null>(() => {
    const provider = providers.find((el) => el.integrationId === integrationId);

    return provider ?? null;
  });
  const isNovuInAppProvider = selectedProvider?.providerId === InAppProviderIdEnum.Novu;
  const { openModal: openSelectPrimaryIntegrationModal, SelectPrimaryIntegrationModal } =
    useSelectPrimaryIntegrationModal();
  const [conditionsFormOpened, { close: closeConditionsForm, open: openConditionsForm }] = useDisclosure(false);
  const webhookUrlClipboard = useClipboard({ timeout: 1000 });

  const { updateIntegration, isLoadingUpdate } = useUpdateIntegration(selectedProvider?.integrationId || '');

  const { isWebhookEnabled, webhookUrl } = useWebhookSupportStatus({
    hasCredentials: selectedProvider?.hasCredentials,
    integrationId: selectedProvider?.integrationId,
    channel: selectedProvider?.channel,
  });

  const methods = useForm<IProviderForm>({
    shouldUseNativeValidation: false,
    shouldFocusError: false,
    defaultValues: {
      name: '',
      credentials: {},
      active: false,
      identifier: '',
      conditions: [],
    },
  });
  const {
    control,
    handleSubmit,
    reset,
    watch,
    setValue,
    getValues,
    formState: { errors, isDirty, dirtyFields },
  } = methods;

  const credentials = watch('credentials');
  const isActive = watch('active');
  const isSidebarOpened = !!selectedProvider && isOpened;

  const haveAllCredentials = useMemo(() => {
    if (selectedProvider === null) {
      return false;
    }
    const missingCredentials = selectedProvider.credentials
      .filter((credential) => credential.required)
      .filter((credential) => {
        const value = credentials[credential.key];

        return !value;
      });

    return missingCredentials.length === 0;
  }, [selectedProvider, credentials]);

  useEffect(() => {
    if (selectedProvider && !selectedProvider?.identifier) {
      const newIdentifier = slugify(selectedProvider?.displayName);

      setValue('identifier', newIdentifier);
    }
  }, [setValue, selectedProvider]);

  useEffect(() => {
    if (integrationId === undefined || providers.length === 0) {
      return;
    }
    const foundProvider = providers.find((provider) => provider.integrationId === integrationId);
    if (!foundProvider) {
      return;
    }

    setSelectedProvider(foundProvider);
    reset({
      name: foundProvider.name ?? foundProvider.displayName,
      identifier: foundProvider.identifier,
      credentials: foundProvider.credentials.reduce((prev, credential) => {
        prev[credential.key] = credential.value;

        return prev;
      }, {} as any),
      conditions: foundProvider.conditions,
      active: foundProvider.active,
    });
  }, [reset, integrationId, providers]);

  const onFrameworkClickCallback = (newFramework: FrameworkEnum) => {
    setSidebarState(SidebarStateEnum.EXPANDED);
    setFramework(newFramework);
  };

  const onBack = () => {
    if (sidebarState === SidebarStateEnum.EXPANDED) {
      setSidebarState(SidebarStateEnum.NORMAL);
      setFramework(null);
    }
  };

  const onSidebarClose = () => {
    if (sidebarState === SidebarStateEnum.EXPANDED) {
      setSidebarState(SidebarStateEnum.NORMAL);
    }
    onClose();
  };

  const updateAndSelectPrimaryIntegration = async (data: IConstructIntegrationDto) => {
    if (!selectedProvider) {
      return;
    }

    const { channel: selectedChannel, environmentId, primary, conditions } = selectedProvider;
    const isActiveFieldChanged = dirtyFields.active;
    const hasSameChannelActiveIntegration = !!providers
      .filter((el) => el.integrationId !== selectedProvider.integrationId)
      .find((el) => el.active && el.channel === selectedChannel && el.environmentId === environmentId);
    const isChannelSupportPrimary = CHANNELS_WITH_PRIMARY.includes(selectedChannel);

    const isChangedToActive =
      isActiveFieldChanged && isChannelSupportPrimary && isActive && hasSameChannelActiveIntegration;

    const isChangedToInactiveAndIsPrimary =
      isActiveFieldChanged && isChannelSupportPrimary && !isActive && primary && hasSameChannelActiveIntegration;

    const isPrimaryAndHasConditionsApplied =
      primary && conditions && conditions.length > 0 && hasSameChannelActiveIntegration;

    const hasNoConditions = !conditions || conditions.length === 0;

    const hasUpdatedConditions = data.conditions && data.conditions.length > 0;

    const hasConditionsAndIsPrimary = hasUpdatedConditions && primary && dirtyFields.conditions;

    if (
      (hasNoConditions && isChangedToActive) ||
      isChangedToInactiveAndIsPrimary ||
      isPrimaryAndHasConditionsApplied ||
      hasConditionsAndIsPrimary
    ) {
      openSelectPrimaryIntegrationModal({
        environmentId: selectedProvider?.environmentId,
        channelType: selectedProvider?.channel,
        exclude: !isActive || hasConditionsAndIsPrimary ? (el) => el._id === selectedProvider.integrationId : undefined,
        onClose: () => {
          updateIntegration(data);
        },
      });

      return;
    }

    updateIntegration(data);
  };

  const onSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {
    e.stopPropagation();
    e.preventDefault();

    handleSubmit(updateAndSelectPrimaryIntegration)(e);
  };

  const hmacEnabled = useWatch({
    control,
    name: `credentials.${CredentialsKeyEnum.Hmac}`,
  });

  const updateConditions = (conditions: IConditions[]) => {
    setValue('conditions', conditions, { shouldDirty: true });
  };

  if (conditionsFormOpened) {
    const [conditions, name] = getValues(['conditions', 'name']);

    return (
      <Conditions
        conditions={conditions}
        name={name}
        isOpened={conditionsFormOpened}
        updateConditions={updateConditions}
        onClose={closeConditionsForm}
        {...defaultIntegrationConditionsProps}
      />
    );
  }

  if (
    SmsProviderIdEnum.Novu === selectedProvider?.providerId ||
    EmailProviderIdEnum.Novu === selectedProvider?.providerId
  ) {
    return (
      <FormProvider {...methods}>
        <Sidebar
          isOpened={isSidebarOpened}
          isLoading={areProvidersLoading || !isEnvironmentLoaded}
          onClose={onSidebarClose}
          onSubmit={onSubmit}
          customHeader={
            <UpdateIntegrationSidebarHeader
              openConditions={openConditionsForm}
              provider={selectedProvider}
              onSuccessDelete={onSidebarClose}
            >
              <Free>Test Provider</Free>
            </UpdateIntegrationSidebarHeader>
          }
          data-test-id="update-provider-sidebar-novu"
          customFooter={
            <Group position="right" w="100%">
              <Button
                disabled={!isDirty || isLoadingUpdate}
                submit
                loading={isLoadingUpdate}
                data-test-id="update-provider-sidebar-update"
              >
                Update
              </Button>
            </Group>
          }
        >
          <NovuProviderSidebarContent provider={selectedProvider} />
          <UpdateIntegrationCommonFields provider={selectedProvider} />
        </Sidebar>
        <SelectPrimaryIntegrationModal />
      </FormProvider>
    );
  }

  return (
    <FormProvider {...methods}>
      <Sidebar
        isOpened={isSidebarOpened}
        isLoading={areProvidersLoading || !isEnvironmentLoaded}
        isExpanded={sidebarState === SidebarStateEnum.EXPANDED}
        onSubmit={onSubmit}
        onClose={onSidebarClose}
        onBack={onBack}
        customHeader={
          sidebarState === SidebarStateEnum.NORMAL ? (
            <UpdateIntegrationSidebarHeader
              openConditions={openConditionsForm}
              provider={selectedProvider}
              onSuccessDelete={onSidebarClose}
            />
          ) : (
            <>
              <When truthy={isNovuInAppProvider}>
                <NovuInAppFrameworkHeader framework={framework} />
              </When>
            </>
          )
        }
        customFooter={
          <Group position="apart" w="100%">
            <Center inline>
              <Text mr={5}>Explore our</Text>
              <Text gradient>
                <a href={selectedProvider?.docReference} target="_blank" rel="noopener noreferrer">
                  set-up guide
                </a>
              </Text>
            </Center>
            <Button
              disabled={!isDirty || isLoadingUpdate}
              submit
              loading={isLoadingUpdate}
              data-test-id="update-provider-sidebar-update"
            >
              Update
            </Button>
          </Group>
        }
        data-test-id="update-provider-sidebar"
      >
        <When truthy={sidebarState === SidebarStateEnum.NORMAL}>
          <SetupWarning
            show={!haveAllCredentials}
            message="Set up credentials to start sending notifications."
            docReference={selectedProvider?.docReference}
          />
          <UpdateIntegrationCommonFields provider={selectedProvider} />
          {selectedProvider?.credentials.map((credential: IConfigCredential) => (
            <InputWrapper key={credential.key}>
              <Controller
                name={`credentials.${credential.key}`}
                control={control}
                {...(credential.type === 'switch' ? { defaultValue: false } : {})}
                rules={{
                  required: credential.required ? `Please enter a ${credential.displayName.toLowerCase()}` : undefined,
                }}
                render={({ field }) => (
                  <IntegrationInput credential={credential} errors={errors?.credentials ?? {}} field={field} />
                )}
              />
            </InputWrapper>
          ))}
          {isWebhookEnabled && (
            <InputWrapper>
              <Input
                label="Webhook URL"
                value={webhookUrl}
                readOnly
                rightSection={
                  <CopyWrapper onClick={() => webhookUrlClipboard.copy(webhookUrl)}>
                    {webhookUrlClipboard.copied ? <Check /> : <Copy />}
                  </CopyWrapper>
                }
                data-test-id="provider-webhook-url"
              />
            </InputWrapper>
          )}
          <ShareableUrl provider={selectedProvider?.providerId} hmacEnabled={!!hmacEnabled} />
          {isNovuInAppProvider && <NovuInAppFrameworks onFrameworkClick={onFrameworkClickCallback} />}
        </When>
        <When truthy={isNovuInAppProvider && sidebarState === SidebarStateEnum.EXPANDED}>
          <SetupTimeline
            framework={framework?.toString() ?? ''}
            onDone={() => {
              setSidebarState(SidebarStateEnum.NORMAL);
              successMessage('Successfully configured Inbox');
            }}
            onConfigureLater={() => {
              setSidebarState(SidebarStateEnum.NORMAL);
            }}
          />
          <Box ml={70}>
            <Faq />
          </Box>
        </When>
      </Sidebar>
      <SelectPrimaryIntegrationModal />
    </FormProvider>
  );
}

const InputWrapper = styled.div`
  > div {
    width: 100%;
  }
`;

const Free = styled.span`
  color: ${colors.success};
  font-size: 14px;
  min-width: fit-content;
  margin-left: -4px;
`;

const CopyWrapper = styled.div`
  cursor: pointer;
  &:hover {
    opacity: 0.8;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Box, Center, Group } from '@mantine/core';
import { useClipboard, useDisclosure } from '@mantine/hooks';
import { Button, Check, Copy, colors, Input, Sidebar, Text } from '@novu/design-system';
import {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/multi-provider/v2/index.ts
Tamaño: 43 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './UpdateProviderSidebarV2';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/v2/NovuInAppFrameworksV2.tsx
Tamaño: 2209 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { colors, JavaScriptLogo, ReactLogo, Text } from '@novu/design-system';
import { UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';

import { FrameworkEnum } from '../../../quick-start/consts';

const NovuInAppFrameworksHolder = styled.div`
  display: flex;
  flex-direction: column;
  gap: 16px;
`;

const FrameworksGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-gap: 16px;
`;

const frameworkHolderStyles = (theme) => `
  display: flex;
  align-items: center;
  gap: 12px;
  flex: 1 0 0;
  padding: 16px;
  border-radius: 8px;
  background: ${theme.colorScheme === 'dark' ? colors.B20 : colors.BGLight};
  cursor: pointer;
  user-select: none;
  transition: all 250ms ease-in-out;

  &:hover {
    filter: ${theme.colorScheme === 'dark' ? 'brightness(1.1)' : 'brightness(0.95)'};
  }
`;

const FrameworkHolder = styled.div`
  ${({ theme }) => frameworkHolderStyles(theme)};
`;

const FrameworkHolderLink = styled.a`
  ${({ theme }) => frameworkHolderStyles(theme)};
`;

const frameworks = [
  { icon: ReactLogo, name: 'React', frameworkEnum: FrameworkEnum.REACT },
  {
    icon: JavaScriptLogo,
    name: 'Headless',
    href: `https://docs.novu.co/inbox/introduction${UTM_CAMPAIGN_QUERY_PARAM}`,
  },
];

export const NovuInAppFrameworks = ({ onFrameworkClick }: { onFrameworkClick: (framework: FrameworkEnum) => void }) => {
  return (
    <NovuInAppFrameworksHolder data-test-id="novu-in-app-frameworks">
      <Text>Integrate Inbox using a framework below</Text>
      <FrameworksGrid>
        {frameworks.map(({ name, icon: Icon, frameworkEnum, href }) =>
          frameworkEnum ? (
            <FrameworkHolder
              key={name}
              onClick={() => {
                onFrameworkClick(frameworkEnum);
              }}
            >
              <Icon />
              <Text>{name}</Text>
            </FrameworkHolder>
          ) : (
            <FrameworkHolderLink key={name} href={href} rel="noreferrer" target="_blank">
              <Icon />
              <Text>{name}</Text>
            </FrameworkHolderLink>
          )
        )}
      </FrameworksGrid>
    </NovuInAppFrameworksHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { colors, JavaScriptLogo, ReactLogo, Text } from '@novu/design-system';
import { UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';
import { FrameworkEnum } from '../../../quick-start/consts';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/integrations/components/v2/index.ts
Tamaño: 41 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './NovuInAppFrameworksV2';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/invites/MembersInvitePage.tsx
Tamaño: 6851 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Form } from 'antd';
import { useMutation, useQuery } from '@tanstack/react-query';
import styled from '@emotion/styled';
import { showNotification } from '@mantine/notifications';
import { Container, Group } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';
import { MemberRoleEnum } from '@novu/shared';
import type { IResponseError } from '@novu/shared';

import { Button, Input, Invite, UserAccess } from '@novu/design-system';
import PageHeader from '../../components/layout/components/PageHeader';
import PageContainer from '../../components/layout/components/PageContainer';
import {
  changeMemberRole,
  getOrganizationMembers,
  inviteMember,
  removeMember,
  resendInviteMember,
} from '../../api/organization';
import { MembersTable } from './components/MembersTable';
import { useAuth } from '../../hooks/useAuth';
import { parseUrl } from '../../utils/routeUtils';
import { ROUTES } from '../../constants/routes';
import { ProductLead } from '../../components/utils/ProductLead';
import { useSegment } from '../../components/providers/SegmentProvider';

export function MembersInvitePage() {
  const [form] = Form.useForm();
  const segment = useSegment();
  const clipboardInviteLink = useClipboard({ timeout: 1000 });
  const selfHosted = process.env.REACT_APP_IS_SELF_HOSTED === 'true';
  const { currentOrganization, currentUser } = useAuth();

  const {
    data: members,
    isLoading: loadingMembers,
    refetch,
  } = useQuery<any[]>(['getOrganizationMembers'], getOrganizationMembers);

  const { isLoading: loadingSendInvite, mutateAsync: sendInvite } = useMutation<string, IResponseError, string>(
    (email) => inviteMember(email)
  );

  async function onSubmit({ email }) {
    if (!email) return;

    if (selfHosted) {
      inviteByLink(email);
    }

    try {
      await sendInvite(email);
      await refetch();
    } catch (e: any) {
      if (e?.message === 'Already invited') {
        showNotification({
          message: `User with email: ${email} is already invited`,
          color: 'red',
        });
      } else throw e;
    }

    segment.track('Team Member Invite Sent');

    if (!selfHosted) {
      showNotification({
        message: `Invite sent to ${email}`,
        color: 'green',
      });
    }

    form.resetFields(['email']);
  }

  async function removeMemberClick(member) {
    try {
      await removeMember(member._id);

      showNotification({
        message: `Successfully deleted member .`,
        color: 'green',
      });

      refetch();
    } catch (err: any) {
      showNotification({
        message: err.message,
        color: 'red',
      });
    }
  }

  async function changeMemberRoleClick(member, memberRole: MemberRoleEnum) {
    try {
      await changeMemberRole(member._id, memberRole);

      showNotification({
        message: `Successfully changed role of member.`,
        color: 'green',
      });

      refetch();
    } catch (err: any) {
      showNotification({
        message: err.message,
        color: 'red',
      });
    }
  }

  async function resendInviteMemberClick(member) {
    if (selfHosted) {
      inviteByLink(member.invite.email);

      return;
    }

    try {
      await resendInviteMember(member._id);

      showNotification({
        message: `Successfully resent invite.`,
        color: 'green',
      });
    } catch (err: any) {
      showNotification({
        message: err.message,
        color: 'red',
      });
    }
  }

  const inviteByLink = (invitedEmail: string) => {
    const currentMember = members?.find((member) => member?.invite?.email === invitedEmail);
    if (!currentMember) return;

    const inviteHref = buildInviteHref(currentMember, currentOrganization?.name, currentUser, generateInviteLink);

    showNotification({
      message: getInviteMemberByLinkDiv(inviteHref, currentMember),
      color: 'green',
    });
  };

  const clipboardCopyInviteLink = (memberToken: string) => {
    clipboardInviteLink.copy(generateInviteLink(memberToken));
  };

  const generateInviteLink = (memberToken: string) => {
    return `${window.location.origin.toString()}${parseUrl(ROUTES.AUTH_INVITATION_TOKEN, { token: memberToken })}`;
  };

  function getInviteMemberByLinkDiv(inviteHref: string, currentMember) {
    return (
      <div>
        The invite link was successfully created. You can send it by clicking
        <a href={inviteHref} style={{ color: '#0000FF', paddingLeft: '3px' }}>
          here
        </a>
        . Or copy it directly clicking
        <StyledButton onClick={() => clipboardCopyInviteLink(currentMember.invite.token)}>here.</StyledButton>
      </div>
    );
  }

  return (
    <PageContainer title="Team">
      <PageHeader
        title="Team Members"
        actions={
          <Form noValidate onFinish={onSubmit} form={form}>
            <Group align="center" spacing={10}>
              <Form.Item name="email" style={{ marginBottom: 0 }}>
                <StyledInput required data-test-id="invite-email-field" placeholder="Invite user by email" />
              </Form.Item>
              <Button submit icon={<Invite />} loading={loadingSendInvite} data-test-id="submit-btn">
                Invite
              </Button>
            </Group>
          </Form>
        }
      />

      <Container fluid ml={5}>
        <ProductLead
          icon={<UserAccess />}
          id="rbac-team-page"
          title="Role-based access control"
          text="Securely manage users' permissions to access system resources."
        />
      </Container>
      <Container fluid mt={15} ml={5}>
        <MembersTable
          loading={loadingMembers}
          members={members}
          currentUser={currentUser}
          onRemoveMember={removeMemberClick}
          onResendInviteMember={resendInviteMemberClick}
          onChangeMemberRole={changeMemberRoleClick}
        />
      </Container>
    </PageContainer>
  );
}

function buildInviteHref(
  currentMember,
  currentOrganization,
  currentUser,
  generateInviteLink: (memberToken: string) => string
) {
  const mailTo = `mailto:${currentMember.invite.email}`;
  const subject = `You've been invited to ${currentOrganization}`;
  const body = `\nHi!\n\nYou have been invited to ${currentOrganization} by ${currentUser?.firstName} ${
    currentUser?.lastName
  }.\n\nClick on the link below to accept ${generateInviteLink(currentMember.invite.token)}.`;

  return `${mailTo}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
}

const StyledInput = styled(Input)`
  width: 300px;

  .mantine-TextInput-wrapper,
  input {
    min-height: auto;
    height: 42px;
  }
  position: relative;
  top: -2px;
`;

const StyledButton = styled.button`
  color: #0000ff;
  text-decoration: none;
  background: transparent;
  border: none;
  cursor: pointer;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Form } from 'antd';
import { useMutation, useQuery } from '@tanstack/react-query';
import styled from '@emotion/styled';
import { showNotification } from '@mantine/notifications';
import { Container, Group } from '@mantine/core';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/invites/components/MemberRole.tsx
Tamaño: 1408 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { MemberRoleEnum } from '@novu/shared';
import styled from '@emotion/styled';

import { Dropdown, Tag } from '@novu/design-system';

export function MemberRole({ member, onChangeMemberRole, isEnableMemberActions, allowChangeRole = false }) {
  const TagElement = () => {
    return <>{member.roles.find((role: string) => role === 'admin') ? <Tag>Admin</Tag> : <Tag>Member</Tag>}</>;
  };

  const availableRoles = () => {
    const roles = {
      Admin: MemberRoleEnum.OSS_ADMIN,
      Member: MemberRoleEnum.OSS_MEMBER,
    };

    return Object.entries(roles).filter((role) => !member.roles.includes(role[1]));
  };

  if (!isEnableMemberActions(member)) {
    return <TagElement />;
  }

  return (
    <>
      <Dropdown
        control={
          allowChangeRole ? (
            <ClickableTag data-test-id="change-member-role-btn">
              <TagElement />
            </ClickableTag>
          ) : (
            <TagElement />
          )
        }
      >
        {availableRoles().map((role, index: number) => (
          <Dropdown.Item
            key={index}
            data-test-id={`change-member-role-to-${role[1]}-btn`}
            onClick={() => onChangeMemberRole(member, role[1])}
          >
            {role[0]}
          </Dropdown.Item>
        ))}
      </Dropdown>
    </>
  );
}

const ClickableTag = styled.div`
  cursor: pointer;
  span {
    cursor: pointer;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { MemberRoleEnum } from '@novu/shared';
import styled from '@emotion/styled';
import { Dropdown, Tag } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/invites/components/MembersTable.tsx
Tamaño: 5358 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Avatar, Divider, Container, LoadingOverlay, Stack, Text } from '@mantine/core';
import styled from '@emotion/styled';
import capitalize from 'lodash.capitalize';
import { useClipboard } from '@mantine/hooks';
import { MemberRoleEnum, MemberStatusEnum } from '@novu/shared';

import { DotsHorizontal, Mail, Trash, useTextStyles, colors, Dropdown, Tag } from '@novu/design-system';
import { MemberRole } from './MemberRole';
import { When } from '../../../components/utils/When';
import { parseUrl } from '../../../utils/routeUtils';
import { ROUTES } from '../../../constants/routes';

export function MembersTable({
  members,
  currentUser,
  onRemoveMember,
  loading = false,
  onResendInviteMember,
  onChangeMemberRole,
  allowChangeRole = false,
}) {
  const { classes, theme } = useTextStyles();
  const clipboardInviteLink = useClipboard({ timeout: 1000 });
  const selfHosted = process.env.REACT_APP_IS_SELF_HOSTED === 'true';

  function isEnableMemberActions(currentMember): boolean {
    const currentUserRoles = members?.find((memberEntity) => memberEntity._userId === currentUser?._id)?.roles || [];

    const isNotMyself = currentUser?._id !== currentMember._userId;
    const isAllowedToRemove = currentUserRoles.includes(MemberRoleEnum.OSS_ADMIN);

    return isNotMyself && isAllowedToRemove;
  }

  function memberInvited(currentMember): boolean {
    return currentMember?.memberStatus === MemberStatusEnum.INVITED;
  }

  function onCopyInviteLinkClick(currentMemberToken: any): void {
    const inviteLink = `${window.location.origin.toString()}${parseUrl(ROUTES.AUTH_INVITATION_TOKEN, { token: currentMemberToken })}`;
    clipboardInviteLink.copy(inviteLink);
  }

  return (
    <Container fluid mt={15} style={{ position: 'relative', minHeight: 500 }} px={0}>
      <LoadingOverlay
        visible={loading}
        overlayColor={theme.colorScheme === 'dark' ? colors.B30 : colors.B98}
        loaderProps={{
          color: colors.error,
        }}
      />

      {members?.map((member, index: number) => {
        return (
          <MemberRowWrapper key={member._id} data-test-id={`member-row-${member._id}`}>
            <Avatar style={{ marginRight: 10, width: 40, height: 40 }} src={member.user?.profilePicture} radius="xl">
              {capitalize((member.user?.firstName || '')[0])} {capitalize((member.user?.lastName || '')[0])}
            </Avatar>
            <Stack spacing={5}>
              <Text className={classes.heading}>
                {member.user
                  ? `${capitalize((member.user?.firstName || '') as string)} ${capitalize(
                      (member.user?.lastName || '') as string
                    )}`
                  : member.invite.email}
              </Text>
              {member.user?.email ? <Text className={classes.subHeading}>{member.user?.email}</Text> : null}
            </Stack>
            <ActionsSider>
              <div style={{ marginLeft: 10 }}>
                {member.memberStatus === MemberStatusEnum.INVITED ? <Tag mr={10}>Invite Pending</Tag> : null}
                <MemberRole
                  key={index}
                  onChangeMemberRole={onChangeMemberRole}
                  member={member}
                  isEnableMemberActions={isEnableMemberActions}
                  allowChangeRole={allowChangeRole}
                />
              </div>
            </ActionsSider>
            <When truthy={isEnableMemberActions(member)}>
              <div>
                <Dropdown
                  control={
                    <div style={{ cursor: 'pointer', marginLeft: 10 }} data-test-id="actions-row-btn">
                      <DotsHorizontal />
                    </div>
                  }
                  position="left"
                  middlewares={{ flip: false, shift: false }}
                >
                  <Dropdown.Item
                    key="removeBtn"
                    data-test-id="remove-row-btn"
                    onClick={() => onRemoveMember(member)}
                    icon={<Trash />}
                  >
                    Remove Member
                  </Dropdown.Item>
                  <When truthy={memberInvited(member)}>
                    <Dropdown.Item
                      key="copyInviteBtn"
                      data-test-id="copy-invite-btn"
                      onClick={() => onCopyInviteLinkClick(member.invite.token)}
                      icon={<Mail />}
                    >
                      Copy Invite Link
                    </Dropdown.Item>

                    <When truthy={!selfHosted}>
                      <Dropdown.Item
                        key="resendInviteBtn"
                        data-test-id="resend-invite-btn"
                        onClick={() => onResendInviteMember(member)}
                        icon={<Mail />}
                      >
                        Resend Invite
                      </Dropdown.Item>
                    </When>
                  </When>
                </Dropdown>
              </div>
            </When>
            <Divider className={classes.separator} />
          </MemberRowWrapper>
        );
      })}
    </Container>
  );
}
const ActionsSider = styled.div`
  margin-left: auto;
`;

const MemberRowWrapper = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Avatar, Divider, Container, LoadingOverlay, Stack, Text } from '@mantine/core';
import styled from '@emotion/styled';
import capitalize from 'lodash.capitalize';
import { useClipboard } from '@mantine/hooks';
import { MemberRoleEnum, MemberStatusEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/invites/v2/CopyInviteLink.tsx
Tamaño: 784 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useClipboard } from '@mantine/hooks';
import { StyledButton } from './MembersInvitePage.styles';

export function CopyInviteLink({ inviteEmailLink, copyLink }: { inviteEmailLink: string; copyLink: string }) {
  const clipboardInviteLink = useClipboard({ timeout: 1000 });

  const clipboardCopyInviteLink = () => {
    clipboardInviteLink.copy(copyLink);
  };

  return (
    <div>
      The invite link was successfully created. You can send it by clicking
      <a
        href={inviteEmailLink}
        style={{ color: '#0000FF', paddingLeft: '3px' }}
        rel="noopener noreferrer"
        target="_blank"
      >
        here
      </a>
      . Or copy it directly clicking
      <StyledButton onClick={clipboardCopyInviteLink}>here.</StyledButton>
    </div>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useClipboard } from '@mantine/hooks';
import { StyledButton } from './MembersInvitePage.styles';
export function CopyInviteLink({ inviteEmailLink, copyLink }: { inviteEmailLink: string; copyLink: string }) {
const clipboardInviteLink = useClipboard({ timeout: 1000 });
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/invites/v2/MemberInviteForm.tsx
Tamaño: 2090 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import { Button, errorMessage, Invite, successMessage } from '@novu/design-system';
import { IResponseError } from '@novu/shared';
import { useMutation } from '@tanstack/react-query';
import { Controller, useForm } from 'react-hook-form';
import { IS_SELF_HOSTED } from '../../../config';

import { inviteMember } from '../../../api/organization';

import { StyledInput } from './MembersInvitePage.styles';

interface IInviteMemberForm {
  email: string;
}

const INITIAL_VALUES: IInviteMemberForm = {
  email: '',
};

export function MemberInviteForm({
  onSuccess,
  inviteByLink,
}: {
  onSuccess: () => void;
  inviteByLink: (email: string) => void;
}) {
  const { control, handleSubmit, reset } = useForm<IInviteMemberForm>({
    defaultValues: INITIAL_VALUES,
  });

  const { isLoading: loadingSendInvite, mutateAsync: sendInvite } = useMutation<string, IResponseError, string>(
    (email) => inviteMember(email)
  );

  async function onSubmit(data: IInviteMemberForm) {
    const { email } = data;
    if (!email) return;

    if (IS_SELF_HOSTED) {
      inviteByLink(email);
    }

    try {
      await sendInvite(email);
      onSuccess();
      if (!IS_SELF_HOSTED) {
        successMessage(`Invite sent to ${email}`);
      }
    } catch (err: unknown) {
      if (err instanceof Error) {
        if (err.message === 'Already invited') {
          errorMessage(`User with email: ${email} is already invited`);
        } else {
          errorMessage(err.message);
        }
      }
    }

    reset(INITIAL_VALUES);
  }

  return (
    <form noValidate onSubmit={handleSubmit(onSubmit)}>
      <Group align="center" spacing={10}>
        <Controller
          name="email"
          control={control}
          defaultValue=""
          rules={{ required: true }}
          render={({ field }) => <StyledInput {...field} placeholder="Invite user by email" />}
        />
        <Button submit icon={<Invite />} loading={loadingSendInvite} data-test-id="submit-btn">
          Invite
        </Button>
      </Group>
    </form>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import { Button, errorMessage, Invite, successMessage } from '@novu/design-system';
import { IResponseError } from '@novu/shared';
import { useMutation } from '@tanstack/react-query';
import { Controller, useForm } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/invites/v2/MembersInvitePage.styles.ts
Tamaño: 410 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';

import { Input } from '@novu/design-system';

export const StyledInput = styled(Input)`
  width: 18.75rem;

  .mantine-TextInput-wrapper,
  input {
    min-height: auto;
    height: 2.625rem;
  }
  margin-top: -2px;
`;

export const StyledButton = styled.button`
  color: #0000ff;
  text-decoration: none;
  background: transparent;
  border: none;
  cursor: pointer;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/invites/v2/MembersInvitePage.tsx
Tamaño: 3744 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Container, Group } from '@mantine/core';
import { showNotification } from '@mantine/notifications';
import { IMemberEntity, MemberRoleEnum } from '@novu/shared';
import { useQuery } from '@tanstack/react-query';

import { errorMessage, successMessage, Title, UserAccess } from '@novu/design-system';
import { IS_SELF_HOSTED } from '../../../config';
import { changeMemberRole, getOrganizationMembers, removeMember, resendInviteMember } from '../../../api/organization';
import { useAuth } from '../../../hooks/useAuth';
import { ProductLead } from '../../../components/utils/ProductLead';
import { MembersTable } from '../components/MembersTable';
import { CopyInviteLink } from './CopyInviteLink';
import { MemberInviteForm } from './MemberInviteForm';
import { buildInviteHref, generateInviteLink } from './MembersInvitePage.utils';

interface IMembersInviteProps {
  shouldHideTitle?: boolean;
}

export function MembersInvitePage({ shouldHideTitle }: IMembersInviteProps) {
  const { currentOrganization, currentUser } = useAuth();

  const {
    data: members,
    isLoading: loadingMembers,
    refetch,
  } = useQuery<IMemberEntity[]>(['getOrganizationMembers'], getOrganizationMembers);

  async function removeMemberClick(member: IMemberEntity) {
    try {
      await removeMember(member._id);

      successMessage(`Successfully deleted member.`);

      refetch();
    } catch (err: unknown) {
      if (err instanceof Error) {
        errorMessage(err.message);
      }
    }
  }

  async function changeMemberRoleClick(member: IMemberEntity, memberRole: MemberRoleEnum) {
    try {
      await changeMemberRole(member._id, memberRole);
      successMessage(`Successfully changed role of member.`);

      refetch();
    } catch (err: unknown) {
      if (err instanceof Error) {
        errorMessage(err.message);
      }
    }
  }

  async function resendInviteMemberClick(member: IMemberEntity) {
    if (IS_SELF_HOSTED && member.invite?.email) {
      inviteByLink(member.invite.email);

      return;
    }

    try {
      await resendInviteMember(member._id);

      successMessage(`Successfully resent invite.`);
    } catch (err: unknown) {
      if (err instanceof Error) {
        errorMessage(err.message);
      }
    }
  }

  const inviteByLink = (invitedEmail: string) => {
    const currentMember = members?.find((member) => member?.invite?.email === invitedEmail);
    if (!currentMember || !currentMember.invite?.token) return;

    const inviteLink = generateInviteLink(currentMember.invite.token);

    const inviteHref = buildInviteHref({
      organizationName: currentOrganization?.name,
      currentUser,
      copyLink: inviteLink,
      invitedMemberEmail: invitedEmail,
    });

    showNotification({
      message: <CopyInviteLink copyLink={inviteLink} inviteEmailLink={inviteHref} />,
      color: 'green',
    });
  };

  return (
    <div>
      <Group position="apart">
        {!shouldHideTitle && <Title>Team Members</Title>}
        <MemberInviteForm onSuccess={refetch} inviteByLink={inviteByLink} />
      </Group>

      <Container fluid p={0} mt={shouldHideTitle ? 24 : undefined}>
        <ProductLead
          icon={<UserAccess />}
          id="rbac-team-page"
          title="Role-based access control"
          text="Securely manage users' permissions to access system resources."
        />
      </Container>
      <Container fluid mt={24} p={0}>
        <MembersTable
          loading={loadingMembers}
          members={members}
          currentUser={currentUser}
          onRemoveMember={removeMemberClick}
          onResendInviteMember={resendInviteMemberClick}
          onChangeMemberRole={changeMemberRoleClick}
        />
      </Container>
    </div>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Container, Group } from '@mantine/core';
import { showNotification } from '@mantine/notifications';
import { IMemberEntity, MemberRoleEnum } from '@novu/shared';
import { useQuery } from '@tanstack/react-query';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/invites/v2/MembersInvitePage.utils.ts
Tamaño: 971 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { IUserEntity } from '@novu/shared';
import { ROUTES } from '../../../constants/routes';
import { parseUrl } from '../../../utils/routeUtils';

export const buildInviteHref = ({
  invitedMemberEmail,
  organizationName,
  currentUser,
  copyLink,
}: {
  invitedMemberEmail: string;
  organizationName?: string;
  currentUser?: IUserEntity | null;
  copyLink: string;
}) => {
  const mailTo = `mailto:${invitedMemberEmail}`;
  const subject = `You've been invited to ${organizationName}`;
  const body =
    `\nHi!\n\n` +
    `You have been invited to ${organizationName} by ${currentUser?.firstName} ${currentUser?.lastName}.\n\n` +
    `Click on the link below to accept ${copyLink}.`;

  return `${mailTo}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
};

export const generateInviteLink = (memberToken: string) => {
  return `${window.location.origin.toString()}${parseUrl(ROUTES.AUTH_INVITATION_TOKEN, { token: memberToken })}`;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - buildInviteHref({
  invitedMemberEmail,
  organizationName,
  currentUser,
  copyLink,
}: {
  invitedMemberEmail: st...)
 - generateInviteLink(memberToken: string))
Declaraciones 'export' encontradas:
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/layouts/LayoutEditor.tsx
Tamaño: 11224 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useForm, Controller, useFieldArray } from 'react-hook-form';
import { ActionIcon, Center, Grid, Group, Modal, Title, useMantineTheme } from '@mantine/core';
import { useQueryClient } from '@tanstack/react-query';
import { useEffect, useMemo, useState } from 'react';
import { parse } from '@handlebars/parser';
import { useClipboard } from '@mantine/hooks';
import { getTemplateVariables, ITemplateVariable, isReservedVariableName, LayoutId, slugify } from '@novu/shared';
import {
  ArrowLeft,
  Check,
  Copy,
  Button,
  Checkbox,
  colors,
  Input,
  Text,
  LoadingOverlay,
  shadows,
  Tooltip,
} from '@novu/design-system';
import { useEnvironment, useLayoutsEditor, usePrompt } from '../../hooks';
import { errorMessage, successMessage } from '../../utils/notifications';
import { QueryKeys } from '../../api/query.keys';
import { VariablesManagement } from '../templates/components/email-editor/variables-management/VariablesManagement';
import { UnsavedChangesModal } from '../templates/components/UnsavedChangesModal';
import { VariableManager } from '../templates/components/VariableManager';
import { CustomCodeEditor } from '../templates/components/CustomCodeEditor';

interface ILayoutForm {
  content: string;
  name: string;
  identifier: string;
  description: string;
  isDefault: boolean;
  variables: ITemplateVariable[];
}
const defaultFormValues = {
  content: '',
  name: '',
  identifier: '',
  description: '',
  isDefault: false,
  variables: [],
};
export function LayoutEditor({
  id = '',
  editMode = false,
  goBack,
}: {
  id?: string;
  editMode?: boolean;
  goBack: () => void;
}) {
  const { readonly, environment } = useEnvironment();
  const identifierClipboard = useClipboard({ timeout: 1000 });
  const theme = useMantineTheme();
  const queryClient = useQueryClient();
  const [ast, setAst] = useState<any>({ body: [] });
  const [modalOpen, setModalOpen] = useState(false);
  const [layoutId, setLayoutId] = useState<LayoutId>(id);

  const { layout, isLoading, createNewLayout, updateLayout } = useLayoutsEditor(layoutId);

  const {
    handleSubmit,
    watch,
    control,
    setValue,
    formState: { isDirty, errors },
  } = useForm<ILayoutForm>({
    defaultValues: defaultFormValues,
    shouldUseNativeValidation: false,
  });
  const [showModal, confirmNavigation, cancelNavigation] = usePrompt(isDirty);

  const layoutContent = watch('content');
  const variablesArray = useFieldArray({ control, name: `variables` });
  const variableArray = watch(`variables`, []);

  useEffect(() => {
    if (layout) {
      if (layout.content) {
        setValue('content', layout?.content);
      }
      if (layout.name) {
        setValue('name', layout?.name);
      }
      if (layout.identifier) {
        setValue('identifier', layout?.identifier);
      }
      if (layout.description) {
        setValue('description', layout?.description);
      }
      if (layout.variables) {
        setValue('variables', layout?.variables);
      }
      if (layout.isDefault != null) {
        setValue('isDefault', layout?.isDefault);
      }
    }
  }, [setValue, layout]);

  const layoutName = watch('name');
  const identifier = watch('identifier');

  useEffect(() => {
    if (editMode && identifier) {
      return;
    }

    const newIdentifier = slugify(layoutName);
    setValue('identifier', newIdentifier);
  }, [editMode, layoutName]);

  useEffect(() => {
    if (environment && layout) {
      if (environment._id !== layout._environmentId) {
        if (layout._parentId) {
          setLayoutId(layout._parentId);
        } else {
          goBack();
        }
      }
    }
  }, [goBack, environment, layout]);

  useMemo(() => {
    const variables = getTemplateVariables(ast.body).filter(
      ({ name }) => !isReservedVariableName(name)
    ) as ITemplateVariable[];
    const arrayFields = [...(variableArray || [])];

    variables.forEach((vari) => {
      if (!arrayFields.find((field) => field.name === vari.name)) {
        arrayFields.push(vari);
      }
    });
    arrayFields.forEach((vari, ind) => {
      if (!variables.find((field) => field.name === vari.name)) {
        delete arrayFields[ind];
      }
    });

    variablesArray.replace(arrayFields.filter((field) => !!field));
  }, [ast]);

  useEffect(() => {
    try {
      setAst(parse(layoutContent));
    } catch (e) {
      /* empty */
    }
  }, [layoutContent]);

  async function onSubmitLayout(data) {
    try {
      if (editMode) {
        await updateLayout({ layoutId: id, data });
      } else {
        await createNewLayout(data);
      }
      await queryClient.refetchQueries([QueryKeys.getLayoutsList]);

      successMessage(`Layout ${editMode ? 'Updated' : 'Created'}!`);
      goBack();
    } catch (e: any) {
      errorMessage(e.message || 'Unexpected error occurred');
    }
  }

  return (
    <LoadingOverlay visible={isLoading}>
      <Center mb={15} data-test-id="go-back-button" onClick={() => goBack()} inline style={{ cursor: 'pointer' }}>
        <ArrowLeft color={colors.B60} />
        <Text ml={5} color={colors.B60}>
          Go Back
        </Text>
      </Center>
      <form noValidate name={'layout-form'} onSubmit={handleSubmit(onSubmitLayout)}>
        <Grid grow>
          <Grid.Col span={9}>
            <div
              style={{
                borderRadius: '7px',
                marginBottom: '24px',
                padding: '16px',
                background: theme.colorScheme === 'dark' ? colors.B20 : colors.B98,
              }}
            >
              <Grid gutter={30} grow>
                <Grid.Col md={5} sm={12}>
                  <Controller
                    control={control}
                    name="name"
                    rules={{
                      required: 'Required - Layout name',
                    }}
                    render={({ field }) => (
                      <Input
                        {...field}
                        mb={30}
                        data-test-id="layout-name"
                        disabled={readonly}
                        required
                        value={field.value || ''}
                        error={errors?.name?.message}
                        label="Layout Name"
                        placeholder="Layout name goes here..."
                      />
                    )}
                  />
                </Grid.Col>
                <Grid.Col md={5} sm={12}>
                  <Controller
                    control={control}
                    name="identifier"
                    rules={{
                      required: 'Required - Layout identifier',
                      pattern: {
                        value: /^[A-Za-z0-9_-]+$/,
                        message:
                          'Layout identifier must contains only alphabetical, numeric, dash or underscore characters',
                      },
                    }}
                    render={({ field }) => (
                      <Input
                        {...field}
                        mb={30}
                        data-test-id="layout-identifier"
                        disabled={readonly}
                        required
                        value={field.value || ''}
                        error={errors?.identifier?.message}
                        label="Layout identifier"
                        placeholder="Layout identifier goes here..."
                        rightSection={
                          <Tooltip data-test-id={'Tooltip'} label={identifierClipboard.copied ? 'Copied!' : 'Copy Key'}>
                            <ActionIcon variant="transparent" onClick={() => identifierClipboard.copy(field.value)}>
                              {identifierClipboard.copied ? <Check /> : <Copy />}
                            </ActionIcon>
                          </Tooltip>
                        }
                      />
                    )}
                  />
                </Grid.Col>
              </Grid>
              <Controller
                name="description"
                control={control}
                render={({ field }) => (
                  <Input
                    {...field}
                    value={field.value || ''}
                    disabled={readonly}
                    mb={30}
                    data-test-id="layout-description"
                    label="Layout Description"
                    placeholder="Describe your layout..."
                  />
                )}
              />
            </div>

            <Controller
              name="content"
              data-test-id="layout-content"
              control={control}
              render={({ field }) => {
                return <CustomCodeEditor onChange={field.onChange} value={field.value} height="380px" />;
              }}
            />
          </Grid.Col>
          <Grid.Col
            span={3}
            style={{
              maxWidth: '350px',
            }}
          >
            <VariablesManagement
              openVariablesModal={() => {
                setModalOpen(true);
              }}
              path="variables"
              control={control}
            />
          </Grid.Col>
        </Grid>
        <Group position="right" py={20}>
          <Controller
            name="isDefault"
            control={control}
            render={({ field }) => {
              return (
                <Checkbox
                  checked={field.value === true}
                  disabled={readonly}
                  onChange={field.onChange}
                  data-test-id="is-default-layout"
                  label="Set as Default"
                />
              );
            }}
          />

          <Button disabled={readonly} submit data-test-id="submit-layout">
            {editMode ? 'Update' : 'Create'}
          </Button>
        </Group>
      </form>
      <Modal
        opened={modalOpen}
        overlayColor={theme.colorScheme === 'dark' ? colors.BGDark : colors.BGLight}
        overlayOpacity={0.7}
        styles={{
          modal: {
            backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.white,
            width: '90%',
          },
          body: {
            paddingTop: '5px',
            paddingInline: '8px',
          },
        }}
        title={<Title>Variables</Title>}
        sx={{ backdropFilter: 'blur(10px)' }}
        shadow={theme.colorScheme === 'dark' ? shadows.dark : shadows.medium}
        radius="md"
        size="lg"
        onClose={() => {
          setModalOpen(false);
        }}
        centered
        overflow="inside"
      >
        <VariableManager variablesArray={variablesArray} path="" control={control} />
        <Group position="right">
          <Button
            data-test-id="close-var-manager-modal"
            mt={30}
            onClick={() => {
              setModalOpen(false);
            }}
          >
            Close
          </Button>
        </Group>
      </Modal>
      <UnsavedChangesModal
        isOpen={showModal}
        cancelNavigation={cancelNavigation}
        confirmNavigation={confirmNavigation}
      />
    </LoadingOverlay>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useForm, Controller, useFieldArray } from 'react-hook-form';
import { ActionIcon, Center, Grid, Group, Modal, Title, useMantineTheme } from '@mantine/core';
import { useQueryClient } from '@tanstack/react-query';
import { useEffect, useMemo, useState } from 'react';
import { parse } from '@handlebars/parser';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/layouts/LayoutList.tsx
Tamaño: 6916 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { ActionIcon, useMantineTheme } from '@mantine/core';
import {
  colors,
  Text,
  Tooltip,
  PlusButton,
  withCellLoading,
  Edit,
  Trash,
  IExtendedColumn,
  Table,
} from '@novu/design-system';
import type { ILayoutEntity } from '@novu/shared';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { format } from 'date-fns';
import { useCallback, useState } from 'react';
import { deleteLayoutById } from '../../api/layouts';
import { QueryKeys } from '../../api/query.keys';
import { When } from '../../components/utils/When';

import { useAuth, useEnvironment, useLayouts } from '../../hooks';
import { errorMessage, successMessage } from '../../utils/notifications';
import { useSegment } from '../../components/providers/SegmentProvider';
import { DeleteConfirmModal } from '../templates/components/DeleteConfirmModal';
import { LayoutEditor } from './LayoutEditor';

const enum ActivePageEnum {
  LAYOUTS_LIST = 'layouts_list',
  EDIT_LAYOUT = 'edit_layout',
  CREATE_LAYOUT = 'create_layout',
}

export function LayoutList() {
  const { currentOrganization, currentUser } = useAuth();
  const { environment, readonly } = useEnvironment();
  const segment = useSegment();
  const theme = useMantineTheme();
  const queryClient = useQueryClient();
  const [page, setPage] = useState<number>(0);
  const [editId, setEditId] = useState('');
  const [activeScreen, setActiveScreen] = useState(ActivePageEnum.LAYOUTS_LIST);
  const [toDelete, setToDelete] = useState('');
  const { mutateAsync: deleteLayout, isLoading: isLoadingDelete } = useMutation(deleteLayoutById, {
    onSuccess: () => {
      queryClient.refetchQueries([QueryKeys.changesCount]);
    },
  });
  const { layouts, isLoading, totalCount, pageSize, refetchLayouts } = useLayouts(page);

  function handleTableChange(pageIndex) {
    setPage(pageIndex);
  }

  const cancelDelete = () => {
    setToDelete('');
  };

  const onDelete = (id) => {
    setToDelete(id);
  };

  const confirmDelete = async () => {
    await handleDeleteLayout(toDelete);
    setToDelete('');
  };

  const handleDeleteLayout = async (layoutId: string) => {
    try {
      await deleteLayout(layoutId);
      await refetchLayouts();
      successMessage('Layout deleted!');
    } catch (e: any) {
      errorMessage(e?.message || 'Could not delete');
    }
  };

  const goBack = useCallback(() => {
    setEditId('');
    setActiveScreen(ActivePageEnum.LAYOUTS_LIST);
  }, []);

  const editLayout = (id?: string) => {
    if (typeof id === 'undefined') return;

    setEditId(id);
    setActiveScreen(ActivePageEnum.EDIT_LAYOUT);
    handleLayoutAnalytics('Edit screen opened', { layoutId: id });
  };

  const columns: IExtendedColumn<ILayoutEntity>[] = [
    {
      accessor: 'name',
      Header: 'Name',
      Cell: withCellLoading(({ row: { original } }) => (
        <Tooltip label={original.name}>
          <div>
            <Text rows={1}>{original.name}</Text>
            <Text rows={1} size="xs" color={colors.B40}>
              {original.identifier}
            </Text>
          </div>
        </Tooltip>
      )),
    },
    {
      accessor: 'description',
      Header: 'Description',
      Cell: withCellLoading(({ row: { original } }) => (
        <Tooltip label={original.description}>
          <div>
            <Text rows={1}>{original.description ?? ''}</Text>
          </div>
        </Tooltip>
      )),
    },
    {
      accessor: 'createdAt',
      Header: 'Created At',
      Cell: withCellLoading(({ row: { original } }) => format(new Date(original.createdAt ?? ''), 'dd/MM/yyyy HH:mm')),
    },
    {
      accessor: 'updatedAt',
      Header: 'Last Updated',
      Cell: withCellLoading(({ row: { original } }) => format(new Date(original.updatedAt ?? ''), 'dd/MM/yyyy HH:mm')),
    },
    {
      accessor: '_id',
      Header: '',
      maxWidth: 50,
      Cell: withCellLoading(({ row: { original } }) => (
        <ActionButtonWrapper>
          <ActionIcon variant="transparent" onClick={() => editLayout(original._id)}>
            <Edit
              style={{
                width: '20px',
                height: '20px',
              }}
              color={theme.colorScheme === 'dark' ? colors.B40 : colors.B80}
            />
          </ActionIcon>
          {!readonly && (
            <ActionIcon
              variant="transparent"
              onClick={(e) => {
                e.stopPropagation();
                onDelete(original._id);
              }}
            >
              <Trash color={theme.colorScheme === 'dark' ? colors.B40 : colors.B80} />
            </ActionIcon>
          )}
        </ActionButtonWrapper>
      )),
    },
  ];

  function onRowClick(row) {
    editLayout(row.values._id);
  }

  const handleLayoutAnalytics = (event: string, data?: Record<string, unknown>) => {
    segment.track(`[Layout] - ${event}`, {
      _organizationId: currentOrganization?._id,
      _environmentId: environment?._id,
      userId: currentUser?._id,
      ...data,
    });
  };

  return (
    <>
      <When truthy={editId.length && activeScreen === ActivePageEnum.EDIT_LAYOUT}>
        <LayoutEditor editMode goBack={goBack} id={editId} />
      </When>
      <When truthy={activeScreen === ActivePageEnum.CREATE_LAYOUT}>
        <LayoutEditor goBack={goBack} />
      </When>
      <When truthy={activeScreen === ActivePageEnum.LAYOUTS_LIST}>
        <div
          style={{
            marginBottom: '10px',
            marginTop: '10px',
          }}
        >
          <PlusButton
            isGradient={!readonly}
            label="Add New Layout"
            disabled={readonly || isLoading || isLoadingDelete}
            onClick={() => {
              setActiveScreen(ActivePageEnum.CREATE_LAYOUT);
              handleLayoutAnalytics('Create new layout btn clicked');
            }}
          />
        </div>

        <TemplateListTableWrapper>
          <Table
            data-test-id="layouts-table"
            loading={isLoading || isLoadingDelete}
            columns={columns}
            data={layouts || []}
            onRowClick={onRowClick}
            pagination={{
              pageSize,
              current: page,
              total: totalCount,
              onPageChange: handleTableChange,
            }}
          />
        </TemplateListTableWrapper>
      </When>

      <DeleteConfirmModal target="layout" isOpen={toDelete.length > 0} confirm={confirmDelete} cancel={cancelDelete} />
    </>
  );
}

const ActionButtonWrapper = styled.div`
  text-align: right;

  button {
    display: inline-block;
    opacity: 0;
    transition: opacity 0.1s ease-in;
  }
`;

const TemplateListTableWrapper = styled.div`
  tr:hover {
    cursor: pointer;

    ${ActionButtonWrapper} {
      button {
        opacity: 1;
      }
    }
  }
  [data-table-holder] {
    margin: 0 -30px;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { ActionIcon, useMantineTheme } from '@mantine/core';
import {
colors,
Text,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/layouts/LayoutsPage.tsx
Tamaño: 771 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Center, Container, Loader } from '@mantine/core';
import { colors } from '@novu/design-system';
import PageContainer from '../../components/layout/components/PageContainer';
import PageHeader from '../../components/layout/components/PageHeader';
import { useAuth } from '../../hooks/useAuth';
import { LayoutList } from './LayoutList';

const LAYOUT = 'Layouts';

export function LayoutsPage() {
  const { currentOrganization } = useAuth();

  if (!currentOrganization) {
    return (
      <Center>
        <Loader color={colors.error} size={32} />
      </Center>
    );
  }

  return (
    <PageContainer title={LAYOUT}>
      <PageHeader title={LAYOUT} />
      <Container fluid px={30}>
        <LayoutList />
      </Container>
    </PageContainer>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Center, Container, Loader } from '@mantine/core';
import { colors } from '@novu/design-system';
import PageContainer from '../../components/layout/components/PageContainer';
import PageHeader from '../../components/layout/components/PageHeader';
import { useAuth } from '../../hooks/useAuth';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/quick-start/consts.tsx
Tamaño: 11001 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { Dispatch } from 'react';
import { Stack } from '@mantine/core';
import { NavigateFunction } from 'react-router-dom';
import { ChannelTypeEnum, UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';

import { WIDGET_EMBED_PATH } from '../../config';

export const onBoardingSubscriberId = 'on-boarding-subscriber-id-123';
export const inAppSandboxSubscriberId = 'in-app-sandbox-subscriber-id-123';
export const notificationTemplateName = 'On-boarding notification';
export const cloneDemoRepo = 'git clone https://github.com/novuhq/notification-center-demo.git';
export const APPLICATION_IDENTIFIER = '<APPLICATION_IDENTIFIER>';
export const API_KEY = '<API_KEY>';
export const BACKEND_API_URL = '<BACKEND_API_URL>';
export const BACKEND_SOCKET_URL = '<BACKEND_SOCKET_URL>';
export const setupProject = `cd notification-center-demo && npm run setup:onboarding -- ${APPLICATION_IDENTIFIER} ${API_KEY} ${BACKEND_API_URL} ${BACKEND_SOCKET_URL}`;
export const npmRunCommand = 'npm run dev';
export const frameworkSetupTitle = 'Choose your go-to framework';
export const faqUrl = `https://docs.novu.co/notification-center/introduction${UTM_CAMPAIGN_QUERY_PARAM}`;
export const notificationCenterDocsUrl = `https://docs.novu.co/notification-center/introduction${UTM_CAMPAIGN_QUERY_PARAM}`;
export const discordInviteUrl = 'https://discord.gg/novu';
export const demoSetupSecondaryTitle = 'Follow the installation steps to connect your app';

interface ISnippetInstructions {
  instruction: React.ReactNode | string;
  snippet: string;
  language?: string;
}

const installReactNotificationCenter = 'npm install @novu/notification-center';
const installReactInbox = 'npm install @novu/react';
const installAngularNotificationCenter = 'npm install @novu/notification-center-angular';
const installVueNotificationCenter = 'npm install @novu/notification-center-vue';

export const reactStarterSnippet = `import React from 'react';
import {
  NovuProvider,
  PopoverNotificationCenter,
  NotificationBell,
} from '@novu/notification-center';

export const Header = () => {
  return (
    <NovuProvider subscriberId={'${onBoardingSubscriberId}'} applicationIdentifier={'${APPLICATION_IDENTIFIER}'}>
      <PopoverNotificationCenter colorScheme={'light'}>
        {({ unseenCount }) => <NotificationBell unseenCount={unseenCount} />}
      </PopoverNotificationCenter>
    </NovuProvider>
  );
};`;

export const reactStarterSnippetV2 = `import React from 'react';
import { Inbox } from '@novu/react';

export const Header = () => {
  return (
    <Inbox subscriberId={'${onBoardingSubscriberId}'} applicationIdentifier={'${APPLICATION_IDENTIFIER}'} />
  );
};`;

const angularInteractions = (
  <div>
    <Stack spacing={1}>
      <span>In the app.module.ts file import the NotificationCenterModule, and set the schemas:</span>
      <span>[CUSTOM_ELEMENTS_SCHEMA]</span>
    </Stack>
  </div>
);

export const angularAppSnippet = `import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { AppComponent } from './app.component';

import { NotificationCenterModule } from '@novu/notification-center-angular';

@NgModule({
  declarations: [AppComponent],
  imports: [BrowserModule, NotificationCenterModule],
  providers: [],
  bootstrap: [AppComponent],
  schemas: [CUSTOM_ELEMENTS_SCHEMA],
})
export class AppModule {}`;

export const angularComponentSnippet = `import { Component } from '@angular/core';
import { environment } from '../environments/environment';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.sass'],
})
export class AppComponent {
  subscriberId = '${onBoardingSubscriberId}';
  applicationIdentifier = '${APPLICATION_IDENTIFIER}';

  sessionLoaded = (data: unknown) => {
    console.log('loaded', { data });
  };
}`;

export const angularHtmlSnippet = `<notification-center-component
    [subscriberId]="subscriberId"
    [applicationIdentifier]="applicationIdentifier"
    [sessionLoaded]="sessionLoaded"
  ></notification-center-component>`;

const vuePluginSnippet = `import NotificationCenterPlugin from '@novu/notification-center-vue';
import '@novu/notification-center-vue/dist/style.css';

import App from './App.vue';

createApp(App).use(NotificationCenterPlugin).mount('#app');`;

export const vueComponentSnippet = `<script lang="ts">
export default {
  data() {
    return {
      applicationIdentifier: '${APPLICATION_IDENTIFIER}',
      subscriberId: '${onBoardingSubscriberId}',
    };
  },
  methods: {
    sessionLoaded() {
      console.log('Session loaded!');
    },
  },
};
</script>

<template>
  <NotificationCenterComponent
    :subscriberId="subscriberId"
    :applicationIdentifier="applicationIdentifier"
    :sessionLoaded="sessionLoaded"
    v-slot="slot"
  >
    <button>Notifications: {{ slot.unseenCount }}</button>
  </NotificationCenterComponent>
</template>

<style scoped></style>`;

const embedScript = `<script>
  (function(n,o,t,i,f) {
    n[i] = {}; var m = ['init', 'on']; n[i]._c = [];m.forEach(me => n[i][me] = function() {n[i]._c.push([me, arguments])});
    var elt = o.createElement(f); elt.type = "text/javascript"; elt.async = true; elt.src = t;
    var before = o.getElementsByTagName(f)[0]; before.parentNode.insertBefore(elt, before);
  })(window, document, '${WIDGET_EMBED_PATH}', 'novu', 'script');

  novu.init('${APPLICATION_IDENTIFIER}', '#notification-bell', {
    subscriberId: "${onBoardingSubscriberId}",
  });
</script>`;

const embedBellSelector = `<nav>
  <div id="notification-bell">
    <i class="fa fa-bell"></i>
    <span id="unseen-badge"></span>
  </div>
</nav>`;

export enum FrameworkEnum {
  REACT = 'react',
  ANGULAR = 'angular',
  VUE = 'vue',
  JS = 'js',
  DEMO = 'demo',
}

export const frameworkInstructions: { key: string; value: ISnippetInstructions[] }[] = [
  {
    key: FrameworkEnum.REACT,
    value: [
      {
        instruction: 'First you have to install the package:',
        snippet: installReactNotificationCenter,
        language: 'bash',
      },
      { instruction: 'Then import and render the components:', snippet: reactStarterSnippet },
    ],
  },
  {
    key: FrameworkEnum.ANGULAR,
    value: [
      {
        instruction: 'First you have to install the package:',
        snippet: installAngularNotificationCenter,
        language: 'bash',
      },
      {
        instruction: angularInteractions,
        snippet: angularAppSnippet,
      },
      {
        instruction: 'In the component define variables for the notification-center-component',
        snippet: angularComponentSnippet,
      },
      {
        instruction: 'Use the notification-center-component in the HTML template file',
        snippet: angularHtmlSnippet,
      },
    ],
  },
  {
    key: FrameworkEnum.VUE,
    value: [
      {
        instruction: 'First you have to install the package:',
        snippet: installVueNotificationCenter,
        language: 'bash',
      },
      {
        instruction: 'In the main.ts file import the plugin and styles and then use that plugin.',
        snippet: vuePluginSnippet,
      },
      {
        instruction: 'Now NotificationCenterComponent could be used like this in the Vue component file:',
        snippet: vueComponentSnippet,
      },
    ],
  },
  {
    key: FrameworkEnum.JS,
    value: [
      {
        instruction: 'Add the following script into your code.',
        snippet: embedScript,
        language: 'html',
      },
      {
        instruction: 'Add the following div that will contain the bell widget',
        snippet: embedBellSelector,
        language: 'html',
      },
    ],
  },
  {
    key: FrameworkEnum.DEMO,
    value: [
      {
        instruction: 'Clone the project to your local machine',
        snippet: cloneDemoRepo,
        language: 'bash',
      },
      {
        instruction: 'Run setup project command',
        snippet: setupProject,
        language: 'bash',
      },
      {
        instruction: 'Run npm run dev',
        snippet: npmRunCommand,
        language: 'bash',
      },
    ],
  },
];

export const frameworkInstructionsV2: { key: string; value: ISnippetInstructions[] }[] = [
  {
    key: FrameworkEnum.REACT,
    value: [
      {
        instruction: 'First you have to install the package:',
        snippet: installReactInbox,
        language: 'bash',
      },
      { instruction: 'Then import and render the components:', snippet: reactStarterSnippetV2 },
    ],
  },
];

export enum OnBoardingAnalyticsEnum {
  FRAMEWORK_SETUP_VISIT = 'In app frameworks select',
  FRAMEWORKS_SETUP_VISIT = 'Framework Setup Page Visit',
  FLOW_SELECTED = 'Quick Start Flow Select',
  TRIGGER_VISIT = 'Trigger Page Visit',
  CLICKED_FAQ = 'Clicked On FAQ',
  CLICKED_DOCS = 'Clicked On Our Docs',
  CLICKED_HELP_REQUEST = 'Clicked On Help Request',
  CLICKED_ASK_COMMUNITY = 'Clicked On Ask Community',
  CLICKED_CREATE_TEMPLATE = 'Clicked On Create Template',
  CLICKED_TRIGGER_EVENT = 'Clicked On Trigger Event',
  COPIED_STEP = 'Copied Snippet',
  CONFIGURE_PROVIDER_VISIT = 'Page Visit - [Get Started - Configure Provider]',
  CONFIGURE_PROVIDER_LEARN_MORE_CLICK = 'Learn More Click - [Get Started - Configure Provider]',
  CONFIGURE_PROVIDER_CLICK = 'Configure Provider Click - [Get Started - Configure Provider]',
  UPDATE_PROVIDER_CLICK = 'Update Provider Click - [Get Started - Configure Provider]',
  CONFIGURE_PROVIDER_NAVIGATION_NEXT_PAGE_CLICK = 'Next Page Click - [Get Started - Configure Provider]',
  NAVIGATION_CONFIGURE_PROVIDER_CLICK = 'Navigation Configure Provider Click - [Get Started]',
  NAVIGATION_BUILD_WORKFLOW_CLICK = 'Navigation Build Workflow Click - [Get Started]',
  BUILD_WORKFLOW_VISIT = 'Page Visit - [Get Started - Build WorkFlow]',
  BUILD_WORKFLOW_PREVIOUS_PAGE_CLICK = 'Previous Page Click - [Get Started - Build WorkFlow]',
  BUILD_WORKFLOW_CLICK = 'Build Workflow Click - [Get Started - Build WorkFlow]',
  BUILD_WORKFLOW_TRY_DIGEST_PLAYGROUND_CLICK = 'Try Digest Playground Click - [Get Started - Build WorkFlow]',
  BUILD_WORKFLOW_NODE_POPOVER_LEARN_MORE_CLICK = 'Node Popover Learn More Click - [Get Started - Build WorkFlow]',
  IN_APP_SANDBOX_SUCCESS_VISIT = 'Success Page Visit - [In-App Sandbox - Success]',
  IN_APP_SANDBOX_RUN_TRIGGER_CLICK = 'Run Trigger Clicked - [In-App Sandbox]',
  CONFIGURE_LATER_CLICK = 'Configure Later Click',
  BRIDGE_PLAYGROUND_CONTINUE_CLICK = 'Continue Click [Bridge Playground]',

  // Onboarding Experiment
  ONBOARDING_EXPERIMENT_TEST_NOTIFICATION = 'Button Clicked - [Onboarding]',
}

export enum FlowTypeEnum {
  IN_APP = 'in_app',
  OTHER = 'other',
}

export interface IQuickStartChannelConfiguration {
  Icon: React.FC<any>;
  title: string;
  displayName: string;
  type: ChannelTypeEnum;
  description: string;
  clickHandler: (options: IOptions) => void;
}

interface IOptions {
  navigate: NavigateFunction;
  setClickedChannel: Dispatch<any>;
  channelType: ChannelTypeEnum;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { Dispatch } from 'react';
import { Stack } from '@mantine/core';
import { NavigateFunction } from 'react-router-dom';
import { ChannelTypeEnum, UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/AccessSecurityPage.tsx
Tamaño: 660 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IconAdminPanelSettings } from '@novu/design-system';
import { FC } from 'react';
import { ProductLead } from '../../components/utils/ProductLead';
import { SettingsPageContainer } from './SettingsPageContainer';

export const AccessSecurityPage: FC = () => {
  return (
    <SettingsPageContainer title={'Access security'}>
      <ProductLead
        icon={<IconAdminPanelSettings size="24" color="typography.text.secondary" />}
        id="rbac-permissions"
        title="Role-based access control"
        text="Securely manage users' permissions to access system resources."
        closeable={false}
      />
    </SettingsPageContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IconAdminPanelSettings } from '@novu/design-system';
import { FC } from 'react';
import { ProductLead } from '../../components/utils/ProductLead';
import { SettingsPageContainer } from './SettingsPageContainer';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/BillingPage.tsx
Tamaño: 308 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FC } from 'react';
import { BillingRoutes } from '../BillingPages';
import { SettingsPageContainer } from './SettingsPageContainer';

export const BillingPage: FC = () => {
  return (
    <SettingsPageContainer title={'Plans & Billing'}>
      <BillingRoutes />
    </SettingsPageContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FC } from 'react';
import { BillingRoutes } from '../BillingPages';
import { SettingsPageContainer } from './SettingsPageContainer';
export const BillingPage: FC = () => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/SettingsPageContainer.tsx
Tamaño: 1208 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { PageContainer, When } from '@novu/design-system';
import { FC, PropsWithChildren, ReactNode } from 'react';
import { css } from '@novu/novui/css';
import PageHeader from '../../components/layout/components/PageHeader';

export interface ISettingsPageContainerProps {
  // TODO: this should be LocalizedMessage, but PageContainer and PageHeader don't accept it
  title: string;
  header?: ReactNode;
}

/**
 * This should eventually replace `Container` in the design system
 */
const SettingsPageContentContainer: FC<PropsWithChildren> = ({ children }) => {
  return (
    <section
      className={css({
        m: '150',
        bg: 'surface.page',
      })}
    >
      {children}
    </section>
  );
};

export const SettingsPageContainer: FC<PropsWithChildren<ISettingsPageContainerProps>> = ({
  title,
  children,
  header,
}) => {
  return (
    <PageContainer title={title}>
      <PageHeader title={title} />
      <When truthy={!!header}>
        <section
          className={css({
            mx: '150',
          })}
        >
          {header}
        </section>
      </When>
      <SettingsPageContentContainer>{children}</SettingsPageContentContainer>
    </PageContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { PageContainer, When } from '@novu/design-system';
import { FC, PropsWithChildren, ReactNode } from 'react';
import { css } from '@novu/novui/css';
import PageHeader from '../../components/layout/components/PageHeader';
// TODO: this should be LocalizedMessage, but PageContainer and PageHeader don't accept it
/**
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/SettingsPageNew.tsx
Tamaño: 425 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Center, Loader } from '@mantine/core';
import { Outlet } from 'react-router-dom';
import { colors } from '@novu/design-system';
import { useAuth } from '../../hooks/useAuth';

export function SettingsPageNew() {
  const { currentOrganization } = useAuth();
  if (!currentOrganization) {
    return (
      <Center>
        <Loader color={colors.error} size={32} />
      </Center>
    );
  }

  return <Outlet />;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Center, Loader } from '@mantine/core';
import { Outlet } from 'react-router-dom';
import { colors } from '@novu/design-system';
import { useAuth } from '../../hooks/useAuth';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/TeamPage.tsx
Tamaño: 342 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FC } from 'react';
import { MembersInvitePage } from '../invites/v2/MembersInvitePage';
import { SettingsPageContainer } from './SettingsPageContainer';

export const TeamPage: FC = () => {
  return (
    <SettingsPageContainer title={'Team members'}>
      <MembersInvitePage shouldHideTitle />
    </SettingsPageContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FC } from 'react';
import { MembersInvitePage } from '../invites/v2/MembersInvitePage';
import { SettingsPageContainer } from './SettingsPageContainer';
export const TeamPage: FC = () => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/index.ts
Tamaño: 196 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './ApiKeysPage';
export * from './user-profile-page';
export * from './TeamPage';
export * from './AccessSecurityPage';
export * from './BillingPage';
export * from './WebhookPage';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/ApiKeysPage/ApiKeysPage.tsx
Tamaño: 3744 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IconOutlineVisibility, IconOutlineVisibilityOff, IconRefresh, IconSize, Input } from '@novu/design-system';
import { Flex } from '@novu/novui/jsx';
import { IconButton, ClipboardIconButton } from '../../../components';
import { SettingsPageContainer } from '../SettingsPageContainer';
import { ConfirmRegenerationModal } from '../tabs/components/ConfirmRegenerationModal';
import { useEnvironment } from '../../../hooks/useEnvironment';
import { useApiKeysPage } from './useApiKeysPage';

const INPUT_ICON_SIZE: IconSize = '16';

export const ApiKeysPage = () => {
  const { environment } = useEnvironment();
  const {
    secretKey,
    isSecretKeyMasked,
    toggleSecretKeyVisibility,
    clipboardSecretKey,
    clipboardEnvironmentIdentifier,
    clipboardEnvironmentId,
    regenerationModalProps,
  } = useApiKeysPage();

  if (!environment) {
    return null;
  }

  const { openModal, ...modalComponentProps } = regenerationModalProps;

  return (
    <SettingsPageContainer title="API keys">
      <Flex direction={'column'} gap={'200'} maxW="37.5rem">
        <Input
          readOnly
          type={isSecretKeyMasked ? 'password' : 'text'}
          label="Secret Key"
          description="The secret key to interact with the Novu API"
          rightSection={
            // this is ugly, but we define the width of rightSection explicitly, which messes with larger elements
            <Flex gap="125" position={'absolute'} right="100">
              <IconButton
                onClick={openModal}
                tooltipProps={{ label: 'Regenerate API Key' }}
                id={'api-key-regenerate-btn'}
              >
                <IconRefresh size={INPUT_ICON_SIZE} />
              </IconButton>
              <IconButton
                onClick={toggleSecretKeyVisibility}
                tooltipProps={{ label: isSecretKeyMasked ? 'Show API Key' : 'Hide API Key' }}
                id={'api-key-toggle-visibility-btn'}
              >
                {isSecretKeyMasked ? (
                  <IconOutlineVisibility size={INPUT_ICON_SIZE} />
                ) : (
                  <IconOutlineVisibilityOff size={INPUT_ICON_SIZE} />
                )}
              </IconButton>
              <ClipboardIconButton
                isCopied={clipboardSecretKey.copied}
                handleCopy={() => clipboardSecretKey.copy(secretKey)}
                testId={'api-key-copy'}
                size={INPUT_ICON_SIZE}
              />
            </Flex>
          }
          value={secretKey}
          data-test-id="api-key"
        />
        <Input
          readOnly
          label="Application Identifier"
          description="The public key identifier that can be exposed to the client applications"
          rightSection={
            <ClipboardIconButton
              isCopied={clipboardEnvironmentIdentifier.copied}
              handleCopy={() => clipboardEnvironmentIdentifier.copy(environment.identifier)}
              testId={'application-identifier-copy'}
              size={INPUT_ICON_SIZE}
            />
          }
          value={environment.identifier}
          data-test-id="application-identifier"
        />
        <Input
          readOnly
          label="Environment ID"
          rightSection={
            <ClipboardIconButton
              isCopied={clipboardEnvironmentId.copied}
              handleCopy={() => clipboardEnvironmentId.copy(environment._id)}
              testId={'environment-id-copy'}
              size={INPUT_ICON_SIZE}
            />
          }
          value={environment._id}
          data-test-id="environment-id"
        />
      </Flex>
      <ConfirmRegenerationModal {...modalComponentProps} />
    </SettingsPageContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IconOutlineVisibility, IconOutlineVisibilityOff, IconRefresh, IconSize, Input } from '@novu/design-system';
import { Flex } from '@novu/novui/jsx';
import { IconButton, ClipboardIconButton } from '../../../components';
import { SettingsPageContainer } from '../SettingsPageContainer';
import { ConfirmRegenerationModal } from '../tabs/components/ConfirmRegenerationModal';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/ApiKeysPage/index.ts
Tamaño: 31 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './ApiKeysPage';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/ApiKeysPage/useApiKeysPage.ts
Tamaño: 1519 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { useClipboard } from '@mantine/hooks';
import { useEnvironment, useApiKeys } from '../../../hooks';
import { useRegenerateSecretKeyModal } from './useRegenerateApiKeyModal';

const CLIPBOARD_TIMEOUT_MS = 2000;

export const useApiKeysPage = () => {
  /**
   * TODO: we will eventually want to use the URL params instead of the current environment, but
   * this will come at a later time once we have the APIs to support it.
   *
   * const { env } = useParams<'env'>();
   */

  const clipboardSecretKey = useClipboard({ timeout: CLIPBOARD_TIMEOUT_MS });
  const clipboardEnvironmentIdentifier = useClipboard({ timeout: CLIPBOARD_TIMEOUT_MS });
  const clipboardEnvironmentId = useClipboard({ timeout: CLIPBOARD_TIMEOUT_MS });
  const { environment } = useEnvironment();

  const environmentIdentifier = environment?.identifier ? environment.identifier : '';
  const { data: secretKeys } = useApiKeys();

  const secretKey = secretKeys?.length ? secretKeys[0].key : '';

  const [isSecretKeyMasked, setIsSecretKeyMasked] = useState<boolean>(true);

  const toggleSecretKeyVisibility = () => setIsSecretKeyMasked((prevHidden) => !prevHidden);

  const regenerationModalProps = useRegenerateSecretKeyModal();

  return {
    secretKey,
    environmentIdentifier,
    environmentId: environment?._id,
    isSecretKeyMasked,
    toggleSecretKeyVisibility,
    clipboardSecretKey,
    clipboardEnvironmentIdentifier,
    clipboardEnvironmentId,
    regenerationModalProps,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useApiKeysPage())
 - toggleSecretKeyVisibility())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/ApiKeysPage/useRegenerateApiKeyModal.ts
Tamaño: 1017 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { IResponseError } from '@novu/shared';
import { useMutation } from '@tanstack/react-query';
import { useState } from 'react';
import { showNotification } from '@mantine/notifications';
import { useApiKeys } from '../../../hooks';

import { regenerateApiKeys } from '../../../api';

export const useRegenerateSecretKeyModal = () => {
  const [isOpen, setModalIsOpen] = useState(false);
  const { refetch: refetchSecretKeys } = useApiKeys();
  const { mutateAsync: regenerateApiKeysMutation } = useMutation<{ key: string }[], IResponseError>(regenerateApiKeys);

  async function openModal() {
    setModalIsOpen(true);
  }

  function cancelAction() {
    setModalIsOpen(false);
  }

  async function confirmAction() {
    await regenerateApiKeysMutation();
    await refetchSecretKeys();
    setModalIsOpen(false);
    showNotification({
      message: `Successfully regenerated API keys!`,
      color: 'green',
    });
  }

  return {
    isOpen,
    openModal,
    cancelAction,
    confirmAction,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - openModal()
 - cancelAction()
 - confirmAction()
Asignaciones con arrow functions encontradas (posibles funciones):
 - useRegenerateSecretKeyModal())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/WebhookPage/WebhookAdditionalInformationLink.tsx
Tamaño: 632 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IconOutlineMenuBook } from '@novu/design-system';
import { FC } from 'react';
import { css } from '@novu/novui/css';
import { Text } from './WebhookPage.shared';

export const WebhookAdditionalInformationLink: FC = () => {
  return (
    <a
      className={css({
        display: 'inline-flex',
        alignItems: 'center',
        justifyContent: 'flex-start',
        gap: '50',
      })}
      href="https://v0.x-docs.novu.co/platform/inbound-parse-webhook"
      target="_blank"
      rel="noopener noreferrer"
    >
      <IconOutlineMenuBook />
      <Text>Learn about inbound parse webhook</Text>
    </a>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IconOutlineMenuBook } from '@novu/design-system';
import { FC } from 'react';
import { css } from '@novu/novui/css';
import { Text } from './WebhookPage.shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/WebhookPage/WebhookClaimStatusDisplay.tsx
Tamaño: 2029 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import {
  IconOutlineDomainVerification,
  IconOutlineHourglassTop,
  IconOutlineWebAssetOff,
  IconRefresh,
  When,
} from '@novu/design-system';
import { FC } from 'react';
import { cva } from '@novu/novui/css';
import { HStack } from '@novu/novui/jsx';
import { SystemStyleObject } from '@novu/novui/types';
import { IconButton } from '../../../components';
import { LocalizedMessage } from '../../../types/LocalizedMessage';
import { Text } from './WebhookPage.shared';
import { type WebhookClaimStatus } from './WebhookPage.types';

const WEBHOOK_STATUS_LABEL_LOOKUP: Record<WebhookClaimStatus, LocalizedMessage> = {
  unclaimed: 'Not claimed',
  pending: 'Pending...',
  claimed: 'Claimed',
};

const WEBHOOK_STATUS_ICON_LOOKUP: Record<WebhookClaimStatus, React.ReactNode> = {
  unclaimed: <IconOutlineWebAssetOff />,
  pending: <IconOutlineHourglassTop />,
  claimed: <IconOutlineDomainVerification />,
};

interface IWebhookClaimStatusProps {
  status: WebhookClaimStatus;
  handleRefresh: () => Promise<any>;
  isLoading: boolean;
}

const iconTextRecipe = cva<{ status: Record<WebhookClaimStatus, SystemStyleObject> }>({
  base: {
    '& p, & svg': {
      color: 'typography.text.main !important',
    },
  },
  variants: {
    status: {
      claimed: {
        '& p, & svg': {
          color: 'typography.text.feedback.success !important',
        },
      },
      pending: {},
      unclaimed: {},
    },
  },
});

export const WebhookClaimStatusDisplay: FC<IWebhookClaimStatusProps> = ({ status, handleRefresh, isLoading }) => {
  return (
    <HStack gap="50">
      <Text>Status</Text>
      <HStack gap="25" className={iconTextRecipe({ status })}>
        {WEBHOOK_STATUS_ICON_LOOKUP[status]}
        <Text>{WEBHOOK_STATUS_LABEL_LOOKUP[status]}</Text>
      </HStack>
      <When truthy={status === 'pending'}>
        <IconButton id="refresh-status-button" onClick={handleRefresh} loading={isLoading} disabled={isLoading}>
          <IconRefresh />
        </IconButton>
      </When>
    </HStack>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import {
IconOutlineDomainVerification,
IconOutlineHourglassTop,
IconOutlineWebAssetOff,
IconRefresh,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/WebhookPage/WebhookPage.shared.tsx
Tamaño: 243 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { css } from '@novu/novui/css';
import { styled } from '@novu/novui/jsx';
import { text } from '@novu/novui/recipes';

export const Text = styled('p', text, { defaultProps: { className: css({ color: 'typography.text.secondary' }) } });


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { css } from '@novu/novui/css';
import { styled } from '@novu/novui/jsx';
import { text } from '@novu/novui/recipes';
export const Text = styled('p', text, { defaultProps: { className: css({ color: 'typography.text.secondary' }) } });
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/WebhookPage/WebhookPage.tsx
Tamaño: 6310 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Button, Input, inputStyles } from '@novu/design-system';
import { FC } from 'react';
import { Controller } from 'react-hook-form';

import { css, cx } from '@novu/novui/css';
import { HStack, Stack } from '@novu/novui/jsx';
import { text } from '@novu/novui/recipes';
import { Timeline as MantineTimeline } from '@mantine/core';
import { ClipboardIconButton } from '../../../components';
import { Timeline } from '../../../components/Timeline';
import { SettingsPageContainer } from '../SettingsPageContainer';
import { Text } from './WebhookPage.shared';

// Unfortunately, a wrapper around TimelineItem prevented any styles from applying, so have to use direct import for now
import { useWebhookPage } from './useWebhookPage';
import { WebhookClaimStatusDisplay } from './WebhookClaimStatusDisplay';
import { WebhookAdditionalInformationLink } from './WebhookAdditionalInformationLink';

const codeValueInputClassName = css({
  '& input': {
    border: 'none !important',
    background: 'surface.popover !important',
    color: 'typography.text.secondary !important',
    fontFamily: 'mono !important',
  },
});

// source: https://www.geeksforgeeks.org/how-to-validate-a-domain-name-using-regular-expression/
const DOMAIN_REGEX = /^(?!-)[A-Za-z0-9-]+([-.]{1}[a-z0-9]+)*\.[A-Za-z]{2,6}$/;

export const WebhookPage: FC = () => {
  const {
    claimStatus,
    handleCheckRecords,
    isMxRecordRefreshing,
    envName,
    handleDomainSubmit,
    mxRecordClipboard,
    mailServerDomain,
    domainControl,
    isUpdateDnsSettingsLoading,
    inboundParseDomain,
  } = useWebhookPage();

  return (
    <SettingsPageContainer
      title="Inbound parse webhook"
      header={
        <Stack gap="100" className={css({ maxW: '600px' })}>
          <div>
            <Text>
              A webhook that processes all incoming email for a domain or subdomain, parses the contents and
              attachments, and then POSTs multipart/form-data to a URL that you choose for each environment.
            </Text>
          </div>
          <WebhookClaimStatusDisplay
            status={claimStatus}
            handleRefresh={handleCheckRecords}
            isLoading={isMxRecordRefreshing}
          />
        </Stack>
      }
    >
      <Stack gap="200" className={css({ maxW: '960px' })}>
        <Timeline>
          <MantineTimeline.Item
            bullet={1}
            lineVariant="dashed"
            title={<label htmlFor="inbound-parse-domain-input">Specify a domain name for {envName} environment</label>}
          >
            <form onSubmit={handleDomainSubmit}>
              <Controller
                control={domainControl}
                name="inboundParseDomain"
                rules={{
                  required: 'Required - Domain name',
                  pattern: {
                    value: DOMAIN_REGEX,
                    message: 'Identifier must be a valid domain name',
                  },
                }}
                render={({ field, fieldState }) => (
                  <HStack
                    width={'100%'}
                    className={css({ height: 'components.input.height', marginTop: '50' })}
                    gap="molecules.form.input.button"
                  >
                    <Input
                      {...field}
                      id="inbound-parse-domain-input"
                      data-test-id="inbound-parse-domain-input"
                      value={field.value || ''}
                      placeholder="your.domain.com"
                      className={css({
                        flexGrow: 1,
                        // prevent layout shift when an error is shown
                        '& .mantine-TextInput-error': { position: 'absolute' },
                        '& .mantine-TextInput-wrapper': { mb: '0 !important' },
                      })}
                      error={fieldState.error?.message}
                    />
                    <Button
                      disabled={!field.value || field.value === inboundParseDomain}
                      className={css({ h: '100% !important' })}
                      loading={isUpdateDnsSettingsLoading}
                      submit
                    >
                      Save
                    </Button>
                  </HStack>
                )}
              />
            </form>
          </MantineTimeline.Item>
          <MantineTimeline.Item
            bullet={2}
            lineVariant="dashed"
            title={`Create a new MX record for ${envName} environment`}
          >
            <Text>
              Open MX Records page on your domain host's website. Create a new MX record for the {envName} environment
              for a subdomain you want to process incoming email. This hostname should be used exclusively to parse your
              incoming email, e.g. parse.example.com.
            </Text>
          </MantineTimeline.Item>
          <MantineTimeline.Item bullet={3} lineVariant="dashed" title="Assign MX record a priority">
            <Text mb="50">Assign MX record a priority of 10 and point it to the inbound mail server:</Text>
            <Input
              readOnly
              className={codeValueInputClassName}
              styles={inputStyles}
              rightSection={
                <ClipboardIconButton
                  isCopied={mxRecordClipboard.copied}
                  handleCopy={() => mxRecordClipboard.copy(mailServerDomain)}
                  testId={'mail-server-domain-copy'}
                  size={'16'}
                />
              }
              value={mailServerDomain}
              data-test-id="mail-server-domain"
            />
          </MantineTimeline.Item>
          <MantineTimeline.Item bullet={4} lineVariant="dashed" title="Enable parse and set webhook URL">
            <ul className={cx(text(), css({ color: 'typography.text.secondary', listStyleType: 'disc', pl: '100' }))}>
              <li>Edit email step in a Workflow.</li>
              <li>Enable the reply callbacks toggle.</li>
              <li>Set the Replay callback URL for the parsed data to be POSTed.</li>
            </ul>
          </MantineTimeline.Item>
        </Timeline>
        <WebhookAdditionalInformationLink />
      </Stack>
    </SettingsPageContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Button, Input, inputStyles } from '@novu/design-system';
import { FC } from 'react';
import { Controller } from 'react-hook-form';
import { css, cx } from '@novu/novui/css';
// Unfortunately, a wrapper around TimelineItem prevented any styles from applying, so have to use direct import for now
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/WebhookPage/WebhookPage.types.ts
Tamaño: 70 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export type WebhookClaimStatus = 'unclaimed' | 'pending' | 'claimed';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  type

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/WebhookPage/getWebhookClaimStatusFromEnvironment.ts
Tamaño: 559 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { IEnvironment } from '@novu/shared';
import { WebhookClaimStatus } from './WebhookPage.types';

const DEFAULT_STATUS: WebhookClaimStatus = 'unclaimed';

/** Determine the webhook claim status from the environment's DNS settings. */
export const getWebhookClaimStatusFromEnvironment = (envDns: IEnvironment['dns'] | undefined): WebhookClaimStatus => {
  if (!envDns) {
    return DEFAULT_STATUS;
  }

  if (!envDns.inboundParseDomain) {
    return 'unclaimed';
  }

  if (!envDns.mxRecordConfigured) {
    return 'pending';
  }

  return 'claimed';
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - getWebhookClaimStatusFromEnvironment(envDns: IEnvironment['dns'] | undefined): WebhookClaimStatus)
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/WebhookPage/index.ts
Tamaño: 31 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './WebhookPage';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/WebhookPage/useWebhookPage.ts
Tamaño: 3350 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useClipboard } from '@mantine/hooks';
import { successMessage, errorMessage } from '@novu/design-system';
import { IResponseError, checkIsResponseError } from '@novu/shared';
import { useMutation } from '@tanstack/react-query';
import { useState, useEffect } from 'react';
import { useForm } from 'react-hook-form';
import { MAIL_SERVER_DOMAIN } from '../../../config';
import { useEnvironment, useEffectOnce } from '../../../hooks';
import { updateDnsSettings } from '../../../api';
import { validateMxRecord } from '../../../api/inbound-parse';
import { getWebhookClaimStatusFromEnvironment } from './getWebhookClaimStatusFromEnvironment';
import { WebhookClaimStatus } from './WebhookPage.types';

export const useWebhookPage = () => {
  const mailServerDomain = `10 ${MAIL_SERVER_DOMAIN}`;

  const [isMxRecordRefreshing, setIsMxRecordRefreshing] = useState<boolean>(false);
  const mxRecordClipboard = useClipboard({ timeout: 1000 });
  const { environment, refetchEnvironments } = useEnvironment();

  const { mutateAsync: updateDnsSettingsMutation, isLoading: isUpdateDnsSettingsLoading } = useMutation<
    { dns: { mxRecordConfigured: boolean; inboundParseDomain: string } },
    IResponseError,
    { payload: { inboundParseDomain: string | undefined }; environmentId: string }
  >(async ({ payload, environmentId }) => {
    const updatedSettings = await updateDnsSettings(payload, environmentId);
    await refetchEnvironments();

    return updatedSettings;
  });

  const {
    setValue,
    handleSubmit,
    control: domainControl,
  } = useForm({
    defaultValues: {
      mxRecordConfigured: false,
      inboundParseDomain: '',
    },
    mode: 'onBlur',
    reValidateMode: 'onChange',
    shouldFocusError: true,
  });

  useEffect(() => {
    if (environment) {
      setValue('inboundParseDomain', environment.dns?.inboundParseDomain || '');
      setValue('mxRecordConfigured', environment.dns?.mxRecordConfigured || false);
    }
  }, [setValue, environment]);

  useEffectOnce(() => {
    handleCheckRecords();
  }, true);

  const claimStatus: WebhookClaimStatus = getWebhookClaimStatusFromEnvironment(environment?.dns);

  async function handleUpdateDnsSettings({ inboundParseDomain }) {
    const payload = {
      payload: { inboundParseDomain },
      environmentId: environment?._id ?? '',
    };

    await updateDnsSettingsMutation(payload);
    successMessage('Domain info updated successfully');
  }

  async function handleCheckRecords() {
    try {
      setIsMxRecordRefreshing(true);
      await new Promise((resolve) => {
        setTimeout(resolve, 2000);
      });
      const record = await validateMxRecord();

      if (environment?.dns && record.mxRecordConfigured !== environment.dns.mxRecordConfigured) {
        await refetchEnvironments();
      }
    } catch (err: unknown) {
      if (checkIsResponseError(err)) {
        errorMessage(err?.message);
      }
    } finally {
      setIsMxRecordRefreshing(false);
    }
  }

  const envName = environment?.name || '';

  return {
    claimStatus,
    handleCheckRecords,
    isMxRecordRefreshing,
    envName,
    handleDomainSubmit: handleSubmit(handleUpdateDnsSettings),
    mxRecordClipboard,
    mailServerDomain,
    domainControl,
    isUpdateDnsSettingsLoading,
    inboundParseDomain: environment?.dns?.inboundParseDomain,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - handleUpdateDnsSettings({ inboundParseDomain })
 - handleCheckRecords()
Asignaciones con arrow functions encontradas (posibles funciones):
 - useWebhookPage())
 - payload({
      payload: { inboundParseDomain },
      environmentId: environment?._id ?? '',
    };

    aw...)
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/components/InputPlain.tsx
Tamaño: 707 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { Input, IInputProps } from '@novu/design-system';

import { css, cx } from '@novu/novui/css';

const inputPlainStyles = css({
  marginBottom: '200',

  '& label': {
    margin: '0 !important',
  },
  '& input': {
    border: 'none !important',
    paddingLeft: '0 !important',
    height: '125 !important',
    minHeight: '125 !important',
    color: 'typography.text.secondary !important',
  },
});

export const InputPlain = React.forwardRef<HTMLInputElement, IInputProps & React.InputHTMLAttributes<HTMLInputElement>>(
  ({ className, ...restInputProps }, ref) => {
    return <Input ref={ref} {...restInputProps} className={cx(inputPlainStyles, className)} />;
  }
);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { Input, IInputProps } from '@novu/design-system';
import { css, cx } from '@novu/novui/css';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/components/index.ts
Tamaño: 30 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './InputPlain';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/organization/OrganizationLogo.tsx
Tamaño: 1536 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { errorMessage } from '@novu/design-system';
import { MIME_TYPE_TO_FILE_EXTENSION } from '@novu/shared';
import React, { useEffect } from 'react';
import { Controller, useForm } from 'react-hook-form';
import { ProfileImage } from '../../../components/shared';

type FormValues = {
  logoUrl: string;
};

export function OrganizationLogo({ logoUrl }: Partial<FormValues>) {
  const { control, reset } = useForm<FormValues>({
    defaultValues: {
      logoUrl,
    },
  });

  /**
   * Reset the form when the organization changes
   * Useful in the scenario when the user switches to a different organization
   */
  useEffect(() => {
    reset({ logoUrl });
  }, [logoUrl, reset]);

  async function handleUpload(event: React.ChangeEvent<HTMLInputElement>) {
    const file = event.target.files?.[0] ? event.target.files[0] : null;

    if (!file) {
      return;
    }

    const fileExtension = file.type;
    const isValidFileType = !!MIME_TYPE_TO_FILE_EXTENSION[fileExtension];
    if (!isValidFileType) {
      errorMessage(`Invalid file type: ${fileExtension}. Please upload a PNG or JPEG file.`);
    }
  }

  return (
    <form>
      <Controller
        name="logoUrl"
        control={control}
        render={({ field: { name, value } }) => (
          <ProfileImage
            name={name}
            value={value}
            onChange={handleUpload}
            // TODO: update isDisabled prop once the organization logo api is available
            isDisabled
          />
        )}
      />
    </form>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { errorMessage } from '@novu/design-system';
import { MIME_TYPE_TO_FILE_EXTENSION } from '@novu/shared';
import React, { useEffect } from 'react';
import { Controller, useForm } from 'react-hook-form';
import { ProfileImage } from '../../../components/shared';
/**
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/organization/OrganizationName.tsx
Tamaño: 2248 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Button, Input, successMessage } from '@novu/design-system';
import { useEffect } from 'react';
import { Controller, useForm } from 'react-hook-form';
import { css } from '@novu/novui/css';
import { Stack } from '@novu/novui/jsx';
import { useRenameOrganization } from '../../../api/hooks';

type FormValues = {
  name: string;
};

const INPUT_HEIGHT = '50px';

export function OrganizationName({ name }: Partial<FormValues>) {
  const { isLoading, renameOrganization } = useRenameOrganization({
    onSuccess: () => {
      successMessage('Organization name updated');
    },
  });

  const {
    control,
    formState: { isSubmitting, isDirty, isValid, errors },
    handleSubmit,
    reset,
  } = useForm<FormValues>({
    defaultValues: {
      name,
    },
  });

  /**
   * Reset the form when the organization changes
   * Useful in the scenario when the user switches to a different organization
   */
  useEffect(() => {
    reset({ name });
  }, [name, reset]);

  const onSubmit = async (data: FormValues) => {
    renameOrganization(data);
    reset(data);
  };

  return (
    <form noValidate name="organization-name-form" onSubmit={handleSubmit(onSubmit)}>
      <Stack gap={'150'} alignItems="flex-end" direction="row">
        <Controller
          name="name"
          control={control}
          rules={{
            required: 'Required - Organization name',
          }}
          render={({ field }) => (
            <Input
              {...field}
              label="Organization name"
              classNames={{
                wrapper: css({
                  w: '340px',
                }),
                input: css({
                  m: '0px !important',
                  h: 'components.input.height',
                }),
              }}
              placeholder="Organization name"
              error={errors.name?.message}
              data-test-id="organization-name-input"
            />
          )}
        />

        <Button
          submit
          loading={isSubmitting || isLoading}
          disabled={!isDirty || !isValid}
          data-test-id="organization-update-button"
          h={INPUT_HEIGHT}
        >
          Update name
        </Button>
      </Stack>
    </form>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Button, Input, successMessage } from '@novu/design-system';
import { useEffect } from 'react';
import { Controller, useForm } from 'react-hook-form';
import { css } from '@novu/novui/css';
import { Stack } from '@novu/novui/jsx';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/organization/OrganizationPage.tsx
Tamaño: 852 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Stack } from '@novu/novui/jsx';
import { useAuth } from '../../../hooks/useAuth';
import { COMPANY_LOGO_PATH } from '../../../constants/assets';
import { SettingsPageContainer } from '../SettingsPageContainer';
import { OrganizationLogo } from './OrganizationLogo';
import { OrganizationName } from './OrganizationName';

const PAGE_TITLE = 'Organization profile';

export function OrganizationPage() {
  const { currentOrganization } = useAuth();

  return (
    <SettingsPageContainer title={PAGE_TITLE}>
      <Stack gap={150} direction="row" h={'4.5rem'} align="flex-end">
        {/* TODO: Once organization logo api is implemented update this to use the org logo */}
        <OrganizationLogo logoUrl={COMPANY_LOGO_PATH} />
        <OrganizationName name={currentOrganization?.name} />
      </Stack>
    </SettingsPageContainer>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Stack } from '@novu/novui/jsx';
import { useAuth } from '../../../hooks/useAuth';
import { COMPANY_LOGO_PATH } from '../../../constants/assets';
import { SettingsPageContainer } from '../SettingsPageContainer';
import { OrganizationLogo } from './OrganizationLogo';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/organization/index.ts
Tamaño: 36 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './OrganizationPage';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/tabs/ApiKeysCard.tsx
Tamaño: 5138 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ActionIcon, Input as MantineInput } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';
import styled from '@emotion/styled';

import {
  Input,
  Tooltip,
  colors,
  Check,
  Copy,
  inputStyles,
  IconOutlineVisibility,
  IconOutlineVisibilityOff,
} from '@novu/design-system';
import { useState } from 'react';
import { useAPIKeys, useEnvironment } from '../../../hooks';
import { Regenerate } from './components/Regenerate';
import { When } from '../../../components/utils/When';

export const ApiKeysCard = () => {
  const clipboardApiKey = useClipboard({ timeout: 1000 });
  const clipboardEnvironmentIdentifier = useClipboard({ timeout: 1000 });
  const clipboardEnvironmentId = useClipboard({ timeout: 1000 });
  const { apiKey } = useAPIKeys();

  const { environment } = useEnvironment();

  const environmentIdentifier = environment?.identifier ? environment.identifier : '';
  const environmentId = environment?._id ? environment._id : '';

  const [hidden, setHidden] = useState(true);

  return (
    <>
      <ParamContainer>
        <MantineInput.Wrapper
          label="API Key"
          description="Use this API key to interact with the Novu API"
          styles={inputStyles}
        >
          <Input
            readOnly
            type={hidden ? 'password' : 'text'}
            rightSectionWidth={78}
            rightSection={
              <>
                <ActionIcon variant="transparent" onClick={() => setHidden(!hidden)}>
                  <When truthy={hidden}>
                    <IconOutlineVisibility />
                  </When>
                  <When truthy={!hidden}>
                    <IconOutlineVisibilityOff />
                  </When>
                </ActionIcon>
                <Tooltip label={clipboardApiKey.copied ? 'Copied!' : 'Copy Key'}>
                  <ActionIcon
                    data-test-id={'api-key-copy'}
                    variant="transparent"
                    onClick={() => clipboardApiKey.copy(apiKey)}
                  >
                    {clipboardApiKey.copied ? (
                      <Check
                        style={{
                          color: colors.B60,
                        }}
                      />
                    ) : (
                      <Copy
                        style={{
                          color: colors.B60,
                        }}
                      />
                    )}
                  </ActionIcon>
                </Tooltip>
              </>
            }
            value={apiKey}
            data-test-id="api-key-container"
          />
        </MantineInput.Wrapper>
        <Regenerate />
      </ParamContainer>
      <ParamContainer>
        <MantineInput.Wrapper
          label="Application Identifier"
          description="A public key identifier that can be exposed to the client applications"
          styles={inputStyles}
        >
          <Input
            readOnly
            rightSection={
              <Tooltip label={clipboardEnvironmentIdentifier.copied ? 'Copied!' : 'Copy Key'}>
                <ActionIcon
                  variant="transparent"
                  data-test-id={'application-identifier-copy'}
                  onClick={() => clipboardEnvironmentIdentifier.copy(environmentIdentifier)}
                >
                  {clipboardEnvironmentIdentifier.copied ? (
                    <Check
                      style={{
                        color: colors.B60,
                      }}
                    />
                  ) : (
                    <Copy
                      style={{
                        color: colors.B60,
                      }}
                    />
                  )}
                </ActionIcon>
              </Tooltip>
            }
            value={environmentIdentifier}
            data-test-id="api-identifier"
          />
        </MantineInput.Wrapper>
      </ParamContainer>
      <ParamContainer>
        <MantineInput.Wrapper label="Environment ID" styles={inputStyles}>
          <Input
            readOnly
            rightSection={
              <Tooltip label={clipboardEnvironmentId.copied ? 'Copied!' : 'Copy Key'}>
                <ActionIcon
                  variant="transparent"
                  data-test-id={'environment-id-copy'}
                  onClick={() => clipboardEnvironmentId.copy(environmentId)}
                >
                  {clipboardEnvironmentId.copied ? (
                    <Check
                      style={{
                        color: colors.B60,
                      }}
                    />
                  ) : (
                    <Copy
                      style={{
                        color: colors.B60,
                      }}
                    />
                  )}
                </ActionIcon>
              </Tooltip>
            }
            value={environmentId}
            data-test-id="environment-id"
          />
        </MantineInput.Wrapper>
      </ParamContainer>
    </>
  );
};

const ParamContainer = styled.div`
  max-width: 600px;
  padding-bottom: 32px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ActionIcon, Input as MantineInput } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';
import styled from '@emotion/styled';
import {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/tabs/EmailSettings.tsx
Tamaño: 5806 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { ActionIcon, Center, Input as MantineInput } from '@mantine/core';
import { Control, Controller, useForm } from 'react-hook-form';
import { useClipboard } from '@mantine/hooks';
import styled from '@emotion/styled';
import { showNotification } from '@mantine/notifications';
import {
  colors,
  Text,
  Input,
  Tooltip,
  Button,
  Check,
  CheckCircle,
  Copy,
  WarningIcon,
  inputStyles,
} from '@novu/design-system';

import Card from '../../../components/layout/components/Card';
import { useEffectOnce, useEnvironment } from '../../../hooks';
import { updateDnsSettings } from '../../../api/environment';
import { validateMxRecord } from '../../../api/inbound-parse';
import { MAIL_SERVER_DOMAIN } from '../../../config';

export const EmailSettings = () => {
  const mailServerDomain = `10 ${MAIL_SERVER_DOMAIN}`;

  const clipboardEnvironmentIdentifier = useClipboard({ timeout: 1000 });
  const { environment, refetchEnvironments } = useEnvironment();

  const { setValue, handleSubmit, control } = useForm({
    defaultValues: {
      mxRecordConfigured: false,
      inboundParseDomain: '',
    },
  });

  useEffect(() => {
    if (environment) {
      setValue('inboundParseDomain', environment.dns?.inboundParseDomain || '');
      setValue('mxRecordConfigured', environment.dns?.mxRecordConfigured || false);
    }
  }, [setValue, environment]);

  useEffectOnce(() => {
    handleCheckRecords();
  }, true);

  async function handleUpdateDnsSettings({ inboundParseDomain }) {
    const payload = {
      inboundParseDomain,
    };

    await updateDnsSettings(payload, environment?._id ?? '');

    showNotification({
      message: 'Domain info updated successfully',
      color: 'green',
    });
  }

  async function handleCheckRecords() {
    const record = await validateMxRecord();

    if (environment?.dns && record.mxRecordConfigured !== environment.dns.mxRecordConfigured) {
      await refetchEnvironments();
    }
  }

  return (
    <Container>
      <Card title="Configure Inbound Webhook">
        <StyledButton variant={'outline'} onClick={handleCheckRecords}>
          Check my record
        </StyledButton>
        <form noValidate onSubmit={handleSubmit(handleUpdateDnsSettings)}>
          <MantineInput.Wrapper
            label={<Label control={control} />}
            description={<DescriptionText />}
            styles={inputStyles}
          >
            <Input
              readOnly
              rightSection={
                <Tooltip label={clipboardEnvironmentIdentifier.copied ? 'Copied!' : 'Copy Key'}>
                  <ActionIcon
                    variant="transparent"
                    data-test-id={'mail-server-domiain-copy'}
                    onClick={() => clipboardEnvironmentIdentifier.copy(mailServerDomain)}
                  >
                    {clipboardEnvironmentIdentifier.copied ? (
                      <Check
                        style={{
                          color: colors.B60,
                        }}
                      />
                    ) : (
                      <Copy
                        style={{
                          color: colors.B60,
                        }}
                      />
                    )}
                  </ActionIcon>
                </Tooltip>
              }
              value={mailServerDomain}
              data-test-id="mail-server-identifier"
            />
          </MantineInput.Wrapper>
          <Controller
            control={control}
            name="inboundParseDomain"
            render={({ field }) => (
              <Input
                {...field}
                mb={30}
                data-test-id="inbound-parse-domain"
                value={field.value || ''}
                label={'Allowed Domain'}
                description={
                  'To ensure proper delivery of correspondence, we request that you provide us with your domain so ' +
                  'that it can be added to our allowed domains list'
                }
                placeholder="Domain goes here..."
              />
            )}
          />
          <Button submit mb={20} mt={10} data-test-id="submit-hmac-settings">
            Update
          </Button>
        </form>
      </Card>
    </Container>
  );
};

function DescriptionText() {
  return (
    <Text>
      To configure email routing for your domain, set up an MX record with your domain host with a priority of 10 to
      direct mail to Novu`s inbound mail server. This ensures that subscriber's email will be properly directed to the
      correct server.
    </Text>
  );
}

function Label({ control }: { control: Control<{ mxRecordConfigured: boolean; inboundParseDomain: string }, any> }) {
  return (
    <div style={{ display: 'flex' }}>
      <div>MX Record</div>
      <Controller
        control={control}
        name="mxRecordConfigured"
        render={({ field }) => {
          return (
            <Center ml={5}>
              {field.value ? <CheckCircle color={colors.success} /> : <WarningIcon />}

              <Text ml={7} color={field.value ? colors.success : colors.warning}>
                {field.value ? 'Configured' : 'Not Configured'}
              </Text>
            </Center>
          );
        }}
      />
    </div>
  );
}

const Container = styled.div`
  max-width: 600px;
  padding-bottom: 32px;
`;

const StyledButton = styled(Button)`
  background-image: ${({ theme }) =>
    theme.colorScheme === 'dark'
      ? `linear-gradient(0deg, ${colors.B17} 0%, ${colors.B17} 100%),linear-gradient(99deg,#DD2476 0% 0%, #FF512F 100% 100%)`
      : `linear-gradient(0deg, ${colors.B98} 0%, ${colors.B98} 100%),linear-gradient(99deg,#DD2476 0% 0%, #FF512F 100% 100%)`};
  margin-bottom: 10px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect } from 'react';
import { ActionIcon, Center, Input as MantineInput } from '@mantine/core';
import { Control, Controller, useForm } from 'react-hook-form';
import { useClipboard } from '@mantine/hooks';
import styled from '@emotion/styled';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/tabs/index.ts
Tamaño: 31 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './ApiKeysCard';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/tabs/components/ConfirmRegenerationModal.tsx
Tamaño: 1910 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, Modal, useMantineTheme } from '@mantine/core';
import { Button, colors, shadows, Title, Text } from '@novu/design-system';
import { useEnvironment } from '../../../../hooks';

export function ConfirmRegenerationModal({
  isOpen,
  cancelAction,
  confirmAction,
}: {
  isOpen: boolean;
  cancelAction: () => void;
  confirmAction: () => void;
}) {
  const theme = useMantineTheme();
  const { environment } = useEnvironment();

  return (
    <>
      <Modal
        opened={isOpen}
        overlayColor={theme.colorScheme === 'dark' ? colors.BGDark : colors.BGLight}
        overlayOpacity={0.7}
        styles={{
          modal: {
            backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.white,
          },
          body: {
            paddingTop: '5px',
          },
          inner: {
            paddingTop: '180px',
          },
        }}
        title={<Title size={2}>Caution</Title>}
        sx={{ backdropFilter: 'blur(10px)' }}
        shadow={theme.colorScheme === 'dark' ? shadows.dark : shadows.medium}
        radius="md"
        size="lg"
        data-test-id="regenerate-api-key-modal"
        onClose={() => {
          cancelAction();
        }}
      >
        <div>
          <Text>
            You are about to regenerate the API key of the {environment?.name} environment. This action is irreversible
            and will render inoperative the access to the API of all your applications that use the current key. Proceed
            anyway?
          </Text>
          <Group position="right">
            <Button variant="outline" size="md" mt={30} onClick={() => cancelAction()}>
              No
            </Button>
            <Button mt={30} size="md" onClick={() => confirmAction()} data-test-id="regenerate-api-key-modal-button">
              Yes
            </Button>
          </Group>
        </div>
      </Modal>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, Modal, useMantineTheme } from '@mantine/core';
import { Button, colors, shadows, Title, Text } from '@novu/design-system';
import { useEnvironment } from '../../../../hooks';
export function ConfirmRegenerationModal({
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/tabs/components/Prism.tsx
Tamaño: 1868 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { colors } from '@novu/design-system';
import { Prism as MantinePrism } from '@mantine/prism';
import { useClipboard } from '@mantine/hooks';

export function Prism({ code }: { code: string }) {
  return (
    <MantinePrism
      trim={false}
      styles={(theme) => ({
        scrollArea: {
          border: ` 1px solid ${theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[5]}`,
          borderRadius: '7px',
        },
        code: {
          fontWeight: 400,
          color: `${colors.B60} !important`,
          backgroundColor: 'transparent !important',
        },
      })}
      language="javascript"
      data-test-id="embed-code-snippet"
    >
      {code}
    </MantinePrism>
  );
}

type Props = {
  code: string;
  index?: number;
  onCopy?: (index: number) => void;
  language?: string;
};

export function PrismOnCopy({ index, code, onCopy, language }: Props) {
  const clipboardEnvironmentIdentifier = useClipboard({ timeout: 1000 });

  function handleOnClick(copyIndex: number | undefined, copyCode: string) {
    clipboardEnvironmentIdentifier.copy(copyCode);

    if (onCopy && copyIndex != null) {
      onCopy(copyIndex);
    }
  }

  return (
    <div
      onClick={() => {
        handleOnClick(index, code);
      }}
    >
      <MantinePrism
        trim={false}
        styles={(theme) => ({
          scrollArea: {
            border: ` 1px solid ${theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[5]}`,
            borderRadius: '7px',
          },
          code: {
            fontWeight: 400,
            color: `${colors.B60} !important`,
            backgroundColor: 'transparent !important',
          },
        })}
        language={(language as any) || 'javascript'}
        data-test-id="embed-code-snippet"
      >
        {code}
      </MantinePrism>
    </div>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { colors } from '@novu/design-system';
import { Prism as MantinePrism } from '@mantine/prism';
import { useClipboard } from '@mantine/hooks';
export function Prism({ code }: { code: string }) {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/tabs/components/Regenerate.tsx
Tamaño: 729 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import { Button } from '@novu/design-system';

import { useRegenerateSecretKeyModal } from '../../ApiKeysPage/useRegenerateApiKeyModal';
import { ConfirmRegenerationModal } from './ConfirmRegenerationModal';

export const Regenerate = () => {
  const { isOpen, cancelAction, confirmAction, openModal } = useRegenerateSecretKeyModal();

  return (
    <>
      <Group position="right">
        <Button mb={20} mt={10} data-test-id="show-regenerate-api-key-modal" onClick={openModal} variant={'outline'}>
          Regenerate API Key
        </Button>
      </Group>
      <ConfirmRegenerationModal isOpen={isOpen} cancelAction={cancelAction} confirmAction={confirmAction} />
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import { Button } from '@novu/design-system';
import { useRegenerateSecretKeyModal } from '../../ApiKeysPage/useRegenerateApiKeyModal';
import { ConfirmRegenerationModal } from './ConfirmRegenerationModal';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/UserProfileFlow.const.ts
Tamaño: 612 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export type UserProfileRootFlow = 'SET_PASSWORD' | 'UPDATE_PASSWORD';

export interface IUserProfileBaseFlow {
  rootFlow: UserProfileRootFlow;
  subFlow?: string;
}

export type UserProfileSetPasswordSubFlow = 'EMAIL_VERIFICATION' | 'CREATE_PASSWORD';
interface IUserProfileSetPasswordFlow extends IUserProfileBaseFlow {
  rootFlow: 'SET_PASSWORD';
  subFlow: UserProfileSetPasswordSubFlow;
}

interface IUserProfileUpdatePasswordFlow extends IUserProfileBaseFlow {
  rootFlow: 'UPDATE_PASSWORD';
  subFlow?: never;
}

export type UserProfileFlow = IUserProfileSetPasswordFlow | IUserProfileUpdatePasswordFlow;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  type
- export  interface
- export  type
- export  type

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/UserProfileForm.tsx
Tamaño: 4668 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ChangeEventHandler, FC } from 'react';
import { SubmitHandler, useController, useForm, ValidationRule } from 'react-hook-form';
import capitalize from 'lodash.capitalize';
import { Button, errorMessage, Input, successMessage } from '@novu/design-system';
import { IUserEntity, UploadTypesEnum } from '@novu/shared';

import { css } from '@novu/novui/css';
import { ProfileImage } from '../../../components/shared';
import { useUpdateUserProfile } from '../../../api/hooks';
import { useUploadToStorage } from '../../../api/hooks/useUploadToStorage';

interface IUserProfileForm {
  firstName: string;
  lastName: string;
  profilePicture?: string;
}

interface IUserProfileFormProps {
  currentUser?: IUserEntity | null;
}

const formInputStyles = css({
  minWidth: '10rem',
  '& label': { marginTop: '0 !important' },
  /**
   * show the error message absolutely positioned below the input, otherwise it will push the input up
   */
  '& .mantine-TextInput-error': { position: 'absolute', marginTop: '50' },
  '& input, .mantine-TextInput-wrapper': { marginBottom: '0 !important', textOverflow: 'ellipsis' },
});

const FIRST_NAME_LABEL = 'First name';
const LAST_NAME_LABEL = 'Last name';
const MIN_LENGTH_RULE: ValidationRule<number> = { value: 2, message: 'Should be longer than 2 characters' };

const makeFormData = (data?: IUserEntity | null): IUserProfileForm => ({
  firstName: capitalize(data?.firstName ?? ''),
  lastName: capitalize(data?.lastName ?? ''),
  profilePicture: data?.profilePicture ?? '',
});

export const UserProfileForm: FC<IUserProfileFormProps> = ({ currentUser }) => {
  const {
    control,
    register,
    reset,
    handleSubmit,
    setValue,
    formState: { isDirty, errors },
  } = useForm<IUserProfileForm>({
    mode: 'onSubmit',
    defaultValues: makeFormData(currentUser),
  });
  const { field: profilePictureField } = useController({ name: 'profilePicture', control });

  const { updateUserProfile, isLoading: isUpdatingUserProfile } = useUpdateUserProfile({
    onSuccess: (newUserData) => {
      successMessage('Profile updated successfully');
      reset(makeFormData(newUserData));
    },
    onError: (e) => {
      errorMessage(`Failed to update profile: ${e.message}`);
    },
  });

  const { uploadToStorage, isLoading: isUploadingImage } = useUploadToStorage({
    onError: (e) => {
      errorMessage(`Failed to upload profile image: ${e.message}`);
    },
  });

  const uploadProfileImage = async (objectUrl: string): Promise<string> => {
    const blob = await fetch(objectUrl).then((el) => el.blob());
    const path = await uploadToStorage({
      file: new File([blob], 'profile', { type: blob.type }),
      type: UploadTypesEnum.USER_PROFILE,
    });
    URL.revokeObjectURL(objectUrl);

    return path;
  };

  const onUpdateUserProfileHandler: SubmitHandler<IUserProfileForm> = async (data) => {
    const objectUrl = data.profilePicture;
    let path: string | undefined;
    if (objectUrl && objectUrl.startsWith('blob:')) {
      path = await uploadProfileImage(objectUrl);
    }

    updateUserProfile({ ...data, profilePicture: path });
  };

  const onUpdateUserProfileImageHandler: ChangeEventHandler<HTMLInputElement> = (event) => {
    const {
      target: { files },
    } = event;
    if (!files || !files[0]) {
      return;
    }

    const path = URL.createObjectURL(files[0]);
    setValue('profilePicture', path, { shouldDirty: true });
  };

  const isLoading = isUpdatingUserProfile || isUploadingImage;

  return (
    <form
      noValidate
      onSubmit={handleSubmit(onUpdateUserProfileHandler)}
      // TODO: update with proper token value for marginBottom: 250
      className={css({ display: 'flex', alignItems: 'flex-end', gap: '150', marginBottom: '2.5rem' })}
    >
      <ProfileImage {...profilePictureField} onChange={onUpdateUserProfileImageHandler} isDisabled={isLoading} />
      <Input
        className={formInputStyles}
        {...register('firstName', {
          required: `${FIRST_NAME_LABEL} is required`,
          minLength: MIN_LENGTH_RULE,
        })}
        error={errors.firstName?.message}
        label={FIRST_NAME_LABEL}
      />
      <Input
        className={formInputStyles}
        {...register('lastName', {
          required: `${LAST_NAME_LABEL} is required`,
          minLength: MIN_LENGTH_RULE,
        })}
        error={errors.lastName?.message}
        label={LAST_NAME_LABEL}
      />
      <Button
        size="lg"
        type="submit"
        className={css({ alignSelf: 'flex-end' })}
        disabled={!isDirty || isLoading}
        loading={isLoading}
      >
        Update
      </Button>
    </form>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ChangeEventHandler, FC } from 'react';
import { SubmitHandler, useController, useForm, ValidationRule } from 'react-hook-form';
import capitalize from 'lodash.capitalize';
import { Button, errorMessage, Input, successMessage } from '@novu/design-system';
import { IUserEntity, UploadTypesEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/UserProfilePage.tsx
Tamaño: 2037 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FC } from 'react';
import { css } from '@novu/novui/css';
import { styled } from '@novu/novui/jsx';
import { title } from '@novu/novui/recipes';
import { useAuth } from '../../../hooks/useAuth';
import { InputPlain } from '../components';
import { SettingsPageContainer } from '../SettingsPageContainer';
import { UserProfileForm } from './UserProfileForm';
import { UserProfileSidebarContextProvider } from './UserProfileSidebarContext';
import { UserProfileSidebarControl } from './UserProfileSidebarControl';

const Title = styled('h2', title);

const inputStyles = css({ minWidth: '18.75rem' });

export const UserProfilePage: FC = () => {
  const { currentUser } = useAuth();

  const email = currentUser?.email ?? '';

  return (
    <SettingsPageContainer title="User profile">
      <div className={css({ width: 'fit-content' })}>
        <UserProfileForm currentUser={currentUser} />
        <Title mb="100" variant="section">
          Profile security
        </Title>
        <section>
          <InputPlain
            className={inputStyles}
            type="text"
            label="Email address"
            value={email}
            autoCorrect="none"
            aria-autocomplete="none"
            autoComplete="none"
            readOnly
          />
          <div className={css({ display: 'flex', justifyContent: 'space-between' })}>
            <InputPlain
              className={inputStyles}
              type={currentUser?.hasPassword ? 'password' : 'text'}
              label="Password"
              value={currentUser?.hasPassword ? '•••••••••••••••' : 'Set a password to enhance security'}
              autoCorrect="none"
              aria-autocomplete="none"
              autoComplete="none"
              readOnly
            />
            <UserProfileSidebarContextProvider>
              <UserProfileSidebarControl />
            </UserProfileSidebarContextProvider>
          </div>
        </section>
      </div>
    </SettingsPageContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FC } from 'react';
import { css } from '@novu/novui/css';
import { styled } from '@novu/novui/jsx';
import { title } from '@novu/novui/recipes';
import { useAuth } from '../../../hooks/useAuth';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/UserProfilePasswordEmailVerificationSection.tsx
Tamaño: 2213 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Button, IconOutlineForwardToInbox, IconOutlineMarkunreadMailbox } from '@novu/design-system';
import { css, cx } from '@novu/novui/css';
import { HStack, Stack } from '@novu/novui/jsx';
import { text } from '@novu/novui/recipes';
import { IUserProfilePasswordEmailVerificationProps } from './UserProfilePasswordSidebar.shared';

export const UserProfilePasswordEmailVerificationSection: React.FC<IUserProfilePasswordEmailVerificationProps> = ({
  email,
  sendVerificationEmail,
  countdownTimerSeconds,
}) => {
  const isButtonDisabled = countdownTimerSeconds > 0;

  return (
    <Stack direction={'column'} gap={'200'} mt="150">
      <HStack gap="100">
        {/* TODO: this is a different Icon from designs since the one from React Icons doesn't match the name */}
        <IconOutlineMarkunreadMailbox size="40" className={css({ flexShrink: 0 })} />
        <p className={cx(text(), css({ color: 'typography.text.secondary' }))}>
          We have just sent a verification link to your email address{' '}
          <span className={text({ variant: 'main' })}>{email}</span>.<br />
          Please verify your email address to proceed with setting a password.
        </p>
      </HStack>
      <HStack gap={'200'} justifyContent="flex-end">
        <span className={text()}>
          Didn't get the link? Resend in{' '}
          <strong
            className={cx(
              text({ variant: 'strong' }),
              // prevent layout from shifting when timer changes from 2 digits to 1 digit.
              css({ minWidth: '2ch', display: 'inline-block', textAlign: 'center' })
            )}
          >
            {countdownTimerSeconds}
          </strong>{' '}
          seconds
        </span>
        <Button
          onClick={sendVerificationEmail}
          disabled={isButtonDisabled}
          icon={
            <IconOutlineForwardToInbox
              aria-disabled={isButtonDisabled}
              className={css({
                fill: 'typography.text.main',
                '&[aria-disabled="true"]': { fill: 'typography.text.tertiary' },
              })}
            />
          }
        >
          Resend link
        </Button>
      </HStack>
    </Stack>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Button, IconOutlineForwardToInbox, IconOutlineMarkunreadMailbox } from '@novu/design-system';
import { css, cx } from '@novu/novui/css';
import { HStack, Stack } from '@novu/novui/jsx';
import { text } from '@novu/novui/recipes';
import { IUserProfilePasswordEmailVerificationProps } from './UserProfilePasswordSidebar.shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/UserProfilePasswordForm.tsx
Tamaño: 3828 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Button, errorMessage, IconOutlineLockPerson, PasswordInput, successMessage } from '@novu/design-system';
import { checkIsResponseError, IResponseError } from '@novu/shared';
import { captureException } from '@sentry/react';
import { useMutation } from '@tanstack/react-query';
import { useForm } from 'react-hook-form';
import { css } from '@novu/novui/css';
import { Stack } from '@novu/novui/jsx';
import { useAuth } from '../../../hooks/useAuth';
import { api } from '../../../api';
import { PasswordRequirementPopover } from '../../auth/components/PasswordRequirementPopover';
import { SHARED_PASSWORD_INPUT_REGISTER_OPTIONS } from './UserProfilePasswordSidebar.shared';

type UserProfilePasswordFormProps = {
  token: string;
  onSuccess?: () => void;
};

export const UserProfilePasswordForm: React.FC<UserProfilePasswordFormProps> = ({ token, onSuccess }) => {
  const { login } = useAuth();

  const { isLoading, mutateAsync, error, isError } = useMutation<
    { token: string },
    IResponseError,
    {
      password: string;
      token: string;
    }
  >((data) => api.post(`/v1/auth/reset`, data));

  const {
    register,
    handleSubmit,
    control,
    formState: { errors, isValid },
    setError,
  } = useForm({
    defaultValues: {
      password: '',
      passwordRepeat: '',
    },
  });

  const onSubmitPasswords = async (data: { password: string; passwordRepeat: string }) => {
    if (data.password !== data.passwordRepeat) {
      setError('passwordRepeat', { message: 'Passwords do not match' });

      return;
    }

    const itemData = {
      password: data.password,
      token,
    };

    try {
      const response = await mutateAsync(itemData);

      login(response.token);

      successMessage('Password was set successfully');
      onSuccess?.();
    } catch (err: unknown) {
      let errMessage = 'Error while setting password';
      if (checkIsResponseError(err)) {
        if (err.statusCode !== 400) {
          captureException(err);
        }

        errMessage = `${errMessage}: ${err.message}`;
      }

      errorMessage(errMessage);
    }

    return true;
  };

  const isSubmitDisabled = !isValid;

  return (
    <form noValidate name="set-password-form" id="set-password-form" onSubmit={handleSubmit(onSubmitPasswords)}>
      <Stack direction={'column'} gap={'200'}>
        <PasswordRequirementPopover control={control}>
          <PasswordInput
            error={errors.password?.message}
            {...register('password', {
              ...SHARED_PASSWORD_INPUT_REGISTER_OPTIONS,
            })}
            required
            label="Password"
            placeholder="Type your new password"
            data-test-id="password"
          />
        </PasswordRequirementPopover>
        <PasswordInput
          error={errors.passwordRepeat?.message}
          {...register('passwordRepeat', {
            ...SHARED_PASSWORD_INPUT_REGISTER_OPTIONS,
          })}
          required
          label="Repeat Password"
          placeholder="Type it again"
          data-test-id="password-repeat"
        />
        <Button
          icon={<IconOutlineLockPerson color="typography.text.main" />}
          inherit
          loading={isLoading}
          submit
          disabled={isSubmitDisabled}
          data-test-id="submit-btn"
          className={css({ alignSelf: 'flex-end', width: 'fit-content !important' })}
        >
          Set Password
        </Button>
      </Stack>
      {isError && (
        <p
          data-test-id="error-alert-banner"
          className={css({
            mt: '125',
            textAlign: 'right',
            color: 'typography.text.feedback.alert',
            fontWeight: 'strong',
          })}
        >
          {' '}
          {error?.message}
        </p>
      )}
    </form>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Button, errorMessage, IconOutlineLockPerson, PasswordInput, successMessage } from '@novu/design-system';
import { checkIsResponseError, IResponseError } from '@novu/shared';
import { captureException } from '@sentry/react';
import { useMutation } from '@tanstack/react-query';
import { useForm } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/UserProfilePasswordSidebar.shared.ts
Tamaño: 1391 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { type Sidebar } from '@novu/design-system';
import { passwordConstraints } from '@novu/shared';
import { type ComponentProps } from 'react';
import { type RegisterOptions } from 'react-hook-form';
import { UserProfileFlow } from './UserProfileFlow.const';

export interface IUserProfilePasswordEmailVerificationProps {
  email: string;
  sendVerificationEmail: () => Promise<void>;
  countdownTimerSeconds: number;
}
export interface IUserProfilePasswordSidebarProps
  extends Pick<ComponentProps<typeof Sidebar>, 'isOpened' | 'onClose'>,
    Pick<IUserProfilePasswordEmailVerificationProps, 'email'> {
  setIsOpened?: (prevIsOpened: boolean) => void;
  currentFlow: UserProfileFlow;
}

export const SHARED_PASSWORD_INPUT_REGISTER_OPTIONS: RegisterOptions = {
  required: 'Please input your password',
  minLength: { value: passwordConstraints.minLength, message: `Minimum ${passwordConstraints.minLength} characters` },
  maxLength: {
    value: passwordConstraints.maxLength,
    message: `Maximum ${passwordConstraints.maxLength} characters`,
  },
  pattern: {
    value: passwordConstraints.pattern,
    message:
      `The password must contain minimum ${passwordConstraints.minLength}` +
      ` and maximum ${passwordConstraints.maxLength} characters, at least one uppercase` +
      ` letter, one lowercase letter, one number and one special character #?!@$%^&*()-`,
  },
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  interface
- export  interface
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/UserProfilePasswordSidebar.tsx
Tamaño: 2819 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { IconOutlineLockPerson, SidebarFormless } from '@novu/design-system';
import { useContext, useEffect, useMemo } from 'react';
import { HStack, styled } from '@novu/novui/jsx';
import { title } from '@novu/novui/recipes';
import { UserProfilePasswordEmailVerificationSection } from './UserProfilePasswordEmailVerificationSection';
import { UserProfilePasswordForm } from './UserProfilePasswordForm';
import { IUserProfilePasswordSidebarProps } from './UserProfilePasswordSidebar.shared';
import { UserProfileSidebarContext } from './UserProfileSidebarContext';
import { UserProfileUpdatePasswordForm } from './UserProfileUpdatePasswordForm';
import { useUserProfileSearchParams } from './useUserProfileSearchParams';

// TODO: replace with design-system components in future iteration
const Title = styled('h2', title);

export const UserProfilePasswordSidebar: React.FC<IUserProfilePasswordSidebarProps> = ({
  onClose,
  isOpened,
  email,
  currentFlow,
}) => {
  const { countdownTimerSeconds, sendVerificationEmail, stopTimer } = useContext(UserProfileSidebarContext);
  const { token, clearTokenParam } = useUserProfileSearchParams();

  // ensure the timer is not running if we are in an unrelated flow
  useEffect(() => {
    if (currentFlow.rootFlow !== 'SET_PASSWORD' || currentFlow.subFlow !== 'EMAIL_VERIFICATION') {
      stopTimer();
    }
  }, [currentFlow.rootFlow, currentFlow.subFlow, stopTimer]);

  const sidebarContent = useMemo(() => {
    switch (currentFlow.rootFlow) {
      case 'UPDATE_PASSWORD':
        return <UserProfileUpdatePasswordForm />;
      case 'SET_PASSWORD':
      default:
        switch (currentFlow.subFlow) {
          case 'CREATE_PASSWORD':
            // token is already validated at this point
            return token ? <UserProfilePasswordForm token={token} onSuccess={clearTokenParam} /> : null;
          case 'EMAIL_VERIFICATION':
          default:
            return (
              <UserProfilePasswordEmailVerificationSection
                email={email}
                countdownTimerSeconds={countdownTimerSeconds}
                sendVerificationEmail={sendVerificationEmail}
              />
            );
        }
    }
  }, [
    currentFlow.rootFlow,
    currentFlow.subFlow,
    token,
    email,
    countdownTimerSeconds,
    sendVerificationEmail,
    clearTokenParam,
  ]);

  const sidebarTitle = `${currentFlow.rootFlow === 'SET_PASSWORD' ? 'Set' : 'Update'} password`;

  return (
    <SidebarFormless
      // TODO: Move this into CSS
      navigationWidth={272}
      isOpened={isOpened}
      onClose={onClose}
      customHeader={
        <HStack>
          <IconOutlineLockPerson />
          <Title variant={'section'}>{sidebarTitle}</Title>
        </HStack>
      }
    >
      {sidebarContent}
    </SidebarFormless>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { IconOutlineLockPerson, SidebarFormless } from '@novu/design-system';
import { useContext, useEffect, useMemo } from 'react';
import { HStack, styled } from '@novu/novui/jsx';
import { title } from '@novu/novui/recipes';
import { UserProfilePasswordEmailVerificationSection } from './UserProfilePasswordEmailVerificationSection';
// TODO: replace with design-system components in future iteration
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/UserProfilePasswordSidebarEnum.ts
Tamaño: 198 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export enum UserProfileSidebarTypeEnum {
  PASSWORD = 'password',
}

export const USER_PROFILE_SIDEBAR_TYPE_SET = new Set<UserProfileSidebarTypeEnum>(
  Object.values(UserProfileSidebarTypeEnum)
);


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  enum
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/UserProfileSidebarContext.tsx
Tamaño: 727 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { createContext, PropsWithChildren } from 'react';
import { useUserProfileSetPassword } from './useUserProfileSetPassword';

export type IUserProfileSidebarContext = ReturnType<typeof useUserProfileSetPassword>;

const DEFAULT_CONTEXT: IUserProfileSidebarContext = {
  countdownTimerSeconds: 0,
  stopTimer: () => {},
  sendVerificationEmail: async () => {},
};

export const UserProfileSidebarContext = createContext<IUserProfileSidebarContext>(DEFAULT_CONTEXT);

export const UserProfileSidebarContextProvider: React.FC<PropsWithChildren> = ({ children }) => {
  const value = useUserProfileSetPassword();

  return <UserProfileSidebarContext.Provider value={value}>{children}</UserProfileSidebarContext.Provider>;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { createContext, PropsWithChildren } from 'react';
import { useUserProfileSetPassword } from './useUserProfileSetPassword';
export type IUserProfileSidebarContext = ReturnType<typeof useUserProfileSetPassword>;
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/UserProfileSidebarControl.tsx
Tamaño: 2029 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Button, IconOutlineLockPerson } from '@novu/design-system';
import { FC, MouseEventHandler, useContext, useMemo } from 'react';
import { css } from '@novu/novui/css';
import { UserProfileSidebarContext } from './UserProfileSidebarContext';
import { UserProfilePasswordSidebar } from './UserProfilePasswordSidebar';
import { useUserProfileSearchParams } from './useUserProfileSearchParams';
import { UserProfileSidebarTypeEnum } from './UserProfilePasswordSidebarEnum';
import { useAuth } from '../../../hooks/useAuth';
import { selectUserProfileFlow } from './selectUserProfileFlow';

export const UserProfileSidebarControl: FC = () => {
  const { currentUser } = useAuth();
  const email = currentUser?.email ?? '';
  const hasPassword = currentUser?.hasPassword ?? false;

  const { sendVerificationEmail } = useContext(UserProfileSidebarContext);
  const { sidebarType, updateSidebarParam, token } = useUserProfileSearchParams();

  const handleSetPasswordClick: MouseEventHandler<HTMLButtonElement> = async () => {
    // don't do anything a sidebar is already open (signified by non-null sidebarType).
    if (sidebarType) {
      return;
    }

    // open the sidebar
    updateSidebarParam(UserProfileSidebarTypeEnum.PASSWORD);

    // only send verification for users who haven't previously set a password
    if (!hasPassword) {
      sendVerificationEmail();
    }
  };

  const currentFlow = useMemo(() => selectUserProfileFlow({ token, hasPassword }), [token, hasPassword]);

  const closeSidebar = () => {
    updateSidebarParam(null);
  };

  return (
    <>
      <Button variant="outline" className={css({ color: '' })} onClick={handleSetPasswordClick}>
        <IconOutlineLockPerson className={css({ color: 'button.text.outline !important' })} />
        {hasPassword ? 'Update password' : 'Set password'}
      </Button>
      <UserProfilePasswordSidebar
        isOpened={!!sidebarType}
        onClose={closeSidebar}
        currentFlow={currentFlow}
        email={email}
      />
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Button, IconOutlineLockPerson } from '@novu/design-system';
import { FC, MouseEventHandler, useContext, useMemo } from 'react';
import { css } from '@novu/novui/css';
import { UserProfileSidebarContext } from './UserProfileSidebarContext';
import { UserProfilePasswordSidebar } from './UserProfilePasswordSidebar';
// don't do anything a sidebar is already open (signified by non-null sidebarType).
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/UserProfileUpdatePasswordForm.tsx
Tamaño: 4151 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Button, errorMessage, IconOutlineLockPerson, PasswordInput, successMessage } from '@novu/design-system';
import { checkIsResponseError, IResponseError } from '@novu/shared';
import { captureException } from '@sentry/react';
import { useMutation } from '@tanstack/react-query';
import { useForm } from 'react-hook-form';
import { css } from '@novu/novui/css';
import { Stack } from '@novu/novui/jsx';
import { api } from '../../../api';
import { PasswordRequirementPopover } from '../../auth/components/PasswordRequirementPopover';
import { SHARED_PASSWORD_INPUT_REGISTER_OPTIONS } from './UserProfilePasswordSidebar.shared';

type UserProfileUpdatePasswordFormProps = {
  onSuccess?: () => void;
};

interface IPasswordUpdateData {
  currentPassword: string;
  newPassword: string;
  confirmPassword: string;
}

export const UserProfileUpdatePasswordForm: React.FC<UserProfileUpdatePasswordFormProps> = ({ onSuccess }) => {
  const { isLoading, mutateAsync, error, isError } = useMutation<
    IPasswordUpdateData,
    IResponseError,
    IPasswordUpdateData
  >((data) => api.post(`/v1/auth/update-password`, data));

  const {
    register,
    handleSubmit,
    control,
    formState: { errors, isValid },
    setError,
    reset,
  } = useForm({
    defaultValues: {
      currentPassword: '',
      newPassword: '',
      confirmPassword: '',
    },
  });

  const onSubmitPasswords = async (data: IPasswordUpdateData) => {
    if (data.newPassword !== data.confirmPassword) {
      setError('confirmPassword', { message: 'Passwords do not match' });

      return;
    }

    try {
      await mutateAsync(data);

      successMessage('Password was set successfully');
      reset();
      onSuccess?.();
    } catch (err: unknown) {
      let errMessage = 'Error while setting password';
      if (checkIsResponseError(err)) {
        if (err.statusCode !== 400) {
          captureException(err);
        }

        errMessage = `${errMessage}: ${err.message}`;
      }

      errorMessage(errMessage);
    }

    return true;
  };

  const isSubmitDisabled = !isValid;

  return (
    <form noValidate name="reset-password-form" id="reset-password-form" onSubmit={handleSubmit(onSubmitPasswords)}>
      <Stack direction={'column'} gap={'200'}>
        <PasswordInput
          error={errors.currentPassword?.message}
          {...register('currentPassword', {
            required: SHARED_PASSWORD_INPUT_REGISTER_OPTIONS.required,
          })}
          required
          label="Current Password"
          placeholder="Enter current password"
          data-test-id="password-current"
        />
        <PasswordRequirementPopover control={control} passwordInputName="newPassword">
          <PasswordInput
            error={errors.newPassword?.message}
            {...register('newPassword', {
              ...SHARED_PASSWORD_INPUT_REGISTER_OPTIONS,
            })}
            required
            label="Password"
            placeholder="Type your new password"
            data-test-id="password-new"
          />
        </PasswordRequirementPopover>
        <PasswordInput
          error={errors.confirmPassword?.message}
          {...register('confirmPassword', {
            ...SHARED_PASSWORD_INPUT_REGISTER_OPTIONS,
          })}
          required
          label="Confirm Password"
          placeholder="Type it again"
          data-test-id="password-confirm"
        />
        <Button
          icon={<IconOutlineLockPerson color="typography.text.main" />}
          inherit
          loading={isLoading}
          submit
          disabled={isSubmitDisabled}
          data-test-id="submit-btn"
          className={css({ alignSelf: 'flex-end', width: 'fit-content !important' })}
        >
          Update Password
        </Button>
      </Stack>
      {isError && (
        <p
          data-test-id="error-alert-banner"
          className={css({
            mt: '125',
            textAlign: 'right',
            color: 'typography.text.feedback.alert',
            fontWeight: 'strong',
          })}
        >
          {' '}
          {error?.message}
        </p>
      )}
    </form>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Button, errorMessage, IconOutlineLockPerson, PasswordInput, successMessage } from '@novu/design-system';
import { checkIsResponseError, IResponseError } from '@novu/shared';
import { captureException } from '@sentry/react';
import { useMutation } from '@tanstack/react-query';
import { useForm } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/index.ts
Tamaño: 35 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './UserProfilePage';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/selectUserProfileFlow.ts
Tamaño: 565 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { UserProfileFlow } from './UserProfileFlow.const';

interface IUserProfilePageState {
  hasPassword: boolean;
  token?: string;
}

/** Determine which flow is active on the User Profile page based on supplied state */
export const selectUserProfileFlow = ({ hasPassword, token }: IUserProfilePageState): UserProfileFlow => {
  if (hasPassword) {
    return { rootFlow: 'UPDATE_PASSWORD' };
  }

  if (token) {
    return { rootFlow: 'SET_PASSWORD', subFlow: 'CREATE_PASSWORD' };
  }

  return { rootFlow: 'SET_PASSWORD', subFlow: 'EMAIL_VERIFICATION' };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - selectUserProfileFlow({ hasPassword, token }: IUserProfilePageState): UserProfileFlow)
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/useUserProfileSearchParams.ts
Tamaño: 1581 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useMemo } from 'react';
import { useSearchParams } from 'react-router-dom';
import { UserProfileSidebarTypeEnum, USER_PROFILE_SIDEBAR_TYPE_SET } from './UserProfilePasswordSidebarEnum';

const TOKEN_PARAM = 'token';
const SIDEBAR_PARAM = 'view';

const getValidatedSidebarType = (sidebarParam: string | null): sidebarParam is UserProfileSidebarTypeEnum => {
  return !!sidebarParam && USER_PROFILE_SIDEBAR_TYPE_SET.has(sidebarParam as UserProfileSidebarTypeEnum);
};

export const useUserProfileSearchParams = () => {
  const [searchParams, setSearchParams] = useSearchParams();

  const updateSidebarParam = (sidebarParam: UserProfileSidebarTypeEnum | null) => {
    const newSearchParams = new URLSearchParams(document.location.search);

    if (sidebarParam) {
      newSearchParams.set(SIDEBAR_PARAM, sidebarParam);
    } else {
      newSearchParams.delete(SIDEBAR_PARAM);
    }

    setSearchParams(newSearchParams, { replace: true });
  };

  const clearTokenParam = () => {
    const newSearchParams = new URLSearchParams(document.location.search);

    newSearchParams.delete(TOKEN_PARAM);

    setSearchParams(newSearchParams, { replace: true });
  };

  const sidebarParam = searchParams.get(SIDEBAR_PARAM);
  const sidebarType = useMemo(() => {
    // prevent from setting an invalid sidebar type if someone tampers with the URL
    return getValidatedSidebarType(sidebarParam) ? sidebarParam : null;
  }, [sidebarParam]);

  return {
    token: searchParams.get(TOKEN_PARAM) ?? undefined,
    sidebarType,
    updateSidebarParam,
    clearTokenParam,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - getValidatedSidebarType(sidebarParam: string | null): sidebarParam is UserProfileSidebarTypeEnum)
 - useUserProfileSearchParams())
 - updateSidebarParam(sidebarParam: UserProfileSidebarTypeEnum | null))
 - clearTokenParam())
 - sidebarType(useMemo(())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/settings/user-profile-page/useUserProfileSetPassword.ts
Tamaño: 1632 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { errorMessage } from '@novu/design-system';
import { IResponseError, PasswordResetFlowEnum } from '@novu/shared';
import { useMutation } from '@tanstack/react-query';
import { api } from '../../../api';
import { useAuth } from '../../../hooks/useAuth';

import { useCountdownTimer } from '../../../hooks';

const COUNTDOWN_TIMER_START_SECONDS = 60;

export const useUserProfileSetPassword = () => {
  const { currentUser } = useAuth();
  const {
    timeRemaining: countdownTimerSeconds,
    resetTimer,
    stopTimer,
  } = useCountdownTimer({
    // start at 0 in the event the user opens the page directly to the set password flow via URL
    startTimeSeconds: 0,
  });

  const { mutateAsync } = useMutation<
    { success: boolean },
    IResponseError,
    {
      email: string;
    }
  >((data) => api.post(`/v1/auth/reset/request`, data, { src: PasswordResetFlowEnum.USER_PROFILE }), {
    onError: (err) => {
      errorMessage(`There was an error sending your email. Please refresh and try again. Error: ${err.message}`);
    },
  });

  const sendVerificationEmail = async () => {
    // don't allow to reset the timer if it is running
    if (countdownTimerSeconds > 0) {
      return;
    }

    resetTimer(COUNTDOWN_TIMER_START_SECONDS);

    // this should never happen, but helps with type checking, and better to be defensive
    if (!currentUser?.email) {
      errorMessage('You must have a valid email tied to your logged-in user.');

      return;
    }

    await mutateAsync({ email: currentUser.email });
  };

  return {
    sendVerificationEmail,
    countdownTimerSeconds,
    stopTimer,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useUserProfileSetPassword())
 - sendVerificationEmail(async ())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/studio-onboarding/index.tsx
Tamaño: 2549 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { css } from '@novu/novui/css';
import { useEffect } from 'react';
import { Title, Text } from '@novu/novui';
import { VStack } from '@novu/novui/jsx';
import { useNavigate } from 'react-router-dom';
import { HealthCheck } from '@novu/framework/internal';
import { Footer } from './components/Footer';
import { Header } from './components/Header';
import { SetupTimeline } from './components/SetupTimeline';
import { Wrapper } from './components/Wrapper';
import { ROUTES } from '../../constants/routes';
import { useHealthCheck } from '../../studio/hooks/useBridgeAPI';
import { useStudioState } from '../../studio/StudioStateProvider';
import { capitalizeFirstLetter } from '../../utils/string';
import { setNovuOnboardingStepCookie } from '../../utils';
import { useTelemetry } from '../../hooks/useNovuAPI';

const ONBOARDING_COOKIE_EXPIRY_DAYS = 10 * 365;

export const StudioOnboarding = () => {
  const track = useTelemetry();
  const navigate = useNavigate();
  const { testUser } = useStudioState();
  const { data, isLoading } = useHealthCheck();

  useEffect(() => {
    track('Add endpoint step started - [Onboarding - Signup]');
  }, []);

  useEffect(() => {
    /**
     * User already onboarded to Novu and have more than one workflow
     */
    if (data?.discovered?.workflows && data?.discovered?.workflows > 1) {
      setNovuOnboardingStepCookie();
      navigate(ROUTES.STUDIO_FLOWS);
    }
  }, [data]);

  const welcomeMessage = `${`Welcome ${capitalizeFirstLetter(testUser?.firstName || '')}`.trim()}. Let's get started!`;

  return (
    <Wrapper>
      <Header />
      <VStack alignContent="center">
        <div
          className={css({
            width: 'onboarding',
          })}
        >
          <Title variant="page">{welcomeMessage}</Title>
          <Text
            variant="main"
            color="typography.text.secondary"
            className={css({
              marginBottom: '150',
              marginTop: '50',
            })}
          >
            Send your first email notification, by connecting to your Novu Bridge Endpoint. This setup will create a
            sample Next.js project with a pre-configured <code>@novu/framework</code>.
          </Text>
          <SetupTimeline testResponse={{ data: data as HealthCheck, isLoading }} />
        </div>
      </VStack>
      <Footer
        disabled={data?.status !== 'ok'}
        onClick={async () => {
          navigate(ROUTES.STUDIO_ONBOARDING_PREVIEW);
        }}
        loading={isLoading}
      />
    </Wrapper>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { css } from '@novu/novui/css';
import { useEffect } from 'react';
import { Title, Text } from '@novu/novui';
import { VStack } from '@novu/novui/jsx';
import { useNavigate } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/studio-onboarding/preview.tsx
Tamaño: 5727 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { errorMessage } from '@novu/design-system';
import type { ExecuteOutput } from '@novu/framework/internal';
import { Text, Title } from '@novu/novui';
import { css } from '@novu/novui/css';
import { VStack } from '@novu/novui/jsx';
import { isAxiosError } from 'axios';
import { useEffect, useMemo, useState } from 'react';
import { createSearchParams, useNavigate } from 'react-router-dom';
import { ROUTES } from '../../constants/routes';
import { useTelemetry } from '../../hooks/useNovuAPI';
import { WorkflowsPanelLayout } from '../../studio/components/workflows/layout';
import { WorkflowStepEditorContentPanel } from '../../studio/components/workflows/step-editor/WorkflowStepEditorContentPanel';
import { WorkflowStepEditorControlsPanel } from '../../studio/components/workflows/step-editor/WorkflowStepEditorControlsPanel';
// TODO: This indicates that all onboarding pages for studio should move under the "Studio" folder
import { useDiscover, useWorkflowPreview, useWorkflowTrigger } from '../../studio/hooks/useBridgeAPI';
import { PageContainer } from '../../studio/layout';
import { useStudioState } from '../../studio/StudioStateProvider';
import { Footer } from './components/Footer';
import { Header } from './components/Header';
import { Wrapper } from './components/Wrapper';

export const StudioOnboardingPreview = () => {
  const [controls, setStepControls] = useState({});
  const [payload, setPayload] = useState({});
  const { testUser } = useStudioState();
  const track = useTelemetry();
  const navigate = useNavigate();
  const { data: bridgeResponse, isLoading: isLoadingList } = useDiscover();
  const { trigger, isLoading } = useWorkflowTrigger();

  const workflow = useMemo(() => {
    if (!bridgeResponse?.workflows?.length) {
      return null;
    }

    return bridgeResponse.workflows[0];
  }, [bridgeResponse]);

  const step = useMemo(() => {
    if (!workflow) {
      return null;
    }

    return workflow?.steps?.[0];
  }, [workflow]);

  const { data: preview, isLoading: previewLoading } = useWorkflowPreview(
    {
      workflowId: workflow?.workflowId || '',
      stepId: step?.stepId || '',
      payload,
      controls,
    },
    {
      enabled: !!(workflow?.workflowId && step?.stepId),
      refetchOnWindowFocus: 'always',
      refetchInterval: 1000,
    }
  );

  useEffect(() => {
    track('Create workflow step started - [Onboarding - Signup]');
  }, []);

  function onControlsChange(type: string, form: any) {
    switch (type) {
      case 'step':
        setStepControls(form.formData);
        break;
      case 'payload':
        setPayload(form.formData);
        break;
      default:
        throw new Error('Invalid control type');
    }
  }

  const onTrigger = async () => {
    try {
      const to = {
        subscriberId: testUser.id,
        email: testUser.emailAddress,
      };

      const response = await trigger({
        workflowId: workflow?.workflowId || '',
        to,
        payload: { ...payload, __source: 'studio-onboarding-test-workflow' },
        controls: {
          steps: {
            [step?.stepId || '']: controls,
          },
        },
      });

      navigate({
        pathname: ROUTES.STUDIO_ONBOARDING_SUCCESS,
        search: createSearchParams({
          transactionId: response.data.transactionId,
        }).toString(),
      });
    } catch (err) {
      // TODO: Add error handling layer with known error codes to the common HTTP client.
      if (isAxiosError(err)) {
        errorMessage(err.response?.data?.data?.message || err.message);
      } else if (err instanceof Error) {
        errorMessage(err.message);
      }
      throw err;
    }
  };

  return (
    <Wrapper className={css({ overflow: 'auto' })}>
      <div
        className={css({
          backgroundSize: '[16px 16px]',
          minHeight: 'calc(100dvh - 4rem)',
          bg: 'surface.page',
        })}
      >
        <Header activeStepIndex={2} />
        <VStack
          alignContent="center"
          className={css({
            height: 'full',
          })}
        >
          <PageContainer
            className={css({
              width: 'full',
              // TODO: create and use token
              maxWidth: '1300px',
            })}
          >
            <Title variant="page">Preview your workflow</Title>

            <Text
              variant="main"
              color="typography.text.secondary"
              className={css({
                marginBottom: '150',
                marginTop: '50',
              })}
            >
              This is a preview of your sample workflow located in the <code>app/novu/workflows</code> directory. You
              can edit this file in your IDE and see the email changes reflected here.
            </Text>

            <WorkflowsPanelLayout>
              <WorkflowStepEditorContentPanel
                source="studio"
                error={null}
                step={step}
                preview={preview as ExecuteOutput}
                isLoadingPreview={previewLoading || isLoadingList}
              />
              <WorkflowStepEditorControlsPanel
                step={step}
                workflow={workflow}
                defaultControls={{}}
                onChange={onControlsChange}
              />
            </WorkflowsPanelLayout>
          </PageContainer>
        </VStack>
      </div>
      <Footer
        buttonText="Test workflow"
        onClick={() => {
          onTrigger();
        }}
        loading={isLoading}
        disabled={isLoading || isLoadingList || !workflow}
        tooltip={`Trigger a test of this workflow, delivered to: ${testUser.emailAddress} address`}
      />
    </Wrapper>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { errorMessage } from '@novu/design-system';
import type { ExecuteOutput } from '@novu/framework/internal';
import { Text, Title } from '@novu/novui';
import { css } from '@novu/novui/css';
import { VStack } from '@novu/novui/jsx';
// TODO: This indicates that all onboarding pages for studio should move under the "Studio" folder
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/studio-onboarding/success.tsx
Tamaño: 4287 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Skeleton } from '@mantine/core';
import { Mail } from '@novu/design-system';
import { Title, Text } from '@novu/novui';
import { css } from '@novu/novui/css';
import { HStack, VStack } from '@novu/novui/jsx';
import { useEffect, useMemo } from 'react';
import { useNavigate, useSearchParams } from 'react-router-dom';
import { ExecutionDetailsAccordion } from '../../components/execution-detail/ExecutionDetailsAccordion';
import { When } from '../../components/utils/When';
import { ROUTES } from '../../constants/routes';
import { Footer } from './components/Footer';
import { Header } from './components/Header';
import { Wrapper } from './components/Wrapper';
import { setNovuOnboardingStepCookie } from '../../utils';
import { useNotifications, useTelemetry } from '../../hooks/useNovuAPI';

const ONBOARDING_COOKIE_EXPIRY_DAYS = 10 * 365;

export const StudioOnboardingSuccess = () => {
  const [searchParams] = useSearchParams();
  const track = useTelemetry();
  const navigate = useNavigate();
  const transactionId = searchParams.get('transactionId') || '';
  const { data, isLoading } = useNotifications(transactionId, {
    enabled: !!transactionId,
    refetchOnMount: true,
    refetchInterval: 500,
  });

  const item = useMemo(() => {
    if (!data) {
      return null;
    }

    return data.data.at(-1);
  }, [data]);

  const identifier = useMemo(() => {
    if (!item) {
      return undefined;
    }

    return item?.trigger?.identifier;
  }, [item]);

  const email = useMemo(() => {
    if (item === null) {
      return null;
    }

    return item?.subscriber?.email;
  }, [item]);

  const stepId = useMemo(() => {
    if (!item?.jobs) {
      return undefined;
    }

    return item.jobs[0]?.id;
  }, [item?.jobs]);

  useEffect(() => {
    track('Test workflow step completed - [Onboarding - Signup]');

    setNovuOnboardingStepCookie();

  }, []);

  return (
    <Wrapper>
      <Header activeStepIndex={3} />
      <VStack alignContent="center">
        <div
          className={css({
            width: 'onboarding',
          })}
        >
          <Title variant="page">Success! You sent an email to {email}</Title>
          <Text
            variant="main"
            color="typography.text.secondary"
            className={css({
              marginTop: '50',
              marginBottom: '150',
            })}
          >
            Check your inbox for the e-mail you've just sent. Proceed to customize your Workflows or continue your
            onboarding by reviewing our documentation.
          </Text>
          <When truthy={!isLoading}>
            <ExecutionDetailsAccordion
              identifier={identifier}
              defaultOpen={stepId}
              steps={item?.jobs}
              subscriberVariables={{}}
            />
          </When>
          <When truthy={isLoading}>
            <div
              className={css({
                border: 'solid',
                borderColor: 'typography.text.secondary',
                borderRadius: '50',
                padding: '100',
                background: 'surface.page',
              })}
            >
              <HStack
                gap="150"
                className={css({
                  padding: '50',
                })}
              >
                <Mail
                  className={css({
                    width: '200',
                    height: '200',
                    color: 'typography.text.secondary',
                  })}
                />
                <VStack
                  className={css({
                    flex: 1,
                    alignItems: 'start',
                  })}
                  gap="25"
                >
                  <Skeleton height={16} width="10%" radius="sm" />
                  <Skeleton height={12} width="25%" radius="sm" />
                  <Skeleton height={12} width="15%" radius="sm" />
                </VStack>
              </HStack>
            </div>
          </When>
        </div>
      </VStack>
      <Footer
        onClick={() => {
          track('Workflows page accessed - [Onboarding - Signup]');
          navigate(ROUTES.STUDIO_FLOWS);
        }}
        buttonText="Explore workflows"
        showLearnMore={false}
      />
    </Wrapper>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Skeleton } from '@mantine/core';
import { Mail } from '@novu/design-system';
import { Title, Text } from '@novu/novui';
import { css } from '@novu/novui/css';
import { HStack, VStack } from '@novu/novui/jsx';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/studio-onboarding/components/CodeSnippet.tsx
Tamaño: 1315 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Input, inputStyles } from '@novu/design-system';
import { useClipboard } from '@mantine/hooks';
import { css, cx } from '@novu/novui/css';
import { ClipboardIconButton } from '../../../components/index';

const codeValueInputClassName = css({
  '& input': {
    border: 'none !important',
    background: {
      base: '#ededed !important',
      _dark: 'surface.popover !important',
    },
    color: 'typography.text.secondary !important',
    fontFamily: 'mono !important',
  },
});

interface ICodeSnippetProps {
  command: string;
  description?: string;
  onClick?: () => void;
  className?: string;
  'data-test-id'?: string;
}

/**
 * Read-only code snippet with copy-paste functionality
 */
export const CodeSnippet = ({ command, description, onClick, className, ...props }: ICodeSnippetProps) => {
  const { copy, copied } = useClipboard();

  const handleCopy = () => {
    onClick?.();
    copy(command);
  };

  return (
    <Input
      description={description}
      readOnly
      className={cx(codeValueInputClassName, className)}
      styles={inputStyles}
      rightSection={
        <ClipboardIconButton isCopied={copied} handleCopy={handleCopy} testId={'mail-server-domain-copy'} size={'16'} />
      }
      value={command}
      data-test-id={props['data-test-id']}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Input, inputStyles } from '@novu/design-system';
import { useClipboard } from '@mantine/hooks';
import { css, cx } from '@novu/novui/css';
import { ClipboardIconButton } from '../../../components/index';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/studio-onboarding/components/Footer.tsx
Tamaño: 2937 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { text } from '@novu/novui/recipes';
import { HStack, styled, VStack } from '@novu/novui/jsx';
import { Tooltip } from '@novu/design-system';
import { IconOutlineMenuBook } from '@novu/novui/icons';
import { useLocation } from 'react-router-dom';
import { css } from '@novu/novui/css';
import { Button } from '@novu/novui';
import { When } from '../../../components/utils/When';
import { DocsButton } from '../../../components/docs/DocsButton';
import { useTelemetry } from '../../../hooks/useNovuAPI';
import { PATHS } from '../../../components/docs/docs.const';
import { DocsPaths, useDocsPath } from '../../../components/docs/useDocsPath';
import { ROUTES } from '../../../constants/routes';

const Text = styled('a', text);

const paths: DocsPaths = {
  [ROUTES.STUDIO_ONBOARDING]: PATHS.QUICK_START_NEXTJS,
  [ROUTES.STUDIO_ONBOARDING_PREVIEW]: PATHS.CONCEPT_CONTROLS,
};

export const Footer = ({
  showLearnMore = true,
  buttonText = 'Continue',
  onClick,
  loading = false,
  tooltip = '',
  disabled = false,
}: {
  showLearnMore?: boolean;
  buttonText?: string;
  onClick?: () => void;
  loading?: boolean;
  tooltip?: string;
  disabled?: boolean;
}) => {
  const track = useTelemetry();
  const { pathname } = useLocation();
  const path = useDocsPath(paths);

  return (
    <div
      className={css({
        paddingTop: '50',
        paddingBottom: '100',
        backgroundColor: 'surface.panel',
        position: 'fixed',
        bottom: 0,
        left: 0,
        right: 0,
        zIndex: 'docked',
      })}
    >
      <VStack alignContent="center" className={css({ height: '250' })}>
        <HStack
          justify="space-between"
          className={css({
            width: 'onboarding',
          })}
        >
          <div>
            <When truthy={showLearnMore}>
              <DocsButton
                path={path}
                TriggerButton={({ onClick: onDocsClick }) => (
                  <HStack gap="50" className={css({ color: 'typography.text.secondary' })}>
                    <IconOutlineMenuBook />
                    <Text
                      onClick={(e) => {
                        e.preventDefault();
                        track('Documentation linked clicked - [Onboarding - Signup]', {
                          step: pathname,
                        });
                        onDocsClick();
                      }}
                      href=""
                    >
                      Learn more in our docs
                    </Text>
                  </HStack>
                )}
              />
            </When>
          </div>
          <HStack gap="100">
            <Tooltip label={tooltip} disabled={!tooltip}>
              <Button loading={loading} onClick={onClick} disabled={disabled}>
                {buttonText}
              </Button>
            </Tooltip>
          </HStack>
        </HStack>
      </VStack>
    </div>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { text } from '@novu/novui/recipes';
import { HStack, styled, VStack } from '@novu/novui/jsx';
import { Tooltip } from '@novu/design-system';
import { IconOutlineMenuBook } from '@novu/novui/icons';
import { useLocation } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/studio-onboarding/components/Header.tsx
Tamaño: 2960 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { css } from '@novu/novui/css';
import { Stepper } from '@mantine/core';
import { IconCheck } from '@novu/novui/icons';
import { VStack } from '@novu/novui/jsx';
import { useColorScheme } from '@novu/design-system';
import { COMPANY_LOGO_TEXT_PATH, COMPANY_LOGO_TEXT_PATH_DARK_TEXT } from '../../../constants/assets';

export const Header = ({ activeStepIndex = 0 }: { activeStepIndex?: number }) => {
  const { colorScheme } = useColorScheme();

  return (
    <div
      className={css({
        backgroundColor: 'surface.panel',
        zIndex: 'docked',
        position: 'relative',
        paddingBottom: '375',
      })}
    >
      <div className={css({ padding: '100', width: '100%', height: '375' })}>
        <img
          // TODO: these assets are not the same dimensions!
          src={colorScheme === 'dark' ? COMPANY_LOGO_TEXT_PATH : COMPANY_LOGO_TEXT_PATH_DARK_TEXT}
          className={css({
            h: '200',
          })}
        />
      </div>
      <VStack alignContent="center">
        <div
          className={css({
            width: 'onboarding',
          })}
        >
          <Stepper
            classNames={{
              separator: css({
                marginLeft: '50 !important',
                marginRight: '50 !important',
                backgroundColor: 'transparent !important',
                borderBottom: 'dashed',
                borderColor: { base: 'typography.text.main', _dark: 'table.header.border' },
              }),
              stepIcon: css({
                border: 'none !important',
                width: '200 !important',
                minWidth: '200 !important',
                height: '200 !important',
                backgroundColor: 'surface.popover !important',
                color: 'typography.text.secondary !important',
                '&[data-progress]': {
                  backgroundColor: 'table.header.border !important',
                  color: 'typography.text.main !important',
                },
              }),
              stepBody: css({
                marginLeft: '50 !important',
              }),
              stepCompletedIcon: css({
                backgroundColor: 'typography.text.feedback.success',
                borderRadius: '200',
              }),
            }}
            progressIcon={({ step }) => <>{step + 1}</>}
            completedIcon={() => {
              return (
                <IconCheck
                  className={css({
                    color: { _dark: 'typography.text.main !important', base: 'table.header.border' },
                  })}
                />
              );
            }}
            active={activeStepIndex}
          >
            <Stepper.Step label="Create Novu app"></Stepper.Step>
            <Stepper.Step label="Test workflow"></Stepper.Step>
            <Stepper.Step label="Check your Inbox"></Stepper.Step>
          </Stepper>
        </div>
      </VStack>
    </div>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { css } from '@novu/novui/css';
import { Stepper } from '@mantine/core';
import { IconCheck } from '@novu/novui/icons';
import { VStack } from '@novu/novui/jsx';
import { useColorScheme } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/studio-onboarding/components/SetupTimeline.recipe.ts
Tamaño: 1301 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { TimelineItemStylesNames } from '@mantine/core';
import { sva } from '@novu/novui/css';

const SLOTS: TimelineItemStylesNames[] = ['itemBullet', 'item', 'itemContent', 'itemTitle', 'itemBody'];
export const timelineRecipe = sva({
  slots: SLOTS,
  base: {
    item: {
      paddingLeft: '175 !important',
      '&:not(:first-of-type)': {
        marginTop: '200 !important',
      },
      // timeline dashed connector line
      '&::before': {
        backgroundColor: 'transparent !important',
        // TODO: fix when legacy colors are removed
        borderColor: { base: 'legacy.B30 !important', _dark: 'legacy.B85 !important' },
      },
    },

    itemTitle: {
      margin: '0 !important',
      fontWeight: 'strong !important',
      color: 'typography.text.main !important',
      lineHeight: '1.5rem !important',
    },
    itemBullet: {
      fontWeight: 'strong',
      border: 'none',
      '&[data-active]': {
        bg: {
          base: 'typography.text.feedback.success !important',
          _dark: 'typography.text.feedback.success !important',
        },
      },
    },
    itemBody: {
      lineHeight: '1.25rem',
      color: 'typography.text.secondary',
    },

    itemContent: {
      display: 'block',
      opacity: 1,
      maxHeight: '400px',
    },
  },
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/studio-onboarding/components/SetupTimeline.tsx
Tamaño: 2896 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Loader, Timeline as MantineTimeline } from '@mantine/core';
import { useEffect, useState } from 'react';
import { IconCheck } from '@novu/novui/icons';
import { Text } from '@novu/novui';
import { css } from '@novu/novui/css';
import { useColorScheme } from '@novu/design-system';
import type { HealthCheck } from '@novu/framework/internal';
import { CodeSnippet } from './CodeSnippet';
import { useStudioState } from '../../../studio/StudioStateProvider';
import { timelineRecipe } from './SetupTimeline.recipe';

const Icon = () => (
  <IconCheck
    className={css({
      color: {
        base: 'surface.page !important',
        _dark: 'typography.text.main !important',
      },
    })}
  />
);

export const SetupTimeline = ({ testResponse }: { testResponse: { isLoading: boolean; data: HealthCheck } }) => {
  const { devSecretKey } = useStudioState();
  const [active, setActive] = useState(0);
  const { colorScheme } = useColorScheme();

  useEffect(() => {
    if (testResponse?.isLoading || testResponse?.data?.status !== 'ok') {
      return;
    }
    setActive(3);
  }, [testResponse?.data?.status, testResponse?.isLoading]);

  function CheckStatusIcon() {
    return (
      <>
        {testResponse?.isLoading || testResponse?.data?.status !== 'ok' ? (
          <Loader size={16} color={colorScheme === 'dark' ? 'white' : 'dark'} />
        ) : (
          <Icon />
        )}
      </>
    );
  }

  return (
    <MantineTimeline classNames={timelineRecipe()} lineWidth={1} bulletSize={32}>
      <MantineTimeline.Item
        bullet={active >= 1 ? <Icon /> : 1}
        lineVariant="dashed"
        title="Create Novu Example App"
        active={active >= 1}
      >
        <Text variant="main" color="typography.text.secondary">
          This will create a new Next.js sample app with React-Email
        </Text>
        <CodeSnippet
          command={`npx novu@latest init --secret-key=${devSecretKey}`}
          onClick={() => {
            setActive((old) => (old > 1 ? old : 1));
          }}
        />
      </MantineTimeline.Item>
      <MantineTimeline.Item
        bullet={active >= 2 ? <Icon /> : 2}
        lineVariant="dashed"
        title="Start your application"
        active={active >= 2}
      >
        <CodeSnippet
          command={'cd my-novu-app && npm run dev'}
          onClick={() => {
            setActive((old) => (old > 2 ? old : 2));
          }}
        />
      </MantineTimeline.Item>
      <MantineTimeline.Item
        bullet={<CheckStatusIcon />}
        lineVariant="dashed"
        title="Connect to the Novu Bridge app"
        active={active >= 3}
      >
        <Text variant="main" color="typography.text.secondary">
          {active < 3 ? 'Waiting for you to start the application' : 'Successfully connected to the Novu Bridge app'}
        </Text>
      </MantineTimeline.Item>
    </MantineTimeline>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Loader, Timeline as MantineTimeline } from '@mantine/core';
import { useEffect, useState } from 'react';
import { IconCheck } from '@novu/novui/icons';
import { Text } from '@novu/novui';
import { css } from '@novu/novui/css';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/studio-onboarding/components/Wrapper.tsx
Tamaño: 575 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { css, cx } from '@novu/novui/css';
import { ReactNode, useEffect } from 'react';

export const Wrapper = ({ children, className }: { children: ReactNode; className?: string }) => {
  useEffect(() => {
    document.body.setAttribute('style', 'overflow: auto');
  }, []);

  return (
    <div
      className={cx(
        css({
          width: '100dvw',
          minHeight: '100dvh',
          colorPalette: 'mode.cloud',
          paddingBottom: '4rem',
          bg: 'surface.panel',
        }),
        className
      )}
    >
      {children}
    </div>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { css, cx } from '@novu/novui/css';
import { ReactNode, useEffect } from 'react';
export const Wrapper = ({ children, className }: { children: ReactNode; className?: string }) => {
useEffect(() => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/subscribers/SubscribersListPage.tsx
Tamaño: 2248 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { format } from 'date-fns';
import { Code, Button } from '@mantine/core';
import type { ISubscriber } from '@novu/shared';

import { Table, withCellLoading, IExtendedColumn, ViewportWide, HoverCard } from '@novu/design-system';
import { useSubscribers } from '../../hooks';
import PageHeader from '../../components/layout/components/PageHeader';
import PageContainer from '../../components/layout/components/PageContainer';

const columns: IExtendedColumn<ISubscriber>[] = [
  {
    accessor: 'subscriberId',
    Header: 'Subscriber identifier',
  },
  {
    accessor: 'firstName',
    Header: 'First Name',
  },
  {
    accessor: 'lastName',
    Header: 'Last Name',
  },
  {
    accessor: 'email',
    Header: 'Email',
  },
  {
    accessor: 'phone',
    Header: 'Phone',
  },
  {
    accessor: 'createdAt',
    Header: 'Created At',
    Cell: withCellLoading(({ row: { original } }) => format(new Date(original.createdAt), 'dd/MM/yyyy HH:mm')),
  },
  {
    accessor: 'data',
    Header: 'Data',
    Cell: withCellLoading(({ row: { original } }) =>
      original.data ? (
        <HoverCard width={200} position="bottom" shadow="md" withArrow arrowSize={3.5}>
          <HoverCard.Target>
            <Button>
              <ViewportWide />
            </Button>
          </HoverCard.Target>
          <HoverCard.Dropdown>
            <Code>{JSON.stringify(original.data, null, 2)}</Code>
          </HoverCard.Dropdown>
        </HoverCard>
      ) : (
        ''
      )
    ),
  },
];

function SubscribersList() {
  const [page, setPage] = useState<number>(0);
  const { subscribers, loading: isLoading, hasMore, pageSize } = useSubscribers(page);

  function handleTableChange(pageIndex) {
    setPage(pageIndex);
  }

  return (
    <PageContainer title="Subscribers">
      <PageHeader title="Subscribers" />
      <Table
        loading={isLoading}
        data-test-id="subscribers-table"
        columns={columns}
        data={subscribers || []}
        pagination={{
          pageSize,
          current: page,
          hasMore,
          minimalPagination: true,
          onPageChange: handleTableChange,
        }}
      />
    </PageContainer>
  );
}

export default SubscribersList;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { format } from 'date-fns';
import { Code, Button } from '@mantine/core';
import type { ISubscriber } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/TemplatesDigestPlaygroundPage.tsx
Tamaño: 3284 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useCallback } from 'react';
import { Stack } from '@mantine/core';
import styled from '@emotion/styled';
import { ReactFlowProvider } from 'react-flow-renderer';
import { useNavigate, useParams } from 'react-router-dom';
import { UTM_CAMPAIGN_QUERY_PARAM } from '@novu/shared';
import { ArrowButton, colors, Title, Text, Button } from '@novu/design-system';

import PageContainer from '../../components/layout/components/PageContainer';
import { parseUrl } from '../../utils/routeUtils';
import { ROUTES } from '../../constants/routes';
import { DigestDemoFlow } from '../../components';
import { useSegment } from '../../components/providers/SegmentProvider';
import { DigestPlaygroundAnalyticsEnum } from './constants';
import { useTourStorage } from './hooks/useTourStorage';

const Heading = styled(Title)`
  color: ${colors.B40};
  font-size: 40px;
`;

const SubHeading = styled(Text)`
  font-size: 20px;
`;

const LinkStyled = styled.a`
  font-size: 16px;
  color: #2b85df;
  text-decoration: underline;
`;

export const TemplatesDigestPlaygroundPage = () => {
  const segment = useSegment();
  const { templateId = '' } = useParams<{ templateId: string }>();
  const navigate = useNavigate();
  const tourStorage = useTourStorage();

  const handleBackClick = () => {
    segment.track(DigestPlaygroundAnalyticsEnum.BACK_BUTTON_CLICK);
    navigate(-1);
  };

  const handleSetupDigestWorkflowClick = () => {
    segment.track(DigestPlaygroundAnalyticsEnum.SETUP_DIGEST_WORKFLOW_CLICK);
    tourStorage.setTour('digest', templateId, 0);
    navigate(`${parseUrl(ROUTES.WORKFLOWS_EDIT_TEMPLATEID, { templateId })}`);
  };

  const handleLearnMoreClick = () => {
    segment.track(DigestPlaygroundAnalyticsEnum.LEARN_MORE_IN_DOCS_CLICK);
  };

  const handleRunTriggerClick = useCallback(() => {
    segment.track(DigestPlaygroundAnalyticsEnum.RUN_TRIGGER_CLICK);
  }, [segment]);

  const handleDigestIntervalChange = useCallback(
    (interval: number) => {
      segment.track(DigestPlaygroundAnalyticsEnum.DIGEST_INTERVAL_CHANGE, { interval });
    },
    [segment]
  );

  return (
    <ReactFlowProvider>
      <PageContainer title="Digest Workflow Playground" style={{ padding: '32px' }}>
        <ArrowButton label="Go Back" onClick={handleBackClick} />
        <Stack mt={20} spacing="xs" align="center">
          <Heading>Digest Workflow Playground</Heading>
          <SubHeading>The digest engine aggregates multiple events into a precise notification</SubHeading>
        </Stack>
        <Stack mt={40} align="center">
          <DigestDemoFlow
            isReadOnly={false}
            templateId={templateId}
            onRunTriggerClick={handleRunTriggerClick}
            onDigestIntervalChange={handleDigestIntervalChange}
          />
        </Stack>
        <Stack mt={40} mb={40} align="center">
          <Button onClick={handleSetupDigestWorkflowClick}>Set Up Digest Workflow</Button>
          <LinkStyled
            target="_blank"
            rel="noopener noreferrer"
            href={`https://docs.novu.co/workflows/digest${UTM_CAMPAIGN_QUERY_PARAM}`}
            onClick={handleLearnMoreClick}
          >
            Learn more in docs
          </LinkStyled>
        </Stack>
      </PageContainer>
    </ReactFlowProvider>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useCallback } from 'react';
import { Stack } from '@mantine/core';
import styled from '@emotion/styled';
import { ReactFlowProvider } from 'react-flow-renderer';
import { useNavigate, useParams } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/TemplatesListNoData.tsx
Tamaño: 5057 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faDiagramNext } from '@fortawesome/free-solid-svg-icons';
import { faFile } from '@fortawesome/free-regular-svg-icons';
import { Skeleton } from '@mantine/core';

import { CardTile, colors, Popover } from '@novu/design-system';
import { WorkflowCreationSourceEnum } from '@novu/shared';

import { useSegment } from '../../components/providers/SegmentProvider';
import { IBlueprintTemplate } from '../../api/types';
import { useHoverOverItem } from '../../hooks';
import { FrameworkProjectCardTile } from './components/FrameworkProjectWaitList';

const NoDataHolder = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  height: 500px;
`;

const NoDataSubHeading = styled.p`
  margin: 0;
  font-size: 20px;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B40 : colors.B80)};
`;

const CardsContainer = styled.div`
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 24px;
  margin: 50px 20px;

  @media screen and (min-width: 1025px) {
    margin: 50px 40px;
  }
`;

const SkeletonIcon = styled(Skeleton)`
  min-width: 24px;
  width: 24px;
  height: 24px;

  @media screen and (min-width: 1025px) {
    min-width: 28px;
    width: 28px;
    height: 28px;
  }
`;

export const TemplatesListNoData = ({
  readonly,
  blueprints,
  isLoading,
  isCreating,
  allTemplatesDisabled,
  onBlankWorkflowClick,
  onTemplateClick,
  onAllTemplatesClick,
}: {
  readonly?: boolean;
  blueprints?: IBlueprintTemplate[];
  isLoading?: boolean;
  isCreating?: boolean;
  allTemplatesDisabled?: boolean;
  onBlankWorkflowClick: React.MouseEventHandler<HTMLButtonElement>;
  onTemplateClick: (template: IBlueprintTemplate) => void;
  onAllTemplatesClick: React.MouseEventHandler<HTMLButtonElement>;
}) => {
  const segment = useSegment();
  const { item: templateId, onMouseEnter, onMouseLeave } = useHoverOverItem<string>();

  return (
    <NoDataHolder data-test-id="no-workflow-templates-placeholder">
      <NoDataSubHeading>Start from a blank workflow or use a template</NoDataSubHeading>
      <CardsContainer>
        <CardTile
          disabled={readonly}
          data-test-id="create-workflow-tile"
          onClick={(event) => {
            segment.track('[Template Store] Click Create Notification Template', {
              templateIdentifier: 'Blank Workflow',
              location: WorkflowCreationSourceEnum.EMPTY_STATE,
            });

            onBlankWorkflowClick(event);
          }}
        >
          <FontAwesomeIcon icon={faFile} />
          <span>Blank Workflow</span>
        </CardTile>
        <FrameworkProjectCardTile />
        {isLoading
          ? Array.from({ length: 3 }).map((_, index) => (
              <CardTile key={index} data-can-be-hidden={index === 2} data-test-id="second-workflow-tile">
                <SkeletonIcon />
                <Skeleton height={14} width="100%" />
              </CardTile>
            ))
          : blueprints?.map((template, index) => (
              <Popover
                key={template.name}
                opened={template._id === templateId && !!template.description}
                withArrow
                withinPortal
                offset={5}
                transitionDuration={300}
                position="top"
                width={300}
                styles={{ dropdown: { minHeight: 'auto !important' } }}
                target={
                  <CardTile
                    data-can-be-hidden={index === 2}
                    data-test-id="popular-workflow-tile"
                    disabled={readonly || isCreating}
                    onClick={() => {
                      segment.track('[Template Store] Click Create Notification Template', {
                        templateIdentifier: template?.triggers[0]?.identifier || '',
                        location: WorkflowCreationSourceEnum.EMPTY_STATE,
                      });

                      onTemplateClick(template);
                    }}
                    onMouseEnter={() => {
                      onMouseEnter(template._id);
                    }}
                    onMouseLeave={onMouseLeave}
                  >
                    <FontAwesomeIcon icon={template.iconName} />
                    <span>{template.name}</span>
                  </CardTile>
                }
                content={template.description}
              />
            ))}
        <CardTile
          data-test-id="all-workflow-tile"
          onClick={(event) => {
            segment.track('[Template Store] Click Open Template Store', {
              location: WorkflowCreationSourceEnum.EMPTY_STATE,
            });

            onAllTemplatesClick(event);
          }}
          disabled={allTemplatesDisabled || readonly}
        >
          <FontAwesomeIcon icon={faDiagramNext} />
          <span>All templates</span>
        </CardTile>
      </CardsContainer>
    </NoDataHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faDiagramNext } from '@fortawesome/free-solid-svg-icons';
import { faFile } from '@fortawesome/free-regular-svg-icons';
import { Skeleton } from '@mantine/core';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/WorkflowListNoMatches.tsx
Tamaño: 874 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { useMantineTheme } from '@mantine/core';
import { colors, IconOutlineSearchOff, Text } from '@novu/design-system';

const NoMatchesHolder = styled.div`
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 50vh;
`;

export const WorkflowListNoMatches = () => {
  const { colorScheme } = useMantineTheme();
  const isDark = colorScheme === 'dark';

  return (
    <NoMatchesHolder data-test-id="workflows-no-matches">
      <IconOutlineSearchOff size={40} color={isDark ? colors.B40 : colors.B70} style={{ marginBottom: '1rem' }} />
      <Text color={isDark ? colors.B40 : colors.B70} size="lg">
        No matches found
      </Text>
      <Text color={isDark ? colors.B40 : colors.B70}>Try being less specific or using different keywords.</Text>
    </NoMatchesHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { useMantineTheme } from '@mantine/core';
import { colors, IconOutlineSearchOff, Text } from '@novu/design-system';
const NoMatchesHolder = styled.div`
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/WorkflowListPage.tsx
Tamaño: 12245 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ChangeEventHandler, useMemo, useState } from 'react';
import { ActionIcon, useMantineTheme, Group } from '@mantine/core';
import { createSearchParams, Link, useLocation, useNavigate } from 'react-router-dom';
import styled from '@emotion/styled';
import { format } from 'date-fns';
import {
  Tag,
  Table,
  colors,
  Text,
  IExtendedColumn,
  withCellLoading,
  Container,
  Bolt,
  BoltFilled,
  BoltOffFilled,
  Edit,
  ProviderMissing,
  Tooltip,
  SearchInput,
} from '@novu/design-system';
import { FeatureFlagsKeysEnum, WorkflowCreationSourceEnum } from '@novu/shared';

import { css } from '@novu/novui/css';
import { Button } from '@novu/novui';
import {
  useTemplates,
  useEnvironment,
  useNotificationGroup,
  INotificationTemplateExtended,
  useDebouncedSearch,
  useFeatureFlag,
} from '../../hooks';
import { ROUTES } from '../../constants/routes';
import { parseUrl } from '../../utils/routeUtils';
import { TemplatesListNoData } from './TemplatesListNoData';
import { useSegment } from '../../components/providers/SegmentProvider';
import { TemplateAnalyticsEnum } from './constants';
import { useTemplatesStoreModal } from './hooks/useTemplatesStoreModal';
import { useFetchBlueprints, useCreateTemplateFromBlueprint } from '../../api/hooks';
import { CreateWorkflowDropdown } from './components/CreateWorkflowDropdown';
import { IBlueprintTemplate } from '../../api/types';
import { errorMessage } from '../../utils/notifications';
import { When } from '../../components/utils/When';
import { ListPage } from '../../components/layout/components/ListPage';
import { WorkflowListNoMatches } from './WorkflowListNoMatches';
import { GetStartedPageV2 } from '../../studio/components/GetStartedPageV2/index';

const columns: IExtendedColumn<INotificationTemplateExtended>[] = [
  {
    accessor: 'name',
    Header: 'Name & Trigger Identifier',
    width: 340,
    maxWidth: 340,
    Cell: withCellLoading(({ row: { original } }) => (
      <Group spacing={8}>
        <Group spacing={4}>
          <When truthy={original.bridge}>
            <Tooltip label="Workflow is handled by Novu Framework" position="top">
              <div>
                <Bolt color="#4c6dd4" width="24px" height="24px" />
              </div>
            </Tooltip>
          </When>
          <Tooltip
            error
            label="Some steps are missing a provider configuration or a primary provider,
          causing some notifications to fail."
            width={300}
            multiline
            disabled={
              original.workflowIntegrationStatus?.hasActiveIntegrations &&
              original.workflowIntegrationStatus?.hasPrimaryIntegrations !== false
            }
            position="top"
          >
            <div>
              {}
              {original.workflowIntegrationStatus?.hasActiveIntegrations &&
              original.workflowIntegrationStatus?.hasPrimaryIntegrations !== false ? (
                !original.bridge ? (
                  <Bolt color={colors.B40} width="24px" height="24px" />
                ) : null
              ) : (
                <ProviderMissing width="24px" height="24px" />
              )}
            </div>
          </Tooltip>
        </Group>
        <Tooltip label={original.name}>
          <div>
            <Text rows={1} data-test-id="workflow-row-name">
              {original.name}
            </Text>
            <Text rows={1} size="xs" color={colors.B40} data-test-id="workflow-row-trigger-identifier">
              {original.triggers ? original.triggers[0].identifier : 'Unknown'}
            </Text>
          </div>
        </Tooltip>
      </Group>
    )),
  },
  {
    accessor: 'notificationGroup',
    Header: 'Group',
    width: 240,
    maxWidth: 240,
    Cell: withCellLoading(({ row: { original } }) =>
      original.bridge ? null : <StyledTag data-test-id="category-label"> {original.notificationGroup?.name}</StyledTag>
    ),
  },
  {
    accessor: 'createdAt',
    Header: 'Created At',
    width: 314,
    maxWidth: 314,
    Cell: withCellLoading(({ row: { original } }) => (
      <Text rows={1}>{format(new Date(original.createdAt ?? ''), 'dd/MM/yyyy HH:mm')}</Text>
    )),
  },
  {
    accessor: 'status',
    Header: 'Status',
    maxWidth: 100,
    Cell: withCellLoading(({ row: { original } }) => (
      <>
        {!original.active ? (
          <Group spacing={0} data-test-id="disabled-status-label">
            <BoltOffFilled color={colors.B40} />
            <Text rows={1} color={colors.B40}>
              Disabled
            </Text>
          </Group>
        ) : null}{' '}
        {original.active ? (
          <Group spacing={0} data-test-id="active-status-label">
            <BoltFilled color={colors.success} />
            <Text rows={1} color={colors.success}>
              Active
            </Text>
          </Group>
        ) : null}{' '}
      </>
    )),
  },
  {
    accessor: '_id',
    Header: '',
    maxWidth: 75,
    Cell: withCellLoading(({ row: { original } }) => {
      const theme = useMantineTheme();

      return (
        <ActionButtonWrapper>
          <ActionIcon
            variant="transparent"
            component={Link}
            to={parseUrl(ROUTES.WORKFLOWS_EDIT_TEMPLATEID, { templateId: original._id ?? '' })}
            data-test-id="template-edit-link"
          >
            <Edit color={theme.colorScheme === 'dark' ? colors.B40 : colors.B80} />
          </ActionIcon>
        </ActionButtonWrapper>
      );
    }),
  },
];

function WorkflowListPage() {
  const segment = useSegment();
  const { readonly } = useEnvironment();
  const { loading: areNotificationGroupLoading } = useNotificationGroup();
  const {
    templates,
    loading: areWorkflowsLoading,
    isFetching,
    totalItemCount,
    totalPageCount,
    currentPageNumberQueryParam,
    pageSizeQueryParam,
    searchQueryParam,
    setSearchQueryParam,
    setCurrentPageNumberQueryParam,
    setPageSizeQueryParam,
  } = useTemplates({ areSearchParamsEnabled: true });
  const [searchValue, setSearchValue] = useState(searchQueryParam ?? '');
  const navigate = useNavigate();
  const { blueprintsGroupedAndPopular: { general, popular } = {}, isLoading: areBlueprintsLoading } =
    useFetchBlueprints();
  const { createTemplateFromBlueprint, isLoading: isCreatingTemplateFromBlueprint } = useCreateTemplateFromBlueprint({
    onSuccess: (template) => {
      navigate(`${parseUrl(ROUTES.WORKFLOWS_EDIT_TEMPLATEID, { templateId: template._id ?? '' })}`);
    },
    onError: () => {
      errorMessage('Something went wrong while creating template from blueprint, please try again later.');
    },
  });
  const { search } = useLocation();
  const hasGroups = general && general.length > 0;
  const hasTemplates = templates && templates.length > 0;
  const isLoading = areNotificationGroupLoading || areWorkflowsLoading;
  const shouldShowEmptyState = !isLoading && !isFetching && !hasTemplates && searchValue === '';
  const shouldShowNoResults = !isLoading && !isFetching && !hasTemplates && searchValue !== '';
  const isSearchInputDisabled = isLoading || (!hasTemplates && searchValue === '');
  const isV2Enabled = useFeatureFlag(FeatureFlagsKeysEnum.IS_V2_ENABLED);

  const { TemplatesStoreModal, openModal } = useTemplatesStoreModal({ general, popular });

  const isOnboarding = useMemo(() => {
    const params = search.replace('?', '').split('&');
    const found = params.find((param) => param === 'onboarding=true');

    return !!found;
  }, [search]);

  function handleTableChange(pageIndex: number) {
    setCurrentPageNumberQueryParam(pageIndex);
  }

  const handleRedirectToCreateTemplate = (isFromHeader: boolean) => {
    segment.track(TemplateAnalyticsEnum.CREATE_TEMPLATE_CLICK, { isFromHeader });
    navigate(ROUTES.WORKFLOWS_CREATE);
  };

  const handleOnBlueprintClick = (blueprint: IBlueprintTemplate) => {
    createTemplateFromBlueprint({
      blueprint: { ...blueprint },
      params: { __source: WorkflowCreationSourceEnum.TEMPLATE_STORE },
    });
  };

  function onRowClick(row) {
    navigate({
      pathname: parseUrl(ROUTES.WORKFLOWS_EDIT_TEMPLATEID, { templateId: row.values._id }),
      search: createSearchParams({
        type: row.original.type,
      }).toString(),
    });
  }

  const debouncedSearchChange = useDebouncedSearch(setSearchQueryParam);

  const onSearchClearClick = () => {
    debouncedSearchChange.cancel();
    setSearchValue('');
    setSearchQueryParam('');
  };

  const onSearchChange: ChangeEventHandler<HTMLInputElement> = ({ target: { value } }) => {
    if (value === '') {
      onSearchClearClick();

      return;
    }

    setSearchValue(value);
    debouncedSearchChange(value);
  };

  return (
    <ListPage
      title="Workflows"
      paginationInfo={{
        totalItemCount,
        pageSize: pageSizeQueryParam,
        totalPageCount,
        currentPageNumber: currentPageNumberQueryParam,
        onPageChange: handleTableChange,
        onPageSizeChange: setPageSizeQueryParam,
      }}
    >
      <Container fluid sx={{ padding: '0 24px 8px 24px' }}>
        <TableActionsContainer>
          {!isV2Enabled ? (
            <CreateWorkflowDropdown
              readonly={readonly}
              blueprints={popular?.blueprints}
              isLoading={areBlueprintsLoading}
              isCreating={isCreatingTemplateFromBlueprint}
              allTemplatesDisabled={areBlueprintsLoading || !hasGroups}
              onBlankWorkflowClick={() => handleRedirectToCreateTemplate(false)}
              onTemplateClick={handleOnBlueprintClick}
              onAllTemplatesClick={openModal}
            />
          ) : (
            <div></div>
          )}

          <SearchInput
            value={searchValue}
            placeholder="Type name or identifier..."
            onChange={onSearchChange}
            onClearClick={onSearchClearClick}
            disabled={isSearchInputDisabled}
            data-test-id="workflows-search-input"
          />
        </TableActionsContainer>
      </Container>
      <TemplateListTableWrapper>
        <When truthy={!shouldShowEmptyState}>
          <Table
            onRowClick={onRowClick}
            loading={isLoading}
            data-test-id="notifications-template"
            columns={columns}
            data={templates}
            noDataPlaceholder={shouldShowNoResults && <WorkflowListNoMatches />}
          />
        </When>
        <When truthy={shouldShowEmptyState && !isV2Enabled}>
          <TemplatesListNoData
            readonly={readonly}
            blueprints={popular?.blueprints}
            isLoading={areBlueprintsLoading}
            isCreating={isCreatingTemplateFromBlueprint}
            allTemplatesDisabled={areBlueprintsLoading || !hasGroups}
            onBlankWorkflowClick={() => handleRedirectToCreateTemplate(false)}
            onTemplateClick={handleOnBlueprintClick}
            onAllTemplatesClick={openModal}
          />
        </When>

        <When truthy={shouldShowEmptyState && isV2Enabled}>
          <div
            className={css({
              color: colors.B40,
              fontSize: '18px',
              lineHeight: '22px',
              textAlign: 'center',
              maxWidth: '600px',
              margin: '0 auto',
              marginTop: '80px',
            })}
          >
            To create a workflow in this environment, you need to create a workflow using the @novu/framework and sync
            it using the {readonly ? 'production' : 'development'} secret key.
          </div>
        </When>

        <TemplatesStoreModal />
      </TemplateListTableWrapper>
    </ListPage>
  );
}

export default WorkflowListPage;

const ActionButtonWrapper = styled.div`
  text-align: right;
  padding-right: 8px;
  a {
    display: inline-block;
    opacity: 0;
    transition: opacity 0.1s ease-in;
  }
`;

const TemplateListTableWrapper = styled.div`
  tr:hover {
    ${ActionButtonWrapper} {
      a {
        opacity: 1;
      }
    }
  }
`;

const StyledTag = styled(Tag)`
  max-width: 100%;

  span {
    max-width: 100%;
  }
`;

const TableActionsContainer = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ChangeEventHandler, useMemo, useState } from 'react';
import { ActionIcon, useMantineTheme, Group } from '@mantine/core';
import { createSearchParams, Link, useLocation, useNavigate } from 'react-router-dom';
import styled from '@emotion/styled';
import { format } from 'date-fns';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/constants.tsx
Tamaño: 3382 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Bell, Bolt, Chat, DigestGradient, IconSpeed, Mail, Mobile, Sms, TimerGradient } from '@novu/design-system';
import { ChannelTypeEnum, StepTypeEnum } from '@novu/shared';

export enum TemplateAnalyticsEnum {
  CREATE_TEMPLATE_CLICK = 'Create Template Click - [Templates]',
  TRY_DIGEST_CLICK = 'Try Digest Click - [Templates]',
}

export enum TemplateEditorAnalyticsEnum {
  CONFIGURE_PROVIDER_BANNER_CLICK = 'Configure Provider Banner Click - [Template Editor]',
  CONFIGURE_PRIMARY_PROVIDER_BANNER_CLICK = 'Configure Primary Provider Banner Click - [Template Editor]',
  CONFIGURE_PROVIDER_POPOVER_CLICK = 'Configure Provider Popover Click - [Template Editor]',
}

export enum DigestPlaygroundAnalyticsEnum {
  BACK_BUTTON_CLICK = 'Back Button Click - [Digest Playground]',
  SETUP_DIGEST_WORKFLOW_CLICK = 'Set Up Digest Workflow Click - [Digest Playground]',
  LEARN_MORE_IN_DOCS_CLICK = 'Learn More In Docs Click - [Digest Playground]',
  RUN_TRIGGER_CLICK = 'Run Trigger Click - [Digest Playground]',
  DIGEST_INTERVAL_CHANGE = 'Digest Interval Change - [Digest Playground]',
}

export enum DigestWorkflowTourAnalyticsEnum {
  FIRST_HINT_NEXT_CLICK = 'First Hint Next Click - [Digest Workflow Tour]',
  SECOND_HINT_NEXT_CLICK = 'Second Hint Next Click - [Digest Workflow Tour]',
  THIRD_HINT_GOT_IT_CLICK = 'Third Hint Got It Click - [Digest Workflow Tour]',
  HINT_SKIP_TOUR_CLICK = 'Hint Skip Tour Click - [Digest Workflow Tour]',
  NAVIGATE_HINT_CLICK = 'Navigate Hint Click - [Digest Workflow Tour]',
}

export const HINT_INDEX_TO_CLICK_ANALYTICS = {
  0: DigestWorkflowTourAnalyticsEnum.FIRST_HINT_NEXT_CLICK,
  1: DigestWorkflowTourAnalyticsEnum.SECOND_HINT_NEXT_CLICK,
  2: DigestWorkflowTourAnalyticsEnum.THIRD_HINT_GOT_IT_CLICK,
};

export const ordinalNumbers = {
  1: 'first',
  2: 'second',
  3: 'third',
  4: 'fourth',
  5: 'fifth',
  6: 'sixth',
  7: 'seventh',
  8: 'eighth',
  9: 'ninth',
  10: 'tenth',
};

export const stepNames: Record<StepTypeEnum, string> = {
  email: 'Email',
  chat: 'Chat',
  in_app: 'In-App',
  sms: 'SMS',
  push: 'Push',
  digest: 'Digest',
  delay: 'Delay',
  trigger: 'Trigger',
  throttle: 'Throttle',
  custom: 'Custom',
};

export const stepIcon: Record<StepTypeEnum | ChannelTypeEnum, (...args: any[]) => JSX.Element> = {
  email: Mail,
  chat: Chat,
  in_app: Bell,
  sms: Sms,
  push: Mobile,
  digest: DigestGradient,
  delay: TimerGradient,
  trigger: () => <></>,
  throttle: IconSpeed,
  custom: Bolt,
};

export enum StartFromScratchTourAnalyticsEnum {
  FIRST_HINT_NEXT_CLICK = 'First Hint Next Click - [Start From Scratch Tour]',
  SECOND_HINT_NEXT_CLICK = 'Second Hint Next Click - [Start From Scratch Tour]',
  THIRD_HINT_NEXT_CLICK = 'Third Hint Next Click - [Start From Scratch Tour]',
  FOURTH_HINT_NEXT_CLICK = 'Fourth Hint Next Click - [Start From Scratch Tour]',
  FIFTH_HINT_GOT_IT_CLICK = 'Fifth Hint Got It Click - [Start From Scratch Tour]',
  WATCH_LATER_TOUR_CLICK = 'Watch Later Tour Click - [Start From Scratch Tour]',
}

export const SCRATCH_HINT_INDEX_TO_CLICK_ANALYTICS = {
  0: StartFromScratchTourAnalyticsEnum.FIRST_HINT_NEXT_CLICK,
  1: StartFromScratchTourAnalyticsEnum.SECOND_HINT_NEXT_CLICK,
  2: StartFromScratchTourAnalyticsEnum.THIRD_HINT_NEXT_CLICK,
  3: StartFromScratchTourAnalyticsEnum.FOURTH_HINT_NEXT_CLICK,
  4: StartFromScratchTourAnalyticsEnum.FIFTH_HINT_GOT_IT_CLICK,
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Bell, Bolt, Chat, DigestGradient, IconSpeed, Mail, Mobile, Sms, TimerGradient } from '@novu/design-system';
import { ChannelTypeEnum, StepTypeEnum } from '@novu/shared';
export enum TemplateAnalyticsEnum {
CREATE_TEMPLATE_CLICK = 'Create Template Click - [Templates]',
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/BlueprintModal.tsx
Tamaño: 4395 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Modal, useMantineTheme, Center, Loader } from '@mantine/core';
import { useQuery, useMutation } from '@tanstack/react-query';
import { useNavigate } from 'react-router-dom';
import { useEffect, useState } from 'react';

import { IResponseError, IUserEntity, WorkflowCreationSourceEnum } from '@novu/shared';
import { colors, shadows, Title, Text, Button } from '@novu/design-system';

import { updateUserOnBoarding } from '../../../api/user';
import { getBlueprintTemplateById } from '../../../api/notification-templates';
import { errorMessage } from '../../../utils/notifications';
import { When } from '../../../components/utils/When';
import { useSegment } from '../../../components/providers/SegmentProvider';
import { useCreateTemplateFromBlueprint } from '../../../api/hooks';
import { ROUTES } from '../../../constants/routes';

export function BlueprintModal() {
  const theme = useMantineTheme();
  const navigate = useNavigate();
  const segment = useSegment();
  const onClose = () => {
    segment.track('Blueprint canceled', {
      blueprintId: localStorage.getItem('blueprintId'),
    });
    navigate(ROUTES.WORKFLOWS, {
      replace: true,
    });
    localStorage.removeItem('blueprintId');
  };

  const { mutateAsync: updateOnBoardingStatus } = useMutation<IUserEntity, IResponseError, { showOnBoarding: boolean }>(
    ({ showOnBoarding }) => updateUserOnBoarding(showOnBoarding)
  );

  async function disableOnboarding() {
    await updateOnBoardingStatus({ showOnBoarding: false });
  }

  const [blueprintId, setBluePrintId] = useState<undefined | string>();
  const id = localStorage.getItem('blueprintId');

  useEffect(() => {
    setBluePrintId(id === null ? undefined : id);
  }, [id]);

  const { data: blueprint, isInitialLoading: isBluePrintLoading } = useQuery(
    ['blueprint', blueprintId],
    () => getBlueprintTemplateById(blueprintId as string),
    {
      enabled: !!blueprintId,
      onError: onClose,
    }
  );

  const { createTemplateFromBlueprint, isLoading: isCreating } = useCreateTemplateFromBlueprint({
    onSuccess: (template) => {
      if (template) {
        disableOnboarding();
        navigate(`/workflows/edit/${template?._id}`, {
          replace: true,
        });
      }
      localStorage.removeItem('blueprintId');
    },
    onError: (err: any) => {
      if (err?.message) {
        errorMessage(err?.message);
      }
      onClose();
    },
  });

  const isLoading = isBluePrintLoading || isCreating;

  return (
    <>
      <Modal
        opened={blueprintId !== undefined}
        overlayColor={theme.colorScheme === 'dark' ? colors.BGDark : colors.BGLight}
        overlayOpacity={0.7}
        styles={{
          modal: {
            backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.white,
          },
          body: {
            paddingTop: '5px',
          },
          inner: {
            paddingTop: '180px',
          },
        }}
        withCloseButton={!isLoading}
        closeOnClickOutside={!isLoading}
        title={
          <Title size={2}>
            {isBluePrintLoading ? 'Loading template' : `Create the ${blueprint?.name} notification flow!`}
          </Title>
        }
        sx={{ backdropFilter: 'blur(1px)' }}
        shadow={theme.colorScheme === 'dark' ? shadows.dark : shadows.medium}
        radius="md"
        size="lg"
        onClose={onClose}
      >
        <When truthy={isLoading}>
          <Center>
            <Loader color={colors.B70} mb={20} mt={20} size={32} />
          </Center>
        </When>
        <When truthy={!isLoading}>
          <Text mb={16}>Feel free to modify the flow by dragging and dropping steps onto the canvas.</Text>
          <Text weight="bold" data-test-id="blueprint-name" mb={16}>
            {blueprint?.name}:
          </Text>
          <Text data-test-id="blueprint-description" mb={16}>
            {blueprint?.description ?? ''}
          </Text>
          <Button
            data-test-id="create-from-blueprint"
            onClick={() => {
              if (blueprint) {
                createTemplateFromBlueprint({
                  blueprint,
                  params: { __source: WorkflowCreationSourceEnum.NOTIFICATION_DIRECTORY },
                });
              }
            }}
          >
            Create the flow!
          </Button>
        </When>
      </Modal>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Modal, useMantineTheme, Center, Loader } from '@mantine/core';
import { useQuery, useMutation } from '@tanstack/react-query';
import { useNavigate } from 'react-router-dom';
import { useEffect, useState } from 'react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/ChannelPreview.tsx
Tamaño: 1635 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { StepTypeEnum } from '@novu/shared';
import { useParams } from 'react-router-dom';
import { ChatPreview, EmailPreview, InAppPreview, PushPreview, SmsPreview } from '../../../components/workflow/preview';

import { useNavigateFromEditor } from '../hooks/useNavigateFromEditor';
import { useStepIndex } from '../hooks/useStepIndex';
import { ChannelPreviewSidebar } from './ChannelPreviewSidebar';
import { TemplateCustomEditor } from './custom-editor/TemplateCustomEditor';

export const PreviewComponent = ({ channel }: { channel: StepTypeEnum }) => {
  switch (channel) {
    case StepTypeEnum.EMAIL:
      return <EmailPreview view="web" showVariables={false} />;

    case StepTypeEnum.TRIGGER:
      return <>TRIGGER</>;

    case StepTypeEnum.SMS:
      return <SmsPreview />;

    case StepTypeEnum.IN_APP:
      return <InAppPreview showVariables={false} />;

    case StepTypeEnum.CHAT:
      return <ChatPreview />;

    case StepTypeEnum.PUSH:
      return <PushPreview />;

    case StepTypeEnum.DELAY:
      return <>DELAY</>;

    case StepTypeEnum.DIGEST:
      return <>DIGEST</>;

    case StepTypeEnum.CUSTOM:
      return <TemplateCustomEditor />;

    default:
      return <>Unknown Step</>;
  }
};

export const ChannelPreview = () => {
  const { channel } = useParams<{
    channel: StepTypeEnum | undefined;
  }>();
  const { stepIndex } = useStepIndex();

  useNavigateFromEditor(true);

  if (stepIndex === -1 || channel === undefined) {
    return null;
  }

  return (
    <>
      <ChannelPreviewSidebar>
        <PreviewComponent channel={channel} />
      </ChannelPreviewSidebar>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { StepTypeEnum } from '@novu/shared';
import { useParams } from 'react-router-dom';
import { ChatPreview, EmailPreview, InAppPreview, PushPreview, SmsPreview } from '../../../components/workflow/preview';
import { useNavigateFromEditor } from '../hooks/useNavigateFromEditor';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/ChannelPreviewSidebar.tsx
Tamaño: 1689 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ReactNode } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { StepTypeEnum } from '@novu/shared';
import { Sidebar } from '@novu/design-system';

import { useStepIndex } from '../hooks/useStepIndex';
import { StepName } from './StepName';
import { useBasePath } from '../hooks/useBasePath';
import { EditorSidebarHeaderActions } from './EditorSidebarHeaderActions';
import { useStepVariantsCount } from '../hooks/useStepVariantsCount';
import { useNavigateToVariantPreview } from '../hooks/useNavigateToVariantPreview';

const StepSidebarHeader = () => {
  const { channel } = useParams<{
    channel: StepTypeEnum;
  }>();

  if (!channel) {
    return null;
  }

  return (
    <div style={{ display: 'flex', width: '100%', gap: 12 }}>
      <StepName channel={channel} />
      <EditorSidebarHeaderActions preview />
    </div>
  );
};

export const ChannelPreviewSidebar = ({ children }: { children: ReactNode }) => {
  const { stepUuid } = useParams<{
    stepUuid: string;
  }>();
  const navigate = useNavigate();
  const basePath = useBasePath();
  const { navigateToVariantPreview } = useNavigateToVariantPreview();
  const { stepIndex, variantIndex } = useStepIndex();
  const { variantsCount } = useStepVariantsCount();
  const key = `${stepIndex}_${variantIndex}`;

  return (
    <Sidebar
      key={key}
      isOpened
      customHeader={<StepSidebarHeader />}
      onClose={() => {
        if (variantsCount > 0) {
          navigateToVariantPreview({ variantUuid: stepUuid });

          return;
        }
        navigate(basePath);
      }}
      data-test-id="step-editor-sidebar"
    >
      {children}
    </Sidebar>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ReactNode } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { StepTypeEnum } from '@novu/shared';
import { Sidebar } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/ChannelStepEditor.tsx
Tamaño: 2327 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useParams } from 'react-router-dom';
import { StepTypeEnum, ResourceTypeEnum, isBridgeWorkflow } from '@novu/shared';

import { EmailMessagesCards } from './email-editor/EmailMessagesCards';
import { TemplateInAppEditor } from './in-app-editor/TemplateInAppEditor';
import { TemplateSMSEditor } from './sms-editor/TemplateSMSEditor';
import { TemplatePushEditor } from './TemplatePushEditor';
import { TemplateChatEditor } from './chat-editor/TemplateChatEditor';
import { StepEditorSidebar } from './StepEditorSidebar';
import { DigestMetadata } from '../workflow/DigestMetadata';
import { DelayMetadata } from '../workflow/DelayMetadata';
import { useStepIndex } from '../hooks/useStepIndex';
import { useNavigateFromEditor } from '../hooks/useNavigateFromEditor';
import { TemplateCustomEditor } from './custom-editor/TemplateCustomEditor';
import { useTemplateEditorForm } from './TemplateEditorFormProvider';

export const ChannelStepEditor = () => {
  const { channel } = useParams<{
    channel: StepTypeEnum | undefined;
  }>();
  const { stepIndex, step } = useStepIndex();
  const { template } = useTemplateEditorForm();

  useNavigateFromEditor();

  if (stepIndex === -1 || channel === undefined) {
    return null;
  }

  if (channel === StepTypeEnum.IN_APP) {
    return (
      <StepEditorSidebar>
        <TemplateInAppEditor />
      </StepEditorSidebar>
    );
  }

  if (channel === StepTypeEnum.EMAIL) {
    return (
      <StepEditorSidebar>
        <EmailMessagesCards />
      </StepEditorSidebar>
    );
  }

  if (channel === StepTypeEnum.CUSTOM) {
    return (
      <StepEditorSidebar>
        <TemplateCustomEditor />
      </StepEditorSidebar>
    );
  }

  if (isBridgeWorkflow(template?.type) && (channel === StepTypeEnum.DIGEST || channel === StepTypeEnum.DELAY)) {
    return (
      <StepEditorSidebar>
        <TemplateCustomEditor />
      </StepEditorSidebar>
    );
  }

  return (
    <>
      <StepEditorSidebar>
        {channel === StepTypeEnum.SMS && <TemplateSMSEditor />}
        {channel === StepTypeEnum.PUSH && <TemplatePushEditor />}
        {channel === StepTypeEnum.CHAT && <TemplateChatEditor />}
        {channel === StepTypeEnum.DIGEST && <DigestMetadata />}
        {channel === StepTypeEnum.DELAY && <DelayMetadata />}
      </StepEditorSidebar>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useParams } from 'react-router-dom';
import { StepTypeEnum, ResourceTypeEnum, isBridgeWorkflow } from '@novu/shared';
import { EmailMessagesCards } from './email-editor/EmailMessagesCards';
import { TemplateInAppEditor } from './in-app-editor/TemplateInAppEditor';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/ChannelTitle.tsx
Tamaño: 1811 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import { ChannelTypeEnum, StepTypeEnum } from '@novu/shared';
import { Chat, DigestGradient, InApp, Mail, Mobile, Sms, TimerGradient } from '@novu/design-system';

export const ChannelTitle = ({
  channel,
  spacing = 16,
  color = undefined,
}: {
  channel: StepTypeEnum | ChannelTypeEnum;
  spacing?: number;
  color?: any;
}) => {
  if (channel === StepTypeEnum.EMAIL || channel === ChannelTypeEnum.EMAIL) {
    return (
      <Group align="center" spacing={spacing}>
        <Mail color={color} /> <span>Email</span>
      </Group>
    );
  }

  if (channel === StepTypeEnum.IN_APP || channel === ChannelTypeEnum.IN_APP) {
    return (
      <Group align="center" spacing={spacing}>
        <InApp color={color} /> <span>In-App</span>
      </Group>
    );
  }

  if (channel === StepTypeEnum.CHAT || channel === ChannelTypeEnum.CHAT) {
    return (
      <Group align="center" spacing={spacing}>
        <Chat color={color} /> <span>Chat</span>
      </Group>
    );
  }

  if (channel === StepTypeEnum.PUSH || channel === ChannelTypeEnum.PUSH) {
    return (
      <Group align="center" spacing={spacing}>
        <Mobile color={color} /> <span>Push</span>
      </Group>
    );
  }

  if (channel === StepTypeEnum.SMS || channel === ChannelTypeEnum.SMS) {
    return (
      <Group align="center" spacing={spacing}>
        <Sms color={color} /> <span>SMS</span>
      </Group>
    );
  }

  if (channel === StepTypeEnum.DELAY) {
    return (
      <Group align="center" spacing={spacing}>
        <TimerGradient /> <span>Delay</span>
      </Group>
    );
  }

  if (channel === StepTypeEnum.DIGEST) {
    return (
      <Group align="center" spacing={spacing}>
        <DigestGradient /> <span>Digest</span>
      </Group>
    );
  }

  return <>{channel}</>;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import { ChannelTypeEnum, StepTypeEnum } from '@novu/shared';
import { Chat, DigestGradient, InApp, Mail, Mobile, Sms, TimerGradient } from '@novu/design-system';
export const ChannelTitle = ({
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/ControlVariablesForm.tsx
Tamaño: 1180 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMemo } from 'react';
import { useFormContext } from 'react-hook-form';
import { IS_SELF_HOSTED } from '../../../config/index';
import { useStepFormPath } from '../hooks/useStepFormPath';
import { useTemplateEditorForm } from './TemplateEditorFormProvider';
import { ControlVariablesForm as Component } from '../../../ee/editor/index';

export const ControlVariablesForm = ({ onChange }: { onChange?: (data: any) => void }) => {
  const stepFormPath = useStepFormPath();
  const { watch } = useFormContext();
  const { template } = useTemplateEditorForm();
  const controls = watch(`${stepFormPath}.template.controls.schema`) || {};
  const workflowPayloadSchema = watch(`payloadSchema`) || {};

  const stepId = watch(`${stepFormPath}.stepId`);
  const _stepId = watch(`${stepFormPath}._id`);
  const formData = useMemo(() => {
    return {
      _workflowId: template?._id,
      workflowId: template?.triggers[0].identifier,
      stepId,
      _stepId,
    };
  }, [stepId, _stepId, template]);

  if (IS_SELF_HOSTED) {
    return null;
  }

  return <Component payloadSchema={workflowPayloadSchema} schema={controls} formData={formData} onChange={onChange} />;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMemo } from 'react';
import { useFormContext } from 'react-hook-form';
import { IS_SELF_HOSTED } from '../../../config/index';
import { useStepFormPath } from '../hooks/useStepFormPath';
import { useTemplateEditorForm } from './TemplateEditorFormProvider';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/CreateWorkflowDropdown.tsx
Tamaño: 5099 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { Skeleton } from '@mantine/core';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faFile } from '@fortawesome/free-regular-svg-icons';
import { faDiagramNext } from '@fortawesome/free-solid-svg-icons';
import styled from '@emotion/styled';

import { Dropdown, PlusButton, Popover } from '@novu/design-system';
import { FeatureFlagsKeysEnum, WorkflowCreationSourceEnum } from '@novu/shared';
import { Button } from '@novu/novui';
import { IconOutlineAdd } from '@novu/novui/icons';

import { IBlueprintTemplate } from '../../../api/types';
import { useSegment } from '../../../components/providers/SegmentProvider';
import { useFeatureFlag, useHoverOverItem } from '../../../hooks';
import { FrameworkProjectDropDownItem } from './FrameworkProjectWaitList';
import { useDocsModal } from '../../../components/docs/useDocsModal';
import { PATHS } from '../../../components/docs/docs.const';

const WIDTH = 172;

const DropdownItemSkeleton = styled(Skeleton)`
  margin-bottom: 4px;
  width: 100%;
  height: 42px;
`;

export const CreateWorkflowDropdown = ({
  readonly,
  blueprints,
  isLoading,
  isCreating,
  allTemplatesDisabled,
  onBlankWorkflowClick,
  onTemplateClick,
  onAllTemplatesClick,
}: {
  readonly?: boolean;
  blueprints?: IBlueprintTemplate[];
  isLoading?: boolean;
  isCreating?: boolean;
  allTemplatesDisabled?: boolean;
  onBlankWorkflowClick: React.MouseEventHandler<HTMLButtonElement>;
  onTemplateClick: (template: IBlueprintTemplate) => void;
  onAllTemplatesClick: React.MouseEventHandler<HTMLButtonElement>;
}) => {
  const isV2Enabled = useFeatureFlag(FeatureFlagsKeysEnum.IS_V2_ENABLED);
  const segment = useSegment();
  const { item: templateId, onMouseEnter, onMouseLeave } = useHoverOverItem<string>();
  const { toggle, setPath, Component } = useDocsModal();

  useEffect(() => {
    if (!isV2Enabled) {
      return;
    }
    setPath(PATHS.WORKFLOW_INTRODUCTION);
  }, [isV2Enabled]);

  if (isV2Enabled) {
    return (
      <>
        <Button onClick={toggle} Icon={IconOutlineAdd} variant="transparent">
          Add workflow
        </Button>
        <Component />
      </>
    );
  }

  return (
    <Dropdown
      position="bottom-start"
      disabled={readonly}
      withArrow={false}
      width={WIDTH}
      styles={{
        itemLabel: { textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' },
      }}
      control={
        <div>
          <PlusButton disabled={readonly} label="Add a workflow" data-test-id="create-workflow-btn" />
        </div>
      }
      data-test-id="create-workflow-dropdown"
    >
      <Dropdown.Item
        icon={<FontAwesomeIcon icon={faFile} />}
        onClick={(event) => {
          segment.track('[Template Store] Click Create Notification Template', {
            templateIdentifier: 'Blank Workflow',
            location: WorkflowCreationSourceEnum.DROPDOWN,
          });

          onBlankWorkflowClick(event);
        }}
        data-test-id="create-workflow-blank"
      >
        Blank workflow
      </Dropdown.Item>
      <FrameworkProjectDropDownItem />
      <Dropdown.Divider />
      {isLoading
        ? Array.from({ length: 3 }).map((_, index) => <DropdownItemSkeleton key={index} />)
        : blueprints?.map((template, index) => (
            <Popover
              key={template.name}
              opened={template._id === templateId && !!template.description}
              withArrow
              withinPortal
              offset={5}
              transitionDuration={300}
              position="left"
              width={300}
              styles={{ dropdown: { minHeight: 'auto !important' } }}
              target={
                <Dropdown.Item
                  disabled={isCreating}
                  icon={<FontAwesomeIcon icon={template.iconName} />}
                  onClick={() => {
                    segment.track('[Template Store] Click Create Notification Template', {
                      templateIdentifier: template?.triggers[0]?.identifier || '',
                      location: WorkflowCreationSourceEnum.DROPDOWN,
                    });

                    onTemplateClick(template);
                  }}
                  onMouseEnter={() => {
                    onMouseEnter(template._id);
                  }}
                  onMouseLeave={onMouseLeave}
                  data-test-id="create-template-dropdown-item"
                >
                  {template.name}
                </Dropdown.Item>
              }
              content={template.description}
            />
          ))}
      <Dropdown.Item
        disabled={allTemplatesDisabled}
        icon={<FontAwesomeIcon icon={faDiagramNext} />}
        onClick={(event) => {
          segment.track('[Template Store] Click Open Template Store', {
            location: WorkflowCreationSourceEnum.DROPDOWN,
          });

          onAllTemplatesClick(event);
        }}
        data-test-id="create-workflow-all-templates"
      >
        All templates
      </Dropdown.Item>
    </Dropdown>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect } from 'react';
import { Skeleton } from '@mantine/core';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faFile } from '@fortawesome/free-regular-svg-icons';
import { faDiagramNext } from '@fortawesome/free-solid-svg-icons';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/CustomCodeEditor.css
Tamaño: 1986 bytes
Lenguaje detectado: CSS

### CONTENIDO ORIGINAL ###

.custom-code-editor-dark .monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused {
  color: #fff !important;
}

.custom-code-editor-dark .monaco-editor .suggest-widget .monaco-list .monaco-list-row:hover {
  background-color: #828299 !important;
}

.custom-code-editor-dark
  .monaco-editor
  .suggest-widget
  .monaco-list
  .monaco-list-row:not(.focused)
  > .contents
  > .main
  .monaco-icon-label {
  color: #fff !important;
}

.custom-code-editor-dark
  .monaco-editor
  .suggest-widget
  .monaco-list
  .monaco-list-row
  > .contents
  > .main
  .monaco-highlighted-label
  .highlight {
  color: #fff !important;
}

.custom-code-editor-dark
  .monaco-editor
  .suggest-widget
  .monaco-list
  .monaco-list-row.focused
  > .contents
  > .main
  .monaco-highlighted-label
  .highlight {
  color: #fff !important;
}

.custom-code-editor .monaco-editor .overflow-guard {
  border-radius: 10px !important;
}

.custom-code-editor
  .monaco-editor
  .suggest-widget
  .monaco-list
  .monaco-list-row.focused
  > .contents
  > .main
  .monaco-highlighted-label
  .highlight {
  color: #525266 !important;
}

.custom-code-editor
  .monaco-editor
  .suggest-widget
  .monaco-list
  .monaco-list-row
  > .contents
  > .main
  .monaco-highlighted-label
  .highlight {
  color: #525266 !important;
}

.custom-code-editor
  .monaco-editor
  .suggest-widget
  .monaco-list
  .monaco-list-row:not(.focused)
  > .contents
  > .main
  .monaco-icon-label {
  color: #525266 !important;
}

.custom-code-editor .monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused {
  color: #525266 !important;
}

.markerWarningText {
  color: #eaa900 !important;
}

.markerWiggledLine {
  background-image: url('/public/warning-underline.png');
  background-repeat: repeat-x;
  background-position-x: center;
  background-position-y: 1.1em;
}

.markerGlyphWarning {
  background-image: url('/public/warning.png');
  background-repeat: no-repeat;
  background-position: center center;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

.custom-code-editor-dark .monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused {
color: #fff !important;
}
.custom-code-editor-dark .monaco-editor .suggest-widget .monaco-list .monaco-list-row:hover {
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/CustomCodeEditor.tsx
Tamaño: 5271 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import './CustomCodeEditor.css';
import { Editor, Monaco } from '@monaco-editor/react';
import { Card, Loader, useMantineColorScheme } from '@mantine/core';
import { useCallback, useEffect, useRef } from 'react';
import { colors } from '@novu/design-system';
import { editor as NEditor } from 'monaco-editor';

import { createTranslationMarks } from './createTranslationMarks';
import { IVariable, useWorkflowVariables } from '../../../api/hooks';
import { useEnvironment } from '../../../hooks';

export const CustomCodeEditor = ({
  onChange,
  value,
  height = '300px',
}: {
  onChange?: (string) => void;
  value?: string;
  height?: string;
}) => {
  const { allVariables, variables, isLoading: isLoadingVariables } = useWorkflowVariables();

  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';

  if (isLoadingVariables) {
    return (
      <Card data-test-id={'custom-code-editor'} withBorder sx={styledCard}>
        <Loader />
      </Card>
    );
  }

  return (
    <Card data-test-id={'custom-code-editor'} withBorder sx={styledCard}>
      <CustomCodeEditorBase
        isDark={isDark}
        allVariables={allVariables}
        variables={variables}
        onChange={onChange}
        value={value}
        height={height}
      />
    </Card>
  );
};

const CustomCodeEditorBase = ({
  onChange,
  value,
  height = '300px',
  allVariables,
  variables,
  isDark,
}: {
  onChange?: (string) => void;
  value?: string;
  height?: string;
  allVariables: IVariable[];
  variables: any;
  isDark: boolean;
}) => {
  const { readonly } = useEnvironment();

  const editorRef = useRef<NEditor.IStandaloneCodeEditor | null>(null);
  const monacoRef = useRef<Monaco | null>(null);
  const decoratorsRef = useRef<NEditor.IEditorDecorationsCollection | null>(null);

  useEffect(() => {
    if (monacoRef.current === null) {
      return;
    }
    monacoRef.current.editor.setTheme(isDark ? 'novu-dark' : 'novu');
  }, [isDark]);

  const getSuggestions = useCallback(
    (monaco, range) => allVariables.map((el) => ({ ...el, kind: monaco.languages.CompletionItemKind.Function, range })),
    [allVariables]
  );

  return (
    <Editor
      value={value}
      height={height}
      onChange={(newValue) => {
        if (!onChange) {
          return;
        }
        onChange(newValue);
        const decorators = createTranslationMarks(newValue, variables);
        decoratorsRef.current?.set(decorators);
      }}
      defaultLanguage="handlebars"
      defaultValue={''}
      theme={isDark ? 'vs-dark' : 'vs'}
      onMount={(editor, monaco) => {
        const decorators = editor.createDecorationsCollection([]);

        const handle = monaco.languages.registerCompletionItemProvider('handlebars', {
          triggerCharacters: ['{'],
          provideCompletionItems(model, position) {
            const word = model.getWordUntilPosition(position);
            const range = {
              startLineNumber: position.lineNumber,
              endLineNumber: position.lineNumber,
              startColumn: word.startColumn,
              endColumn: word.endColumn,
            };

            const suggestions = getSuggestions(monaco, range);

            return {
              suggestions,
            };
          },
        });

        const themeName = isDark ? 'novu-dark' : 'novu';
        monaco.editor.defineTheme('novu-dark', {
          base: 'vs-dark',
          inherit: true,
          rules: [],
          colors: {
            'editor.background': colors.B20,
            'editor.lineHighlightBackground': colors.B30,
            'editorSuggestWidget.background': colors.B30,
            'editorSuggestWidget.foreground': colors.B60,
            'editorSuggestWidget.selectedBackground': colors.B60,
            'editorSuggestWidget.highlightForeground': colors.B60,
          },
        });

        monaco.editor.defineTheme('novu', {
          base: 'vs',
          inherit: true,
          rules: [],
          colors: {
            'editor.background': colors.white,
            'editor.lineHighlightBackground': colors.B98,
            'editorSuggestWidget.background': colors.white,
            'editorSuggestWidget.foreground': colors.B98,
            'editorSuggestWidget.selectedBackground': colors.B98,
            'editorSuggestWidget.highlightForeground': colors.B98,
          },
        });

        monaco.editor.setTheme(themeName);

        decoratorsRef.current = decorators;
        editorRef.current = editor;
        monacoRef.current = monaco;
        editor.onDidDispose(() => handle?.dispose());
      }}
      options={{
        minimap: {
          enabled: false,
        },
        // workaround from: https://github.com/microsoft/monaco-editor/issues/2093
        accessibilitySupport: 'off',
        glyphMargin: true,
        renderLineHighlight: 'all',
        fontSize: 14,
        lineHeight: 20,
        readOnly: readonly,
      }}
      className={isDark ? 'custom-code-editor-dark' : 'custom-code-editor'}
    />
  );
};

const styledCard = (theme) => ({
  backgroundColor: 'transparent',
  borderRadius: '7px',
  borderColor: theme.colorScheme === 'dark' ? colors.B30 : colors.B80,
  padding: '30px',
  overflow: 'visible',
  height: '300px',
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import './CustomCodeEditor.css';
import { Editor, Monaco } from '@monaco-editor/react';
import { Card, Loader, useMantineColorScheme } from '@mantine/core';
import { useCallback, useEffect, useRef } from 'react';
import { colors } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/DeleteConfirmModal.tsx
Tamaño: 2318 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Alert, Group, Modal, useMantineTheme } from '@mantine/core';
import { Button, colors, shadows, Title, Text, IconOutlineWarning } from '@novu/design-system';

export function DeleteConfirmModal({
  target,
  title,
  description,
  isOpen,
  cancel,
  confirm,
  confirmButtonText = 'Yes',
  cancelButtonText = 'No',
  isLoading,
  error,
}: {
  target?: string;
  isOpen: boolean;
  cancel: () => void;
  confirm: () => void;
  isLoading?: boolean;
  error?: string;
  title?: string;
  description?: string;
  confirmButtonText?: string;
  cancelButtonText?: string;
}) {
  const theme = useMantineTheme();
  const targetText = target ? ` ${target}` : '';

  return (
    <>
      <Modal
        opened={isOpen}
        overlayColor={theme.colorScheme === 'dark' ? colors.BGDark : colors.BGLight}
        overlayOpacity={0.7}
        styles={{
          root: {
            zIndex: 201, // because the editor sidebar has z-index 200
          },
          modal: {
            backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.white,
          },
          body: {
            paddingTop: '5px',
          },
          inner: {
            paddingTop: '180px',
          },
        }}
        title={<Title size={2}>{title || `Delete${targetText}`}</Title>}
        sx={{ backdropFilter: 'blur(10px)' }}
        shadow={theme.colorScheme === 'dark' ? shadows.dark : shadows.medium}
        radius="md"
        size="lg"
        onClose={() => {
          cancel();
        }}
      >
        <div>
          {error && (
            <Alert
              icon={<IconOutlineWarning size={'16'} />}
              title="An error occurred!"
              color={`linear-gradient(0deg, ${colors.B17} 0%, ${colors.B17} 100%)`}
              mb={32}
            >
              {error}
            </Alert>
          )}
          <Text>{description || `Would you like to delete this${targetText}?`}</Text>
          <Group position="right">
            <Button variant="outline" size="md" mt={30} onClick={() => cancel()}>
              {cancelButtonText}
            </Button>
            <Button mt={30} size="md" onClick={() => confirm()} loading={isLoading} data-autofocus>
              {confirmButtonText}
            </Button>
          </Group>
        </div>
      </Modal>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Alert, Group, Modal, useMantineTheme } from '@mantine/core';
import { Button, colors, shadows, Title, Text, IconOutlineWarning } from '@novu/design-system';
export function DeleteConfirmModal({
target,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/EditVariablesModal.tsx
Tamaño: 1571 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { colors, shadows, Button } from '@novu/design-system';
import { Group, Modal, Title, useMantineTheme } from '@mantine/core';
import { VariableManager } from './VariableManager';
import { useStepFormPath } from '../hooks/useStepFormPath';

export const EditVariablesModal = ({
  open,
  setOpen,
  variablesArray,
}: {
  open: boolean;
  setOpen: (open: boolean) => void;
  variablesArray: Record<string, any>;
}) => {
  const theme = useMantineTheme();
  const stepFormPath = useStepFormPath();

  return (
    <Modal
      opened={open}
      overlayColor={theme.colorScheme === 'dark' ? colors.BGDark : colors.BGLight}
      overlayOpacity={0.7}
      styles={{
        modal: {
          backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.white,
          width: '90%',
        },
        body: {
          paddingTop: '5px',
          paddingInline: '8px',
        },
      }}
      title={<Title>Variables</Title>}
      sx={{ backdropFilter: 'blur(10px)' }}
      shadow={theme.colorScheme === 'dark' ? shadows.dark : shadows.medium}
      radius="md"
      size="lg"
      onClose={() => {
        setOpen(false);
      }}
      centered
      overflow="inside"
    >
      <VariableManager hideLabel={true} variablesArray={variablesArray} path={`${stepFormPath}.template`} />
      <Group position="right">
        <Button
          data-test-id="close-var-manager-modal"
          mt={30}
          onClick={() => {
            setOpen(false);
          }}
        >
          Close
        </Button>
      </Group>
    </Modal>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { colors, shadows, Button } from '@novu/design-system';
import { Group, Modal, Title, useMantineTheme } from '@mantine/core';
import { VariableManager } from './VariableManager';
import { useStepFormPath } from '../hooks/useStepFormPath';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/EditorPreviewSwitch.tsx
Tamaño: 1638 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { SegmentedControl, useMantineTheme } from '@mantine/core';
import { colors } from '@novu/design-system';
import { useMemo } from 'react';
import { ViewEnum } from './email-editor/EmailMessagesCards';

export const EditorPreviewSwitch = ({ view, setView, bridge = false }) => {
  const theme = useMantineTheme();

  const views = useMemo(() => {
    const all = Object.values(ViewEnum);

    if (bridge) {
      return all.filter((item) => item !== ViewEnum.CODE && item !== ViewEnum.EDIT && item !== ViewEnum.CONTROLS);
    }

    return all.filter((item) => item !== ViewEnum.CODE && item !== ViewEnum.CONTROLS);
  }, [bridge]);

  return (
    <SegmentedControl
      data-test-id="editor-mode-switch"
      styles={{
        root: {
          background: 'transparent',
          border: `1px solid ${theme.colorScheme === 'dark' ? colors.B40 : colors.B70}`,
          borderRadius: '30px',
          width: '100%',
          maxWidth: bridge ? '400px' : '300px',
        },
        label: {
          fontSize: '14px',
          lineHeight: '24px',
        },
        control: {
          minWidth: '80px',
        },
        active: {
          background: theme.colorScheme === 'dark' ? colors.B40 : colors.B98,
          borderRadius: '30px',
        },
        labelActive: {
          color: `${theme.colorScheme === 'dark' ? colors.white : colors.B40} !important`,
          fontSize: '14px',
          lineHeight: '24px',
        },
      }}
      data={views}
      value={view}
      onChange={(value) => {
        setView(value);
      }}
      defaultValue={view}
      fullWidth
      radius={'xl'}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { SegmentedControl, useMantineTheme } from '@mantine/core';
import { colors } from '@novu/design-system';
import { useMemo } from 'react';
import { ViewEnum } from './email-editor/EmailMessagesCards';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/EditorSidebarHeaderActions.tsx
Tamaño: 7979 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import { useEffect, useRef, useState } from 'react';
import { useFieldArray, useFormContext } from 'react-hook-form';
import { useLocation, useNavigate, useParams } from 'react-router-dom';
import { FilterPartTypeEnum, DELAYED_STEPS, StepTypeEnum } from '@novu/shared';
import { ActionButton, Condition, ConditionPlus, Trash, VariantPlus } from '@novu/design-system';

import { Conditions, IConditions } from '../../../components/conditions';
import { When } from '../../../components/utils/When';
import { useEnvironment } from '../../../hooks';
import { useBasePath } from '../hooks/useBasePath';
import { useFilterPartsList } from '../hooks/useFilterPartsList';
import { useStepFormPath } from '../hooks/useStepFormPath';
import { useStepIndex } from '../hooks/useStepIndex';
import { useStepInfoPath } from '../hooks/useStepInfoPath';
import { useStepVariantsCount } from '../hooks/useStepVariantsCount';
import { DeleteConfirmModal } from './DeleteConfirmModal';
import { IForm } from './formTypes';
import { makeVariantFromStep, useTemplateEditorForm } from './TemplateEditorFormProvider';
import { WorkflowNodeActions } from '../workflow/workflow/node-types/WorkflowNodeActions';

const variantsCreatePath = '/variants/create';

export const EditorSidebarHeaderActions = ({ preview = false }: { preview?: boolean }) => {
  const { control, watch, setValue } = useFormContext<IForm>();
  const { deleteStep, deleteVariant, template } = useTemplateEditorForm();
  const { readonly: isReadonly } = useEnvironment({ bridge: template?.bridge });
  const {
    stepUuid = '',
    channel = '',
    variantUuid = '',
  } = useParams<{
    stepUuid: string;
    channel: string;
    variantUuid: string;
  }>();
  const basePath = useBasePath();
  const navigate = useNavigate();
  const { pathname } = useLocation();
  const [areConditionsOpened, setConditionsOpened] = useState(pathname.endsWith(variantsCreatePath));
  const [isDeleteModalOpened, setIsDeleteModalOpened] = useState(false);

  useEffect(() => {
    setConditionsOpened(pathname.endsWith(variantsCreatePath));
  }, [pathname]);
  // we need to know if we are creating a new variant to continue redirection to the new variant page
  const proceedToNewVariant = useRef(false);

  const stepFormPath = useStepFormPath();

  const { step: rootStep, stepIndex } = useStepIndex();
  const filterPartsList = useFilterPartsList({ index: stepIndex });
  const { isUnderTheStepPath, isUnderVariantsListPath, isUnderVariantPath } = useStepInfoPath();
  const { variantsCount } = useStepVariantsCount();

  const { append } = useFieldArray({
    control,
    name: `steps.${stepIndex}.variants`,
  });

  const isNewVariantCreationUrl = pathname.endsWith(variantsCreatePath);
  // [] is the default value for filters for the new variants
  const filters = isNewVariantCreationUrl ? [] : watch(`${stepFormPath}.filters.0.children`);
  const conditions = isNewVariantCreationUrl ? [] : watch(`${stepFormPath}.filters`);
  const formPathName = watch(`${stepFormPath}.name`);
  const name = isNewVariantCreationUrl ? `V${variantsCount + 1} ${formPathName}` : formPathName;
  const hasNoFilters = (filters && filters?.length === 0) || !filters || isNewVariantCreationUrl;
  const isDelayedStep = DELAYED_STEPS.includes(channel as StepTypeEnum);
  const isAddVariantActionAvailable = (isUnderTheStepPath || isUnderVariantsListPath) && !isDelayedStep;

  const onAddVariant = () => {
    const newPath = `${basePath}/${channel}/${stepUuid}/variants/create`;
    navigate(newPath);
  };

  const onEdit = () => {
    const newPath = `${basePath}/${channel}/${stepUuid}`;
    navigate(newPath);
  };

  const updateConditions = (newConditions: IConditions[]) => {
    if (isNewVariantCreationUrl) {
      proceedToNewVariant.current = true;
      if (!rootStep) {
        return;
      }

      const variant = makeVariantFromStep(rootStep, { conditions: newConditions });
      append(variant);
      navigate(`${basePath}/${variant.template.type}/${stepUuid}/variants/${variant.uuid}`);
    } else {
      setValue(`${stepFormPath}.filters`, newConditions, { shouldDirty: true });
    }
  };

  const onConditionsClose = () => {
    if (isNewVariantCreationUrl && !proceedToNewVariant.current) {
      navigate(-1);

      return;
    }

    setConditionsOpened(false);
  };

  const openDeleteModal = () => {
    setIsDeleteModalOpened(true);
  };

  const confirmDelete = () => {
    if (isUnderVariantPath) {
      deleteVariant(stepUuid, variantUuid);
      navigate(basePath);
    }

    if (isUnderTheStepPath || isUnderVariantsListPath) {
      deleteStep(stepIndex);
      navigate(basePath);
    }
    setIsDeleteModalOpened(false);
  };

  const cancelDelete = () => {
    setIsDeleteModalOpened(false);
  };

  const conditionAction = isReadonly ? 'View' : hasNoFilters ? 'Add' : 'Edit';

  return (
    <>
      <When truthy={preview}>
        <WorkflowNodeActions
          onEdit={onEdit}
          onAddVariant={isAddVariantActionAvailable ? onAddVariant : undefined}
          onDelete={openDeleteModal}
          onAddConditions={() => setConditionsOpened(true)}
          channelType={channel as StepTypeEnum}
          nodeType={'step'}
          conditionsCount={filters?.length || 0}
          isReadOnly={isReadonly}
          menuPosition={'bottom'}
          showMenu={true}
        />
      </When>
      <When truthy={!preview}>
        <Group noWrap spacing={12} ml={'auto'} sx={{ alignItems: 'flex-start' }}>
          <When truthy={isAddVariantActionAvailable && !isReadonly}>
            <ActionButton
              tooltip="Add variant"
              onClick={onAddVariant}
              Icon={VariantPlus}
              data-test-id="editor-sidebar-add-variant"
            />
          </When>
          <When truthy={hasNoFilters && !isReadonly}>
            <ActionButton
              tooltip={`${conditionAction} ${isUnderVariantsListPath ? 'group' : ''} conditions`}
              onClick={() => setConditionsOpened(true)}
              Icon={ConditionPlus}
              data-test-id="editor-sidebar-add-conditions"
            />
          </When>
          <When truthy={!hasNoFilters}>
            <ActionButton
              tooltip={`${conditionAction} ${isUnderVariantsListPath ? 'group' : ''} conditions`}
              text={`${filters?.length ?? ''}`}
              onClick={() => setConditionsOpened(true)}
              Icon={Condition}
              data-test-id="editor-sidebar-edit-conditions"
            />
          </When>
          <When truthy={!isReadonly}>
            <ActionButton
              tooltip={`Delete ${isUnderVariantPath ? 'variant' : 'step'}`}
              onClick={openDeleteModal}
              Icon={Trash}
              data-test-id="editor-sidebar-delete"
            />
          </When>
        </Group>
      </When>
      {areConditionsOpened && (
        <Conditions
          isOpened={areConditionsOpened}
          isReadonly={isReadonly}
          name={name ?? ''}
          onClose={onConditionsClose}
          updateConditions={updateConditions}
          conditions={conditions}
          filterPartsList={filterPartsList}
          defaultFilter={FilterPartTypeEnum.PAYLOAD}
          shouldDisallowEmptyConditions={isUnderVariantPath}
        />
      )}

      <DeleteConfirmModal
        description={
          'This cannot be undone. ' +
          `The trigger code will be updated and this ${
            isUnderVariantPath ? 'variant' : 'step'
          } will no longer participate in the notification workflow.`
        }
        target={isUnderVariantPath ? 'variant' : 'step'}
        title={`Delete ${isUnderVariantPath ? 'variant' : 'step'}?`}
        isOpen={isDeleteModalOpened}
        confirm={confirmDelete}
        cancel={cancelDelete}
        confirmButtonText={`Delete ${isUnderVariantPath ? 'variant' : 'step'}`}
        cancelButtonText="Cancel"
      />
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import { useEffect, useRef, useState } from 'react';
import { useFieldArray, useFormContext } from 'react-hook-form';
import { useLocation, useNavigate, useParams } from 'react-router-dom';
import { FilterPartTypeEnum, DELAYED_STEPS, StepTypeEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/ExecutionDetailsModalWrapper.tsx
Tamaño: 1044 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { LoadingOverlay, useMantineTheme } from '@mantine/core';
import { colors } from '@novu/design-system';
import { useNotifications } from '../../../hooks/useNovuAPI';
import { ExecutionDetailsModal } from '../../../components/execution-detail/ExecutionDetailsModal';

interface Props {
  transactionId: string;
  isOpen: boolean;
  onClose: () => void;
}

export const ExecutionDetailsModalWrapper = ({ transactionId, isOpen, onClose }: Props) => {
  const theme = useMantineTheme();
  const { data: notification, isLoading } = useNotifications(transactionId, {
    enabled: !!transactionId && isOpen,
    refetchInterval: 1000,
  });

  if (!isOpen || !transactionId) return null;

  return (
    <>
      <LoadingOverlay
        visible={isLoading}
        overlayColor={theme.colorScheme === 'dark' ? colors.B30 : colors.B98}
        loaderProps={{
          color: colors.error,
        }}
      />
      <ExecutionDetailsModal notificationId={notification?.data[0]?._id} modalVisibility={isOpen} onClose={onClose} />
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { LoadingOverlay, useMantineTheme } from '@mantine/core';
import { colors } from '@novu/design-system';
import { useNotifications } from '../../../hooks/useNovuAPI';
import { ExecutionDetailsModal } from '../../../components/execution-detail/ExecutionDetailsModal';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/FloatingButton.tsx
Tamaño: 1209 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { MouseEventHandler } from 'react';
import styled from '@emotion/styled';
import { colors, shadows, ChevronPlainDown } from '@novu/design-system';

const FloatingButtonHolder = styled.button`
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  bottom: 24px;
  right: 24px;
  outline: none;
  border: none;
  cursor: pointer;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B60 : colors.B70)};
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B30 : colors.B85)};
  filter: drop-shadow(${({ theme }) => (theme.colorScheme === 'dark' ? shadows.dark : shadows.light)});
  transition: color 250ms ease;

  :hover {
    color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B60)};
  }
`;

const ChevronPlainUp = styled(ChevronPlainDown)`
  transform: rotate(180deg);
`;

export const FloatingButton = ({
  isUp = false,
  onClick,
}: {
  isUp?: boolean;
  onClick: MouseEventHandler<HTMLButtonElement>;
}) => {
  return (
    <FloatingButtonHolder onClick={onClick}>{isUp ? <ChevronPlainUp /> : <ChevronPlainDown />}</FloatingButtonHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { MouseEventHandler } from 'react';
import styled from '@emotion/styled';
import { colors, shadows, ChevronPlainDown } from '@novu/design-system';
const FloatingButtonHolder = styled.button`
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/FrameworkProjectWaitList.tsx
Tamaño: 3238 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Tooltip, Dropdown, CardTile } from '@novu/design-system';
import { Badge } from '@mantine/core';

import { TemplateItem } from './templates-store/templateStoreStyles';
import { useSegment } from '../../../components/providers/SegmentProvider';
import { useAuth } from '../../../hooks/useAuth';

const SEGMENT_EVENT = 'Button Clicked - [Bridge promotion]';
const segmentEventAction = {
  dropDownItem: 'Workflows > Dropdown > Bridge item',
  modalItem: 'Workflows > Dropdown > All templates > Bridge item',
  cardTile: 'Workflows > No workflows yet > Bridge item',
};

const handleFrameworkClick = (event: React.MouseEvent<HTMLButtonElement | HTMLDivElement>) => {
  event.preventDefault();
  window.open('https://docs.novu.co/quickstart/overview', '_blank');
};

const NewBadge = (props) => {
  return (
    <>
      <Badge
        sx={{
          padding: 5,
          pointerEvents: 'none',
          border: 'none',
          background: '#dd2476',
          color: 'white',
          fontWeight: 'bold',
          fontSize: '12px',
          marginRight: props.marginRight ?? 10,
        }}
      >
        NEW
      </Badge>
      Code Based
    </>
  );
};

const ToolTip = ({ children }) => {
  return (
    <Tooltip
      multiline
      width={220}
      label={
        'Discover a new way that allows you to build powerful, highly customizable workflows in your IDE.' +
        'Integrated with React Email and MJML.'
      }
      position="right"
      offset={10}
    >
      {children}
    </Tooltip>
  );
};

export const FrameworkProjectDropDownItem = () => {
  const segment = useSegment();
  const { currentOrganization } = useAuth();

  return (
    <ToolTip>
      <Dropdown.Item
        onClick={(event) => {
          segment.track(SEGMENT_EVENT, {
            action: segmentEventAction.dropDownItem,
            _organization: currentOrganization?._id,
          });

          handleFrameworkClick(event);
        }}
        data-test-id="framework-project-demand-check-experiment-dropdown-item"
      >
        <NewBadge />
      </Dropdown.Item>
    </ToolTip>
  );
};

export const FrameworkProjectModalItem = () => {
  const segment = useSegment();
  const { currentOrganization } = useAuth();

  return (
    <ToolTip>
      <TemplateItem
        key="new-framework-project"
        onClick={(event) => {
          segment.track(SEGMENT_EVENT, {
            action: segmentEventAction.dropDownItem,
            _organization: currentOrganization?._id,
          });

          handleFrameworkClick(event);
        }}
      >
        <NewBadge marginRight={1} />
      </TemplateItem>
    </ToolTip>
  );
};

export const FrameworkProjectCardTile = () => {
  const segment = useSegment();
  const { currentOrganization } = useAuth();

  return (
    <ToolTip>
      <CardTile
        disabled={false}
        data-test-id="framework-project-demand-check-experiment-tile"
        onClick={(event) => {
          segment.track(SEGMENT_EVENT, {
            action: segmentEventAction.dropDownItem,
            _organization: currentOrganization?._id,
          });

          handleFrameworkClick(event);
        }}
      >
        <NewBadge marginRight={0} />
      </CardTile>
    </ToolTip>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Tooltip, Dropdown, CardTile } from '@novu/design-system';
import { Badge } from '@mantine/core';
import { TemplateItem } from './templates-store/templateStoreStyles';
import { useSegment } from '../../../components/providers/SegmentProvider';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/LackIntegrationAlert.tsx
Tamaño: 3883 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import styled from '@emotion/styled';

import { ChannelTypeEnum } from '@novu/shared';

import { colors, Text, ErrorIcon, WarningIcon, CircleArrowRight } from '@novu/design-system';
import { Group } from '@mantine/core';
import { useSegment } from '../../../components/providers/SegmentProvider';
import { stepNames, TemplateEditorAnalyticsEnum } from '../constants';
import { useEnvironment } from '../../../hooks';
import { IntegrationsListModal } from '../../integrations/IntegrationsListModal';
import { useSelectPrimaryIntegrationModal } from '../../integrations/components/multi-provider/useSelectPrimaryIntegrationModal';

type alertType = 'error' | 'warning';

export function LackIntegrationAlert({
  channelType,
  text,
  type = 'error',
  isPrimaryMissing,
}: {
  channelType: ChannelTypeEnum;
  text?: string;
  type?: alertType;
  isPrimaryMissing?: boolean;
}) {
  const segment = useSegment();
  const { environment } = useEnvironment();
  const [isIntegrationsModalOpened, openIntegrationsModal] = useState(false);
  const { openModal: openSelectPrimaryIntegrationModal, SelectPrimaryIntegrationModal } =
    useSelectPrimaryIntegrationModal();

  const onIntegrationModalClose = () => openIntegrationsModal(false);
  const handleErrorRectangleClick = () => {
    if (isPrimaryMissing) {
      openSelectPrimaryIntegrationModal({
        environmentId: environment?._id,
        channelType,
        onClose: () => {
          segment.track(TemplateEditorAnalyticsEnum.CONFIGURE_PRIMARY_PROVIDER_BANNER_CLICK);
        },
      });
    } else {
      openIntegrationsModal(true);
      segment.track(TemplateEditorAnalyticsEnum.CONFIGURE_PROVIDER_BANNER_CLICK);
    }
  };

  return (
    <>
      <WarningMessage onClick={handleErrorRectangleClick} backgroundColor={alertTypeToMessageBackgroundColor(type)}>
        <Group style={{ width: `100%` }} spacing={12} noWrap>
          <AlertIcon color={alertTypeToDoubleArrowColor(type)} alertType={type} />
          <div style={{ flex: 1 }}>
            <Text color={alertTypeToMessageTextColor(type)}>
              {text ||
                `Please configure or activate a provider instance for the ${stepNames[channelType]} channel to send notifications over this node`}
            </Text>
          </div>
          <CircleArrowRight color={alertTypeToDoubleArrowColor(type)} />
        </Group>
      </WarningMessage>
      <IntegrationsListModal
        isOpen={isIntegrationsModalOpened}
        onClose={onIntegrationModalClose}
        scrollTo={channelType}
      />
      <SelectPrimaryIntegrationModal />
    </>
  );
}

const AlertIcon = ({ color, alertType }: { color?: string | undefined; alertType: alertType }) => {
  switch (alertType) {
    case 'warning':
      return <WarningIcon width="22px" height="22px" color={color} />;
    default:
      return <ErrorIcon width="22px" height="22px" color={color} />;
  }
};

const WarningMessage = styled.div<{ backgroundColor: string }>`
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 15px;
  color: #e54545;
  background: ${({ backgroundColor }) => backgroundColor};
  border-radius: 7px;
  cursor: pointer;
`;

function alertTypeToDoubleArrowColor(type: alertType) {
  switch (type) {
    case 'warning':
      return 'rgb(234, 169, 0)';
    default:
      return 'undefined';
  }
}

function alertTypeToMessageBackgroundColor(type: alertType) {
  switch (type) {
    case 'error':
      return 'rgba(229, 69, 69, 0.15)';
    case 'warning':
      return 'rgba(234, 169, 0, 0.15)';
    default:
      return 'rgba(229, 69, 69, 0.15)';
  }
}

function alertTypeToMessageTextColor(type: alertType) {
  switch (type) {
    case 'error':
      return colors.error;
    case 'warning':
      return 'rgb(234, 169, 0)';
    default:
      return undefined;
  }
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import styled from '@emotion/styled';
import { ChannelTypeEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/ListProviders.tsx
Tamaño: 5550 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { MouseEventHandler, PropsWithChildren, useMemo } from 'react';
import styled from '@emotion/styled';
import { Group, Stack, Text, UnstyledButton, useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum, NOVU_SMS_EMAIL_PROVIDERS } from '@novu/shared';
import { Button, colors, Tooltip } from '@novu/design-system';

import { When } from '../../../components/utils/When';
import { useEnvironment } from '../../../hooks';
import { IntegrationEnvironmentPill } from '../../integrations/components/IntegrationEnvironmentPill';
import { IntegrationStatus } from '../../integrations/components/IntegrationStatus';
import type { IIntegratedProvider } from '../../integrations/types';
import { stepNames } from '../constants';
import { ChannelTitle } from './ChannelTitle';
import { LackIntegrationAlert } from './LackIntegrationAlert';

const getIntegrationIcon = (colorScheme: string, providerId: string) => {
  return `/static/images/providers/${colorScheme}/square/${providerId}.svg`;
};

const ListProvidersContainer = styled.div`
  margin-bottom: 2rem;
  overflow: hidden;
`;

const TitleAndButtonContainer = styled.div`
  display: flex;
  justify-content: space-between;
  color: ${colors.B60};
  margin-bottom: 0.75rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
`;

const ConfigureButton = styled(Button)`
  height: 2rem;
  padding: 0.5rem 1rem;
`;

const IntegrationButton = styled(UnstyledButton)<
  PropsWithChildren<{ isActive: boolean; isDark: boolean } & { onClick?: MouseEventHandler<HTMLButtonElement> }>
>`
  width: 100%;
  padding: 0.5rem 0.75rem;
  background: ${({ isDark }) => (isDark ? colors.B20 : colors.B98)};
  border-radius: 0.5rem;
  margin-bottom: 0.75rem;
  line-height: 1;
  opacity: ${({ isActive, isDark }) => (isActive || isDark ? 1 : 0.4)};
`;

const IntegrationIcon = styled.img<{ isActive: boolean; isDark: boolean }>`
  height: 1.5rem;
  max-width: 8.75rem;
  opacity: ${({ isActive, isDark }) => (isActive || isDark ? 1 : 0.4)};
`;

const IntegrationStatusStyled = styled(IntegrationStatus)`
  min-width: 5rem;
`;

export const ListProviders = ({
  channel,
  channelProviders,
  setConfigureChannel,
  setProvider,
}: {
  channel: ChannelTypeEnum;
  channelProviders: IIntegratedProvider[];
  setConfigureChannel: (channel: ChannelTypeEnum) => void;
  setProvider: (provider: IIntegratedProvider) => void;
}) => {
  const { colorScheme } = useMantineColorScheme();
  const { environment: currentEnvironment } = useEnvironment();
  const containsNovuProvider = useMemo(
    () =>
      NOVU_SMS_EMAIL_PROVIDERS.some(
        (providerId) => providerId === channelProviders.find((provider) => provider.connected)?.providerId
      ),
    [channelProviders]
  );
  const providersForTheCurrentEnvironment = useMemo(
    () =>
      channelProviders.filter((provider) => provider.connected && provider.environmentId === currentEnvironment?._id),
    [channelProviders, currentEnvironment?._id]
  );
  const hasProviders = providersForTheCurrentEnvironment.length > 0;
  const hasNovuProvider = providersForTheCurrentEnvironment.length === 1 && containsNovuProvider;
  const isDark = colorScheme === 'dark';

  return (
    <ListProvidersContainer>
      <TitleAndButtonContainer>
        <ChannelTitle spacing={8} channel={channel} />
        <ConfigureButton
          variant={hasProviders ? 'outline' : 'gradient'}
          onClick={() => {
            setConfigureChannel(channel);
          }}
        >
          Configure
        </ConfigureButton>
      </TitleAndButtonContainer>
      {providersForTheCurrentEnvironment.map((provider) => {
        return (
          <IntegrationButton
            key={provider.identifier ?? provider.providerId}
            isDark={isDark}
            isActive={provider.active}
            onClick={() => {
              setProvider(provider);
              setConfigureChannel(provider.channel);
            }}
          >
            <Group spacing={16} position="apart">
              <Group spacing={16} position="apart">
                <IntegrationIcon
                  src={getIntegrationIcon(colorScheme, provider.providerId)}
                  alt={provider.displayName}
                  isDark={isDark}
                  isActive={provider.active}
                />
                <Stack w="15rem" spacing={0}>
                  <Tooltip label={provider.displayName}>
                    <Text size="md" truncate="end">
                      {provider.name || provider.displayName}
                    </Text>
                  </Tooltip>
                  <When truthy={provider.identifier}>
                    <Text color={colors.B40} size="sm">
                      Key: {provider.identifier}
                    </Text>
                  </When>
                </Stack>
              </Group>
              <Group spacing={16} position="apart">
                <IntegrationEnvironmentPill name={currentEnvironment?.name || 'Development'} />
                <IntegrationStatusStyled active={provider.active} />
              </Group>
            </Group>
          </IntegrationButton>
        );
      })}
      <When truthy={!hasProviders}>
        <LackIntegrationAlert
          text={`Please configure ${stepNames[channel]} provider to activate the channel`}
          channelType={channel}
        />
      </When>
      <When truthy={hasNovuProvider}>
        <LackIntegrationAlert text={'Connect a provider for this channel'} channelType={channel} type={'warning'} />
      </When>
    </ListProvidersContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { MouseEventHandler, PropsWithChildren, useMemo } from 'react';
import styled from '@emotion/styled';
import { Group, Stack, Text, UnstyledButton, useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum, NOVU_SMS_EMAIL_PROVIDERS } from '@novu/shared';
import { Button, colors, Tooltip } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/NavigateValidatorModal.tsx
Tamaño: 1575 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import { Group, Modal, useMantineTheme } from '@mantine/core';
import { Button, colors, shadows, Title, Text } from '@novu/design-system';

export function NavigateValidatorModal({
  isOpen,
  onCancel,
  onConfirm,
}: {
  isOpen: boolean;
  onCancel: () => void;
  onConfirm: () => void;
}) {
  const theme = useMantineTheme();

  return (
    <>
      <Modal
        onClose={onCancel}
        opened={isOpen}
        overlayColor={theme.colorScheme === 'dark' ? colors.BGDark : colors.BGLight}
        overlayOpacity={0.7}
        styles={{
          root: {
            zIndex: 201, // because the editor sidebar has z-index 200
          },
          modal: {
            backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.white,
          },
          body: {
            paddingTop: '5px',
          },
          inner: {
            paddingTop: '180px',
          },
        }}
        title={<Title size={2}>Unsaved changes will be deleted</Title>}
        sx={{ backdropFilter: 'blur(10px)' }}
        shadow={theme.colorScheme === 'dark' ? shadows.dark : shadows.medium}
        radius="md"
        size="lg"
      >
        <div>
          <Text>Any unsaved changes will be deleted. Proceed anyway?</Text>
          <Group position="right">
            <Button variant="outline" size="md" mt={30} onClick={onCancel}>
              No
            </Button>
            <Button mt={30} size="md" onClick={onConfirm}>
              Yes
            </Button>
          </Group>
        </div>
      </Modal>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import { Group, Modal, useMantineTheme } from '@mantine/core';
import { Button, colors, shadows, Title, Text } from '@novu/design-system';
export function NavigateValidatorModal({
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/ProvidersPage.tsx
Tamaño: 2664 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { Center, Loader, ScrollArea } from '@mantine/core';
import { ChannelTypeEnum } from '@novu/shared';

import { colors } from '@novu/design-system';
import type { IIntegratedProvider } from '../../integrations/types';
import { useProviders } from '../../integrations/useProviders';
import { ListProviders } from './ListProviders';
import { WorkflowSettingsTabs } from './WorkflowSettingsTabs';
import { IntegrationsListModal } from '../../integrations/IntegrationsListModal';
import { WorkflowSidebar } from './WorkflowSidebar';

export function ProvidersPage() {
  const { emailProviders, smsProvider, chatProvider, pushProvider, inAppProvider, isLoading } = useProviders();
  const [configureChannel, setConfigureChannel] = useState<ChannelTypeEnum | undefined>(undefined);
  const [provider, setProvider] = useState<IIntegratedProvider | null>(null);

  const onIntegrationModalClose = () => {
    setProvider(null);
    setConfigureChannel(undefined);
  };

  if (isLoading) {
    return (
      <Center>
        <Loader color={colors.B70} mb={20} mt={20} size={32} />
      </Center>
    );
  }

  return (
    <>
      <WorkflowSidebar title="Workflow Settings">
        <WorkflowSettingsTabs />
        <ScrollArea h="calc(100vh - 220px)" offsetScrollbars mr={-12}>
          <ListProviders
            channel={ChannelTypeEnum.IN_APP}
            setProvider={setProvider}
            setConfigureChannel={setConfigureChannel}
            channelProviders={inAppProvider}
          />
          <ListProviders
            channel={ChannelTypeEnum.EMAIL}
            setProvider={setProvider}
            setConfigureChannel={setConfigureChannel}
            channelProviders={emailProviders}
          />
          <ListProviders
            channel={ChannelTypeEnum.CHAT}
            setProvider={setProvider}
            setConfigureChannel={setConfigureChannel}
            channelProviders={chatProvider}
          />
          <ListProviders
            channel={ChannelTypeEnum.PUSH}
            setProvider={setProvider}
            setConfigureChannel={setConfigureChannel}
            channelProviders={pushProvider}
          />
          <ListProviders
            channel={ChannelTypeEnum.SMS}
            setProvider={setProvider}
            setConfigureChannel={setConfigureChannel}
            channelProviders={smsProvider}
          />
        </ScrollArea>
      </WorkflowSidebar>
      <IntegrationsListModal
        isOpen={configureChannel !== undefined}
        selectedProvider={provider}
        onClose={onIntegrationModalClose}
        scrollTo={configureChannel}
      />
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { Center, Loader, ScrollArea } from '@mantine/core';
import { ChannelTypeEnum } from '@novu/shared';
import { colors } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/SaveChangesModal.tsx
Tamaño: 1224 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import { FieldErrors, useFormContext } from 'react-hook-form';

import { Button, Title, Text, Modal } from '@novu/design-system';
import type { IForm } from './formTypes';

export function SaveChangesModal({
  isVisible,
  onDismiss,
  onConfirm,
  loading,
  onInvalid,
}: {
  isVisible: boolean;
  loading: boolean;
  onDismiss: () => void;
  onConfirm: (data: IForm) => void;
  onInvalid: (errors: FieldErrors<IForm>) => void;
}) {
  const { handleSubmit } = useFormContext<IForm>();

  function onInvalidForm(errors: FieldErrors<IForm>) {
    onInvalid(errors);
    onDismiss();
  }

  return (
    <Modal
      data-test-id="save-changes-modal"
      opened={isVisible}
      title={<Title size={2}>Save template</Title>}
      onClose={onDismiss}
    >
      <form onSubmit={handleSubmit(onConfirm, onInvalidForm)}>
        <Text>Would you like to save your current changes?</Text>
        <Group position="right">
          <Button variant="outline" size="md" mt={30} onClick={onDismiss}>
            Cancel
          </Button>
          <Button mt={30} size="md" submit loading={loading}>
            Save
          </Button>
        </Group>
      </form>
    </Modal>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import { FieldErrors, useFormContext } from 'react-hook-form';
import { Button, Title, Text, Modal } from '@novu/design-system';
import type { IForm } from './formTypes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/SnippetPage.tsx
Tamaño: 920 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Text } from '@mantine/core';
import { colors } from '@novu/design-system';

import { TriggerSnippetTabs } from './TriggerSnippetTabs';
import { useTemplateEditorForm } from './TemplateEditorFormProvider';
import { TriggerSegmentControl } from './TriggerSegmentControl';
import { When } from '../../../components/utils/When';
import { WorkflowSidebar } from './WorkflowSidebar';

export function SnippetPage() {
  const { trigger, isCreating, isUpdating } = useTemplateEditorForm();

  return (
    <WorkflowSidebar title="Trigger">
      <Text color={colors.B60} mt={-16}>
        Test trigger as if you sent it from your API or implement it by copy/pasting it into the codebase of your
        application.
      </Text>
      <When truthy={!isCreating && !isUpdating}>
        <TriggerSegmentControl />
        {trigger && <TriggerSnippetTabs trigger={trigger} />}
      </When>
    </WorkflowSidebar>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Text } from '@mantine/core';
import { colors } from '@novu/design-system';
import { TriggerSnippetTabs } from './TriggerSnippetTabs';
import { useTemplateEditorForm } from './TemplateEditorFormProvider';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/StepEditorSidebar.tsx
Tamaño: 2417 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Sidebar } from '@novu/design-system';
import { StepTypeEnum } from '@novu/shared';
import { ReactNode } from 'react';
import { useNavigate, useParams } from 'react-router-dom';

import { useFormContext } from 'react-hook-form';
import { useBasePath } from '../hooks/useBasePath';
import { useNavigateToVariantPreview } from '../hooks/useNavigateToVariantPreview';
import { useStepIndex } from '../hooks/useStepIndex';
import { useStepVariantsCount } from '../hooks/useStepVariantsCount';
import { EditorSidebarHeaderActions } from './EditorSidebarHeaderActions';
import { IForm } from './formTypes';
import { StepName } from './StepName';
import { useTemplateEditorForm } from './TemplateEditorFormProvider';

const StepSidebarHeader = () => {
  const { channel } = useParams<{
    channel: StepTypeEnum;
  }>();

  if (!channel) {
    return null;
  }

  return (
    <div style={{ display: 'flex', width: '100%', gap: 12 }}>
      <StepName channel={channel} />
      <EditorSidebarHeaderActions />
    </div>
  );
};

export const StepEditorSidebar = ({ children }: { children: ReactNode }) => {
  const { channel, stepUuid } = useParams<{
    channel: StepTypeEnum;
    stepUuid: string;
  }>();
  const navigate = useNavigate();
  const basePath = useBasePath();
  const { navigateToVariantPreview } = useNavigateToVariantPreview();
  const { onSubmit, onInvalid } = useTemplateEditorForm();
  const methods = useFormContext<IForm>();
  const { handleSubmit } = methods;
  const { stepIndex, variantIndex } = useStepIndex();
  const { variantsCount } = useStepVariantsCount();
  const key = `${stepIndex}_${variantIndex}`;
  const isExpandedChannel = [
    StepTypeEnum.IN_APP,
    StepTypeEnum.EMAIL,
    StepTypeEnum.CHAT,
    StepTypeEnum.SMS,
    StepTypeEnum.PUSH,
  ].includes(channel as StepTypeEnum);

  const onSubmitHandler = async (data: IForm) => {
    await onSubmit(data);
  };

  return (
    <Sidebar
      key={key}
      isOpened
      isExpanded={isExpandedChannel}
      customHeader={<StepSidebarHeader />}
      isParentScrollable={isExpandedChannel}
      onClose={() => {
        if (variantsCount > 0) {
          navigateToVariantPreview({ variantUuid: stepUuid });

          return;
        }
        navigate(basePath);
      }}
      data-test-id="step-editor-sidebar"
      onSubmit={handleSubmit(onSubmitHandler, onInvalid)}
    >
      {children}
    </Sidebar>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Sidebar } from '@novu/design-system';
import { StepTypeEnum } from '@novu/shared';
import { ReactNode } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/StepName.tsx
Tamaño: 1941 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum, providers, StepTypeEnum } from '@novu/shared';

import { StepNameInput } from './StepNameInput';
import { stepIcon, stepNames } from '../constants';
import { useGetPrimaryIntegration, useHasActiveIntegrations } from '../../../hooks';
import { CONTEXT_PATH } from '../../../config';
import { DisplayPrimaryProviderIcon } from '../workflow/DisplayPrimaryProviderIcon';
import { useStepFormPath } from '../hooks/useStepFormPath';
import { StepNameLabel } from './StepNameLabel';

export const StepName = ({ channel }: { channel: StepTypeEnum | ChannelTypeEnum }) => {
  const { colorScheme } = useMantineColorScheme();
  const path = useStepFormPath();

  const { isChannelStep, activeIntegrationsByEnv } = useHasActiveIntegrations({
    filterByEnv: true,
    channelType: channel as unknown as ChannelTypeEnum,
  });
  const { primaryIntegration, isPrimaryStep } = useGetPrimaryIntegration({
    filterByEnv: true,
    channelType: channel as unknown as ChannelTypeEnum,
  });
  const providerIntegration = isPrimaryStep
    ? primaryIntegration
    : activeIntegrationsByEnv?.find((integration) => integration.channel === (channel as unknown as ChannelTypeEnum))
        ?.providerId;

  const provider = providers.find((_provider) => _provider.id === providerIntegration);

  const logoSrc = provider && `${CONTEXT_PATH}/static/images/providers/${colorScheme}/square/${provider?.id}.svg`;

  const Icon = stepIcon[channel];

  return (
    <Group noWrap spacing={12} sx={{ alignItems: 'flex-start', maxWidth: 800, width: '100%' }}>
      <DisplayPrimaryProviderIcon
        Icon={Icon}
        disabledProp={{}}
        providerIntegration={providerIntegration}
        isChannelStep={isChannelStep}
        logoSrc={logoSrc}
      />
      <StepNameInput path={path} defaultValue={stepNames[channel]} label={<StepNameLabel />} />
    </Group>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum, providers, StepTypeEnum } from '@novu/shared';
import { StepNameInput } from './StepNameInput';
import { stepIcon, stepNames } from '../constants';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/StepNameInput.tsx
Tamaño: 2943 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ReactNode } from 'react';
import { TextInput, useMantineColorScheme } from '@mantine/core';
import { Controller, useFormContext } from 'react-hook-form';
import { colors } from '@novu/design-system';

import { useEnvironment } from '../../../hooks';
import type { IForm } from './formTypes';
import { useTemplateEditorForm } from './TemplateEditorFormProvider';

export const StepNameInput = ({
  path,
  defaultValue,
  label,
}: {
  path?: string;
  defaultValue: string;
  label?: ReactNode;
}) => {
  const {
    control,
    formState: { errors, isSubmitted },
  } = useFormContext<IForm>();

  const { template } = useTemplateEditorForm();
  const { readonly } = useEnvironment({ bridge: template?.bridge });
  const showErrors = isSubmitted && errors?.steps;
  const { colorScheme } = useMantineColorScheme();

  return (
    <Controller
      control={control}
      name={`${path}.name` as any}
      defaultValue=""
      render={({ field, fieldState }) => {
        return (
          <TextInput
            styles={(theme) => ({
              root: {
                display: 'flex',
                flexDirection: 'column-reverse',
                gap: 4,
                flex: '1 1 auto',
                width: '100%',
              },
              wrapper: {
                background: 'transparent',
                width: '100%',
              },
              input: {
                background: 'transparent',
                borderStyle: 'solid',
                borderColor: colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[5],
                borderWidth: '1px',
                fontSize: '20px',
                fontWeight: 'bolder',
                padding: 9,
                // paddingTop: 20,
                lineHeight: '28px',
                minHeight: 'auto',
                height: '40px',
                width: '100%',
                textOverflow: 'ellipsis',
                '&:not(:placeholder-shown)': {
                  borderStyle: 'none',
                  padding: 10,
                },
                '&:hover, &:focus': {
                  borderStyle: 'solid',
                  padding: 9,
                },
                '&:disabled': {
                  backgroundColor: colorScheme === 'dark' ? colors.B17 : theme.white,
                  color: colorScheme === 'dark' ? theme.white : theme.black,
                  opacity: 1,
                },
              },
              label: {
                fontSize: '14px',
                lineHeight: '20px',
              },
            })}
            {...field}
            label={label}
            value={field.value !== undefined ? field.value : defaultValue}
            error={showErrors && fieldState.error?.message}
            type="text"
            data-test-id="step-name"
            placeholder="Enter step name"
            disabled={readonly}
          />
        );
      }}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ReactNode } from 'react';
import { TextInput, useMantineColorScheme } from '@mantine/core';
import { Controller, useFormContext } from 'react-hook-form';
import { colors } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/StepNameLabel.tsx
Tamaño: 901 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Center } from '@mantine/core';
import { Text, colors, Variant, VariantsFile } from '@novu/design-system';

import { useStepInfoPath } from '../hooks/useStepInfoPath';
import { useStepIndex } from '../hooks/useStepIndex';
import { useStepVariantsCount } from '../hooks/useStepVariantsCount';

export const StepNameLabel = () => {
  const { variantIndex } = useStepIndex();
  const { isUnderTheStepPath, isUnderVariantPath } = useStepInfoPath();
  const { variantsCount } = useStepVariantsCount();

  if (isUnderTheStepPath) {
    return null;
  }

  const variantArrayIndex = variantIndex ? variantIndex + 1 : 1;
  const text = isUnderVariantPath ? `Variant ${variantArrayIndex}` : `${variantsCount} variants`;

  return (
    <Center inline>
      {isUnderVariantPath ? <Variant /> : <VariantsFile />}
      <Text ml={4} color={colors.B60}>
        {text}
      </Text>
    </Center>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Center } from '@mantine/core';
import { Text, colors, Variant, VariantsFile } from '@novu/design-system';
import { useStepInfoPath } from '../hooks/useStepInfoPath';
import { useStepIndex } from '../hooks/useStepIndex';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/TemplateEditorFormProvider.tsx
Tamaño: 8910 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';
import { FieldErrors, FormProvider, useFieldArray, useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { useParams } from 'react-router-dom';
import cloneDeep from 'lodash.clonedeep';
import {
  ActorTypeEnum,
  DelayTypeEnum,
  DigestTypeEnum,
  DigestUnitEnum,
  EmailBlockTypeEnum,
  IEmailBlock,
  INotificationTemplate,
  INotificationTrigger,
  isBridgeWorkflow,
  StepTypeEnum,
  TextAlignEnum,
  slugify,
} from '@novu/shared';
import { captureException } from '@sentry/react';

import { v4 as uuid4 } from 'uuid';
import type { IForm, IFormStep, ITemplates } from './formTypes';
import { useTemplateController } from './useTemplateController';
import { mapFormToCreateNotificationTemplate, mapNotificationTemplateToForm } from './templateToFormMappers';
import { errorMessage, successMessage } from '../../../utils/notifications';
import { schema } from './notificationTemplateSchema';
import { useEffectOnce, useNotificationGroup } from '../../../hooks';
import { useCreate } from '../hooks/useCreate';
import { stepNames } from '../constants';
import { getExplicitErrors } from '../shared/errors';

const defaultEmailBlocks: IEmailBlock[] = [
  {
    type: EmailBlockTypeEnum.TEXT,
    content: '',
    styles: {
      textAlign: TextAlignEnum.LEFT,
    },
  },
];

const makeStep = (channelType: StepTypeEnum, id: string): IFormStep => {
  return {
    _id: id,
    uuid: uuid4(),
    name: stepNames[channelType],
    template: {
      subject: '',
      type: channelType,
      content: channelType === StepTypeEnum.EMAIL ? defaultEmailBlocks : '',
      contentType: 'editor',
      variables: [],
      ...(channelType === StepTypeEnum.IN_APP && {
        actor: {
          type: ActorTypeEnum.NONE,
          data: null,
        },
        enableAvatar: false,
      }),
    },
    active: true,
    shouldStopOnFail: false,
    filters: [],
    variants: [],
    ...(channelType === StepTypeEnum.EMAIL && {
      replyCallback: {
        active: false,
      },
    }),
    ...(channelType === StepTypeEnum.DIGEST && {
      digestMetadata: {
        digestKey: '',
        type: DigestTypeEnum.REGULAR,
        regular: {
          unit: DigestUnitEnum.SECONDS,
          amount: '30',
          backoff: false,
        },
      },
    }),
    ...(channelType === StepTypeEnum.DELAY && {
      delayMetadata: {
        type: DelayTypeEnum.REGULAR,
        regular: {
          unit: DigestUnitEnum.MINUTES,
          amount: '5',
        },
      },
    }),
  };
};

const makeTemplateCopy = ({
  _id,
  id,
  _environmentId,
  _organizationId,
  _creatorId,
  _parentId,
  createdAt,
  updatedAt,
  ...rest
}: ITemplates) => ({
  ...rest,
});

export const makeVariantFromStep = (
  stepToVariant: IFormStep,
  { conditions }: { conditions: IFormStep['filters'] }
): IFormStep => {
  const { id: _, variants, template, _templateId, ...rest } = stepToVariant;
  const variantsCount = variants?.length ?? 0;
  const variantName = `V${variantsCount + 1} ${stepToVariant?.name}`;

  return {
    ...rest,
    _id: uuid4(),
    uuid: uuid4(),
    name: variantName,
    filters: conditions,
    template: cloneDeep(makeTemplateCopy(template)),
  };
};

interface INotificationTemplateWithBridge extends INotificationTemplate {
  bridge?: boolean;
}

interface ITemplateEditorFormContext {
  template?: INotificationTemplateWithBridge;
  isLoading: boolean;
  isCreating: boolean;
  isUpdating: boolean;
  isDeleting: boolean;
  trigger?: INotificationTrigger;
  onSubmit: (data: IForm) => Promise<void>;
  onInvalid: (errors: FieldErrors<IForm>) => void;
  addStep: (channelType: StepTypeEnum, id: string, stepIndex?: number) => void;
  deleteStep: (index: number) => void;
  deleteVariant: (stepUuid: string, variantUuid: string) => void;
}

const TemplateEditorFormContext = createContext<ITemplateEditorFormContext>({
  isLoading: false,
  isCreating: false,
  isUpdating: false,
  isDeleting: false,
  trigger: undefined,
  onSubmit: (() => {}) as any,
  onInvalid: () => {},
  addStep: () => {},
  deleteStep: () => {},
  deleteVariant: () => {},
});

const TemplateEditorFormProvider = ({ children }) => {
  const { templateId = '' } = useParams<{ templateId?: string }>();
  const methods = useForm<IForm>({
    resolver: zodResolver(schema as any),
    defaultValues: {
      name: 'Untitled',
      notificationGroupId: '',
      description: '',
      identifier: '',
      tags: [],
      critical: true,
      steps: [],
      preferenceSettings: {
        email: true,
        sms: true,
        in_app: true,
        chat: true,
        push: true,
      },
    },
    mode: 'onChange',
  });
  const [trigger, setTrigger] = useState<INotificationTrigger>();

  const { reset, watch } = methods;

  const name = watch('name');
  const identifier = watch('identifier');

  const steps = useFieldArray({
    control: methods.control,
    name: 'steps',
  });

  useEffect(() => {
    if (!template?.triggers[0].identifier.includes('untitled')) {
      return;
    }

    const newIdentifier = slugify(name);

    if (newIdentifier === identifier) {
      return;
    }

    methods.setValue('identifier', newIdentifier);

    if (trigger) {
      setTrigger({
        ...trigger,
        identifier: newIdentifier,
      });
    }
  }, [name]);

  const { template, isLoading, isCreating, isUpdating, isDeleting, updateNotificationTemplate } =
    useTemplateController(templateId);

  useEffectOnce(() => {
    if (!template) return;

    // we don't call this on success because the templates might be fetched before
    setTrigger(template.triggers[0]);
    const form = mapNotificationTemplateToForm(template);
    reset(form);
  }, !!template);

  const { groups, loading: loadingGroups } = useNotificationGroup();

  useCreate(templateId, groups, setTrigger, methods.getValues);

  const onSubmit = useCallback(
    async (form: IForm, showMessage = true) => {
      const payloadToCreate = mapFormToCreateNotificationTemplate(form);

      try {
        const response = await updateNotificationTemplate({
          id: templateId,
          data: {
            ...payloadToCreate,
            identifier: form.identifier,
          },
        });

        setTrigger(response.triggers[0]);
        reset(mapNotificationTemplateToForm(response));

        if (showMessage) {
          successMessage('Trigger code is updated successfully', 'workflowSaved');
        }
      } catch (e: any) {
        captureException(e);

        errorMessage(e.message || 'Unexpected error occurred');
      }
    },
    [templateId, updateNotificationTemplate, setTrigger, reset]
  );

  const onInvalid = useCallback((errors: FieldErrors<IForm>) => {
    errorMessage(getExplicitErrors(errors));
  }, []);

  const addStep = useCallback(
    (channelType: StepTypeEnum, id: string, stepIndex?: number) => {
      const newStep: IFormStep = makeStep(channelType, id);

      if (stepIndex != null) {
        steps.insert(stepIndex, newStep);
      } else {
        steps.append(newStep);
      }
    },
    [steps]
  );

  const deleteStep = useCallback(
    (index: number) => {
      steps.remove(index);
    },
    [steps]
  );

  const deleteVariant = useCallback(
    (stepUuid: string, variantUuid: string) => {
      const workflowSteps = methods.getValues('steps');
      const stepToVariant = workflowSteps.find((step) => step.uuid === stepUuid);
      const index = workflowSteps.findIndex((item) => item.uuid === stepUuid);

      if (!stepToVariant) {
        return;
      }

      // remove the variant with the variantUuid
      const newVariants = stepToVariant?.variants?.filter((variant) => variant.uuid !== variantUuid);

      methods.setValue(`steps.${index}.variants`, newVariants, {
        shouldDirty: true,
        shouldValidate: true,
      });
    },
    [methods]
  );

  const value = useMemo<ITemplateEditorFormContext>(
    () => ({
      template: {
        ...template,
        bridge: isBridgeWorkflow(template?.type),
      } as INotificationTemplateWithBridge,
      isLoading: isLoading || loadingGroups,
      isCreating,
      isUpdating,
      isDeleting,
      trigger,
      onSubmit,
      onInvalid,
      addStep,
      deleteStep,
      deleteVariant,
    }),
    [
      template,
      isLoading,
      isCreating,
      isUpdating,
      isDeleting,
      trigger,
      onSubmit,
      onInvalid,
      addStep,
      deleteStep,
      loadingGroups,
      deleteVariant,
    ]
  );

  return (
    <FormProvider {...methods}>
      <TemplateEditorFormContext.Provider value={value}>{children}</TemplateEditorFormContext.Provider>
    </FormProvider>
  );
};

const useTemplateEditorForm = () => useContext(TemplateEditorFormContext);

export { TemplateEditorFormProvider, useTemplateEditorForm };


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';
import { FieldErrors, FormProvider, useFieldArray, useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { useParams } from 'react-router-dom';
import cloneDeep from 'lodash.clonedeep';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/TemplatePushEditor.tsx
Tamaño: 4195 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ChannelTypeEnum } from '@novu/shared';
import { Controller, useFormContext } from 'react-hook-form';

import { colors, Text, When } from '@novu/design-system';
import { Flex, Grid, Stack, useMantineTheme } from '@mantine/core';
import { useState } from 'react';
import { useEnvironment, useHasActiveIntegrations, useVariablesManager } from '../../../hooks';
import { useStepFormPath } from '../hooks/useStepFormPath';
import { StepSettings } from '../workflow/SideBar/StepSettings';
import { LackIntegrationAlert } from './LackIntegrationAlert';

import { PushPreview } from '../../../components/workflow/preview';
import { useEditTemplateContent } from '../hooks/useEditTemplateContent';
import { CustomCodeEditor } from './CustomCodeEditor';
import { EditVariablesModal } from './EditVariablesModal';
import { VariableManagementButton } from './VariableManagementButton';
import { useTemplateEditorForm } from './TemplateEditorFormProvider';
import { ControlVariablesForm } from './ControlVariablesForm';

const templateFields = ['content', 'title'];

export function TemplatePushEditor() {
  const [editVariablesModalOpened, setEditVariablesModalOpen] = useState(false);
  const stepFormPath = useStepFormPath();
  const { control } = useFormContext();
  const variablesArray = useVariablesManager(templateFields);
  const [controlVariables, setControlVariables] = useState();

  const { isPreviewLoading, handleContentChange } = useEditTemplateContent();
  const { hasActiveIntegration } = useHasActiveIntegrations({
    channelType: ChannelTypeEnum.PUSH,
  });
  const { template } = useTemplateEditorForm();
  const { bridge } = useEnvironment({ bridge: template?.bridge });

  return (
    <>
      {!hasActiveIntegration ? <LackIntegrationAlert channelType={ChannelTypeEnum.PUSH} /> : null}
      <StepSettings />

      <Grid gutter={24}>
        <Grid.Col span={'auto'}>
          <Stack spacing={32}>
            <Controller
              name={`${stepFormPath}.template.title` as any}
              defaultValue=""
              control={control}
              render={({ field }) => (
                <Stack spacing={8} data-test-id="push-title-container">
                  <When truthy={!bridge}>
                    <VariableManagementButton
                      openEditVariablesModal={() => {
                        setEditVariablesModalOpen(true);
                      }}
                      label={bridge ? 'Control variables' : 'Title'}
                    />

                    <CustomCodeEditor
                      value={(field.value as string) || ''}
                      onChange={(value) => {
                        handleContentChange(value, field.onChange);
                      }}
                      height="128px"
                    />
                  </When>
                  <When truthy={bridge}>
                    <ControlVariablesForm onChange={setControlVariables} />
                  </When>
                </Stack>
              )}
            />
            <When truthy={!bridge}>
              <Controller
                name={`${stepFormPath}.template.content` as any}
                defaultValue=""
                control={control}
                render={({ field }) => (
                  <Stack spacing={8} data-test-id="push-content-container">
                    <Text weight="bold">Message</Text>
                    <CustomCodeEditor
                      value={(field.value as string) || ''}
                      onChange={(value) => {
                        handleContentChange(value, field.onChange);
                      }}
                    />
                  </Stack>
                )}
              />
            </When>
          </Stack>
          <EditVariablesModal
            open={editVariablesModalOpened}
            setOpen={setEditVariablesModalOpen}
            variablesArray={variablesArray}
          />
        </Grid.Col>
        <Grid.Col span={'content'}>
          <Flex justify="center">
            <PushPreview controlVariables={controlVariables} showLoading={isPreviewLoading} showOverlay={false} />
          </Flex>
        </Grid.Col>
      </Grid>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ChannelTypeEnum } from '@novu/shared';
import { Controller, useFormContext } from 'react-hook-form';
import { colors, Text, When } from '@novu/design-system';
import { Flex, Grid, Stack, useMantineTheme } from '@mantine/core';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/TemplateSettings.tsx
Tamaño: 3146 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { Group } from '@mantine/core';
import styled from '@emotion/styled';
import { useFormContext } from 'react-hook-form';

import { Button, colors, Trash } from '@novu/design-system';
import { NotificationSettingsForm } from './notification-setting-form/NotificationSettingsForm';
import { DeleteConfirmModal } from './DeleteConfirmModal';
import { useEnvironment } from '../../../hooks';
import { useTemplateEditorForm } from './TemplateEditorFormProvider';
import { deleteTemplateById } from '../../../api/notification-templates';
import { ROUTES } from '../../../constants/routes';
import { WorkflowSettingsTabs } from './WorkflowSettingsTabs';
import { IForm } from './formTypes';
import { WorkflowSidebar } from './WorkflowSidebar';

export const TemplateSettings = () => {
  const { templateId = '' } = useParams<{ templateId: string }>();
  const { trigger, template } = useTemplateEditorForm();
  const { readonly } = useEnvironment({ bridge: template?.bridge });
  const [toDelete, setToDelete] = useState(false);
  const [isDeleting, setIsDeleting] = useState(false);
  const [isError, setIsError] = useState<string | undefined>(undefined);
  const navigate = useNavigate();
  const { watch } = useFormContext<IForm>();

  const name = watch('name');

  const confirmDelete = async () => {
    setIsDeleting(true);
    setIsError(undefined);
    try {
      await deleteTemplateById(templateId);
      setIsDeleting(false);
      setToDelete(false);
      navigate(ROUTES.WORKFLOWS);
    } catch (e: any) {
      setIsDeleting(false);
      setIsError(e?.message || 'Unknown error');
    }
  };

  const cancelDelete = () => {
    setToDelete(false);
    setIsDeleting(false);
  };

  const onDelete = () => {
    setIsError(undefined);
    setToDelete(true);
  };

  return (
    <WorkflowSidebar title="Workflow Settings">
      <WorkflowSettingsTabs />
      <NotificationSettingsForm trigger={trigger} />
      <Group position="right" mt={'auto'} mb={24}>
        <DeleteNotificationButton
          variant="outline"
          disabled={readonly}
          data-test-id="delete-notification-button"
          onClick={onDelete}
        >
          <Trash
            style={{
              marginRight: '5px',
            }}
          />
          Delete Workflow
        </DeleteNotificationButton>
      </Group>
      <DeleteConfirmModal
        title={`Delete ${name} workflow?`}
        description={
          'This cannot be undone. ' +
          'The trigger code generated based on this workflow will be disabled and the notification will no longer be sent.'
        }
        isOpen={toDelete}
        isLoading={isDeleting}
        error={isError}
        confirm={confirmDelete}
        cancel={cancelDelete}
        confirmButtonText="Delete Workflow"
        cancelButtonText="Cancel"
      />
    </WorkflowSidebar>
  );
};

const DeleteNotificationButton = styled(Button)`
  background: rgba(229, 69, 69, 0.15);
  color: ${colors.error};
  box-shadow: none;
  :hover {
    background: rgba(229, 69, 69, 0.15);
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { Group } from '@mantine/core';
import styled from '@emotion/styled';
import { useFormContext } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/TestWorkflow.tsx
Tamaño: 7478 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMemo, useEffect, useState } from 'react';
import { Group, JsonInput, Text } from '@mantine/core';
import { useForm } from '@mantine/form';
import { useWatch } from 'react-hook-form';

import { useMutation } from '@tanstack/react-query';
import { captureException } from '@sentry/react';
import capitalize from 'lodash.capitalize';
import { useDisclosure } from '@mantine/hooks';
import { IUserEntity, INotificationTriggerVariable } from '@novu/shared';
import { Button, colors, inputStyles } from '@novu/design-system';

import { errorMessage, successMessage } from '../../../utils/notifications';
import { useAuth } from '../../../hooks/useAuth';
import { getSubscriberValue, getPayloadValue } from './TriggerSnippetTabs';
import { testTrigger } from '../../../api/notification-templates';
import { ExecutionDetailsModalWrapper } from './ExecutionDetailsModalWrapper';
import { TriggerSegmentControl } from './TriggerSegmentControl';
import { WorkflowSidebar } from './WorkflowSidebar';
import { useSegment } from '../../../components/providers/SegmentProvider';
import { useOnboardingExperiment } from '../../../hooks/useOnboardingExperiment';
import { OnBoardingAnalyticsEnum } from '../../quick-start/consts';

const makeToValue = (subscriberVariables: INotificationTriggerVariable[], currentUser?: IUserEntity | null) => {
  const subsVars = getSubscriberValue(
    subscriberVariables,
    (variable) =>
      (currentUser && currentUser[variable.name === 'subscriberId' ? '_id' : variable.name]) || '<REPLACE_WITH_DATA>'
  );

  return JSON.stringify(subsVars, null, 2);
};

const makePayloadValue = (variables: INotificationTriggerVariable[]) => {
  return JSON.stringify(getPayloadValue(variables), null, 2);
};

function subscriberExist(subscriberVariables: INotificationTriggerVariable[]) {
  return subscriberVariables?.some((variable) => variable.name === 'subscriberId');
}

export function TestWorkflow({ trigger }) {
  const [transactionId, setTransactionId] = useState<string>('');
  const { currentUser, currentOrganization } = useAuth();
  const { mutateAsync: triggerTestEvent, isLoading } = useMutation(testTrigger);
  const [executionModalOpened, { close: closeExecutionModal, open: openExecutionModal }] = useDisclosure(false);

  const tags = useWatch({ name: 'tags' });

  const segment = useSegment();
  const { isOnboardingExperimentEnabled } = useOnboardingExperiment();

  const tagsIncludesOnboarding = tags?.includes('onboarding') && isOnboardingExperimentEnabled;

  const subscriberVariables = useMemo(() => {
    if (trigger?.subscriberVariables && subscriberExist(trigger?.subscriberVariables)) {
      return [...(trigger?.subscriberVariables || [])];
    }

    return [{ name: 'subscriberId' }, ...(trigger?.subscriberVariables || [])];
  }, [trigger]);

  const variables = useMemo(() => [...(trigger?.variables || [])], [trigger]);
  const reservedVariables = useMemo(() => [...(trigger?.reservedVariables || [])], [trigger]);

  const overridesTrigger = '{\n\n}';

  function jsonValidator(value: string) {
    try {
      JSON.parse(value);
    } catch (e) {
      return 'Invalid JSON';
    }
  }

  const form = useForm({
    initialValues: {
      toValue: makeToValue(subscriberVariables, currentUser),
      payloadValue: makePayloadValue(variables) === '{}' ? '{\n\n}' : makePayloadValue(variables),
      snippetValue: reservedVariables.map((variable) => {
        return { ...variable, variables: makePayloadValue(variable.variables) };
      }),
      overridesValue: overridesTrigger,
    },
    validate: {
      toValue: jsonValidator,
      payloadValue: jsonValidator,
      overridesValue: jsonValidator,
    },
  });
  const { setValues } = form;

  useEffect(() => {
    setValues({ toValue: makeToValue(subscriberVariables, currentUser) });
  }, [setValues, subscriberVariables, currentUser]);

  const onTrigger = async ({ toValue, payloadValue, overridesValue, snippetValue }) => {
    const to = JSON.parse(toValue);
    const payload = JSON.parse(payloadValue);
    const overrides = JSON.parse(overridesValue);
    const snippet = snippetValue.reduce((prev, variable) => {
      prev[variable.type] = JSON.parse(variable.variables);

      return prev;
    }, {});

    try {
      const response = await triggerTestEvent({
        name: trigger?.identifier,
        to,
        payload: {
          ...payload,
          __source: 'test-workflow',
        },
        ...snippet,
        overrides,
      });

      setTransactionId(response.transactionId || '');
      successMessage('Template triggered successfully');
      openExecutionModal();
    } catch (e: any) {
      captureException(e);
      errorMessage(e.message || 'Un-expected error occurred');
    }
  };

  return (
    <>
      <WorkflowSidebar title="Trigger">
        <Text color={colors.B60} mt={-16}>
          Test trigger as if you sent it from your API or implement it by copy/pasting it into the codebase of your
          application.
        </Text>
        <TriggerSegmentControl />
        <JsonInput
          data-test-id="test-trigger-to-param"
          formatOnBlur
          autosize
          styles={inputStyles}
          label="To"
          {...form.getInputProps('toValue')}
          minRows={3}
          validationError="Invalid JSON"
        />
        <JsonInput
          data-test-id="test-trigger-payload-param"
          formatOnBlur
          autosize
          styles={inputStyles}
          label="Payload"
          {...form.getInputProps('payloadValue')}
          minRows={3}
          validationError="Invalid JSON"
        />
        <JsonInput
          data-test-id="test-trigger-overrides-param"
          formatOnBlur
          autosize
          styles={inputStyles}
          label="Overrides (optional)"
          {...form.getInputProps('overridesValue')}
          minRows={3}
          validationError="Invalid JSON"
        />
        {form.values.snippetValue.map((variable, index) => (
          <JsonInput
            key={index}
            data-test-id="test-trigger-overrides-param"
            formatOnBlur
            autosize
            styles={inputStyles}
            label={`${capitalize(variable.type)}`}
            {...form.getInputProps(`snippetValue.${index}.variables`)}
            minRows={3}
            validationError="Invalid JSON"
          />
        ))}
        <Group position="right" mt={'auto'} mb={24}>
          <div data-test-id="test-workflow-btn">
            <Button
              sx={{
                width: 'auto',
              }}
              fullWidth={false}
              disabled={!form.isValid()}
              data-test-id="test-trigger-btn"
              inherit
              loading={isLoading}
              onClick={() => {
                onTrigger(form.values);
                if (tagsIncludesOnboarding) {
                  segment.track(OnBoardingAnalyticsEnum.ONBOARDING_EXPERIMENT_TEST_NOTIFICATION, {
                    action: 'Workflow - Run trigger',
                    experiment_id: '2024-w9-onb',
                    _organization: currentOrganization?._id,
                  });
                }
              }}
            >
              Run Trigger
            </Button>
          </div>
        </Group>
      </WorkflowSidebar>
      <ExecutionDetailsModalWrapper
        transactionId={transactionId}
        isOpen={executionModalOpened}
        onClose={closeExecutionModal}
      />
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMemo, useEffect, useState } from 'react';
import { Group, JsonInput, Text } from '@mantine/core';
import { useForm } from '@mantine/form';
import { useWatch } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/TestWorkflowPage.tsx
Tamaño: 250 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useTemplateEditorForm } from './TemplateEditorFormProvider';
import { TestWorkflow } from './TestWorkflow';

export function TestWorkflowPage() {
  const { trigger } = useTemplateEditorForm();

  return <TestWorkflow trigger={trigger} />;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useTemplateEditorForm } from './TemplateEditorFormProvider';
import { TestWorkflow } from './TestWorkflow';
export function TestWorkflowPage() {
const { trigger } = useTemplateEditorForm();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/TranslateProductLead.tsx
Tamaño: 599 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { CSSProperties } from 'react';
import { Translate } from '@novu/design-system';
import { ProductLead, ProductLeadVariants } from '../../../components/utils/ProductLead';

export const TranslateProductLead = ({ id, style = {} }: { id: string; style?: CSSProperties }) => {
  return (
    <ProductLead
      icon={<Translate />}
      id={id}
      title="Translation management"
      text="Translate your notification content to multiple languages using a connection with a preferred i18n localization provider."
      variant={ProductLeadVariants.COLUMN}
      style={style}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { CSSProperties } from 'react';
import { Translate } from '@novu/design-system';
import { ProductLead, ProductLeadVariants } from '../../../components/utils/ProductLead';
export const TranslateProductLead = ({ id, style = {} }: { id: string; style?: CSSProperties }) => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/TriggerSegmentControl.tsx
Tamaño: 896 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMemo } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { SegmentedControl } from '@novu/design-system';
import { useBasePath } from '../hooks/useBasePath';

export const TriggerSegmentControl = () => {
  const basePath = useBasePath();
  const navigate = useNavigate();
  const { pathname } = useLocation();
  const value = useMemo(() => {
    return pathname.replace(`${basePath}/`, '');
  }, [pathname, basePath]);

  return (
    <SegmentedControl
      sx={{
        maxWidth: '100% !important',
      }}
      fullWidth
      data={[
        {
          label: 'Run a Test',
          value: 'test-workflow',
        },
        {
          label: 'Get Snippet',
          value: 'snippet',
        },
      ]}
      value={value}
      onChange={async (segmentValue) => {
        navigate(`${basePath}/${segmentValue}`);
      }}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMemo } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { SegmentedControl } from '@novu/design-system';
import { useBasePath } from '../hooks/useBasePath';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/TriggerSnippetTabs.tsx
Tamaño: 3525 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Prism } from '@mantine/prism';
import { useMemo } from 'react';
import set from 'lodash.set';
import get from 'lodash.get';

import { INotificationTrigger, INotificationTriggerVariable, TemplateVariableTypeEnum } from '@novu/shared';

import { colors, Tabs } from '@novu/design-system';
import { CodeSnippetProps, createCurlSnippet, createNodeSnippet } from '../../../utils/codeSnippets';

const NODE_JS = 'Node.js';
const CURL = 'Curl';

export function TriggerSnippetTabs({ trigger }: { trigger: INotificationTrigger }) {
  const { subscriberVariables: triggerSubscriberVariables = [], reservedVariables: triggerSnippetVariables = [] } =
    trigger || {};
  const isPassingSubscriberId = triggerSubscriberVariables?.find((el) => el.name === 'subscriberId');
  const subscriberVariables = isPassingSubscriberId
    ? [...triggerSubscriberVariables]
    : [{ name: 'subscriberId' }, ...triggerSubscriberVariables];

  const toValue = getSubscriberValue(subscriberVariables, (variable) => variable.value || '<REPLACE_WITH_DATA>');
  const payloadValue = getPayloadValue(trigger.variables);

  const reservedValue = useMemo(() => {
    return triggerSnippetVariables.reduce((prev, variable) => {
      prev[variable.type] = getPayloadValue(variable.variables);

      return prev;
    }, {});
  }, [triggerSnippetVariables]);

  const prismTabs = [
    {
      value: NODE_JS,
      content: getNodeTriggerSnippet({
        identifier: trigger.identifier,
        to: toValue,
        payload: payloadValue,
        snippet: reservedValue,
      }),
    },
    {
      value: CURL,
      content: getCurlTriggerSnippet({
        identifier: trigger.identifier,
        to: toValue,
        payload: payloadValue,
        snippet: reservedValue,
      }),
    },
  ];

  return <Tabs defaultValue={NODE_JS} data-test-id="trigger-code-snippet" menuTabs={prismTabs} />;
}

export const getNodeTriggerSnippet = (props: CodeSnippetProps) => {
  return (
    <Prism mt={5} styles={prismStyles} data-test-id="trigger-code-snippet" language="javascript">
      {createNodeSnippet(props)}
    </Prism>
  );
};

export const getCurlTriggerSnippet = (props: CodeSnippetProps) => {
  return (
    <Prism mt={5} styles={prismStyles} language="bash" key="2" data-test-id="trigger-curl-snippet">
      {createCurlSnippet(props)}
    </Prism>
  );
};

export const getPayloadValue = (variables: INotificationTriggerVariable[]) => {
  const varsObj: Record<string, any> = {};
  variables
    .filter((variable) => variable?.type !== TemplateVariableTypeEnum.ARRAY)
    .forEach((variable) => {
      set(varsObj, variable.name, variable.value || '<REPLACE_WITH_DATA>');
    });
  variables
    .filter((variable) => variable?.type === TemplateVariableTypeEnum.ARRAY)
    .forEach((variable) => {
      set(varsObj, variable.name, [get(varsObj, variable.name, '<REPLACE_WITH_DATA>')]);
    });

  return varsObj;
};
export const getSubscriberValue = (
  variables: INotificationTriggerVariable[],
  getValue: (variable: INotificationTriggerVariable) => any
) => {
  const varsObj: Record<string, any> = {};
  variables.forEach((variable) => {
    set(varsObj, variable.name, getValue(variable));
  });

  return varsObj;
};

const prismStyles = (theme) => ({
  scrollArea: {
    border: ` 1px solid ${theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[5]}`,
    borderRadius: '7px',
  },
  code: {
    fontWeight: 400,
    color: `${colors.B60} !important`,
    backgroundColor: 'transparent !important',
  },
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Prism } from '@mantine/prism';
import { useMemo } from 'react';
import set from 'lodash.set';
import get from 'lodash.get';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/UnsavedChangesModal.tsx
Tamaño: 1653 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, Modal, useMantineTheme } from '@mantine/core';
import { Button, colors, shadows, Title, Text } from '@novu/design-system';

export function UnsavedChangesModal({
  isOpen,
  cancelNavigation,
  confirmNavigation,
}: {
  isOpen: boolean;
  cancelNavigation: () => void;
  confirmNavigation: () => void;
}) {
  const theme = useMantineTheme();

  return (
    <>
      <Modal
        opened={isOpen}
        withinPortal
        overlayColor={theme.colorScheme === 'dark' ? colors.BGDark : colors.BGLight}
        overlayOpacity={0.7}
        styles={{
          root: {
            zIndex: 201, // because the editor sidebar has z-index 200
          },
          modal: {
            backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.white,
          },
          body: {
            paddingTop: '5px',
          },
          inner: {
            paddingTop: '180px',
          },
        }}
        title={<Title size={2}>Unsaved changes</Title>}
        sx={{ backdropFilter: 'blur(10px)' }}
        shadow={theme.colorScheme === 'dark' ? shadows.dark : shadows.medium}
        radius="md"
        size="lg"
        onClose={() => {
          cancelNavigation();
        }}
      >
        <div>
          <Text>Any unsaved changes will be deleted. Proceed anyway?</Text>
          <Group position="right">
            <Button variant="outline" size="md" mt={30} onClick={() => cancelNavigation()}>
              No
            </Button>
            <Button mt={30} size="md" onClick={() => confirmNavigation()}>
              Yes
            </Button>
          </Group>
        </div>
      </Modal>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, Modal, useMantineTheme } from '@mantine/core';
import { Button, colors, shadows, Title, Text } from '@novu/design-system';
export function UnsavedChangesModal({
isOpen,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/UpdateButton.tsx
Tamaño: 643 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Button } from '@novu/design-system';
import { useFormContext } from 'react-hook-form';
import { IForm } from './formTypes';
import { useEnvironment } from '../../../hooks';
import { useTemplateEditorForm } from './TemplateEditorFormProvider';

export const UpdateButton = () => {
  const { formState } = useFormContext<IForm>();
  const { readonly } = useEnvironment();
  const { isUpdating } = useTemplateEditorForm();

  return (
    <Button
      data-test-id="notification-template-submit-btn"
      loading={isUpdating}
      disabled={readonly || !formState.isDirty}
      submit={true}
    >
      Update
    </Button>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Button } from '@novu/design-system';
import { useFormContext } from 'react-hook-form';
import { IForm } from './formTypes';
import { useEnvironment } from '../../../hooks';
import { useTemplateEditorForm } from './TemplateEditorFormProvider';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/UserPreference.tsx
Tamaño: 386 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { TemplatePreference } from './notification-setting-form/TemplatePreference';
import { WorkflowSettingsTabs } from './WorkflowSettingsTabs';
import { WorkflowSidebar } from './WorkflowSidebar';

export function UserPreference() {
  return (
    <WorkflowSidebar title="Workflow Settings">
      <WorkflowSettingsTabs />
      <TemplatePreference />
    </WorkflowSidebar>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { TemplatePreference } from './notification-setting-form/TemplatePreference';
import { WorkflowSettingsTabs } from './WorkflowSettingsTabs';
import { WorkflowSidebar } from './WorkflowSidebar';
export function UserPreference() {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/VariableManagementButton.tsx
Tamaño: 1949 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, createStyles } from '@mantine/core';
import { useDisclosure } from '@mantine/hooks';

import { Text, CurlyBrackets, ActionButton, Popover } from '@novu/design-system';

import { useStepFormPath } from '../hooks/useStepFormPath';
import { VariablesManagement } from './email-editor/variables-management/VariablesManagement';

const usePopoverStyles = createStyles(() => ({
  dropdown: {
    padding: '0px !important',
    flex: 1,
    overflowY: 'auto',
    overflowX: 'hidden',
    height: '70%',
    borderColor: 'transparent',
  },
}));

export const VariableManagementButton = ({
  label,
  openEditVariablesModal,
}: {
  label?: string;
  openEditVariablesModal: () => void;
}) => {
  const stepFormPath = useStepFormPath();
  const [variablesManagementOpen, { close: closeVariablesManagement, toggle: toggleVariablesManagement }] =
    useDisclosure(false);
  const { classes } = usePopoverStyles();

  return (
    <Group position={'apart'}>
      <Text weight="bold">{label ?? 'Message content'}</Text>
      <Popover
        width={300}
        className={classes.dropdown}
        opened={variablesManagementOpen}
        target={
          <ActionButton
            Icon={CurlyBrackets}
            data-test-id="open-variable-management"
            onClick={toggleVariablesManagement}
            tooltip="Open variables panel"
            sx={{
              '> svg': {
                width: 16,
                height: 12,
              },
            }}
          />
        }
        content={
          <VariablesManagement
            isPopover
            closeVariablesManagement={closeVariablesManagement}
            path={`${stepFormPath}.template.variables`}
            openVariablesModal={() => {
              closeVariablesManagement();
              openEditVariablesModal();
            }}
          />
        }
        withArrow={false}
        position={'right-start'}
      />
    </Group>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, createStyles } from '@mantine/core';
import { useDisclosure } from '@mantine/hooks';
import { Text, CurlyBrackets, ActionButton, Popover } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/VariableManager.tsx
Tamaño: 5097 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { TemplateVariableTypeEnum, TemplateSystemVariables } from '@novu/shared';
import { Controller, useWatch } from 'react-hook-form';
import { Code, Space, Table } from '@mantine/core';
import styled from '@emotion/styled';

import { colors, Input, Switch, Text } from '@novu/design-system';
import { When } from '../../../components/utils/When';
import { useEnvironment } from '../../../hooks';

interface VariableManagerProps {
  variablesArray: Record<string, any>;
  hideLabel?: boolean;
  control?: any;
  path?: string;
}

interface VariableComponentProps {
  index: number;
  readonly: boolean;
  control?: any;
  path?: string;
}

export const VariableComponent = ({ index, control, path, readonly }: VariableComponentProps) => {
  const formPrefix = `${path}.variables.${index}`;
  const variableName = useWatch({
    name: `${formPrefix}.name`,
    control,
  });

  const variableType = useWatch({
    name: `${formPrefix}.type`,
    control,
  });

  const variableTypeHumanize = {
    [TemplateVariableTypeEnum.STRING]: 'value',
    [TemplateVariableTypeEnum.ARRAY]: 'array',
    [TemplateVariableTypeEnum.BOOLEAN]: 'boolean',
  }[variableType];

  const isSystemVariable = TemplateSystemVariables.includes(
    variableName.includes('.') ? variableName.split('.')[0] : variableName
  );

  return (
    <VariableWrapper data-test-id="template-variable-row">
      <td>
        <Code
          sx={(theme) => ({
            backgroundColor: theme.colorScheme === 'dark' ? colors.B20 : colors.BGLight,
          })}
        >
          {variableName}
        </Code>
      </td>
      <td>
        <Code
          sx={(theme) => ({
            backgroundColor: theme.colorScheme === 'dark' ? colors.B20 : colors.BGLight,
            color: colors.B60,
          })}
        >
          {variableTypeHumanize}
        </Code>
      </td>
      <td>
        {variableType === TemplateVariableTypeEnum.STRING && !isSystemVariable && (
          <Controller
            name={`${formPrefix}.defaultValue`}
            defaultValue=""
            control={control}
            render={({ field, fieldState }) => {
              return (
                <Input
                  error={fieldState.error?.message}
                  type="text"
                  data-test-id="variable-default-value"
                  placeholder="Default Value"
                  value={field.value}
                  onChange={field.onChange}
                  disabled={readonly}
                />
              );
            }}
          />
        )}
        {variableType === TemplateVariableTypeEnum.BOOLEAN && !isSystemVariable && (
          <Controller
            name={`${formPrefix}.defaultValue`}
            defaultValue=""
            control={control}
            render={({ field }) => {
              return (
                <Switch
                  data-test-id="variable-required-value"
                  label={field.value ? 'True' : 'False'}
                  checked={field.value === true}
                  onChange={field.onChange}
                  disabled={readonly}
                />
              );
            }}
          />
        )}
        {isSystemVariable && (
          <Text color={colors.B60} size="lg" weight="bold">
            This variable is reserved by the system
          </Text>
        )}
      </td>
      <td className="required-td">
        <Controller
          name={`${formPrefix}.required`}
          defaultValue={false}
          control={control}
          render={({ field }) => {
            return (
              <Switch
                label="is&nbsp;required"
                checked={field.value === true}
                onChange={field.onChange}
                disabled={isSystemVariable || readonly}
              />
            );
          }}
        />
      </td>
    </VariableWrapper>
  );
};

export function VariableManager({ variablesArray, hideLabel = false, path, control }: VariableManagerProps) {
  const { readonly } = useEnvironment();

  if (!variablesArray.fields.length) return null;

  return (
    <>
      <When truthy={hideLabel === false}>
        <Text size="md" weight="bold" mt={20}>
          Variables
        </Text>
      </When>

      <Table>
        <thead>
          <tr>
            <th />
            <th />
            <th />
            <th style={{ textAlign: 'right' }} />
          </tr>
        </thead>
        <tbody>
          {variablesArray.fields.map((field, ind) => (
            <VariableComponent key={field.id} index={ind} path={path} control={control} readonly={readonly} />
          ))}
        </tbody>
      </Table>

      <Space h="sm" />
    </>
  );
}

const VariableWrapper = styled.tr`
  margin-bottom: 10px;

  .mantine-Code-root {
    padding: 12px;
    font-size: 0.8rem;
    display: inline-block;
  }

  .mantine-TextInput-root input,
  .mantine-Select-wrapper input {
    min-height: 40px;
    margin: 0;
    font-size: 0.8rem;
  }

  .mantine-Switch-root {
    width: auto;
    max-width: inherit;
  }

  .required-td input {
    margin-left: auto;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { TemplateVariableTypeEnum, TemplateSystemVariables } from '@novu/shared';
import { Controller, useWatch } from 'react-hook-form';
import { Code, Space, Table } from '@mantine/core';
import styled from '@emotion/styled';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/VariantItemCard.tsx
Tamaño: 8795 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { FilterPartTypeEnum, StepTypeEnum, STEP_TYPE_TO_CHANNEL_TYPE } from '@novu/shared';
import { MouseEventHandler, useEffect, useRef, useState } from 'react';
import { useFormContext } from 'react-hook-form';
import { useNavigate, useParams } from 'react-router-dom';
import { colors, Check, Conditions as ConditionsIcon } from '@novu/design-system';

import { Conditions } from '../../../components/conditions';
import { When } from '../../../components/utils/When';
import { stepIcon } from '../constants';
import { useBasePath } from '../hooks/useBasePath';
import { useFilterPartsList } from '../hooks/useFilterPartsList';
import { useStepSubtitle } from '../hooks/useStepSubtitle';
import { NodeType, WorkflowNode } from '../workflow/workflow/node-types/WorkflowNode';
import { DeleteConfirmModal } from './DeleteConfirmModal';
import { IForm, IFormStep, IVariantStep } from './formTypes';
import { useTemplateEditorForm } from './TemplateEditorFormProvider';
import { NODE_ERROR_TYPES } from '../workflow/workflow/node-types/utils';
import { useNavigateToVariantPreview } from '../hooks/useNavigateToVariantPreview';

const VariantItemCardHolder = styled.div`
  display: grid;
  grid-template-columns: max-content 1fr max-content 1fr max-content;
  grid-template-rows: max-content 1fr max-content 1fr;
  gap: 6px;
  margin-bottom: 6px;
`;

const FlexContainer = styled.span`
  display: flex;
  justify-content: center;
  align-items: center;
`;

const WorkflowNodeStyled = styled(WorkflowNode)`
  cursor: pointer;
  grid-column: 5 / -1;
  grid-row: 2 / -1;
`;

const HorizontalLine = styled.span`
  height: 2px;
  width: 100%;
  border-top: 2px dashed ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B40 : colors.B60)};
`;

const VerticalLine = styled.span`
  width: 2px;
  height: 100%;
  border-left: 2px dashed ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B40 : colors.B60)};
`;

const LeftBottomCorner = styled.span`
  border-bottom: 2px dashed ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B40 : colors.B60)};
  border-left: 2px dashed ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B40 : colors.B60)};
  border-radius: 0 0 0 8px;
  margin: 0 0 8px 8px;
  grid-column: 1 / span 2;
  grid-row: 2 / span 2;
`;

const NoSpan = styled.span`
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B40 : colors.B60)};
  line-height: 20px;
  grid-column: 1 / span 1;
  grid-row: 1 / span 1;
`;

const NoLine = styled(FlexContainer)`
  height: 15px;
  grid-column: 1 / span 1;
  grid-row: 1 / span 1;
`;

const ConditionsItem = styled(FlexContainer)`
  grid-column: 1 / span 1;
  grid-row: 3 / span 1;
`;

const ConditionsIconStyled = styled(ConditionsIcon)`
  width: 16px;
  height: 16px;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B40 : colors.B60)};
`;

const CheckItem = styled(FlexContainer)`
  grid-column: 3 / span 1;
  grid-row: 3 / span 1;
`;

const CheckIcon = styled(Check)`
  width: 16px;
  height: 16px;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B40 : colors.B60)};
`;

const BottomNoLine = styled(FlexContainer)`
  grid-column: 1 / span 1;
  grid-row: 2 / span 1;
`;

const BottomConditionsLine = styled(FlexContainer)`
  grid-column: 1;
  grid-row: 4 / -1;
`;

const RightConditionsLine = styled(FlexContainer)`
  grid-column: 2 / span 1;
  grid-row: 3 / span 1;
`;

const RightCheckLine = styled(FlexContainer)`
  grid-column: 4 / span 1;
  grid-row: 3 / span 1;
`;

export const VariantItemCard = ({
  isReadonly = false,
  stepIndex = 0,
  variantIndex = 0,
  isFirst = false,
  nodeType,
  variant,
  'data-test-id': dataTestId,
  errorMessage,
  nodeErrorType,
}: {
  isReadonly?: boolean;
  stepIndex?: number;
  variantIndex?: number;
  isFirst?: boolean;
  variant: IFormStep | IVariantStep;
  nodeType: NodeType;
  'data-test-id'?: string;
  errorMessage?: string;
  nodeErrorType?: NODE_ERROR_TYPES;
}) => {
  const { setValue } = useFormContext<IForm>();
  const {
    channel,
    stepUuid = '',
    variantUuid = '',
  } = useParams<{
    channel: StepTypeEnum;
    stepUuid: string;
    variantUuid: string;
  }>();
  const subtitle = useStepSubtitle({
    path: `steps.${stepIndex}.variants.${variantIndex}`,
    step: variant,
    channelType: channel,
  });
  const navigate = useNavigate();
  const basePath = useBasePath();
  const { navigateToVariantPreview } = useNavigateToVariantPreview();
  const [areConditionsOpened, setConditionsOpened] = useState(false);
  const filterPartsList = useFilterPartsList({ index: stepIndex });
  const { deleteVariant } = useTemplateEditorForm();
  const [isDeleteModalOpened, setIsDeleteModalOpened] = useState(false);
  const variantItemCardHolderRef = useRef<HTMLDivElement | null>(null);

  const Icon = stepIcon[channel ?? ''];
  const variantsCount = ('variants' in variant ? variant.variants?.length : 0) ?? 0;
  const isRoot = nodeType === 'variantRoot';
  const isSelected = (isRoot && stepUuid === variantUuid) || variant.uuid === variantUuid;
  const conditions = variant.filters ?? [];
  const conditionsCount = conditions && conditions.length > 0 ? (conditions[0].children?.length ?? 0) : 0;

  const onEdit: MouseEventHandler<HTMLButtonElement> = (e) => {
    e.stopPropagation();
    if (isRoot) {
      navigate(`${basePath}/${channel}/${stepUuid}`);

      return;
    }
    navigate(`${basePath}/${channel}/${stepUuid}/variants/${variant.uuid}`);
  };

  const onClick: MouseEventHandler<HTMLDivElement> = (e) => {
    e.stopPropagation();
    navigateToVariantPreview({ variantUuid: variant.uuid });
  };

  const onDeleteIcon = () => {
    setIsDeleteModalOpened(true);
  };

  const confirmDelete = () => {
    setIsDeleteModalOpened(false);
    if (!stepUuid || !variant?.uuid) {
      return;
    }

    deleteVariant(stepUuid, variant.uuid);
  };

  const cancelDelete = () => {
    setIsDeleteModalOpened(false);
  };

  const onAddConditions = (e) => {
    e.preventDefault();
    e.stopPropagation();

    setConditionsOpened(true);
  };

  const onConditionsClose = () => setConditionsOpened(false);

  const onUpdateConditions = (newConditions) => {
    setValue(`steps.${stepIndex}.variants.${variantIndex}.filters`, newConditions, { shouldDirty: true });
  };

  useEffect(() => {
    if (isSelected) {
      variantItemCardHolderRef.current?.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
  }, [isSelected]);

  return (
    <VariantItemCardHolder ref={variantItemCardHolderRef} data-test-id={dataTestId}>
      {!isFirst ? (
        <NoSpan>No</NoSpan>
      ) : (
        <NoLine>
          <VerticalLine />
        </NoLine>
      )}
      <When truthy={!isRoot}>
        <BottomNoLine>
          <VerticalLine />
        </BottomNoLine>
        <ConditionsItem>
          <ConditionsIconStyled />
        </ConditionsItem>
        <BottomConditionsLine>
          <VerticalLine />
        </BottomConditionsLine>
        <RightConditionsLine>
          <HorizontalLine />
        </RightConditionsLine>
      </When>
      <When truthy={isRoot}>
        <LeftBottomCorner />
      </When>
      <CheckItem>
        <CheckIcon />
      </CheckItem>
      <RightCheckLine>
        <HorizontalLine />
      </RightCheckLine>
      <WorkflowNodeStyled
        Icon={Icon}
        label={variant.name ?? ''}
        subtitle={subtitle}
        tabKey={STEP_TYPE_TO_CHANNEL_TYPE.get(variant.template?.type)}
        channelType={variant.template?.type}
        variantsCount={variantsCount}
        conditionsCount={conditionsCount}
        onClick={onClick}
        onEdit={onEdit}
        onDelete={onDeleteIcon}
        onAddConditions={onAddConditions}
        menuPosition="bottom-end"
        nodeType={nodeType}
        errors={errorMessage}
        nodeErrorType={nodeErrorType}
        active={isSelected}
      />
      {areConditionsOpened && (
        <Conditions
          isOpened
          isReadonly={isReadonly}
          name={variant.name ?? ''}
          onClose={onConditionsClose}
          updateConditions={onUpdateConditions}
          conditions={conditions}
          filterPartsList={filterPartsList}
          defaultFilter={FilterPartTypeEnum.PAYLOAD}
          shouldDisallowEmptyConditions
        />
      )}
      <DeleteConfirmModal
        description={
          'This cannot be undone. ' +
          'The trigger code will be updated and this variant will no longer participate in the notification workflow.'
        }
        target="variant"
        title={`Delete variant?`}
        isOpen={isDeleteModalOpened}
        confirm={confirmDelete}
        cancel={cancelDelete}
        confirmButtonText="Delete variant"
        cancelButtonText="Cancel"
      />
    </VariantItemCardHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { FilterPartTypeEnum, StepTypeEnum, STEP_TYPE_TO_CHANNEL_TYPE } from '@novu/shared';
import { MouseEventHandler, useEffect, useRef, useState } from 'react';
import { useFormContext } from 'react-hook-form';
import { useNavigate, useParams } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/VariantPreview.tsx
Tamaño: 685 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { StepTypeEnum } from '@novu/shared';
import { useParams } from 'react-router-dom';
import { PreviewComponent } from './ChannelPreview';

const VariantPreviewContainer = styled.div`
  display: grid;
  grid-template-columns: minmax(auto, 90rem);
  justify-content: center;
  justify-items: center;
  overflow-y: auto;
  overflow-x: hidden;
  padding-bottom: 1rem;
`;

export const VariantPreview = () => {
  const { channel } = useParams<{
    channel: StepTypeEnum;
  }>();

  if (!channel) {
    return null;
  }

  return (
    <VariantPreviewContainer>
      <PreviewComponent channel={channel} />
    </VariantPreviewContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { StepTypeEnum } from '@novu/shared';
import { useParams } from 'react-router-dom';
import { PreviewComponent } from './ChannelPreview';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/VariantsList.tsx
Tamaño: 4185 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMemo, useRef, useState } from 'react';
import styled from '@emotion/styled';
import { useFormContext } from 'react-hook-form';
import { ScrollArea } from '@mantine/core';
import { useParams } from 'react-router-dom';
import { StepTypeEnum } from '@novu/shared';
import { When } from '@novu/design-system';
import { useEnvironment } from '../../../hooks';

import { FloatingButton } from './FloatingButton';
import { VariantItemCard } from './VariantItemCard';
import { ItemTypeEnum } from './useVariantListErrors';
import { IForm } from './formTypes';
import { VariantsListErrors } from './VariantsListErrors';
import { useVariantListErrorsNavigation } from './useVariantListErrorsNavigation';

const LeftContainer = styled.div`
  display: flex;
  flex-direction: column;
`;

export const VariantsList = () => {
  const { channel, stepUuid = '' } = useParams<{
    channel: StepTypeEnum;
    stepUuid: string;
  }>();
  const { readonly: isReadonly } = useEnvironment();
  const { watch } = useFormContext<IForm>();
  const viewport = useRef<HTMLDivElement | null>(null);
  const [scrollPosition, setScrollPosition] = useState<{ x: number; y: number }>({ x: 0, y: 0 });
  const [isScrollable, setScrollable] = useState(false);

  const steps = watch('steps');
  const stepIndex = useMemo(
    () => steps.findIndex((message) => message.template.type === channel && message.uuid === stepUuid),
    [channel, stepUuid, steps]
  );
  const step = watch(`steps.${stepIndex}`);
  const variants = step?.variants ?? [];

  const { allErrors, errorState, onErrorUp, onErrorDown, onErrorMessageClick } = useVariantListErrorsNavigation();
  const isRootErrorActive = errorState?.itemType === ItemTypeEnum.ROOT;
  const allErrorsCount = allErrors.errors.length;
  const hasErrors = allErrorsCount > 0;

  const setViewportRef = (ref: HTMLDivElement | null) => {
    if (!ref) {
      return;
    }
    viewport.current = ref;
    setScrollable(ref.scrollHeight > ref.clientHeight);
  };

  const scrollTo = (e) => {
    e.preventDefault();
    e.stopPropagation();
    if (!viewport.current) {
      return;
    }

    viewport.current.scrollTo({ top: scrollPosition.y > 0 ? 0 : viewport.current.scrollHeight, behavior: 'smooth' });
  };

  return (
    <LeftContainer>
      <When truthy={hasErrors}>
        <VariantsListErrors
          error={{ errorIndex: errorState?.errorIndex, errorMessage: errorState?.errorMessage }}
          errorsCount={allErrorsCount}
          onErrorMessageClick={onErrorMessageClick}
          onErrorUp={onErrorUp}
          onErrorDown={onErrorDown}
        />
      </When>
      <ScrollArea
        key={stepUuid}
        offsetScrollbars
        styles={{ viewport: { padding: '0 1.5rem 1.5rem 0.75rem' } }}
        viewportRef={setViewportRef}
        onScrollPositionChange={setScrollPosition}
      >
        {[...variants].reverse().map((variant, idx) => {
          const variantIndex = variants.length - idx - 1;
          const isActiveError = errorState?.variantIndex === variantIndex;
          const errorMessage = isActiveError ? errorState.errorMessage : allErrors.errorsMap[`variant-${variantIndex}`];

          return (
            <VariantItemCard
              key={`${stepUuid}_${variant._id}`}
              isReadonly={isReadonly}
              isFirst={variantIndex === 0}
              variant={variant}
              stepIndex={stepIndex}
              variantIndex={variantIndex}
              nodeType="variant"
              data-test-id={`variant-item-card-${variantIndex}`}
              errorMessage={errorMessage}
            />
          );
        })}
        {step && (
          <VariantItemCard
            isReadonly={isReadonly}
            key={stepUuid}
            variant={step}
            nodeType="variantRoot"
            data-test-id="variant-root-card"
            errorMessage={isRootErrorActive ? errorState.errorMessage : allErrors.errorsMap.root}
            nodeErrorType={isRootErrorActive ? errorState.errorType : undefined}
          />
        )}
        {isScrollable && <FloatingButton isUp={scrollPosition.y > 0} onClick={scrollTo} />}
      </ScrollArea>
    </LeftContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMemo, useRef, useState } from 'react';
import styled from '@emotion/styled';
import { useFormContext } from 'react-hook-form';
import { ScrollArea } from '@mantine/core';
import { useParams } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/VariantsListErrors.tsx
Tamaño: 1830 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { ActionIcon, Divider, Group } from '@mantine/core';
import { ChevronPlainDown, colors, ErrorIcon, Text } from '@novu/design-system';

import { When } from '../../../components/utils/When';

const ChevronPlainUp = styled(ChevronPlainDown)`
  transform: rotate(180deg);
`;

interface IVariantsListErrorsProps {
  error: {
    errorMessage?: string;
    errorIndex?: number;
  };
  errorsCount: number;
  onErrorMessageClick: () => void;
  onErrorUp: () => void;
  onErrorDown: () => void;
}

export const VariantsListErrors: React.FC<IVariantsListErrorsProps> = ({
  error,
  errorsCount,
  onErrorMessageClick,
  onErrorUp,
  onErrorDown,
}) => {
  return (
    <When truthy={error}>
      <Group position="apart" px={12} mt={10} mb={10}>
        <Group position="left" spacing={4} onClick={onErrorMessageClick} sx={{ cursor: 'pointer' }}>
          <ErrorIcon color={colors.error} width="16px" height="16px" />
          <Text color={colors.error} data-test-id="variants-list-current-error">
            {error?.errorMessage || ''}
          </Text>
        </Group>
        <Group position="left" spacing={20}>
          <Text color={colors.error} data-test-id="variants-list-errors-count">
            {(error?.errorIndex ?? 0) + 1}/{errorsCount}
          </Text>
          <Divider orientation="vertical" size="sm" color="#ffffff33" />
          <ActionIcon color="gray" radius="xl" size="xs" onClick={onErrorUp} data-test-id="variants-list-errors-up">
            <ChevronPlainUp color={colors.error} />
          </ActionIcon>
          <ActionIcon color="gray" radius="xl" size="xs" onClick={onErrorDown} data-test-id="variants-list-errors-down">
            <ChevronPlainDown color={colors.error} />
          </ActionIcon>
        </Group>
      </Group>
    </When>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { ActionIcon, Divider, Group } from '@mantine/core';
import { ChevronPlainDown, colors, ErrorIcon, Text } from '@novu/design-system';
import { When } from '../../../components/utils/When';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/VariantsListSidebar.tsx
Tamaño: 1439 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ReactNode } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { StepTypeEnum } from '@novu/shared';
import { Sidebar } from '@novu/design-system';

import { useStepIndex } from '../hooks/useStepIndex';
import { StepName } from './StepName';
import { VariantsListSidebarActions } from './VariantsListSidebarActions';
import { useBasePath } from '../hooks/useBasePath';

const VariantsSidebarHeader = ({ isLoading }: { isLoading?: boolean }) => {
  const { channel } = useParams<{
    channel: StepTypeEnum;
  }>();

  if (!channel || isLoading) {
    return null;
  }

  return (
    <div style={{ display: 'flex', width: '100%', gap: 12 }}>
      <StepName channel={channel} />
      <VariantsListSidebarActions />
    </div>
  );
};

export const VariantsListSidebar = ({ isLoading = false, children }: { isLoading?: boolean; children: ReactNode }) => {
  const navigate = useNavigate();
  const basePath = useBasePath();
  const { stepIndex } = useStepIndex();

  return (
    <Sidebar
      key={`${stepIndex}`}
      isOpened
      isExpanded
      isLoading={isLoading}
      customHeader={<VariantsSidebarHeader isLoading={isLoading} />}
      onClose={() => {
        navigate(basePath);
      }}
      styles={{
        body: {
          '> form': {
            gap: 0,
          },
        },
      }}
      data-test-id="variants-list-sidebar"
    >
      {children}
    </Sidebar>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ReactNode } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { StepTypeEnum } from '@novu/shared';
import { Sidebar } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/VariantsListSidebarActions.tsx
Tamaño: 6055 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import { useEffect, useRef, useState } from 'react';
import { useFieldArray, useFormContext } from 'react-hook-form';
import { useLocation, useNavigate, useParams } from 'react-router-dom';
import { FilterPartTypeEnum } from '@novu/shared';
import { ActionButton, Condition, ConditionPlus, Trash, VariantPlus } from '@novu/design-system';

import { Conditions, IConditions } from '../../../components/conditions';
import { When } from '../../../components/utils/When';
import { useEnvironment } from '../../../hooks';
import { useBasePath } from '../hooks/useBasePath';
import { useFilterPartsList } from '../hooks/useFilterPartsList';
import { useStepIndex } from '../hooks/useStepIndex';
import { useStepVariantsCount } from '../hooks/useStepVariantsCount';
import { DeleteConfirmModal } from './DeleteConfirmModal';
import { IForm } from './formTypes';
import { makeVariantFromStep, useTemplateEditorForm } from './TemplateEditorFormProvider';

const variantsCreatePath = '/variants/create';

export const VariantsListSidebarActions = () => {
  const { control, watch, setValue } = useFormContext<IForm>();
  const { deleteStep } = useTemplateEditorForm();
  const { readonly: isReadonly } = useEnvironment();
  const { stepUuid = '', channel = '' } = useParams<{
    stepUuid: string;
    channel: string;
    variantUuid: string;
  }>();
  const basePath = useBasePath();
  const navigate = useNavigate();
  const { pathname } = useLocation();
  const isNewVariantCreationUrl = pathname.endsWith(variantsCreatePath);
  const [areConditionsOpened, setConditionsOpened] = useState(isNewVariantCreationUrl);
  const [isDeleteModalOpened, setIsDeleteModalOpened] = useState(false);

  useEffect(() => {
    setConditionsOpened(isNewVariantCreationUrl);
  }, [isNewVariantCreationUrl]);
  // we need to know if we are creating a new variant to continue redirection to the new variant page
  const proceedToNewVariant = useRef(false);

  const { step: rootStep, stepIndex } = useStepIndex();
  const stepFormPath = `steps.${stepIndex}` as const;
  const filterPartsList = useFilterPartsList({ index: stepIndex });
  const { variantsCount } = useStepVariantsCount();

  const { append } = useFieldArray({
    control,
    name: `${stepFormPath}.variants`,
  });

  // [] is the default value for filters for the new variants
  const filters = isNewVariantCreationUrl ? [] : watch(`${stepFormPath}.filters.0.children`);
  const conditions = isNewVariantCreationUrl ? [] : watch(`${stepFormPath}.filters`);
  const formPathName = watch(`${stepFormPath}.name`);
  const name = isNewVariantCreationUrl ? `V${variantsCount + 1} ${formPathName}` : formPathName;
  const hasNoFilters = (filters && filters?.length === 0) || !filters || isNewVariantCreationUrl;

  const onAddVariant = () => {
    const newPath = `${basePath}/${channel}/${stepUuid}/variants/create`;
    navigate(newPath);
  };

  const updateConditions = (newConditions: IConditions[]) => {
    if (isNewVariantCreationUrl) {
      proceedToNewVariant.current = true;
      if (!rootStep) {
        return;
      }

      const variant = makeVariantFromStep(rootStep, { conditions: newConditions });
      append(variant);
      navigate(`${basePath}/${variant.template.type}/${stepUuid}/variants/${variant.uuid}`);
    } else {
      setValue(`${stepFormPath}.filters`, newConditions, { shouldDirty: true });
    }
  };

  const onConditionsClose = () => {
    if (isNewVariantCreationUrl && !proceedToNewVariant.current) {
      navigate(-1);

      return;
    }

    setConditionsOpened(false);
  };

  const openDeleteModal = () => {
    setIsDeleteModalOpened(true);
  };

  const confirmDelete = () => {
    deleteStep(stepIndex);
    navigate(basePath);
    setIsDeleteModalOpened(false);
  };

  const cancelDelete = () => {
    setIsDeleteModalOpened(false);
  };

  const conditionAction = isReadonly ? 'View' : hasNoFilters ? 'Add' : 'Edit';

  return (
    <>
      <Group noWrap spacing={12} ml={'auto'} sx={{ alignItems: 'flex-start' }}>
        <When truthy={!isReadonly}>
          <ActionButton
            tooltip="Add variant"
            onClick={onAddVariant}
            Icon={VariantPlus}
            data-test-id="variant-sidebar-add-variant"
          />
        </When>
        <When truthy={hasNoFilters && !isReadonly}>
          <ActionButton
            tooltip={`${conditionAction} group conditions`}
            onClick={() => setConditionsOpened(true)}
            Icon={ConditionPlus}
            data-test-id="variant-sidebar-add-conditions"
          />
        </When>
        <When truthy={!hasNoFilters}>
          <ActionButton
            tooltip={`${conditionAction} group conditions`}
            text={`${filters?.length ?? ''}`}
            onClick={() => setConditionsOpened(true)}
            Icon={Condition}
            data-test-id="variant-sidebar-edit-conditions"
          />
        </When>
        <When truthy={!isReadonly}>
          <ActionButton
            tooltip={`Delete step`}
            onClick={openDeleteModal}
            Icon={Trash}
            data-test-id="variant-sidebar-delete"
          />
        </When>
      </Group>
      {areConditionsOpened && (
        <Conditions
          isOpened={areConditionsOpened}
          isReadonly={isReadonly}
          name={name ?? ''}
          onClose={onConditionsClose}
          updateConditions={updateConditions}
          conditions={conditions}
          filterPartsList={filterPartsList}
          defaultFilter={FilterPartTypeEnum.PAYLOAD}
        />
      )}

      <DeleteConfirmModal
        description={
          'This cannot be undone. ' +
          `The trigger code will be updated and this step will no longer participate in the notification workflow.`
        }
        target={'step'}
        title={`Delete step?`}
        isOpen={isDeleteModalOpened}
        confirm={confirmDelete}
        cancel={cancelDelete}
        confirmButtonText={`Delete step`}
        cancelButtonText="Cancel"
      />
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import { useEffect, useRef, useState } from 'react';
import { useFieldArray, useFormContext } from 'react-hook-form';
import { useLocation, useNavigate, useParams } from 'react-router-dom';
import { FilterPartTypeEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/VariantsPage.tsx
Tamaño: 1352 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useNavigate, useParams } from 'react-router-dom';
import styled from '@emotion/styled';
import { StepTypeEnum, DELAYED_STEPS } from '@novu/shared';

import { useTemplateEditorForm } from './TemplateEditorFormProvider';
import { VariantsListSidebar } from './VariantsListSidebar';
import { useBasePath } from '../hooks/useBasePath';
import { VariantsList } from './VariantsList';
import { VariantPreview } from './VariantPreview';

const VariantsPageContainer = styled.div`
  display: grid;
  grid-template-columns: 25rem 1fr;
  grid-template-rows: 100%;
  gap: 1rem;
  height: 100%;

  @media screen and (min-width: 1367px) {
    gap: 3rem;
    grid-template-columns: 27rem 1fr;
  }
`;

export function VariantsPage() {
  const navigate = useNavigate();
  const basePath = useBasePath();
  const { channel, stepUuid = '' } = useParams<{
    channel: StepTypeEnum;
    stepUuid: string;
  }>();
  const { isLoading } = useTemplateEditorForm();

  if (!channel) {
    return null;
  }

  const isDelayedStep = DELAYED_STEPS.includes(channel as StepTypeEnum);
  if (isDelayedStep) {
    navigate(`${basePath}/${channel}/${stepUuid}`);
  }

  return (
    <VariantsListSidebar isLoading={isLoading}>
      <VariantsPageContainer>
        <VariantsList />
        <VariantPreview />
      </VariantsPageContainer>
    </VariantsListSidebar>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useNavigate, useParams } from 'react-router-dom';
import styled from '@emotion/styled';
import { StepTypeEnum, DELAYED_STEPS } from '@novu/shared';
import { useTemplateEditorForm } from './TemplateEditorFormProvider';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/WorkflowSettingsTabs.tsx
Tamaño: 1008 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Tabs } from '@mantine/core';
import { useMemo } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { useTabsStyles } from '@novu/design-system';
import { useBasePath } from '../hooks/useBasePath';

export const WorkflowSettingsTabs = () => {
  const { classes } = useTabsStyles(false);
  const basePath = useBasePath();
  const navigate = useNavigate();
  const { pathname } = useLocation();
  const value = useMemo(() => {
    return pathname.replace(`${basePath}/`, '');
  }, [pathname, basePath]);

  return (
    <Tabs
      orientation="horizontal"
      keepMounted={true}
      onTabChange={(tabValue) => {
        navigate(`${basePath}/${tabValue}`);
      }}
      variant="default"
      value={value}
      classNames={classes}
    >
      <Tabs.List>
        <Tabs.Tab value="settings">General</Tabs.Tab>
        <Tabs.Tab value="channels">Channels</Tabs.Tab>
        <Tabs.Tab value="providers">Providers</Tabs.Tab>
      </Tabs.List>
    </Tabs>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Tabs } from '@mantine/core';
import { useMemo } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { useTabsStyles } from '@novu/design-system';
import { useBasePath } from '../hooks/useBasePath';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/WorkflowSidebar.tsx
Tamaño: 1055 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ReactNode } from 'react';
import { Title, useMantineColorScheme } from '@mantine/core';
import { useNavigate } from 'react-router-dom';
import { colors, Sidebar } from '@novu/design-system';

import { useBasePath } from '../hooks/useBasePath';

export const WorkflowSidebar = ({ children, title }: { children: ReactNode; title: string }) => {
  const navigate = useNavigate();
  const path = useBasePath();

  const { colorScheme } = useMantineColorScheme();

  const isDark = colorScheme === 'dark';

  return (
    <Sidebar
      isOpened
      isParentScrollable
      customHeader={
        <Title
          sx={{
            lineHeight: '48px',
            flex: '1 1 auto',
            display: 'flex',
            flexFlow: 'Column',
          }}
          color={isDark ? colors.white : colors.black}
          size={20}
          weight="bold"
        >
          {title}
        </Title>
      }
      onClose={() => {
        navigate(path);
      }}
      data-test-id="workflow-sidebar"
    >
      {children}
    </Sidebar>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ReactNode } from 'react';
import { Title, useMantineColorScheme } from '@mantine/core';
import { useNavigate } from 'react-router-dom';
import { colors, Sidebar } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/createTranslationMarks.ts
Tamaño: 366 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { IS_SELF_HOSTED } from '../../../config';

export const createTranslationMarks = (newValue: string | undefined, variables: any) => {
  if (IS_SELF_HOSTED) {
    return [];
  }

  try {
    const module = require('@novu/ee-translation-web');

    return module.createTranslationMarks(newValue, variables);
  } catch (e) {
    /* empty */
  }

  return [];
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - createTranslationMarks(newValue: string | undefined, variables: any))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/formTypes.ts
Tamaño: 2263 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import type {
  DigestUnitEnum,
  IMessageTemplate,
  IPreferenceChannels,
  BuilderFieldType,
  BuilderGroupValues,
  FilterParts,
  DaysEnum,
  DelayTypeEnum,
  MonthlyTypeEnum,
  OrdinalEnum,
  OrdinalValueEnum,
} from '@novu/shared';
import { DigestTypeEnum } from '@novu/shared';

export interface ITemplates extends IMessageTemplate {
  htmlContent?: string;
  enableAvatar?: boolean;
  feedId?: string;
  layoutId?: string;
}

export type IVariantStep = Omit<IFormStep, 'variants'>;

export interface IFormStep {
  id?: string;
  _id?: string;
  name?: string;
  uuid?: string;
  _templateId?: string;
  template: ITemplates;
  filters?: {
    isNegated?: boolean;
    type?: BuilderFieldType;
    value?: BuilderGroupValues;
    children?: FilterParts[];
  }[];
  active?: boolean;
  shouldStopOnFail?: boolean;
  replyCallback?: {
    active: boolean;
    url?: string;
  };
  variants?: IVariantStep[];
  digestMetadata?: {
    type: DigestTypeEnum;
    digestKey?: string;
    [DigestTypeEnum.REGULAR]?: {
      amount: string;
      unit: DigestUnitEnum;
      backoff?: boolean;
      backoffAmount?: string;
      backoffUnit?: DigestUnitEnum;
    };
    [DigestTypeEnum.TIMED]?: {
      unit: DigestUnitEnum;
      [DigestUnitEnum.MINUTES]?: {
        amount: string;
      };
      [DigestUnitEnum.HOURS]?: {
        amount: string;
      };
      [DigestUnitEnum.DAYS]?: {
        amount: string;
        atTime: string;
      };
      [DigestUnitEnum.WEEKS]?: {
        amount: string;
        atTime: string;
        weekDays: DaysEnum[];
      };
      [DigestUnitEnum.MONTHS]?: {
        amount: string;
        atTime: string;
        monthDays: number[];
        monthlyType: MonthlyTypeEnum;
        ordinal?: OrdinalEnum;
        ordinalValue?: OrdinalValueEnum;
      };
    };
  };
  delayMetadata?: {
    type: DelayTypeEnum;
    [DelayTypeEnum.REGULAR]?: {
      amount: string;
      unit: DigestUnitEnum;
    };
    [DelayTypeEnum.SCHEDULED]?: {
      delayPath: string;
    };
  };
}

export interface IForm {
  notificationGroupId: string;
  name: string;
  description: string;
  identifier: string;
  tags: string[];
  critical: boolean;
  steps: IFormStep[];
  preferenceSettings: IPreferenceChannels;
  payloadSchema?: any;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  interface
- export  type
- export  interface
- export  interface

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/notificationTemplateSchema.ts
Tamaño: 8618 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { z } from 'zod';
import {
  ChannelTypeEnum,
  StepTypeEnum,
  DelayTypeEnum,
  DigestTypeEnum,
  DigestUnitEnum,
  DaysEnum,
  MonthlyTypeEnum,
  OrdinalEnum,
  OrdinalValueEnum,
} from '@novu/shared';

import { getChannel } from '../../../utils/channels';

const validateAmount = ({
  ctx,
  amount,
  unit,
  message,
  path,
}: {
  ctx: z.RefinementCtx;
  amount?: string | number;
  unit?: string;
  message: string;
  path: string[];
}) => {
  const amountNumber = parseInt(`${amount ?? ''}`, 10);

  if (!amountNumber) {
    ctx.addIssue({
      code: z.ZodIssueCode.custom,
      message,
      path,
    });
  }

  if (unit === 'hours' && amountNumber > 24) {
    ctx.addIssue({
      code: z.ZodIssueCode.too_big,
      maximum: 24,
      type: 'number',
      inclusive: true,
      message: 'Hours must be 24 or below',
      path,
    });
  }

  if (unit === 'days' && amountNumber > 31) {
    ctx.addIssue({
      code: z.ZodIssueCode.too_big,
      maximum: 31,
      type: 'number',
      inclusive: true,
      message: 'Days must be 31 or below',
      path,
    });
  }
};

const validateUnit = ({
  ctx,
  unit,
  message,
  path,
}: {
  ctx: z.RefinementCtx;
  unit?: string;
  message: string;
  path: string[];
}) => {
  if (!unit) {
    ctx.addIssue({
      code: z.ZodIssueCode.custom,
      message,
      path,
    });
  }
};

const digestMetadataSchema = z.object({
  type: z.enum([DigestTypeEnum.REGULAR, DigestTypeEnum.TIMED]),
  digestKey: z.string().optional(),
  [DigestTypeEnum.REGULAR]: z
    .object({
      amount: z.string(),
      unit: z.enum([DigestUnitEnum.SECONDS, DigestUnitEnum.MINUTES, DigestUnitEnum.HOURS, DigestUnitEnum.DAYS]),
      backoff: z.boolean().optional(),
      backoffAmount: z.string().optional(),
      backoffUnit: z
        .enum([DigestUnitEnum.SECONDS, DigestUnitEnum.MINUTES, DigestUnitEnum.HOURS, DigestUnitEnum.DAYS])
        .optional(),
    })
    .passthrough()
    .optional(),
  [DigestTypeEnum.TIMED]: z
    .object({
      unit: z.enum([
        DigestUnitEnum.MINUTES,
        DigestUnitEnum.HOURS,
        DigestUnitEnum.DAYS,
        DigestUnitEnum.WEEKS,
        DigestUnitEnum.MONTHS,
      ]),
      [DigestUnitEnum.MINUTES]: z
        .object({
          amount: z.string(),
        })
        .passthrough()
        .optional(),
      [DigestUnitEnum.HOURS]: z
        .object({
          amount: z.string(),
        })
        .passthrough()
        .optional(),
      [DigestUnitEnum.DAYS]: z
        .object({
          amount: z.string(),
          atTime: z.string(),
        })
        .passthrough()
        .optional(),
      [DigestUnitEnum.WEEKS]: z
        .object({
          amount: z.string(),
          atTime: z.string(),
          weekDays: z.array(
            z.enum([
              DaysEnum.MONDAY,
              DaysEnum.TUESDAY,
              DaysEnum.WEDNESDAY,
              DaysEnum.THURSDAY,
              DaysEnum.FRIDAY,
              DaysEnum.SATURDAY,
              DaysEnum.SUNDAY,
            ])
          ),
        })
        .passthrough()
        .optional(),
      [DigestUnitEnum.MONTHS]: z
        .object({
          amount: z.string(),
          atTime: z.string(),
          monthDays: z.array(z.number()),
          monthlyType: z.enum([MonthlyTypeEnum.EACH, MonthlyTypeEnum.ON]),
          ordinal: z
            .enum([
              OrdinalEnum.FIRST,
              OrdinalEnum.SECOND,
              OrdinalEnum.THIRD,
              OrdinalEnum.FOURTH,
              OrdinalEnum.FIFTH,
              OrdinalEnum.LAST,
            ])
            .optional(),
          ordinalValue: z
            .enum([
              OrdinalValueEnum.DAY,
              OrdinalValueEnum.WEEKDAY,
              OrdinalValueEnum.WEEKEND,
              OrdinalValueEnum.MONDAY,
              OrdinalValueEnum.TUESDAY,
              OrdinalValueEnum.WEDNESDAY,
              OrdinalValueEnum.THURSDAY,
              OrdinalValueEnum.FRIDAY,
              OrdinalValueEnum.SATURDAY,
              OrdinalValueEnum.SUNDAY,
            ])
            .optional(),
        })
        .passthrough()
        .optional(),
    })
    .passthrough()
    .optional(),
});

const delayMetadataSchema = z
  .object({
    type: z.enum([DelayTypeEnum.REGULAR, DelayTypeEnum.SCHEDULED]),
    [DelayTypeEnum.REGULAR]: z
      .object({
        amount: z.string(),
        unit: z.string(),
      })
      .passthrough()
      .optional(),
    [DelayTypeEnum.SCHEDULED]: z
      .object({
        delayPath: z.string(),
      })
      .passthrough()
      .optional(),
  })
  .passthrough();

const templateSchema = z
  .object({
    content: z.any(),
    subject: z.any(),
    title: z.any(),
    layoutId: z.any().optional(),
    senderName: z.any().optional(),
  })
  .passthrough();

const variantSchema = z.object({
  template: templateSchema.superRefine((template, ctx) => {
    validateTemplate(template, ctx);
  }),
  digestMetadata: digestMetadataSchema.optional(),
  delayMetadata: delayMetadataSchema.optional(),
});

const validateTemplate = (template, ctx) => {
  if (
    (template.type === ChannelTypeEnum.SMS ||
      template.type === ChannelTypeEnum.IN_APP ||
      template.type === ChannelTypeEnum.PUSH ||
      template.type === ChannelTypeEnum.CHAT) &&
    template.content?.length === 0
  ) {
    ctx.addIssue({
      code: z.ZodIssueCode.too_small,
      minimum: 1,
      type: 'string',
      inclusive: true,
      message: `Message content is missing!`,
      path: ['content'],
    });
  }
  if (template.type === ChannelTypeEnum.EMAIL) {
    if (!template.subject) {
      ctx.addIssue({
        code: z.ZodIssueCode.too_small,
        minimum: 1,
        type: 'string',
        inclusive: true,
        message: 'Email subject is missing!',
        path: ['subject'],
      });
    }
  }

  if (template.type === ChannelTypeEnum.PUSH && !template.title) {
    ctx.addIssue({
      code: z.ZodIssueCode.too_small,
      minimum: 1,
      type: 'string',
      inclusive: true,
      message: 'Message title is missing!',
      path: ['title'],
    });
  }
};

export const schema = z
  .object({
    payloadSchema: z.any().optional(),
    name: z
      .string({
        required_error: 'Required - Workflow Name',
      })
      .superRefine((data, ctx) => {
        if (data.replaceAll(/\s/g, '').length === 0) {
          ctx.addIssue({
            code: z.ZodIssueCode.too_small,
            minimum: 1,
            type: 'string',
            inclusive: true,
            message: 'Required - Workflow Name',
          });
        }
      }),
    notificationGroupId: z
      .string({
        invalid_type_error: 'Required - Workflow Group',
      })
      .superRefine((data, ctx) => {
        if (data.length === 0) {
          ctx.addIssue({
            code: z.ZodIssueCode.too_small,
            minimum: 1,
            type: 'string',
            inclusive: true,
            message: 'Required - Workflow Group',
          });
        }
      }),
    steps: z
      .array(
        z
          .object({
            ...variantSchema.shape,
            variants: z.array(variantSchema.passthrough()).optional(),
          })
          .passthrough()
          .superRefine((step, ctx) => {
            if (step.template.type !== StepTypeEnum.DIGEST && step.template.type !== StepTypeEnum.DELAY) {
              return;
            }

            if (step.delayMetadata?.type === DelayTypeEnum.REGULAR) {
              validateAmount({
                ctx,
                amount: step.delayMetadata?.regular?.amount,
                unit: step.delayMetadata?.regular?.unit,
                message: `Required - ${getChannel(step.template.type)?.label} Amount`,
                path: ['delayMetadata', 'regular', 'amount'],
              });
              validateUnit({
                ctx,
                unit: step.delayMetadata?.regular?.unit,
                message: 'Time interval is missing!',
                path: ['delayMetadata', 'regular', 'unit'],
              });

              return;
            }

            if (step.delayMetadata?.type === DelayTypeEnum.SCHEDULED) {
              if (!step.delayMetadata?.scheduled?.delayPath) {
                ctx.addIssue({
                  code: z.ZodIssueCode.too_small,
                  minimum: 1,
                  type: 'string',
                  inclusive: true,
                  message: 'Path scheduled is missing!',
                  path: ['delayMetadata', 'scheduled', 'delayPath'],
                });
              }
            }
          })
      )
      .optional(),
  })
  .passthrough();


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - validateAmount({
  ctx,
  amount,
  unit,
  message,
  path,
}: {
  ctx: z.RefinementCtx;
  amount?: string | numbe...)
 - validateUnit({
  ctx,
  unit,
  message,
  path,
}: {
  ctx: z.RefinementCtx;
  unit?: string;
  message: string;...)
 - variantSchema(z.object({
  template: templateSchema.superRefine((template, ctx))
 - validateTemplate(template, ctx))
 - schema(z
  .object({
    payloadSchema: z.any().optional(),
    name: z
      .string({
        required_er...)
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/templateToFormMappers.ts
Tamaño: 12016 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import {
  ActorTypeEnum,
  ChannelCTATypeEnum,
  DelayTypeEnum,
  DigestTypeEnum,
  DigestUnitEnum,
  ICreateNotificationTemplateDto,
  INotificationTemplate,
  INotificationTemplateStep,
  IStepVariant,
  IWorkflowStepMetadata,
  MonthlyTypeEnum,
  NotificationStepDto,
  StepTypeEnum,
} from '@novu/shared';
import { v4 as uuid4 } from 'uuid';

import type { IForm, IFormStep } from './formTypes';

const mapToEmailFormStep = (item: INotificationTemplateStep | IStepVariant): IFormStep => ({
  ...item,
  ...(!item.replyCallback && {
    replyCallback: {
      active: false,
      url: '',
    },
  }),
  ...(!!('variants' in item) && {
    variants: item.variants?.map((variant) => mapToEmailFormStep(variant)) ?? ([] as any),
  }),
  template: {
    ...item.template,
    type: item?.template?.type ?? StepTypeEnum.EMAIL,
    layoutId: item?.template?._layoutId ?? '',
    preheader: item?.template?.preheader ?? '',
    senderName: item?.template?.senderName ?? '',
    content: item?.template?.content ?? '',
    ...(item?.template?.contentType === 'customHtml' && {
      htmlContent: item?.template?.content as string,
      content: [],
    }),
  },
});

const mapToInAppFormStep = (item: INotificationTemplateStep | IStepVariant): IFormStep => ({
  ...item,
  ...(!!('variants' in item) && {
    variants: item.variants?.map((variant) => mapToInAppFormStep(variant)) ?? ([] as any),
  }),
  template: {
    ...item.template,
    type: item?.template?.type ?? StepTypeEnum.IN_APP,
    content: item?.template?.content ?? '',
    feedId: item?.template?._feedId ?? '',
    actor: item?.template?.actor?.type
      ? item?.template?.actor
      : {
          type: ActorTypeEnum.NONE,
          data: null,
        },
    enableAvatar: !!(item?.template?.actor?.type && item?.template?.actor.type !== ActorTypeEnum.NONE),
    cta: {
      data: item?.template?.cta?.data ?? { url: '' },
      type: ChannelCTATypeEnum.REDIRECT,
      ...(item?.template?.cta?.action ? { action: item?.template?.cta?.action } : {}),
    },
  },
});

const mapToDigestFormStep = (item: INotificationTemplateStep | IStepVariant): IFormStep => {
  const { metadata, template, ...rest } = item;
  const variants = 'variants' in item ? item.variants?.map((variant) => mapToDigestFormStep(variant)) : undefined;

  if (!metadata) {
    return {
      ...rest,
      variants,
      template: template as any,
    };
  }

  if ('type' in metadata && (metadata.type === DigestTypeEnum.BACKOFF || metadata.type === DigestTypeEnum.REGULAR)) {
    return {
      ...rest,
      variants,
      template: template as any,
      digestMetadata: {
        type: metadata.type,
        digestKey: metadata.digestKey,
        regular: {
          amount: `${metadata.amount}`,
          unit: metadata.unit as DigestUnitEnum,
          backoff: metadata.backoff,
          backoffAmount: `${metadata.backoffAmount}`,
          backoffUnit: metadata.backoffUnit,
        },
      },
    };
  }

  if ('type' in metadata && metadata.type === DigestTypeEnum.TIMED) {
    return {
      ...rest,
      variants,
      template: template as any,
      digestMetadata: {
        type: metadata.type,
        digestKey: metadata.digestKey,
        timed: {
          unit: metadata.unit as DigestUnitEnum,
          ...(metadata.unit === DigestUnitEnum.MINUTES && { minutes: { amount: `${metadata.amount}` } }),
          ...(metadata.unit === DigestUnitEnum.HOURS && { hours: { amount: `${metadata.amount}` } }),
          ...(metadata.unit === DigestUnitEnum.DAYS && {
            days: { amount: `${metadata.amount}`, atTime: metadata.timed?.atTime ?? '' },
          }),
          ...(metadata.unit === DigestUnitEnum.WEEKS && {
            weeks: {
              amount: `${metadata.amount}`,
              atTime: metadata.timed?.atTime ?? '',
              weekDays: metadata.timed?.weekDays ?? [],
            },
          }),
          ...(metadata.unit === DigestUnitEnum.MONTHS && {
            months: {
              amount: `${metadata.amount}`,
              atTime: metadata.timed?.atTime ?? '',
              monthDays: metadata.timed?.monthDays ?? [],
              monthlyType: metadata.timed?.monthlyType ?? MonthlyTypeEnum.EACH,
              ordinal: metadata.timed?.ordinal,
              ordinalValue: metadata.timed?.ordinalValue,
            },
          }),
        },
      },
    };
  }

  return {
    ...rest,
    variants,
    template: template as any,
  };
};

const mapToDelayFormStep = (item: INotificationTemplateStep | IStepVariant): IFormStep => {
  const { metadata, template, ...rest } = item;
  const variants = 'variants' in item ? item.variants?.map((variant) => mapToDelayFormStep(variant)) : undefined;

  if (!metadata) {
    return {
      ...rest,
      variants,
      template: template as any,
    };
  }

  if ('type' in metadata && metadata.type === DelayTypeEnum.REGULAR) {
    return {
      ...rest,
      variants,
      template: template as any,
      delayMetadata: {
        type: metadata.type,
        regular: {
          amount: `${metadata.amount}`,
          unit: metadata.unit,
        },
      },
    };
  }

  if ('type' in metadata && metadata.type === DelayTypeEnum.SCHEDULED) {
    return {
      ...rest,
      variants,
      template: template as any,
      delayMetadata: {
        type: metadata.type,
        scheduled: {
          delayPath: metadata.delayPath,
        },
      },
    };
  }

  return {
    ...rest,
    variants,
    template: template as any,
  };
};

export const mapNotificationTemplateToForm = (template: INotificationTemplate): IForm => {
  const form: IForm = {
    notificationGroupId: template._notificationGroupId,
    name: template.name,
    description: template.description ?? '',
    tags: template.tags,
    identifier: template.triggers[0].identifier,
    critical: !template.critical,
    preferenceSettings: template.preferenceSettings,
    payloadSchema: template.payloadSchema,
    steps: [],
  };

  form.steps = template.steps.map((item) => {
    if (!item.uuid) {
      item.uuid = uuid4();
    }

    if (item?.template?.type === StepTypeEnum.EMAIL) {
      return mapToEmailFormStep(item);
    }
    if (item?.template?.type === StepTypeEnum.IN_APP) {
      return mapToInAppFormStep(item);
    }
    if (item?.template?.type === StepTypeEnum.DIGEST) {
      return mapToDigestFormStep(item);
    }
    if (item?.template?.type === StepTypeEnum.DELAY) {
      return mapToDelayFormStep(item);
    }

    return item as IFormStep;
  });

  return form;
};

const mapFormStepToDto = (formStep: IFormStep): NotificationStepDto => {
  const { digestMetadata, delayMetadata, template, ...rest } = formStep;
  const step: Omit<IFormStep, 'digestMetadata' | 'delayMetadata' | 'template'> = { ...rest };

  if (template.type === StepTypeEnum.EMAIL && template.contentType === 'customHtml') {
    template.content = template.htmlContent as string;
    delete template.htmlContent;
  }

  if (template.type === StepTypeEnum.IN_APP) {
    if (!template.enableAvatar) {
      template.actor = {
        type: ActorTypeEnum.NONE,
        data: null,
      };
    }

    delete template.enableAvatar;
  }

  if (template.type === StepTypeEnum.DIGEST) {
    return {
      ...step,
      template,
      metadata: mapFormStepDigestMetadata(formStep),
    };
  }

  if (template.type === StepTypeEnum.DELAY) {
    return {
      ...step,
      template,
      metadata: mapFormStepDelayMetadata(formStep),
    };
  }

  return {
    ...step,
    ...(!!('variants' in step) && {
      variants: step.variants?.map((variant) => mapFormStepToDto(variant)) ?? ([] as any),
    }),
    template,
  };
};

export const mapFormToCreateNotificationTemplate = (form: IForm): ICreateNotificationTemplateDto => {
  const steps = form.steps.map(mapFormStepToDto);

  return {
    name: form.name,
    notificationGroupId: form.notificationGroupId,
    description: form.description !== '' ? form.description : undefined,
    tags: form.tags,
    critical: !form.critical,
    preferenceSettings: form.preferenceSettings,
    steps,
  };
};

const mapFormStepDelayMetadata = (formStep: IFormStep): IWorkflowStepMetadata | undefined => {
  if (!formStep.delayMetadata) {
    return undefined;
  }

  if (formStep.delayMetadata.type === DelayTypeEnum.REGULAR && formStep.delayMetadata.regular) {
    return {
      type: formStep.delayMetadata.type,
      ...formStep.delayMetadata.regular,
      amount: parseInt(formStep.delayMetadata.regular.amount, 10),
    };
  }
  if (formStep.delayMetadata.type === DelayTypeEnum.SCHEDULED && formStep.delayMetadata.scheduled) {
    return {
      type: formStep.delayMetadata.type,
      ...formStep.delayMetadata.scheduled,
    };
  }

  return undefined;
};

const mapFormStepDigestMetadata = (formStep: IFormStep): IWorkflowStepMetadata | undefined => {
  if (!formStep.digestMetadata) {
    return undefined;
  }

  if (formStep.digestMetadata?.digestKey === '') {
    delete formStep.digestMetadata.digestKey;
  }

  if (formStep.digestMetadata.type === DigestTypeEnum.REGULAR && formStep.digestMetadata.regular) {
    return {
      type: formStep.digestMetadata.type,
      digestKey: formStep.digestMetadata.digestKey,
      ...formStep.digestMetadata.regular,
      amount: parseInt(formStep.digestMetadata.regular.amount, 10),
      backoffAmount: formStep.digestMetadata.regular.backoffAmount
        ? parseInt(formStep.digestMetadata.regular.backoffAmount, 10)
        : undefined,
    };
  }

  if (formStep.digestMetadata.type === DigestTypeEnum.TIMED && formStep.digestMetadata.timed) {
    if (formStep.digestMetadata.timed.unit === DigestUnitEnum.MINUTES && formStep.digestMetadata.timed.minutes) {
      return {
        type: formStep.digestMetadata.type,
        digestKey: formStep.digestMetadata.digestKey,
        unit: formStep.digestMetadata.timed.unit,
        amount: parseInt(formStep.digestMetadata.timed.minutes.amount, 10),
      };
    }
    if (formStep.digestMetadata.timed.unit === DigestUnitEnum.HOURS && formStep.digestMetadata.timed.hours) {
      return {
        type: formStep.digestMetadata.type,
        digestKey: formStep.digestMetadata.digestKey,
        unit: formStep.digestMetadata.timed.unit,
        amount: parseInt(formStep.digestMetadata.timed.hours.amount, 10),
      };
    }
    if (formStep.digestMetadata.timed.unit === DigestUnitEnum.DAYS && formStep.digestMetadata.timed.days) {
      return {
        type: formStep.digestMetadata.type,
        digestKey: formStep.digestMetadata.digestKey,
        unit: formStep.digestMetadata.timed.unit,
        amount: parseInt(formStep.digestMetadata.timed.days.amount, 10),
        timed: {
          atTime: formStep.digestMetadata.timed.days.atTime,
        },
      };
    }
    if (formStep.digestMetadata.timed.unit === DigestUnitEnum.WEEKS && formStep.digestMetadata.timed.weeks) {
      return {
        type: formStep.digestMetadata.type,
        digestKey: formStep.digestMetadata.digestKey,
        unit: formStep.digestMetadata.timed.unit,
        amount: parseInt(formStep.digestMetadata.timed.weeks.amount, 10),
        timed: {
          atTime: formStep.digestMetadata.timed.weeks.atTime,
          weekDays: formStep.digestMetadata.timed.weeks.weekDays,
        },
      };
    }
    if (formStep.digestMetadata.timed.unit === DigestUnitEnum.MONTHS && formStep.digestMetadata.timed.months) {
      return {
        type: formStep.digestMetadata.type,
        unit: formStep.digestMetadata.timed.unit,
        amount: parseInt(formStep.digestMetadata.timed.months.amount, 10),
        timed: {
          atTime: formStep.digestMetadata.timed.months.atTime,
          monthDays: formStep.digestMetadata.timed.months.monthDays,
          monthlyType: formStep.digestMetadata.timed.months.monthlyType,
          ordinal: formStep.digestMetadata.timed.months.ordinal,
          ordinalValue: formStep.digestMetadata.timed.months.ordinalValue,
        },
      };
    }
  }

  return undefined;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - mapToEmailFormStep(item: INotificationTemplateStep | IStepVariant): IFormStep)
 - mapToInAppFormStep(item: INotificationTemplateStep | IStepVariant): IFormStep)
 - mapToDigestFormStep(item: INotificationTemplateStep | IStepVariant): IFormStep)
 - variants('variants' in item ? item.variants?.map((variant))
 - mapToDelayFormStep(item: INotificationTemplateStep | IStepVariant): IFormStep)
 - variants('variants' in item ? item.variants?.map((variant))
 - mapNotificationTemplateToForm(template: INotificationTemplate): IForm)
 - steps(template.steps.map((item))
 - mapFormStepToDto(formStep: IFormStep): NotificationStepDto)
 - mapFormToCreateNotificationTemplate(form: IForm): ICreateNotificationTemplateDto)
 - mapFormStepDelayMetadata(formStep: IFormStep): IWorkflowStepMetadata | undefined)
 - mapFormStepDigestMetadata(formStep: IFormStep): IWorkflowStepMetadata | undefined)
Declaraciones 'export' encontradas:
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/useStatusChangeController.ts
Tamaño: 1387 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import type { IResponseError, INotificationTemplate } from '@novu/shared';

import { updateTemplateStatus } from '../../../api/notification-templates';
import { QueryKeys } from '../../../api/query.keys';
import { successMessage } from '../../../utils/notifications';

export function useStatusChangeControllerHook(templateId: string, template: INotificationTemplate | undefined) {
  const queryClient = useQueryClient();
  const [isTemplateActive, setIsTemplateActive] = useState<boolean>();
  const { isLoading: isStatusChangeLoading, mutateAsync: updateNotificationStatus } = useMutation<
    INotificationTemplate,
    IResponseError,
    { id: string; active: boolean }
  >(({ id, active }) => updateTemplateStatus(id, active), {
    onSuccess: () => {
      queryClient.refetchQueries([QueryKeys.changesCount]);
    },
  });

  useEffect(() => {
    if (template) {
      setIsTemplateActive(template.active);
    }
  }, [template]);

  async function changeActiveStatus(selected: boolean) {
    setIsTemplateActive(selected);

    await updateNotificationStatus({
      id: templateId,
      active: selected,
    });

    successMessage('Status changed successfully');
  }

  return {
    changeActiveStatus,
    isTemplateActive,
    isStatusChangeLoading,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useStatusChangeControllerHook(templateId: string, template: INotificationTemplate | undefined)
 - changeActiveStatus(selected: boolean)
Declaraciones 'export' encontradas:
- export function useStatusChangeControllerHook

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/useTemplateController.ts
Tamaño: 1974 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useMutation, useQueryClient } from '@tanstack/react-query';
import type {
  IResponseError,
  ICreateNotificationTemplateDto,
  INotificationTemplate,
  IUpdateNotificationTemplateDto,
} from '@novu/shared';

import { useTemplateFetcher } from '../../../api/hooks';
import { QueryKeys } from '../../../api/query.keys';
import { createTemplate, deleteTemplateById, updateTemplate } from '../../../api/notification-templates';

export function useTemplateController(
  templateId?: string,
  { onFetchSuccess }: { onFetchSuccess?: (template: INotificationTemplate) => void } = {}
) {
  const {
    template,
    refetch,
    isInitialLoading: isLoading,
  } = useTemplateFetcher({ templateId }, { onSuccess: onFetchSuccess });
  const client = useQueryClient();

  const { isLoading: isCreating, mutateAsync: createNotificationTemplate } = useMutation<
    INotificationTemplate & { __source?: string },
    IResponseError,
    { template: ICreateNotificationTemplateDto } & { params: { __source?: string } }
  >((data) => createTemplate(data.template, data.params), {
    onSuccess: async () => {
      await client.refetchQueries([QueryKeys.changesCount]);
    },
  });

  const { isLoading: isUpdating, mutateAsync: updateNotificationTemplate } = useMutation<
    INotificationTemplate,
    IResponseError,
    { id: string; data: Partial<IUpdateNotificationTemplateDto> }
  >(({ id, data }) => updateTemplate(id, data), {
    onSuccess: async () => {
      refetch();
      await client.refetchQueries([QueryKeys.changesCount]);
    },
  });

  const { isLoading: isDeleting, mutate: deleteNotificationTemplate } = useMutation<unknown, IResponseError>(() => {
    if (!templateId) {
      return Promise.resolve();
    }

    return deleteTemplateById(templateId);
  });

  return {
    template,
    isLoading,
    isCreating,
    isUpdating,
    isDeleting,
    updateNotificationTemplate,
    createNotificationTemplate,
    deleteNotificationTemplate,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useTemplateController(templateId?: string,
  { onFetchSuccess }: { onFetchSuccess?: (template: INotificationTemplate)
Declaraciones 'export' encontradas:
- export function useTemplateController

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/useVariantListErrors.ts
Tamaño: 3355 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useMemo } from 'react';
import { useFormContext } from 'react-hook-form';
import { useParams } from 'react-router-dom';
import { StepTypeEnum, STEP_TYPE_TO_CHANNEL_TYPE } from '@novu/shared';

import { getStepErrors, getVariantErrors } from '../shared/errors';
import { NODE_ERROR_TYPES } from '../workflow/workflow/node-types/utils';
import { IForm } from './formTypes';
import { useGetPrimaryIntegration, useHasActiveIntegrations } from '../../../hooks';
import { useStepIndex } from '../hooks/useStepIndex';

export enum ItemTypeEnum {
  ROOT = 'root',
  VARIANT = 'variant',
}

interface ErrorType {
  itemType: ItemTypeEnum;
  variantIndex?: number;
  errorMessage: string;
  errorType: NODE_ERROR_TYPES;
}

export const useVariantListErrors = () => {
  const { channel } = useParams<{
    channel: StepTypeEnum;
    stepUuid: string;
  }>();
  const {
    formState: {
      errors: { steps },
    },
  } = useFormContext<IForm>();
  const { stepIndex } = useStepIndex();

  const { hasActiveIntegration } = useHasActiveIntegrations({
    filterByEnv: true,
    channelType: STEP_TYPE_TO_CHANNEL_TYPE.get(channel ?? ''),
  });
  const { primaryIntegration, isPrimaryStep } = useGetPrimaryIntegration({
    filterByEnv: true,
    channelType: STEP_TYPE_TO_CHANNEL_TYPE.get(channel ?? ''),
  });

  const missingProviderError = useMemo(() => {
    if (!hasActiveIntegration && channel) {
      return { errorMessage: `Provider is missing!`, errorType: NODE_ERROR_TYPES.MISSING_PROVIDER };
    }

    if (isPrimaryStep && !primaryIntegration) {
      return { errorMessage: `Primary provider is missing!`, errorType: NODE_ERROR_TYPES.MISSING_PRIMARY_PROVIDER };
    }

    return null;
  }, [hasActiveIntegration, channel, isPrimaryStep, primaryIntegration]);

  return useMemo(() => {
    const result: {
      errors: ErrorType[];
      errorsMap: Record<string, string>;
    } = {
      errors: [],
      errorsMap: {},
    };

    // we have to reverse errors because the variants order in the list is reversed too
    const variantErrors = getVariantErrors(stepIndex, steps)?.reverse();
    if (variantErrors && variantErrors.length > 0) {
      variantErrors.forEach((error) => {
        result.errors.push({
          itemType: ItemTypeEnum.VARIANT,
          variantIndex: error.variantIndex,
          errorMessage: error.errorMsg,
          errorType: NODE_ERROR_TYPES.TEMPLATE_ERROR,
        });
        if (!result.errorsMap[`variant-${error.variantIndex}`]) {
          result.errorsMap[`variant-${error.variantIndex}`] = error.errorMsg;
        }
      });
    }

    if (missingProviderError) {
      result.errors.push({
        itemType: ItemTypeEnum.ROOT,
        errorMessage: missingProviderError.errorMessage,
        errorType: missingProviderError.errorType,
      });
      result.errorsMap.root = missingProviderError.errorMessage;
    }

    const rootStepErrors = getStepErrors(stepIndex, steps).reverse();
    if (rootStepErrors) {
      rootStepErrors.forEach((error) => {
        result.errors.push({
          itemType: ItemTypeEnum.ROOT,
          errorMessage: error,
          errorType: NODE_ERROR_TYPES.TEMPLATE_ERROR,
        });
        if (!result.errorsMap.root) {
          result.errorsMap.root = error;
        }
      });
    }

    return result;
  }, [missingProviderError, stepIndex, steps]);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useVariantListErrors())
 - missingProviderError(useMemo(())
 - variantErrors(getVariantErrors(stepIndex, steps)?.reverse();
    if (variantErrors && variantErrors.length > 0) {
...)
 - rootStepErrors(getStepErrors(stepIndex, steps).reverse();
    if (rootStepErrors) {
      rootStepErrors.forEach((e...)
Declaraciones 'export' encontradas:
- export  enum
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/useVariantListErrorsNavigation.ts
Tamaño: 3088 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { StepTypeEnum } from '@novu/shared';
import { useEffect, useMemo, useState } from 'react';
import { useFormContext } from 'react-hook-form';
import { useParams } from 'react-router-dom';

import { useNavigateToVariantPreview } from '../hooks/useNavigateToVariantPreview';
import { NODE_ERROR_TYPES } from '../workflow/workflow/node-types/utils';
import { IForm } from './formTypes';
import { ItemTypeEnum, useVariantListErrors } from './useVariantListErrors';

export const useVariantListErrorsNavigation = () => {
  const { channel, stepUuid = '' } = useParams<{
    channel: StepTypeEnum;
    stepUuid: string;
  }>();
  const allErrors = useVariantListErrors();
  const { watch } = useFormContext<IForm>();
  const { navigateToVariantPreview } = useNavigateToVariantPreview();

  const steps = watch('steps');
  const stepIndex = useMemo(
    () => steps.findIndex((message) => message.template.type === channel && message.uuid === stepUuid),
    [channel, stepUuid, steps]
  );
  const step = watch(`steps.${stepIndex}`);
  const hasErrors = allErrors.errors.length > 0;
  const variants = step?.variants ?? [];

  const [errorState, setErrorState] = useState<{
    itemType: ItemTypeEnum;
    variantIndex?: number;
    errorMessage: string;
    errorIndex: number;
    errorType: NODE_ERROR_TYPES;
  } | null>(null);

  useEffect(() => {
    if (allErrors.errors.length > 0) {
      const errorIndex = 0;
      const firstError = allErrors.errors[errorIndex];
      setErrorState({
        ...firstError,
        errorIndex,
      });
    } else {
      setErrorState(null);
    }
  }, [allErrors]);

  const handleErrorNavigation = (direction: 'up' | 'down') => {
    if (!errorState || !hasErrors) {
      return;
    }

    const { errorIndex } = errorState;
    const nextErrorIndex = direction === 'up' ? errorIndex - 1 : errorIndex + 1;

    if (nextErrorIndex < 0 || nextErrorIndex >= allErrors.errors.length) {
      return;
    }

    const error = allErrors.errors[nextErrorIndex];

    setErrorState({
      variantIndex: error.variantIndex,
      errorMessage: error.errorMessage,
      itemType: error.itemType,
      errorIndex: nextErrorIndex,
      errorType: error.errorType,
    });

    const isRootError = error?.itemType === ItemTypeEnum.ROOT;
    if (isRootError) {
      navigateToVariantPreview({ variantUuid: stepUuid });
    } else if (typeof error.variantIndex !== 'undefined') {
      const variant = variants[error.variantIndex];
      navigateToVariantPreview({ variantUuid: variant.uuid });
    }
  };

  const onErrorMessageClick = () => {
    if (errorState?.itemType === ItemTypeEnum.ROOT) {
      navigateToVariantPreview({ variantUuid: stepUuid });
    } else if (errorState?.variantIndex !== undefined) {
      const variant = variants[errorState.variantIndex];
      navigateToVariantPreview({ variantUuid: variant.uuid });
    }
  };

  const onErrorUp = () => handleErrorNavigation('up');

  const onErrorDown = () => handleErrorNavigation('down');

  return { allErrors, errorState, onErrorMessageClick, onErrorUp, onErrorDown };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useVariantListErrorsNavigation())
 - stepIndex(useMemo(
    ())
 - handleErrorNavigation(direction: 'up' | 'down'))
 - onErrorMessageClick())
 - onErrorUp())
 - onErrorDown())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/chat-editor/TemplateChatEditor.tsx
Tamaño: 3236 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ChannelTypeEnum } from '@novu/shared';
import { Controller, useFormContext } from 'react-hook-form';
import { Grid, SegmentedControl, Stack, useMantineTheme } from '@mantine/core';
import { useState } from 'react';

import { When } from '@novu/design-system';
import { useEnvironment, useHasActiveIntegrations, useVariablesManager } from '../../../../hooks';
import { useStepFormPath } from '../../hooks/useStepFormPath';
import { StepSettings } from '../../workflow/SideBar/StepSettings';
import type { IForm } from '../formTypes';
import { LackIntegrationAlert } from '../LackIntegrationAlert';
import { CustomCodeEditor } from '../CustomCodeEditor';
import { ChatPreview } from '../../../../components/workflow/preview';

import { EditVariablesModal } from '../EditVariablesModal';
import { VariableManagementButton } from '../VariableManagementButton';
import { useEditTemplateContent } from '../../hooks/useEditTemplateContent';
import { useTemplateEditorForm } from '../TemplateEditorFormProvider';
import { ControlVariablesForm } from '../ControlVariablesForm';

const templateFields = ['content'];

export function TemplateChatEditor() {
  const { isPreviewLoading, handleContentChange } = useEditTemplateContent();
  const stepFormPath = useStepFormPath();
  const { control } = useFormContext<IForm>();
  const variablesArray = useVariablesManager(templateFields);
  const { hasActiveIntegration } = useHasActiveIntegrations({
    channelType: ChannelTypeEnum.CHAT,
  });
  const [controlVariables, setControlVariables] = useState();
  const [editVariablesModalOpened, setEditVariablesModalOpen] = useState(false);
  const { template } = useTemplateEditorForm();
  const { bridge } = useEnvironment({ bridge: template?.bridge });

  return (
    <>
      {!hasActiveIntegration ? <LackIntegrationAlert channelType={ChannelTypeEnum.CHAT} /> : null}
      <StepSettings />
      <Grid>
        <Grid.Col span={6}>
          <Controller
            name={`${stepFormPath}.template.content`}
            defaultValue=""
            control={control}
            render={({ field }) => (
              <Stack spacing={8}>
                <VariableManagementButton
                  openEditVariablesModal={() => {
                    setEditVariablesModalOpen(true);
                  }}
                  label={bridge ? 'Control variables' : undefined}
                />
                <When truthy={!bridge}>
                  <CustomCodeEditor
                    value={(field.value as string) || ''}
                    onChange={(value) => {
                      handleContentChange(value, field.onChange);
                    }}
                  />
                </When>
                <When truthy={bridge}>
                  <ControlVariablesForm onChange={setControlVariables} />
                </When>
              </Stack>
            )}
          />
        </Grid.Col>
        <Grid.Col span={6}>
          <ChatPreview controlVariables={controlVariables} showLoading={isPreviewLoading} />
        </Grid.Col>
      </Grid>
      <EditVariablesModal
        open={editVariablesModalOpened}
        setOpen={setEditVariablesModalOpen}
        variablesArray={variablesArray}
      />
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ChannelTypeEnum } from '@novu/shared';
import { Controller, useFormContext } from 'react-hook-form';
import { Grid, SegmentedControl, Stack, useMantineTheme } from '@mantine/core';
import { useState } from 'react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/custom-editor/TemplateCustomEditor.tsx
Tamaño: 1104 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Controller, useFormContext } from 'react-hook-form';
import { useState } from 'react';
import { Grid, Stack } from '@mantine/core';
import { StepSettings } from '../../workflow/SideBar/StepSettings';
import { useStepFormPath } from '../../hooks/useStepFormPath';
import { ControlVariablesForm } from '../ControlVariablesForm';

export function TemplateCustomEditor() {
  const stepFormPath = useStepFormPath();
  const { control } = useFormContext();

  const [controlVariables, setControlVariables] = useState();

  return (
    <>
      <StepSettings />
      <Grid gutter={24}>
        <Grid.Col span={'auto'}>
          <Controller
            name={`${stepFormPath}.template.content` as any}
            defaultValue=""
            control={control}
            render={({ field }) => (
              <Stack spacing={8}>
                <ControlVariablesForm
                  onChange={(values) => {
                    setControlVariables(values);
                  }}
                />
              </Stack>
            )}
          />
        </Grid.Col>
      </Grid>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Controller, useFormContext } from 'react-hook-form';
import { useState } from 'react';
import { Grid, Stack } from '@mantine/core';
import { StepSettings } from '../../workflow/SideBar/StepSettings';
import { useStepFormPath } from '../../hooks/useStepFormPath';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/AutoSuggestionsDropdown.tsx
Tamaño: 2552 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { ScrollArea } from '@mantine/core';
import { colors, shadows } from '@novu/design-system';
import { useEffect, useRef } from 'react';

type AutoSuggestionsDropdownProps = {
  autoSuggestionsCoordinates: {
    top: number;
    left: number;
  };
  onSuggestionsSelect: (value: string) => void;
  variableQuery: string;
  selectedIndex: number;
  variablesList: {
    label: string;
    detail: string;
    insertText: string;
  }[];
};

export function AutoSuggestionsDropdown({
  autoSuggestionsCoordinates,
  onSuggestionsSelect,
  selectedIndex,
  variablesList,
}: AutoSuggestionsDropdownProps) {
  const selectedRowRef = useRef<HTMLDivElement | null>(null);
  const containerRef = useRef<HTMLDivElement | null>(null);

  useEffect(() => {
    if (variablesList.length > 0 && selectedRowRef.current) {
      selectedRowRef.current?.scrollIntoView({
        behavior: 'smooth',
        block: 'nearest',
        inline: 'start',
      });
    }
  }, [variablesList, selectedIndex]);

  if (variablesList.length === 0) {
    return null;
  }

  return (
    <Container
      top={autoSuggestionsCoordinates.top}
      left={autoSuggestionsCoordinates.left}
      onClick={(e) => e.stopPropagation()}
      ref={containerRef}
    >
      <ScrollArea w="100%" mah="250px" h="100%" offsetScrollbars pl={10} pt={10}>
        {variablesList.map((variable, index) => (
          <VariableRow
            key={variable.label}
            onClick={(e) => {
              e.stopPropagation();
              onSuggestionsSelect(variable.insertText);
            }}
            isFocussed={selectedIndex === index}
            ref={selectedIndex === index ? selectedRowRef : null}
          >
            {variable.label}
          </VariableRow>
        ))}
      </ScrollArea>
    </Container>
  );
}

const Container = styled.div<{ top: number; left: number }>`
  padding: 5px;
  border-radius: 7px;
  background: ${colors.B20};

  box-shadow: ${shadows.dark};
  position: absolute;
  max-height: 370px;
  width: 475px;
  top: ${({ top }) => top + 20}px;
  left: ${({ left }) => left}px;
  z-index: 3;
  overflow: hidden;
  height: 250px;
`;

const VariableRow = styled.div<{ isFocussed: boolean }>`
  display: flex;
  padding: 10px;
  justify-content: space-between;
  align-items: center;
  gap: 10px;
  color: #b18cff;
  cursor: pointer;

  &:hover {
    opacity: 0.8;
    background: ${colors.B30};
  }

  ${({ isFocussed }) =>
    isFocussed &&
    `
    opacity: 0.8;
    background: ${colors.B30};
  `}
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { ScrollArea } from '@mantine/core';
import { colors, shadows } from '@novu/design-system';
import { useEffect, useRef } from 'react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/ButtonRowContent.tsx
Tamaño: 3812 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { Controller, useFormContext } from 'react-hook-form';
import { showNotification } from '@mantine/notifications';
import { TextInput as MantineInput, Popover, Button as MantineButton, createStyles } from '@mantine/core';
import { TextAlignEnum } from '@novu/shared';

import { colors, shadows, TextAlignment, Wifi } from '@novu/design-system';
import { useEnvironment } from '../../../../hooks';
import type { IForm } from '../formTypes';
import { useStepFormPath } from '../../hooks/useStepFormPath';

const usePopoverStyles = createStyles((theme) => ({
  dropdown: {
    padding: '5px',
    minWidth: 220,
    backgroundColor: theme.colorScheme === 'dark' ? colors.B20 : colors.white,
    color: theme.colorScheme === 'dark' ? theme.white : colors.B40,
    border: 'none',
    boxShadow: theme.colorScheme === 'dark' ? shadows.dark : shadows.medium,
  },
  arrow: {
    width: '7px',
    height: '7px',
    backgroundColor: theme.colorScheme === 'dark' ? colors.B20 : colors.white,
    border: 'none',
  },
}));

export function ButtonRowContent({
  blockIndex,
  brandingColor,
}: {
  blockIndex: number;
  brandingColor: string | undefined;
}) {
  const methods = useFormContext<IForm>();
  const stepFormPath = useStepFormPath();

  const content = methods.watch(`${stepFormPath}.template.content.${blockIndex}.content`);
  const textAlign = methods.watch(`${stepFormPath}.template.content.${blockIndex}.styles.textAlign`);
  const { readonly } = useEnvironment();
  const [dropDownVisible, setDropDownVisible] = useState<boolean>(false);
  const { classes } = usePopoverStyles();

  function handleKeyDown(e) {
    if (e.key === 'Enter') {
      setDropDownVisible(false);
      showSaveSuccess();
    }
  }

  function showSaveSuccess() {
    showNotification({
      message: 'Button saved',
      color: 'green',
    });
  }

  return (
    <div style={{ textAlign: textAlign || TextAlignEnum.LEFT }} data-test-id="button-block-wrapper">
      <Popover
        classNames={classes}
        opened={dropDownVisible && !readonly}
        withArrow
        onClose={() => {
          setDropDownVisible(false);
          showSaveSuccess();
        }}
      >
        <Popover.Target>
          <MantineButton
            sx={{
              backgroundColor: brandingColor || 'red',
              '&:hover': {
                backgroundColor: brandingColor || 'red',
              },
            }}
            color="red"
            onClick={() => setDropDownVisible((open) => !open)}
          >
            {content}
          </MantineButton>
        </Popover.Target>
        <Popover.Dropdown>
          <Controller
            name={`${stepFormPath}.template.content.${blockIndex}.content`}
            defaultValue=""
            control={methods.control}
            render={({ field }) => {
              return (
                <MantineInput
                  {...field}
                  data-test-id="button-text-input"
                  icon={<TextAlignment />}
                  variant="unstyled"
                  onKeyDown={handleKeyDown}
                  placeholder="Button Text"
                />
              );
            }}
          />
          <Controller
            name={`${stepFormPath}.template.content.${blockIndex}.url`}
            defaultValue=""
            control={methods.control}
            render={({ field }) => {
              return (
                <MantineInput
                  {...field}
                  icon={<Wifi width={20} height={20} />}
                  variant="unstyled"
                  onKeyDown={handleKeyDown}
                  placeholder="https://www.yoururl..."
                />
              );
            }}
          />
        </Popover.Dropdown>
      </Popover>
    </div>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { Controller, useFormContext } from 'react-hook-form';
import { showNotification } from '@mantine/notifications';
import { TextInput as MantineInput, Popover, Button as MantineButton, createStyles } from '@mantine/core';
import { TextAlignEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/ContentRow.tsx
Tamaño: 4472 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useRef, useState } from 'react';
import { useFormContext, Controller } from 'react-hook-form';
import { ActionIcon, useMantineTheme } from '@mantine/core';
import styled from '@emotion/styled';
import { TextAlignEnum } from '@novu/shared';

import {
  DotsHorizontalOutlined,
  Trash,
  Button,
  colors,
  Dropdown,
  IconOutlineAlignHorizontalLeft,
  IconOutlineAlignHorizontalCenter,
  IconOutlineAlignHorizontalRight,
} from '@novu/design-system';
import { useEnvironment } from '../../../../hooks';
import { useStepFormPath } from '../../hooks/useStepFormPath';

export function ContentRow({
  children,
  onHoverElement,
  onRemove,
  allowRemove,
  blockIndex,
}: {
  children: JSX.Element | JSX.Element[];
  onHoverElement: (data: { top: number; height: number }) => void;
  onRemove: () => void;
  allowRemove: boolean;
  blockIndex: number;
}) {
  const methods = useFormContext();
  const { readonly } = useEnvironment();
  const theme = useMantineTheme();
  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);
  const parentRef = useRef<HTMLDivElement>(null);
  const stepFormPath = useStepFormPath();

  const textAlignments = [
    ['left', <IconOutlineAlignHorizontalLeft key="left-align-icon" />],
    ['center', <IconOutlineAlignHorizontalCenter key="center-align-icon" />],
    ['right', <IconOutlineAlignHorizontalRight key="right-align-icon" />],
  ];

  function onHover() {
    if (!parentRef.current) return;

    onHoverElement({
      top: parentRef.current.offsetTop,
      height: parentRef.current.offsetHeight,
    });
  }

  const rowStyleMenu = [
    <Dropdown.Label key="alignBtn" sx={{ fontSize: '14px' }}>
      Align Text
    </Dropdown.Label>,
    <Controller
      key="button-wrapper"
      name={`${stepFormPath}.template.content.${blockIndex}.styles.textAlign`}
      defaultValue={TextAlignEnum.LEFT}
      control={methods.control}
      render={({ field }) => {
        return (
          <TextAlignmentWrapper colorScheme={theme.colorScheme}>
            {textAlignments.map(([dir, icon], i) => (
              <Button
                key={`align-${dir as string}-btn`}
                onClick={(e) => {
                  e.preventDefault();
                  e.stopPropagation();
                  field.onChange(dir);
                }}
                data-test-id={`align-${dir as string}-btn`}
                variant={dir === field.value ? 'gradient' : 'outline'}
              >
                {icon}
              </Button>
            ))}
          </TextAlignmentWrapper>
        );
      }}
    />,
    <Dropdown.Item
      key="remove-row-btn"
      disabled={!allowRemove}
      data-test-id="remove-row-btn"
      onClick={onRemove}
      icon={<Trash />}
    >
      Remove Row
    </Dropdown.Item>,
  ];

  return (
    <div onMouseEnter={onHover} ref={parentRef} role="presentation" data-test-id="editor-row">
      <ContentRowWrapper>
        <div style={{ width: '100%' }}>{children}</div>
        <SettingsWrapper>
          {!readonly && (
            <Dropdown
              onClose={() => setDropdownOpen(false)}
              onOpen={() => setDropdownOpen(true)}
              control={
                <SettingsButton data-test-id="settings-row-btn" visible={dropdownOpen}>
                  <ActionIcon variant="transparent">
                    <DotsHorizontalOutlined color={colors.B60} />
                  </ActionIcon>
                </SettingsButton>
              }
              position="top"
            >
              {rowStyleMenu}
            </Dropdown>
          )}
        </SettingsWrapper>
      </ContentRowWrapper>
    </div>
  );
}

const SettingsWrapper = styled.div`
  width: 50px;
  height: 0;
  display: flex;
  align-items: center;
  justify-content: end;
`;

const SettingsButton = styled.div<{ visible: boolean }>`
  display: ${({ visible }) => (visible ? 'inline-block' : 'none')};
`;

const ContentRowWrapper = styled.div`
  width: 100%;
  outline: transparent;
  padding-bottom: 10px;
  display: flex;
  align-items: center;

  &:hover {
    ${SettingsButton} {
      display: inline-block;
    }
  }
`;

const TextAlignmentWrapper = styled.div<{ colorScheme: 'light' | 'dark' }>`
  display: flex;
  justify-content: space-between;
  padding: 5px 15px 15px 15px;

  button {
    padding: 0;
    margin: 0 5px;
    width: 100%;
  }

  .anticon svg {
    color: ${({ colorScheme }) => (colorScheme === 'dark' ? colors.white : colors.B40)};
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useRef, useState } from 'react';
import { useFormContext, Controller } from 'react-hook-form';
import { ActionIcon, useMantineTheme } from '@mantine/core';
import styled from '@emotion/styled';
import { TextAlignEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/ControlBar.tsx
Tamaño: 1243 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ActionIcon, Divider } from '@mantine/core';
import { DoubleArrowRight, PlusCircleOutlined, TextAlignment, colors, Dropdown } from '@novu/design-system';
import { EmailBlockTypeEnum } from '@novu/shared';

export function ControlBar({ top, onBlockAdd }: { top: number; onBlockAdd: (type: EmailBlockTypeEnum) => void }) {
  const actionsMenu = [
    <Dropdown.Item
      key="control-bar-add"
      data-test-id="add-btn-block"
      icon={<DoubleArrowRight />}
      onClick={() => onBlockAdd(EmailBlockTypeEnum.BUTTON)}
    >
      Add Button
    </Dropdown.Item>,
    <Dropdown.Item
      key="add-text-button"
      data-test-id="add-text-block"
      icon={<TextAlignment />}
      onClick={() => onBlockAdd(EmailBlockTypeEnum.TEXT)}
    >
      Add Text
    </Dropdown.Item>,
  ];

  return (
    <Divider
      data-test-id="control-bar"
      variant="dashed"
      mx={0}
      color={colors.B60}
      style={{ top: `${top}px` }}
      label={
        <Dropdown
          control={
            <ActionIcon data-test-id="control-add" variant="transparent">
              <PlusCircleOutlined color={colors.B60} />
            </ActionIcon>
          }
        >
          {actionsMenu}
        </Dropdown>
      }
    />
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ActionIcon, Divider } from '@mantine/core';
import { DoubleArrowRight, PlusCircleOutlined, TextAlignment, colors, Dropdown } from '@novu/design-system';
import { EmailBlockTypeEnum } from '@novu/shared';
export function ControlBar({ top, onBlockAdd }: { top: number; onBlockAdd: (type: EmailBlockTypeEnum) => void }) {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/EmailContentCard.tsx
Tamaño: 2485 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { Controller, useFormContext } from 'react-hook-form';
import { IOrganizationEntity } from '@novu/shared';
import { Tabs } from '@novu/design-system';

import { useStepFormPath } from '../../hooks/useStepFormPath';
import { useActiveIntegrations, useEnvironment } from '../../../../hooks';
import { EmailInboxContent } from './EmailInboxContent';
import { EmailMessageEditor } from './EmailMessageEditor';
import { CustomCodeEditor } from '../CustomCodeEditor';
import { useTemplateEditorForm } from '../TemplateEditorFormProvider';

const EDITOR = 'Editor';
const CUSTOM_CODE = 'Custom Code';

export function EmailContentCard({ organization }: { organization: IOrganizationEntity | undefined }) {
  const { template } = useTemplateEditorForm();
  const { readonly, bridge } = useEnvironment({ bridge: template?.bridge });
  const stepFormPath = useStepFormPath();
  const { control, setValue, watch } = useFormContext(); // retrieve all hook methods
  const contentType = watch(`${stepFormPath}.template.contentType`);
  const activeTab = contentType === 'customHtml' ? CUSTOM_CODE : EDITOR;
  const { integrations = [] } = useActiveIntegrations();
  const [integration, setIntegration]: any = useState(null);

  useEffect(() => {
    if (integrations.length === 0) {
      return;
    }
    setIntegration(integrations.find((item) => item.channel === 'email' && item.primary) || null);
  }, [integrations, setIntegration]);

  const onTabChange = (value: string | null) => {
    setValue(`${stepFormPath}.template.contentType`, value === EDITOR ? 'editor' : 'customHtml');
  };

  const menuTabs = [
    {
      value: EDITOR,
      content: <EmailMessageEditor branding={organization?.branding} readonly={readonly} />,
    },
    {
      value: CUSTOM_CODE,
      content: (
        <Controller
          name={`${stepFormPath}.template.htmlContent`}
          defaultValue=""
          control={control}
          render={({ field }) => {
            return <CustomCodeEditor onChange={field.onChange} value={field.value} />;
          }}
        />
      ),
    },
  ];

  return (
    <>
      <EmailInboxContent bridge={bridge} integration={integration} readonly={readonly} />
      <div data-test-id="email-step-settings-edit">
        <div data-test-id="editor-type-selector">
          <Tabs value={activeTab} onTabChange={onTabChange} menuTabs={menuTabs} keepMounted={false} />
        </div>
      </div>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect, useState } from 'react';
import { Controller, useFormContext } from 'react-hook-form';
import { IOrganizationEntity } from '@novu/shared';
import { Tabs } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/EmailCustomCodeEditor.tsx
Tamaño: 2304 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import AceEditor from 'react-ace';
import 'ace-builds/src-noconflict/mode-handlebars';
import 'ace-builds/src-noconflict/theme-monokai';
import { addCompleter } from 'ace-builds/src-noconflict/ext-language_tools';
import { Card } from '@mantine/core';
import { SystemVariablesWithTypes, HandlebarHelpers } from '@novu/shared';
import { colors } from '@novu/design-system';
import { useEnvironment } from '../../../../hooks';

export function EmailCustomCodeEditor({
  onChange,
  value,
  height = '300px',
}: {
  onChange?: (string) => void;
  value?: string;
  height?: string;
}) {
  const { readonly } = useEnvironment();
  addCompleter({
    getCompletions(editor, session, pos, prefix, callback) {
      const systemVars = Object.keys(SystemVariablesWithTypes)
        .map((name) => {
          const type = SystemVariablesWithTypes[name];
          if (typeof type === 'object') {
            return Object.keys(type).map((subName) => {
              return { name: `${name}.${subName}`, type: type[subName] };
            });
          }

          return { name, type };
        })
        .flat();

      callback(null, [
        ...Object.keys(HandlebarHelpers).map((name) => {
          return { name, value: name, caption: name, meta: HandlebarHelpers[name].description };
        }),
        ...systemVars.map(({ name, type }) => {
          return { name, value: name, caption: name, meta: type };
        }),
      ]);
    },
  });

  return (
    <Card withBorder sx={styledCard}>
      <AceEditor
        data-test-id="custom-code-editor"
        style={{ width: '100%' }}
        mode="handlebars"
        theme="monokai"
        name="codeEditor"
        onChange={onChange}
        height={height}
        fontSize={14}
        showPrintMargin
        showGutter
        highlightActiveLine
        value={value ? String(value) : ''}
        setOptions={{
          enableBasicAutocompletion: true,
          enableLiveAutocompletion: true,
          enableSnippets: true,
          showLineNumbers: true,
          tabSize: 1,
          readOnly: readonly,
        }}
      />
    </Card>
  );
}

const styledCard = (theme) => ({
  backgroundColor: 'transparent',
  borderRadius: '7px',
  borderColor: theme.colorScheme === 'dark' ? colors.B30 : colors.B80,
  padding: '30px',
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import AceEditor from 'react-ace';
import 'ace-builds/src-noconflict/mode-handlebars';
import 'ace-builds/src-noconflict/theme-monokai';
import { addCompleter } from 'ace-builds/src-noconflict/ext-language_tools';
import { Card } from '@mantine/core';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/EmailInboxContent.tsx
Tamaño: 4764 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Grid, useMantineTheme } from '@mantine/core';
import { Controller, useFormContext } from 'react-hook-form';
import { colors, Input, Select, Tooltip } from '@novu/design-system';
import { useEffect } from 'react';
import { useLayouts } from '../../../../hooks';
import { useStepFormPath } from '../../hooks/useStepFormPath';
import { useStepFormErrors } from '../../hooks/useStepFormErrors';
import { When } from '../../../../components/utils/When';

export const EmailInboxContent = ({
  integration,
  bridge,
  readonly,
}: {
  readonly: boolean;
  bridge: boolean;
  integration: any;
}) => {
  const theme = useMantineTheme();
  const {
    control,
    getValues,
    setValue,
    formState: { errors },
  } = useFormContext();
  const { layouts, isLoading } = useLayouts(0, 100);
  const stepFormPath = useStepFormPath();
  const stepFormErrors = useStepFormErrors();

  useEffect(() => {
    const layout = getValues(`${stepFormPath}.template.layoutId`);
    if (layouts?.length && !layout) {
      const defaultLayout = layouts?.find((el) => el.isDefault);
      setTimeout(() => {
        setValue(`${stepFormPath}.template.layoutId`, defaultLayout?._id, { shouldValidate: true });
      }, 0);
    }
  }, [getValues, setValue, layouts, stepFormPath]);

  return (
    <div
      style={{
        borderRadius: '7px',
        marginBottom: '24px',
        padding: '16px',
        background: theme.colorScheme === 'dark' ? colors.B20 : colors.B98,
      }}
    >
      <Grid grow justify="center" align="stretch">
        <Grid.Col span={3}>
          <Controller
            name={`${stepFormPath}.template.senderName`}
            defaultValue=""
            control={control}
            render={({ field }) => {
              return (
                <Input
                  {...field}
                  required
                  label={
                    <Tooltip label="leave empty to use sender name from integration">
                      <span>Sender name</span>
                    </Tooltip>
                  }
                  error={stepFormErrors ? stepFormErrors.template?.senderName?.message : undefined}
                  disabled={readonly}
                  value={field.value}
                  placeholder={integration?.credentials?.senderName}
                  data-test-id="emailSenderName"
                />
              );
            }}
          />
        </Grid.Col>
        <Grid.Col span={4}>
          <div>
            <Controller
              name={`${stepFormPath}.template.subject`}
              defaultValue=""
              control={control}
              render={({ field }) => {
                return (
                  <Input
                    {...field}
                    label="Subject"
                    required
                    error={stepFormErrors ? stepFormErrors.template?.subject?.message : undefined}
                    disabled={readonly}
                    value={field.value}
                    placeholder="Type the email subject..."
                    data-test-id="emailSubject"
                  />
                );
              }}
            />
          </div>
        </Grid.Col>
        <Grid.Col span={4}>
          <When truthy={!bridge}>
            <Controller
              name={`${stepFormPath}.template.preheader`}
              defaultValue=""
              control={control}
              render={({ field, fieldState }) => {
                return (
                  <Input
                    {...field}
                    label="Preheader"
                    error={fieldState.error?.message}
                    disabled={readonly}
                    value={field.value}
                    placeholder="Preheader..."
                    data-test-id="emailPreheader"
                  />
                );
              }}
            />
          </When>
        </Grid.Col>
      </Grid>
      <When truthy={!bridge}>
        <Controller
          name={`${stepFormPath}.template.layoutId`}
          defaultValue=""
          control={control}
          render={({ field }) => {
            return (
              <Select
                {...field}
                label="Email Layout"
                data-test-id="templates-layout"
                loading={isLoading}
                disabled={readonly}
                required={(layouts || [])?.length > 0}
                error={stepFormErrors ? stepFormErrors.template?.layoutId?.message : undefined}
                searchable
                placeholder="Select layout"
                data={(layouts || []).map((layout) => ({ value: layout._id as string, label: layout.name }))}
              />
            );
          }}
        />
      </When>
    </div>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Grid, useMantineTheme } from '@mantine/core';
import { Controller, useFormContext } from 'react-hook-form';
import { colors, Input, Select, Tooltip } from '@novu/design-system';
import { useEffect } from 'react';
import { useLayouts } from '../../../../hooks';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/EmailMessageEditor.tsx
Tamaño: 5711 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useMantineTheme, Group, Container, Card } from '@mantine/core';
import { Dropzone } from '@mantine/dropzone';
import { useFormContext, useFieldArray } from 'react-hook-form';
import { EmailBlockTypeEnum, IEmailBlock, FeatureFlagsKeysEnum } from '@novu/shared';

import { Upload, colors, Text } from '@novu/design-system';
import { ContentRow } from './ContentRow';
import { ControlBar } from './ControlBar';
import { ButtonRowContent } from './ButtonRowContent';
import { TextRowContent } from './TextRowContent';
import type { IForm, IFormStep, ITemplates } from '../formTypes';
import { useStepFormPath } from '../../hooks/useStepFormPath';
import { ROUTES } from '../../../../constants/routes';
import { useFeatureFlag } from '../../../../hooks/useFeatureFlag';

interface IStepEntityExtended extends IFormStep {
  template: ITemplates & {
    content: IEmailBlock[];
  };
}

interface IFormExtended extends IForm {
  steps: IStepEntityExtended[];
}

export function EmailMessageEditor({
  branding,
  readonly,
}: {
  branding: { color: string; logo: string } | undefined;
  readonly: boolean;
}) {
  const methods = useFormContext<IFormExtended>();
  const stepFormPath = useStepFormPath();
  const contentBlocks = useFieldArray<IFormExtended, any, 'id' | 'type'>({
    control: methods.control,
    name: `${stepFormPath}.template.content` as any,
  });
  const theme = useMantineTheme();
  const navigate = useNavigate();

  const [top, setTop] = useState<number>(0);
  const [controlBarVisible, setActionBarVisible] = useState<boolean>(false);

  function onHoverElement(e) {
    setTop(e.top + e.height);
  }

  function onEnterPress(e) {
    const ENTER_CODE = 13;
    const BACKSPACE_CODE = 8;

    if (e.keyCode === ENTER_CODE || e.keyCode === BACKSPACE_CODE) {
      /*
       * TODO: Currently disabled, because causes to not create new line on first time
       * setActionBarVisible(false);
       */
    }
  }

  function onBlockAdd(type: EmailBlockTypeEnum) {
    if (type === 'button') {
      contentBlocks.append({
        type: EmailBlockTypeEnum.BUTTON,
        content: 'Button text',
      });
    }

    if (type === 'text') {
      contentBlocks.append({
        type: EmailBlockTypeEnum.TEXT,
        content: '',
      });
    }
  }

  function removeBlock(index: number) {
    contentBlocks.remove(index);
  }

  if (!Array.isArray(contentBlocks.fields)) {
    return null;
  }

  return (
    <Card withBorder sx={styledCard}>
      <Container pl={0} pr={0}>
        <div onClick={() => !branding?.logo && navigate(ROUTES.BRAND_SETTINGS)} role="link">
          <Dropzone
            styles={{
              inner: {
                height: '100%',
              },
              root: {
                borderRadius: '7px',
                padding: '10px',
                border: 'none',
                height: '80px',
                backgroundColor: theme.colorScheme === 'dark' ? colors.B17 : colors.B98,
              },
            }}
            disabled
            multiple={false}
            onDrop={(file) => {}}
            data-test-id="upload-image-button"
          >
            <Group position="center" style={{ height: '100%' }}>
              {!branding?.logo ? (
                <Group style={{ height: '100%', flexDirection: 'column' }} spacing={5} position="center">
                  <Upload style={{ width: 30, height: 30, color: colors.B60 }} />
                  <Text color={colors.B60}>Upload Brand Logo</Text>
                </Group>
              ) : (
                <img
                  data-test-id="brand-logo"
                  src={branding?.logo}
                  alt=""
                  style={{ width: 'inherit', maxHeight: '80%' }}
                />
              )}
            </Group>
          </Dropzone>
        </div>
      </Container>

      <Container
        mt={30}
        sx={{
          height: '100%',
          minHeight: '300px',
          borderRadius: '7px',
          padding: '30px',
          backgroundColor: theme.colorScheme === 'dark' ? colors.B17 : colors.B98,
          ...(readonly
            ? {
                backgroundColor: theme.colorScheme === 'dark' ? colors.B20 : colors.B98,
                color: theme.colorScheme === 'dark' ? colors.B40 : colors.B70,
                opacity: 0.6,
              }
            : {}),
        }}
        onMouseEnter={() => setActionBarVisible(true)}
        onMouseLeave={() => setActionBarVisible(false)}
      >
        <div style={{ position: 'relative' }} data-test-id="email-editor">
          {contentBlocks.fields.map((block, blockIndex) => {
            return (
              <ContentRow
                key={blockIndex}
                onHoverElement={onHoverElement}
                onRemove={() => removeBlock(blockIndex)}
                allowRemove={contentBlocks.fields?.length > 1}
                blockIndex={blockIndex}
              >
                {block.type === 'text' ? (
                  <TextRowContent blockIndex={blockIndex} />
                ) : (
                  <ButtonRowContent brandingColor={branding?.color} blockIndex={blockIndex} />
                )}
              </ContentRow>
            );
          })}
        </div>
        {controlBarVisible && !readonly && (
          <div>
            <ControlBar top={top} onBlockAdd={onBlockAdd} />
          </div>
        )}
      </Container>
    </Card>
  );
}

const styledCard = (theme) => ({
  backgroundColor: 'transparent',
  borderRadius: '7px',
  borderColor: theme.colorScheme === 'dark' ? colors.B30 : colors.B80,
  padding: '30px',
  overflow: 'visible',
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useMantineTheme, Group, Container, Card } from '@mantine/core';
import { Dropzone } from '@mantine/dropzone';
import { useFormContext, useFieldArray } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/EmailMessagesCards.tsx
Tamaño: 6202 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { Grid, SegmentedControl, useMantineTheme } from '@mantine/core';
import { colors } from '@novu/design-system';
import { useHotkeys } from '@mantine/hooks';
import { ChannelTypeEnum } from '@novu/shared';
import { EmailContentCard } from './EmailContentCard';
import { useAuth } from '../../../../hooks/useAuth';
import { When } from '../../../../components/utils/When';
import { EmailPreview } from '../../../../components/workflow/preview';
import { EditorPreviewSwitch } from '../EditorPreviewSwitch';
import { TestSendEmail } from './TestSendEmail';
import { MobileIcon } from '../../../../components/workflow/preview/email/PreviewSegment/MobileIcon';
import { WebIcon } from '../../../../components/workflow/preview/email/PreviewSegment/WebIcon';
import { VariablesManagement } from './variables-management/VariablesManagement';
import {
  useHasActiveIntegrations,
  useGetPrimaryIntegration,
  useIntegrationLimit,
  useVariablesManager,
  useEnvironment,
} from '../../../../hooks';
import { EditVariablesModal } from '../EditVariablesModal';
import { StepSettings } from '../../workflow/SideBar/StepSettings';
import { LackIntegrationAlert } from '../LackIntegrationAlert';
import { useStepFormPath } from '../../hooks/useStepFormPath';
import { useTemplateEditorForm } from '../TemplateEditorFormProvider';

export enum ViewEnum {
  EDIT = 'Edit',
  PREVIEW = 'Preview',
  CODE = 'Code',
  CONTROLS = 'Controls',
  TEST = 'Test',
}
const templateFields = ['content', 'htmlContent', 'subject', 'preheader', 'senderName'];

export function EmailMessagesCards() {
  const { currentOrganization } = useAuth();
  const { template } = useTemplateEditorForm();
  const { environment, bridge } = useEnvironment({ bridge: template?.bridge });
  const [view, setView] = useState<ViewEnum>(bridge ? ViewEnum.PREVIEW : ViewEnum.EDIT);
  const [preview, setPreview] = useState<'mobile' | 'web'>('web');
  const theme = useMantineTheme();
  const [modalOpen, setModalOpen] = useState(false);
  const variablesArray = useVariablesManager(templateFields);
  const { isLimitReached } = useIntegrationLimit(ChannelTypeEnum.EMAIL);
  const { hasActiveIntegration } = useHasActiveIntegrations({
    channelType: ChannelTypeEnum.EMAIL,
  });
  const { primaryIntegration } = useGetPrimaryIntegration({
    channelType: ChannelTypeEnum.EMAIL,
  });
  const stepFormPath = useStepFormPath();

  useHotkeys([
    [
      '1',
      () => {
        setView(ViewEnum.EDIT);
      },
    ],
    [
      '2',
      () => {
        setView(ViewEnum.PREVIEW);
        setPreview('web');
      },
    ],
    [
      '3',
      () => {
        setView(ViewEnum.TEST);
      },
    ],
    [
      '4',
      () => {
        setView(ViewEnum.PREVIEW);
        setPreview('mobile');
      },
    ],
  ]);

  return (
    <>
      <div
        style={{
          position: 'relative',
        }}
      >
        {!hasActiveIntegration && isLimitReached && <LackIntegrationAlert channelType={ChannelTypeEnum.EMAIL} />}
        {hasActiveIntegration && !primaryIntegration && (
          <LackIntegrationAlert
            channelType={ChannelTypeEnum.EMAIL}
            text={`You have multiple provider instances for Email in the ${environment?.name} environment.
            Please select the primary instance.`}
            isPrimaryMissing
          />
        )}
        <StepSettings />
        <Grid m={0} mt={24}>
          <Grid.Col p={0} mr={20} span={7}>
            <EditorPreviewSwitch view={view} setView={setView} bridge={bridge} />
          </Grid.Col>
          <Grid.Col p={0} span={2}>
            <When truthy={view === ViewEnum.PREVIEW}>
              <SegmentedControl
                data-test-id="preview-mode-switch"
                styles={{
                  root: {
                    background: 'transparent',
                    border: `1px solid ${theme.colorScheme === 'dark' ? colors.B40 : colors.B70}`,
                    borderRadius: '30px',
                    marginLeft: 7,
                  },
                  control: {
                    width: '70px',
                  },
                  active: {
                    background: theme.colorScheme === 'dark' ? colors.B40 : colors.B98,
                    borderRadius: '30px',
                  },
                  labelActive: {
                    color: `${theme.colorScheme === 'dark' ? colors.white : colors.B40} !important`,
                  },
                }}
                radius={'xl'}
                data={[
                  {
                    value: 'web',
                    label: <WebIcon color={preview !== 'web' ? colors.B40 : undefined} />,
                  },
                  {
                    value: 'mobile',
                    label: (
                      <MobileIcon style={{ marginTop: 3 }} color={preview !== 'mobile' ? colors.B40 : undefined} />
                    ),
                  },
                ]}
                value={preview}
                onChange={(value: any) => {
                  setPreview(value);
                }}
                defaultValue={preview}
              />
            </When>
          </Grid.Col>
        </Grid>
      </div>
      <When truthy={view === ViewEnum.PREVIEW}>
        <EmailPreview view={preview} />
      </When>
      <When truthy={view === ViewEnum.TEST}>
        <TestSendEmail bridge={bridge} isIntegrationActive={hasActiveIntegration} />
      </When>
      <When truthy={view === ViewEnum.EDIT}>
        <Grid grow>
          <Grid.Col span={9}>
            {}
            <EmailContentCard organization={currentOrganization!} />
          </Grid.Col>
          <Grid.Col
            span={3}
            style={{
              maxWidth: '350px',
            }}
          >
            <VariablesManagement
              bridge={bridge}
              path={`${stepFormPath}.template.variables`}
              openVariablesModal={() => {
                setModalOpen(true);
              }}
            />
          </Grid.Col>
        </Grid>
      </When>
      <EditVariablesModal setOpen={setModalOpen} open={modalOpen} variablesArray={variablesArray} />
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { Grid, SegmentedControl, useMantineTheme } from '@mantine/core';
import { colors } from '@novu/design-system';
import { useHotkeys } from '@mantine/hooks';
import { ChannelTypeEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/TestSendEmail.tsx
Tamaño: 6873 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { JsonInput, MultiSelect, ActionIcon } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';
import { useMutation, useQuery } from '@tanstack/react-query';
import { useFormContext, useWatch } from 'react-hook-form';
import styled from '@emotion/styled';
import { ChannelTypeEnum, MemberStatusEnum } from '@novu/shared';

import {
  Button,
  Text,
  colors,
  Tooltip,
  ArrowDown,
  Check,
  Copy,
  Invite,
  inputStyles,
  useSelectStyles,
} from '@novu/design-system';
import { errorMessage, successMessage } from '../../../../utils/notifications';
import { useAuth, useProcessVariables, useIntegrationLimit } from '../../../../hooks';
import { getOrganizationMembers } from '../../../../api/organization';
import { testSendEmailMessage } from '../../../../api/notification-templates';
import { useStepFormPath } from '../../hooks/useStepFormPath';
import type { IForm } from '../formTypes';
import { useTemplateEditorForm } from '../TemplateEditorFormProvider';

export function TestSendEmail({
  isIntegrationActive,
  bridge = false,
}: {
  isIntegrationActive: boolean;
  bridge?: boolean;
}) {
  const { currentUser } = useAuth();
  const { control, watch } = useFormContext<IForm>();
  const path = useStepFormPath();
  const stepId = watch(`${path}.uuid`);
  const { template: workflow } = useTemplateEditorForm();

  const clipboardJson = useClipboard({ timeout: 1000 });
  const { classes } = useSelectStyles();

  const { mutateAsync: testSendEmailEvent, isLoading } = useMutation(testSendEmailMessage);
  const template = useWatch({
    name: `${path}.template`,
    control,
  });

  const { data: organizationMembers } = useQuery<any[]>(['getOrganizationMembers'], getOrganizationMembers);
  const { isLimitFetchingEnabled } = useIntegrationLimit(ChannelTypeEnum.EMAIL);

  const [sendTo, setSendTo] = useState<string[]>(currentUser?.email ? [currentUser?.email] : []);
  const [membersEmails, setMembersEmails] = useState<string[]>([currentUser?.email || '']);

  useEffect(() => {
    if (organizationMembers?.length === 0) {
      return;
    }
    setMembersEmails(
      organizationMembers
        ?.filter((member) => member.memberStatus === MemberStatusEnum.ACTIVE)
        .map((member) => member.user?.email) || []
    );
  }, [organizationMembers, setMembersEmails]);

  const processedVariables = useProcessVariables(template.variables);
  const [payloadValue, setPayloadValue] = useState('{}');
  const [stepControls, setStepControls] = useState('{}');

  useEffect(() => {
    setPayloadValue(processedVariables);
  }, [processedVariables, setPayloadValue]);

  const onTestEmail = async () => {
    const payload = JSON.parse(payloadValue);
    const controls = JSON.parse(stepControls);

    try {
      await testSendEmailEvent({
        stepId,
        workflowId: workflow?.triggers[0].identifier,
        contentType: 'customHtml',
        subject: '',
        ...template,
        payload,
        controls,
        to: sendTo,
        bridge,
        content: bridge
          ? ''
          : template.contentType === 'customHtml'
            ? (template.htmlContent as string)
            : template.content,
        layoutId: template.layoutId,
      });
      successMessage('Test sent successfully!');
    } catch (e: any) {
      errorMessage(e.message || 'Un-expected error occurred');
    }
  };

  return (
    <div>
      <Text mb={30} color={colors.B60}>
        Fill in the required variables and send a test to your desired address.
      </Text>

      <Wrapper>
        <MultiSelect
          mt={20}
          radius="md"
          size="md"
          rightSection={<ArrowDown />}
          rightSectionWidth={50}
          required
          error={!sendTo.length && 'At least one email is required'}
          value={sendTo}
          label="Send to"
          classNames={classes}
          styles={inputStyles}
          data={membersEmails}
          onChange={setSendTo}
          creatable
          searchable
          getCreateLabel={(newEmail) => <div>+ Send to {newEmail}</div>}
          onCreate={(query) => {
            setMembersEmails((current) => [...current, query]);

            return query;
          }}
          data-test-id="test-email-emails"
        />
      </Wrapper>

      <div style={{ position: 'relative' }}>
        <JsonInput
          data-test-id="test-email-json-param"
          formatOnBlur
          mt={20}
          autosize
          styles={inputStyles}
          label={bridge ? 'Trigger Data' : 'Variables'}
          value={payloadValue}
          onChange={setPayloadValue}
          minRows={12}
          validationError="Invalid JSON"
          rightSectionWidth={50}
          rightSectionProps={{ style: { alignItems: 'start', padding: '5px' } }}
          rightSection={
            <Tooltip label={clipboardJson.copied ? 'Copied!' : 'Copy Json'}>
              <ActionIcon variant="transparent" onClick={() => clipboardJson.copy(payloadValue)}>
                {clipboardJson.copied ? <Check /> : <Copy />}
              </ActionIcon>
            </Tooltip>
          }
        />

        {bridge ? (
          <JsonInput
            data-test-id="test-email-json-controls"
            formatOnBlur
            mt={20}
            autosize
            styles={inputStyles}
            label="Step Controls"
            value={stepControls}
            onChange={setStepControls}
            minRows={12}
            validationError="Invalid JSON"
            rightSectionWidth={50}
            rightSectionProps={{ style: { alignItems: 'start', padding: '5px' } }}
            rightSection={
              <Tooltip label={clipboardJson.copied ? 'Copied!' : 'Copy Json'}>
                <ActionIcon variant="transparent" onClick={() => clipboardJson.copy(payloadValue)}>
                  {clipboardJson.copied ? <Check /> : <Copy />}
                </ActionIcon>
              </Tooltip>
            }
          />
        ) : null}

        <span
          style={{
            position: 'absolute',
            bottom: 16,
            right: 16,
          }}
        >
          <Button
            loading={isLoading}
            icon={<Invite />}
            data-test-id="test-send-email-btn"
            disabled={!isIntegrationActive && !isLimitFetchingEnabled}
            onClick={() => onTestEmail()}
          >
            Send Test Email
          </Button>
        </span>
      </div>
      {!isIntegrationActive && (
        <Text color={colors.error}>* Looks like you haven’t configured your email provider yet</Text>
      )}
    </div>
  );
}

const Wrapper = styled.div`
  .mantine-MultiSelect-values {
    min-height: 48px;
    padding: 5px 0;
    row-gap: 5px;
  }

  .mantine-MultiSelect-input {
    min-height: 50px;

    input {
      height: 100%;
    }
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect, useState } from 'react';
import { JsonInput, MultiSelect, ActionIcon } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';
import { useMutation, useQuery } from '@tanstack/react-query';
import { useFormContext, useWatch } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/TextRowContent.tsx
Tamaño: 10253 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { useEffect, useMemo, useRef, useState } from 'react';
import { Controller, useFormContext } from 'react-hook-form';
import { getHotkeyHandler } from '@mantine/hooks';
import { TextAlignEnum } from '@novu/shared';
import { colors } from '@novu/design-system';

import { useEnvironment } from '../../../../hooks';
import { useStepFormPath } from '../../hooks/useStepFormPath';
import type { IForm } from '../formTypes';
import { AutoSuggestionsDropdown } from './AutoSuggestionsDropdown';
import { useWorkflowVariables } from '../../../../api/hooks';

export function TextRowContent({ blockIndex }: { blockIndex: number }) {
  const methods = useFormContext<IForm>();
  const stepFormPath = useStepFormPath();

  const content = methods.watch(`${stepFormPath}.template.content.${blockIndex}.content`);
  const textAlign = methods.watch(`${stepFormPath}.template.content.${blockIndex}.styles.textAlign`);
  const { readonly } = useEnvironment();
  const ref = useRef<HTMLDivElement>(null);
  const [text, setText] = useState<string>(content);
  const [visiblePlaceholder, setVisiblePlaceholder] = useState(!!content);
  const [showAutoSuggestions, setShowAutoSuggestions] = useState(false);
  const [autoSuggestionsCoordinates, setAutoSuggestionsCoordinates] = useState({
    top: 0,
    left: 0,
  });

  const [isAutoSuggestionTrigger, setIsAutoSuggestionTrigger] = useState(false);
  const [anchorPosition, setAnchorPosition] = useState<number | null>(null);
  const [variableQuery, setVariableQuery] = useState('');
  const [contentSnapshot, setContentSnapshot] = useState('');
  const [selectedIndex, setSelectedIndex] = useState(0);

  const { allVariables } = useWorkflowVariables();

  const variablesList = useMemo(() => {
    if (variableQuery) {
      return allVariables.filter((variable) => variable.label.toLowerCase().includes(variableQuery.toLowerCase()));
    }

    return allVariables;
  }, [variableQuery, allVariables]);

  useEffect(() => {
    if (isAutoSuggestionTrigger) {
      const checkAutoSuggestionsTrigger = () => {
        const data = content;
        const result = getCaretCoordinatesAndAnchorOffset(ref.current);
        if (!result?.anchorOffset || !data) return;

        const characters = checkPreviousChar(data, result?.anchorOffset);

        if (characters && characters.previousChar === '{' && characters.currentChar === '{') {
          setShowAutoSuggestions(true);
          setContentSnapshot(data);
          setAutoSuggestionsCoordinates({
            top: result?.top || 0,
            left: result?.left || 0,
          });

          setIsAutoSuggestionTrigger(false);
          setAnchorPosition(result?.anchorOffset);
        }
      };

      checkAutoSuggestionsTrigger();
    }
  }, [content, isAutoSuggestionTrigger]);

  const checkPreviousChar = (data: string, anchorPos: number) => {
    if (anchorPos > 1) {
      const endContent = data.slice(anchorPos - 2);

      const contentToUse = endContent || data;
      const slicePositions = contentToUse.lastIndexOf('{') + 1;

      const currentChar = contentToUse.charAt(slicePositions - 1);
      const previousChar = contentToUse.charAt(slicePositions - 2);

      return {
        previousChar,
        currentChar,
      };
    }

    return undefined;
  };

  const getCaretCoordinatesAndAnchorOffset = (element) => {
    const selection = document.getSelection();
    const caretRange = selection?.getRangeAt(0);
    const caretRect = caretRange?.getBoundingClientRect();
    const parentRect = element.getBoundingClientRect();
    const preSelectionRange = caretRange?.cloneRange();
    preSelectionRange?.selectNodeContents(element);
    if (caretRect && caretRange) {
      preSelectionRange?.setEnd(caretRange.startContainer, caretRange.startOffset);
      const startOffset = preSelectionRange?.toString().length;

      return {
        top: caretRect.top - parentRect.top,
        left: caretRect.left - parentRect.left,
        anchorOffset: startOffset,
      };
    }
  };

  const onSuggestionsSelect = (value: string) => {
    const data = contentSnapshot;

    if (!data || anchorPosition === null) return;

    const endContent = data.slice(anchorPosition);

    const slicePositions = endContent.lastIndexOf('{{') + 2;
    const newEndContent = `${endContent.slice(0, slicePositions)}${value}${endContent.slice(slicePositions)}`;

    const newContent = `${data.slice(0, anchorPosition)}${newEndContent}`;
    setText(newContent);

    methods.setValue(`${stepFormPath}.template.content.${blockIndex}.content`, newContent);
    resetAutoSuggestions();
  };

  const resetAutoSuggestions = () => {
    setShowAutoSuggestions(false);
    setIsAutoSuggestionTrigger(false);
    setAnchorPosition(null);
    setVariableQuery('');
    setContentSnapshot('');
    setSelectedIndex(0);
    ref.current?.blur();
  };

  useEffect(() => {
    ref.current?.focus();
  }, [ref]);

  function checkPlaceholderVisibility(data = content) {
    let showPlaceHolder = !data;

    if (data === '<br>') showPlaceHolder = true;

    setVisiblePlaceholder(showPlaceHolder);
  }

  useEffect(() => {
    if (content !== ref.current?.innerHTML) {
      setText(content);
    }
  }, [content]);

  useEffect(() => {
    checkPlaceholderVisibility();
  }, [content, text]);

  return (
    <div style={{ position: 'relative' }}>
      {showAutoSuggestions && (
        <AutoSuggestionsDropdown
          autoSuggestionsCoordinates={autoSuggestionsCoordinates}
          onSuggestionsSelect={onSuggestionsSelect}
          variableQuery={variableQuery}
          selectedIndex={selectedIndex}
          variablesList={variablesList}
        />
      )}
      <Controller
        name={`${stepFormPath}.template.content.${blockIndex}.content`}
        defaultValue=""
        control={methods.control}
        render={({ field }) => {
          return (
            <div
              ref={ref}
              data-test-id="editable-text-content"
              role="textbox"
              dangerouslySetInnerHTML={{
                __html: text,
              }}
              contentEditable={!readonly}
              suppressContentEditableWarning
              onKeyUp={(e: any) => {
                const html = e.target.innerHTML;
                field.onChange(html);
                checkPlaceholderVisibility(html);
                if (showAutoSuggestions) {
                  const variableTyped = diffStrings(contentSnapshot, html);
                  setVariableQuery(variableTyped);
                }
              }}
              onKeyDown={getHotkeyHandler([
                ['shift+{', () => setIsAutoSuggestionTrigger(true), { preventDefault: false }],
                [
                  'shift+}',
                  () => {
                    if (showAutoSuggestions) {
                      resetAutoSuggestions();
                    }
                  },
                  { preventDefault: false },
                ],
                [
                  'ArrowLeft',
                  () => {
                    if (showAutoSuggestions) {
                      resetAutoSuggestions();
                    }
                  },
                  { preventDefault: false },
                ],
                [
                  'ArrowRight',
                  () => {
                    if (showAutoSuggestions) {
                      resetAutoSuggestions();
                    }
                  },
                  { preventDefault: false },
                ],
                [
                  'Escape',
                  (e) => {
                    e.stopPropagation();
                    if (showAutoSuggestions) {
                      resetAutoSuggestions();
                    }
                  },
                ],
                [
                  'ArrowUp',
                  (e) => {
                    if (showAutoSuggestions) {
                      e.stopPropagation();
                      setSelectedIndex((prevIndex) => Math.max(prevIndex - 1, 0));
                    }
                  },
                  { preventDefault: showAutoSuggestions },
                ],
                [
                  'ArrowDown',
                  (e) => {
                    if (showAutoSuggestions) {
                      e.stopPropagation();
                      setSelectedIndex((prevIndex) => Math.min(prevIndex + 1, variablesList.length - 1));
                    }
                  },
                  {
                    preventDefault: showAutoSuggestions,
                  },
                ],
                [
                  'Enter',
                  () => {
                    if (showAutoSuggestions) {
                      onSuggestionsSelect(variablesList[selectedIndex].insertText);
                    }
                  },
                  {
                    preventDefault: showAutoSuggestions,
                  },
                ],
              ])}
              style={{
                outline: 'none',
                width: '100%',
                backgroundColor: 'transparent',
                textAlign: textAlign || TextAlignEnum.LEFT,
              }}
              onClick={() => {
                if (showAutoSuggestions) {
                  resetAutoSuggestions();
                }
              }}
            />
          );
        }}
      />
      <PlaceHolder color={colors.B60} show={visiblePlaceholder}>
        Type the email content here...
      </PlaceHolder>
    </div>
  );
}

const PlaceHolder = styled.div<{ show: boolean; color: string }>`
  position: absolute;
  color: ${({ color }) => color};
  z-index: 1;
  top: 0px;
  pointer-events: none;
  display: ${({ show }) => (show ? 'block' : 'none')};
`;

function diffStrings(a: string, b: string) {
  let pointer1 = 0;
  let pointer2 = 0;
  let diff = '';

  while (pointer1 < a.length && pointer2 < b.length) {
    if (a[pointer1] !== b[pointer2]) {
      diff += b[pointer2];
      pointer2 += 1;
    } else {
      pointer1 += 1;
      pointer2 += 1;
    }
  }

  // If string b is longer than string a, append the remaining characters to diff
  if (pointer2 < b.length) {
    diff += b.slice(pointer2);
  }

  return diff;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { useEffect, useMemo, useRef, useState } from 'react';
import { Controller, useFormContext } from 'react-hook-form';
import { getHotkeyHandler } from '@mantine/hooks';
import { TextAlignEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/variables-management/VarItem.tsx
Tamaño: 892 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMantineTheme, Highlight } from '@mantine/core';
import { colors } from '@novu/design-system';

export const VarItem = ({
  name,
  type,
  children = null,
  highlight = '',
}: {
  name: string;
  type: string;
  children?: React.ReactNode;
  highlight?: string;
}) => {
  const theme = useMantineTheme();

  return (
    <div
      data-test-id={`var-item-${name}-${type}`}
      style={{
        marginBottom: 10,
        padding: 8,
        color: colors.B60,
        width: '100%',
      }}
    >
      <Highlight span inline highlight={highlight}>
        {name}
      </Highlight>

      <pre
        style={{
          display: 'inline',
          marginLeft: 5,
          background: theme.colorScheme === 'dark' ? colors.B15 : colors.B98,
          padding: 5,
          borderRadius: 8,
        }}
      >
        {type}
      </pre>
      {children}
    </div>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMantineTheme, Highlight } from '@mantine/core';
import { colors } from '@novu/design-system';
export const VarItem = ({
name,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/variables-management/VarItemTooltip.tsx
Tamaño: 1230 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { ActionIcon, Tooltip } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';

import { Check, Copy } from '@novu/design-system';
import { VarItem } from './VarItem';

export const VarItemTooltip = ({
  pathToCopy,
  name,
  type,
  highlight,
}: {
  pathToCopy: string;
  name: string;
  type: string;
  highlight?: string;
}) => {
  const [isHovered, setIsHovered] = useState(false);
  const { copy, copied } = useClipboard({ timeout: 1000 });

  return (
    <Tooltip data-test-id={`var-item-${name}-${type}`} label={copied ? 'Copied!' : 'Copy key'}>
      <ActionIcon
        variant="transparent"
        onMouseOver={() => setIsHovered(true)}
        onMouseLeave={() => setIsHovered(false)}
        onClick={() => copy(pathToCopy)}
        sx={{ width: '100%', height: 'unset', minWidth: 'unset', minHeight: 'unset', lineHeight: '1.15' }}
      >
        <VarItem name={name} type={type} highlight={highlight}>
          <span style={{ position: 'absolute', right: '2%', bottom: copied ? '40%' : '20%' }}>
            {isHovered && !copied && <Copy />}
            {copied && <Check />}
          </span>
        </VarItem>
      </ActionIcon>
    </Tooltip>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { ActionIcon, Tooltip } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';
import { Check, Copy } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/variables-management/VarItemsDropdown.tsx
Tamaño: 2617 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { Collapse, UnstyledButton, Center, Highlight } from '@mantine/core';
import { ChevronUp, ChevronDown, colors, Folder } from '@novu/design-system';
import { VarItem } from './VarItem';
import { VarItemTooltip } from './VarItemTooltip';

export const VarItemsDropdown = ({ name, type, highlight, withFolders = false, path = '' }) => {
  const [open, setOpen] = useState(false);

  return (
    <>
      <UnstyledButton
        data-test-id={`var-items-${name}`}
        onClick={() => {
          setOpen(!open);
        }}
        type="button"
        sx={{
          width: '100%',
        }}
      >
        {withFolders ? (
          <div
            style={{
              color: colors.B60,
              marginBottom: 10,
              padding: 8,
              width: '100%',
            }}
          >
            <Center inline>
              <Folder style={{ marginRight: '8px' }} />
              <Highlight span inline highlight={highlight}>
                {name}
              </Highlight>
            </Center>
            <span
              style={{
                float: 'right',
              }}
            >
              {open ? <ChevronUp /> : <ChevronDown />}
            </span>
          </div>
        ) : (
          <VarItem highlight={highlight} name={name} type="object">
            <span
              style={{
                float: 'right',
              }}
            >
              {open ? <ChevronUp /> : <ChevronDown />}
            </span>
          </VarItem>
        )}
      </UnstyledButton>
      <Collapse in={open}>
        <div
          style={{
            marginBottom: 10,
            paddingLeft: 8,
          }}
        >
          {Object.keys(type).map((key, index) => {
            let varType = type?.[key];

            if (varType !== null && !['boolean', 'string', 'number', 'object', 'array'].includes(varType)) {
              varType = typeof varType;
            }
            if (varType === 'object') {
              return (
                <VarItemsDropdown
                  path={`${name}.${key}`}
                  highlight={highlight}
                  key={index}
                  name={key}
                  type={type?.[key]}
                />
              );
            }

            return (
              <VarItemTooltip
                highlight={highlight}
                pathToCopy={`${path}.${key}`}
                name={key}
                type={varType}
                key={index}
              />
            );
          })}
        </div>
      </Collapse>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { Collapse, UnstyledButton, Center, Highlight } from '@mantine/core';
import { ChevronUp, ChevronDown, colors, Folder } from '@novu/design-system';
import { VarItem } from './VarItem';
import { VarItemTooltip } from './VarItemTooltip';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/variables-management/VarLabel.tsx
Tamaño: 1112 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { colors, ChevronUp, ChevronDown } from '@novu/design-system';
import { Collapse, UnstyledButton, Center } from '@mantine/core';

export const VarLabel = ({ label, children, Icon }) => {
  const [open, setOpen] = useState(false);

  return (
    <>
      <UnstyledButton
        data-test-id="var-label"
        onClick={() => {
          setOpen(!open);
        }}
        type="button"
        sx={{
          width: '100%',
          marginBottom: 15,
          marginTop: 20,
        }}
      >
        <div
          style={{
            color: colors.B60,
            fontSize: 14,
            fontWeight: 'bold',
          }}
        >
          <Center inline>
            <Icon width={16} height={16} color={colors.B60} style={{ marginRight: '8px' }} />
            {label}
          </Center>
          <span
            style={{
              float: 'right',
            }}
          >
            {open ? <ChevronUp /> : <ChevronDown />}
          </span>
        </div>
      </UnstyledButton>
      <Collapse in={open}>{children}</Collapse>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { colors, ChevronUp, ChevronDown } from '@novu/design-system';
import { Collapse, UnstyledButton, Center } from '@mantine/core';
export const VarLabel = ({ label, children, Icon }) => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/email-editor/variables-management/VariablesManagement.tsx
Tamaño: 8887 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useWatch } from 'react-hook-form';
import { useNavigate } from 'react-router-dom';
import React, { useEffect, useState } from 'react';
import set from 'lodash.set';
import styled from '@emotion/styled';
import { Group, useMantineColorScheme } from '@mantine/core';

import {
  Translation,
  colors,
  NovuIcon,
  Search,
  Input,
  Workflow,
  shadows,
  EmptySearch,
  ActionButton,
  PencilOutlined,
  Close,
  Text,
} from '@novu/design-system';

import { VarItemsDropdown } from './VarItemsDropdown';
import { VarLabel } from './VarLabel';
import { useDebounce, useProcessVariables } from '../../../../../hooks';
import { VarItemTooltip } from './VarItemTooltip';
import { When } from '../../../../../components/utils/When';
import { useWorkflowVariables } from '../../../../../api/hooks';

import { ROUTES } from '../../../../../constants/routes';
import { UpgradePlanBanner } from '../../../../../components/layout/components/UpgradePlanBanner';

interface IVariablesList {
  translations: Record<string, any>;
  step: Record<string, any>;
  system: Record<string, any>;
}

function searchByKey(object, searchString) {
  const varsObj: Record<string, any> = {};

  Object.keys(object).forEach((key) => {
    if (key.toLowerCase().includes(searchString.toLowerCase())) {
      set(varsObj, key, object[key]);
    }
  });

  return varsObj;
}

function flattenObject(obj, parentKey = '') {
  return Object.keys(obj).reduce((prev, key) => {
    const newKey = parentKey ? `${parentKey}.${key}` : key;

    if (typeof obj[key] === 'object' && obj[key] !== null) {
      Object.assign(prev, flattenObject(obj[key], newKey));
    } else {
      prev[newKey] = obj[key];
    }

    return prev;
  }, {});
}

const searchVariables = (list, search: string) => {
  const flatten = flattenObject(list);

  return searchByKey(flatten, search);
};

export const VariablesManagement = ({
  openVariablesModal,
  closeVariablesManagement,
  control,
  path,
  isPopover = false,
  bridge = false,
}: {
  openVariablesModal?: () => void;
  closeVariablesManagement?: () => void;
  control?: any;
  path: string;
  isPopover?: boolean;
  bridge?: boolean;
}) => {
  const variableArray = useWatch({
    name: path,
    control,
  });
  const { colorScheme } = useMantineColorScheme();

  const { variables } = useWorkflowVariables();
  const processedVariables = useProcessVariables(variableArray, false);
  const [variablesList, setVariablesList] = useState<IVariablesList>({
    ...variables,
    step: processedVariables,
  });

  const [searchVal, setSearchVal] = useState('');

  const debouncedSearchChange = useDebounce((args: { search: string; list: IVariablesList }) => {
    const { search, list } = args;
    const { system, translations, step } = list;
    setSearchVal(search);
    setVariablesList({
      system: searchVariables(system, search),
      translations: searchVariables(translations, search),
      step: searchVariables(step, search),
    });
  }, 500);

  useEffect(() => {
    if (variables) {
      setVariablesList({ ...variables, step: processedVariables });
    }
  }, [variables, processedVariables, setVariablesList]);

  const emptyVariablesList = Object.values(variablesList).every((list) => Object.keys(list).length === 0);

  const handleSearchVariable = (e) => {
    debouncedSearchChange({ search: e.target.value, list: { ...variables, step: processedVariables } });
  };

  return (
    <VariablesContainer isPopover={isPopover}>
      <When truthy={openVariablesModal !== undefined && !bridge}>
        <Group
          px={16}
          h={40}
          noWrap
          spacing={20}
          position={'right'}
          style={{
            borderRadius: '8px 8px 0px 0px',
            backgroundColor: colorScheme === 'dark' ? colors.B15 : colors.BGLight,
          }}
        >
          <ActionButton
            onClick={() => {
              if (openVariablesModal) {
                openVariablesModal();
              }
            }}
            Icon={PencilOutlined}
            data-test-id="open-edit-variables-btn"
            tooltip={'Add defaults or mark as required'}
          />
          <When truthy={closeVariablesManagement}>
            <ActionButton
              onClick={closeVariablesManagement}
              sx={{
                '> svg': {
                  width: 14,
                  height: 14,
                },
              }}
              Icon={Close}
            />
          </When>
        </Group>
      </When>
      <div style={{ padding: '12px' }}>
        <Input
          type={'search'}
          onChange={handleSearchVariable}
          mb={20}
          placeholder={'Search variables...'}
          rightSection={<Search />}
        />
        <When truthy={emptyVariablesList}>
          <EmptySearchContainer>
            <EmptySearch style={{ maxWidth: 200, marginBottom: 15 }} />
            <span style={{ color: colors.B40, fontSize: 16, fontWeight: 600, lineHeight: '20px' }}>
              No matches found
            </span>
            <span style={{ color: colors.B40, fontSize: 14, fontWeight: 400, lineHeight: '20px' }}>
              Try being less specific or using different keywords.
            </span>
          </EmptySearchContainer>
        </When>
        <When truthy={!emptyVariablesList}>
          <VariablesSection variablesList={variablesList} searchVal={searchVal} />
        </When>
      </div>
    </VariablesContainer>
  );
};

const VariablesSection = ({ variablesList, searchVal }: { variablesList: IVariablesList; searchVal: string }) => {
  const { translations, system, step } = variablesList;

  return (
    <>
      <VariableSectionItem variableList={system} search={searchVal} sectionName="System Variables" Icon={NovuIcon} />
      <VariableSectionItem variableList={step} search={searchVal} sectionName="Step Variables" Icon={Workflow} />
      <TranslationSectionItem variableList={translations} search={searchVal} />
    </>
  );
};

export const VariableSectionItem = ({
  variableList,
  search,
  sectionName,
  Icon,
  withFolders = false,
}: {
  variableList: Record<string, any>;
  search: string;
  sectionName: string;
  Icon: React.FC<any>;
  withFolders?: boolean;
}) => {
  const keys = variableList && Object.keys(variableList);

  return (
    <>
      <When truthy={keys?.length}>
        <VarLabel label={sectionName} Icon={Icon}>
          {keys?.map((name, ind) => {
            if (typeof variableList[name] === 'object') {
              return (
                <VarItemsDropdown
                  withFolders={withFolders}
                  path={name}
                  highlight={search}
                  key={ind}
                  name={name}
                  type={variableList[name]}
                />
              );
            }

            return (
              <VarItemTooltip
                highlight={search}
                pathToCopy={name}
                name={name}
                type={typeof variableList[name]}
                key={ind}
              />
            );
          })}
        </VarLabel>
      </When>
    </>
  );
};
const TranslationsGetStartedText = () => {
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';
  const navigate = useNavigate();

  return (
    <Text color={isDark ? colors.B60 : colors.B40}>
      <GradientSpan>
        <a
          onClick={() => {
            navigate(ROUTES.TRANSLATIONS);
          }}
        >
          Upload translations{' '}
        </a>
      </GradientSpan>
      <span>to use them as variables or in the autosuggest for the editor.</span>
    </Text>
  );
};

export const TranslationSectionItem = ({
  variableList,
  search,
}: {
  variableList: Record<string, any>;
  search: string;
}) => {
  const sectionName = 'Translation Variables';
  const keys = variableList && Object.keys(variableList);

  return (
    <>
      <VariableSectionItem
        withFolders
        variableList={variableList}
        search={search}
        sectionName={sectionName}
        Icon={Translation}
      />
      <When truthy={!keys?.length && !search.length}>
        <VarLabel label={sectionName} Icon={Translation}>
          <UpgradePlanBanner FeatureActivatedBanner={TranslationsGetStartedText} />
        </VarLabel>
      </When>
    </>
  );
};

const VariablesContainer = styled.div<{ isPopover: boolean }>`
  width: 100%;
  height: 100%;
  border-radius: 8px;
  box-shadow: ${({ isPopover }) => (isPopover ? 'none' : shadows.dark)};
`;

const EmptySearchContainer = styled.div`
  text-align: center;
  flex-direction: column;
  min-height: 350px;
  display: flex;
  align-items: center;
  justify-content: center;
`;

const GradientSpan = styled.span`
  background: ${colors.horizontal};
  background-clip: text;
  text-fill-color: transparent;

  &:hover {
    cursor: pointer;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useWatch } from 'react-hook-form';
import { useNavigate } from 'react-router-dom';
import React, { useEffect, useState } from 'react';
import set from 'lodash.set';
import styled from '@emotion/styled';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/in-app-editor/AvatarFeedFields.tsx
Tamaño: 4523 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useInputState } from '@mantine/hooks';
import { ActionIcon, Divider } from '@mantine/core';
import { Controller, useFormContext } from 'react-hook-form';
import { useEffect, useState } from 'react';
import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';
import { showNotification } from '@mantine/notifications';
import type { IResponseError, IFeedEntity } from '@novu/shared';

import { Checkbox, colors, Input, PlusGradient } from '@novu/design-system';
import { useEnvironment } from '../../../../hooks';
import { createFeed, getFeeds } from '../../../../api/feeds';
import { QueryKeys } from '../../../../api/query.keys';
import { FeedItems } from './FeedItems';
import { EnableAvatarSwitch } from './EnableAvatarSwitch';
import type { IForm } from '../formTypes';
import { useStepFormPath } from '../../hooks/useStepFormPath';

export const AvatarFeedFields = () => {
  const queryClient = useQueryClient();
  const { readonly } = useEnvironment();
  const [newFeed, setNewFeed] = useInputState('');
  const { control, setValue, getValues } = useFormContext<IForm>();
  const path = useStepFormPath();

  const { data: feeds } = useQuery([QueryKeys.getFeeds], getFeeds);
  const { mutateAsync: createNewFeed } = useMutation<IFeedEntity, IResponseError, { name: string }>(createFeed, {
    onSuccess: (data) => {
      queryClient.setQueryData([QueryKeys.getFeeds], [...feeds, data]);
    },
  });

  const [showFeed, setShowFeed] = useState(true);

  useEffect(() => {
    const feed = getValues(`${path}.template.feedId`);
    if (feeds?.length && !feed) {
      setTimeout(() => {
        setValue(`${path}.template.feedId`, '');
      }, 0);
      setShowFeed(false);
    }
  }, [getValues, setValue, path, feeds]);

  async function addNewFeed() {
    if (newFeed) {
      const exists = feeds.filter((feed) => feed.name === newFeed);
      if (exists.length) {
        showNotification({
          message: 'You already have a feed with this name! ',
          color: 'red',
        });

        return;
      }
      const response = await createNewFeed({
        name: newFeed,
      });

      setNewFeed('');

      setTimeout(() => {
        setValue(`${path}.template.feedId`, response._id, { shouldDirty: true });
      }, 0);
      setShowFeed(true);
    }
  }

  return (
    <>
      <EnableAvatarSwitch name={`${path}.template.enableAvatar`} control={control} readonly={readonly} />
      <Divider sx={{ borderTopColor: colors.B40 }} mb={20} />
      <Controller
        name={`${path}.template.feedId` as any}
        defaultValue=""
        control={control}
        render={({ field }) => {
          return (
            <>
              <div
                style={{
                  position: 'relative',
                }}
              >
                <Checkbox
                  data-test-id={`use-feeds-checkbox`}
                  checked={showFeed}
                  disabled={readonly}
                  onChange={() => {
                    setShowFeed(!showFeed);
                    if (showFeed) {
                      setValue(`${path}.template.feedId`, '', { shouldDirty: true });
                    }
                  }}
                  sx={{
                    position: 'absolute',
                    flexDirection: 'row-reverse',
                    right: '0px',
                  }}
                  styles={{
                    label: {
                      marginRight: '10px',
                    },
                  }}
                  label="Use Feeds"
                  labelPosition="left"
                />
                <Input
                  data-test-id={`create-feed-input`}
                  disabled={!showFeed || readonly}
                  label="Add New Feed (optional)"
                  placeholder="Name your feed..."
                  value={newFeed}
                  onChange={setNewFeed}
                  description={
                    'Feeds can be used to display specific notifications in multiple tabs or sections when fetching in-app notifications'
                  }
                  rightSection={
                    <ActionIcon data-test-id={`add-feed-button`} variant="transparent" onClick={addNewFeed}>
                      <PlusGradient />
                    </ActionIcon>
                  }
                />
              </div>
              <FeedItems field={field} showFeed={showFeed} setValue={setValue} />
            </>
          );
        }}
      />
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useInputState } from '@mantine/hooks';
import { ActionIcon, Divider } from '@mantine/core';
import { Controller, useFormContext } from 'react-hook-form';
import { useEffect, useState } from 'react';
import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/in-app-editor/ButtonsTemplates.tsx
Tamaño: 3202 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ButtonTypeEnum, IMessageButton, darkButtonStyle, lightButtonStyle } from '@novu/shared';
import styled from '@emotion/styled';
import { Divider, useMantineTheme } from '@mantine/core';
import { Button } from '@novu/design-system';

interface IButtonsTemplatesProps {
  setTemplateSelected: (boolean) => void;
  setIsPopoverVisible: (boolean) => void;
  setSelectedTemplate: (any) => void;
}

export function ButtonsTemplates(props: IButtonsTemplatesProps) {
  const templates: IButtonTemplates = {
    templates: [
      [{ type: ButtonTypeEnum.PRIMARY, content: 'Primary' }],
      [{ type: ButtonTypeEnum.SECONDARY, content: 'Secondary' }],
      [
        { type: ButtonTypeEnum.PRIMARY, content: 'Primary' },
        { type: ButtonTypeEnum.SECONDARY, content: 'Secondary' },
      ],
    ],
  };

  function handleOnTemplateClick(index: number) {
    props.setTemplateSelected(true);
    props.setSelectedTemplate(templates.templates[index]);
    props.setIsPopoverVisible(false);
  }

  return (
    <>
      <TemplatesContainer>
        {templates.templates.map((template: IMessageButton[], templatesIndex) => {
          return (
            <div key={templatesIndex}>
              <TemplateContainerWrap>
                <TemplateContainer
                  data-test-id={'template-container-click-area'}
                  onClick={() => handleOnTemplateClick(templatesIndex)}
                  key={templatesIndex}
                >
                  {template.map((button: IMessageButton, buttonIndex: number) => {
                    return <TemplateButton key={templatesIndex + buttonIndex} button={button} />;
                  })}
                </TemplateContainer>
              </TemplateContainerWrap>

              {templates.templates.length > templatesIndex + 1 ? (
                <Divider style={{ margin: '15px 0' }} my="sm" />
              ) : null}
            </div>
          );
        })}
      </TemplatesContainer>
    </>
  );
}

const TemplateContainerWrap = styled.div`
  margin-left: 10px;
  margin-right: 10px;
`;

const TemplatesContainer = styled.div`
  width: 300px;
  padding: 15px;
`;

const TemplateContainer = styled.div`
  display: flex;
  justify-content: space-between;
  cursor: pointer;
  max-height: 50px;
  margin-left: -15px;
  margin-right: -15px;
`;

interface IButtonTemplates {
  templates: IMessageButton[][];
}

interface ITemplateButton {
  button: IMessageButton;
  buttonIndex?: number;
}

export function TemplateButton(props: ITemplateButton) {
  const dark = useMantineTheme().colorScheme === 'dark';
  const buttonStyles = (dark ? darkButtonStyle : lightButtonStyle)[props.button.type];

  const buttonText = props.button?.content ? props.button?.content : '';

  return (
    <ActionButton background={buttonStyles.backGroundColor} color={buttonStyles.fontColor} fullWidth>
      {buttonText}
    </ActionButton>
  );
}

const ActionButton = styled(Button)<{ background: string; color: string }>`
  height: 30px;
  font-size: 12px;
  background: ${({ background }) => background};
  color: ${({ color }) => color};
  box-shadow: none;
  display: flex;
  justify-content: center;
  margin-left: 5px;
  margin-right: 5px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ButtonTypeEnum, IMessageButton, darkButtonStyle, lightButtonStyle } from '@novu/shared';
import styled from '@emotion/styled';
import { Divider, useMantineTheme } from '@mantine/core';
import { Button } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/in-app-editor/ButtonsTemplatesPopover.tsx
Tamaño: 1843 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Popover, createStyles } from '@mantine/core';
import { IMessageButton, MessageActionStatusEnum } from '@novu/shared';

import { colors } from '@novu/design-system';
import { ButtonsTemplates } from './ButtonsTemplates';

const usePopoverStyles = createStyles(({ colorScheme }) => ({
  dropdown: {
    margin: 0,
    padding: 0,
    backgroundColor: colorScheme === 'dark' ? colors.B20 : colors.white,
    color: colorScheme === 'dark' ? colors.white : colors.B40,
    border: 'none',
    marginTop: '1px',
    width: '100%',
  },
  arrow: {
    backgroundColor: colorScheme === 'dark' ? colors.B20 : colors.white,
    height: '-22px',
    border: 'none',
    margin: '0px',
  },
}));

interface IButtonsTemplatesPopoverProps {
  isVisible: boolean;
  setIsPopoverVisible: (boolean) => void;
  setTemplateSelected: (boolean) => void;
  children: JSX.Element;
  onChange: (data: any) => void;
}

export function ButtonsTemplatesPopover({
  children,
  isVisible,
  setIsPopoverVisible,
  setTemplateSelected,
  onChange,
}: IButtonsTemplatesPopoverProps) {
  const { classes } = usePopoverStyles();

  function handleOnButtonChange(buttons: IMessageButton[]) {
    if (buttons) {
      const newAction = { buttons, status: MessageActionStatusEnum.PENDING };
      onChange(newAction);
    }
  }

  return (
    <Popover
      opened={isVisible}
      onClose={() => setIsPopoverVisible(false)}
      position={'bottom'}
      withArrow
      classNames={classes}
      middlewares={{ flip: false, shift: false }}
    >
      <Popover.Target>{children}</Popover.Target>
      <Popover.Dropdown>
        <ButtonsTemplates
          setTemplateSelected={setTemplateSelected}
          setIsPopoverVisible={setIsPopoverVisible}
          setSelectedTemplate={handleOnButtonChange}
        />
      </Popover.Dropdown>
    </Popover>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Popover, createStyles } from '@mantine/core';
import { IMessageButton, MessageActionStatusEnum } from '@novu/shared';
import { colors } from '@novu/design-system';
import { ButtonsTemplates } from './ButtonsTemplates';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/in-app-editor/EnableAvatarSwitch.tsx
Tamaño: 758 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import { Control, useController } from 'react-hook-form';

import { Text, Switch } from '@novu/design-system';
import type { IForm } from '../formTypes';

export function EnableAvatarSwitch({
  name,
  control,
  readonly,
}: {
  name: string;
  control: Control<IForm>;
  readonly: boolean;
}) {
  const {
    field: { onChange, value },
  } = useController({
    name: name as any,
    control,
    defaultValue: false,
  });

  return (
    <Group position="apart" mb={20} mt={20}>
      <Text weight="bold">Add an Avatar</Text>
      <div data-test-id={`enable-add-avatar`}>
        <Switch data-test-id={`enabled-avatar`} checked={value} onChange={onChange} disabled={readonly} />
      </div>
    </Group>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import { Control, useController } from 'react-hook-form';
import { Text, Switch } from '@novu/design-system';
import type { IForm } from '../formTypes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/in-app-editor/FeedChip.tsx
Tamaño: 2595 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { ColorScheme, useMantineTheme } from '@mantine/core';
import { IFeedEntity } from '@novu/shared';
import type { UseFormSetValue } from 'react-hook-form';

import { colors, shadows, DotsHorizontal } from '@novu/design-system';
import { useEnvironment } from '../../../../hooks';
import { useStepFormPath } from '../../hooks/useStepFormPath';
import type { IForm } from '../formTypes';

interface IFeedItemProps {
  showFeed: boolean;
  setOpened: (hover: boolean) => void;
  item: IFeedEntity;
  feedIndex: number;
  onEditClick: () => void;
  field: any;
  setValue: UseFormSetValue<IForm>;
}

export function FeedChip(props: IFeedItemProps) {
  const { colorScheme } = useMantineTheme();
  const { readonly } = useEnvironment();
  const path = useStepFormPath();

  const selectedItem = props.field.value === props.item._id;

  return (
    <Wrapper
      selectedItem={selectedItem}
      showFeed={props.showFeed}
      colorScheme={colorScheme}
      readonly={readonly}
      data-test-id={`feed-button-${props.feedIndex}${selectedItem ? '-checked' : ''}`}
      onClick={() => {
        props.setValue(`${path}.template.feedId`, props?.item?._id || '', { shouldDirty: true });
      }}
    >
      <div>{props.item?.name}</div>
      <DotsHorizontal
        onClick={(e) => {
          if (props.showFeed) {
            e.stopPropagation();
            props.onEditClick();
          }
        }}
        style={{
          color: colorScheme === 'dark' ? colors.white : colors.B80,
          cursor: `${props.showFeed ? 'pointer' : 'default'}`,
        }}
      />
    </Wrapper>
  );
}

const Wrapper = styled.div<{ colorScheme: ColorScheme; showFeed: boolean; selectedItem: boolean; readonly: boolean }>`
  ${({ showFeed, readonly }) =>
    (!showFeed || readonly) &&
    `
    pointer-events: none;
    opacity: 0.4;  
  `}

  padding: 0 15px;
  display: flex;
  align-items: center;
  width: 100%;
  height: 45px;
  border-radius: 7px;
  cursor: default;
  justify-content: space-between;
  box-shadow: ${({ colorScheme }) => (colorScheme === 'dark' ? shadows.dark : shadows.medium)};
  background: ${({ colorScheme }) => (colorScheme === 'dark' ? colors.B17 : colors.white)};

  ${({ selectedItem, colorScheme }) =>
    selectedItem &&
    `
     background: ${
       colorScheme === 'dark'
         ? `linear-gradient(0deg, ${colors.B20} 0%, ${colors.B20} 100%)`
         : `linear-gradient(0deg, ${colors.white} 0%, ${colors.white} 100%)`
     } padding-box,
    ${colors.horizontal} border-box`};
  border: 1px solid transparent;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { ColorScheme, useMantineTheme } from '@mantine/core';
import { IFeedEntity } from '@novu/shared';
import type { UseFormSetValue } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/in-app-editor/FeedItems.tsx
Tamaño: 6389 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { Popover, useMantineTheme, Grid, ColorScheme, createStyles } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';
import styled from '@emotion/styled';
import { captureException } from '@sentry/react';
import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';
import { showNotification } from '@mantine/notifications';
import type { UseFormSetValue } from 'react-hook-form';
import type { IResponseError, IFeedEntity } from '@novu/shared';

import { colors, shadows, Text, Tooltip, Button, Copy, Trash } from '@novu/design-system';
import { FeedChip } from './FeedChip';
import { deleteFeed, getFeeds } from '../../../../api/feeds';
import { QueryKeys } from '../../../../api/query.keys';
import type { IForm } from '../formTypes';

interface IFeedItemPopoverProps {
  showFeed: boolean;
  setValue: UseFormSetValue<IForm>;
  field: any;
}

export function FeedItems(props: IFeedItemPopoverProps) {
  const { data: feeds } = useQuery<IFeedEntity[]>([QueryKeys.getFeeds], getFeeds);

  return (
    <FeedsBlock>
      <Grid gutter={'xs'} grow>
        {(feeds || []).map((item, feedIndex) => {
          return (
            <Grid.Col span={4} key={item._id} sx={{ position: 'relative' }}>
              <FeedPopover
                field={props.field}
                item={item}
                feedIndex={feedIndex}
                showFeed={props.showFeed}
                setValue={props.setValue}
              />
            </Grid.Col>
          );
        })}
      </Grid>
    </FeedsBlock>
  );
}

const usePopoverStyles = createStyles(({ colorScheme }) => ({
  dropdown: {
    width: '170px',
    height: '95px',
    margin: 0,
    padding: 0,
    backgroundColor: colorScheme === 'dark' ? colors.B20 : colors.white,
    color: colorScheme === 'dark' ? colors.white : colors.B40,
    border: 'none',
    marginTop: '1px',
  },
  arrow: {
    backgroundColor: colorScheme === 'dark' ? colors.B20 : colors.white,
    height: '-22px',
    border: 'none',
    margin: '0px',
    top: '-3px',
  },
}));

function FeedPopover(props: IFeedPopoverProps) {
  const [opened, setOpened] = useState(false);
  const { classes } = usePopoverStyles();

  return (
    <Popover opened={opened} onClose={() => setOpened(false)} position="bottom" withArrow classNames={classes}>
      <Popover.Target>
        <span>
          <FeedChip
            item={props.item}
            feedIndex={props.feedIndex}
            setOpened={setOpened}
            showFeed={props.showFeed}
            field={props.field}
            setValue={props.setValue}
            onEditClick={() => {
              setOpened((prevCheck) => !prevCheck);
            }}
          />
        </span>
      </Popover.Target>
      <Popover.Dropdown>
        <PopoverActionBlock setOpened={setOpened} showFeed={props.showFeed} feedItem={props.item} />
      </Popover.Dropdown>
    </Popover>
  );
}

function PopoverActionBlock({
  setOpened,
  showFeed,
  feedItem,
}: {
  setOpened: (boolean) => void;
  showFeed: boolean;
  feedItem?: IFeedEntity;
}) {
  const { colorScheme } = useMantineTheme();

  return (
    <ActionBlockWrapper colorScheme={colorScheme} onMouseLeave={() => setOpened(false)}>
      <CopyBlock showFeed={showFeed} feedItem={feedItem} />
      <DeleteBlock setOpened={setOpened} showFeed={showFeed} feedItem={feedItem} />
    </ActionBlockWrapper>
  );
}

function CopyBlock({ showFeed, feedItem }: { showFeed: boolean; feedItem?: IFeedEntity }) {
  const [opened, setOpened] = useState(false);

  const { colorScheme } = useMantineTheme();
  const clipboardIdentifier = useClipboard({ timeout: 1000 });

  function handleOnclick() {
    clipboardIdentifier.copy(feedItem?.identifier);
    setOpened(true);
    setTimeout(() => {
      setOpened(false);
    }, 1000);
  }

  return (
    <Row colorScheme={colorScheme} disabled={!showFeed} onClick={handleOnclick}>
      <Tooltip label={'Copied!'} opened={opened}>
        <Copy
          style={{
            color: colorScheme === 'dark' ? colors.white : colors.B80,
            width: '25px',
            height: '25px',
            marginRight: '13px',
          }}
        />
      </Tooltip>
      <Text>Copy ID</Text>
    </Row>
  );
}

function DeleteBlock({
  setOpened,
  showFeed,
  feedItem,
}: {
  setOpened: (boolean) => void;
  showFeed: boolean;
  feedItem?: IFeedEntity;
}) {
  const { colorScheme } = useMantineTheme();
  const queryClient = useQueryClient();

  const { mutateAsync: deleteFeedById } = useMutation<IFeedEntity[], IResponseError, string>(
    (feedId) => deleteFeed(feedId),
    {
      onSuccess: (data) => {
        queryClient.refetchQueries([QueryKeys.getFeeds]);
      },
    }
  );

  async function deleteFeedHandler(feedId: string) {
    try {
      await deleteFeedById(feedId);
      setOpened(false);
      showNotification({
        message: 'Feed deleted successfully',
        color: 'green',
      });
    } catch (e: any) {
      captureException(e);

      showNotification({
        message: e.message || 'Un-expected error occurred',
        color: 'red',
      });
    }
  }

  return (
    <Row colorScheme={colorScheme} disabled={!showFeed} onClick={() => deleteFeedHandler(feedItem?._id || '')}>
      <Trash
        style={{
          color: colorScheme === 'dark' ? colors.white : colors.B80,
          margin: '5px 13px 5px 5px',
        }}
      />
      <Text>Delete Feed</Text>
    </Row>
  );
}

const ActionBlockWrapper = styled.div<{ colorScheme: ColorScheme }>`
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-around;

  border-radius: 7px;
  box-shadow: ${({ colorScheme }) => (colorScheme === 'dark' ? shadows.dark : shadows.medium)};
`;

const Row = styled(Button)<{ colorScheme: ColorScheme }>`
  display: flex;
  justify-content: start;
  align-items: center;
  z-index: 2;
  margin-right: 5px;
  margin-left: 5px;

  background: ${({ colorScheme }) => (colorScheme === 'dark' ? colors.B20 : colors.white)};

  box-shadow: none;
  :hover {
    background: ${({ colorScheme }) => (colorScheme === 'dark' ? colors.B30 : colors.B98)};
  }
`;

const FeedsBlock = styled.div`
  margin-bottom: 20px;
`;

interface IFeedPopoverProps {
  setValue: UseFormSetValue<IForm>;
  showFeed: boolean;
  feedIndex: number;
  item: IFeedEntity;
  field: any;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { Popover, useMantineTheme, Grid, ColorScheme, createStyles } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';
import styled from '@emotion/styled';
import { captureException } from '@sentry/react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/in-app-editor/InAppContentCard.tsx
Tamaño: 3240 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Grid, SegmentedControl, useMantineTheme } from '@mantine/core';
import { colors, When } from '@novu/design-system';
import { useState } from 'react';

import { InAppPreview } from '../../../../components/workflow/preview';
import { useEnvironment } from '../../../../hooks';
import { useStepFormPath } from '../../hooks/useStepFormPath';
import { VariablesManagement } from '../email-editor/variables-management/VariablesManagement';
import { ControlVariablesForm } from '../ControlVariablesForm';
import { useTemplateEditorForm } from '../TemplateEditorFormProvider';
import { AvatarFeedFields } from './AvatarFeedFields';
import { InAppEditorBlock } from './InAppEditorBlock';

const EDITOR = 'Editor';
const PREVIEW = 'Preview';
const CONTROLS = 'Controls';

export function InAppContentCard({ openVariablesModal }: { openVariablesModal: () => void }) {
  const { template } = useTemplateEditorForm();
  const { readonly, bridge } = useEnvironment({ bridge: template?.bridge });
  const theme = useMantineTheme();

  const [activeTab, setActiveTab] = useState<string>(bridge ? PREVIEW : EDITOR);
  const stepFormPath = useStepFormPath();

  return (
    <div data-test-id="editor-type-selector">
      {!bridge ? (
        <SegmentedControl
          data-test-id="editor-mode-switch"
          styles={{
            root: {
              background: 'transparent',
              border: `1px solid ${theme.colorScheme === 'dark' ? colors.B40 : colors.B70}`,
              borderRadius: '30px',
              width: '100%',
              maxWidth: '300px',
            },
            label: {
              fontSize: '14px',
              lineHeight: '24px',
            },
            control: {
              minWidth: '80px',
            },
            active: {
              background: theme.colorScheme === 'dark' ? colors.B40 : colors.B98,
              borderRadius: '30px',
            },
            labelActive: {
              color: `${theme.colorScheme === 'dark' ? colors.white : colors.B40} !important`,
              fontSize: '14px',
              lineHeight: '24px',
            },
          }}
          data={bridge ? [PREVIEW] : [EDITOR, PREVIEW]}
          value={activeTab}
          onChange={(value) => {
            setActiveTab(value);
          }}
          defaultValue={activeTab}
          fullWidth
          radius={'xl'}
        />
      ) : null}

      <When truthy={activeTab === CONTROLS}>
        <ControlVariablesForm />
      </When>
      <When truthy={activeTab === PREVIEW}>
        <div style={{ marginTop: '1.5rem' }}>
          <InAppPreview showVariables />
        </div>
      </When>
      <When truthy={activeTab === EDITOR}>
        <Grid mt={24} grow>
          <Grid.Col span={9}>
            <InAppEditorBlock readonly={readonly} />
            <AvatarFeedFields />
          </Grid.Col>
          <Grid.Col
            span={3}
            style={{
              maxWidth: '350px',
            }}
          >
            <VariablesManagement
              bridge={bridge}
              path={`${stepFormPath}.template.variables`}
              openVariablesModal={openVariablesModal}
            />
          </Grid.Col>
        </Grid>
      </When>
    </div>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Grid, SegmentedControl, useMantineTheme } from '@mantine/core';
import { colors, When } from '@novu/design-system';
import { useState } from 'react';
import { InAppPreview } from '../../../../components/workflow/preview';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/in-app-editor/InAppEditorBlock.tsx
Tamaño: 3770 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { Controller, useFormContext, useWatch } from 'react-hook-form';
import { IMessageAction, MessageActionStatusEnum } from '@novu/shared';
import { colors, errorMessage } from '@novu/design-system';
import { useMutation } from '@tanstack/react-query';
import { Center, Loader } from '@mantine/core';
import { InAppWidgetPreview } from './preview/InAppWidgetPreview';
import type { IForm } from '../formTypes';
import { useStepFormPath } from '../../hooks/useStepFormPath';
import { previewInApp } from '../../../../api/content-templates';
import { CustomCodeEditor } from '../CustomCodeEditor';

export function InAppEditorBlock({
  readonly,
  preview = false,
  payload = '{}',
}: {
  readonly: boolean;
  preview?: boolean;
  payload?: string;
}) {
  const { control } = useFormContext();
  const path = useStepFormPath();
  const enableAvatar = useWatch({
    name: `${path}.template.enableAvatar` as any,
    control,
  });

  if (preview) {
    return <ContentRender readonly={readonly} payload={payload} />;
  }

  return (
    <Controller
      name={`${path}.template.cta.action`}
      defaultValue={{} as IMessageAction}
      data-test-id="in-app-content-form-item"
      control={control}
      render={({ field }) => {
        const { ref, ...fieldRefs } = field;

        return (
          <InAppWidgetPreview {...fieldRefs} readonly={readonly} enableAvatar={!!enableAvatar}>
            <ContentContainerController />
          </InAppWidgetPreview>
        );
      }}
    />
  );
}

const ContentRender = ({ payload, readonly }: { payload: string; readonly: boolean }) => {
  const { control } = useFormContext<IForm>();
  const path = useStepFormPath();
  const content = useWatch({
    name: `${path}.template.content`,
    control,
  });
  const cta = useWatch({
    name: `${path}.template.cta`,
    control,
  });
  const enableAvatar = useWatch({
    name: `${path}.template.enableAvatar` as any,
    control,
  });

  const [buttons, setButtons] = useState<any[]>([]);
  const { isLoading, mutateAsync } = useMutation(previewInApp);
  const [compiledContent, setCompiledContent] = useState('');

  const parseContent = (args: { content?: string | any; payload: any; cta: any }) => {
    mutateAsync({
      ...args,
      payload: JSON.parse(args.payload),
    })
      .then((result: { content: string; ctaButtons: any[] }) => {
        setCompiledContent(result.content);
        setButtons(result.ctaButtons);

        return result;
      })
      .catch((e: any) => {
        errorMessage(e?.message || 'Un-expected error occurred');
      });
  };

  useEffect(() => {
    parseContent({
      content,
      payload,
      cta,
    });
  }, [compiledContent, payload, cta]);

  if (isLoading) {
    return (
      <div>
        <Center>
          <Loader color={colors.B70} mb={20} mt={20} size={32} />
        </Center>
      </div>
    );
  }

  return (
    <InAppWidgetPreview
      preview={true}
      readonly={readonly}
      enableAvatar={!!enableAvatar}
      value={{
        status: MessageActionStatusEnum.PENDING,
        buttons,
        result: {},
      }}
      onChange={() => {}}
    >
      <span data-test-id="in-app-content-preview" dangerouslySetInnerHTML={{ __html: compiledContent }} />
    </InAppWidgetPreview>
  );
};

function ContentContainerController() {
  const { control } = useFormContext<IForm>();
  const path = useStepFormPath();

  return (
    <Controller
      name={`${path}.template.content` as any}
      defaultValue=""
      data-test-id="in-app-content-form-item"
      control={control}
      render={({ field }) => {
        return <CustomCodeEditor height="100%" onChange={field.onChange} value={field.value} />;
      }}
    />
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect, useState } from 'react';
import { Controller, useFormContext, useWatch } from 'react-hook-form';
import { IMessageAction, MessageActionStatusEnum } from '@novu/shared';
import { colors, errorMessage } from '@novu/design-system';
import { useMutation } from '@tanstack/react-query';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/in-app-editor/TemplateInAppEditor.tsx
Tamaño: 2711 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Stack } from '@mantine/core';
import { useState } from 'react';
import { Controller, useFormContext } from 'react-hook-form';

import { ChannelTypeEnum } from '@novu/shared';
import { Input } from '@novu/design-system';
import { useEnvironment, useHasActiveIntegrations, useVariablesManager } from '../../../../hooks';
import { StepSettings } from '../../workflow/SideBar/StepSettings';
import { LackIntegrationAlert } from '../LackIntegrationAlert';
import { EditVariablesModal } from '../EditVariablesModal';
import { InAppContentCard } from './InAppContentCard';
import { useStepFormPath } from '../../hooks/useStepFormPath';
import type { IForm, ITemplates } from '../formTypes';
import { When } from '../../../../components/utils/When';
import { useTemplateEditorForm } from '../TemplateEditorFormProvider';

const getVariableContents = (template: ITemplates) => {
  const baseContent = ['content'];

  if (template.cta?.data?.url) {
    baseContent.push('cta.data.url');
  }

  template.cta?.action?.buttons?.forEach((_button, ind) => {
    baseContent.push(`cta.action.buttons.${ind}.content`);
  });

  return baseContent;
};

export function TemplateInAppEditor() {
  const { template } = useTemplateEditorForm();
  const { readonly, bridge } = useEnvironment({ bridge: template?.bridge });
  const { control, watch } = useFormContext<IForm>();
  const [modalOpen, setModalOpen] = useState(false);
  const stepFormPath = useStepFormPath();
  const contents = getVariableContents(watch(`${stepFormPath}.template`));
  const variablesArray = useVariablesManager(contents);
  const { hasActiveIntegration } = useHasActiveIntegrations({
    channelType: ChannelTypeEnum.IN_APP,
  });

  return (
    <>
      {!hasActiveIntegration && <LackIntegrationAlert channelType={ChannelTypeEnum.IN_APP} />}
      <StepSettings />
      <Stack spacing={24}>
        <When truthy={!bridge}>
          <Controller
            name={`${stepFormPath}.template.cta.data.url` as any}
            defaultValue=""
            control={control}
            render={({ field, fieldState }) => (
              <Input
                {...field}
                error={fieldState.error?.message}
                value={field.value || ''}
                disabled={readonly}
                data-test-id="inAppRedirect"
                label="Redirect URL"
                placeholder="i.e /tasks/{{taskId}}"
              />
            )}
          />
        </When>
        <InAppContentCard
          openVariablesModal={() => {
            setModalOpen(true);
          }}
        />
      </Stack>
      <EditVariablesModal open={modalOpen} setOpen={setModalOpen} variablesArray={variablesArray} />
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Stack } from '@mantine/core';
import { useState } from 'react';
import { Controller, useFormContext } from 'react-hook-form';
import { ChannelTypeEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/in-app-editor/preview/ActionBlockContainer.tsx
Tamaño: 5368 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import {
  darkButtonStyle,
  IMessageButton,
  lightButtonStyle,
  ButtonTypeEnum,
  IMessageAction,
  MessageActionStatusEnum,
} from '@novu/shared';
import { ColorScheme, TextInput, useMantineColorScheme, useMantineTheme } from '@mantine/core';
import { RemoveCircle, Button, colors } from '@novu/design-system';
import styled from '@emotion/styled';
import { When } from '../../../../../components/utils/When';

export function ActionBlockContainer({
  onButtonAddClickHandle,
  onRemoveTemplate,
  isButtonsTemplateSelected,
  onChange,
  value,
  readonly,
}: {
  onButtonAddClickHandle: () => void;
  onRemoveTemplate: () => void;
  isButtonsTemplateSelected: boolean;
  onChange: (data: any) => void;
  value: IMessageAction | undefined;
  readonly: boolean;
}) {
  return (
    <>
      {isButtonsTemplateSelected ? (
        <SelectedButtonTemplate
          onChange={onChange}
          value={value}
          onRemoveTemplate={onRemoveTemplate}
          readonly={readonly}
        />
      ) : (
        <AddButtonSection onButtonAddClick={onButtonAddClickHandle} readonly={readonly} />
      )}
    </>
  );
}

interface ISelectedButtonTemplateProps {
  value?: IMessageAction;
  onRemoveTemplate: () => void;
  onChange: (actions: any) => void;
  readonly: boolean;
}

function SelectedButtonTemplate(props: ISelectedButtonTemplateProps) {
  const dark = useMantineTheme().colorScheme === 'dark';
  const buttonStyle = dark ? darkButtonStyle : lightButtonStyle;

  function handleOnButtonContentChange(data: any, buttonIndex: number) {
    const currentButtonsValue = props?.value?.buttons ? [...props?.value?.buttons] : [];

    if (currentButtonsValue) {
      if (currentButtonsValue[buttonIndex]) {
        currentButtonsValue[buttonIndex].content = data.target.value;
        const newAction = { buttons: currentButtonsValue, status: MessageActionStatusEnum.PENDING };
        props.onChange(newAction);
      }
    }
  }

  const lastButtonType = props?.value?.buttons
    ? props?.value?.buttons[props.value.buttons.length - 1]?.type
    : ButtonTypeEnum.PRIMARY;

  const buttons = props.value?.buttons;

  return (
    <>
      <TemplateContainerWrap readonly={props.readonly}>
        <TemplateContainer data-test-id="template-container">
          {buttons?.map((button: IMessageButton, buttonIndex: number) => {
            const buttonText = button?.content ? button?.content : '';

            return (
              <NotificationButton background={buttonStyle[button.type].backGroundColor} fullWidth key={buttonIndex}>
                <ButtonInput
                  color={buttonStyle[button.type].fontColor}
                  value={buttonText}
                  onChange={(data) => {
                    handleOnButtonContentChange(data, buttonIndex);
                  }}
                />
              </NotificationButton>
            );
          })}
          <When truthy={!props.readonly}>
            <DeleteIcon buttonStyle={buttonStyle[lastButtonType]}>
              <RemoveCircle onClick={props.onRemoveTemplate} data-test-id="remove-button-icon" />
            </DeleteIcon>
          </When>
        </TemplateContainer>
      </TemplateContainerWrap>
    </>
  );
}

function AddButtonSection({ onButtonAddClick, readonly }: { onButtonAddClick?: () => void; readonly: boolean }) {
  const { colorScheme } = useMantineColorScheme();

  return (
    <AddButtonTemplateButton
      colorScheme={colorScheme}
      data-test-id="control-add"
      onClick={onButtonAddClick}
      readonly={readonly}
    >
      <span>+ Add Action</span>
    </AddButtonTemplateButton>
  );
}

const AddButtonTemplateButton = styled.div<{ colorScheme: ColorScheme; readonly: boolean }>`
  display: flex;
  justify-content: center;
  align-items: center;
  height: 30px;
  border: 1px dashed;
  border-radius: 7px;
  margin: 15px 0 15px 0;
  color: ${({ colorScheme }) => (colorScheme === 'dark' ? colors.B80 : colors.B40)};
  cursor: pointer;
  font-weight: 700;
  font-size: 12px;

  ${({ readonly }) => {
    if (readonly) {
      return `pointer-events: none`;
    }
  }}
`;

const TemplateContainer = styled.div`
  position: relative;
  display: flex;
  justify-content: space-between;
  margin: 15px -15px;
`;

const TemplateContainerWrap = styled.div<{ readonly: boolean }>`
  margin-left: 10px;
  margin-right: 10px;
  border: none;

  ${({ readonly }) => {
    if (readonly) {
      return `pointer-events: none`;
    }
  }}
`;

const NotificationButton = styled(Button)<{ background }>`
  background: ${({ background }) => background};
  height: 30px;
  position: relative;
  cursor: default;
  justify-content: center;
  display: flex;
  margin-left: 5px;
  margin-right: 5px;
  text-align-last: center;
  border: none;
  box-shadow: none;
`;

const DeleteIcon = styled.div<{ buttonStyle }>`
  align-content: center;
  position: absolute;
  align-items: center;
  height: 14px;
  top: 8px;
  right: 14px;
  cursor: pointer;
  path {
    fill: ${({ buttonStyle }) => buttonStyle.removeCircleColor};
  }
`;

const ButtonInput = styled(TextInput)<{ color }>`
  display: flex;
  align-content: center;
  text-align: center;
  border: none;
  cursor: none;
  input {
    border: transparent;
    background: transparent;
    color: ${({ color }) => color};
    font-weight: 700;
    height: 30px;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import {
darkButtonStyle,
IMessageButton,
lightButtonStyle,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/in-app-editor/preview/AvatarContainer.styles.ts
Tamaño: 1399 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { createStyles } from '@mantine/core';
import styled from '@emotion/styled';
import { colors } from '@novu/design-system';

export const useStyles = createStyles((theme) => {
  const dark = theme.colorScheme === 'dark';

  return {
    dropdown: {
      margin: 0,
      padding: 15,
      backgroundColor: dark ? colors.B20 : colors.white,
      color: dark ? colors.white : colors.B40,
      border: 'none',
      borderRadius: '7px',
    },
    arrow: {
      backgroundColor: dark ? colors.B20 : colors.white,
      border: 'none',
    },
  };
});

export const AvatarWrapper = styled.div<{ dark: boolean; readonly: boolean }>`
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: 1px solid ${({ dark }) => (dark ? colors.B40 : colors.B80)};
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: 'pointer';
  overflow: hidden;
  user-select: none;

  ${({ readonly }) => {
    if (readonly) {
      return `pointer-events: none`;
    }
  }}
`;

export const IconWrapper = styled.div<{ containerBgColor: string; iconColor: string; size: number }>`
  width: ${({ size }) => size}px;
  height: ${({ size }) => size}px;
  border-radius: 50%;
  cursor: pointer;
  background-color: ${({ containerBgColor }) => containerBgColor};
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 30px;
  color: ${({ iconColor }) => iconColor};
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useStyles(createStyles((theme))
 - AvatarWrapper(styled.div<{ dark: boolean; readonly: boolean }>`
  width: 40px;
  height: 40px;
  border-radius: 50...)
 - IconWrapper(styled.div<{ containerBgColor: string; iconColor: string; size: number }>`
  width: ${({ size }))
Declaraciones 'export' encontradas:
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/in-app-editor/preview/AvatarContainer.tsx
Tamaño: 6732 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState, Dispatch, SetStateAction } from 'react';
import { Box, Group, Divider, Popover, Stack, Avatar as MAvatar } from '@mantine/core';
import { useController } from 'react-hook-form';
import { SystemAvatarIconEnum, IActor, ActorTypeEnum } from '@novu/shared';

import {
  colors,
  Input,
  Switch,
  Text,
  Tooltip,
  Avatar,
  Camera,
  IconWarning,
  IconInfo,
  IconCheckCircle,
  IconCancel,
  IconArrowCircleUp,
  IconHelp,
} from '@novu/design-system';
import { AvatarWrapper, IconWrapper, useStyles } from './AvatarContainer.styles';
import { useStepFormPath } from '../../../hooks/useStepFormPath';

const MENU_CLICK_OUTSIDE_EVENTS = ['click', 'mousedown', 'touchstart'];

const systemIcons = [
  {
    icon: <IconWarning />,
    type: SystemAvatarIconEnum.WARNING,
    iconColor: '#FFF000',
    containerBgColor: '#FFF00026',
  },
  {
    icon: <IconInfo />,
    type: SystemAvatarIconEnum.INFO,
    iconColor: '#0000FF',
    containerBgColor: '#0000FF26',
  },
  {
    icon: <IconArrowCircleUp />,
    type: SystemAvatarIconEnum.UP,
    iconColor: colors.B70,
    containerBgColor: `${colors.B70}26`,
  },
  {
    icon: <IconHelp />,
    type: SystemAvatarIconEnum.QUESTION,
    iconColor: colors.B70,
    containerBgColor: `${colors.B70}26`,
  },
  {
    icon: <IconCheckCircle />,
    type: SystemAvatarIconEnum.SUCCESS,
    iconColor: colors.success,
    containerBgColor: `${colors.success}26`,
  },
  {
    icon: <IconCancel />,
    type: SystemAvatarIconEnum.ERROR,
    iconColor: colors.error,
    containerBgColor: `${colors.error}26`,
  },
];

const AvatarContainer = ({
  opened,
  setOpened,
  readonly,
}: {
  opened: boolean;
  setOpened: Dispatch<SetStateAction<boolean>>;
  readonly: boolean;
}) => {
  const path = useStepFormPath();
  const {
    field: { value, onChange },
  } = useController({
    name: `${path}.template.actor` as any,
  });

  const [tooltipOpened, setTooltipOpened] = useState(() => {
    return value.type === ActorTypeEnum.NONE;
  });
  const [avatarURLInput, setAvatarURLInput] = useState(() => {
    return value.type === ActorTypeEnum.SYSTEM_CUSTOM && value.data ? value.data : '';
  });

  const { classes, theme } = useStyles();
  const dark = theme.colorScheme === 'dark';

  function handleAvatarPopover() {
    setOpened((prev) => !prev);
    if (tooltipOpened) {
      setTooltipOpened(false);
    }
  }

  return (
    <span style={{ position: 'relative' }}>
      <Popover
        opened={opened}
        position="right-start"
        withArrow
        classNames={classes}
        onClose={() => setOpened(false)}
        closeOnClickOutside
        clickOutsideEvents={MENU_CLICK_OUTSIDE_EVENTS}
        withinPortal
        disabled={readonly}
      >
        <Popover.Target>
          <span>
            <Tooltip disabled={readonly} label={<TooltipLabel />} position="left" opened={tooltipOpened}>
              <AvatarWrapper
                data-test-id="choose-avatar-btn"
                onClick={handleAvatarPopover}
                dark={dark}
                readonly={readonly}
              >
                <RenderAvatar actor={value} />
              </AvatarWrapper>
            </Tooltip>
          </span>
        </Popover.Target>
        <Popover.Dropdown>
          <Stack sx={{ width: '230px' }}>
            <Group align="center">
              <Box>
                <Avatar />
              </Box>
              <Box>
                <Text>User avatar</Text>
              </Box>
              <Box
                sx={{
                  marginLeft: 'auto',
                }}
              >
                <Switch
                  checked={value.type === ActorTypeEnum.USER}
                  onChange={(event) =>
                    onChange({
                      type: event.currentTarget.checked ? ActorTypeEnum.USER : ActorTypeEnum.NONE,
                      data: null,
                    })
                  }
                />
              </Box>
            </Group>
            <Divider label={<Text color={colors.B60}>Platform/System Avatars</Text>} labelPosition="left" />

            <Group align="center">
              <Box>
                <Camera />
              </Box>
              <Box>
                <Text>Enter Avatar's URL</Text>
              </Box>
            </Group>
            <Input
              placeholder="Enter Avatar's URL"
              onBlur={(event) =>
                onChange({
                  data: event.target.value,
                  type: event.target.value ? ActorTypeEnum.SYSTEM_CUSTOM : ActorTypeEnum.NONE,
                })
              }
              onChange={(event) => {
                setAvatarURLInput(event.target.value);
              }}
              value={avatarURLInput}
            />
            <Divider label={<Text color={colors.B60}>or choose a system avatar</Text>} labelPosition="center" />
            <Group position="center" spacing={20}>
              {systemIcons.map((icon) => (
                <IconWrapper
                  data-test-id={`avatar-icon-${icon.type}`}
                  iconColor={icon.iconColor}
                  containerBgColor={icon.containerBgColor}
                  onClick={() =>
                    onChange({
                      type: ActorTypeEnum.SYSTEM_ICON,
                      data: icon.type,
                    })
                  }
                  size={50}
                  key={icon.type}
                >
                  <div>{icon.icon}</div>
                </IconWrapper>
              ))}
            </Group>
          </Stack>
        </Popover.Dropdown>
      </Popover>
    </span>
  );
};

export function RenderAvatar({ actor }: { actor: IActor }) {
  if (!actor.type || actor.type === ActorTypeEnum.NONE) {
    return <Camera />;
  }

  if (actor.type === ActorTypeEnum.USER) {
    return <Avatar />;
  }

  if (actor.type === ActorTypeEnum.SYSTEM_CUSTOM && actor.data) {
    return <MAvatar src={actor.data} radius="xl" />;
  }

  if (actor.type === ActorTypeEnum.SYSTEM_ICON) {
    const selectedIcon = systemIcons.filter((data) => data.type === actor.data);

    return selectedIcon.length > 0 ? (
      <IconWrapper
        data-test-id={`avatar-icon-${selectedIcon[0].type}`}
        size={40}
        iconColor={selectedIcon[0].iconColor}
        containerBgColor={selectedIcon[0].containerBgColor}
      >
        {selectedIcon[0].icon}
      </IconWrapper>
    ) : (
      <Camera />
    );
  }

  return <Camera />;
}

function TooltipLabel() {
  return (
    <Stack spacing={8}>
      <Text weight="bold" gradient>
        SETUP AVATAR
      </Text>
      <Text>Click on the icon to setup avatar.</Text>
    </Stack>
  );
}

export default AvatarContainer;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState, Dispatch, SetStateAction } from 'react';
import { Box, Group, Divider, Popover, Stack, Avatar as MAvatar } from '@mantine/core';
import { useController } from 'react-hook-form';
import { SystemAvatarIconEnum, IActor, ActorTypeEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/in-app-editor/preview/InAppWidgetPreview.tsx
Tamaño: 12331 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Badge, Card, Container, Group, Space, useMantineTheme } from '@mantine/core';
import { useState } from 'react';
import { formatDistanceToNow, subMinutes } from 'date-fns';
import { IMessageAction } from '@novu/shared';

import { colors, shadows, Text, Title } from '@novu/design-system';
import { ActionBlockContainer } from './ActionBlockContainer';
import AvatarContainer from './AvatarContainer';

import { ButtonsTemplatesPopover } from '../ButtonsTemplatesPopover';

function minutesAgo(num: number): string {
  return formatDistanceToNow(subMinutes(new Date(), num), { addSuffix: true });
}

export function InAppWidgetPreview({
  readonly,
  children,
  value,
  onChange,
  enableAvatar,
  preview = false,
}: {
  readonly: boolean;
  preview?: boolean;
  children: JSX.Element;
  value: IMessageAction | undefined;
  onChange: (data: any) => void;
  enableAvatar: boolean;
}) {
  const theme = useMantineTheme();
  const [isButtonsTemplateVisible, setIsButtonsTemplateVisible] = useState<boolean>(false);
  const [isButtonsTemplateSelected, setIsButtonsTemplateSelected] = useState<boolean>(
    !!value?.buttons && value?.buttons?.length !== 0
  );
  const [avatarContainerOpened, setAvatarContainerOpened] = useState(false);

  function onButtonAddClickHandle() {
    setIsButtonsTemplateVisible(true);
  }

  function onRemoveTemplate() {
    setIsButtonsTemplateSelected(false);
    onChange({});
  }

  const editableContent = (
    <ButtonsTemplatesPopover
      isVisible={isButtonsTemplateVisible}
      setIsPopoverVisible={setIsButtonsTemplateVisible}
      setTemplateSelected={setIsButtonsTemplateSelected}
      onChange={onChange}
    >
      <Container
        fluid
        sx={{
          position: 'relative',
          padding: '15px 25px 0px',
          borderRadius: '7px',
          backgroundColor: theme.colorScheme === 'dark' ? colors.B20 : colors.white,
          boxShadow: theme.colorScheme === 'dark' ? shadows.dark : shadows.medium,
          width: preview ? undefined : '100%',

          '&:before': {
            content: '""',
            position: 'absolute',
            left: '0',
            top: '0',
            right: '0',
            bottom: '0',
            width: '5px',
            borderRadius: ' 7px 0 0 7px',
            background: colors.vertical,
          },

          ...(readonly && !preview
            ? {
                backgroundColor: theme.colorScheme === 'dark' ? colors.B20 : colors.B98,
                color: theme.colorScheme === 'dark' ? colors.B40 : colors.B70,
                opacity: 0.6,
              }
            : {}),
          ...(avatarContainerOpened && { opacity: 0.4 }),
        }}
      >
        <Group position="apart">
          <div style={{ width: '100%' }}>
            <Group position="left" spacing={10} noWrap>
              {enableAvatar && (
                <AvatarContainer
                  opened={avatarContainerOpened}
                  setOpened={setAvatarContainerOpened}
                  readonly={readonly}
                />
              )}

              <div style={{ flexGrow: 1 }}>
                <Text weight="bold">{children}</Text>
                <Text mt={5} color={colors.B60}>
                  {minutesAgo(5)}
                </Text>
              </div>
            </Group>
            <ActionBlockContainer
              value={value}
              onChange={onChange}
              onButtonAddClickHandle={onButtonAddClickHandle}
              onRemoveTemplate={onRemoveTemplate}
              isButtonsTemplateSelected={isButtonsTemplateSelected}
              readonly={readonly}
            />
          </div>
        </Group>
      </Container>
    </ButtonsTemplatesPopover>
  );

  if (!preview) {
    return editableContent;
  }

  return (
    <Card withBorder sx={styledCard}>
      <Card.Section>
        <Group position="apart" sx={{ padding: '15px' }}>
          <Group spacing={10}>
            <Title>Notifications</Title>
            <Badge
              sx={{
                padding: 0,
                width: 20,
                height: 20,
                pointerEvents: 'none',
                border: 'none',
                backgroundImage: colors.horizontal,
                color: colors.white,
                fontWeight: 'bold',
                fontSize: '12px',
              }}
              radius={100}
            >
              1
            </Badge>
          </Group>
          <Text color={colors.B60}>Mark all as read</Text>
        </Group>
      </Card.Section>
      <Card.Section sx={{ padding: '15px' }}>
        {editableContent}
        <Container
          mt={10}
          fluid
          sx={{
            padding: '15px 25px 16px',
            borderRadius: '7px',
            backgroundColor: theme.colorScheme === 'dark' ? colors.B17 : colors.BGLight,
            opacity: '0.5',
          }}
        >
          <Text color={colors.B60}>Notification Example</Text>
          <Text mt={5} color={theme.colorScheme === 'dark' ? colors.B40 : colors.B70}>
            {minutesAgo(10)}
          </Text>
        </Container>
        <Container
          mt={10}
          fluid
          sx={{
            padding: '15px 25px 16px',
            borderRadius: '7px',
            backgroundColor: theme.colorScheme === 'dark' ? colors.B17 : colors.BGLight,
            opacity: '0.5',
          }}
        >
          <Text color={colors.B60}>Notification Example</Text>
          <Text mt={5} color={theme.colorScheme === 'dark' ? colors.B40 : colors.B70}>
            {minutesAgo(25)}
          </Text>
        </Container>
        <Space h={100} />
      </Card.Section>
      <Card.Section sx={{ padding: '15px' }}>
        <Group position="center" spacing={10}>
          <Text color={theme.colorScheme === 'dark' ? colors.B40 : colors.B70}>Powered By</Text>
          <Footer />
        </Group>
      </Card.Section>
    </Card>
  );
}

const styledCard = (theme) => ({
  backgroundColor: 'transparent',
  borderRadius: '7px',
  borderColor: theme.colorScheme === 'dark' ? colors.B30 : colors.B80,
});

export function Footer() {
  return (
    <a
      rel="noreferrer"
      target="_blank"
      href="https://novu.co?utm_source=in-app-widget"
      style={{ display: 'flex', width: 60 }}
    >
      <svg width="107" height="16" viewBox="0 0 1049 300" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M231 120.241C231 128.307 221.208 132.301 215.567 126.536L100.084 8.50548C115.699 2.9969 132.5 0 150 0C179.836 0 207.638 8.711 231 23.7285V120.241ZM273 64.1228V120.241C273 165.946 217.51 188.577 185.546 155.908L61.3582 28.9807C24.1534 56.2779 0 100.318 0 150C0 181.941 9.98339 211.55 27 235.877V180.059C27 134.354 82.4899 111.723 114.454 144.392L238.471 271.145C275.773 243.857 300 199.758 300 150C300 118.059 290.017 88.45 273 64.1228ZM84.433 173.764L199.697 291.571C184.144 297.031 167.419 300 150 300C120.164 300 92.3624 291.289 69 276.272V180.059C69 171.993 78.7923 167.999 84.433 173.764Z"
          fill="url(#paint0_linear_1301_3067)"
        />
        <path
          d="M487.303 223.326V140.944C487.303 126.727 483.892 115.918 477.07 108.517C470.248 101.116 459.527 97.4157 444.908 97.4157C434.967 97.4157 427.073 98.3895 421.225 100.337C415.378 102.09 411.674 103.356 410.115 104.135V223.326H380V84.8539C380.78 84.4644 382.924 83.588 386.432 82.2247C389.941 80.8614 394.619 79.4007 400.467 77.8427C406.314 76.2846 413.136 74.9213 420.933 73.7528C428.73 72.5843 437.306 72 446.662 72C457.383 72 467.129 73.4607 475.9 76.382C484.672 79.1086 492.079 83.1011 498.121 88.3596C504.359 93.618 509.134 99.9476 512.448 107.348C515.761 114.749 517.418 123.124 517.418 132.472V223.326H487.303Z"
          fill="currentColor"
        />
        <path
          d="M713.257 150C713.257 161.101 711.308 171.423 707.41 180.966C703.706 190.509 698.444 198.787 691.621 205.798C684.799 212.614 676.613 218.067 667.061 222.157C657.51 226.052 646.985 228 635.485 228C623.984 228 613.361 226.052 603.615 222.157C594.064 218.067 585.878 212.614 579.055 205.798C572.233 198.787 566.873 190.509 562.975 180.966C559.271 171.423 557.419 161.101 557.419 150C557.419 138.899 559.271 128.577 562.975 119.034C566.873 109.491 572.233 101.311 579.055 94.4944C585.878 87.4831 594.064 82.03 603.615 78.1348C613.361 74.0449 623.984 72 635.485 72C646.985 72 657.51 74.0449 667.061 78.1348C676.613 82.03 684.799 87.4831 691.621 94.4944C698.444 101.311 703.706 109.491 707.41 119.034C711.308 128.577 713.257 138.899 713.257 150ZM681.973 150C681.973 142.21 680.901 135.101 678.757 128.674C676.613 122.052 673.494 116.404 669.401 111.73C665.502 106.861 660.629 103.161 654.782 100.629C649.129 97.9026 642.697 96.5393 635.485 96.5393C628.078 96.5393 621.45 97.9026 615.603 100.629C609.95 103.161 605.077 106.861 600.984 111.73C597.085 116.404 594.064 122.052 591.92 128.674C589.776 135.101 588.704 142.21 588.704 150C588.704 157.79 589.776 164.996 591.92 171.618C594.064 178.045 597.085 183.693 600.984 188.562C605.077 193.236 609.95 196.936 615.603 199.663C621.45 202.195 628.078 203.461 635.485 203.461C642.697 203.461 649.129 202.195 654.782 199.663C660.629 196.936 665.502 193.236 669.401 188.562C673.494 183.693 676.613 178.045 678.757 171.618C680.901 164.996 681.973 157.79 681.973 150Z"
          fill="currentColor"
        />
        <path
          d="M888.255 83.1011C887.086 87.3858 885.039 93.1311 882.115 100.337C879.387 107.348 876.17 115.236 872.467 124C868.764 132.764 864.67 142.015 860.187 151.753C855.899 161.296 851.513 170.644 847.03 179.798C842.742 188.757 838.551 197.228 834.458 205.213C830.559 213.004 827.148 219.528 824.224 224.787H792.94C789.431 218.554 785.728 211.738 781.829 204.337C778.126 196.742 774.325 189.146 770.427 181.551C766.723 173.76 763.117 166.067 759.609 158.472C756.1 150.876 752.786 143.865 749.668 137.438C746.744 130.816 744.113 124.974 741.774 119.91C739.629 114.846 737.973 110.951 736.803 108.225C735.634 105.498 734.464 102.577 733.295 99.4607C732.125 96.3446 731.54 93.4232 731.54 90.6966C731.54 87.191 732.71 83.9775 735.049 81.0562C737.388 78.1348 741.384 76.6742 747.036 76.6742C750.935 76.6742 753.956 77.0637 756.1 77.8427C758.244 78.6217 759.414 79.1086 759.609 79.3034C762.922 88.4569 766.723 98.4869 771.011 109.393C775.495 120.3 779.978 131.109 784.461 141.82C789.139 152.337 793.622 162.464 797.91 172.202C802.199 181.745 805.999 189.828 809.313 196.449C811.652 191.97 814.673 185.64 818.377 177.461C822.275 169.086 826.271 159.933 830.364 150C834.653 140.067 838.941 129.843 843.229 119.326C847.517 108.809 851.318 99.1685 854.632 90.4045C856.191 86.1198 858.14 82.809 860.479 80.4719C862.818 77.9401 866.717 76.6742 872.175 76.6742C876.853 76.6742 880.556 77.5506 883.285 79.3034C886.209 81.0562 887.866 82.3221 888.255 83.1011Z"
          fill="currentColor"
        />
        <path
          d="M1018.88 90.4045C1018.88 85.7303 1020.25 82.3221 1022.98 80.1798C1025.71 77.8427 1029.61 76.6742 1034.67 76.6742C1037.99 76.6742 1040.91 77.0637 1043.44 77.8427C1046.17 78.6217 1048.03 79.206 1049 79.5955V223.326C1047.64 223.715 1045.2 224.105 1041.69 224.494C1038.38 224.884 1034.28 225.273 1029.41 225.663C1024.54 226.247 1019.18 226.637 1013.33 226.831C1007.48 227.221 1001.54 227.416 995.495 227.416C977.757 227.416 963.333 225.273 952.223 220.989C941.307 216.704 932.633 210.472 926.201 202.292C918.209 191.97 914.213 178.24 914.213 161.101V90.4045C914.213 85.7303 915.578 82.3221 918.307 80.1798C921.035 77.8427 924.934 76.6742 930.002 76.6742C933.315 76.6742 936.239 77.0637 938.773 77.8427C941.502 78.6217 943.354 79.206 944.328 79.5955V157.888C944.328 172.689 948.032 183.79 955.439 191.191C963.041 198.592 975.808 202.292 993.74 202.292C1000.56 202.292 1006.02 202.097 1010.11 201.708C1014.4 201.124 1017.33 200.637 1018.88 200.247V90.4045Z"
          fill="currentColor"
        />
        <defs>
          <linearGradient
            id="paint0_linear_1301_3067"
            x1="300"
            y1="0"
            x2="3.57628e-05"
            y2="300"
            gradientUnits="userSpaceOnUse"
          >
            <stop offset="0.231667" stopColor="#FF884D" />
            <stop offset="0.801667" stopColor="#E300BD" />
          </linearGradient>
        </defs>
      </svg>
    </a>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Badge, Card, Container, Group, Space, useMantineTheme } from '@mantine/core';
import { useState } from 'react';
import { formatDistanceToNow, subMinutes } from 'date-fns';
import { IMessageAction } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/notification-setting-form/NotificationSettingsForm.tsx
Tamaño: 6700 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ActionIcon, Grid, Stack } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { Controller, useFormContext } from 'react-hook-form';
import type { IResponseError, INotificationTrigger } from '@novu/shared';

import { Input, Select, Switch, Tooltip, Check, Copy, When } from '@novu/design-system';
import { useParams } from 'react-router-dom';
import { api } from '../../../../api/api.client';
import { useEnvironment, useNotificationGroup } from '../../../../hooks';
import type { IForm } from '../formTypes';
import { useTemplateEditorForm } from '../TemplateEditorFormProvider';
import { useStatusChangeControllerHook } from '../useStatusChangeController';

export const NotificationSettingsForm = ({ trigger }: { trigger?: INotificationTrigger }) => {
  const idClipboard = useClipboard({ timeout: 1000 });
  const queryClient = useQueryClient();
  const {
    formState: { errors },
    setValue,
    control,
  } = useFormContext<IForm>();

  const { template } = useTemplateEditorForm();
  const { readonly, bridge } = useEnvironment({ bridge: template?.bridge });
  const { templateId = '' } = useParams<{ templateId: string }>();

  const { isTemplateActive, changeActiveStatus, isStatusChangeLoading } = useStatusChangeControllerHook(
    templateId,
    template
  );

  const { groups, loading: loadingGroups } = useNotificationGroup();
  const { isLoading: loadingCreateGroup, mutateAsync: createNotificationGroup } = useMutation<
    { name: string; _id: string },
    IResponseError,
    {
      name: string;
    }
  >((data) => api.post('/v1/notification-groups', data), {
    onSuccess: (data) => {
      queryClient.setQueryData(['notificationGroups'], [...groups, data]);
    },
  });

  function addGroupItem(newGroup: string) {
    if (newGroup) {
      createNotificationGroup({
        name: newGroup,
      }).then((response) => {
        setTimeout(() => {
          setValue('notificationGroupId', response._id);
        }, 0);
      });
    }
  }

  return (
    <>
      <When truthy={!bridge}>
        <Grid gutter={0} mt={-8} mb={-8}>
          <Grid.Col span={6}>
            <Stack
              justify="center"
              sx={{
                height: '100%',
              }}
            >
              <Switch
                label={isTemplateActive ? 'Active' : 'Inactive'}
                loading={isStatusChangeLoading}
                disabled={readonly}
                data-test-id="active-toggle-switch"
                onChange={(e) => changeActiveStatus(e.target.checked)}
                checked={isTemplateActive || false}
              />
            </Stack>
          </Grid.Col>
          <Grid.Col span={6}>
            <Controller
              name="notificationGroupId"
              defaultValue=""
              control={control}
              render={({ field }) => {
                return (
                  <>
                    <Select
                      {...field}
                      data-test-id="groupSelector"
                      loading={loadingGroups || loadingCreateGroup}
                      disabled={readonly}
                      creatable
                      searchable
                      error={errors.notificationGroupId?.message}
                      getCreateLabel={(newGroup) => (
                        <div data-test-id="submit-category-btn">+ Create group {newGroup}</div>
                      )}
                      // @ts-expect-error - addGroupItem is not typed correctly
                      onCreate={addGroupItem}
                      placeholder="Attach workflow to group"
                      data={(groups || []).map((item) => ({ label: item.name, value: item._id }))}
                    />
                  </>
                );
              }}
            />
          </Grid.Col>
        </Grid>
      </When>

      <Controller
        control={control}
        name="name"
        defaultValue="Untitled"
        render={({ field }) => (
          <Input
            {...field}
            data-test-id="title"
            disabled={readonly}
            value={field.value || ''}
            error={errors.name?.message}
            label="Name"
            placeholder="Workflow name goes here..."
          />
        )}
      />
      {trigger && (
        <Controller
          name="identifier"
          defaultValue=""
          control={control}
          render={({ field, fieldState }) => (
            <Input
              {...field}
              data-test-id="trigger-id"
              value={field.value || ''}
              error={fieldState.error?.message}
              label="Trigger identifier"
              description={'Used to identify your workflow when triggering it via the API'}
              disabled={readonly}
              rightSection={
                <Tooltip data-test-id={'Tooltip'} label={idClipboard.copied ? 'Copied!' : 'Copy Key'}>
                  <ActionIcon variant="transparent" onClick={() => idClipboard.copy(field.value)}>
                    {idClipboard.copied ? <Check /> : <Copy />}
                  </ActionIcon>
                </Tooltip>
              }
            />
          )}
        />
      )}
      <Controller
        name="description"
        defaultValue=""
        control={control}
        render={({ field, fieldState }) => (
          <Input
            {...field}
            error={fieldState.error?.message}
            value={field.value || ''}
            disabled={readonly}
            data-test-id="description"
            label="Description"
            placeholder="Describe your workflow..."
          />
        )}
      />

      <Controller
        name="tags"
        control={control}
        render={({ field }) => {
          return (
            <>
              <Select
                {...field}
                data-test-id="tagsSelector"
                disabled={readonly}
                creatable
                label={'Tags'}
                description={
                  'Use tags to organize your workflows, e.g. to filter them when displaying user preferences in the notification center'
                }
                searchable
                type={'multiselect'}
                error={errors.tags?.message}
                getCreateLabel={(tag) => <div data-test-id="submit-tags-btn">+ Create Tag {tag}</div>}
                placeholder="Attach a tag to identify workflow"
                data={(field.value || [])?.map((item) => ({ label: item, value: item })) || []}
              />
            </>
          );
        }}
      />
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ActionIcon, Grid, Stack } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { Controller, useFormContext } from 'react-hook-form';
import type { IResponseError, INotificationTrigger } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/notification-setting-form/TemplatePreference.tsx
Tamaño: 3322 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FunctionComponent } from 'react';
import { Group, Input, InputWrapperProps, Text } from '@mantine/core';
import { useFormContext, Controller } from 'react-hook-form';

import { Checkbox, colors, Switch } from '@novu/design-system';
import { ChannelTypeEnum } from '@novu/shared';
import { useEnvironment } from '../../../../hooks';
import type { IForm } from '../formTypes';
import { LabelWithTooltip } from '../../workflow/LabelWithTooltip';
import { ChannelTitle } from '../ChannelTitle';
import { useTemplateEditorForm } from '../TemplateEditorFormProvider';

export function TemplatePreference() {
  return (
    <>
      <CriticalPreference />
      <ChannelPreference />
    </>
  );
}

export function ChannelPreference() {
  const { control } = useFormContext();
  const { template } = useTemplateEditorForm();
  const { readonly } = useEnvironment({ bridge: template?.bridge });

  return (
    <Controller
      name="preferenceSettings"
      control={control}
      render={({ field }) => {
        const preferences: IForm['preferenceSettings'] = field.value;

        function handleCheckboxChange(e, channelType) {
          const newData = { ...preferences };
          newData[channelType] = e.currentTarget.checked;
          field.onChange(newData);
        }

        return (
          <>
            <Text color={colors.B60}>Default Channels On:</Text>
            {Object.keys(preferences).map((key) => {
              const checked = preferences[key] || false;

              return (
                <Group
                  sx={{
                    padding: 18,
                    border: `1px dashed ${colors.B40}`,
                    borderRadius: 8,
                  }}
                  position="apart"
                  key={key}
                >
                  <Text>{<ChannelTitle channel={key as ChannelTypeEnum} />}</Text>
                  <div>
                    <Switch
                      checked={checked}
                      disabled={readonly}
                      data-test-id={`preference-${key}`}
                      onChange={(e) => handleCheckboxChange(e, key)}
                    />
                  </div>
                </Group>
              );
            })}
          </>
        );
      }}
    />
  );
}

export function CriticalPreference() {
  const { control } = useFormContext();
  const { template } = useTemplateEditorForm();
  const { readonly } = useEnvironment({ bridge: template?.bridge });

  return (
    <Controller
      name="critical"
      defaultValue={true}
      control={control}
      render={({ field }) => {
        return (
          <Group align="center" position="apart">
            <LabelWithTooltip
              label="Users will be able to manage subscriptions"
              tooltip="Allow opting out of the specific channel. Users will receive notifications in the active channels."
            />
            <Switch {...field} checked={field.value} disabled={readonly} data-test-id="critical" />
          </Group>
        );
      }}
    />
  );
}

export const InputWrapperProxy: FunctionComponent<InputWrapperProps> = ({ children, ...props }) => {
  return <Input.Wrapper {...props}>{children}</Input.Wrapper>;
};

export function CheckboxProxy({ ...props }) {
  return <Checkbox {...props} />;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FunctionComponent } from 'react';
import { Group, Input, InputWrapperProps, Text } from '@mantine/core';
import { useFormContext, Controller } from 'react-hook-form';
import { Checkbox, colors, Switch } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/sms-editor/TemplateSMSEditor.tsx
Tamaño: 3843 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Controller, useFormContext } from 'react-hook-form';
import { ChannelTypeEnum } from '@novu/shared';

import { useState } from 'react';
import { Grid, SegmentedControl, Stack, useMantineTheme } from '@mantine/core';
import { When } from '@novu/design-system';
import { LackIntegrationAlert } from '../LackIntegrationAlert';
import {
  useEnvironment,
  useHasActiveIntegrations,
  useGetPrimaryIntegration,
  useVariablesManager,
} from '../../../../hooks';
import { StepSettings } from '../../workflow/SideBar/StepSettings';
import { useStepFormPath } from '../../hooks/useStepFormPath';
import { useEditTemplateContent } from '../../hooks/useEditTemplateContent';
import { VariableManagementButton } from '../VariableManagementButton';
import { CustomCodeEditor } from '../CustomCodeEditor';
import { SmsPreview } from '../../../../components/workflow/preview';
import { EditVariablesModal } from '../EditVariablesModal';
import { useTemplateEditorForm } from '../TemplateEditorFormProvider';
import { ControlVariablesForm } from '../ControlVariablesForm';

const templateFields = ['content'];

export function TemplateSMSEditor() {
  const [editVariablesModalOpened, setEditVariablesModalOpen] = useState(false);
  const { template } = useTemplateEditorForm();
  const { environment, bridge } = useEnvironment({ bridge: template?.bridge });
  const stepFormPath = useStepFormPath();
  const { control } = useFormContext();
  const variablesArray = useVariablesManager(templateFields);
  const { hasActiveIntegration } = useHasActiveIntegrations({
    channelType: ChannelTypeEnum.SMS,
  });
  const { primaryIntegration } = useGetPrimaryIntegration({
    channelType: ChannelTypeEnum.SMS,
  });
  const { isPreviewLoading, handleContentChange } = useEditTemplateContent();
  const [controlVariables, setControlVariables] = useState();

  return (
    <>
      {!hasActiveIntegration ? <LackIntegrationAlert channelType={ChannelTypeEnum.SMS} /> : null}
      {hasActiveIntegration && !primaryIntegration ? (
        <LackIntegrationAlert
          channelType={ChannelTypeEnum.SMS}
          text={
            `You have multiple provider instances for SMS in the ${environment?.name} environment.` +
            ` Please select the primary instance.`
          }
          isPrimaryMissing
        />
      ) : null}
      <StepSettings />
      <Grid gutter={24}>
        <Grid.Col span={'auto'}>
          <Controller
            name={`${stepFormPath}.template.content` as any}
            defaultValue=""
            control={control}
            render={({ field }) => (
              <Stack spacing={8}>
                <VariableManagementButton
                  openEditVariablesModal={() => {
                    setEditVariablesModalOpen(true);
                  }}
                  label={bridge ? 'Control variables' : undefined}
                />
                <When truthy={!bridge}>
                  <CustomCodeEditor
                    value={(field.value as string) || ''}
                    onChange={(value) => {
                      handleContentChange(value, field.onChange);
                    }}
                  />
                </When>
                <When truthy={bridge}>
                  <ControlVariablesForm
                    onChange={(values) => {
                      setControlVariables(values);
                    }}
                  />
                </When>
              </Stack>
            )}
          />
        </Grid.Col>
        <Grid.Col span={'content'}>
          <SmsPreview controlVariables={controlVariables} showPreviewAsLoading={isPreviewLoading} />
        </Grid.Col>
      </Grid>
      <EditVariablesModal
        open={editVariablesModalOpened}
        setOpen={setEditVariablesModalOpen}
        variablesArray={variablesArray}
      />
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Controller, useFormContext } from 'react-hook-form';
import { ChannelTypeEnum } from '@novu/shared';
import { useState } from 'react';
import { Grid, SegmentedControl, Stack, useMantineTheme } from '@mantine/core';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/templates-store/ChannelNode.tsx
Tamaño: 798 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { NodeProps, Handle, Position, getOutgoers, useReactFlow } from 'react-flow-renderer';

import { NodeStep } from '../../../../components/workflow';

export const ChannelNode = ({ id, data }: NodeProps) => {
  const { getNode, getEdges, getNodes } = useReactFlow();
  const thisNode = getNode(id);
  const isParent = thisNode ? getOutgoers(thisNode, getNodes(), getEdges()).length : false;
  const noChildStyle = isParent ? {} : { border: 'none', background: 'transparent' };

  return (
    <NodeStep
      data={data}
      Icon={data.Icon}
      Handlers={() => {
        return (
          <>
            <Handle type="target" position={Position.Top} />
            <Handle style={noChildStyle} type="source" position={Position.Bottom} />
          </>
        );
      }}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { NodeProps, Handle, Position, getOutgoers, useReactFlow } from 'react-flow-renderer';
import { NodeStep } from '../../../../components/workflow';
export const ChannelNode = ({ id, data }: NodeProps) => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/templates-store/TemplatesStoreModal.tsx
Tamaño: 8165 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { ReactFlowProvider } from 'react-flow-renderer';
import { ActionIcon, Modal, useMantineTheme } from '@mantine/core';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { useNavigate } from 'react-router-dom';
import { Button, colors, shadows, Close } from '@novu/design-system';
import { faFile } from '@fortawesome/free-regular-svg-icons';

import { INotificationTemplateStep, WorkflowCreationSourceEnum } from '@novu/shared';

import {
  CanvasHolder,
  GroupName,
  MadeByNovuStyled,
  ModalBodyHolder,
  NovuButtonHolder,
  TemplateDetails,
  TemplateHeader,
  TemplateItem,
  TemplateName,
  TemplatesDetailsHolder,
  TemplatesGroup,
  TemplatesSidebarHolder,
  TemplateDescription,
  useStyles,
} from './templateStoreStyles';
import { IBlueprintsGrouped, useCreateTemplateFromBlueprint } from '../../../../api/hooks';
import { TriggerNode } from './TriggerNode';
import { ChannelNode } from './ChannelNode';
import { FlowEditor } from '../../../../components/workflow';
import { errorMessage } from '../../../../utils/notifications';
import { parseUrl } from '../../../../utils/routeUtils';
import { ROUTES } from '../../../../constants/routes';
import { useSegment } from '../../../../components/providers/SegmentProvider';
import { IBlueprintTemplate } from '../../../../api/types';
import { TemplateAnalyticsEnum } from '../../constants';
import { FrameworkProjectModalItem } from '../FrameworkProjectWaitList';

const nodeTypes = {
  triggerNode: TriggerNode,
  channelNode: ChannelNode,
};

export interface ITemplatesStoreModalProps {
  general: IBlueprintsGrouped[];
  popular: IBlueprintsGrouped[];
  isOpened: boolean;
  onClose: () => void;
}

export const TemplatesStoreModal = ({ general, popular, isOpened, onClose }: ITemplatesStoreModalProps) => {
  const theme = useMantineTheme();
  const { classes: modalClasses } = useStyles();
  const navigate = useNavigate();
  const [selectedTemplate, setTemplate] = useState(general[0].blueprints[0]);

  const { createTemplateFromBlueprint, isLoading: isCreatingTemplateFromBlueprint } = useCreateTemplateFromBlueprint({
    onSuccess: (template) => {
      navigate(`${parseUrl(ROUTES.WORKFLOWS_EDIT_TEMPLATEID, { templateId: template._id ?? '' })}`);
    },
    onError: () => {
      errorMessage('Something went wrong while creating template from blueprint, please try again later.');
    },
  });

  const segment = useSegment();

  const handleTemplateClick = (template: IBlueprintTemplate) => {
    segment.track('[Template Store] Click Notification Template', {
      templateIdentifier: template.triggers[0]?.identifier,
      location: WorkflowCreationSourceEnum.TEMPLATE_STORE,
    });

    setTemplate(template);
  };

  const handleRedirectToCreateBlankTemplate = (isFromHeader: boolean) => {
    segment.track(TemplateAnalyticsEnum.CREATE_TEMPLATE_CLICK, { isFromHeader });
    navigate(ROUTES.WORKFLOWS_CREATE);
  };

  const handleCreateTemplateClick = (blueprint: IBlueprintTemplate) => {
    segment.track('[Template Store] Click Create Notification Template', {
      templateIdentifier: blueprint.triggers[0]?.identifier,
      location: WorkflowCreationSourceEnum.TEMPLATE_STORE,
    });

    createTemplateFromBlueprint({
      blueprint,
      params: { __source: WorkflowCreationSourceEnum.TEMPLATE_STORE },
    });
  };

  return (
    <Modal
      opened={isOpened}
      withinPortal
      overlayColor={theme.colorScheme === 'dark' ? colors.BGDark : colors.BGLight}
      overlayOpacity={0.7}
      classNames={modalClasses}
      closeOnClickOutside={false}
      withCloseButton={false}
      lockScroll
      closeOnEscape
      sx={{ backdropFilter: 'blur(5px)' }}
      shadow={theme.colorScheme === 'dark' ? shadows.dark : shadows.medium}
      radius="md"
      size="lg"
      onClose={onClose}
    >
      <ModalBodyHolder data-test-id="templates-store-modal">
        <TemplatesSidebarHolder data-test-id="templates-store-modal-sidebar">
          <TemplatesGroup key="blank-workflow">
            <GroupName>Workflow</GroupName>
            <TemplateItem
              key="temp-blank-workflow"
              onClick={() => {
                segment.track('[Template Store] Click Create Notification Template', {
                  templateIdentifier: 'Blank Workflow',
                  location: WorkflowCreationSourceEnum.DROPDOWN,
                });
                handleRedirectToCreateBlankTemplate(false);
              }}
            >
              <FontAwesomeIcon icon={faFile} />
              <span>Blank Workflow</span>
            </TemplateItem>
            <FrameworkProjectModalItem />
          </TemplatesGroup>

          {popular.map((group) => (
            <TemplatesGroup key={group.name}>
              <GroupName>{group.name}</GroupName>
              {group.blueprints.map((template) => {
                return (
                  <TemplateItem key={template.name} onClick={() => handleTemplateClick(template)}>
                    <FontAwesomeIcon icon={template.iconName} />
                    <span>{template.name}</span>
                  </TemplateItem>
                );
              })}
            </TemplatesGroup>
          ))}
          {general.map((group) => (
            <TemplatesGroup key={group.name}>
              <GroupName>{group.name}</GroupName>
              {group.blueprints.map((template) => {
                return (
                  <TemplateItem
                    key={template.name}
                    onClick={() => handleTemplateClick(template)}
                    data-test-id="templates-store-modal-blueprint-item"
                  >
                    <FontAwesomeIcon icon={template.iconName} />
                    <span>{template.name}</span>
                  </TemplateItem>
                );
              })}
            </TemplatesGroup>
          ))}
        </TemplatesSidebarHolder>
        <TemplatesDetailsHolder>
          <TemplateHeader>
            <TemplateDetails>
              <TemplateName key={selectedTemplate.name} data-test-id="templates-store-modal-blueprint-name">
                <FontAwesomeIcon icon={selectedTemplate.iconName} />
                <span>{selectedTemplate.name}</span>
              </TemplateName>
              <TemplateDescription data-test-id="templates-store-modal-blueprint-description">
                {selectedTemplate.description}
              </TemplateDescription>
            </TemplateDetails>
            <ActionIcon variant="transparent" onClick={onClose} sx={{ marginLeft: 'auto' }}>
              <Close />
            </ActionIcon>
          </TemplateHeader>
          <CanvasHolder>
            <ReactFlowProvider>
              <FlowEditor
                key={selectedTemplate._id}
                steps={selectedTemplate.steps as INotificationTemplateStep[]}
                nodeTypes={nodeTypes}
                zoomOnScroll={false}
                zoomOnPinch={false}
                zoomOnDoubleClick={false}
                panOnDrag={false}
                panOnScroll
                preventScrolling={false}
                nodesDraggable={false}
                elementsSelectable={false}
                nodesConnectable={false}
                selectNodesOnDrag={false}
                wrapperStyles={{
                  height: '100%',
                  width: '100%',
                  minHeight: '300px',
                }}
                data-template-store-editor
              />
            </ReactFlowProvider>
            <NovuButtonHolder>
              <MadeByNovuStyled width={104} height={20} />
              <Button
                disabled={isCreatingTemplateFromBlueprint}
                loading={isCreatingTemplateFromBlueprint}
                onClick={() => {
                  handleCreateTemplateClick(selectedTemplate);
                }}
                data-test-id="templates-store-modal-use-template"
              >
                Use template
              </Button>
            </NovuButtonHolder>
          </CanvasHolder>
        </TemplatesDetailsHolder>
      </ModalBodyHolder>
    </Modal>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { ReactFlowProvider } from 'react-flow-renderer';
import { ActionIcon, Modal, useMantineTheme } from '@mantine/core';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { useNavigate } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/templates-store/TriggerNode.tsx
Tamaño: 487 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Handle, NodeProps, Position } from 'react-flow-renderer';

import { BoltOutlinedGradient } from '@novu/design-system';
import { NodeStep } from '../../../../components/workflow';

export const TriggerNode = ({ data }: NodeProps) => {
  return (
    <NodeStep
      data={data}
      Icon={BoltOutlinedGradient}
      Handlers={() => {
        return (
          <>
            <Handle type="source" position={Position.Bottom} />
          </>
        );
      }}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Handle, NodeProps, Position } from 'react-flow-renderer';
import { BoltOutlinedGradient } from '@novu/design-system';
import { NodeStep } from '../../../../components/workflow';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/templates-store/index.ts
Tamaño: 133 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export type { ITemplatesStoreModalProps } from './TemplatesStoreModal';
export { TemplatesStoreModal } from './TemplatesStoreModal';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  type
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/components/templates-store/templateStoreStyles.ts
Tamaño: 2962 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { createStyles } from '@mantine/core';
import styled from '@emotion/styled';

import { colors, MadeByNovu } from '@novu/design-system';

export const ModalBodyHolder = styled.div`
  display: flex;
  height: 100%;
`;

export const TemplatesSidebarHolder = styled.div`
  display: flex;
  flex-direction: column;
  gap: 6px;
  min-width: 200px;
  padding: 6px;
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B20 : colors.BGLight)};
  overflow-y: auto;
`;

export const TemplatesGroup = styled.div`
  display: flex;
  flex-direction: column;
  gap: 6px;
`;

export const GroupItem = styled.div`
  padding: 10px;
`;

export const GroupName = styled(GroupItem)`
  font-weight: 700;
  font-size: 16px;
  line-height: 20px;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B60 : colors.B80)};
`;

export const TemplateItem = styled(GroupItem)`
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 14px;
  font-weight: normal;
  line-height: 20px;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B60)};
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.25s ease;

  > i {
    font-size: 16px;
  }

  &:hover {
    text-shadow: 0px 0px 1px currentColor;
    color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B15)};
    background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B30 : colors.white)};
  }
`;

export const TemplatesDetailsHolder = styled.div`
  display: flex;
  flex-direction: column;
  gap: 20px;
  width: 100%;
  padding: 16px;
`;

export const TemplateHeader = styled.div`
  display: flex;
  gap: 10px;
`;

export const TemplateDetails = styled.div`
  display: flex;
  flex-direction: column;
`;

export const TemplateName = styled.div`
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 16px;
  line-height: 20px;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B60)};

  > i {
    font-size: 18px;
  }
`;

export const CanvasHolder = styled.div`
  position: relative;
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
  width: 100%;
  height: 100%;
`;

export const NovuButtonHolder = styled.div`
  position: absolute;
  bottom: 4px;
  right: 4px;
  z-index: 10000;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
`;

export const MadeByNovuStyled = styled(MadeByNovu)`
  color: ${colors.B60};
`;

export const TemplateDescription = styled.p`
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B40)};
`;

export const useStyles = createStyles((theme) => ({
  inner: {
    alignItems: 'center',
  },
  modal: {
    padding: '0 !important',
    backgroundColor: theme.colorScheme === 'dark' ? colors.B15 : colors.B98,
    overflow: 'hidden',
    width: '62vw',
    height: '72vh',
    maxWidth: 1200,
    minHeight: 520,
    maxHeight: 1000,
  },
  body: {
    height: '100%',
  },
}));


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - TemplatesSidebarHolder(styled.div`
  display: flex;
  flex-direction: column;
  gap: 6px;
  min-width: 200px;
  padding: 6p...)
 - GroupName(styled(GroupItem)`
  font-weight: 700;
  font-size: 16px;
  line-height: 20px;
  color: ${({ theme }...)
 - TemplateItem(styled(GroupItem)`
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 14px;
  font-wei...)
 - TemplateName(styled.div`
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 16px;
  line-height: 20...)
 - TemplateDescription(styled.p`
  color: ${({ theme }))
 - useStyles(createStyles((theme))
Declaraciones 'export' encontradas:
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/editor/DigestWorkflowTourTooltip.tsx
Tamaño: 5546 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { UnstyledButton } from '@mantine/core';
import styled from '@emotion/styled';
import { TooltipRenderProps } from 'react-joyride';
import { useFormContext } from 'react-hook-form';
import { useNavigate, useParams } from 'react-router-dom';
import { StepTypeEnum } from '@novu/shared';

import { Button, colors, DotsNavigation, Clock, LetterOpened, BellWithNotification } from '@novu/design-system';
import { useTour } from './TourProvider';
import { IForm } from '../components/formTypes';
import { useSegment } from '../../../components/providers/SegmentProvider';
import { DigestWorkflowTourAnalyticsEnum, HINT_INDEX_TO_CLICK_ANALYTICS, ordinalNumbers } from '../constants';
import { useBasePath } from '../hooks/useBasePath';
import { useTourStorage } from '../hooks/useTourStorage';

const ICONS = [Clock, LetterOpened, BellWithNotification];
const TITLE = ['Set-up time interval', 'Set-up email content', 'Test your workflow'];
const DESCRIPTION = [
  'Specify for how long the digest should collect events before sending a digested event to the next step step in the workflow.',
  'Use custom HTML or our visual editor to define how the email will look like when sent to the subscriber.',
  'We will trigger the workflow multiple times to represent how it aggregates notifications.',
];

const TooltipHolder = styled.div`
  display: flex;
  flex-direction: column;
  padding: 20px;
  width: 280px;
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B30 : colors.B98)};
  filter: drop-shadow(0px 5px 20px rgba(0, 0, 0, 0.1));
  border-radius: 8px;

  [data-tooltip-icon] {
    width: 80px;
    height: 80px;
    align-self: center;
    margin-top: 20px;
    margin-bottom: 20px;
  }

  @media screen and (min-width: 1440px) {
    padding: 32px;

    [data-tooltip-icon] {
      width: 120px;
      height: 120px;
      margin-top: 40px;
      margin-bottom: 40px;
    }
  }
`;

const Title = styled.p`
  margin: 0;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B30)};
  font-size: 24px;
  font-weight: 700;
`;

const Description = styled.p`
  margin: 12px 0 0 0;
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B80 : colors.B60)};
  font-size: 16px;
`;

const ButtonsHolder = styled.div`
  display: flex;
  gap: 28px;
  margin-top: 24px;
`;

const DotsNavigationStyled = styled(DotsNavigation)`
  margin-top: 24px;
  align-self: center;
`;

const getAnalyticsEvent = (index: number, isFromNavigation: boolean): string | undefined => {
  if (isFromNavigation) {
    return DigestWorkflowTourAnalyticsEnum.NAVIGATE_HINT_CLICK;
  }

  return HINT_INDEX_TO_CLICK_ANALYTICS[index];
};

export const DigestWorkflowTourTooltip = ({
  tooltipProps,
  primaryProps,
  skipProps,
  isLastStep,
  index,
  size,
}: TooltipRenderProps) => {
  const segment = useSegment();
  const { watch } = useFormContext<IForm>();
  const steps = watch('steps');
  const { stopTour, setStep } = useTour();
  const navigate = useNavigate();
  const Icon = ICONS[index];
  const basePath = useBasePath();
  const { templateId = '' } = useParams<{ templateId: string }>();

  const tourStorage = useTourStorage();

  const handleOnClick = (tourStepIndex: number, isFromNavigation = false) => {
    if (tourStepIndex === 0) {
      const digestStep = steps.find((el) => el.template?.type === StepTypeEnum.DIGEST);
      navigate(`${basePath}/${StepTypeEnum.DIGEST}/${digestStep?.uuid}`);
    } else if (tourStepIndex === 1) {
      const emailStep = steps.find((el) => el.template?.type === StepTypeEnum.EMAIL);
      navigate(`${basePath}/${StepTypeEnum.EMAIL}/${emailStep?.uuid}`);
    } else if (tourStepIndex === 2) {
      navigate(`${basePath}/test-workflow`);
    }
    tourStorage.setTour('digest', templateId, tourStepIndex);
    setStep(tourStepIndex);

    const stepIndex = isFromNavigation ? tourStepIndex : index;
    const analyticsEvent = getAnalyticsEvent(stepIndex, isFromNavigation);

    if (analyticsEvent) {
      segment.track(analyticsEvent, { when: ordinalNumbers[stepIndex] });
    }
  };

  const stopTourCallback = () => {
    stopTour();
    tourStorage.deleteTour('digest', templateId);
  };

  const handleSkipClick = () => {
    segment.track(DigestWorkflowTourAnalyticsEnum.HINT_SKIP_TOUR_CLICK, { when: ordinalNumbers[index] });
    stopTourCallback();
  };

  return (
    <TooltipHolder ref={tooltipProps.ref} data-test-id="digest-workflow-tooltip">
      <Icon data-tooltip-icon />
      <Title>{TITLE[index]}</Title>
      <Description>{DESCRIPTION[index]}</Description>
      <ButtonsHolder>
        <Button
          {...primaryProps}
          onClick={() => {
            if (isLastStep) {
              segment.track(DigestWorkflowTourAnalyticsEnum.THIRD_HINT_GOT_IT_CLICK);
              stopTourCallback();

              return;
            }

            handleOnClick(index + 1);
          }}
          data-test-id="digest-workflow-tooltip-primary-button"
        >
          {primaryProps.title}
        </Button>
        {!isLastStep && (
          <UnstyledButton {...skipProps} onClick={handleSkipClick} data-test-id="digest-workflow-tooltip-skip-button">
            {skipProps.title}
          </UnstyledButton>
        )}
      </ButtonsHolder>
      <DotsNavigationStyled
        selectedIndex={index}
        size={size}
        onClick={(num) => {
          if (num === index) return;

          handleOnClick(num, true);
        }}
        testId="digest-workflow-tooltip-dots-navigation"
      />
    </TooltipHolder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { UnstyledButton } from '@mantine/core';
import styled from '@emotion/styled';
import { TooltipRenderProps } from 'react-joyride';
import { useFormContext } from 'react-hook-form';
import { useNavigate, useParams } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/editor/EmailIntegrationInfo.tsx
Tamaño: 782 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ChannelTypeEnum } from '@novu/shared';
import { useIntegrationLimit, useAuth } from '../../../hooks';

export const EmailIntegrationInfo = ({
  integration,
  field = 'from',
}: {
  integration?: {
    credentials: {
      senderName?: string;
      from?: string;
    };
  };
  field: 'from' | 'senderName';
}) => {
  const { isLimitFetchingEnabled, loading } = useIntegrationLimit(ChannelTypeEnum.EMAIL);
  const { currentOrganization } = useAuth();

  if (integration) {
    return <>{integration?.credentials[field]}</>;
  }

  if (loading) {
    return null;
  }

  if (!isLimitFetchingEnabled) {
    return <>No active email integration</>;
  }

  if (field === 'from') {
    return <>no-reply@novu.co</>;
  }

  return <>{currentOrganization?.name || 'Novu'}</>;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ChannelTypeEnum } from '@novu/shared';
import { useIntegrationLimit, useAuth } from '../../../hooks';
export const EmailIntegrationInfo = ({
integration,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/editor/StartFromScratchTourTooltip.styles.tsx
Tamaño: 912 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { colors, DotsNavigation } from '@novu/design-system';

export const TooltipContainer = styled.div<{
  width: React.CSSProperties['width'];
}>`
  display: flex;
  flex-direction: column;
  width: ${({ width }) => width};
  padding: 24px;
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B30 : colors.B98)};
  filter: drop-shadow(0px 5px 20px rgba(0, 0, 0, 0.1));
  border-radius: 8px;
`;

export const DotsNavigationStyled = styled(DotsNavigation)`
  display: flex;
  align-self: center;
`;

export const NavigationItemContainer = styled.div<{ position: React.CSSProperties['justifyContent'] }>`
  display: flex;
  flex-basis: 33%;
  align-items: center;
  justify-content: ${({ position }) => position};
`;

export const IntroStepContainer = styled(TooltipContainer)`
  position: absolute;
  bottom: 20px;
  left: 20px;
  z-index: 100;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { colors, DotsNavigation } from '@novu/design-system';
export const TooltipContainer = styled.div<{
width: React.CSSProperties['width'];
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/editor/StartFromScratchTourTooltip.tsx
Tamaño: 6341 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, Stack, UnstyledButton, useMantineColorScheme } from '@mantine/core';
import { useMutation } from '@tanstack/react-query';
import { TooltipRenderProps } from 'react-joyride';
import { useNavigate, useParams } from 'react-router-dom';
import type { IResponseError, IUserEntity } from '@novu/shared';
import {
  Button,
  colors,
  Text,
  BuildWorkflow,
  Pencil,
  QuickGuide,
  RightArrow,
  RunTestBell,
  WorkflowSettings,
} from '@novu/design-system';
import { useAuth } from '../../../hooks';
import { updateUserOnBoardingTour } from '../../../api/user';
import { useSegment } from '../../../components/providers/SegmentProvider';
import { When } from '../../../components/utils/When';
import { errorMessage } from '../../../utils/notifications';
import { ordinalNumbers, SCRATCH_HINT_INDEX_TO_CLICK_ANALYTICS, StartFromScratchTourAnalyticsEnum } from '../constants';
import { useBasePath } from '../hooks/useBasePath';
import { useTourStorage } from '../hooks/useTourStorage';
import { DotsNavigationStyled, NavigationItemContainer, TooltipContainer } from './StartFromScratchTourTooltip.styles';
import { useTour } from './TourProvider';

const ICONS = [QuickGuide, Pencil, WorkflowSettings, BuildWorkflow, RunTestBell];
const TITLE = [
  'Discover a quick guide',
  'Click to edit workflow name',
  'Verify workflow settings',
  'Build a notification workflow',
  'Run a test or Get Snippet',
];
const DESCRIPTION = [
  'Four simple tips to become a workflow expert.',
  'Specify a name for your workflow here or in the workflow settings.',
  'Manage name, identifier, group and description. Set up channels, active by default.',
  'Add channels you would like to send notifications to. The channels will be inserted to the trigger snippet.',
  'Test a trigger as if it was sent from your API. Deploy it to your App by copy/paste trigger snippet.',
];

const getAnalyticsEvent = (index: number): string | undefined => {
  return SCRATCH_HINT_INDEX_TO_CLICK_ANALYTICS[index];
};

export const StartFromScratchTourTooltip = ({
  tooltipProps,
  primaryProps,
  skipProps,
  isLastStep,
  index,
  size,
}: TooltipRenderProps) => {
  const { mutateAsync: updateOnBoardingTourStatus } = useMutation<
    IUserEntity,
    IResponseError,
    { showOnBoardingTour: number }
  >(({ showOnBoardingTour }) => updateUserOnBoardingTour(showOnBoardingTour), {
    onError: (err) => {
      errorMessage(err?.message);
    },
  });

  const navigate = useNavigate();
  const basePath = useBasePath();

  const { currentUser } = useAuth();
  const { colorScheme } = useMantineColorScheme();
  const isDark = colorScheme === 'dark';
  const segment = useSegment();
  const { stopTour, setStep } = useTour();
  const Icon = ICONS[index];
  const isFirstStep = index === 0;
  const { templateId = '' } = useParams<{ templateId: string }>();

  const tourStorage = useTourStorage();

  const handleOnClick = (tourStepIndex: number, isFromNavigation = false) => {
    if (tourStepIndex === 2) {
      navigate(basePath);
    }
    tourStorage.setTour('scratch', templateId, tourStepIndex);
    setStep(tourStepIndex);

    const stepIndex = isFromNavigation ? tourStepIndex : index;
    const analyticsEvent = getAnalyticsEvent(stepIndex);

    if (analyticsEvent) {
      segment.track(analyticsEvent, { when: ordinalNumbers[stepIndex] });
    }
  };

  const stopTourCallback = () => {
    stopTour();
    tourStorage.deleteTour('scratch', templateId);
  };

  const handleSkipClick = async () => {
    segment.track(StartFromScratchTourAnalyticsEnum.WATCH_LATER_TOUR_CLICK, { when: ordinalNumbers[index] });
    stopTourCallback();
    const currentCount = currentUser?.showOnBoardingTour || 0;
    await updateOnBoardingTourStatus({ showOnBoardingTour: currentCount + 1 || 1 });
  };
  const buttonIconProps = isFirstStep ? {} : { icon: <RightArrow />, iconPosition: 'right' as const };

  return (
    <TooltipContainer
      ref={tooltipProps.ref}
      data-test-id="scratch-workflow-tooltip"
      width={isFirstStep ? '340px' : '400px'}
    >
      <Group spacing={20} noWrap>
        <div>
          <Icon width={64} height={64} style={{ alignSelf: 'center' }} />
        </div>
        <Stack spacing={8}>
          <Text size="lg" color={isDark ? colors.white : colors.B30} data-test-id="scratch-workflow-tooltip-title">
            {TITLE[index]}
          </Text>
          <Text color={isDark ? colors.B80 : colors.B60} data-test-id="scratch-workflow-tooltip-description">
            {DESCRIPTION[index]}
          </Text>
        </Stack>
      </Group>
      <Group align="center" position={isLastStep ? 'right' : 'apart'} mt={24} noWrap spacing={0}>
        {!isLastStep && (
          <NavigationItemContainer position="flex-start">
            <UnstyledButton
              {...skipProps}
              onClick={handleSkipClick}
              data-test-id="scratch-workflow-tooltip-skip-button"
            >
              {skipProps.title}
            </UnstyledButton>
          </NavigationItemContainer>
        )}
        <When truthy={!isFirstStep}>
          <NavigationItemContainer position="center">
            <DotsNavigationStyled
              selectedIndex={index - 1}
              size={size - 1}
              onClick={(num) => {
                const adjustedNum = num + 1;
                if (adjustedNum === index) return;

                handleOnClick(adjustedNum, true);
              }}
              testId="scratch-workflow-tooltip-dots-navigation"
            />
          </NavigationItemContainer>
        </When>
        <NavigationItemContainer position="flex-end">
          <Button
            {...primaryProps}
            {...buttonIconProps}
            onClick={() => {
              if (isLastStep) {
                segment.track(StartFromScratchTourAnalyticsEnum.FIFTH_HINT_GOT_IT_CLICK, {
                  when: ordinalNumbers[index],
                });
                stopTourCallback();
                updateOnBoardingTourStatus({ showOnBoardingTour: 2 });

                return;
              }

              handleOnClick(index + 1);
            }}
            data-test-id="scratch-workflow-tooltip-primary-button"
          >
            {primaryProps.title}
          </Button>
        </NavigationItemContainer>
      </Group>
    </TooltipContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, Stack, UnstyledButton, useMantineColorScheme } from '@mantine/core';
import { useMutation } from '@tanstack/react-query';
import { TooltipRenderProps } from 'react-joyride';
import { useNavigate, useParams } from 'react-router-dom';
import type { IResponseError, IUserEntity } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/editor/TemplateEditorPage.tsx
Tamaño: 3077 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { useNavigate, useLocation, useParams, useSearchParams } from 'react-router-dom';
import { ReactFlowProvider } from 'react-flow-renderer';
import { useFormContext } from 'react-hook-form';

import { isBridgeWorkflow, ResourceTypeEnum } from '@novu/shared';
import PageContainer from '../../../components/layout/components/PageContainer';
import type { IForm } from '../components/formTypes';
import WorkflowEditor from '../workflow/WorkflowEditor';
import { useEnvironment, usePrompt } from '../../../hooks';
import { BlueprintModal } from '../components/BlueprintModal';
import { TemplateEditorFormProvider, useTemplateEditorForm } from '../components/TemplateEditorFormProvider';
import { ROUTES } from '../../../constants/routes';
import { TemplateDetailsPageV2 } from '../editor_v2/TemplateDetailsPageV2';
import { WorkflowDetailFormContextProvider } from '../../../studio/components/workflows/preferences/WorkflowDetailFormContextProvider';

function BaseTemplateEditorPage() {
  const navigate = useNavigate();
  const location = useLocation();
  const { template, isCreating, onSubmit, onInvalid } = useTemplateEditorForm();
  const { environment } = useEnvironment({ bridge: template?.bridge });
  const methods = useFormContext<IForm>();
  const { handleSubmit } = methods;
  const [shouldRenderBlueprintModal, setShouldRenderBlueprintModal] = useState(false);

  const isCreateTemplatePage = location.pathname === ROUTES.WORKFLOWS_CREATE;

  const onSubmitHandler = async (data: IForm) => {
    await onSubmit(data);
  };

  useEffect(() => {
    if (environment && template && template._environmentId) {
      if (environment._id !== template._environmentId) {
        navigate(ROUTES.WORKFLOWS);
      }
    }
  }, [navigate, environment, template]);

  useEffect(() => {
    const id = localStorage.getItem('blueprintId');
    setShouldRenderBlueprintModal(!!id);
  }, []);

  if (environment && environment?.name === 'Production' && isCreateTemplatePage) {
    navigate(ROUTES.WORKFLOWS);
  }

  if (isCreating) return null;

  return (
    <>
      <PageContainer title={template?.name ?? 'Create Template'}>
        <form
          name="template-form"
          noValidate
          onSubmit={handleSubmit(onSubmitHandler, onInvalid)}
          style={{ height: '100%', display: 'grid', gridTemplateColumns: '1fr' }}
        >
          <ReactFlowProvider>
            <WorkflowEditor />
          </ReactFlowProvider>
        </form>
      </PageContainer>
      {shouldRenderBlueprintModal && <BlueprintModal />}
    </>
  );
}

export default function TemplateEditorPage() {
  const [searchParams] = useSearchParams();
  const type = searchParams.get('type');

  if (!type || !isBridgeWorkflow(type as ResourceTypeEnum)) {
    return (
      <TemplateEditorFormProvider>
        <BaseTemplateEditorPage />
      </TemplateEditorFormProvider>
    );
  } else {
    return (
      <WorkflowDetailFormContextProvider>
        <TemplateDetailsPageV2 />
      </WorkflowDetailFormContextProvider>
    );
  }
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect, useState } from 'react';
import { useNavigate, useLocation, useParams, useSearchParams } from 'react-router-dom';
import { ReactFlowProvider } from 'react-flow-renderer';
import { useFormContext } from 'react-hook-form';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/editor/TourProvider.tsx
Tamaño: 2634 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMantineColorScheme } from '@mantine/core';
import React, { useMemo, useCallback } from 'react';
import Joyride from 'react-joyride';
import { colors } from '@novu/design-system';

import { useDigestWorkflowTour } from './useDigestWorkflowTour';
import { useStartFromScratchTour } from './useStartFromScratchTour';

const TourContext = React.createContext({
  startTour: () => {},
  stopTour: () => {},
  stepTourIndex: 0,
  setStep: (index) => {},
});

export const useTour = () => React.useContext(TourContext);

export const TourProvider = React.memo(() => {
  const [{ run, stepTourIndex }, setState] = React.useState<{ run: boolean; stepTourIndex: number }>({
    run: false,
    stepTourIndex: 0,
  });
  const { colorScheme } = useMantineColorScheme();

  const startTour = useCallback(() => {
    setTimeout(() => setState((old) => ({ ...old, run: true })), 0);
  }, []);

  const stopTour = useCallback(() => {
    setTimeout(() => setState((old) => ({ ...old, run: false })), 0);
  }, []);

  const value = useMemo(
    () => ({
      startTour,
      stopTour,
      stepTourIndex,
      setStep: (index) => {
        // give the time for the target to be rendered
        setState((old) => ({ ...old, stepTourIndex: index, run: true }));
      },
    }),
    [startTour, stopTour, stepTourIndex]
  );

  const { digestTourSteps } = useDigestWorkflowTour({ startTour });
  const { startFromScratchTourSteps } = useStartFromScratchTour({ startTour });

  const steps = digestTourSteps.length > 0 ? digestTourSteps : startFromScratchTourSteps;

  const hasSteps = steps.length > 0;
  const shouldRun = run && hasSteps;

  return (
    <TourContext.Provider value={value}>
      <Joyride
        run={shouldRun}
        stepIndex={stepTourIndex}
        steps={steps}
        continuous
        showSkipButton
        disableOverlay={false}
        disableOverlayClose
        disableCloseOnEsc
        beaconComponent={React.forwardRef(() => null)}
        floaterProps={{
          offset: 0,
          styles: {
            floaterWithAnimation: {
              transition: 'opacity .5s ease-out',
            },
          },
        }}
        styles={{
          options: {
            arrowColor: colorScheme === 'dark' ? colors.B30 : colors.B98,
            zIndex: 200,
          },
          tooltipFooter: {
            flexDirection: 'row-reverse',
            justifyContent: 'space-between',
          },
          tooltipFooterSpacer: {
            flex: 'initial',
          },
          spotlight: {
            borderRadius: 8,
          },
        }}
      />
    </TourContext.Provider>
  );
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMantineColorScheme } from '@mantine/core';
import React, { useMemo, useCallback } from 'react';
import Joyride from 'react-joyride';
import { colors } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/editor/useDigestWorkflowTour.tsx
Tamaño: 2134 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useNavigate, useParams } from 'react-router-dom';
import { Step } from 'react-joyride';
import { useFormContext } from 'react-hook-form';
import { StepTypeEnum } from '@novu/shared';
import { useEffectOnce } from '../../../hooks';
import { IForm } from '../components/formTypes';
import { DigestWorkflowTourTooltip } from './DigestWorkflowTourTooltip';
import { useBasePath } from '../hooks/useBasePath';
import { useTourStorage } from '../hooks/useTourStorage';

const digestTourSteps: Step[] = [
  {
    target: '[data-test-id="digest-step-settings-interval"]',
    content: '',
    placement: 'left',
    disableBeacon: true,
    hideBackButton: true,
    tooltipComponent: DigestWorkflowTourTooltip,
    locale: { skip: 'Skip tour' },
    offset: 0,
  },
  {
    target: '[data-test-id="custom-code-editor"]',
    content: '',
    placement: 'right',
    disableBeacon: true,
    hideBackButton: true,
    locale: { skip: 'Skip tour' },
    tooltipComponent: DigestWorkflowTourTooltip,
    offset: 0,
  },
  {
    target: '[data-test-id="test-workflow-btn"]',
    content: '',
    placement: 'top',
    disableBeacon: true,
    hideBackButton: true,
    tooltipComponent: DigestWorkflowTourTooltip,
    locale: { last: 'Got it' },
    offset: 0,
  },
];

export const useDigestWorkflowTour = ({ startTour }: { startTour: () => void }) => {
  const basePath = useBasePath();
  const { watch } = useFormContext<IForm>();
  const steps = watch('steps');
  const navigate = useNavigate();
  const tourStorage = useTourStorage();
  const { templateId = '' } = useParams<{ templateId: string }>();
  const isTouring = tourStorage.getCurrentTour('digest', templateId) > -1;

  useEffectOnce(
    () => {
      // once there are steps select the node with type DIGEST and start the tour
      const digestStep = steps.find((step) => step.template?.type === StepTypeEnum.DIGEST);
      if (digestStep) {
        navigate(`${basePath}/${StepTypeEnum.DIGEST}/${digestStep?.uuid}`);
        startTour();
      }
    },
    isTouring && steps.length > 0
  );

  return {
    digestTourSteps: isTouring ? digestTourSteps : [],
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useNavigate, useParams } from 'react-router-dom';
import { Step } from 'react-joyride';
import { useFormContext } from 'react-hook-form';
import { StepTypeEnum } from '@novu/shared';
import { useEffectOnce } from '../../../hooks';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/editor/useStartFromScratchTour.tsx
Tamaño: 2310 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Step } from 'react-joyride';
import { useParams } from 'react-router-dom';
import { useAuth, useEffectOnce } from '../../../hooks';
import { useTourStorage } from '../hooks/useTourStorage';
import { StartFromScratchTourTooltip } from './StartFromScratchTourTooltip';

const StartFromScratchTourSteps: Step[] = [
  {
    target: '[class="react-flow__controls"]',
    content: '',
    placement: 'right-end',
    disableBeacon: true,
    hideBackButton: true,
    tooltipComponent: StartFromScratchTourTooltip,
    locale: { skip: 'Watch later', next: 'Show me' },
    offset: 0,
    floaterProps: {
      hideArrow: true,
    },
    disableOverlay: true,
  },
  {
    target: '[data-test-id="name-input"]',
    content: '',
    placement: 'left',
    disableBeacon: true,
    hideBackButton: true,
    tooltipComponent: StartFromScratchTourTooltip,
    locale: { skip: 'Watch later' },
    offset: 0,
  },
  {
    target: '[data-test-id="settings-page"]',
    content: '',
    placement: 'left',
    disableBeacon: true,
    hideBackButton: true,
    locale: { skip: 'Watch later' },
    tooltipComponent: StartFromScratchTourTooltip,
    offset: 0,
  },
  {
    target: '[data-test-id="button-add"]',
    content: '',
    placement: 'bottom',
    disableBeacon: true,
    hideBackButton: true,
    tooltipComponent: StartFromScratchTourTooltip,
    locale: { skip: 'Watch later' },
    offset: 0,
  },
  {
    target: '[data-test-id="node-triggerSelector"]',
    content: '',
    placement: 'left',
    disableBeacon: true,
    hideBackButton: true,
    tooltipComponent: StartFromScratchTourTooltip,
    locale: { last: 'Got it' },
    offset: 0,
  },
];

export const useStartFromScratchTour = ({ startTour }: { startTour: () => void }) => {
  const { currentUser } = useAuth();

  const tourStorage = useTourStorage();
  const { templateId = '' } = useParams<{ templateId: string }>();
  const isDigestTouring = tourStorage.getCurrentTour('digest', templateId) > -1;

  useEffectOnce(() => {
    const showOnboardingTour = currentUser?.showOnBoardingTour ?? 0;
    if (showOnboardingTour < 2 && !isDigestTouring && currentUser) {
      startTour();
    }
  }, !isDigestTouring && !!currentUser);

  return {
    startFromScratchTourSteps: !isDigestTouring ? StartFromScratchTourSteps : [],
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Step } from 'react-joyride';
import { useParams } from 'react-router-dom';
import { useAuth, useEffectOnce } from '../../../hooks';
import { useTourStorage } from '../hooks/useTourStorage';
import { StartFromScratchTourTooltip } from './StartFromScratchTourTooltip';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/editor_v2/CloudWorkflowSettingsSidePanel.tsx
Tamaño: 1873 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FC, useEffect } from 'react';

import { Sidebar } from '@novu/design-system';
import { Title } from '@novu/novui';
import { css } from '@novu/novui/css';
import { useFormContext } from 'react-hook-form';
import { useParams, useSearchParams } from 'react-router-dom';
import { ResourceTypeEnum } from '@novu/shared';
import { useCloudWorkflowPreferences } from '../../../hooks/workflowPreferences/useCloudWorkflowPreferences';
import { WorkflowDetailFormContext } from '../../../studio/components/workflows/preferences/WorkflowDetailFormContextProvider';
import { WorkflowSettingsSidePanelContent } from '../../../studio/components/workflows/preferences/WorkflowSettingsSidePanelContent';

type CloudWorkflowSettingsSidePanelProps = { onClose: () => void };

export const CloudWorkflowSettingsSidePanel: FC<CloudWorkflowSettingsSidePanelProps> = ({ onClose }) => {
  const { templateId: workflowId = '' } = useParams<{ templateId: string }>();
  const [searchParams] = useSearchParams();
  const { isLoading, workflowUserPreferences, workflowResourcePreferences } = useCloudWorkflowPreferences(workflowId);
  const { setValue, getValues } = useFormContext<WorkflowDetailFormContext>();

  useEffect(() => {
    if (workflowUserPreferences !== undefined && getValues('preferences') === undefined) {
      setValue('preferences', workflowUserPreferences, { shouldDirty: false });
    }
  }, [setValue, workflowUserPreferences]);

  return (
    <Sidebar customHeader={<Title variant="section">Workflow settings</Title>} isOpened onClose={onClose}>
      <div className={css({ colorPalette: 'mode.local' })}>
        <WorkflowSettingsSidePanelContent
          isLoading={isLoading}
          workflowType={searchParams.get('type') as ResourceTypeEnum}
          workflowResourcePreferences={workflowResourcePreferences}
        />
      </div>
    </Sidebar>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FC, useEffect } from 'react';
import { Sidebar } from '@novu/design-system';
import { Title } from '@novu/novui';
import { css } from '@novu/novui/css';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/editor_v2/TemplateDetailsPageV2.tsx
Tamaño: 4724 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Button, IconButton } from '@novu/novui';
import { css } from '@novu/novui/css';
import { IconCable, IconPlayArrow, IconSave, IconSettings } from '@novu/novui/icons';
import { HStack } from '@novu/novui/jsx';
import { useCallback, useEffect, useState } from 'react';
import { useLocation, useNavigate, useParams, useSearchParams } from 'react-router-dom';
import { ROUTES } from '../../../constants/routes';
import { useTelemetry } from '../../../hooks/useNovuAPI';
import { OutlineButton } from '../../../studio/components/OutlineButton';
import { WorkflowsPageTemplate } from '../../../studio/components/workflows/layout';
import { WorkflowBackgroundWrapper } from '../../../studio/components/workflows/node-view/WorkflowBackgroundWrapper';
import { WorkflowFloatingMenu } from '../../../studio/components/workflows/node-view/WorkflowFloatingMenu';
import { WorkflowNodes } from '../../../studio/components/workflows/node-view/WorkflowNodes';
import { parseUrl } from '../../../utils/routeUtils';
import { useTemplateController } from '../components/useTemplateController';
import { CloudWorkflowSettingsSidePanel } from './CloudWorkflowSettingsSidePanel';
import { useWorkflowDetailPageForm } from './useWorkflowDetailPageForm';
import { WorkflowSettingsPanelTab } from '../../../studio/components/workflows/preferences';

export const TemplateDetailsPageV2 = () => {
  const { templateId = '' } = useParams<{ templateId: string }>();
  const track = useTelemetry();
  const [searchParams] = useSearchParams();
  const location = useLocation();
  const navigate = useNavigate();
  const { template: workflow } = useTemplateController(templateId);

  const { submitWorkflow, isSubmitting, hasChanges, workflowName, isValid } = useWorkflowDetailPageForm({
    templateId,
    workflow,
  });

  const [isPanelOpen, setPanelOpen] = useState<boolean>(searchParams.has('settings'));

  const togglePanel = useCallback(() => {
    setPanelOpen((prev) => {
      const newSearchParams = new URLSearchParams(searchParams);

      if (prev) {
        newSearchParams.delete('settings');
      } else {
        newSearchParams.set('settings', WorkflowSettingsPanelTab.GENERAL);
      }

      navigate({
        pathname: location.pathname,
        search: newSearchParams.toString(),
      });

      return !prev;
    });
  }, [location.pathname, navigate, searchParams]);

  const title = workflowName || workflow?.name || '';

  const workflowBackgroundWrapperClass = css({
    mx: '0',
  });

  const handleTestClick = () => {
    navigate(parseUrl(ROUTES.WORKFLOWS_V2_TEST, { templateId }));
  };

  useEffect(() => {
    track('Workflow open - [Studio]', {
      workflowId: workflow?.name,
      env: 'cloud',
    });
  }, []);

  return (
    <form name="workflow-form" noValidate onSubmit={submitWorkflow} className={css({ height: 'full' })}>
      <WorkflowsPageTemplate
        className={css({ p: 0, paddingBlockStart: 0, overflowY: 'auto' })}
        icon={<IconCable size="32" />}
        title={title}
        actions={
          <HStack gap="75">
            <Button type={'submit'} disabled={!hasChanges || !isValid} Icon={IconSave} loading={isSubmitting}>
              Save
            </Button>
            <OutlineButton Icon={IconPlayArrow} onClick={handleTestClick}>
              Test workflow
            </OutlineButton>
            <IconButton Icon={IconSettings} onClick={togglePanel} />
          </HStack>
        }
      >
        <WorkflowBackgroundWrapper className={workflowBackgroundWrapperClass}>
          <WorkflowNodes
            steps={
              workflow?.steps?.map((item) => {
                return {
                  stepId: item.stepId,
                  type: item.template?.type,
                };
              }) || []
            }
            onStepClick={(step) => {
              navigate(
                parseUrl(ROUTES.WORKFLOWS_V2_STEP_EDIT, {
                  templateId: workflow?._id as string,
                  stepId: step.stepId,
                })
              );
            }}
            onTriggerClick={() => {
              navigate(
                parseUrl(ROUTES.WORKFLOWS_V2_TEST, {
                  templateId: workflow?._id as string,
                })
              );
            }}
          />
        </WorkflowBackgroundWrapper>
        <WorkflowFloatingMenu
          className={css({
            zIndex: 'docked',
            position: 'fixed',
            // TODO: need to talk with Nik about how to position this
            top: '[182px]',
            right: '50',
          })}
        />
        {isPanelOpen && <CloudWorkflowSettingsSidePanel onClose={togglePanel} />}
      </WorkflowsPageTemplate>
    </form>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Button, IconButton } from '@novu/novui';
import { css } from '@novu/novui/css';
import { IconCable, IconPlayArrow, IconSave, IconSettings } from '@novu/novui/icons';
import { HStack } from '@novu/novui/jsx';
import { useCallback, useEffect, useState } from 'react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/editor_v2/TemplateStepEditorV2.tsx
Tamaño: 3530 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { useMutation, useQuery } from '@tanstack/react-query';
import { errorMessage, IconPlayArrow, successMessage } from '@novu/design-system';
import { useTemplateController } from '../components/useTemplateController';
import { parseUrl } from '../../../utils/routeUtils';
import { api } from '../../../api/api.client';
import { ROUTES } from '../../../constants/routes';
import { useControlsHandler } from '../../../hooks/workflow/useControlsHandler';
import { WorkflowsStepEditor } from '../../../components/workflow_v2/StepEditorComponent';
import { StepIcon, WorkflowsPageTemplate } from '../../../studio/components/workflows/layout/WorkflowsPageTemplate';
import { OutlineButton } from '../../../studio/components/OutlineButton';

export const WorkflowsStepEditorPageV2 = () => {
  const navigate = useNavigate();
  const { templateId = '', stepId: paramStepId = '' } = useParams<{ templateId: string; stepId: string }>();
  const { template } = useTemplateController(templateId);
  const currentWorkflow = template;
  const currentStepId = paramStepId;

  let step = (currentWorkflow?.steps as any)?.find((item) => item.stepId === currentStepId);
  step = step?.template ? step : { ...step, template: step };

  const workflowId = (currentWorkflow?.triggers as any)?.[0]?.identifier;
  const {
    data: controlVariables,
    isInitialLoading,
    refetch,
  } = useQuery(
    ['controls', workflowId, currentStepId],
    () => api.get(`/v1/bridge/controls/${workflowId}/${currentStepId}`),
    {
      enabled: !!currentWorkflow,
    }
  );

  const {
    preview,
    isLoading: loadingPreview,
    error,
    controls,
    setControls,
    onControlsChange,
  } = useControlsHandler(
    (data) => api.post(`/v1/bridge/preview/${workflowId}/${currentStepId}`, data),
    workflowId as string,
    currentStepId,
    'dashboard'
  );

  const { mutateAsync: saveControls, isLoading: isSavingControls } = useMutation((data) =>
    api.put(`/v1/bridge/controls/${workflowId}/${currentStepId}`, { variables: data })
  );

  useEffect(() => {
    if (!currentWorkflow) return;
    if (!isInitialLoading) {
      setControls(controlVariables?.controls);
    }
  }, [currentWorkflow, isInitialLoading, controlVariables, setControls]);

  const handleTestClick = async () => {
    navigate(parseUrl(ROUTES.WORKFLOWS_V2_TEST, { templateId }));
  };

  const onControlsSave = async () => {
    try {
      await saveControls(controls as any);
      refetch();
      successMessage('Successfully saved controls');
    } catch (err: unknown) {
      if (err instanceof Error) {
        errorMessage(err?.message || 'Failed to save controls');
      }
    }
  };

  if (isInitialLoading || !template) return null;

  return (
    <WorkflowsPageTemplate
      title={step.stepId}
      icon={<StepIcon type={step?.template?.type} size="32" />}
      actions={
        <OutlineButton Icon={IconPlayArrow} onClick={handleTestClick}>
          Test workflow
        </OutlineButton>
      }
    >
      <WorkflowsStepEditor
        workflow={template}
        step={{ stepId: step.stepId, ...step.template }}
        preview={preview}
        loadingPreview={loadingPreview}
        isSavingControls={isSavingControls}
        error={error}
        defaultControls={controlVariables?.controls || {}}
        onControlsChange={onControlsChange}
        onControlsSave={onControlsSave}
      />
    </WorkflowsPageTemplate>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect, useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { useMutation, useQuery } from '@tanstack/react-query';
import { errorMessage, IconPlayArrow, successMessage } from '@novu/design-system';
import { useTemplateController } from '../components/useTemplateController';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/editor_v2/useWorkflowDetailPageForm.ts
Tamaño: 2542 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { INotificationTemplate } from '@novu/shared';
import { useFormContext, SubmitHandler, useWatch } from 'react-hook-form';
import { captureException } from '@sentry/react';
import { useUpdateTemplate } from '../../../api/hooks';
import { useUpdateWorkflowPreferences } from '../../../hooks/workflowPreferences/useUpdateWorkflowPreferences';
import { WorkflowDetailFormContext } from '../../../studio/components/workflows/preferences/WorkflowDetailFormContextProvider';
import { errorMessage, successMessage } from '../../../utils/notifications';
import { useEffectOnce } from '../../../hooks';

type UseWorkflowDetailPageFormProps = {
  templateId: string;
  workflow: INotificationTemplate | undefined;
};

export const useWorkflowDetailPageForm = ({ templateId, workflow }: UseWorkflowDetailPageFormProps) => {
  const {
    formState: { dirtyFields, isValid },
    resetField,
    reset,
    handleSubmit,
    getValues,
  } = useFormContext<WorkflowDetailFormContext>();

  const workflowName = useWatch({ name: 'general.name' });

  const { updateWorkflowPreferences, isLoading: isUpdatingPreferences } = useUpdateWorkflowPreferences(templateId, {
    onSuccess: () => {
      resetField('preferences');
    },
  });
  const { updateTemplateMutation, isLoading: isUpdatingGeneralSettings } = useUpdateTemplate({
    onSuccess: () => {
      resetField('general');
    },
  });

  const hasChanges = Object.keys(dirtyFields).length > 0;

  const onSubmit: SubmitHandler<WorkflowDetailFormContext> = async (data) => {
    try {
      if (dirtyFields?.general) {
        const { workflowId, ...templateValues } = getValues('general');
        await updateTemplateMutation({ id: templateId, data: { ...templateValues, identifier: workflowId } });
      }

      if (dirtyFields?.preferences) {
        await updateWorkflowPreferences(getValues('preferences'));
      }

      successMessage('Workflow updated successfully');

      reset(data);
    } catch (e: any) {
      errorMessage(e.message || 'Unexpected error occurred');
      captureException(e);
    }
  };

  useEffectOnce(() => {
    if (!workflow) return;

    reset({
      general: {
        workflowId: workflow.triggers?.[0]?.identifier ?? '',
        name: workflow.name,
        description: workflow.description,
        tags: workflow.tags || [],
      },
    });
  }, !!workflow);

  return {
    submitWorkflow: handleSubmit(onSubmit),
    hasChanges,
    isValid,
    isSubmitting: isUpdatingGeneralSettings || isUpdatingPreferences,
    workflowName,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useWorkflowDetailPageForm({ templateId, workflow }: UseWorkflowDetailPageFormProps))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useBasePath.ts
Tamaño: 195 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useParams } from 'react-router-dom';

export const useBasePath = () => {
  const { templateId = '' } = useParams<{ templateId: string }>();

  return `/workflows/edit/${templateId}`;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useBasePath())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useCreate.ts
Tamaño: 1490 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { INotificationTrigger, WorkflowCreationSourceEnum } from '@novu/shared';
import { IForm } from '../components/formTypes';
import { mapFormToCreateNotificationTemplate } from '../components/templateToFormMappers';
import { useTemplateController } from '../components/useTemplateController';

export const useCreate = (
  templateId: string,
  groups: { _id: string }[],
  setTrigger: (trigger: INotificationTrigger) => void,
  getValues: () => IForm
) => {
  const navigate = useNavigate();
  const { createNotificationTemplate } = useTemplateController(templateId);

  useEffect(() => {
    if (!!templateId || !groups || groups.length === 0 || localStorage.getItem('blueprintId') !== null) {
      return;
    }

    const values = getValues();

    if (!values.notificationGroupId) {
      values.notificationGroupId = groups[0]._id;
    }

    const submit = async () => {
      const payloadToCreate = mapFormToCreateNotificationTemplate(values);
      const response = await createNotificationTemplate({
        template: {
          ...payloadToCreate,
          active: true,
          draft: false,
        },
        params: {
          __source: WorkflowCreationSourceEnum.EDITOR,
        },
      });
      setTrigger(response.triggers[0]);
      navigate(`/workflows/edit/${response._id || ''}`);
    };

    submit();
  }, [templateId, groups, localStorage.getItem('blueprintId')]);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useCreate(templateId: string,
  groups: { _id: string }[],
  setTrigger: (trigger: INotificationTrigger))
 - submit(async ())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useEditTemplateContent.ts
Tamaño: 488 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { useTimeout } from '@mantine/hooks';

export function useEditTemplateContent() {
  const [isPreviewLoading, setIsPreviewLoading] = useState(false);

  const { start, clear } = useTimeout(() => setIsPreviewLoading(false), 1000);

  const handleContentChange = (value: string, onChange: (string) => void) => {
    setIsPreviewLoading(true);
    clear();
    onChange(value);
    start();
  };

  return { handleContentChange, isPreviewLoading };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useEditTemplateContent()
Asignaciones con arrow functions encontradas (posibles funciones):
 - handleContentChange(value: string, onChange: (string))
Declaraciones 'export' encontradas:
- export function useEditTemplateContent

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useFilterPartsList.ts
Tamaño: 1735 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useMemo } from 'react';
import { FilterPartTypeEnum, FILTER_TO_LABEL } from '@novu/shared';

import type { DataSelect, IFilterTypeList } from '../../../components/conditions';
import { channels } from '../../../utils/channels';
import { useStepsBefore } from './useStepsBefore';

const FILTER_PART_LIST: IFilterTypeList[] = [
  { value: FilterPartTypeEnum.PAYLOAD, label: FILTER_TO_LABEL[FilterPartTypeEnum.PAYLOAD] },
  {
    value: FilterPartTypeEnum.SUBSCRIBER,
    label: FILTER_TO_LABEL[FilterPartTypeEnum.SUBSCRIBER],
  },
  { value: FilterPartTypeEnum.TENANT, label: FILTER_TO_LABEL[FilterPartTypeEnum.TENANT] },
  { value: FilterPartTypeEnum.WEBHOOK, label: FILTER_TO_LABEL[FilterPartTypeEnum.WEBHOOK] },
  { value: FilterPartTypeEnum.IS_ONLINE, label: FILTER_TO_LABEL[FilterPartTypeEnum.IS_ONLINE] },
  {
    value: FilterPartTypeEnum.IS_ONLINE_IN_LAST,
    label: FILTER_TO_LABEL[FilterPartTypeEnum.IS_ONLINE_IN_LAST],
  },
];

export const useFilterPartsList = ({ index = 0 }: { index?: number }) => {
  const stepsBeforeSelectedStep = useStepsBefore({ index });

  return useMemo(() => {
    const filterPartsList = [...FILTER_PART_LIST];
    if (stepsBeforeSelectedStep.length === 0) {
      return filterPartsList;
    }

    const data = stepsBeforeSelectedStep.map((item) => {
      const label = channels.find((channel) => channel.channelType === item.template.type)?.label;

      return {
        label: item.name ?? label,
        value: item.uuid,
      };
    }) as DataSelect[];

    filterPartsList.push({
      value: FilterPartTypeEnum.PREVIOUS_STEP,
      label: FILTER_TO_LABEL[FilterPartTypeEnum.PREVIOUS_STEP],
      data,
    });

    return filterPartsList;
  }, [stepsBeforeSelectedStep]);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - index(0 }: { index?: number }))
 - stepsBeforeSelectedStep(useStepsBefore({ index });

  return useMemo(())
 - data(stepsBeforeSelectedStep.map((item))
 - label(channels.find((channel))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useNavigateFromEditor.ts
Tamaño: 1744 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useFormContext } from 'react-hook-form';
import { useLocation, useNavigate, useParams } from 'react-router-dom';
import { StepTypeEnum } from '@novu/shared';

import { useEffect } from 'react';
import type { IForm } from '../components/formTypes';
import { useBasePath } from './useBasePath';
import { useStepIndex } from './useStepIndex';

export const useNavigateFromEditor = (preview = false) => {
  const {
    channel,
    stepUuid = '',
    variantUuid = '',
  } = useParams<{
    channel: StepTypeEnum | undefined;
    stepUuid: string;
    variantUuid: string;
  }>();
  const { watch } = useFormContext<IForm>();
  const steps = watch('steps');
  const navigate = useNavigate();
  const { pathname } = useLocation();
  const workflowEditorPath = useBasePath();

  const areStepsExists = steps.length > 0;
  const { stepIndex, variantIndex } = useStepIndex();
  const isStepExists = stepIndex > -1;
  const isVariantExists = typeof variantIndex !== 'undefined' && variantIndex > -1;
  const isDigestOrDelay = channel === StepTypeEnum.DIGEST || channel === StepTypeEnum.DELAY;

  const shouldNavigateToPreview = preview && !isDigestOrDelay;
  const stepEditorPath = `${workflowEditorPath}/${channel}/${stepUuid}${shouldNavigateToPreview ? '/preview' : ''}`;

  useEffect(() => {
    if (!areStepsExists) {
      return;
    }

    if (!isStepExists) {
      navigate(workflowEditorPath);
    }

    const isNotStepEditorPath = pathname !== stepEditorPath;
    const isStepWithNoVariant = isStepExists && !isVariantExists;
    if (isStepWithNoVariant && isNotStepEditorPath) {
      navigate(stepEditorPath);
    }
  }, [navigate, areStepsExists, isStepExists, isVariantExists, workflowEditorPath, pathname, stepEditorPath]);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - preview(false))
 - stepEditorPath(`${workflowEditorPath}/${channel}/${stepUuid}${shouldNavigateToPreview ? '/preview' : ''}`;

  useEf...)
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useNavigateToStepEditor.ts
Tamaño: 700 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useNavigate, useParams } from 'react-router-dom';
import { StepTypeEnum } from '@novu/shared';

import { useBasePath } from './useBasePath';

export const useNavigateToStepEditor = () => {
  const basePath = useBasePath();
  const navigate = useNavigate();
  const { channel, stepUuid, variantUuid } = useParams<{
    channel: StepTypeEnum;
    stepUuid: string;
    variantUuid: string;
  }>();

  const navigateToStepEditor = () => {
    const isVariant = !!variantUuid;
    let navigatePath = `${basePath}/${channel}/${stepUuid}`;
    if (isVariant) {
      navigatePath += `/variants/${variantUuid}`;
    }

    navigate(navigatePath);
  };

  return {
    navigateToStepEditor,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useNavigateToStepEditor())
 - navigateToStepEditor())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useNavigateToVariantPreview.ts
Tamaño: 1101 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useCallback } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import { StepTypeEnum } from '@novu/shared';
import { ROUTES } from '../../../constants/routes';

import { parseUrl } from '../../../utils/routeUtils';

export const useNavigateToVariantPreview = () => {
  const {
    templateId = '',
    channel = '',
    stepUuid = '',
    variantUuid = '',
  } = useParams<{ templateId: string; channel: StepTypeEnum; stepUuid: string; variantUuid: string }>();
  const navigate = useNavigate();

  const navigateToVariantPreview = useCallback(
    (
      params: {
        templateId?: string;
        channel?: StepTypeEnum;
        stepUuid?: string;
        variantUuid?: string;
      } = {}
    ) => {
      navigate(
        parseUrl(ROUTES.WORKFLOWS_VARIANT_PREVIEW, {
          templateId: params.templateId ?? templateId,
          channel: params.channel ?? channel,
          stepUuid: params.stepUuid ?? stepUuid,
          variantUuid: params.variantUuid ?? variantUuid,
        })
      );
    },
    []
  );

  return { navigateToVariantPreview };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useNavigateToVariantPreview())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/usePreviewChatTemplate.ts
Tamaño: 1406 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { useFormContext } from 'react-hook-form';

import { usePreviewChat } from '../../../api/hooks';
import { useProcessVariables } from '../../../hooks';
import { IForm } from '../components/formTypes';
import { useStepFormCombinedErrors } from './useStepFormCombinedErrors';
import { useStepFormPath } from './useStepFormPath';

export const usePreviewChatTemplate = ({ disabled, locale }: { disabled: boolean; locale?: string }) => {
  const { watch } = useFormContext<IForm>();
  const path = useStepFormPath();
  const templateContent = watch(`${path}.template.content`) as string;
  const variables = watch(`${path}.template.variables`);
  const processedVariables = useProcessVariables(variables);
  const [previewContent, setPreviewContent] = useState(templateContent);
  const templateError = useStepFormCombinedErrors();

  const { isLoading, getChatPreview } = usePreviewChat({
    onSuccess: (result) => {
      setPreviewContent(result.content);
    },
  });

  useEffect(() => {
    if (disabled) return;

    getChatPreview({
      content: templateContent,
      payload: JSON.parse(processedVariables),
      locale,
    });
  }, [locale, disabled, templateContent, processedVariables, getChatPreview]);

  const isPreviewContentLoading = !templateError && isLoading;

  return { previewContent, isPreviewContentLoading, templateError };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - usePreviewChatTemplate({ disabled, locale }: { disabled: boolean; locale?: string }))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/usePreviewEmailTemplate.ts
Tamaño: 2094 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useCallback, useEffect, useState } from 'react';
import { useFormContext } from 'react-hook-form';

import { usePreviewEmail } from '../../../api/hooks';
import { IForm } from '../components/formTypes';
import { useStepFormCombinedErrors } from './useStepFormCombinedErrors';
import { useStepFormPath } from './useStepFormPath';
import { parsePayload } from '../../../utils';

export const usePreviewEmailTemplate = ({ locale, payload }: { locale?: string; payload: string }) => {
  const { watch } = useFormContext<IForm>();
  const path = useStepFormPath();
  const subject = watch(`${path}.template.subject`);
  const contentType = watch(`${path}.template.contentType`);
  const htmlContent = watch(`${path}.template.htmlContent`);
  const editorContent = watch(`${path}.template.content`);
  const layoutId = watch(`${path}.template.layoutId`);

  const [previewState, setParsedPreviewState] = useState({
    subject,
    content: '<html><head></head><body><div></div></body></html>',
  });
  const templateError = useStepFormCombinedErrors();

  const { isLoading, getEmailPreview } = usePreviewEmail({
    onSuccess: (result) => {
      setParsedPreviewState({
        content: result.html,
        subject: result.subject,
      });
    },
  });

  const getEmailPreviewCallback = useCallback(
    (payloadArg: string) => {
      const content = contentType === 'editor' ? editorContent : htmlContent;
      if (!content) return;

      getEmailPreview({
        contentType,
        content,
        layoutId,
        payload: parsePayload(payloadArg),
        subject: subject ?? '',
        locale,
      });
    },
    [contentType, editorContent, htmlContent, layoutId, subject, locale, getEmailPreview]
  );

  useEffect(() => {
    getEmailPreviewCallback(payload);
  }, [getEmailPreviewCallback, locale, payload]);

  const isPreviewContentLoading = !templateError && isLoading;

  return {
    getEmailPreview: getEmailPreviewCallback,
    previewContent: previewState.content,
    subject: previewState.subject,
    isPreviewContentLoading,
    templateError,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - usePreviewEmailTemplate({ locale, payload }: { locale?: string; payload: string }))
 - getEmailPreviewCallback(useCallback(
    (payloadArg: string))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/usePreviewInAppTemplate.ts
Tamaño: 2046 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { IMessageButton } from '@novu/shared';
import { useCallback, useEffect, useState } from 'react';
import { useFormContext } from 'react-hook-form';
import { usePreviewInApp } from '../../../api/hooks';
import { useProcessVariables } from '../../../hooks';
import { IForm } from '../components/formTypes';
import { useStepFormCombinedErrors } from './useStepFormCombinedErrors';
import { useStepFormPath } from './useStepFormPath';
import { parsePayload } from '../../../utils';

export type ParsedPreviewStateType = {
  subject?: string;
  avatar?: string;
  ctaButtons: IMessageButton[];
  content: string;
};

export const usePreviewInAppTemplate = ({ locale }: { locale?: string }) => {
  const { watch } = useFormContext<IForm>();
  const path = useStepFormPath();
  const templateError = useStepFormCombinedErrors();
  const templateContent = watch(`${path}.template.content`);
  const templateCta = watch(`${path}.template.cta`);
  const variables = watch(`${path}.template.variables`);
  const payload = useProcessVariables(variables);

  const [parsedPreviewState, setParsedPreviewState] = useState<ParsedPreviewStateType>({
    ctaButtons: [],
    content: '',
  });

  const { isLoading, getInAppPreview } = usePreviewInApp({
    onSuccess: (result) => {
      setParsedPreviewState({
        content: result.content,
        ctaButtons: result.ctaButtons,
      });
    },
  });

  const getInAppPreviewCallback = useCallback(
    (payloadArg: string) => {
      if (!templateContent) return;

      getInAppPreview({
        locale,
        content: templateContent as string,
        payload: parsePayload(payloadArg),
        cta: templateCta,
      });
    },
    [getInAppPreview, locale, templateCta, templateContent]
  );

  useEffect(() => {
    getInAppPreviewCallback(payload);
  }, [getInAppPreviewCallback, locale, payload]);

  const isPreviewLoading = !templateError && isLoading;

  return {
    parsedPreviewState,
    isPreviewLoading,
    templateError,
    parseInAppContent: getInAppPreviewCallback,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - usePreviewInAppTemplate({ locale }: { locale?: string }))
 - getInAppPreviewCallback(useCallback(
    (payloadArg: string))
Declaraciones 'export' encontradas:
- export  type
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/usePreviewPushTemplate.ts
Tamaño: 1629 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { useFormContext } from 'react-hook-form';

import { usePreviewPush } from '../../../api/hooks';
import { useDataRef, useProcessVariables } from '../../../hooks';
import { IForm } from '../components/formTypes';
import { useStepFormCombinedErrors } from './useStepFormCombinedErrors';
import { useStepFormPath } from './useStepFormPath';

export const usePreviewPushTemplate = ({ disabled, locale }: { disabled: boolean; locale?: string }) => {
  const { watch } = useFormContext<IForm>();
  const path = useStepFormPath();
  const templateError = useStepFormCombinedErrors();
  const templateContent = watch(`${path}.template.content`);
  const templateTitle = watch(`${path}.template.title`);
  const templateVariables = watch(`${path}.template.variables`);

  const [parsedPreviewState, setParsedPreviewState] = useState({
    title: templateTitle,
    content: templateContent as string,
  });

  const processedVariables = useProcessVariables(templateVariables);

  const { isLoading, getPushPreview } = usePreviewPush({
    onSuccess: (result) => {
      setParsedPreviewState({
        content: result.content,
        title: result.title,
      });
    },
  });

  useEffect(() => {
    if (disabled) return;

    getPushPreview({
      locale,
      content: templateContent,
      payload: processedVariables,
      title: templateTitle,
    });
  }, [getPushPreview, disabled, locale, templateContent, processedVariables, templateTitle]);

  const isPreviewLoading = !templateError && isLoading;

  return { parsedPreviewState, isPreviewLoading, templateError };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - usePreviewPushTemplate({ disabled, locale }: { disabled: boolean; locale?: string }))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/usePreviewSmsTemplate.ts
Tamaño: 1393 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { useFormContext } from 'react-hook-form';

import { usePreviewSms } from '../../../api/hooks';
import { IForm } from '../components/formTypes';
import { useStepFormCombinedErrors } from './useStepFormCombinedErrors';
import { useStepFormPath } from './useStepFormPath';
import { useProcessVariables } from '../../../hooks';

export const usePreviewSmsTemplate = (locale?: string, disabled?: boolean) => {
  const { watch } = useFormContext<IForm>();
  const path = useStepFormPath();
  const templateContent = watch(`${path}.template.content`);
  const templateVariables = watch(`${path}.template.variables`);
  const [previewContent, setPreviewContent] = useState(templateContent as string);
  const processedVariables = useProcessVariables(templateVariables);
  const templateError = useStepFormCombinedErrors();

  const { isLoading, getSmsPreview } = usePreviewSms({
    onSuccess: (result) => {
      setPreviewContent(result.content);
    },
  });

  useEffect(() => {
    if (disabled) return;

    getSmsPreview({
      content: templateContent,
      payload: processedVariables,
      locale,
    });
  }, [locale, templateContent, processedVariables, disabled, getSmsPreview]);

  const isPreviewContentLoading = (!templateError && isLoading) || disabled;

  return { previewContent, isPreviewContentLoading, templateError };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - usePreviewSmsTemplate(locale?: string, disabled?: boolean))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useStepFormCombinedErrors.ts
Tamaño: 460 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { formatErrorMessage, mapStepErrors } from '../shared/errors';
import { useStepFormErrors } from './useStepFormErrors';

export const useStepFormCombinedErrors = () => {
  const error = useStepFormErrors();

  if (!error || !error?.template) {
    return '';
  }

  const stepErrorsArray = error?.template;

  const formattedError = mapStepErrors(stepErrorsArray);
  const combinedError = formatErrorMessage(formattedError);

  return combinedError;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useStepFormCombinedErrors())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useStepFormErrors.ts
Tamaño: 652 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useFormContext } from 'react-hook-form';
import { IForm } from '../components/formTypes';
import { useStepIndex } from './useStepIndex';

export const useStepFormErrors = () => {
  const { stepIndex, variantIndex } = useStepIndex();
  const {
    formState: { errors },
  } = useFormContext<IForm>();

  const hasVariant = typeof variantIndex !== 'undefined' && variantIndex > -1;
  const stepErrors = errors.steps;

  if (!stepErrors) {
    return undefined;
  }

  const variantErrors = stepErrors[stepIndex]?.variants;
  if (hasVariant) {
    return variantErrors ? variantErrors[variantIndex] : {};
  }

  return stepErrors[stepIndex];
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useStepFormErrors())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useStepFormPath.ts
Tamaño: 356 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useStepIndex } from './useStepIndex';

export const useStepFormPath = () => {
  const { stepIndex, variantIndex } = useStepIndex();

  return typeof variantIndex !== 'undefined' && variantIndex > -1
    ? (`steps.${stepIndex}.variants.${variantIndex}` as `steps.${number}.variants.${number}`)
    : (`steps.${stepIndex}` as `steps.${number}`);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useStepFormPath())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useStepIndex.ts
Tamaño: 1103 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useMemo } from 'react';
import { useParams } from 'react-router-dom';
import { StepTypeEnum } from '@novu/shared';
import { useFormContext } from 'react-hook-form';

import { IForm } from '../components/formTypes';

export const useStepIndex = () => {
  const {
    channel,
    stepUuid = '',
    variantUuid = '',
  } = useParams<{
    channel: StepTypeEnum | undefined;
    stepUuid: string;
    variantUuid: string;
  }>();

  const { watch } = useFormContext<IForm>();
  const steps = watch('steps');

  const step = useMemo(
    () => steps.find((message) => message.template.type === channel && message.uuid === stepUuid),
    [channel, stepUuid, steps]
  );

  const stepIndex = useMemo(
    () => steps.findIndex((message) => message.template.type === channel && message.uuid === stepUuid),
    [channel, stepUuid, steps]
  );

  const variantIndex = useMemo(() => {
    if (!step) {
      return undefined;
    }

    return step.variants?.findIndex((message) => message.uuid === variantUuid);
  }, [step, variantUuid]);

  return {
    step,
    stepIndex,
    variantIndex,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useStepIndex())
 - step(useMemo(
    ())
 - stepIndex(useMemo(
    ())
 - variantIndex(useMemo(())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useStepInfoPath.ts
Tamaño: 692 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useLocation } from 'react-router-dom';

import { useStepIndex } from './useStepIndex';

export const useStepInfoPath = () => {
  const { pathname } = useLocation();
  const { stepIndex, variantIndex } = useStepIndex();
  const isStep = stepIndex > -1;
  const isVariant = typeof variantIndex !== 'undefined' && variantIndex > -1;
  const isUnderVariantsListPath = pathname.includes('/variants') && pathname.endsWith('/preview');
  const isUnderTheStepPath = isStep && !isVariant && !isUnderVariantsListPath;
  const isUnderVariantPath = isStep && isVariant && !isUnderVariantsListPath;

  return {
    isUnderTheStepPath,
    isUnderVariantsListPath,
    isUnderVariantPath,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useStepInfoPath())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useStepSubtitle.tsx
Tamaño: 1160 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { StepTypeEnum } from '@novu/shared';
import { useMemo } from 'react';

import { IFlowStep } from '../../../components/workflow/types';
import { WillBeSentHeader } from '../workflow/digest/WillBeSentHeader';
import { delaySubtitle } from '../workflow/workflow/node-types/utils';

export const useStepSubtitle = ({
  path,
  step,
  channelType,
}: {
  path: string;
  step?: IFlowStep;
  channelType?: StepTypeEnum;
}) => {
  return useMemo(() => {
    if (!step) {
      return undefined;
    }

    const content = step.template?.content;
    if (StepTypeEnum.DELAY === channelType) {
      return delaySubtitle(channelType, step);
    }
    if (StepTypeEnum.DIGEST === channelType) {
      return <WillBeSentHeader isHighlight={false} path={path} />;
    }

    if (typeof content === 'string') {
      return content;
    }

    if (channelType === StepTypeEnum.EMAIL) {
      if (content && content?.length > 0) {
        return content?.find((item) => item.type === 'text')?.content;
      }
      if (step.template?.htmlContent) {
        return step.template.htmlContent;
      }
    }

    return undefined;
  }, [channelType, step, path]);
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { StepTypeEnum } from '@novu/shared';
import { useMemo } from 'react';
import { IFlowStep } from '../../../components/workflow/types';
import { WillBeSentHeader } from '../workflow/digest/WillBeSentHeader';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useStepVariantsCount.ts
Tamaño: 389 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useFormContext } from 'react-hook-form';

import { IForm } from '../components/formTypes';
import { useStepIndex } from './useStepIndex';

export const useStepVariantsCount = () => {
  const { watch } = useFormContext<IForm>();
  const { stepIndex } = useStepIndex();
  const step = watch(`steps.${stepIndex}`);

  return {
    variantsCount: step?.variants?.length || 0,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useStepVariantsCount())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useStepsBefore.ts
Tamaño: 694 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useMemo } from 'react';
import { useFormContext, useWatch } from 'react-hook-form';
import { ChannelTypeEnum } from '@novu/shared';

import { IForm } from '../components/formTypes';

export const useStepsBefore = ({ index = 0 }: { index?: number }) => {
  const { control } = useFormContext<IForm>();
  const steps = useWatch({ name: 'steps', control });

  const stepsBefore = useMemo(() => {
    const stepsBeforeSelectedStep = steps.slice(0, index);

    return stepsBeforeSelectedStep.filter((step) => {
      return [ChannelTypeEnum.EMAIL, ChannelTypeEnum.IN_APP].includes(step.template.type as unknown as ChannelTypeEnum);
    });
  }, [steps, index]);

  return stepsBefore;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - index(0 }: { index?: number }))
 - stepsBefore(useMemo(())
 - stepsBeforeSelectedStep(steps.slice(0, index);

    return stepsBeforeSelectedStep.filter((step))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useTemplateLocales.ts
Tamaño: 1333 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect, useState } from 'react';
import { IEmailBlock } from '@novu/shared';
import { useGetLocalesFromContent } from '../../../api/hooks';
import { useGetDefaultLocale } from '../../../ee/translations/hooks';

export const useTemplateLocales = ({
  content,
  title,
  disabled,
}: {
  content?: string | IEmailBlock[];
  title?: string;
  disabled?: boolean;
}) => {
  const { defaultLocale } = useGetDefaultLocale();
  const [selectedLocale, setSelectedLocale] = useState('');

  const { data: locales, isLoading: areLocalesLoading, getLocalesFromContent } = useGetLocalesFromContent();

  useEffect(() => {
    if (!content || disabled) {
      return;
    }

    let combinedContent = content;
    /*
     * combining title and content to get locales based upon variables in both title and content
     * The api is not concerned about the content type, it will parse the given string and return the locales
     */
    if (title) {
      combinedContent += ` ${title}`;
    }

    getLocalesFromContent({
      content: combinedContent,
    });
  }, [getLocalesFromContent, disabled, content, title]);

  const onLocaleChange = (locale: string) => {
    setSelectedLocale(locale);
  };

  return {
    locales,
    areLocalesLoading,
    selectedLocale: selectedLocale || defaultLocale,
    onLocaleChange,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useTemplateLocales({
  content,
  title,
  disabled,
}: {
  content?: string | IEmailBlock[];
  title?: string;
  disab...)
 - onLocaleChange(locale: string))
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useTemplatesStoreModal.tsx
Tamaño: 1221 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useDisclosure } from '@mantine/hooks';
import { FeatureFlagsKeysEnum } from '@novu/shared';

import { IBlueprintsGrouped } from '../../../api/hooks';
import { useInlineComponent, useFeatureFlag } from '../../../hooks';
import { ITemplatesStoreModalProps, TemplatesStoreModal } from '../components/templates-store';

const NULL_COMPONENT = () => null;

export const useTemplatesStoreModal = ({
  general = [],
  popular,
}: {
  general?: IBlueprintsGrouped[];
  popular?: IBlueprintsGrouped;
}) => {
  const [opened, { open, close }] = useDisclosure(false);
  const isTemplateStoreEnabled = useFeatureFlag(FeatureFlagsKeysEnum.IS_TEMPLATE_STORE_ENABLED);
  const hasGroups = general && general.length > 0;
  const hasPopular = !!(popular && popular?.blueprints.length > 0);
  const hasGroupsOrPopular = hasGroups || hasPopular;
  const isOpened = opened && hasGroupsOrPopular && isTemplateStoreEnabled;

  const Component = useInlineComponent<ITemplatesStoreModalProps>(TemplatesStoreModal, {
    general,
    popular: popular ? [popular] : [],
    isOpened,
    onClose: close,
  });

  return {
    TemplatesStoreModal: isOpened ? Component : NULL_COMPONENT,
    openModal: open,
    closeModal: close,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useDisclosure } from '@mantine/hooks';
import { FeatureFlagsKeysEnum } from '@novu/shared';
import { IBlueprintsGrouped } from '../../../api/hooks';
import { useInlineComponent, useFeatureFlag } from '../../../hooks';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/hooks/useTourStorage.ts
Tamaño: 1839 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useEffect, useState, useCallback } from 'react';

const storageKey = 'tour';

export const useTourStorage = () => {
  const [state, setState] = useState({});
  const storageValue = localStorage.getItem(storageKey);

  useEffect(() => {
    if (storageValue === null) {
      return;
    }

    setState(JSON.parse(storageValue));
  }, [storageValue]);

  const setTour = useCallback(
    (tour: string, templateId: string, tourStepIndex: number) => {
      const currentState = { ...state };
      if (!currentState[tour]) {
        currentState[tour] = {};
      }
      currentState[tour][templateId] = tourStepIndex;

      setState(currentState);
      localStorage.setItem(storageKey, JSON.stringify(currentState));
    },
    [state]
  );

  const deleteTour = useCallback(
    (tour: string, templateId: string) => {
      const currentState = { ...state };
      if (!currentState[tour]) {
        return;
      }
      currentState[tour] = Object.keys(currentState[tour]).reduce(
        (prev: Record<string, number>, currentTemplateId: string) => {
          if (currentTemplateId === templateId) {
            return prev;
          }

          prev[currentTemplateId] = currentState[tour][currentTemplateId];

          return prev;
        },
        {}
      );
      setState(currentState);
      localStorage.setItem(storageKey, JSON.stringify(currentState));
    },
    [state]
  );

  const getCurrentTour = useCallback(
    (tour: string, templateId: string): number => {
      const currentState = { ...state };

      if (!currentState[tour]) {
        return -1;
      }

      if (currentState[tour][templateId] === undefined) {
        return -1;
      }

      return currentState[tour][templateId] as number;
    },
    [state]
  );

  return {
    setTour,
    deleteTour,
    getCurrentTour,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useTourStorage())
 - storageValue(localStorage.getItem(storageKey);

  useEffect(())
 - setTour(useCallback(
    (tour: string, templateId: string, tourStepIndex: number))
 - deleteTour(useCallback(
    (tour: string, templateId: string))
 - getCurrentTour(useCallback(
    (tour: string, templateId: string): number)
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/shared/errors.ts
Tamaño: 3748 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { FieldErrors } from 'react-hook-form';
import { IForm } from '../components/formTypes';

export function getExplicitErrors(errors: FieldErrors<IForm>, mode: 'settings' | 'steps' | 'all' = 'all'): string {
  const errorsArray: string[] = [];
  if (['settings', 'all'].includes(mode)) {
    errorsArray.push(...getSettingsErrors(errors));
  }
  if (['steps', 'all'].includes(mode) && errors?.steps) {
    const errorIndexes = Object.keys(errors?.steps);
    errorIndexes.forEach((index) => {
      errorsArray.push(...getStepErrors(index, errors.steps));
      const variantErrors = getVariantErrors(index, errors.steps)?.map((err) => err.errorMsg);
      if (variantErrors?.length) {
        errorsArray.push(...variantErrors);
      }
    });
  }

  return formatErrorMessage(errorsArray);
}

export function getSettingsErrors(errors) {
  const errorsArray: string[] = [];
  if (errors?.name) {
    errorsArray.push(errors.name?.message);
  }
  if (errors?.notificationGroupId) {
    errorsArray.push(errors.notificationGroupId?.message);
  }

  return errorsArray;
}

function findMessages(obj: object): string[] {
  let messages: string[] = [];

  for (const key in obj) {
    const value = obj[key];

    if (typeof value === 'object' && value !== null) {
      messages = messages.concat(findMessages(value));
    } else if (key === 'message' && typeof value === 'string') {
      messages.push(value);
    }
  }

  return messages;
}

export function getStepErrors(index: number | string, stepsErrors?: FieldErrors<IForm>['steps']): string[] {
  if (stepsErrors) {
    const stepErrors = stepsErrors[index]?.template;

    if (stepErrors) {
      return mapStepErrors(stepErrors);
    }

    const digestMetadataErrors = stepsErrors[index]?.digestMetadata;
    if (digestMetadataErrors) {
      return findMessages(digestMetadataErrors);
    }

    const delayMetadataErrors = stepsErrors[index]?.delayMetadata;

    if (delayMetadataErrors) {
      return findMessages(delayMetadataErrors);
    }
  }

  return [];
}

export function mapStepErrors(stepErrors) {
  if (stepErrors) {
    const keys = Object.keys(stepErrors);

    return keys.map((key) => stepErrors[key]?.message);
  }

  return [];
}

export function getVariantErrors(
  stepIndex: number | string,
  stepsErrors?: FieldErrors<IForm>['steps']
): undefined | { errorMsg: string; variantIndex: number }[] {
  if (stepsErrors) {
    const variantsErrors = stepsErrors[stepIndex]?.variants?.reduce((acc, variant, variantIndex) => {
      const variantErrors = variant?.template;
      if (variantErrors) {
        const keys = Object.keys(variantErrors);

        const errorMsg = keys.map((key) => variantErrors[key]?.message);

        acc.push(...errorMsg.map((msg) => ({ errorMsg: msg, variantIndex })));
      }

      return acc;
    }, []);

    return variantsErrors;
  }

  return [];
}

export function getFormattedStepErrors(index: number, errors?: FieldErrors<IForm>): string {
  return formatErrorMessage(getStepErrors(index, errors?.steps));
}

export function formatErrorMessage(errorsArray: string[]): string {
  const uniqueErrors = Array.from(new Set(errorsArray));
  if (uniqueErrors.length > 1) {
    const combinedErrors = uniqueErrors.map((errMessage) => errMessage.replace(/(Message)|(is missing!)/g, ''));

    return combinedErrors.length ? `Message ${combinedErrors.join(' and ')}are missing!` : '';
  }

  return uniqueErrors.join('');
}

export function hasGroupError(stepIndex: number, errors?: FieldErrors<IForm>): boolean {
  const stepErrors = getStepErrors(stepIndex, errors?.steps);
  const variantErrors = getVariantErrors(stepIndex, errors?.steps);

  return stepErrors?.length > 0 || (!!variantErrors && variantErrors?.length > 0);
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - getExplicitErrors(errors: FieldErrors<IForm>, mode: 'settings' | 'steps' | 'all' = 'all')
 - getSettingsErrors(errors)
 - findMessages(obj: object)
 - getStepErrors(index: number | string, stepsErrors?: FieldErrors<IForm>['steps'])
 - mapStepErrors(stepErrors)
 - getVariantErrors(stepIndex: number | string,
  stepsErrors?: FieldErrors<IForm>['steps'])
 - getFormattedStepErrors(index: number, errors?: FieldErrors<IForm>)
 - formatErrorMessage(errorsArray: string[])
 - hasGroupError(stepIndex: number, errors?: FieldErrors<IForm>)
Asignaciones con arrow functions encontradas (posibles funciones):
 - errorIndexes(Object.keys(errors?.steps);
    errorIndexes.forEach((index))
 - variantErrors(getVariantErrors(index, errors.steps)?.map((err))
 - keys(Object.keys(stepErrors);

    return keys.map((key))
 - variantsErrors(stepsErrors[stepIndex]?.variants?.reduce((acc, variant, variantIndex))
 - errorMsg(keys.map((key))
 - combinedErrors(uniqueErrors.map((errMessage))
Declaraciones 'export' encontradas:
- export function getExplicitErrors
- export function getSettingsErrors
- export function getStepErrors
- export function mapStepErrors
- export function getVariantErrors
- export function getFormattedStepErrors
- export function formatErrorMessage
- export function hasGroupError

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/DelayMetadata.tsx
Tamaño: 4320 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Grid } from '@mantine/core';
import { DelayTypeEnum } from '@novu/shared';
import { Controller, useFormContext } from 'react-hook-form';

import { Input, SegmentedControl, inputStyles } from '@novu/design-system';
import { useEnvironment } from '../../../hooks';
import { When } from '../../../components/utils/When';
import { IntervalRadios } from './IntervalRadios';
import { LabelWithTooltip } from './LabelWithTooltip';
import { StepSettings } from './SideBar/StepSettings';
import { useStepFormPath } from '../hooks/useStepFormPath';

export const DelayMetadata = () => {
  const { readonly } = useEnvironment();
  const {
    control,
    formState: { errors, isSubmitted },
    watch,
    trigger,
  } = useFormContext();
  const stepFormPath = useStepFormPath();
  const type = watch(`${stepFormPath}.delayMetadata.type`);
  const showErrors = isSubmitted && errors?.steps;

  return (
    <>
      <StepSettings />
      <Controller
        control={control}
        defaultValue={DelayTypeEnum.REGULAR}
        name={`${stepFormPath}.delayMetadata.type`}
        render={({ field }) => {
          return (
            <SegmentedControl
              {...field}
              sx={{
                maxWidth: '100% !important',
              }}
              fullWidth
              disabled={readonly}
              data={[
                { value: DelayTypeEnum.REGULAR, label: 'Regular' },
                { value: DelayTypeEnum.SCHEDULED, label: 'Scheduled' },
              ]}
              onChange={async (segmentValue) => {
                field.onChange(segmentValue);
                await trigger(`${stepFormPath}.delayMetadata`);
              }}
              data-test-id="delay-type"
            />
          );
        }}
      />
      <When truthy={type === DelayTypeEnum.REGULAR}>
        <Grid m={0}>
          <Grid.Col span={4}>
            <Controller
              control={control}
              name={`${stepFormPath}.delayMetadata.${DelayTypeEnum.REGULAR}.amount`}
              defaultValue=""
              render={({ field, fieldState }) => {
                return (
                  <Input
                    {...field}
                    value={field.value || ''}
                    error={showErrors && fieldState.error?.message}
                    min={0}
                    max={100}
                    label={
                      <LabelWithTooltip
                        label="Time Interval"
                        tooltip="Once triggered, for how long should delay before next step execution."
                      />
                    }
                    type="number"
                    data-test-id="time-amount"
                    placeholder="0"
                    disabled={readonly}
                    styles={(theme) => ({
                      ...inputStyles(theme),
                      input: {
                        textAlign: 'center',
                        ...inputStyles(theme).input,
                      },
                    })}
                  />
                );
              }}
            />
          </Grid.Col>
          <Grid.Col span={8} mt={20}>
            <IntervalRadios
              control={control}
              name={`${stepFormPath}.delayMetadata.${DelayTypeEnum.REGULAR}.unit`}
              showErrors={showErrors}
            />
          </Grid.Col>
        </Grid>
      </When>

      <When truthy={type === DelayTypeEnum.SCHEDULED}>
        <Controller
          control={control}
          name={`${stepFormPath}.delayMetadata.${DelayTypeEnum.SCHEDULED}.delayPath`}
          defaultValue=""
          render={({ field, fieldState }) => {
            return (
              <Input
                {...field}
                value={field.value || ''}
                disabled={readonly}
                label={
                  <LabelWithTooltip
                    label="Path for scheduled date"
                    tooltip="The path in payload for the scheduled delay date"
                  />
                }
                placeholder="For example: sendAt"
                error={showErrors && fieldState.error?.message}
                type="text"
                data-test-id="batch-key"
              />
            );
          }}
        />
      </When>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Grid } from '@mantine/core';
import { DelayTypeEnum } from '@novu/shared';
import { Controller, useFormContext } from 'react-hook-form';
import { Input, SegmentedControl, inputStyles } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/DigestMetadata.tsx
Tamaño: 8058 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Accordion, Group, useMantineColorScheme } from '@mantine/core';
import { Controller, useFormContext } from 'react-hook-form';
import styled from '@emotion/styled';
import { DigestTypeEnum } from '@novu/shared';

import { colors, Input, Select, Tooltip, Bell, Digest, Timer } from '@novu/design-system';
import { When } from '../../../components/utils/When';
import { TypeSegmented } from './digest/TypeSegment';
import { WillBeSentHeader } from './digest/WillBeSentHeader';
import { RegularInfo } from './digest/icons/RegularInfo';
import { TimedDigestMetadata } from './TimedDigestMetadata';
import { RegularDigestMetadata } from './RegularDigestMetadata';
import { StepSettings } from './SideBar/StepSettings';
import { useEnvironment } from '../../../hooks';
import { useStepFormPath } from '../hooks/useStepFormPath';
import { useTemplateEditorForm } from '../components/TemplateEditorFormProvider';

const GroupStyled = styled(Group)`
  gap: 18px;
`;

export const DigestMetadata = () => {
  const { template } = useTemplateEditorForm();
  const { readonly } = useEnvironment({ bridge: template?.bridge });
  const stepFormPath = useStepFormPath();
  const { control, watch } = useFormContext();

  const { colorScheme } = useMantineColorScheme();

  const type = watch(`${stepFormPath}.digestMetadata.type`);
  const digestKey = watch(`${stepFormPath}.digestMetadata.digestKey`);

  return (
    <div data-test-id="digest-step-settings-interval">
      <StepSettings />
      <Accordion mt={16} styles={{ item: { '&:last-of-type': { marginBottom: 0 } } }}>
        <Tooltip
          position="left"
          width={227}
          multiline
          label="Types of events that will be aggregated from the previous digest to the time it will be sent"
        >
          <Accordion.Item value="events-selection" data-test-id="digest-events-selection-options">
            <Accordion.Control>
              <GroupStyled>
                <Bell color={colors.B60} />
                <div>
                  <div>
                    <b
                      style={{
                        color: colorScheme === 'dark' ? colors.B80 : colors.B40,
                      }}
                    >
                      All events
                    </b>
                  </div>
                  <div>since previous digest</div>
                </div>
              </GroupStyled>
            </Accordion.Control>
            <Accordion.Panel>
              <Select mt={-5} mb={-5} data={[{ value: 'all', label: 'All events' }]} value={'all'} />
            </Accordion.Panel>
          </Accordion.Item>
        </Tooltip>
        <Tooltip
          position="left"
          width={227}
          multiline
          label={
            <>
              Events aggregated by subscriberId by default, this can’t be changed. You may add additional aggregations
              by typing the name of a variable.
            </>
          }
        >
          <Accordion.Item value="group-by" data-test-id="digest-group-by-options">
            <Accordion.Control>
              <GroupStyled>
                <div style={{ width: 26 }}>
                  <Digest color={colors.B60} />
                </div>
                <div>
                  <div>
                    <b>Aggregated by subscriberId</b>
                  </div>
                  <When truthy={!digestKey}>
                    <div>Add another aggregation key</div>
                  </When>
                  <When truthy={digestKey}>
                    <div>
                      And by{' '}
                      <b
                        style={{
                          color: colorScheme === 'dark' ? colors.B80 : colors.B40,
                        }}
                      >
                        {digestKey}
                      </b>
                    </div>
                  </When>
                </div>
              </GroupStyled>
            </Accordion.Control>
            <Accordion.Panel>
              <Controller
                control={control}
                name={`${stepFormPath}.digestMetadata.digestKey`}
                defaultValue=""
                render={({ field, fieldState }) => {
                  return (
                    <Input
                      {...field}
                      mt={-5}
                      mb={-5}
                      value={field.value || ''}
                      placeholder="Post_ID, Attribute_ID, etc."
                      error={fieldState.error?.message}
                      type="text"
                      data-test-id="batch-key"
                      disabled={readonly}
                    />
                  );
                }}
              />
            </Accordion.Panel>
          </Accordion.Item>
        </Tooltip>
        <Accordion.Item value="send" data-test-id="digest-send-options">
          <Accordion.Control>
            <GroupStyled>
              <Timer width="30" height="30" color={colors.B60} />
              <div>
                <div>
                  <b>Will be sent</b>
                </div>
                <div>
                  <WillBeSentHeader path={stepFormPath} />
                </div>
              </div>
            </GroupStyled>
          </Accordion.Control>
          <Accordion.Panel>
            <Controller
              control={control}
              defaultValue={DigestTypeEnum.REGULAR}
              name={`${stepFormPath}.digestMetadata.type`}
              render={({ field }) => {
                return (
                  <TypeSegmented
                    {...field}
                    sx={{
                      maxWidth: '100% !important',
                      marginBottom: -14,
                    }}
                    fullWidth
                    disabled={readonly}
                    data={[
                      {
                        value: DigestTypeEnum.REGULAR,
                        label: (
                          <Tooltip
                            withinPortal
                            width={310}
                            multiline
                            offset={15}
                            label={
                              <>
                                <div>
                                  Digest starts after the first event occurred since the previous sent digest. From that
                                  moment on, it aggregates events for the specified time, after which it sends a digest
                                  of the events.
                                </div>
                                <RegularInfo />
                              </>
                            }
                          >
                            <div>Event</div>
                          </Tooltip>
                        ),
                      },
                      {
                        value: DigestTypeEnum.TIMED,
                        label: (
                          <Tooltip
                            withinPortal
                            width={240}
                            multiline
                            offset={15}
                            label="Digest aggregates the events in between the selected time period"
                          >
                            <div>Schedule</div>
                          </Tooltip>
                        ),
                      },
                    ]}
                    data-test-id="digest-type"
                  />
                );
              }}
            />
            <div
              style={{
                background: colorScheme === 'dark' ? colors.B20 : colors.BGLight,
                padding: 16,
                borderRadius: 8,
              }}
            >
              {type === DigestTypeEnum.TIMED && <TimedDigestMetadata />}
              {type === DigestTypeEnum.REGULAR && <RegularDigestMetadata />}
            </div>
          </Accordion.Panel>
        </Accordion.Item>
      </Accordion>
    </div>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Accordion, Group, useMantineColorScheme } from '@mantine/core';
import { Controller, useFormContext } from 'react-hook-form';
import styled from '@emotion/styled';
import { DigestTypeEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/DisplayPrimaryProviderIcon.tsx
Tamaño: 1682 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Avatar, Indicator } from '@mantine/core';
import { ProvidersIdEnum } from '@novu/shared';
import { ProviderMissing, colors } from '@novu/design-system';

type DisplayPrimaryProviderIconProps = {
  isChannelStep: boolean;
  providerIntegration?: ProvidersIdEnum;
  logoSrc?: string;
  disabledProp: any;
  Icon: React.FC<any>;
};

export function DisplayPrimaryProviderIcon({
  isChannelStep,
  providerIntegration,
  logoSrc,
  disabledProp,
  Icon,
}: DisplayPrimaryProviderIconProps) {
  if (isChannelStep) {
    return (
      <Indicator
        label={
          <StyledBadge>
            <Icon width="16px" height="16px" {...disabledProp} />
          </StyledBadge>
        }
        position="bottom-end"
        size={16}
        offset={providerIntegration ? 8 : 4}
        inline
      >
        <AvatarWrapper>
          {providerIntegration ? (
            <Avatar src={logoSrc} size={32} radius={0} color="white" />
          ) : (
            <Avatar radius="xl">
              <ProviderMissing {...disabledProp} width="32px" height="32px" />
            </Avatar>
          )}
        </AvatarWrapper>
      </Indicator>
    );
  } else {
    return (
      <AvatarWrapper>
        <Icon {...disabledProp} width="32px" height="32px" />
      </AvatarWrapper>
    );
  }
}

const AvatarWrapper = styled.div`
  width: 40px;
  height: 40px;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 4px;
`;

const StyledBadge = styled.div`
  color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.white : colors.B60)};
  > svg path {
    stop-color: currentcolor;
    fill: currentcolor;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Avatar, Indicator } from '@mantine/core';
import { ProvidersIdEnum } from '@novu/shared';
import { ProviderMissing, colors } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/IntervalRadios.tsx
Tamaño: 1384 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Radio } from '@mantine/core';
import { DigestUnitEnum } from '@novu/shared';
import { Controller } from 'react-hook-form';
import { useEnvironment } from '../../../hooks';

const options = [
  { value: DigestUnitEnum.SECONDS, label: 'Sec' },
  { value: DigestUnitEnum.MINUTES, label: 'Min' },
  { value: DigestUnitEnum.HOURS, label: 'Hours' },
  { value: DigestUnitEnum.DAYS, label: 'Days' },
];

export const IntervalRadios = ({ control, name, showErrors, testId = 'time-unit' }) => {
  const { readonly } = useEnvironment();

  return (
    <Controller
      control={control}
      name={name}
      defaultValue=""
      render={({ field, fieldState }) => {
        return (
          <Radio.Group
            spacing={16}
            error={showErrors && fieldState.error?.message}
            data-test-id={testId}
            withAsterisk
            {...field}
          >
            {options.map((option) => (
              <Radio
                styles={() => ({
                  label: {
                    paddingLeft: 8,
                  },
                })}
                key={option.value}
                data-test-id={`${testId}-${option.value}`}
                disabled={readonly}
                value={option.value}
                label={option.label}
              />
            ))}
          </Radio.Group>
        );
      }}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Radio } from '@mantine/core';
import { DigestUnitEnum } from '@novu/shared';
import { Controller } from 'react-hook-form';
import { useEnvironment } from '../../../hooks';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/LabelWithTooltip.tsx
Tamaño: 774 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, Stack, useMantineTheme } from '@mantine/core';
import { colors, Tooltip, InfoCircle } from '@novu/design-system';

export const LabelWithTooltip = ({ label, tooltip }) => {
  const theme = useMantineTheme();

  return (
    <Group spacing={8}>
      <div
        style={{
          color: theme.colorScheme === 'dark' ? theme.white : theme.colors.gray[8],
          fontWeight: 700,
          fontSize: '14px',
          lineHeight: '17px',
          margin: '5px 0px',
        }}
      >
        {label}
      </div>
      <Tooltip label={tooltip}>
        <Stack
          sx={{
            height: '100%',
            zIndex: 99999,
          }}
        >
          <InfoCircle color={colors.B60} />
        </Stack>
      </Tooltip>
    </Group>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, Stack, useMantineTheme } from '@mantine/core';
import { colors, Tooltip, InfoCircle } from '@novu/design-system';
export const LabelWithTooltip = ({ label, tooltip }) => {
const theme = useMantineTheme();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/NameInput.tsx
Tamaño: 2475 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { TextInput, useMantineColorScheme } from '@mantine/core';
import { colors } from '@novu/notification-center';
import { Controller, useFormContext } from 'react-hook-form';
import { useEnvironment } from '../../../hooks';
import { IForm } from '../components/formTypes';
import { useTemplateEditorForm } from '../components/TemplateEditorFormProvider';

export const NameInput = () => {
  const {
    control,
    formState: { errors, isSubmitted },
  } = useFormContext<IForm>();
  const { template } = useTemplateEditorForm();
  const { readonly } = useEnvironment({ bridge: template?.bridge });
  const showErrors = isSubmitted && errors?.steps;
  const { colorScheme } = useMantineColorScheme();

  return (
    <Controller
      control={control}
      name="name"
      defaultValue="Untitled"
      render={({ field, fieldState }) => {
        return (
          <TextInput
            styles={(theme) => ({
              root: {
                flex: '1 1 auto',
              },
              wrapper: {
                background: 'transparent',
                width: '100%',
              },
              input: {
                background: 'transparent',
                borderStyle: 'solid',
                borderColor: colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[5],
                borderWidth: '1px',
                fontSize: '20px',
                fontWeight: 'bolder',
                padding: 9,
                lineHeight: '28px',
                minHeight: 'auto',
                height: 'auto',
                width: '100%',
                textOverflow: 'ellipsis',
                '&:not(:placeholder-shown)': {
                  borderStyle: 'none',
                  padding: 10,
                },
                '&:hover, &:focus': {
                  borderStyle: 'solid',
                  padding: 9,
                },
                '&:disabled': {
                  backgroundColor: colorScheme === 'dark' ? colors.B15 : theme.white,
                  color: colorScheme === 'dark' ? theme.white : theme.black,
                  opacity: 1,
                },
              },
            })}
            {...field}
            value={field.value || ''}
            error={showErrors && fieldState.error?.message}
            type="text"
            data-test-id="name-input"
            placeholder="Enter workflow name"
            disabled={readonly}
          />
        );
      }}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { TextInput, useMantineColorScheme } from '@mantine/core';
import { colors } from '@novu/notification-center';
import { Controller, useFormContext } from 'react-hook-form';
import { useEnvironment } from '../../../hooks';
import { IForm } from '../components/formTypes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/NodeErrorPopover.tsx
Tamaño: 2223 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { createStyles, Group, GroupProps, Popover as MPopover, PopoverProps, useMantineTheme } from '@mantine/core';
import React from 'react';
import { colors, shadows, Text } from '@novu/design-system';

type NodeErrorPopoverProps = {
  target: React.ReactNode;
  titleIcon?: React.ReactNode;
  title: React.ReactNode;
  content: string;
  actionItem?: React.ReactNode;
  actionItemPosition?: GroupProps['position'];
} & Omit<PopoverProps, 'children'>;

export function NodeErrorPopover({
  target,
  title,
  content,
  actionItem,
  titleIcon,
  actionItemPosition = 'right',
  ...rest
}: NodeErrorPopoverProps) {
  const { classes } = useStyles();
  const { colorScheme } = useMantineTheme();

  return (
    <MPopover
      classNames={classes}
      withArrow
      position="right"
      radius="md"
      shadow={colorScheme === 'dark' ? shadows.dark : shadows.medium}
      offset={30}
      middlewares={{ flip: false, shift: false }}
      {...rest}
    >
      <MPopover.Target>{target}</MPopover.Target>
      <MPopover.Dropdown onClick={(e) => e.stopPropagation()}>
        <Group noWrap spacing={8}>
          {titleIcon && <div>{titleIcon}</div>}
          <Label color={colors.error}>{title}</Label>
        </Group>
        <div>
          <Text color={colors.error}>{content}</Text>

          {actionItem && (
            <Group position={actionItemPosition} mt={16}>
              {actionItem}
            </Group>
          )}
        </div>
      </MPopover.Dropdown>
    </MPopover>
  );
}

const useStyles = createStyles((theme) => ({
  dropdown: {
    padding: '16px',
    color: colors.error,
    border: 'none',
    maxWidth: '300px',
    background: theme.colorScheme === 'dark' ? `${colors.errorGradient}, ${colors.B17}` : colors.white,
  },
  arrow: {
    width: '7px',
    height: '7px',
    margin: '0px',
    background: theme.colorScheme === 'dark' ? `${colors.errorGradient}, ${colors.B17}` : colors.white,
  },
}));

const Label = styled.div`
  font-family: 'Lato', serif;
  font-style: normal;
  font-weight: 700;
  font-size: 16px;
  line-height: 20px;
  display: flex;
  align-items: center;
  color: ${colors.error};
  margin-bottom: 10px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { createStyles, Group, GroupProps, Popover as MPopover, PopoverProps, useMantineTheme } from '@mantine/core';
import React from 'react';
import { colors, shadows, Text } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/RegularDigestMetadata.tsx
Tamaño: 2662 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Controller, useFormContext } from 'react-hook-form';
import { Group } from '@mantine/core';
import { DigestTypeEnum } from '@novu/shared';

import { colors, Input, inputStyles } from '@novu/design-system';
import { IntervalSelect } from './digest/IntervalSelect';
import { BackOffFields } from './digest/BackOffFields';
import { useStepFormPath } from '../hooks/useStepFormPath';
import { useEnvironment } from '../../../hooks';
import { useTemplateEditorForm } from '../components/TemplateEditorFormProvider';

const amountDefaultValue = '30';

export const RegularDigestMetadata = () => {
  const { template } = useTemplateEditorForm();
  const { readonly } = useEnvironment({ bridge: template?.bridge });
  const {
    control,
    formState: { errors, isSubmitted },
    setValue,
  } = useFormContext();
  const stepFormPath = useStepFormPath();

  const showErrors = isSubmitted && errors?.steps;
  const amountFieldName = `${stepFormPath}.digestMetadata.${DigestTypeEnum.REGULAR}.amount`;

  return (
    <>
      <Group spacing={8} sx={{ color: colors.B60 }}>
        <span>digest events for</span>
        <Controller
          control={control}
          name={amountFieldName}
          defaultValue={amountDefaultValue}
          render={({ field }) => {
            return (
              <Input
                {...field}
                value={field.value || ''}
                min={0}
                max={100}
                type="number"
                data-test-id="time-amount"
                placeholder="0"
                disabled={readonly}
                styles={(theme) => ({
                  ...inputStyles(theme),
                  input: {
                    textAlign: 'center',
                    ...inputStyles(theme).input,
                    minHeight: '30px',
                    margin: 0,
                    height: 30,
                    lineHeight: '32px',
                  },
                })}
                onBlur={(e) => {
                  if (e.target.value === '') {
                    setValue(amountFieldName, amountDefaultValue);
                  }
                  field.onBlur();
                }}
              />
            );
          }}
        />
        <div
          style={{
            width: '90px',
            height: 30,
          }}
        >
          <IntervalSelect
            readonly={readonly}
            control={control}
            name={`${stepFormPath}.digestMetadata.${DigestTypeEnum.REGULAR}.unit`}
            showErrors={showErrors}
          />
        </div>
        <span>before send</span>
      </Group>
      <BackOffFields />
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Controller, useFormContext } from 'react-hook-form';
import { Group } from '@mantine/core';
import { DigestTypeEnum } from '@novu/shared';
import { colors, Input, inputStyles } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/ReplyCallback.tsx
Tamaño: 3641 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Controller, useFormContext } from 'react-hook-form';
import { useNavigate } from 'react-router-dom';
import { Grid } from '@mantine/core';
import { Input, Switch, Text, CircleArrowRight } from '@novu/design-system';

import { useEnvironment } from '../../../hooks';
import { When } from '../../../components/utils/When';
import { useStepFormPath } from '../hooks/useStepFormPath';

export const ReplyCallback = () => {
  const path = useStepFormPath();
  const { environment } = useEnvironment();
  const { watch } = useFormContext();
  const replyCallbackActive = watch(`${path}.replyCallback.active`);

  const domainMxRecordConfigured =
    environment?.dns?.inboundParseDomain && environment?.dns?.mxRecordConfigured === true;

  return (
    <>
      <When truthy={!domainMxRecordConfigured && replyCallbackActive}>
        <LackConfigurationError
          text={
            'Looks like you haven’t configured your domain mx record or ' +
            'added your domain to the allowed domain list under email settings yet.'
          }
          redirectTo={'/settings'}
        />
      </When>
      <ReplyCallbackUrlInput />
    </>
  );
};

export const ReplyCallbackUrlInput = () => {
  const { control } = useFormContext();
  const path = useStepFormPath();
  const { readonly } = useEnvironment();
  const { watch } = useFormContext();
  const replyCallbackActive = watch(`${path}.replyCallback.active`);

  return (
    <When truthy={replyCallbackActive}>
      <Controller
        control={control}
        name={`${path}.replyCallback.url`}
        defaultValue=""
        render={({ field: { value, ...field } }) => {
          return (
            <Input
              mb={24}
              mt={24}
              {...field}
              data-test-id="reply-callback-url-input"
              disabled={readonly}
              type={'url'}
              required={!!replyCallbackActive}
              value={value || ''}
              label="Replay callback URL"
              placeholder="e.g. www.user-domain.com/reply"
            />
          );
        }}
      />
    </When>
  );
};

export const ReplyCallbackSwitch = () => {
  const { control } = useFormContext();
  const { readonly } = useEnvironment();
  const path = useStepFormPath();

  return (
    <>
      <Controller
        control={control}
        name={`${path}.replyCallback.active`}
        defaultValue={false}
        render={({ field: { value, ...field } }) => {
          return (
            <StyledSwitch
              {...field}
              disabled={readonly}
              checked={value}
              label="Enable reply callbacks"
              data-test-id="step-replay-callbacks-switch"
            />
          );
        }}
      />
    </>
  );
};

export function LackConfigurationError({ text, redirectTo }: { text: string; redirectTo: string }) {
  const navigate = useNavigate();

  return (
    <>
      <Grid align={'center'} mt={24}>
        <WarningMessage>
          <Grid.Col p={0} span={11}>
            <Text>{text}</Text>
          </Grid.Col>
          <Grid.Col p={0} span={'content'}>
            <CircleArrowRight onClick={() => navigate(redirectTo)} />
          </Grid.Col>
        </WarningMessage>
      </Grid>
    </>
  );
}

const WarningMessage = styled.div`
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 8px;
  color: #e54545;
  background: rgba(230, 69, 69, 0.15);
  border-radius: 7px;
  width: 100%;
`;

const StyledSwitch = styled(Switch)`
  max-width: 100% !important;
  width: auto;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Controller, useFormContext } from 'react-hook-form';
import { useNavigate } from 'react-router-dom';
import { Grid } from '@mantine/core';
import { Input, Switch, Text, CircleArrowRight } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/ShouldStopOnFailSwitch.tsx
Tamaño: 945 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Controller, useFormContext } from 'react-hook-form';
import { Switch } from '@novu/design-system';

import { useEnvironment } from '../../../hooks';
import { useStepFormPath } from '../hooks/useStepFormPath';

export const ShouldStopOnFailSwitch = () => {
  const { control } = useFormContext();
  const { readonly } = useEnvironment();
  const path = useStepFormPath();

  return (
    <Controller
      control={control}
      name={`${path}.shouldStopOnFail`}
      defaultValue={false}
      render={({ field: { value, ...field } }) => {
        return (
          <StyledSwitch
            {...field}
            disabled={readonly}
            checked={value}
            label="Stop if step fails"
            data-test-id="step-should-stop-on-fail-switch"
          />
        );
      }}
    />
  );
};

const StyledSwitch = styled(Switch)`
  max-width: 100% !important;
  width: auto;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Controller, useFormContext } from 'react-hook-form';
import { Switch } from '@novu/design-system';
import { useEnvironment } from '../../../hooks';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/StepActiveSwitch.tsx
Tamaño: 926 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Controller, useFormContext } from 'react-hook-form';
import { Switch } from '@novu/design-system';

import { useEnvironment } from '../../../hooks';
import { useStepFormPath } from '../hooks/useStepFormPath';

export const StepActiveSwitch = () => {
  const { control } = useFormContext();
  const { readonly } = useEnvironment();
  const path = useStepFormPath();

  return (
    <Controller
      control={control}
      name={`${path}.active`}
      defaultValue={true}
      render={({ field: { value, ...field } }) => {
        return (
          <StyledSwitch
            {...field}
            disabled={readonly}
            checked={value}
            label={value ? 'Active' : 'Inactive'}
            data-test-id="step-active-switch"
          />
        );
      }}
    />
  );
};

const StyledSwitch = styled(Switch)`
  max-width: 100% !important;
  width: auto;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Controller, useFormContext } from 'react-hook-form';
import { Switch } from '@novu/design-system';
import { useEnvironment } from '../../../hooks';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/TimedDigestMetadata.tsx
Tamaño: 5760 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Controller, useFormContext } from 'react-hook-form';
import { Group } from '@mantine/core';
import { format } from 'date-fns';
import { DigestTypeEnum, DigestUnitEnum } from '@novu/shared';

import { colors, Input, SegmentedControl, inputStyles } from '@novu/design-system';
import { WeekDaySelect } from './digest/WeekDaySelect';
import { ScheduleMonthlyFields } from './digest/ScheduleMonthlyFields';
import { When } from '../../../components/utils/When';
import { useStepFormPath } from '../hooks/useStepFormPath';
import { useEnvironment } from '../../../hooks';
import { useTemplateEditorForm } from '../components/TemplateEditorFormProvider';

const convertUnitToLabel = (unit: DigestUnitEnum) => {
  switch (unit) {
    case DigestUnitEnum.SECONDS:
      return 'second';
    case DigestUnitEnum.MINUTES:
      return 'minute';
    case DigestUnitEnum.HOURS:
      return 'hour';
    case DigestUnitEnum.DAYS:
      return 'day';
    case DigestUnitEnum.WEEKS:
      return 'week';
    case DigestUnitEnum.MONTHS:
      return 'month';
    default:
      throw new Error('Invalid unit');
  }
};

export const TimedDigestMetadata = () => {
  const { template } = useTemplateEditorForm();
  const { readonly } = useEnvironment({ bridge: template?.bridge });
  const { control, watch, setValue } = useFormContext();
  const stepFormPath = useStepFormPath();
  const unit: DigestUnitEnum =
    watch(`${stepFormPath}.digestMetadata.${DigestTypeEnum.TIMED}.unit`) ?? DigestUnitEnum.DAYS;
  const amountFieldName = `${stepFormPath}.digestMetadata.${DigestTypeEnum.TIMED}.${unit}.amount`;
  const atTimeFieldName = `${stepFormPath}.digestMetadata.${DigestTypeEnum.TIMED}.${unit}.atTime`;
  const amountDefaultValue = unit === DigestUnitEnum.MINUTES ? '5' : '1';
  const atTimeDefaultValue = format(new Date(), 'HH:mm');

  return (
    <>
      <Controller
        control={control}
        defaultValue={DigestUnitEnum.DAYS}
        name={`${stepFormPath}.digestMetadata.${DigestTypeEnum.TIMED}.unit`}
        render={({ field }) => {
          return (
            <SegmentedControl
              {...field}
              size="sm"
              sx={{
                maxWidth: '100% !important',
              }}
              fullWidth
              disabled={readonly}
              data={[
                { value: DigestUnitEnum.MINUTES, label: 'Min' },
                { value: DigestUnitEnum.HOURS, label: 'Hour' },
                { value: DigestUnitEnum.DAYS, label: 'Daily' },
                { value: DigestUnitEnum.WEEKS, label: 'Weekly' },
                { value: DigestUnitEnum.MONTHS, label: 'Monthly' },
              ]}
              onChange={field.onChange}
              data-test-id="digest-unit"
            />
          );
        }}
      />
      <Group data-test-id="timed-group" spacing={8} sx={{ color: colors.B60 }}>
        <span>Every</span>
        <Controller
          control={control}
          key={amountFieldName}
          name={amountFieldName}
          defaultValue={amountDefaultValue}
          render={({ field }) => {
            return (
              <Input
                {...field}
                value={field.value}
                min={1}
                max={100}
                type="number"
                data-test-id="time-amount"
                placeholder="0"
                disabled={readonly}
                styles={(theme) => ({
                  ...inputStyles(theme),
                  input: {
                    textAlign: 'center',
                    ...inputStyles(theme).input,
                  },
                })}
                onBlur={(e) => {
                  if (e.target.value === '') {
                    setValue(amountFieldName, amountDefaultValue);
                  }
                  field.onBlur();
                }}
              />
            );
          }}
        />
        <span>{convertUnitToLabel(unit)}(s)</span>
        <When truthy={[DigestUnitEnum.DAYS, DigestUnitEnum.WEEKS, DigestUnitEnum.MONTHS].includes(unit)}>
          <span>at</span>
          <Controller
            control={control}
            key={atTimeFieldName}
            name={atTimeFieldName}
            defaultValue={atTimeDefaultValue}
            render={({ field }) => {
              return (
                <Input
                  {...field}
                  value={field.value || ''}
                  type="time"
                  data-test-id="time-at"
                  disabled={readonly}
                  styles={(theme) => ({
                    ...inputStyles(theme),
                    input: {
                      textAlign: 'center',
                      ...inputStyles(theme).input,
                    },
                  })}
                  onBlur={(e) => {
                    if (e.target.value === '') {
                      setValue(atTimeFieldName, atTimeDefaultValue);
                    }
                    field.onBlur();
                  }}
                />
              );
            }}
          />
        </When>
        <When truthy={[DigestUnitEnum.WEEKS, DigestUnitEnum.MONTHS].includes(unit)}>
          <span>on:</span>
        </When>
      </Group>
      <When truthy={unit === DigestUnitEnum.WEEKS}>
        <Controller
          control={control}
          name={`${stepFormPath}.digestMetadata.${DigestTypeEnum.TIMED}.${unit}.weekDays`}
          defaultValue={[format(new Date(), 'EEEE').toLowerCase()]}
          render={({ field }) => {
            return <WeekDaySelect value={field.value} disabled={readonly} onChange={field.onChange} />;
          }}
        />
      </When>
      <When truthy={unit === DigestUnitEnum.MONTHS}>
        <ScheduleMonthlyFields />
      </When>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Controller, useFormContext } from 'react-hook-form';
import { Group } from '@mantine/core';
import { format } from 'date-fns';
import { DigestTypeEnum, DigestUnitEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/WorkflowEditor.tsx
Tamaño: 11438 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Container, Group, Stack } from '@mantine/core';
import { ComponentType, useCallback, useState } from 'react';
import { useFormContext, useWatch } from 'react-hook-form';
import { Link, Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';
import { Node, NodeProps } from 'react-flow-renderer';
import { useDidUpdate, useTimeout } from '@mantine/hooks';
import { FilterPartTypeEnum, StepTypeEnum } from '@novu/shared';
import { Bolt, Button, Settings } from '@novu/design-system';
import { useAuth, useEnvironment } from '../../../hooks';
import { useSegment } from '../../../components/providers/SegmentProvider';

import { When } from '../../../components/utils/When';
import type { IFlowEditorProps } from '../../../components/workflow';
import { FlowEditor } from '../../../components/workflow';
import { channels } from '../../../utils/channels';
import { errorMessage } from '../../../utils/notifications';
import { DeleteConfirmModal } from '../components/DeleteConfirmModal';
import type { IForm } from '../components/formTypes';
import { useTemplateEditorForm } from '../components/TemplateEditorFormProvider';
import { UpdateButton } from '../components/UpdateButton';
import { useBasePath } from '../hooks/useBasePath';
import { getFormattedStepErrors } from '../shared/errors';
import { NameInput } from './NameInput';
import { AddNodeEdge } from './workflow/edge-types/AddNodeEdge';
import AddNode from './workflow/node-types/AddNode';
import ChannelNode from './workflow/node-types/ChannelNode';
import TriggerNode from './workflow/node-types/TriggerNode';
import { NodeType, NodeData } from '../../../components/workflow/types';
import { useStepInfoPath } from '../hooks/useStepInfoPath';
import { useNavigateToVariantPreview } from '../hooks/useNavigateToVariantPreview';
import { useOnboardingExperiment } from '../../../hooks/useOnboardingExperiment';
import { OnBoardingAnalyticsEnum } from '../../quick-start/consts';

export const TOP_ROW_HEIGHT = 74;

const nodeTypes: Record<string, ComponentType<NodeProps>> = {
  [NodeType.CHANNEL]: ChannelNode,
  [NodeType.TRIGGER]: TriggerNode,
  [NodeType.ADD_NODE]: AddNode,
};

const edgeTypes = { special: AddNodeEdge };

const WorkflowEditor = () => {
  const { addStep, deleteStep, template } = useTemplateEditorForm();
  const { isUnderVariantsListPath } = useStepInfoPath();
  const { channel } = useParams<{
    channel: StepTypeEnum | undefined;
  }>();
  const { navigateToVariantPreview } = useNavigateToVariantPreview();
  const [dragging, setDragging] = useState(false);
  const segment = useSegment();
  const { isOnboardingExperimentEnabled } = useOnboardingExperiment();
  const { currentOrganization } = useAuth();

  const {
    control,
    trigger,
    formState: { errors, isDirty },
  } = useFormContext<IForm>();
  const { readonly, bridge } = useEnvironment({ bridge: template?.bridge });
  const steps = useWatch({
    name: 'steps',
    control,
  });
  const tags = useWatch({ name: 'tags' });

  const tagsIncludesOnboarding = tags?.includes('onboarding') && isOnboardingExperimentEnabled;

  const [toDelete, setToDelete] = useState<string>('');
  const basePath = useBasePath();
  const { pathname } = useLocation();
  const navigate = useNavigate();

  const onNodeClick = useCallback(
    (event, node: Node<NodeData>) => {
      event.preventDefault();
      const { step, channelType } = node.data;
      const isVariant = step && step.variants && step.variants?.length > 0;
      if (isVariant) {
        navigateToVariantPreview({
          channel: channelType,
          stepUuid: step.uuid,
          variantUuid: step.uuid,
        });
      } else if (node.type === NodeType.CHANNEL) {
        navigate(`${basePath}/${channelType}/${step?.uuid ?? ''}/preview`);
      } else if (node.type === NodeType.TRIGGER) {
        navigate(`${basePath}/test-workflow`);
      }
    },
    [navigate, basePath, navigateToVariantPreview]
  );

  const onEdit: IFlowEditorProps['onEdit'] = (_, node) => {
    if (node.type === NodeType.CHANNEL) {
      navigate(`${basePath}/${node.data.channelType}/${node.data.step?.uuid ?? ''}`);
    }
  };

  const onAddVariant = (uuid: string) => {
    const channelStep = steps.find((step) => step.uuid === uuid);

    if (channelStep) {
      navigate(`${basePath}/${channelStep.template.type}/${uuid}/variants/create`);
    }
  };

  const confirmDelete = () => {
    const index = steps.findIndex((item) => item.uuid === toDelete);
    deleteStep(index);
    setToDelete('');
    navigate(basePath);
  };

  const cancelDelete = () => {
    setToDelete('');
  };

  const onDelete = (uuid) => {
    const stepToDelete = steps.find((step) => step.uuid === uuid);

    if (!stepToDelete) {
      setToDelete(uuid);

      return;
    }

    const dependingStep = steps.find((step) => {
      return (
        step.filters?.find(
          (filter) =>
            filter.children?.find(
              (item) => item.on === FilterPartTypeEnum.PREVIOUS_STEP && item.step === stepToDelete.uuid
            ) !== undefined
        ) !== undefined
      );
    });

    if (dependingStep) {
      const sameTypeSteps = steps.filter((step) => step.template.type === dependingStep.template.type);
      const foundIndex = sameTypeSteps.findIndex((step) => step.uuid === dependingStep.uuid);

      const label = channels.find((item) => item.channelType === dependingStep.template.type)?.label;

      errorMessage(
        `${label} ${
          sameTypeSteps.length > 1 ? `(${foundIndex + 1}) ` : ''
        } filters is depending on the step you try to delete`
      );

      return;
    }

    setToDelete(uuid);
  };

  const onStepInit = async () => {
    await trigger('steps');
  };

  const onGetStepError = (i: number) => getFormattedStepErrors(i, errors);

  const [shouldPulse, setShouldPulse] = useState(false);

  useDidUpdate(() => {
    if (isDirty) {
      return;
    }
    setShouldPulse(true);
    start();
  }, [isDirty]);

  const { start } = useTimeout(() => {
    setShouldPulse(false);
  }, 5000);

  if (readonly && pathname === basePath) {
    return (
      <div style={{ display: 'flex', flexFlow: 'row' }}>
        <div
          style={{
            flex: '1 1 auto',
            display: 'flex',
            flexFlow: 'Column',
          }}
        >
          <Container fluid sx={{ width: '100%', height: `${TOP_ROW_HEIGHT}px` }}>
            <Stack
              justify="center"
              sx={{
                height: '100%',
              }}
            >
              <Group>
                <Bolt color="#4c6dd4" width="24px" height="24px" />
                <NameInput />
                <UpdateButton />
                <Button
                  onClick={() => {
                    navigate(`${basePath}/snippet`);
                  }}
                  data-test-id="get-snippet-btn"
                >
                  Get Snippet
                </Button>
                <Link data-test-id="settings-page" to="settings">
                  <Settings />
                </Link>
              </Group>
            </Stack>
          </Container>
          <FlowEditor
            isReadonly
            onDelete={onDelete}
            dragging={dragging}
            errors={errors}
            steps={steps}
            nodeTypes={nodeTypes}
            edgeTypes={edgeTypes}
            addStep={addStep}
            onStepInit={onStepInit}
            onGetStepError={onGetStepError}
            onNodeClick={onNodeClick}
            onEdit={onEdit}
            onAddVariant={onAddVariant}
          />
        </div>
      </div>
    );
  }

  const isEmailChannel = channel && [StepTypeEnum.EMAIL, StepTypeEnum.IN_APP].includes(channel);
  const isPreviewPath = pathname.endsWith('/preview');

  return (
    <>
      <When truthy={!isUnderVariantsListPath && !isPreviewPath && isEmailChannel}>
        <Outlet
          context={{
            setDragging,
            onDelete,
          }}
        />
      </When>
      <When
        truthy={
          !channel ||
          ![StepTypeEnum.EMAIL, StepTypeEnum.IN_APP].includes(channel) ||
          isUnderVariantsListPath ||
          isPreviewPath
        }
      >
        <div style={{ display: 'flex', flexFlow: 'row', position: 'relative' }}>
          <div
            style={{
              flex: '1 1 auto',
              display: 'flex',
              flexFlow: 'Column',
            }}
          >
            <Container fluid sx={{ width: '100%', height: `${TOP_ROW_HEIGHT}px` }}>
              <Stack
                justify="center"
                sx={{
                  height: '100%',
                }}
              >
                <Group>
                  <When truthy={bridge}>
                    <Bolt color="#4c6dd4" width="24px" height="24px" />
                  </When>
                  <NameInput />
                  <When truthy={!channel}>
                    <Group>
                      <UpdateButton />
                    </Group>
                  </When>
                  <When truthy={pathname === basePath}>
                    <Button
                      pulse={tagsIncludesOnboarding || shouldPulse}
                      onClick={() => {
                        if (tagsIncludesOnboarding) {
                          segment.track(OnBoardingAnalyticsEnum.ONBOARDING_EXPERIMENT_TEST_NOTIFICATION, {
                            action: 'Workflow - Send test notification',
                            experiment_id: '2024-w9-onb',
                            _organization: currentOrganization?._id,
                          });
                          navigate(`${basePath}/test-workflow`);
                        } else {
                          navigate(`${basePath}/snippet`);
                        }
                      }}
                      data-test-id="get-snippet-btn"
                    >
                      Trigger Notification
                    </Button>
                    <Link data-test-id="settings-page" to="settings">
                      <Settings />
                    </Link>
                  </When>
                </Group>
              </Stack>
            </Container>
            <FlowEditor
              isReadonly={readonly}
              onEdit={onEdit}
              onDelete={onDelete}
              dragging={dragging}
              errors={errors}
              steps={steps}
              nodeTypes={nodeTypes}
              edgeTypes={edgeTypes}
              addStep={addStep}
              onStepInit={onStepInit}
              onGetStepError={onGetStepError}
              onNodeClick={onNodeClick}
              onAddVariant={onAddVariant}
              sidebarOpen={!(pathname === basePath)}
            />
          </div>
          <Outlet
            context={{
              setDragging,
              onDelete,
            }}
          />
        </div>
      </When>
      <DeleteConfirmModal
        description={
          'This cannot be undone. ' +
          'The trigger code will be updated and this step will no longer participate in the notification workflow.'
        }
        target="step"
        title={`Delete step?`}
        isOpen={toDelete.length > 0}
        confirm={confirmDelete}
        cancel={cancelDelete}
        confirmButtonText="Delete step"
        cancelButtonText="Cancel"
      />
    </>
  );
};

export default WorkflowEditor;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Container, Group, Stack } from '@mantine/core';
import { ComponentType, useCallback, useState } from 'react';
import { useFormContext, useWatch } from 'react-hook-form';
import { Link, Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';
import { Node, NodeProps } from 'react-flow-renderer';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/SideBar/AddStepMenu.tsx
Tamaño: 3137 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Stack, Title } from '@mantine/core';
import { colors, DragButton, Tooltip } from '@novu/design-system';
import { StepTypeEnum } from '@novu/shared';
import { When } from '../../../../components/utils/When';
import { useEnvironment } from '../../../../hooks';
import { channels, NodeTypeEnum } from '../../../../utils/channels';
import { TOP_ROW_HEIGHT } from '../WorkflowEditor';

export function AddStepMenu({
  setDragging,
  onDragStart,
}: {
  setDragging: (value: ((prevState: boolean) => boolean) | boolean) => void;
  onDragStart: (event, nodeType) => void;
}) {
  const { readonly } = useEnvironment();

  return (
    <StyledNav data-test-id="drag-side-menu">
      <div>
        <Title color={colors.B60} size={14} mb={12} ta="center">
          Actions
        </Title>
      </div>
      <When truthy={!readonly}>
        <Stack spacing={18} mb={16}>
          {channels
            .filter((channel) => channel.type === NodeTypeEnum.ACTION)
            .filter((channel) => channel.channelType !== StepTypeEnum.CUSTOM)
            .map((channel, index) => (
              <DraggableNode key={index} channel={channel} setDragging={setDragging} onDragStart={onDragStart} />
            ))}
        </Stack>
      </When>

      <div
        style={{
          marginTop: '24px',
        }}
      >
        <Title color={colors.B60} size={14} mb={12} ta="center">
          Channels
        </Title>
      </div>
      <When truthy={!readonly}>
        <Stack spacing={18}>
          {channels
            .filter((channel) => channel.type === NodeTypeEnum.CHANNEL)
            .map((channel, index) => (
              <DraggableNode key={index} channel={channel} setDragging={setDragging} onDragStart={onDragStart} />
            ))}
        </Stack>
      </When>
    </StyledNav>
  );
}

const DraggableNode = ({ channel, setDragging, onDragStart }) => (
  <Tooltip label={channel.label} position="left" offset={18}>
    <StyledDraggableNode
      key={channel.tabKey}
      data-test-id={`dnd-${channel.testId}`}
      onDragStart={(event) => {
        setDragging(true);
        onDragStart(event, channel.channelType);
      }}
      onDragEnd={() => {
        setDragging(false);
      }}
      draggable
      role="presentation"
      aria-grabbed="true"
    >
      <DragButton Icon={channel.Icon} description={''} />
    </StyledDraggableNode>
  </Tooltip>
);

const StyledNav = styled.div`
  padding: 16px;
  background: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B15 : colors.white)};
  border-radius: 12px;
  z-index: 3;
  margin-top: -${TOP_ROW_HEIGHT}px;
`;

const StyledDraggableNode = styled.div`
  &:not(:hover) svg path {
    stop-color: currentcolor;
    fill: currentcolor;
  }

  &:hover {
    svg {
      stop:first-of-type {
        stop-color: #dd2476 !important;
      }
      stop:last-child {
        stop-color: #ff512f !important;
      }
    }
    [data-blue-gradient-svg] {
      stop:first-of-type {
        stop-color: #4c6dd4 !important;
      }
      stop:last-child {
        stop-color: #66d9e8 !important;
      }
    }
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Stack, Title } from '@mantine/core';
import { colors, DragButton, Tooltip } from '@novu/design-system';
import { StepTypeEnum } from '@novu/shared';
import { When } from '../../../../components/utils/When';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/SideBar/Sidebar.tsx
Tamaño: 1161 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Stack, useMantineColorScheme } from '@mantine/core';
import { useOutletContext } from 'react-router-dom';
import { useEnvironment } from '../../../../hooks';
import { TOP_ROW_HEIGHT } from '../WorkflowEditor';
import { AddStepMenu } from './AddStepMenu';

export const Sidebar = () => {
  const { colorScheme } = useMantineColorScheme();
  const onDragStart = (event, nodeType) => {
    event.dataTransfer.setData('application/reactflow', nodeType);
    event.dataTransfer.effectAllowed = 'move';
  };
  const { setDragging }: any = useOutletContext();
  const { readonly } = useEnvironment();

  if (readonly) {
    return null;
  }

  return (
    <SideBarWrapper dark={colorScheme === 'dark'}>
      <Stack
        sx={{
          height: '100%',
        }}
        justify="center"
        align="center"
      >
        <AddStepMenu setDragging={setDragging} onDragStart={onDragStart} />
      </Stack>
    </SideBarWrapper>
  );
};

const SideBarWrapper = styled.div<{ dark: boolean }>`
  position: absolute;
  top: ${TOP_ROW_HEIGHT}px;
  bottom: 0;
  background: transparent;
  right: 8px;
  z-index: 5;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Stack, useMantineColorScheme } from '@mantine/core';
import { useOutletContext } from 'react-router-dom';
import { useEnvironment } from '../../../../hooks';
import { TOP_ROW_HEIGHT } from '../WorkflowEditor';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/SideBar/StepSettings.tsx
Tamaño: 1424 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group } from '@mantine/core';
import { useParams } from 'react-router-dom';
import { StepTypeEnum } from '@novu/shared';

import { StepActiveSwitch } from '../StepActiveSwitch';
import { ShouldStopOnFailSwitch } from '../ShouldStopOnFailSwitch';
import { ReplyCallback, ReplyCallbackSwitch } from '../ReplyCallback';
import { When } from '../../../../components/utils/When';
import { UpdateButton } from '../../components/UpdateButton';
import { useEnvironment } from '../../../../hooks';
import { useTemplateEditorForm } from '../../components/TemplateEditorFormProvider';

export function StepSettings() {
  const { channel: channelType } = useParams<{
    channel: StepTypeEnum;
  }>();
  const { template } = useTemplateEditorForm();
  const { bridge } = useEnvironment({ bridge: template?.bridge });

  return (
    <>
      <Group position="apart" spacing={8}>
        <Group spacing={12}>
          <When truthy={!bridge}>
            <When truthy={channelType !== StepTypeEnum.DIGEST && channelType !== StepTypeEnum.DELAY}>
              <StepActiveSwitch />
              <ShouldStopOnFailSwitch />
              <When truthy={channelType === StepTypeEnum.EMAIL}>
                <ReplyCallbackSwitch />
              </When>
            </When>
          </When>
        </Group>
        <UpdateButton />
      </Group>
      <When truthy={!bridge}>
        <ReplyCallback />
      </When>
    </>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group } from '@mantine/core';
import { useParams } from 'react-router-dom';
import { StepTypeEnum } from '@novu/shared';
import { StepActiveSwitch } from '../StepActiveSwitch';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/digest/BackOffFields.tsx
Tamaño: 4070 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, Collapse } from '@mantine/core';
import { Controller, useFormContext } from 'react-hook-form';
import { DigestTypeEnum } from '@novu/shared';

import { colors, Input, Switch, Tooltip, inputStyles, Text } from '@novu/design-system';
import { IntervalSelect } from './IntervalSelect';
import { BackOffTooltipIcon } from './icons/BackOffTooltipIcon';
import { When } from '../../../../components/utils/When';
import { useEnvironment } from '../../../../hooks';
import { useStepFormPath } from '../../hooks/useStepFormPath';

const defaultBackoffAmount = '5';

export const BackOffFields = () => {
  const { readonly } = useEnvironment();
  const stepFormPath = useStepFormPath();
  const {
    control,
    formState: { errors, isSubmitted },
    watch,
    setValue,
  } = useFormContext();

  const backoff = watch(`${stepFormPath}.digestMetadata.${DigestTypeEnum.REGULAR}.backoff`);
  const backoffAmountFieldName = `${stepFormPath}.digestMetadata.${DigestTypeEnum.REGULAR}.backoffAmount`;
  const showErrors = isSubmitted && errors?.steps;

  return (
    <>
      <Tooltip
        width={312}
        multiline
        position="left"
        label={
          <>
            <div>
              When the 2nd event occurs after the previous digest was sent, system starts to aggregate any further
              events.
            </div>
            <BackOffTooltipIcon />
          </>
        }
      >
        <Group spacing={0} mt={20} sx={{ color: colors.B60 }}>
          <Controller
            name={`${stepFormPath}.digestMetadata.${DigestTypeEnum.REGULAR}.backoff`}
            defaultValue={false}
            control={control}
            render={({ field }) => {
              return <Switch data-test-id="backoff-switch" checked={field.value === true} onChange={field.onChange} />;
            }}
          />
          <Text ml={10} color={colors.B60}>
            Only frequent events
          </Text>
        </Group>
      </Tooltip>
      <Collapse in={backoff}>
        <When truthy={backoff}>
          <div style={{ color: colors.B60, marginBottom: 16, marginTop: 16 }}>Start digest only after occurred:</div>
          <Group spacing={8} sx={{ color: colors.B60 }}>
            <span>more than 1 event for the last</span>
            <Controller
              control={control}
              name={backoffAmountFieldName}
              defaultValue={defaultBackoffAmount}
              render={({ field, fieldState }) => {
                return (
                  <Input
                    {...field}
                    value={field.value || ''}
                    min={0}
                    max={100}
                    type="number"
                    data-test-id="backoff-amount"
                    placeholder="0"
                    disabled={readonly}
                    styles={(theme) => ({
                      ...inputStyles(theme),
                      input: {
                        textAlign: 'center',
                        ...inputStyles(theme).input,
                        minHeight: '30px',
                        margin: 0,
                        height: 30,
                        lineHeight: '32px',
                      },
                    })}
                    onBlur={(e) => {
                      if (e.target.value === '') {
                        setValue(backoffAmountFieldName, defaultBackoffAmount);
                      }
                      field.onBlur();
                    }}
                  />
                );
              }}
            />
            <div
              style={{
                width: '90px',
                height: 30,
              }}
            >
              <IntervalSelect
                readonly={readonly}
                control={control}
                name={`${stepFormPath}.digestMetadata.${DigestTypeEnum.REGULAR}.backoffUnit`}
                showErrors={showErrors}
                testId="time-unit-backoff"
              />
            </div>
          </Group>
        </When>
      </Collapse>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, Collapse } from '@mantine/core';
import { Controller, useFormContext } from 'react-hook-form';
import { DigestTypeEnum } from '@novu/shared';
import { colors, Input, Switch, Tooltip, inputStyles, Text } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/digest/DaySelect.tsx
Tamaño: 3226 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Grid, UnstyledButton, createStyles, MantineTheme } from '@mantine/core';
import { colors } from '@novu/design-system';

const useStyles = createStyles<string, { active: boolean; disabled: boolean }>((theme: MantineTheme, _params) => {
  const { active } = _params;
  const { disabled } = _params;
  const isDark = theme.colorScheme === 'dark';

  const border = `1px solid ${isDark ? colors.B30 : colors.B60}`;

  return {
    day: {
      button: {
        borderBottom: border,
        borderLeft: border,
        padding: '7px 0',
        textAlign: 'center',
        width: '100%',
        background: active ? colors.B60 : undefined,
        color: active ? colors.white : isDark ? colors.B80 : colors.B60,
        opacity: disabled ? 0.4 : 1,
        cursor: disabled ? 'default' : 'pointer',
        borderColor: isDark ? colors.B30 : colors.B60,
      },
      '&:nth-of-type(1) button': {
        borderTopLeftRadius: 4,
        borderTop: border,
      },
      '&:nth-of-type(2) button': {
        borderTop: border,
      },
      '&:nth-of-type(3) button': {
        borderTop: border,
      },
      '&:nth-of-type(4) button': {
        borderTop: border,
      },
      '&:nth-of-type(5) button': {
        borderTop: border,
      },
      '&:nth-of-type(6) button': {
        borderTop: border,
      },
      '&:nth-of-type(7) button': {
        borderRight: border,
        borderTopRightRadius: 4,
        borderTop: border,
      },
      '&:nth-of-type(14) button': {
        borderRight: border,
      },
      '&:nth-of-type(21) button': {
        borderRight: border,
      },
      '&:nth-of-type(28) button': {
        borderRight: border,
      },
      '&:nth-of-type(29) button': {
        borderBottomLeftRadius: 4,
      },
      '&:nth-of-type(31) button': {
        borderRight: border,
      },
    },
  };
});

const Day = ({ label, value, onClick, active, disabled = false }) => {
  const { classes } = useStyles({ active, disabled });

  return (
    <Grid.Col className={classes.day} span={1}>
      <UnstyledButton
        onClick={() => {
          onClick(value);
        }}
        className={active ? 'active-day' : undefined}
        disabled={disabled}
      >
        {label}
      </UnstyledButton>
    </Grid.Col>
  );
};

const items: number[] = [
  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
];

export const DaySelect = ({
  onChange = (value: number[]) => {},
  value = [],
  disabled = false,
}: {
  onChange: (value: number[]) => void;
  value: number[];
  disabled?: boolean;
}) => {
  return (
    <Grid data-test-id="day-select" gutter={0} columns={7} mt={10}>
      {items.map((day) => {
        return (
          <Day
            label={day}
            value={day}
            key={day}
            disabled={disabled}
            onClick={(clicked) => {
              if (value.includes(clicked)) {
                onChange([...value].filter((item) => item !== clicked).sort());

                return;
              }
              onChange([...value, clicked].sort());
            }}
            active={value.includes(day)}
          />
        );
      })}
    </Grid>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Grid, UnstyledButton, createStyles, MantineTheme } from '@mantine/core';
import { colors } from '@novu/design-system';
const useStyles = createStyles<string, { active: boolean; disabled: boolean }>((theme: MantineTheme, _params) => {
const { active } = _params;
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/digest/IntervalSelect.tsx
Tamaño: 1332 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { DigestUnitEnum } from '@novu/shared';
import { Controller } from 'react-hook-form';
import { Select, inputStyles } from '@novu/design-system';

const options = [
  { value: DigestUnitEnum.SECONDS, label: 'sec (s)' },
  { value: DigestUnitEnum.MINUTES, label: 'min (s)' },
  { value: DigestUnitEnum.HOURS, label: 'hour (s)' },
  { value: DigestUnitEnum.DAYS, label: 'day (s)' },
];

export const IntervalSelect = ({
  control,
  name,
  showErrors,
  readonly,
  testId = 'time-unit',
  defaultValue = DigestUnitEnum.SECONDS,
}) => {
  return (
    <Controller
      control={control}
      name={name}
      defaultValue={defaultValue}
      render={({ field, fieldState }) => {
        return (
          <Select
            rightSectionWidth={20}
            disabled={readonly}
            data={options}
            dataTestId={testId}
            error={showErrors && fieldState.error?.message}
            inputProps={{
              styles: (theme) => ({
                ...inputStyles,
                input: {
                  ...inputStyles(theme).input,
                  margin: 0,
                  minHeight: '30px',
                  height: 30,
                  lineHeight: '32px',
                },
              }),
            }}
            {...field}
          />
        );
      }}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { DigestUnitEnum } from '@novu/shared';
import { Controller } from 'react-hook-form';
import { Select, inputStyles } from '@novu/design-system';
const options = [
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/digest/ScheduleMonthlyFields.tsx
Tamaño: 5187 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Group, Radio, SimpleGrid, Text } from '@mantine/core';
import { Controller, useFormContext } from 'react-hook-form';
import { DigestUnitEnum, OrdinalEnum, OrdinalValueEnum, MonthlyTypeEnum, DigestTypeEnum } from '@novu/shared';

import { colors, Select, When } from '@novu/design-system';
import { DaySelect } from './DaySelect';
import { useEnvironment } from '../../../../hooks';
import { useStepFormPath } from '../../hooks/useStepFormPath';

export const ScheduleMonthlyFields = () => {
  const { readonly } = useEnvironment();
  const { watch, control } = useFormContext();
  const stepFormPath = useStepFormPath();

  const ordinalFieldName = `${stepFormPath}.digestMetadata.${DigestTypeEnum.TIMED}.${DigestUnitEnum.MONTHS}.ordinal`;
  const ordinalValueFieldName = `${stepFormPath}.digestMetadata.${DigestTypeEnum.TIMED}.${DigestUnitEnum.MONTHS}.ordinalValue`;
  const ordinal = watch(ordinalFieldName);
  const ordinalValue = watch(ordinalValueFieldName);

  return (
    <Controller
      name={`${stepFormPath}.digestMetadata.${DigestTypeEnum.TIMED}.${DigestUnitEnum.MONTHS}.monthlyType`}
      defaultValue={MonthlyTypeEnum.EACH}
      control={control}
      render={({ field: radioGroup }) => {
        return (
          <Radio.Group
            spacing={0}
            defaultValue={MonthlyTypeEnum.EACH}
            value={radioGroup.value}
            onChange={radioGroup.onChange}
          >
            <Group spacing={8} mb={10} mt={34} sx={{ color: colors.B60 }}>
              <Radio value={MonthlyTypeEnum.EACH} />
              <div>Each</div>
            </Group>
            <Controller
              control={control}
              name={`${stepFormPath}.digestMetadata.${DigestTypeEnum.TIMED}.${DigestUnitEnum.MONTHS}.monthDays`}
              defaultValue={[new Date().getDate()]}
              render={({ field }) => {
                return <DaySelect value={field.value} disabled={readonly} onChange={field.onChange} />;
              }}
            />
            <Group spacing={8} mb={10} mt={34} sx={{ color: colors.B60 }}>
              <Radio value={MonthlyTypeEnum.ON} />
              <div>On the</div>
            </Group>
            <SimpleGrid cols={2} spacing={16}>
              <Controller
                name={ordinalFieldName}
                defaultValue={OrdinalEnum.FIRST}
                control={control}
                render={({ field }) => {
                  return (
                    <Select
                      value={field.value}
                      onChange={field.onChange}
                      mt={-5}
                      mb={-5}
                      data={[
                        { value: OrdinalEnum.FIRST, label: 'First' },
                        { value: OrdinalEnum.SECOND, label: 'Second' },
                        { value: OrdinalEnum.THIRD, label: 'Third' },
                        { value: OrdinalEnum.FOURTH, label: 'Fourth' },
                        { value: OrdinalEnum.FIFTH, label: 'Fifth' },
                        { value: OrdinalEnum.LAST, label: 'Last' },
                      ]}
                      placeholder="First"
                    />
                  );
                }}
              />
              <Controller
                name={ordinalValueFieldName}
                defaultValue={OrdinalValueEnum.DAY}
                control={control}
                render={({ field }) => {
                  return (
                    <Select
                      value={field.value}
                      onChange={field.onChange}
                      mt={-5}
                      mb={-5}
                      data={[
                        { value: OrdinalValueEnum.DAY, label: 'Day' },
                        { value: OrdinalValueEnum.WEEKDAY, label: 'Weekday' },
                        { value: OrdinalValueEnum.WEEKEND, label: 'Weekend day' },
                        { value: OrdinalValueEnum.SUNDAY, label: 'Sunday' },
                        { value: OrdinalValueEnum.MONDAY, label: 'Monday' },
                        { value: OrdinalValueEnum.TUESDAY, label: 'Tuesday' },
                        { value: OrdinalValueEnum.WEDNESDAY, label: 'Wednesday' },
                        { value: OrdinalValueEnum.THURSDAY, label: 'Thursday' },
                        { value: OrdinalValueEnum.FRIDAY, label: 'Friday' },
                        { value: OrdinalValueEnum.SATURDAY, label: 'Saturday' },
                      ]}
                      placeholder="Day"
                    />
                  );
                }}
              />
            </SimpleGrid>
            <When
              truthy={
                ordinal === OrdinalEnum.FIFTH &&
                ![OrdinalValueEnum.DAY, OrdinalValueEnum.WEEKDAY, undefined].includes(ordinalValue)
              }
            >
              <Text
                size={12}
                color={colors.error}
                sx={{
                  lineHeight: '20px',
                }}
              >
                Will not be sent in those months in which there is no such day
              </Text>
            </When>
          </Radio.Group>
        );
      }}
    />
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Group, Radio, SimpleGrid, Text } from '@mantine/core';
import { Controller, useFormContext } from 'react-hook-form';
import { DigestUnitEnum, OrdinalEnum, OrdinalValueEnum, MonthlyTypeEnum, DigestTypeEnum } from '@novu/shared';
import { colors, Select, When } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/digest/TimedDigestWillBeSentHeader.tsx
Tamaño: 6870 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useFormContext } from 'react-hook-form';
import capitalize from 'lodash.capitalize';
import { useMantineColorScheme } from '@mantine/core';
import { DigestUnitEnum, MonthlyTypeEnum } from '@novu/shared';

import { colors } from '@novu/design-system';
import { pluralizeTime } from '../../../../utils';

const Highlight = ({ children, isHighlight }) => {
  const { colorScheme } = useMantineColorScheme();
  if (!isHighlight) {
    return children;
  }

  return (
    <b
      style={{
        color: colorScheme === 'dark' ? colors.B80 : colors.B40,
      }}
    >
      {children}
    </b>
  );
};

const getOrdinalValueLabel = (value: string) => {
  if (value === 'day' || value === 'weekday') {
    return value;
  }
  if (value === 'weekend') {
    return 'weekend day';
  }

  return capitalize(value);
};

const getOrdinal = (num: string | number) => {
  if (typeof num === 'string') {
    const res = parseInt(num, 10);

    if (Number.isNaN(res)) {
      return num;
    }
    num = res;
  }
  const ord = ['st', 'nd', 'rd'];
  const exceptions = [11, 12, 13];
  let nth = ord[(num % 10) - 1];

  if (ord[(num % 10) - 1] === undefined || exceptions.includes(num % 100)) {
    nth = 'th';
  }

  return num + nth;
};

const WEEKDAYS_ORDER: string[] = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];

const sortWeekdays = (weekdays: string[]): string[] => {
  return weekdays.sort((a, b) => WEEKDAYS_ORDER.indexOf(a) - WEEKDAYS_ORDER.indexOf(b));
};

export const TimedDigestWillBeSentHeader = ({ path, isHighlight = true }: { path: string; isHighlight?: boolean }) => {
  const { watch } = useFormContext();

  const unit = watch(`${path}.digestMetadata.timed.unit`);
  if (unit === DigestUnitEnum.MINUTES) {
    const amount = watch(`${path}.digestMetadata.timed.minutes.amount`);

    return (
      <>
        Every <Highlight isHighlight={isHighlight}>{pluralizeTime(amount, 'minute')}</Highlight>
      </>
    );
  }

  if (unit === DigestUnitEnum.HOURS) {
    const amount = watch(`${path}.digestMetadata.timed.hours.amount`);

    return (
      <>
        Every <Highlight isHighlight={isHighlight}>{pluralizeTime(amount, 'hour')}</Highlight>
      </>
    );
  }

  if (unit === DigestUnitEnum.DAYS) {
    const amount = watch(`${path}.digestMetadata.timed.days.amount`);
    const atTime = watch(`${path}.digestMetadata.timed.days.atTime`);

    if (amount !== '' && amount !== '1') {
      return (
        <>
          Every <Highlight isHighlight={isHighlight}>{getOrdinal(amount)} </Highlight> day
          {atTime && (
            <>
              {' '}
              at <Highlight isHighlight={isHighlight}>{atTime}</Highlight>
            </>
          )}
        </>
      );
    }

    return (
      <>
        <Highlight isHighlight={isHighlight}>Daily</Highlight>
        {atTime && (
          <>
            {' '}
            at <Highlight isHighlight={isHighlight}>{atTime}</Highlight>
          </>
        )}
      </>
    );
  }

  if (unit === DigestUnitEnum.WEEKS) {
    const amount = watch(`${path}.digestMetadata.timed.weeks.amount`);
    const atTime = watch(`${path}.digestMetadata.timed.weeks.atTime`);
    const weekDays = watch(`${path}.digestMetadata.timed.weeks.weekDays`) || [];

    const weekDaysString =
      weekDays?.length > 2
        ? sortWeekdays(weekDays)
            ?.slice(0, 2)
            .map((item) => capitalize(item))
            .join(', ')
            .concat('...')
        : sortWeekdays(weekDays)
            ?.map((item) => capitalize(item))
            .join(', ');

    if (amount !== '' && amount !== '1') {
      return (
        <>
          Every <Highlight isHighlight={isHighlight}>{getOrdinal(amount)} </Highlight> week on{' '}
          <Highlight isHighlight={isHighlight}>{weekDaysString}</Highlight>
          {atTime && (
            <>
              {' '}
              at <Highlight isHighlight={isHighlight}>{atTime}</Highlight>
            </>
          )}
        </>
      );
    }

    return (
      <>
        <Highlight isHighlight={isHighlight}>Weekly</Highlight> on{' '}
        <Highlight isHighlight={isHighlight}>{weekDaysString}</Highlight>
        {atTime && (
          <>
            {' '}
            at <Highlight isHighlight={isHighlight}>{atTime}</Highlight>
          </>
        )}
      </>
    );
  }

  const amount = watch(`${path}.digestMetadata.timed.months.amount`);
  const monthlyType = watch(`${path}.digestMetadata.timed.months.monthlyType`);
  const atTime = watch(`${path}.digestMetadata.timed.months.atTime`);
  const monthDays = watch(`${path}.digestMetadata.timed.months.monthDays`) || [];

  if (monthlyType === MonthlyTypeEnum.ON) {
    const ordinal = watch(`${path}.digestMetadata.timed.months.ordinal`);
    const ordinalValue = watch(`${path}.digestMetadata.timed.months.ordinalValue`);

    if (!ordinal || !ordinalValue) {
      return null;
    }

    if (amount !== '' && amount !== '1') {
      return (
        <>
          Every <Highlight isHighlight={isHighlight}>{getOrdinal(amount)} </Highlight> month on{' '}
          <Highlight isHighlight={isHighlight}>
            {getOrdinal(ordinal)} {getOrdinalValueLabel(ordinalValue)}
          </Highlight>
          {atTime && (
            <>
              {' '}
              at <Highlight isHighlight={isHighlight}>{atTime}</Highlight>
            </>
          )}
        </>
      );
    }

    return (
      <>
        <Highlight isHighlight={isHighlight}>Monthly</Highlight> on the{' '}
        <Highlight isHighlight={isHighlight}>
          {getOrdinal(ordinal)} {getOrdinalValueLabel(ordinalValue)}
        </Highlight>
        {atTime && (
          <>
            {' '}
            at <Highlight isHighlight={isHighlight}>{atTime}</Highlight>
          </>
        )}
      </>
    );
  }

  const monthDaysString =
    monthDays?.length > 3
      ? monthDays
          .sort()
          ?.slice(0, 3)
          .map((item) => getOrdinal(item))
          .join(', ')
          .concat('...')
      : monthDays
          .sort()
          ?.map((item) => getOrdinal(item))
          .join(', ');

  if (amount !== '' && amount !== '1') {
    return (
      <>
        Every <Highlight isHighlight={isHighlight}>{getOrdinal(amount)} </Highlight> month on{' '}
        <Highlight isHighlight={isHighlight}>{monthDaysString}</Highlight>
        {atTime && (
          <>
            {' '}
            at <Highlight isHighlight={isHighlight}>{atTime}</Highlight>
          </>
        )}
      </>
    );
  }

  return (
    <>
      <Highlight isHighlight={isHighlight}>Monthly</Highlight> on{' '}
      <Highlight isHighlight={isHighlight}>{monthDaysString}</Highlight>
      {atTime && (
        <>
          {' '}
          at <Highlight isHighlight={isHighlight}>{atTime}</Highlight>
        </>
      )}
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useFormContext } from 'react-hook-form';
import capitalize from 'lodash.capitalize';
import { useMantineColorScheme } from '@mantine/core';
import { DigestUnitEnum, MonthlyTypeEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/digest/WeekDaySelect.tsx
Tamaño: 2816 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { DaysEnum } from '@novu/shared';
import { createStyles, Group, MantineTheme, UnstyledButton } from '@mantine/core';
import { colors } from '@novu/design-system';

const useStyles = createStyles<string, { active: boolean; disabled: boolean; last: boolean }>(
  (theme: MantineTheme, _params) => {
    const { active } = _params;
    const { disabled } = _params;
    const { last } = _params;
    const isDark = theme.colorScheme === 'dark';

    const border = `1px solid ${isDark ? colors.B30 : colors.B60}`;

    return {
      day: {
        borderRight: last ? undefined : border,
        padding: '8px',
        textAlign: 'center',
        background: active ? colors.B60 : undefined,
        color: active ? colors.white : isDark ? colors.B80 : colors.B60,
        borderColor: isDark ? colors.B30 : colors.B60,
        cursor: disabled ? 'default' : 'pointer',
      },
      days: {
        border,
        borderRadius: 4,
        width: 'auto',
        overflow: 'hidden',
        marginTop: 24,
        opacity: disabled ? 0.4 : 1,
      },
    };
  }
);

const Day = ({ last, label, value, onClick, active, disabled = false }) => {
  const { classes } = useStyles({ active, disabled, last });

  return (
    <UnstyledButton
      onClick={() => {
        onClick(value);
      }}
      className={`${classes.day} ${active ? 'active-day' : undefined}`}
    >
      {label}
    </UnstyledButton>
  );
};

const items = [
  {
    label: 'Mon',
    value: DaysEnum.MONDAY,
  },
  {
    label: 'Tue',
    value: DaysEnum.TUESDAY,
  },
  {
    label: 'Wed',
    value: DaysEnum.WEDNESDAY,
  },
  {
    label: 'Thu',
    value: DaysEnum.THURSDAY,
  },
  {
    label: 'Fri',
    value: DaysEnum.FRIDAY,
  },
  {
    label: 'Sat',
    value: DaysEnum.SATURDAY,
  },
  {
    label: 'Sun',
    value: DaysEnum.SUNDAY,
  },
];

export const WeekDaySelect = ({
  onChange = (value: DaysEnum[]) => {},
  value = [],
  disabled = false,
}: {
  onChange: (value: DaysEnum[]) => void;
  value: DaysEnum[];
  disabled?: boolean;
}) => {
  const { classes } = useStyles({ active: false, disabled, last: false });

  return (
    <Group data-test-id="weekday-select" grow spacing={0} className={classes.days}>
      {items.map((day, index) => {
        return (
          <Day
            label={day.label}
            value={day.value}
            key={day.value}
            disabled={disabled}
            last={items.length - 1 === index}
            onClick={(clicked) => {
              if (value.includes(clicked)) {
                onChange([...value].filter((item) => item !== clicked).sort());

                return;
              }
              onChange([...value, clicked].sort());
            }}
            active={value.includes(day.value)}
          />
        );
      })}
    </Group>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { DaysEnum } from '@novu/shared';
import { createStyles, Group, MantineTheme, UnstyledButton } from '@mantine/core';
import { colors } from '@novu/design-system';
const useStyles = createStyles<string, { active: boolean; disabled: boolean; last: boolean }>(
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/digest/WillBeSentHeader.tsx
Tamaño: 1769 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useFormContext } from 'react-hook-form';
import { useMantineColorScheme } from '@mantine/core';
import { DigestTypeEnum, DigestUnitEnum } from '@novu/shared';
import { colors } from '@novu/design-system';

import { pluralizeTime } from '../../../../utils';
import { TimedDigestWillBeSentHeader } from './TimedDigestWillBeSentHeader';

const DIGEST_UNIT_TYPE_TO_SINGULAR = {
  [DigestUnitEnum.SECONDS]: 'second',
  [DigestUnitEnum.MINUTES]: 'minute',
  [DigestUnitEnum.HOURS]: 'hour',
  [DigestUnitEnum.DAYS]: 'day',
  [DigestUnitEnum.WEEKS]: 'week',
  [DigestUnitEnum.MONTHS]: 'month',
};

const Highlight = ({ children, isHighlight }) => {
  const { colorScheme } = useMantineColorScheme();
  if (!isHighlight) {
    return children;
  }

  return (
    <b
      style={{
        color: colorScheme === 'dark' ? colors.B80 : colors.B40,
      }}
    >
      {children}
    </b>
  );
};

export const WillBeSentHeader = ({ path, isHighlight = true }: { path: string; isHighlight?: boolean }) => {
  const { watch } = useFormContext();
  const type = watch(`${path}.digestMetadata.type`);

  if (type === DigestTypeEnum.TIMED) {
    return <TimedDigestWillBeSentHeader path={path} isHighlight={isHighlight} />;
  }

  const unit = watch(`${path}.digestMetadata.regular.unit`);
  const amount = watch(`${path}.digestMetadata.regular.amount`);
  const backoff = watch(`${path}.digestMetadata.regular.backoff`);

  return (
    <>
      after <Highlight isHighlight={isHighlight}>{pluralizeTime(amount, DIGEST_UNIT_TYPE_TO_SINGULAR[unit])}</Highlight>
      {backoff ? (
        <>
          {isHighlight && <br />} only if <Highlight isHighlight={isHighlight}>frequent events</Highlight> occur
        </>
      ) : (
        ' occur on'
      )}
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useFormContext } from 'react-hook-form';
import { useMantineColorScheme } from '@mantine/core';
import { DigestTypeEnum, DigestUnitEnum } from '@novu/shared';
import { colors } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/digest/TypeSegment/TypeSegment.styles.ts
Tamaño: 975 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { createStyles, MantineSize, MantineTheme } from '@mantine/core';
import { colors, shadows, getGradient } from '@novu/design-system';

export default createStyles<string, { size: MantineSize }>((theme: MantineTheme, _params, getRef) => {
  const dark = theme.colorScheme === 'dark';
  const label = getRef('label');

  return {
    root: {
      width: '100%',
      maxWidth: '300px',
      background: dark ? colors.B20 : colors.B98,
      padding: '5px',
      boxShadow: shadows.dark,
    },
    active: {
      background: `${dark ? getGradient(colors.BGDark) : getGradient(colors.white)} padding-box, ${
        colors.horizontal
      } border-box`,
      border: '2px solid transparent',
    },
    label: {
      ref: label,
      fontSize: '14px',
      fontWeight: 700,
      padding: `12px ${_params.size === 'md' ? '18' : '14'}px`,
      color: colors.B60,
    },
    labelActive: {
      color: dark ? theme.white : theme.colors.gray[8],
    },
  };
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export default  createStyles

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/digest/TypeSegment/index.tsx
Tamaño: 1365 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React from 'react';
import {
  SegmentedControl as MantineSegmentedControl,
  SegmentedControlProps,
  SegmentedControlItem,
  Sx,
} from '@mantine/core';
import styled from '@emotion/styled';
import useStyles from './TypeSegment.styles';

interface ISegmentedControlProps {
  data: string[] | SegmentedControlItem[];
  defaultValue?: string;
  value?: string;
  onChange?(value: string): void;
  loading?: boolean;
  fullWidth?: boolean;
  sx?: Sx | (Sx | undefined)[];
  disabled?: boolean;
  size?: 'md' | 'sm';
}

/**
 * TypeSegmented component
 *
 */
export const TypeSegmented = React.forwardRef<HTMLDivElement, ISegmentedControlProps>(
  ({ onChange, loading = false, ...props }, ref) => {
    const { classes, theme } = useStyles({
      size: props.size || 'md',
    });
    const defaultDesign = {
      radius: 'xl',
      size: 'md',
      transitionDuration: 500,
      transitionTimingFunction: 'linear',
      classNames: classes,
    } as SegmentedControlProps;

    return (
      <ControlWrapper style={{ position: 'relative', marginBottom: 30 }}>
        <MantineSegmentedControl ref={ref} onChange={onChange} {...defaultDesign} {...props} />
      </ControlWrapper>
    );
  }
);

const ControlWrapper = styled.div`
  position: relative;
  margin-bottom: 30px;

  .mantine-SegmentedControl-control {
    border-color: transparent;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React from 'react';
import {
SegmentedControl as MantineSegmentedControl,
SegmentedControlProps,
SegmentedControlItem,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/digest/icons/BackOffTooltipIcon.tsx
Tamaño: 90558 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMantineTheme } from '@mantine/core';
import { useMemo } from 'react';

export const BackOffTooltipIcon = () => {
  const { colorScheme } = useMantineTheme();
  const isLightTheme = useMemo(() => colorScheme === 'light', [colorScheme]);

  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="280" height="57" viewBox="0 0 280 57" fill="none">
      <g clipPath="url(#clip0_762_2127)">
        <path
          d="M15.566 20.7115C15.8816 20.9302 16.0472 21.3084 15.9878 21.6865L13.9878 34.6865C13.941 34.9896 13.7566 35.2552 13.4878 35.4052C13.2191 35.5552 12.8972 35.574 12.6128 35.4552L8.87533 33.9021L6.7347 36.2177C6.45658 36.5209 6.01908 36.6209 5.6347 36.4709C5.25033 36.3209 5.00033 35.949 5.00033 35.5365V32.924C5.00033 32.799 5.0472 32.6802 5.13158 32.5896L10.3691 26.874C10.5503 26.6771 10.5441 26.374 10.3566 26.1865C10.1691 25.999 9.86595 25.9865 9.66908 26.1646L3.31283 31.8115L0.553451 30.4302C0.222201 30.2646 0.00970049 29.9334 0.000325486 29.5646C-0.00904951 29.1959 0.184701 28.8521 0.503451 28.6677L14.5035 20.6677C14.8378 20.4771 15.2503 20.4959 15.566 20.7115Z"
          fill={isLightTheme ? '#BEBECC' : '#525266'}
        />
      </g>
      <rect
        x="20.25"
        y="28.2881"
        width="51.5"
        height="0.5"
        rx="0.25"
        stroke={isLightTheme ? '#BEBECC' : '#525266'}
        strokeWidth="0.5"
        strokeDasharray="2 2"
      />
      <g clipPath="url(#clip1_762_2127)">
        <path
          d="M83.9994 20.5381C83.4463 20.5381 82.9994 20.985 82.9994 21.5381V22.1381C80.7182 22.6006 78.9994 24.6193 78.9994 27.0381V27.6256C78.9994 29.0943 78.4588 30.5131 77.4838 31.6131L77.2525 31.8725C76.99 32.1662 76.9275 32.5881 77.0869 32.9475C77.2463 33.3068 77.6057 33.5381 77.9994 33.5381H89.9994C90.3932 33.5381 90.7494 33.3068 90.9119 32.9475C91.0744 32.5881 91.0088 32.1662 90.7463 31.8725L90.515 31.6131C89.54 30.5131 88.9994 29.0975 88.9994 27.6256V27.0381C88.9994 24.6193 87.2807 22.6006 84.9994 22.1381V21.5381C84.9994 20.985 84.5525 20.5381 83.9994 20.5381ZM85.415 35.9537C85.79 35.5787 85.9994 35.0693 85.9994 34.5381H83.9994H81.9994C81.9994 35.0693 82.2088 35.5787 82.5838 35.9537C82.9588 36.3287 83.4682 36.5381 83.9994 36.5381C84.5307 36.5381 85.04 36.3287 85.415 35.9537Z"
          fill="#828299"
        />
      </g>
      <rect x="96" y="28.0381" width="52" height="1" rx="0.5" fill="#828299" />
      <g clipPath="url(#clip2_762_2127)">
        <path
          d="M159.999 20.5381C159.446 20.5381 158.999 20.985 158.999 21.5381V22.1381C156.718 22.6006 154.999 24.6193 154.999 27.0381V27.6256C154.999 29.0943 154.459 30.5131 153.484 31.6131L153.253 31.8725C152.99 32.1662 152.928 32.5881 153.087 32.9475C153.246 33.3068 153.606 33.5381 153.999 33.5381H165.999C166.393 33.5381 166.749 33.3068 166.912 32.9475C167.074 32.5881 167.009 32.1662 166.746 31.8725L166.515 31.6131C165.54 30.5131 164.999 29.0975 164.999 27.6256V27.0381C164.999 24.6193 163.281 22.6006 160.999 22.1381V21.5381C160.999 20.985 160.553 20.5381 159.999 20.5381ZM161.415 35.9537C161.79 35.5787 161.999 35.0693 161.999 34.5381H159.999H157.999C157.999 35.0693 158.209 35.5787 158.584 35.9537C158.959 36.3287 159.468 36.5381 159.999 36.5381C160.531 36.5381 161.04 36.3287 161.415 35.9537Z"
          fill={isLightTheme ? '#525266' : '#BEBECC'}
        />
      </g>
      <rect x="172" y="26.5381" width="88" height="4" rx="2" fill={isLightTheme ? '#525266' : '#BEBECC'} />
      <g clipPath="url(#clip3_762_2127)">
        <path
          d="M279.566 20.7115C279.882 20.9302 280.047 21.3084 279.988 21.6865L277.988 34.6865C277.941 34.9896 277.757 35.2552 277.488 35.4052C277.219 35.5552 276.897 35.574 276.613 35.4552L272.875 33.9021L270.735 36.2177C270.457 36.5209 270.019 36.6209 269.635 36.4709C269.25 36.3209 269 35.949 269 35.5365V32.924C269 32.799 269.047 32.6802 269.132 32.5896L274.369 26.874C274.55 26.6771 274.544 26.374 274.357 26.1865C274.169 25.999 273.866 25.9865 273.669 26.1646L267.313 31.8115L264.553 30.4302C264.222 30.2646 264.01 29.9334 264 29.5646C263.991 29.1959 264.185 28.8521 264.503 28.6677L278.503 20.6677C278.838 20.4771 279.25 20.4959 279.566 20.7115Z"
          fill={isLightTheme ? '#525266' : '#BEBECC'}
        />
      </g>
      <path
        d="M68.175 49.6014V50.5264H64.175V49.6014H65.64V45.3864C65.64 45.2197 65.645 45.048 65.655 44.8714L64.615 45.7414C64.555 45.788 64.495 45.818 64.435 45.8314C64.3783 45.8414 64.3233 45.8414 64.27 45.8314C64.22 45.8214 64.175 45.8047 64.135 45.7814C64.095 45.7547 64.065 45.7264 64.045 45.6964L63.655 45.1614L65.86 43.2864H66.875V49.6014H68.175ZM72.5408 46.3964C72.5074 46.4497 72.4724 46.488 72.4358 46.5114C72.3991 46.5314 72.3524 46.5414 72.2958 46.5414C72.2358 46.5414 72.1708 46.5247 72.1008 46.4914C72.0341 46.458 71.9558 46.4214 71.8658 46.3814C71.7758 46.338 71.6724 46.2997 71.5558 46.2664C71.4424 46.233 71.3074 46.2164 71.1508 46.2164C70.9074 46.2164 70.7158 46.268 70.5758 46.3714C70.4391 46.4747 70.3708 46.6097 70.3708 46.7764C70.3708 46.8864 70.4058 46.9797 70.4758 47.0564C70.5491 47.1297 70.6441 47.1947 70.7608 47.2514C70.8808 47.308 71.0158 47.3597 71.1658 47.4064C71.3158 47.4497 71.4674 47.498 71.6208 47.5514C71.7774 47.6047 71.9308 47.6664 72.0808 47.7364C72.2308 47.803 72.3641 47.8897 72.4808 47.9964C72.6008 48.0997 72.6958 48.2247 72.7658 48.3714C72.8391 48.518 72.8758 48.6947 72.8758 48.9014C72.8758 49.148 72.8308 49.3764 72.7408 49.5864C72.6541 49.793 72.5241 49.973 72.3508 50.1264C72.1774 50.2764 71.9624 50.3947 71.7058 50.4814C71.4524 50.5647 71.1591 50.6064 70.8258 50.6064C70.6491 50.6064 70.4758 50.5897 70.3058 50.5564C70.1391 50.5264 69.9774 50.483 69.8208 50.4264C69.6674 50.3697 69.5241 50.303 69.3908 50.2264C69.2608 50.1497 69.1458 50.0664 69.0458 49.9764L69.3308 49.5064C69.3674 49.4497 69.4108 49.4064 69.4608 49.3764C69.5108 49.3464 69.5741 49.3314 69.6508 49.3314C69.7274 49.3314 69.7991 49.353 69.8658 49.3964C69.9358 49.4397 70.0158 49.4864 70.1058 49.5364C70.1958 49.5864 70.3008 49.633 70.4208 49.6764C70.5441 49.7197 70.6991 49.7414 70.8858 49.7414C71.0324 49.7414 71.1574 49.7247 71.2608 49.6914C71.3674 49.6547 71.4541 49.608 71.5208 49.5514C71.5908 49.4947 71.6408 49.4297 71.6708 49.3564C71.7041 49.2797 71.7208 49.2014 71.7208 49.1214C71.7208 49.0014 71.6841 48.903 71.6108 48.8264C71.5408 48.7497 71.4458 48.683 71.3258 48.6264C71.2091 48.5697 71.0741 48.5197 70.9208 48.4764C70.7708 48.4297 70.6158 48.3797 70.4558 48.3264C70.2991 48.273 70.1441 48.2114 69.9908 48.1414C69.8408 48.068 69.7058 47.9764 69.5858 47.8664C69.4691 47.7564 69.3741 47.6214 69.3008 47.4614C69.2308 47.3014 69.1958 47.108 69.1958 46.8814C69.1958 46.6714 69.2374 46.4714 69.3208 46.2814C69.4041 46.0914 69.5258 45.9264 69.6858 45.7864C69.8491 45.643 70.0508 45.5297 70.2908 45.4464C70.5341 45.3597 70.8141 45.3164 71.1308 45.3164C71.4841 45.3164 71.8058 45.3747 72.0958 45.4914C72.3858 45.608 72.6274 45.7614 72.8208 45.9514L72.5408 46.3964ZM75.5153 50.6064C75.0686 50.6064 74.7253 50.4814 74.4853 50.2314C74.2486 49.978 74.1303 49.6297 74.1303 49.1864V46.3214H73.6053C73.5386 46.3214 73.482 46.2997 73.4353 46.2564C73.3886 46.213 73.3653 46.148 73.3653 46.0614V45.5714L74.1903 45.4364L74.4503 44.0364C74.467 43.9697 74.4986 43.918 74.5453 43.8814C74.592 43.8447 74.652 43.8264 74.7253 43.8264H75.3653V45.4414H76.7353V46.3214H75.3653V49.1014C75.3653 49.2614 75.4036 49.3864 75.4803 49.4764C75.5603 49.5664 75.6686 49.6114 75.8053 49.6114C75.882 49.6114 75.9453 49.603 75.9953 49.5864C76.0486 49.5664 76.0936 49.5464 76.1303 49.5264C76.1703 49.5064 76.2053 49.488 76.2353 49.4714C76.2653 49.4514 76.2953 49.4414 76.3253 49.4414C76.362 49.4414 76.392 49.4514 76.4153 49.4714C76.4386 49.488 76.4636 49.5147 76.4903 49.5514L76.8603 50.1514C76.6803 50.3014 76.4736 50.4147 76.2403 50.4914C76.007 50.568 75.7653 50.6064 75.5153 50.6064ZM83.5696 47.4414C83.5696 47.2347 83.5396 47.0464 83.4796 46.8764C83.4229 46.703 83.3379 46.5547 83.2246 46.4314C83.1146 46.3047 82.9796 46.208 82.8196 46.1414C82.6596 46.0714 82.4779 46.0364 82.2746 46.0364C81.8479 46.0364 81.5096 46.1614 81.2596 46.4114C81.0129 46.658 80.8596 47.0014 80.7996 47.4414H83.5696ZM84.2896 49.8164C84.1796 49.9497 84.0479 50.0664 83.8946 50.1664C83.7413 50.263 83.5763 50.343 83.3996 50.4064C83.2263 50.4697 83.0463 50.5164 82.8596 50.5464C82.6729 50.5797 82.4879 50.5964 82.3046 50.5964C81.9546 50.5964 81.6313 50.538 81.3346 50.4214C81.0413 50.3014 80.7863 50.128 80.5696 49.9014C80.3563 49.6714 80.1896 49.388 80.0696 49.0514C79.9496 48.7147 79.8896 48.328 79.8896 47.8914C79.8896 47.538 79.9429 47.208 80.0496 46.9014C80.1596 46.5947 80.3163 46.3297 80.5196 46.1064C80.7229 45.8797 80.9713 45.703 81.2646 45.5764C81.5579 45.4464 81.8879 45.3814 82.2546 45.3814C82.5579 45.3814 82.8379 45.433 83.0946 45.5364C83.3546 45.6364 83.5779 45.783 83.7646 45.9764C83.9546 46.1664 84.1029 46.403 84.2096 46.6864C84.3163 46.9664 84.3696 47.2864 84.3696 47.6464C84.3696 47.7864 84.3546 47.8797 84.3246 47.9264C84.2946 47.973 84.2379 47.9964 84.1546 47.9964H80.7696C80.7796 48.3164 80.8229 48.5947 80.8996 48.8314C80.9796 49.068 81.0896 49.2664 81.2296 49.4264C81.3696 49.583 81.5363 49.7014 81.7296 49.7814C81.9229 49.858 82.1396 49.8964 82.3796 49.8964C82.6029 49.8964 82.7946 49.8714 82.9546 49.8214C83.1179 49.768 83.2579 49.7114 83.3746 49.6514C83.4913 49.5914 83.5879 49.5364 83.6646 49.4864C83.7446 49.433 83.8129 49.4064 83.8696 49.4064C83.9429 49.4064 83.9996 49.4347 84.0396 49.4914L84.2896 49.8164ZM89.6954 45.4614L87.6304 50.5264H86.8304L84.7654 45.4614H85.4904C85.5637 45.4614 85.6237 45.4797 85.6704 45.5164C85.7171 45.553 85.7487 45.5964 85.7654 45.6464L87.0504 48.9064C87.0904 49.0297 87.1254 49.1497 87.1554 49.2664C87.1854 49.383 87.2137 49.4997 87.2404 49.6164C87.2671 49.4997 87.2954 49.383 87.3254 49.2664C87.3554 49.1497 87.3921 49.0297 87.4354 48.9064L88.7354 45.6464C88.7554 45.593 88.7887 45.5497 88.8354 45.5164C88.8821 45.4797 88.9371 45.4614 89.0004 45.4614H89.6954ZM93.7649 47.4414C93.7649 47.2347 93.7349 47.0464 93.6749 46.8764C93.6183 46.703 93.5333 46.5547 93.4199 46.4314C93.3099 46.3047 93.1749 46.208 93.0149 46.1414C92.8549 46.0714 92.6733 46.0364 92.4699 46.0364C92.0433 46.0364 91.7049 46.1614 91.4549 46.4114C91.2083 46.658 91.0549 47.0014 90.9949 47.4414H93.7649ZM94.4849 49.8164C94.3749 49.9497 94.2433 50.0664 94.0899 50.1664C93.9366 50.263 93.7716 50.343 93.5949 50.4064C93.4216 50.4697 93.2416 50.5164 93.0549 50.5464C92.8683 50.5797 92.6833 50.5964 92.4999 50.5964C92.1499 50.5964 91.8266 50.538 91.5299 50.4214C91.2366 50.3014 90.9816 50.128 90.7649 49.9014C90.5516 49.6714 90.3849 49.388 90.2649 49.0514C90.1449 48.7147 90.0849 48.328 90.0849 47.8914C90.0849 47.538 90.1383 47.208 90.2449 46.9014C90.3549 46.5947 90.5116 46.3297 90.7149 46.1064C90.9183 45.8797 91.1666 45.703 91.4599 45.5764C91.7533 45.4464 92.0833 45.3814 92.4499 45.3814C92.7533 45.3814 93.0333 45.433 93.2899 45.5364C93.5499 45.6364 93.7733 45.783 93.9599 45.9764C94.1499 46.1664 94.2983 46.403 94.4049 46.6864C94.5116 46.9664 94.5649 47.2864 94.5649 47.6464C94.5649 47.7864 94.5499 47.8797 94.5199 47.9264C94.4899 47.973 94.4333 47.9964 94.3499 47.9964H90.9649C90.9749 48.3164 91.0183 48.5947 91.0949 48.8314C91.1749 49.068 91.2849 49.2664 91.4249 49.4264C91.5649 49.583 91.7316 49.7014 91.9249 49.7814C92.1183 49.858 92.3349 49.8964 92.5749 49.8964C92.7983 49.8964 92.9899 49.8714 93.1499 49.8214C93.3133 49.768 93.4533 49.7114 93.5699 49.6514C93.6866 49.5914 93.7833 49.5364 93.8599 49.4864C93.9399 49.433 94.0083 49.4064 94.0649 49.4064C94.1383 49.4064 94.1949 49.4347 94.2349 49.4914L94.4849 49.8164ZM96.4981 46.1964C96.6081 46.073 96.7248 45.9614 96.8481 45.8614C96.9715 45.7614 97.1015 45.6764 97.2381 45.6064C97.3781 45.533 97.5248 45.478 97.6781 45.4414C97.8348 45.4014 98.0031 45.3814 98.1831 45.3814C98.4598 45.3814 98.7031 45.428 98.9131 45.5214C99.1265 45.6114 99.3031 45.7414 99.4431 45.9114C99.5865 46.078 99.6948 46.2797 99.7681 46.5164C99.8415 46.753 99.8781 47.0147 99.8781 47.3014V50.5264H98.9831V47.3014C98.9831 46.918 98.8948 46.6214 98.7181 46.4114C98.5448 46.198 98.2798 46.0914 97.9231 46.0914C97.6598 46.0914 97.4131 46.1547 97.1831 46.2814C96.9565 46.408 96.7465 46.5797 96.5531 46.7964V50.5264H95.6581V45.4614H96.1931C96.3198 45.4614 96.3981 45.523 96.4281 45.6464L96.4981 46.1964ZM102.721 50.6064C102.321 50.6064 102.013 50.4947 101.796 50.2714C101.583 50.048 101.476 49.7264 101.476 49.3064V46.2064H100.866C100.813 46.2064 100.768 46.1914 100.731 46.1614C100.694 46.128 100.676 46.078 100.676 46.0114V45.6564L101.506 45.5514L101.711 43.9864C101.721 43.9364 101.743 43.8964 101.776 43.8664C101.813 43.833 101.859 43.8164 101.916 43.8164H102.366V45.5614H103.831V46.2064H102.366V49.2464C102.366 49.4597 102.418 49.618 102.521 49.7214C102.624 49.8247 102.758 49.8764 102.921 49.8764C103.014 49.8764 103.094 49.8647 103.161 49.8414C103.231 49.8147 103.291 49.7864 103.341 49.7564C103.391 49.7264 103.433 49.6997 103.466 49.6764C103.503 49.6497 103.534 49.6364 103.561 49.6364C103.608 49.6364 103.649 49.6647 103.686 49.7214L103.946 50.1464C103.793 50.2897 103.608 50.403 103.391 50.4864C103.174 50.5664 102.951 50.6064 102.721 50.6064Z"
        fill="#828299"
      />
      <path
        d="M142.905 49.3783C143.038 49.3783 143.143 49.4167 143.22 49.4933C143.3 49.5667 143.34 49.665 143.34 49.7883V50.5283H138.38V50.1183C138.38 50.035 138.397 49.9483 138.43 49.8583C138.467 49.765 138.523 49.6817 138.6 49.6083L140.795 47.4083C140.978 47.2217 141.142 47.0433 141.285 46.8733C141.432 46.7033 141.553 46.535 141.65 46.3683C141.747 46.2017 141.82 46.0333 141.87 45.8633C141.923 45.69 141.95 45.5083 141.95 45.3183C141.95 45.145 141.925 44.9933 141.875 44.8633C141.825 44.73 141.753 44.6183 141.66 44.5283C141.57 44.4383 141.46 44.3717 141.33 44.3283C141.203 44.2817 141.06 44.2583 140.9 44.2583C140.753 44.2583 140.617 44.28 140.49 44.3233C140.367 44.3633 140.257 44.4217 140.16 44.4983C140.063 44.5717 139.982 44.6583 139.915 44.7583C139.848 44.8583 139.798 44.9683 139.765 45.0883C139.708 45.2417 139.635 45.3433 139.545 45.3933C139.455 45.4433 139.325 45.455 139.155 45.4283L138.505 45.3133C138.555 44.9667 138.652 44.6633 138.795 44.4033C138.938 44.14 139.117 43.9217 139.33 43.7483C139.547 43.5717 139.793 43.44 140.07 43.3533C140.35 43.2633 140.65 43.2183 140.97 43.2183C141.303 43.2183 141.608 43.2683 141.885 43.3683C142.162 43.465 142.398 43.6033 142.595 43.7833C142.792 43.9633 142.945 44.18 143.055 44.4333C143.165 44.6867 143.22 44.9683 143.22 45.2783C143.22 45.545 143.18 45.7917 143.1 46.0183C143.023 46.245 142.918 46.4617 142.785 46.6683C142.655 46.875 142.502 47.075 142.325 47.2683C142.148 47.4617 141.963 47.6583 141.77 47.8583L140.14 49.5233C140.297 49.4767 140.452 49.4417 140.605 49.4183C140.762 49.3917 140.91 49.3783 141.05 49.3783H142.905ZM145.566 46.0283C145.669 45.925 145.777 45.83 145.891 45.7433C146.007 45.6533 146.129 45.5783 146.256 45.5183C146.386 45.455 146.524 45.4067 146.671 45.3733C146.817 45.3367 146.977 45.3183 147.151 45.3183C147.431 45.3183 147.679 45.3667 147.896 45.4633C148.112 45.5567 148.292 45.69 148.436 45.8633C148.582 46.0333 148.692 46.2383 148.766 46.4783C148.842 46.715 148.881 46.9767 148.881 47.2633V50.5283H147.646V47.2633C147.646 46.95 147.574 46.7083 147.431 46.5383C147.287 46.365 147.069 46.2783 146.776 46.2783C146.562 46.2783 146.362 46.3267 146.176 46.4233C145.989 46.52 145.812 46.6517 145.646 46.8183V50.5283H144.411V45.3983H145.166C145.326 45.3983 145.431 45.4733 145.481 45.6233L145.566 46.0283ZM153.275 46.7083C153.135 46.5383 152.982 46.4183 152.815 46.3483C152.652 46.2783 152.475 46.2433 152.285 46.2433C152.099 46.2433 151.93 46.2783 151.78 46.3483C151.63 46.4183 151.502 46.525 151.395 46.6683C151.289 46.8083 151.207 46.9883 151.15 47.2083C151.094 47.425 151.065 47.6817 151.065 47.9783C151.065 48.2783 151.089 48.5333 151.135 48.7433C151.185 48.95 151.255 49.12 151.345 49.2533C151.435 49.3833 151.545 49.4783 151.675 49.5383C151.805 49.595 151.95 49.6233 152.11 49.6233C152.367 49.6233 152.585 49.57 152.765 49.4633C152.945 49.3567 153.115 49.205 153.275 49.0083V46.7083ZM154.51 43.0983V50.5283H153.755C153.592 50.5283 153.489 50.4533 153.445 50.3033L153.34 49.8083C153.134 50.045 152.895 50.2367 152.625 50.3833C152.359 50.53 152.047 50.6033 151.69 50.6033C151.41 50.6033 151.154 50.545 150.92 50.4283C150.687 50.3117 150.485 50.1433 150.315 49.9233C150.149 49.7 150.019 49.425 149.925 49.0983C149.835 48.7717 149.79 48.3983 149.79 47.9783C149.79 47.5983 149.842 47.245 149.945 46.9183C150.049 46.5917 150.197 46.3083 150.39 46.0683C150.584 45.8283 150.815 45.6417 151.085 45.5083C151.355 45.3717 151.659 45.3033 151.995 45.3033C152.282 45.3033 152.527 45.3483 152.73 45.4383C152.934 45.5283 153.115 45.65 153.275 45.8033V43.0983H154.51ZM161.773 47.4433C161.773 47.2367 161.743 47.0483 161.683 46.8783C161.626 46.705 161.541 46.5567 161.428 46.4333C161.318 46.3067 161.183 46.21 161.023 46.1433C160.863 46.0733 160.681 46.0383 160.478 46.0383C160.051 46.0383 159.713 46.1633 159.463 46.4133C159.216 46.66 159.063 47.0033 159.003 47.4433H161.773ZM162.493 49.8183C162.383 49.9517 162.251 50.0683 162.098 50.1683C161.944 50.265 161.779 50.345 161.603 50.4083C161.429 50.4717 161.249 50.5183 161.063 50.5483C160.876 50.5817 160.691 50.5983 160.508 50.5983C160.158 50.5983 159.834 50.54 159.538 50.4233C159.244 50.3033 158.989 50.13 158.773 49.9033C158.559 49.6733 158.393 49.39 158.273 49.0533C158.153 48.7167 158.093 48.33 158.093 47.8933C158.093 47.54 158.146 47.21 158.253 46.9033C158.363 46.5967 158.519 46.3317 158.723 46.1083C158.926 45.8817 159.174 45.705 159.468 45.5783C159.761 45.4483 160.091 45.3833 160.458 45.3833C160.761 45.3833 161.041 45.435 161.298 45.5383C161.558 45.6383 161.781 45.785 161.968 45.9783C162.158 46.1683 162.306 46.405 162.413 46.6883C162.519 46.9683 162.573 47.2883 162.573 47.6483C162.573 47.7883 162.558 47.8817 162.528 47.9283C162.498 47.975 162.441 47.9983 162.358 47.9983H158.973C158.983 48.3183 159.026 48.5967 159.103 48.8333C159.183 49.07 159.293 49.2683 159.433 49.4283C159.573 49.585 159.739 49.7033 159.933 49.7833C160.126 49.86 160.343 49.8983 160.583 49.8983C160.806 49.8983 160.998 49.8733 161.158 49.8233C161.321 49.77 161.461 49.7133 161.578 49.6533C161.694 49.5933 161.791 49.5383 161.868 49.4883C161.948 49.435 162.016 49.4083 162.073 49.4083C162.146 49.4083 162.203 49.4367 162.243 49.4933L162.493 49.8183ZM167.899 45.4633L165.834 50.5283H165.034L162.969 45.4633H163.694C163.767 45.4633 163.827 45.4817 163.874 45.5183C163.92 45.555 163.952 45.5983 163.969 45.6483L165.254 48.9083C165.294 49.0317 165.329 49.1517 165.359 49.2683C165.389 49.385 165.417 49.5017 165.444 49.6183C165.47 49.5017 165.499 49.385 165.529 49.2683C165.559 49.1517 165.595 49.0317 165.639 48.9083L166.939 45.6483C166.959 45.595 166.992 45.5517 167.039 45.5183C167.085 45.4817 167.14 45.4633 167.204 45.4633H167.899ZM171.968 47.4433C171.968 47.2367 171.938 47.0483 171.878 46.8783C171.821 46.705 171.736 46.5567 171.623 46.4333C171.513 46.3067 171.378 46.21 171.218 46.1433C171.058 46.0733 170.876 46.0383 170.673 46.0383C170.246 46.0383 169.908 46.1633 169.658 46.4133C169.411 46.66 169.258 47.0033 169.198 47.4433H171.968ZM172.688 49.8183C172.578 49.9517 172.446 50.0683 172.293 50.1683C172.14 50.265 171.975 50.345 171.798 50.4083C171.625 50.4717 171.445 50.5183 171.258 50.5483C171.071 50.5817 170.886 50.5983 170.703 50.5983C170.353 50.5983 170.03 50.54 169.733 50.4233C169.44 50.3033 169.185 50.13 168.968 49.9033C168.755 49.6733 168.588 49.39 168.468 49.0533C168.348 48.7167 168.288 48.33 168.288 47.8933C168.288 47.54 168.341 47.21 168.448 46.9033C168.558 46.5967 168.715 46.3317 168.918 46.1083C169.121 45.8817 169.37 45.705 169.663 45.5783C169.956 45.4483 170.286 45.3833 170.653 45.3833C170.956 45.3833 171.236 45.435 171.493 45.5383C171.753 45.6383 171.976 45.785 172.163 45.9783C172.353 46.1683 172.501 46.405 172.608 46.6883C172.715 46.9683 172.768 47.2883 172.768 47.6483C172.768 47.7883 172.753 47.8817 172.723 47.9283C172.693 47.975 172.636 47.9983 172.553 47.9983H169.168C169.178 48.3183 169.221 48.5967 169.298 48.8333C169.378 49.07 169.488 49.2683 169.628 49.4283C169.768 49.585 169.935 49.7033 170.128 49.7833C170.321 49.86 170.538 49.8983 170.778 49.8983C171.001 49.8983 171.193 49.8733 171.353 49.8233C171.516 49.77 171.656 49.7133 171.773 49.6533C171.89 49.5933 171.986 49.5383 172.063 49.4883C172.143 49.435 172.211 49.4083 172.268 49.4083C172.341 49.4083 172.398 49.4367 172.438 49.4933L172.688 49.8183ZM174.701 46.1983C174.811 46.075 174.928 45.9633 175.051 45.8633C175.175 45.7633 175.305 45.6783 175.441 45.6083C175.581 45.535 175.728 45.48 175.881 45.4433C176.038 45.4033 176.206 45.3833 176.386 45.3833C176.663 45.3833 176.906 45.43 177.116 45.5233C177.33 45.6133 177.506 45.7433 177.646 45.9133C177.79 46.08 177.898 46.2817 177.971 46.5183C178.045 46.755 178.081 47.0167 178.081 47.3033V50.5283H177.186V47.3033C177.186 46.92 177.098 46.6233 176.921 46.4133C176.748 46.2 176.483 46.0933 176.126 46.0933C175.863 46.0933 175.616 46.1567 175.386 46.2833C175.16 46.41 174.95 46.5817 174.756 46.7983V50.5283H173.861V45.4633H174.396C174.523 45.4633 174.601 45.525 174.631 45.6483L174.701 46.1983ZM180.924 50.6083C180.524 50.6083 180.216 50.4967 179.999 50.2733C179.786 50.05 179.679 49.7283 179.679 49.3083V46.2083H179.069C179.016 46.2083 178.971 46.1933 178.934 46.1633C178.897 46.13 178.879 46.08 178.879 46.0133V45.6583L179.709 45.5533L179.914 43.9883C179.924 43.9383 179.946 43.8983 179.979 43.8683C180.016 43.835 180.062 43.8183 180.119 43.8183H180.569V45.5633H182.034V46.2083H180.569V49.2483C180.569 49.4617 180.621 49.62 180.724 49.7233C180.827 49.8267 180.961 49.8783 181.124 49.8783C181.217 49.8783 181.297 49.8667 181.364 49.8433C181.434 49.8167 181.494 49.7883 181.544 49.7583C181.594 49.7283 181.636 49.7017 181.669 49.6783C181.706 49.6517 181.737 49.6383 181.764 49.6383C181.811 49.6383 181.852 49.6667 181.889 49.7233L182.149 50.1483C181.996 50.2917 181.811 50.405 181.594 50.4883C181.377 50.5683 181.154 50.6083 180.924 50.6083Z"
        fill={isLightTheme ? '#525266' : '#BEBECC'}
      />
      <path
        d="M233.857 44.4921C233.827 44.5421 233.794 44.5804 233.757 44.6071C233.724 44.6304 233.682 44.6421 233.632 44.6421C233.576 44.6421 233.509 44.6138 233.432 44.5571C233.356 44.5004 233.259 44.4388 233.142 44.3721C233.029 44.3021 232.891 44.2388 232.727 44.1821C232.567 44.1254 232.372 44.0971 232.142 44.0971C231.926 44.0971 231.734 44.1271 231.567 44.1871C231.404 44.2438 231.266 44.3221 231.152 44.4221C231.042 44.5221 230.959 44.6404 230.902 44.7771C230.846 44.9104 230.817 45.0554 230.817 45.2121C230.817 45.4121 230.866 45.5788 230.962 45.7121C231.062 45.8421 231.192 45.9538 231.352 46.0471C231.516 46.1404 231.699 46.2221 231.902 46.2921C232.109 46.3588 232.319 46.4288 232.532 46.5021C232.749 46.5754 232.959 46.6588 233.162 46.7521C233.369 46.8421 233.552 46.9571 233.712 47.0971C233.876 47.2371 234.006 47.4088 234.102 47.6121C234.202 47.8154 234.252 48.0654 234.252 48.3621C234.252 48.6754 234.199 48.9704 234.092 49.2471C233.986 49.5204 233.829 49.7588 233.622 49.9621C233.419 50.1654 233.167 50.3254 232.867 50.4421C232.571 50.5588 232.232 50.6171 231.852 50.6171C231.386 50.6171 230.962 50.5338 230.582 50.3671C230.202 50.1971 229.877 49.9688 229.607 49.6821L229.887 49.2221C229.914 49.1854 229.946 49.1554 229.982 49.1321C230.022 49.1054 230.066 49.0921 230.112 49.0921C230.156 49.0921 230.204 49.1104 230.257 49.1471C230.314 49.1804 230.377 49.2238 230.447 49.2771C230.517 49.3304 230.597 49.3888 230.687 49.4521C230.777 49.5154 230.879 49.5738 230.992 49.6271C231.109 49.6804 231.241 49.7254 231.387 49.7621C231.534 49.7954 231.699 49.8121 231.882 49.8121C232.112 49.8121 232.317 49.7804 232.497 49.7171C232.677 49.6538 232.829 49.5654 232.952 49.4521C233.079 49.3354 233.176 49.1971 233.242 49.0371C233.309 48.8771 233.342 48.6988 233.342 48.5021C233.342 48.2854 233.292 48.1088 233.192 47.9721C233.096 47.8321 232.967 47.7154 232.807 47.6221C232.647 47.5288 232.464 47.4504 232.257 47.3871C232.051 47.3204 231.841 47.2538 231.627 47.1871C231.414 47.1171 231.204 47.0371 230.997 46.9471C230.791 46.8571 230.607 46.7404 230.447 46.5971C230.287 46.4538 230.157 46.2754 230.057 46.0621C229.961 45.8454 229.912 45.5788 229.912 45.2621C229.912 45.0088 229.961 44.7638 230.057 44.5271C230.157 44.2904 230.301 44.0804 230.487 43.8971C230.677 43.7138 230.909 43.5671 231.182 43.4571C231.459 43.3471 231.776 43.2921 232.132 43.2921C232.532 43.2921 232.896 43.3554 233.222 43.4821C233.552 43.6088 233.842 43.7921 234.092 44.0321L233.857 44.4921ZM238.773 47.4521C238.773 47.2454 238.743 47.0571 238.683 46.8871C238.626 46.7138 238.541 46.5654 238.428 46.4421C238.318 46.3154 238.183 46.2188 238.023 46.1521C237.863 46.0821 237.681 46.0471 237.478 46.0471C237.051 46.0471 236.713 46.1721 236.463 46.4221C236.216 46.6688 236.063 47.0121 236.003 47.4521H238.773ZM239.493 49.8271C239.383 49.9604 239.251 50.0771 239.098 50.1771C238.944 50.2738 238.779 50.3538 238.603 50.4171C238.429 50.4804 238.249 50.5271 238.063 50.5571C237.876 50.5904 237.691 50.6071 237.508 50.6071C237.158 50.6071 236.834 50.5488 236.538 50.4321C236.244 50.3121 235.989 50.1388 235.773 49.9121C235.559 49.6821 235.393 49.3988 235.273 49.0621C235.153 48.7254 235.093 48.3388 235.093 47.9021C235.093 47.5488 235.146 47.2188 235.253 46.9121C235.363 46.6054 235.519 46.3404 235.723 46.1171C235.926 45.8904 236.174 45.7138 236.468 45.5871C236.761 45.4571 237.091 45.3921 237.458 45.3921C237.761 45.3921 238.041 45.4438 238.298 45.5471C238.558 45.6471 238.781 45.7938 238.968 45.9871C239.158 46.1771 239.306 46.4138 239.413 46.6971C239.519 46.9771 239.573 47.2971 239.573 47.6571C239.573 47.7971 239.558 47.8904 239.528 47.9371C239.498 47.9838 239.441 48.0071 239.358 48.0071H235.973C235.983 48.3271 236.026 48.6054 236.103 48.8421C236.183 49.0788 236.293 49.2771 236.433 49.4371C236.573 49.5938 236.739 49.7121 236.933 49.7921C237.126 49.8688 237.343 49.9071 237.583 49.9071C237.806 49.9071 237.998 49.8821 238.158 49.8321C238.321 49.7788 238.461 49.7221 238.578 49.6621C238.694 49.6021 238.791 49.5471 238.868 49.4971C238.948 49.4438 239.016 49.4171 239.073 49.4171C239.146 49.4171 239.203 49.4454 239.243 49.5021L239.493 49.8271ZM241.506 46.2071C241.616 46.0838 241.733 45.9721 241.856 45.8721C241.979 45.7721 242.109 45.6871 242.246 45.6171C242.386 45.5438 242.533 45.4888 242.686 45.4521C242.843 45.4121 243.011 45.3921 243.191 45.3921C243.468 45.3921 243.711 45.4388 243.921 45.5321C244.134 45.6221 244.311 45.7521 244.451 45.9221C244.594 46.0888 244.703 46.2904 244.776 46.5271C244.849 46.7638 244.886 47.0254 244.886 47.3121V50.5371H243.991V47.3121C243.991 46.9288 243.903 46.6321 243.726 46.4221C243.553 46.2088 243.288 46.1021 242.931 46.1021C242.668 46.1021 242.421 46.1654 242.191 46.2921C241.964 46.4188 241.754 46.5904 241.561 46.8071V50.5371H240.666V45.4721H241.201C241.328 45.4721 241.406 45.5338 241.436 45.6571L241.506 46.2071ZM249.542 46.6771C249.375 46.4538 249.195 46.2988 249.002 46.2121C248.809 46.1221 248.592 46.0771 248.352 46.0771C247.882 46.0771 247.52 46.2454 247.267 46.5821C247.014 46.9188 246.887 47.3988 246.887 48.0221C246.887 48.3521 246.915 48.6354 246.972 48.8721C247.029 49.1054 247.112 49.2988 247.222 49.4521C247.332 49.6021 247.467 49.7121 247.627 49.7821C247.787 49.8521 247.969 49.8871 248.172 49.8871C248.465 49.8871 248.72 49.8204 248.937 49.6871C249.157 49.5538 249.359 49.3654 249.542 49.1221V46.6771ZM250.432 43.1721V50.5371H249.902C249.775 50.5371 249.695 50.4754 249.662 50.3521L249.582 49.7371C249.365 49.9971 249.119 50.2071 248.842 50.3671C248.565 50.5271 248.245 50.6071 247.882 50.6071C247.592 50.6071 247.329 50.5521 247.092 50.4421C246.855 50.3288 246.654 50.1638 246.487 49.9471C246.32 49.7304 246.192 49.4604 246.102 49.1371C246.012 48.8138 245.967 48.4421 245.967 48.0221C245.967 47.6488 246.017 47.3021 246.117 46.9821C246.217 46.6588 246.36 46.3788 246.547 46.1421C246.734 45.9054 246.962 45.7204 247.232 45.5871C247.505 45.4504 247.812 45.3821 248.152 45.3821C248.462 45.3821 248.727 45.4354 248.947 45.5421C249.17 45.6454 249.369 45.7904 249.542 45.9771V43.1721H250.432ZM257.696 46.6771C257.53 46.4538 257.35 46.2988 257.156 46.2121C256.963 46.1221 256.746 46.0771 256.506 46.0771C256.036 46.0771 255.675 46.2454 255.421 46.5821C255.168 46.9188 255.041 47.3988 255.041 48.0221C255.041 48.3521 255.07 48.6354 255.126 48.8721C255.183 49.1054 255.266 49.2988 255.376 49.4521C255.486 49.6021 255.621 49.7121 255.781 49.7821C255.941 49.8521 256.123 49.8871 256.326 49.8871C256.62 49.8871 256.875 49.8204 257.091 49.6871C257.311 49.5538 257.513 49.3654 257.696 49.1221V46.6771ZM258.586 43.1721V50.5371H258.056C257.93 50.5371 257.85 50.4754 257.816 50.3521L257.736 49.7371C257.52 49.9971 257.273 50.2071 256.996 50.3671C256.72 50.5271 256.4 50.6071 256.036 50.6071C255.746 50.6071 255.483 50.5521 255.246 50.4421C255.01 50.3288 254.808 50.1638 254.641 49.9471C254.475 49.7304 254.346 49.4604 254.256 49.1371C254.166 48.8138 254.121 48.4421 254.121 48.0221C254.121 47.6488 254.171 47.3021 254.271 46.9821C254.371 46.6588 254.515 46.3788 254.701 46.1421C254.888 45.9054 255.116 45.7204 255.386 45.5871C255.66 45.4504 255.966 45.3821 256.306 45.3821C256.616 45.3821 256.881 45.4354 257.101 45.5421C257.325 45.6454 257.523 45.7904 257.696 45.9771V43.1721H258.586ZM260.932 45.4721V50.5371H260.042V45.4721H260.932ZM261.122 43.8821C261.122 43.9688 261.104 44.0504 261.067 44.1271C261.034 44.2004 260.987 44.2671 260.927 44.3271C260.87 44.3838 260.802 44.4288 260.722 44.4621C260.645 44.4954 260.564 44.5121 260.477 44.5121C260.39 44.5121 260.309 44.4954 260.232 44.4621C260.159 44.4288 260.094 44.3838 260.037 44.3271C259.98 44.2671 259.935 44.2004 259.902 44.1271C259.869 44.0504 259.852 43.9688 259.852 43.8821C259.852 43.7954 259.869 43.7138 259.902 43.6371C259.935 43.5571 259.98 43.4888 260.037 43.4321C260.094 43.3721 260.159 43.3254 260.232 43.2921C260.309 43.2588 260.39 43.2421 260.477 43.2421C260.564 43.2421 260.645 43.2588 260.722 43.2921C260.802 43.3254 260.87 43.3721 260.927 43.4321C260.987 43.4888 261.034 43.5571 261.067 43.6371C261.104 43.7138 261.122 43.7954 261.122 43.8821ZM264.159 48.0621C264.339 48.0621 264.498 48.0371 264.634 47.9871C264.771 47.9371 264.886 47.8671 264.979 47.7771C265.073 47.6871 265.143 47.5804 265.189 47.4571C265.236 47.3304 265.259 47.1921 265.259 47.0421C265.259 46.7321 265.164 46.4854 264.974 46.3021C264.788 46.1188 264.516 46.0271 264.159 46.0271C263.799 46.0271 263.524 46.1188 263.334 46.3021C263.148 46.4854 263.054 46.7321 263.054 47.0421C263.054 47.1921 263.078 47.3304 263.124 47.4571C263.174 47.5804 263.246 47.6871 263.339 47.7771C263.433 47.8671 263.548 47.9371 263.684 47.9871C263.821 48.0371 263.979 48.0621 264.159 48.0621ZM265.764 50.8121C265.764 50.6888 265.729 50.5888 265.659 50.5121C265.589 50.4354 265.494 50.3754 265.374 50.3321C265.258 50.2888 265.121 50.2588 264.964 50.2421C264.808 50.2221 264.641 50.2071 264.464 50.1971C264.291 50.1871 264.114 50.1771 263.934 50.1671C263.754 50.1571 263.581 50.1404 263.414 50.1171C263.228 50.2038 263.074 50.3138 262.954 50.4471C262.838 50.5771 262.779 50.7304 262.779 50.9071C262.779 51.0204 262.808 51.1254 262.864 51.2221C262.924 51.3221 263.014 51.4071 263.134 51.4771C263.254 51.5504 263.404 51.6071 263.584 51.6471C263.768 51.6904 263.983 51.7121 264.229 51.7121C264.469 51.7121 264.684 51.6904 264.874 51.6471C265.064 51.6038 265.224 51.5421 265.354 51.4621C265.488 51.3821 265.589 51.2871 265.659 51.1771C265.729 51.0671 265.764 50.9454 265.764 50.8121ZM266.669 45.6721V46.0021C266.669 46.1121 266.599 46.1821 266.459 46.2121L265.884 46.2871C265.998 46.5071 266.054 46.7504 266.054 47.0171C266.054 47.2638 266.006 47.4888 265.909 47.6921C265.816 47.8921 265.686 48.0638 265.519 48.2071C265.353 48.3504 265.153 48.4604 264.919 48.5371C264.686 48.6138 264.433 48.6521 264.159 48.6521C263.923 48.6521 263.699 48.6238 263.489 48.5671C263.383 48.6338 263.301 48.7054 263.244 48.7821C263.188 48.8554 263.159 48.9304 263.159 49.0071C263.159 49.1271 263.208 49.2188 263.304 49.2821C263.404 49.3421 263.534 49.3854 263.694 49.4121C263.854 49.4388 264.036 49.4554 264.239 49.4621C264.446 49.4688 264.656 49.4804 264.869 49.4971C265.086 49.5104 265.296 49.5354 265.499 49.5721C265.706 49.6088 265.889 49.6688 266.049 49.7521C266.209 49.8354 266.338 49.9504 266.434 50.0971C266.534 50.2438 266.584 50.4338 266.584 50.6671C266.584 50.8838 266.529 51.0938 266.419 51.2971C266.313 51.5004 266.158 51.6804 265.954 51.8371C265.751 51.9971 265.501 52.1238 265.204 52.2171C264.911 52.3138 264.579 52.3621 264.209 52.3621C263.839 52.3621 263.516 52.3254 263.239 52.2521C262.963 52.1788 262.733 52.0804 262.549 51.9571C262.366 51.8338 262.228 51.6904 262.134 51.5271C262.044 51.3671 261.999 51.1988 261.999 51.0221C261.999 50.7721 262.078 50.5604 262.234 50.3871C262.391 50.2138 262.606 50.0754 262.879 49.9721C262.729 49.9054 262.609 49.8171 262.519 49.7071C262.433 49.5938 262.389 49.4421 262.389 49.2521C262.389 49.1788 262.403 49.1038 262.429 49.0271C262.456 48.9471 262.496 48.8688 262.549 48.7921C262.606 48.7121 262.674 48.6371 262.754 48.5671C262.834 48.4971 262.928 48.4354 263.034 48.3821C262.784 48.2421 262.589 48.0571 262.449 47.8271C262.309 47.5938 262.239 47.3238 262.239 47.0171C262.239 46.7704 262.286 46.5471 262.379 46.3471C262.476 46.1438 262.609 45.9721 262.779 45.8321C262.949 45.6888 263.151 45.5788 263.384 45.5021C263.621 45.4254 263.879 45.3871 264.159 45.3871C264.379 45.3871 264.584 45.4121 264.774 45.4621C264.964 45.5088 265.138 45.5788 265.294 45.6721H266.669ZM270.902 47.4521C270.902 47.2454 270.872 47.0571 270.812 46.8871C270.755 46.7138 270.67 46.5654 270.557 46.4421C270.447 46.3154 270.312 46.2188 270.152 46.1521C269.992 46.0821 269.81 46.0471 269.607 46.0471C269.18 46.0471 268.842 46.1721 268.592 46.4221C268.345 46.6688 268.192 47.0121 268.132 47.4521H270.902ZM271.622 49.8271C271.512 49.9604 271.38 50.0771 271.227 50.1771C271.073 50.2738 270.908 50.3538 270.732 50.4171C270.558 50.4804 270.378 50.5271 270.192 50.5571C270.005 50.5904 269.82 50.6071 269.637 50.6071C269.287 50.6071 268.963 50.5488 268.667 50.4321C268.373 50.3121 268.118 50.1388 267.902 49.9121C267.688 49.6821 267.522 49.3988 267.402 49.0621C267.282 48.7254 267.222 48.3388 267.222 47.9021C267.222 47.5488 267.275 47.2188 267.382 46.9121C267.492 46.6054 267.648 46.3404 267.852 46.1171C268.055 45.8904 268.303 45.7138 268.597 45.5871C268.89 45.4571 269.22 45.3921 269.587 45.3921C269.89 45.3921 270.17 45.4438 270.427 45.5471C270.687 45.6471 270.91 45.7938 271.097 45.9871C271.287 46.1771 271.435 46.4138 271.542 46.6971C271.648 46.9771 271.702 47.2971 271.702 47.6571C271.702 47.7971 271.687 47.8904 271.657 47.9371C271.627 47.9838 271.57 48.0071 271.487 48.0071H268.102C268.112 48.3271 268.155 48.6054 268.232 48.8421C268.312 49.0788 268.422 49.2771 268.562 49.4371C268.702 49.5938 268.868 49.7121 269.062 49.7921C269.255 49.8688 269.472 49.9071 269.712 49.9071C269.935 49.9071 270.127 49.8821 270.287 49.8321C270.45 49.7788 270.59 49.7221 270.707 49.6621C270.823 49.6021 270.92 49.5471 270.997 49.4971C271.077 49.4438 271.145 49.4171 271.202 49.4171C271.275 49.4171 271.332 49.4454 271.372 49.5021L271.622 49.8271ZM275.745 46.3071C275.705 46.3804 275.643 46.4171 275.56 46.4171C275.51 46.4171 275.453 46.3988 275.39 46.3621C275.327 46.3254 275.248 46.2854 275.155 46.2421C275.065 46.1954 274.957 46.1538 274.83 46.1171C274.703 46.0771 274.553 46.0571 274.38 46.0571C274.23 46.0571 274.095 46.0771 273.975 46.1171C273.855 46.1538 273.752 46.2054 273.665 46.2721C273.582 46.3388 273.517 46.4171 273.47 46.5071C273.427 46.5938 273.405 46.6888 273.405 46.7921C273.405 46.9221 273.442 47.0304 273.515 47.1171C273.592 47.2038 273.692 47.2788 273.815 47.3421C273.938 47.4054 274.078 47.4621 274.235 47.5121C274.392 47.5588 274.552 47.6104 274.715 47.6671C274.882 47.7204 275.043 47.7804 275.2 47.8471C275.357 47.9138 275.497 47.9971 275.62 48.0971C275.743 48.1971 275.842 48.3204 275.915 48.4671C275.992 48.6104 276.03 48.7838 276.03 48.9871C276.03 49.2204 275.988 49.4371 275.905 49.6371C275.822 49.8338 275.698 50.0054 275.535 50.1521C275.372 50.2954 275.172 50.4088 274.935 50.4921C274.698 50.5754 274.425 50.6171 274.115 50.6171C273.762 50.6171 273.442 50.5604 273.155 50.4471C272.868 50.3304 272.625 50.1821 272.425 50.0021L272.635 49.6621C272.662 49.6188 272.693 49.5854 272.73 49.5621C272.767 49.5388 272.813 49.5271 272.87 49.5271C272.93 49.5271 272.993 49.5504 273.06 49.5971C273.127 49.6438 273.207 49.6954 273.3 49.7521C273.397 49.8088 273.513 49.8604 273.65 49.9071C273.787 49.9538 273.957 49.9771 274.16 49.9771C274.333 49.9771 274.485 49.9554 274.615 49.9121C274.745 49.8654 274.853 49.8038 274.94 49.7271C275.027 49.6504 275.09 49.5621 275.13 49.4621C275.173 49.3621 275.195 49.2554 275.195 49.1421C275.195 49.0021 275.157 48.8871 275.08 48.7971C275.007 48.7038 274.908 48.6254 274.785 48.5621C274.662 48.4954 274.52 48.4388 274.36 48.3921C274.203 48.3421 274.042 48.2904 273.875 48.2371C273.712 48.1838 273.55 48.1238 273.39 48.0571C273.233 47.9871 273.093 47.9004 272.97 47.7971C272.847 47.6938 272.747 47.5671 272.67 47.4171C272.597 47.2638 272.56 47.0788 272.56 46.8621C272.56 46.6688 272.6 46.4838 272.68 46.3071C272.76 46.1271 272.877 45.9704 273.03 45.8371C273.183 45.7004 273.372 45.5921 273.595 45.5121C273.818 45.4321 274.073 45.3921 274.36 45.3921C274.693 45.3921 274.992 45.4454 275.255 45.5521C275.522 45.6554 275.752 45.7988 275.945 45.9821L275.745 46.3071ZM278.676 50.6171C278.276 50.6171 277.968 50.5054 277.751 50.2821C277.538 50.0588 277.431 49.7371 277.431 49.3171V46.2171H276.821C276.768 46.2171 276.723 46.2021 276.686 46.1721C276.649 46.1388 276.631 46.0888 276.631 46.0221V45.6671L277.461 45.5621L277.666 43.9971C277.676 43.9471 277.698 43.9071 277.731 43.8771C277.768 43.8438 277.814 43.8271 277.871 43.8271H278.321V45.5721H279.786V46.2171H278.321V49.2571C278.321 49.4704 278.373 49.6288 278.476 49.7321C278.579 49.8354 278.713 49.8871 278.876 49.8871C278.969 49.8871 279.049 49.8754 279.116 49.8521C279.186 49.8254 279.246 49.7971 279.296 49.7671C279.346 49.7371 279.388 49.7104 279.421 49.6871C279.458 49.6604 279.489 49.6471 279.516 49.6471C279.563 49.6471 279.604 49.6754 279.641 49.7321L279.901 50.1571C279.748 50.3004 279.563 50.4138 279.346 50.4971C279.129 50.5771 278.906 50.6171 278.676 50.6171Z"
        fill={isLightTheme ? '#525266' : '#BEBECC'}
      />
      <path
        d="M4.58 44.4921C4.55 44.5421 4.51667 44.5804 4.48 44.6071C4.44667 44.6304 4.405 44.6421 4.355 44.6421C4.29833 44.6421 4.23167 44.6138 4.155 44.5571C4.07833 44.5004 3.98167 44.4388 3.865 44.3721C3.75167 44.3021 3.61333 44.2388 3.45 44.1821C3.29 44.1254 3.095 44.0971 2.865 44.0971C2.64833 44.0971 2.45667 44.1271 2.29 44.1871C2.12667 44.2438 1.98833 44.3221 1.875 44.4221C1.765 44.5221 1.68167 44.6404 1.625 44.7771C1.56833 44.9104 1.54 45.0554 1.54 45.2121C1.54 45.4121 1.58833 45.5788 1.685 45.7121C1.785 45.8421 1.915 45.9538 2.075 46.0471C2.23833 46.1404 2.42167 46.2221 2.625 46.2921C2.83167 46.3588 3.04167 46.4288 3.255 46.5021C3.47167 46.5754 3.68167 46.6588 3.885 46.7521C4.09167 46.8421 4.275 46.9571 4.435 47.0971C4.59833 47.2371 4.72833 47.4088 4.825 47.6121C4.925 47.8154 4.975 48.0654 4.975 48.3621C4.975 48.6754 4.92167 48.9704 4.815 49.2471C4.70833 49.5204 4.55167 49.7588 4.345 49.9621C4.14167 50.1654 3.89 50.3254 3.59 50.4421C3.29333 50.5588 2.955 50.6171 2.575 50.6171C2.10833 50.6171 1.685 50.5338 1.305 50.3671C0.925 50.1971 0.6 49.9688 0.33 49.6821L0.61 49.2221C0.636667 49.1854 0.668333 49.1554 0.705 49.1321C0.745 49.1054 0.788333 49.0921 0.835 49.0921C0.878333 49.0921 0.926667 49.1104 0.98 49.1471C1.03667 49.1804 1.1 49.2238 1.17 49.2771C1.24 49.3304 1.32 49.3888 1.41 49.4521C1.5 49.5154 1.60167 49.5738 1.715 49.6271C1.83167 49.6804 1.96333 49.7254 2.11 49.7621C2.25667 49.7954 2.42167 49.8121 2.605 49.8121C2.835 49.8121 3.04 49.7804 3.22 49.7171C3.4 49.6538 3.55167 49.5654 3.675 49.4521C3.80167 49.3354 3.89833 49.1971 3.965 49.0371C4.03167 48.8771 4.065 48.6988 4.065 48.5021C4.065 48.2854 4.015 48.1088 3.915 47.9721C3.81833 47.8321 3.69 47.7154 3.53 47.6221C3.37 47.5288 3.18667 47.4504 2.98 47.3871C2.77333 47.3204 2.56333 47.2538 2.35 47.1871C2.13667 47.1171 1.92667 47.0371 1.72 46.9471C1.51333 46.8571 1.33 46.7404 1.17 46.5971C1.01 46.4538 0.88 46.2754 0.78 46.0621C0.683333 45.8454 0.635 45.5788 0.635 45.2621C0.635 45.0088 0.683333 44.7638 0.78 44.5271C0.88 44.2904 1.02333 44.0804 1.21 43.8971C1.4 43.7138 1.63167 43.5671 1.905 43.4571C2.18167 43.3471 2.49833 43.2921 2.855 43.2921C3.255 43.2921 3.61833 43.3554 3.945 43.4821C4.275 43.6088 4.565 43.7921 4.815 44.0321L4.58 44.4921ZM9.49539 47.4521C9.49539 47.2454 9.46539 47.0571 9.40539 46.8871C9.34872 46.7138 9.26372 46.5654 9.15039 46.4421C9.04039 46.3154 8.90539 46.2188 8.74539 46.1521C8.58539 46.0821 8.40372 46.0471 8.20039 46.0471C7.77372 46.0471 7.43539 46.1721 7.18539 46.4221C6.93872 46.6688 6.78539 47.0121 6.72539 47.4521H9.49539ZM10.2154 49.8271C10.1054 49.9604 9.97372 50.0771 9.82039 50.1771C9.66706 50.2738 9.50206 50.3538 9.32539 50.4171C9.15206 50.4804 8.97206 50.5271 8.78539 50.5571C8.59872 50.5904 8.41372 50.6071 8.23039 50.6071C7.88039 50.6071 7.55706 50.5488 7.26039 50.4321C6.96706 50.3121 6.71206 50.1388 6.49539 49.9121C6.28206 49.6821 6.11539 49.3988 5.99539 49.0621C5.87539 48.7254 5.81539 48.3388 5.81539 47.9021C5.81539 47.5488 5.86872 47.2188 5.97539 46.9121C6.08539 46.6054 6.24206 46.3404 6.44539 46.1171C6.64872 45.8904 6.89706 45.7138 7.19039 45.5871C7.48372 45.4571 7.81372 45.3921 8.18039 45.3921C8.48372 45.3921 8.76372 45.4438 9.02039 45.5471C9.28039 45.6471 9.50372 45.7938 9.69039 45.9871C9.88039 46.1771 10.0287 46.4138 10.1354 46.6971C10.2421 46.9771 10.2954 47.2971 10.2954 47.6571C10.2954 47.7971 10.2804 47.8904 10.2504 47.9371C10.2204 47.9838 10.1637 48.0071 10.0804 48.0071H6.69539C6.70539 48.3271 6.74872 48.6054 6.82539 48.8421C6.90539 49.0788 7.01539 49.2771 7.15539 49.4371C7.29539 49.5938 7.46206 49.7121 7.65539 49.7921C7.84872 49.8688 8.06539 49.9071 8.30539 49.9071C8.52872 49.9071 8.72039 49.8821 8.88039 49.8321C9.04372 49.7788 9.18372 49.7221 9.30039 49.6621C9.41706 49.6021 9.51372 49.5471 9.59039 49.4971C9.67039 49.4438 9.73872 49.4171 9.79539 49.4171C9.86872 49.4171 9.92539 49.4454 9.96539 49.5021L10.2154 49.8271ZM12.2286 46.2071C12.3386 46.0838 12.4553 45.9721 12.5786 45.8721C12.7019 45.7721 12.8319 45.6871 12.9686 45.6171C13.1086 45.5438 13.2553 45.4888 13.4086 45.4521C13.5653 45.4121 13.7336 45.3921 13.9136 45.3921C14.1903 45.3921 14.4336 45.4388 14.6436 45.5321C14.8569 45.6221 15.0336 45.7521 15.1736 45.9221C15.3169 46.0888 15.4253 46.2904 15.4986 46.5271C15.5719 46.7638 15.6086 47.0254 15.6086 47.3121V50.5371H14.7136V47.3121C14.7136 46.9288 14.6253 46.6321 14.4486 46.4221C14.2753 46.2088 14.0103 46.1021 13.6536 46.1021C13.3903 46.1021 13.1436 46.1654 12.9136 46.2921C12.6869 46.4188 12.4769 46.5904 12.2836 46.8071V50.5371H11.3886V45.4721H11.9236C12.0503 45.4721 12.1286 45.5338 12.1586 45.6571L12.2286 46.2071ZM18.4514 50.6171C18.0514 50.6171 17.7431 50.5054 17.5264 50.2821C17.3131 50.0588 17.2064 49.7371 17.2064 49.3171V46.2171H16.5964C16.5431 46.2171 16.4981 46.2021 16.4614 46.1721C16.4247 46.1388 16.4064 46.0888 16.4064 46.0221V45.6671L17.2364 45.5621L17.4414 43.9971C17.4514 43.9471 17.4731 43.9071 17.5064 43.8771C17.5431 43.8438 17.5897 43.8271 17.6464 43.8271H18.0964V45.5721H19.5614V46.2171H18.0964V49.2571C18.0964 49.4704 18.1481 49.6288 18.2514 49.7321C18.3547 49.8354 18.4881 49.8871 18.6514 49.8871C18.7447 49.8871 18.8247 49.8754 18.8914 49.8521C18.9614 49.8254 19.0214 49.7971 19.0714 49.7671C19.1214 49.7371 19.1631 49.7104 19.1964 49.6871C19.2331 49.6604 19.2647 49.6471 19.2914 49.6471C19.3381 49.6471 19.3797 49.6754 19.4164 49.7321L19.6764 50.1571C19.5231 50.3004 19.3381 50.4138 19.1214 50.4971C18.9047 50.5771 18.6814 50.6171 18.4514 50.6171ZM26.339 46.6771C26.1723 46.4538 25.9923 46.2988 25.799 46.2121C25.6057 46.1221 25.389 46.0771 25.149 46.0771C24.679 46.0771 24.3173 46.2454 24.064 46.5821C23.8107 46.9188 23.684 47.3988 23.684 48.0221C23.684 48.3521 23.7123 48.6354 23.769 48.8721C23.8257 49.1054 23.909 49.2988 24.019 49.4521C24.129 49.6021 24.264 49.7121 24.424 49.7821C24.584 49.8521 24.7657 49.8871 24.969 49.8871C25.2623 49.8871 25.5173 49.8204 25.734 49.6871C25.954 49.5538 26.1557 49.3654 26.339 49.1221V46.6771ZM27.229 43.1721V50.5371H26.699C26.5723 50.5371 26.4923 50.4754 26.459 50.3521L26.379 49.7371C26.1623 49.9971 25.9157 50.2071 25.639 50.3671C25.3623 50.5271 25.0423 50.6071 24.679 50.6071C24.389 50.6071 24.1257 50.5521 23.889 50.4421C23.6523 50.3288 23.4507 50.1638 23.284 49.9471C23.1173 49.7304 22.989 49.4604 22.899 49.1371C22.809 48.8138 22.764 48.4421 22.764 48.0221C22.764 47.6488 22.814 47.3021 22.914 46.9821C23.014 46.6588 23.1573 46.3788 23.344 46.1421C23.5307 45.9054 23.759 45.7204 24.029 45.5871C24.3023 45.4504 24.609 45.3821 24.949 45.3821C25.259 45.3821 25.524 45.4354 25.744 45.5421C25.9673 45.6454 26.1657 45.7904 26.339 45.9771V43.1721H27.229ZM29.5747 45.4721V50.5371H28.6847V45.4721H29.5747ZM29.7647 43.8821C29.7647 43.9688 29.7464 44.0504 29.7097 44.1271C29.6764 44.2004 29.6297 44.2671 29.5697 44.3271C29.513 44.3838 29.4447 44.4288 29.3647 44.4621C29.288 44.4954 29.2064 44.5121 29.1197 44.5121C29.033 44.5121 28.9514 44.4954 28.8747 44.4621C28.8014 44.4288 28.7364 44.3838 28.6797 44.3271C28.623 44.2671 28.578 44.2004 28.5447 44.1271C28.5114 44.0504 28.4947 43.9688 28.4947 43.8821C28.4947 43.7954 28.5114 43.7138 28.5447 43.6371C28.578 43.5571 28.623 43.4888 28.6797 43.4321C28.7364 43.3721 28.8014 43.3254 28.8747 43.2921C28.9514 43.2588 29.033 43.2421 29.1197 43.2421C29.2064 43.2421 29.288 43.2588 29.3647 43.2921C29.4447 43.3254 29.513 43.3721 29.5697 43.4321C29.6297 43.4888 29.6764 43.5571 29.7097 43.6371C29.7464 43.7138 29.7647 43.7954 29.7647 43.8821ZM32.802 48.0621C32.982 48.0621 33.1404 48.0371 33.277 47.9871C33.4137 47.9371 33.5287 47.8671 33.622 47.7771C33.7154 47.6871 33.7854 47.5804 33.832 47.4571C33.8787 47.3304 33.902 47.1921 33.902 47.0421C33.902 46.7321 33.807 46.4854 33.617 46.3021C33.4304 46.1188 33.1587 46.0271 32.802 46.0271C32.442 46.0271 32.167 46.1188 31.977 46.3021C31.7904 46.4854 31.697 46.7321 31.697 47.0421C31.697 47.1921 31.7204 47.3304 31.767 47.4571C31.817 47.5804 31.8887 47.6871 31.982 47.7771C32.0754 47.8671 32.1904 47.9371 32.327 47.9871C32.4637 48.0371 32.622 48.0621 32.802 48.0621ZM34.407 50.8121C34.407 50.6888 34.372 50.5888 34.302 50.5121C34.232 50.4354 34.137 50.3754 34.017 50.3321C33.9004 50.2888 33.7637 50.2588 33.607 50.2421C33.4504 50.2221 33.2837 50.2071 33.107 50.1971C32.9337 50.1871 32.757 50.1771 32.577 50.1671C32.397 50.1571 32.2237 50.1404 32.057 50.1171C31.8704 50.2038 31.717 50.3138 31.597 50.4471C31.4804 50.5771 31.422 50.7304 31.422 50.9071C31.422 51.0204 31.4504 51.1254 31.507 51.2221C31.567 51.3221 31.657 51.4071 31.777 51.4771C31.897 51.5504 32.047 51.6071 32.227 51.6471C32.4104 51.6904 32.6254 51.7121 32.872 51.7121C33.112 51.7121 33.327 51.6904 33.517 51.6471C33.707 51.6038 33.867 51.5421 33.997 51.4621C34.1304 51.3821 34.232 51.2871 34.302 51.1771C34.372 51.0671 34.407 50.9454 34.407 50.8121ZM35.312 45.6721V46.0021C35.312 46.1121 35.242 46.1821 35.102 46.2121L34.527 46.2871C34.6404 46.5071 34.697 46.7504 34.697 47.0171C34.697 47.2638 34.6487 47.4888 34.552 47.6921C34.4587 47.8921 34.3287 48.0638 34.162 48.2071C33.9954 48.3504 33.7954 48.4604 33.562 48.5371C33.3287 48.6138 33.0754 48.6521 32.802 48.6521C32.5654 48.6521 32.342 48.6238 32.132 48.5671C32.0254 48.6338 31.9437 48.7054 31.887 48.7821C31.8304 48.8554 31.802 48.9304 31.802 49.0071C31.802 49.1271 31.8504 49.2188 31.947 49.2821C32.047 49.3421 32.177 49.3854 32.337 49.4121C32.497 49.4388 32.6787 49.4554 32.882 49.4621C33.0887 49.4688 33.2987 49.4804 33.512 49.4971C33.7287 49.5104 33.9387 49.5354 34.142 49.5721C34.3487 49.6088 34.532 49.6688 34.692 49.7521C34.852 49.8354 34.9804 49.9504 35.077 50.0971C35.177 50.2438 35.227 50.4338 35.227 50.6671C35.227 50.8838 35.172 51.0938 35.062 51.2971C34.9554 51.5004 34.8004 51.6804 34.597 51.8371C34.3937 51.9971 34.1437 52.1238 33.847 52.2171C33.5537 52.3138 33.222 52.3621 32.852 52.3621C32.482 52.3621 32.1587 52.3254 31.882 52.2521C31.6054 52.1788 31.3754 52.0804 31.192 51.9571C31.0087 51.8338 30.8704 51.6904 30.777 51.5271C30.687 51.3671 30.642 51.1988 30.642 51.0221C30.642 50.7721 30.7204 50.5604 30.877 50.3871C31.0337 50.2138 31.2487 50.0754 31.522 49.9721C31.372 49.9054 31.252 49.8171 31.162 49.7071C31.0754 49.5938 31.032 49.4421 31.032 49.2521C31.032 49.1788 31.0454 49.1038 31.072 49.0271C31.0987 48.9471 31.1387 48.8688 31.192 48.7921C31.2487 48.7121 31.317 48.6371 31.397 48.5671C31.477 48.4971 31.5704 48.4354 31.677 48.3821C31.427 48.2421 31.232 48.0571 31.092 47.8271C30.952 47.5938 30.882 47.3238 30.882 47.0171C30.882 46.7704 30.9287 46.5471 31.022 46.3471C31.1187 46.1438 31.252 45.9721 31.422 45.8321C31.592 45.6888 31.7937 45.5788 32.027 45.5021C32.2637 45.4254 32.522 45.3871 32.802 45.3871C33.022 45.3871 33.227 45.4121 33.417 45.4621C33.607 45.5088 33.7804 45.5788 33.937 45.6721H35.312ZM39.5442 47.4521C39.5442 47.2454 39.5142 47.0571 39.4542 46.8871C39.3976 46.7138 39.3126 46.5654 39.1992 46.4421C39.0892 46.3154 38.9542 46.2188 38.7942 46.1521C38.6342 46.0821 38.4526 46.0471 38.2492 46.0471C37.8226 46.0471 37.4842 46.1721 37.2342 46.4221C36.9876 46.6688 36.8342 47.0121 36.7742 47.4521H39.5442ZM40.2642 49.8271C40.1542 49.9604 40.0226 50.0771 39.8692 50.1771C39.7159 50.2738 39.5509 50.3538 39.3742 50.4171C39.2009 50.4804 39.0209 50.5271 38.8342 50.5571C38.6476 50.5904 38.4626 50.6071 38.2792 50.6071C37.9292 50.6071 37.6059 50.5488 37.3092 50.4321C37.0159 50.3121 36.7609 50.1388 36.5442 49.9121C36.3309 49.6821 36.1642 49.3988 36.0442 49.0621C35.9242 48.7254 35.8642 48.3388 35.8642 47.9021C35.8642 47.5488 35.9176 47.2188 36.0242 46.9121C36.1342 46.6054 36.2909 46.3404 36.4942 46.1171C36.6976 45.8904 36.9459 45.7138 37.2392 45.5871C37.5326 45.4571 37.8626 45.3921 38.2292 45.3921C38.5326 45.3921 38.8126 45.4438 39.0692 45.5471C39.3292 45.6471 39.5526 45.7938 39.7392 45.9871C39.9292 46.1771 40.0776 46.4138 40.1842 46.6971C40.2909 46.9771 40.3442 47.2971 40.3442 47.6571C40.3442 47.7971 40.3292 47.8904 40.2992 47.9371C40.2692 47.9838 40.2126 48.0071 40.1292 48.0071H36.7442C36.7542 48.3271 36.7976 48.6054 36.8742 48.8421C36.9542 49.0788 37.0642 49.2771 37.2042 49.4371C37.3442 49.5938 37.5109 49.7121 37.7042 49.7921C37.8976 49.8688 38.1142 49.9071 38.3542 49.9071C38.5776 49.9071 38.7692 49.8821 38.9292 49.8321C39.0926 49.7788 39.2326 49.7221 39.3492 49.6621C39.4659 49.6021 39.5626 49.5471 39.6392 49.4971C39.7192 49.4438 39.7876 49.4171 39.8442 49.4171C39.9176 49.4171 39.9742 49.4454 40.0142 49.5021L40.2642 49.8271ZM44.3874 46.3071C44.3474 46.3804 44.2858 46.4171 44.2024 46.4171C44.1524 46.4171 44.0958 46.3988 44.0324 46.3621C43.9691 46.3254 43.8908 46.2854 43.7974 46.2421C43.7074 46.1954 43.5991 46.1538 43.4724 46.1171C43.3458 46.0771 43.1958 46.0571 43.0224 46.0571C42.8724 46.0571 42.7374 46.0771 42.6174 46.1171C42.4974 46.1538 42.3941 46.2054 42.3074 46.2721C42.2241 46.3388 42.1591 46.4171 42.1124 46.5071C42.0691 46.5938 42.0474 46.6888 42.0474 46.7921C42.0474 46.9221 42.0841 47.0304 42.1574 47.1171C42.2341 47.2038 42.3341 47.2788 42.4574 47.3421C42.5808 47.4054 42.7208 47.4621 42.8774 47.5121C43.0341 47.5588 43.1941 47.6104 43.3574 47.6671C43.5241 47.7204 43.6858 47.7804 43.8424 47.8471C43.9991 47.9138 44.1391 47.9971 44.2624 48.0971C44.3858 48.1971 44.4841 48.3204 44.5574 48.4671C44.6341 48.6104 44.6724 48.7838 44.6724 48.9871C44.6724 49.2204 44.6308 49.4371 44.5474 49.6371C44.4641 49.8338 44.3408 50.0054 44.1774 50.1521C44.0141 50.2954 43.8141 50.4088 43.5774 50.4921C43.3408 50.5754 43.0674 50.6171 42.7574 50.6171C42.4041 50.6171 42.0841 50.5604 41.7974 50.4471C41.5108 50.3304 41.2674 50.1821 41.0674 50.0021L41.2774 49.6621C41.3041 49.6188 41.3358 49.5854 41.3724 49.5621C41.4091 49.5388 41.4558 49.5271 41.5124 49.5271C41.5724 49.5271 41.6358 49.5504 41.7024 49.5971C41.7691 49.6438 41.8491 49.6954 41.9424 49.7521C42.0391 49.8088 42.1558 49.8604 42.2924 49.9071C42.4291 49.9538 42.5991 49.9771 42.8024 49.9771C42.9758 49.9771 43.1274 49.9554 43.2574 49.9121C43.3874 49.8654 43.4958 49.8038 43.5824 49.7271C43.6691 49.6504 43.7324 49.5621 43.7724 49.4621C43.8158 49.3621 43.8374 49.2554 43.8374 49.1421C43.8374 49.0021 43.7991 48.8871 43.7224 48.7971C43.6491 48.7038 43.5508 48.6254 43.4274 48.5621C43.3041 48.4954 43.1624 48.4388 43.0024 48.3921C42.8458 48.3421 42.6841 48.2904 42.5174 48.2371C42.3541 48.1838 42.1924 48.1238 42.0324 48.0571C41.8758 47.9871 41.7358 47.9004 41.6124 47.7971C41.4891 47.6938 41.3891 47.5671 41.3124 47.4171C41.2391 47.2638 41.2024 47.0788 41.2024 46.8621C41.2024 46.6688 41.2424 46.4838 41.3224 46.3071C41.4024 46.1271 41.5191 45.9704 41.6724 45.8371C41.8258 45.7004 42.0141 45.5921 42.2374 45.5121C42.4608 45.4321 42.7158 45.3921 43.0024 45.3921C43.3358 45.3921 43.6341 45.4454 43.8974 45.5521C44.1641 45.6554 44.3941 45.7988 44.5874 45.9821L44.3874 46.3071ZM47.3186 50.6171C46.9186 50.6171 46.6103 50.5054 46.3936 50.2821C46.1803 50.0588 46.0736 49.7371 46.0736 49.3171V46.2171H45.4636C45.4103 46.2171 45.3653 46.2021 45.3286 46.1721C45.2919 46.1388 45.2736 46.0888 45.2736 46.0221V45.6671L46.1036 45.5621L46.3086 43.9971C46.3186 43.9471 46.3403 43.9071 46.3736 43.8771C46.4103 43.8438 46.4569 43.8271 46.5136 43.8271H46.9636V45.5721H48.4286V46.2171H46.9636V49.2571C46.9636 49.4704 47.0153 49.6288 47.1186 49.7321C47.2219 49.8354 47.3553 49.8871 47.5186 49.8871C47.6119 49.8871 47.6919 49.8754 47.7586 49.8521C47.8286 49.8254 47.8886 49.7971 47.9386 49.7671C47.9886 49.7371 48.0303 49.7104 48.0636 49.6871C48.1003 49.6604 48.1319 49.6471 48.1586 49.6471C48.2053 49.6471 48.2469 49.6754 48.2836 49.7321L48.5436 50.1571C48.3903 50.3004 48.2053 50.4138 47.9886 50.4971C47.7719 50.5771 47.5486 50.6171 47.3186 50.6171Z"
        fill={isLightTheme ? '#BEBECC' : '#525266'}
      />
      <path
        d="M180.06 12.219C179.65 12.2324 179.3 12.2657 179.01 12.319C178.724 12.369 178.489 12.4357 178.305 12.519C178.125 12.6024 177.994 12.7007 177.91 12.814C177.83 12.9274 177.79 13.054 177.79 13.194C177.79 13.3274 177.812 13.4424 177.855 13.539C177.899 13.6357 177.957 13.7157 178.03 13.779C178.107 13.839 178.195 13.884 178.295 13.914C178.399 13.9407 178.509 13.954 178.625 13.954C178.782 13.954 178.925 13.939 179.055 13.909C179.185 13.8757 179.307 13.829 179.42 13.769C179.537 13.709 179.647 13.6374 179.75 13.554C179.857 13.4707 179.96 13.3757 180.06 13.269V12.219ZM177.185 10.149C177.465 9.87902 177.767 9.67736 178.09 9.54402C178.414 9.41069 178.772 9.34402 179.165 9.34402C179.449 9.34402 179.7 9.39069 179.92 9.48402C180.14 9.57736 180.325 9.70736 180.475 9.87402C180.625 10.0407 180.739 10.2424 180.815 10.479C180.892 10.7157 180.93 10.9757 180.93 11.259V14.499H180.535C180.449 14.499 180.382 14.4857 180.335 14.459C180.289 14.429 180.252 14.3724 180.225 14.289L180.125 13.809C179.992 13.9324 179.862 14.0424 179.735 14.139C179.609 14.2324 179.475 14.3124 179.335 14.379C179.195 14.4424 179.045 14.4907 178.885 14.524C178.729 14.5607 178.554 14.579 178.36 14.579C178.164 14.579 177.979 14.5524 177.805 14.499C177.632 14.4424 177.48 14.359 177.35 14.249C177.224 14.139 177.122 14.0007 177.045 13.834C176.972 13.664 176.935 13.464 176.935 13.234C176.935 13.034 176.99 12.8424 177.1 12.659C177.21 12.4724 177.389 12.3074 177.635 12.164C177.882 12.0207 178.204 11.904 178.6 11.814C178.997 11.7207 179.484 11.6674 180.06 11.654V11.259C180.06 10.8657 179.975 10.569 179.805 10.369C179.635 10.1657 179.387 10.064 179.06 10.064C178.84 10.064 178.655 10.0924 178.505 10.149C178.359 10.2024 178.23 10.264 178.12 10.334C178.014 10.4007 177.92 10.4624 177.84 10.519C177.764 10.5724 177.687 10.599 177.61 10.599C177.55 10.599 177.499 10.584 177.455 10.554C177.412 10.5207 177.375 10.4807 177.345 10.434L177.185 10.149ZM184.051 12.024C184.231 12.024 184.389 11.999 184.526 11.949C184.663 11.899 184.778 11.829 184.871 11.739C184.964 11.649 185.034 11.5424 185.081 11.419C185.128 11.2924 185.151 11.154 185.151 11.004C185.151 10.694 185.056 10.4474 184.866 10.264C184.679 10.0807 184.408 9.98902 184.051 9.98902C183.691 9.98902 183.416 10.0807 183.226 10.264C183.039 10.4474 182.946 10.694 182.946 11.004C182.946 11.154 182.969 11.2924 183.016 11.419C183.066 11.5424 183.138 11.649 183.231 11.739C183.324 11.829 183.439 11.899 183.576 11.949C183.713 11.999 183.871 12.024 184.051 12.024ZM185.656 14.774C185.656 14.6507 185.621 14.5507 185.551 14.474C185.481 14.3974 185.386 14.3374 185.266 14.294C185.149 14.2507 185.013 14.2207 184.856 14.204C184.699 14.184 184.533 14.169 184.356 14.159C184.183 14.149 184.006 14.139 183.826 14.129C183.646 14.119 183.473 14.1024 183.306 14.079C183.119 14.1657 182.966 14.2757 182.846 14.409C182.729 14.539 182.671 14.6924 182.671 14.869C182.671 14.9824 182.699 15.0874 182.756 15.184C182.816 15.284 182.906 15.369 183.026 15.439C183.146 15.5124 183.296 15.569 183.476 15.609C183.659 15.6524 183.874 15.674 184.121 15.674C184.361 15.674 184.576 15.6524 184.766 15.609C184.956 15.5657 185.116 15.504 185.246 15.424C185.379 15.344 185.481 15.249 185.551 15.139C185.621 15.029 185.656 14.9074 185.656 14.774ZM186.561 9.63402V9.96402C186.561 10.074 186.491 10.144 186.351 10.174L185.776 10.249C185.889 10.469 185.946 10.7124 185.946 10.979C185.946 11.2257 185.898 11.4507 185.801 11.654C185.708 11.854 185.578 12.0257 185.411 12.169C185.244 12.3124 185.044 12.4224 184.811 12.499C184.578 12.5757 184.324 12.614 184.051 12.614C183.814 12.614 183.591 12.5857 183.381 12.529C183.274 12.5957 183.193 12.6674 183.136 12.744C183.079 12.8174 183.051 12.8924 183.051 12.969C183.051 13.089 183.099 13.1807 183.196 13.244C183.296 13.304 183.426 13.3474 183.586 13.374C183.746 13.4007 183.928 13.4174 184.131 13.424C184.338 13.4307 184.548 13.4424 184.761 13.459C184.978 13.4724 185.188 13.4974 185.391 13.534C185.598 13.5707 185.781 13.6307 185.941 13.714C186.101 13.7974 186.229 13.9124 186.326 14.059C186.426 14.2057 186.476 14.3957 186.476 14.629C186.476 14.8457 186.421 15.0557 186.311 15.259C186.204 15.4624 186.049 15.6424 185.846 15.799C185.643 15.959 185.393 16.0857 185.096 16.179C184.803 16.2757 184.471 16.324 184.101 16.324C183.731 16.324 183.408 16.2874 183.131 16.214C182.854 16.1407 182.624 16.0424 182.441 15.919C182.258 15.7957 182.119 15.6524 182.026 15.489C181.936 15.329 181.891 15.1607 181.891 14.984C181.891 14.734 181.969 14.5224 182.126 14.349C182.283 14.1757 182.498 14.0374 182.771 13.934C182.621 13.8674 182.501 13.779 182.411 13.669C182.324 13.5557 182.281 13.404 182.281 13.214C182.281 13.1407 182.294 13.0657 182.321 12.989C182.348 12.909 182.388 12.8307 182.441 12.754C182.498 12.674 182.566 12.599 182.646 12.529C182.726 12.459 182.819 12.3974 182.926 12.344C182.676 12.204 182.481 12.019 182.341 11.789C182.201 11.5557 182.131 11.2857 182.131 10.979C182.131 10.7324 182.178 10.509 182.271 10.309C182.368 10.1057 182.501 9.93402 182.671 9.79402C182.841 9.65069 183.043 9.54069 183.276 9.46402C183.513 9.38736 183.771 9.34902 184.051 9.34902C184.271 9.34902 184.476 9.37402 184.666 9.42402C184.856 9.47069 185.029 9.54069 185.186 9.63402H186.561ZM189.227 12.024C189.407 12.024 189.565 11.999 189.702 11.949C189.839 11.899 189.954 11.829 190.047 11.739C190.14 11.649 190.21 11.5424 190.257 11.419C190.304 11.2924 190.327 11.154 190.327 11.004C190.327 10.694 190.232 10.4474 190.042 10.264C189.855 10.0807 189.584 9.98902 189.227 9.98902C188.867 9.98902 188.592 10.0807 188.402 10.264C188.215 10.4474 188.122 10.694 188.122 11.004C188.122 11.154 188.145 11.2924 188.192 11.419C188.242 11.5424 188.314 11.649 188.407 11.739C188.5 11.829 188.615 11.899 188.752 11.949C188.889 11.999 189.047 12.024 189.227 12.024ZM190.832 14.774C190.832 14.6507 190.797 14.5507 190.727 14.474C190.657 14.3974 190.562 14.3374 190.442 14.294C190.325 14.2507 190.189 14.2207 190.032 14.204C189.875 14.184 189.709 14.169 189.532 14.159C189.359 14.149 189.182 14.139 189.002 14.129C188.822 14.119 188.649 14.1024 188.482 14.079C188.295 14.1657 188.142 14.2757 188.022 14.409C187.905 14.539 187.847 14.6924 187.847 14.869C187.847 14.9824 187.875 15.0874 187.932 15.184C187.992 15.284 188.082 15.369 188.202 15.439C188.322 15.5124 188.472 15.569 188.652 15.609C188.835 15.6524 189.05 15.674 189.297 15.674C189.537 15.674 189.752 15.6524 189.942 15.609C190.132 15.5657 190.292 15.504 190.422 15.424C190.555 15.344 190.657 15.249 190.727 15.139C190.797 15.029 190.832 14.9074 190.832 14.774ZM191.737 9.63402V9.96402C191.737 10.074 191.667 10.144 191.527 10.174L190.952 10.249C191.065 10.469 191.122 10.7124 191.122 10.979C191.122 11.2257 191.074 11.4507 190.977 11.654C190.884 11.854 190.754 12.0257 190.587 12.169C190.42 12.3124 190.22 12.4224 189.987 12.499C189.754 12.5757 189.5 12.614 189.227 12.614C188.99 12.614 188.767 12.5857 188.557 12.529C188.45 12.5957 188.369 12.6674 188.312 12.744C188.255 12.8174 188.227 12.8924 188.227 12.969C188.227 13.089 188.275 13.1807 188.372 13.244C188.472 13.304 188.602 13.3474 188.762 13.374C188.922 13.4007 189.104 13.4174 189.307 13.424C189.514 13.4307 189.724 13.4424 189.937 13.459C190.154 13.4724 190.364 13.4974 190.567 13.534C190.774 13.5707 190.957 13.6307 191.117 13.714C191.277 13.7974 191.405 13.9124 191.502 14.059C191.602 14.2057 191.652 14.3957 191.652 14.629C191.652 14.8457 191.597 15.0557 191.487 15.259C191.38 15.4624 191.225 15.6424 191.022 15.799C190.819 15.959 190.569 16.0857 190.272 16.179C189.979 16.2757 189.647 16.324 189.277 16.324C188.907 16.324 188.584 16.2874 188.307 16.214C188.03 16.1407 187.8 16.0424 187.617 15.919C187.434 15.7957 187.295 15.6524 187.202 15.489C187.112 15.329 187.067 15.1607 187.067 14.984C187.067 14.734 187.145 14.5224 187.302 14.349C187.459 14.1757 187.674 14.0374 187.947 13.934C187.797 13.8674 187.677 13.779 187.587 13.669C187.5 13.5557 187.457 13.404 187.457 13.214C187.457 13.1407 187.47 13.0657 187.497 12.989C187.524 12.909 187.564 12.8307 187.617 12.754C187.674 12.674 187.742 12.599 187.822 12.529C187.902 12.459 187.995 12.3974 188.102 12.344C187.852 12.204 187.657 12.019 187.517 11.789C187.377 11.5557 187.307 11.2857 187.307 10.979C187.307 10.7324 187.354 10.509 187.447 10.309C187.544 10.1057 187.677 9.93402 187.847 9.79402C188.017 9.65069 188.219 9.54069 188.452 9.46402C188.689 9.38736 188.947 9.34902 189.227 9.34902C189.447 9.34902 189.652 9.37402 189.842 9.42402C190.032 9.47069 190.205 9.54069 190.362 9.63402H191.737ZM193.502 10.449C193.662 10.1024 193.859 9.83236 194.092 9.63902C194.325 9.44236 194.61 9.34402 194.947 9.34402C195.054 9.34402 195.155 9.35569 195.252 9.37902C195.352 9.40236 195.44 9.43902 195.517 9.48902L195.452 10.154C195.432 10.2374 195.382 10.279 195.302 10.279C195.255 10.279 195.187 10.269 195.097 10.249C195.007 10.229 194.905 10.219 194.792 10.219C194.632 10.219 194.489 10.2424 194.362 10.289C194.239 10.3357 194.127 10.4057 194.027 10.499C193.93 10.589 193.842 10.7024 193.762 10.839C193.685 10.9724 193.615 11.1257 193.552 11.299V14.499H192.657V9.43402H193.167C193.264 9.43402 193.33 9.45236 193.367 9.48902C193.404 9.52569 193.429 9.58902 193.442 9.67902L193.502 10.449ZM199.485 11.414C199.485 11.2074 199.455 11.019 199.395 10.849C199.338 10.6757 199.253 10.5274 199.14 10.404C199.03 10.2774 198.895 10.1807 198.735 10.114C198.575 10.044 198.393 10.009 198.19 10.009C197.763 10.009 197.425 10.134 197.175 10.384C196.928 10.6307 196.775 10.974 196.715 11.414H199.485ZM200.205 13.789C200.095 13.9224 199.963 14.039 199.81 14.139C199.656 14.2357 199.491 14.3157 199.315 14.379C199.141 14.4424 198.961 14.489 198.775 14.519C198.588 14.5524 198.403 14.569 198.22 14.569C197.87 14.569 197.546 14.5107 197.25 14.394C196.956 14.274 196.701 14.1007 196.485 13.874C196.271 13.644 196.105 13.3607 195.985 13.024C195.865 12.6874 195.805 12.3007 195.805 11.864C195.805 11.5107 195.858 11.1807 195.965 10.874C196.075 10.5674 196.231 10.3024 196.435 10.079C196.638 9.85236 196.886 9.67569 197.18 9.54902C197.473 9.41902 197.803 9.35402 198.17 9.35402C198.473 9.35402 198.753 9.40569 199.01 9.50902C199.27 9.60902 199.493 9.75569 199.68 9.94902C199.87 10.139 200.018 10.3757 200.125 10.659C200.231 10.939 200.285 11.259 200.285 11.619C200.285 11.759 200.27 11.8524 200.24 11.899C200.21 11.9457 200.153 11.969 200.07 11.969H196.685C196.695 12.289 196.738 12.5674 196.815 12.804C196.895 13.0407 197.005 13.239 197.145 13.399C197.285 13.5557 197.451 13.674 197.645 13.754C197.838 13.8307 198.055 13.869 198.295 13.869C198.518 13.869 198.71 13.844 198.87 13.794C199.033 13.7407 199.173 13.684 199.29 13.624C199.406 13.564 199.503 13.509 199.58 13.459C199.66 13.4057 199.728 13.379 199.785 13.379C199.858 13.379 199.915 13.4074 199.955 13.464L200.205 13.789ZM203.143 12.024C203.323 12.024 203.481 11.999 203.618 11.949C203.755 11.899 203.87 11.829 203.963 11.739C204.056 11.649 204.126 11.5424 204.173 11.419C204.22 11.2924 204.243 11.154 204.243 11.004C204.243 10.694 204.148 10.4474 203.958 10.264C203.771 10.0807 203.5 9.98902 203.143 9.98902C202.783 9.98902 202.508 10.0807 202.318 10.264C202.131 10.4474 202.038 10.694 202.038 11.004C202.038 11.154 202.061 11.2924 202.108 11.419C202.158 11.5424 202.23 11.649 202.323 11.739C202.416 11.829 202.531 11.899 202.668 11.949C202.805 11.999 202.963 12.024 203.143 12.024ZM204.748 14.774C204.748 14.6507 204.713 14.5507 204.643 14.474C204.573 14.3974 204.478 14.3374 204.358 14.294C204.241 14.2507 204.105 14.2207 203.948 14.204C203.791 14.184 203.625 14.169 203.448 14.159C203.275 14.149 203.098 14.139 202.918 14.129C202.738 14.119 202.565 14.1024 202.398 14.079C202.211 14.1657 202.058 14.2757 201.938 14.409C201.821 14.539 201.763 14.6924 201.763 14.869C201.763 14.9824 201.791 15.0874 201.848 15.184C201.908 15.284 201.998 15.369 202.118 15.439C202.238 15.5124 202.388 15.569 202.568 15.609C202.751 15.6524 202.966 15.674 203.213 15.674C203.453 15.674 203.668 15.6524 203.858 15.609C204.048 15.5657 204.208 15.504 204.338 15.424C204.471 15.344 204.573 15.249 204.643 15.139C204.713 15.029 204.748 14.9074 204.748 14.774ZM205.653 9.63402V9.96402C205.653 10.074 205.583 10.144 205.443 10.174L204.868 10.249C204.981 10.469 205.038 10.7124 205.038 10.979C205.038 11.2257 204.99 11.4507 204.893 11.654C204.8 11.854 204.67 12.0257 204.503 12.169C204.336 12.3124 204.136 12.4224 203.903 12.499C203.67 12.5757 203.416 12.614 203.143 12.614C202.906 12.614 202.683 12.5857 202.473 12.529C202.366 12.5957 202.285 12.6674 202.228 12.744C202.171 12.8174 202.143 12.8924 202.143 12.969C202.143 13.089 202.191 13.1807 202.288 13.244C202.388 13.304 202.518 13.3474 202.678 13.374C202.838 13.4007 203.02 13.4174 203.223 13.424C203.43 13.4307 203.64 13.4424 203.853 13.459C204.07 13.4724 204.28 13.4974 204.483 13.534C204.69 13.5707 204.873 13.6307 205.033 13.714C205.193 13.7974 205.321 13.9124 205.418 14.059C205.518 14.2057 205.568 14.3957 205.568 14.629C205.568 14.8457 205.513 15.0557 205.403 15.259C205.296 15.4624 205.141 15.6424 204.938 15.799C204.735 15.959 204.485 16.0857 204.188 16.179C203.895 16.2757 203.563 16.324 203.193 16.324C202.823 16.324 202.5 16.2874 202.223 16.214C201.946 16.1407 201.716 16.0424 201.533 15.919C201.35 15.7957 201.211 15.6524 201.118 15.489C201.028 15.329 200.983 15.1607 200.983 14.984C200.983 14.734 201.061 14.5224 201.218 14.349C201.375 14.1757 201.59 14.0374 201.863 13.934C201.713 13.8674 201.593 13.779 201.503 13.669C201.416 13.5557 201.373 13.404 201.373 13.214C201.373 13.1407 201.386 13.0657 201.413 12.989C201.44 12.909 201.48 12.8307 201.533 12.754C201.59 12.674 201.658 12.599 201.738 12.529C201.818 12.459 201.911 12.3974 202.018 12.344C201.768 12.204 201.573 12.019 201.433 11.789C201.293 11.5557 201.223 11.2857 201.223 10.979C201.223 10.7324 201.27 10.509 201.363 10.309C201.46 10.1057 201.593 9.93402 201.763 9.79402C201.933 9.65069 202.135 9.54069 202.368 9.46402C202.605 9.38736 202.863 9.34902 203.143 9.34902C203.363 9.34902 203.568 9.37402 203.758 9.42402C203.948 9.47069 204.121 9.54069 204.278 9.63402H205.653ZM209.318 12.219C208.908 12.2324 208.558 12.2657 208.268 12.319C207.981 12.369 207.746 12.4357 207.563 12.519C207.383 12.6024 207.251 12.7007 207.168 12.814C207.088 12.9274 207.048 13.054 207.048 13.194C207.048 13.3274 207.07 13.4424 207.113 13.539C207.156 13.6357 207.215 13.7157 207.288 13.779C207.365 13.839 207.453 13.884 207.553 13.914C207.656 13.9407 207.766 13.954 207.883 13.954C208.04 13.954 208.183 13.939 208.313 13.909C208.443 13.8757 208.565 13.829 208.678 13.769C208.795 13.709 208.905 13.6374 209.008 13.554C209.115 13.4707 209.218 13.3757 209.318 13.269V12.219ZM206.443 10.149C206.723 9.87902 207.025 9.67736 207.348 9.54402C207.671 9.41069 208.03 9.34402 208.423 9.34402C208.706 9.34402 208.958 9.39069 209.178 9.48402C209.398 9.57736 209.583 9.70736 209.733 9.87402C209.883 10.0407 209.996 10.2424 210.073 10.479C210.15 10.7157 210.188 10.9757 210.188 11.259V14.499H209.793C209.706 14.499 209.64 14.4857 209.593 14.459C209.546 14.429 209.51 14.3724 209.483 14.289L209.383 13.809C209.25 13.9324 209.12 14.0424 208.993 14.139C208.866 14.2324 208.733 14.3124 208.593 14.379C208.453 14.4424 208.303 14.4907 208.143 14.524C207.986 14.5607 207.811 14.579 207.618 14.579C207.421 14.579 207.236 14.5524 207.063 14.499C206.89 14.4424 206.738 14.359 206.608 14.249C206.481 14.139 206.38 14.0007 206.303 13.834C206.23 13.664 206.193 13.464 206.193 13.234C206.193 13.034 206.248 12.8424 206.358 12.659C206.468 12.4724 206.646 12.3074 206.893 12.164C207.14 12.0207 207.461 11.904 207.858 11.814C208.255 11.7207 208.741 11.6674 209.318 11.654V11.259C209.318 10.8657 209.233 10.569 209.063 10.369C208.893 10.1657 208.645 10.064 208.318 10.064C208.098 10.064 207.913 10.0924 207.763 10.149C207.616 10.2024 207.488 10.264 207.378 10.334C207.271 10.4007 207.178 10.4624 207.098 10.519C207.021 10.5724 206.945 10.599 206.868 10.599C206.808 10.599 206.756 10.584 206.713 10.554C206.67 10.5207 206.633 10.4807 206.603 10.434L206.443 10.149ZM213.031 14.579C212.631 14.579 212.322 14.4674 212.106 14.244C211.892 14.0207 211.786 13.699 211.786 13.279V10.179H211.176C211.122 10.179 211.077 10.164 211.041 10.134C211.004 10.1007 210.986 10.0507 210.986 9.98402V9.62902L211.816 9.52402L212.021 7.95902C212.031 7.90902 212.052 7.86902 212.086 7.83902C212.122 7.80569 212.169 7.78902 212.226 7.78902H212.676V9.53402H214.141V10.179H212.676V13.219C212.676 13.4324 212.727 13.5907 212.831 13.694C212.934 13.7974 213.067 13.849 213.231 13.849C213.324 13.849 213.404 13.8374 213.471 13.814C213.541 13.7874 213.601 13.759 213.651 13.729C213.701 13.699 213.742 13.6724 213.776 13.649C213.812 13.6224 213.844 13.609 213.871 13.609C213.917 13.609 213.959 13.6374 213.996 13.694L214.256 14.119C214.102 14.2624 213.917 14.3757 213.701 14.459C213.484 14.539 213.261 14.579 213.031 14.579ZM218.42 11.414C218.42 11.2074 218.39 11.019 218.33 10.849C218.274 10.6757 218.189 10.5274 218.075 10.404C217.965 10.2774 217.83 10.1807 217.67 10.114C217.51 10.044 217.329 10.009 217.125 10.009C216.699 10.009 216.36 10.134 216.11 10.384C215.864 10.6307 215.71 10.974 215.65 11.414H218.42ZM219.14 13.789C219.03 13.9224 218.899 14.039 218.745 14.139C218.592 14.2357 218.427 14.3157 218.25 14.379C218.077 14.4424 217.897 14.489 217.71 14.519C217.524 14.5524 217.339 14.569 217.155 14.569C216.805 14.569 216.482 14.5107 216.185 14.394C215.892 14.274 215.637 14.1007 215.42 13.874C215.207 13.644 215.04 13.3607 214.92 13.024C214.8 12.6874 214.74 12.3007 214.74 11.864C214.74 11.5107 214.794 11.1807 214.9 10.874C215.01 10.5674 215.167 10.3024 215.37 10.079C215.574 9.85236 215.822 9.67569 216.115 9.54902C216.409 9.41902 216.739 9.35402 217.105 9.35402C217.409 9.35402 217.689 9.40569 217.945 9.50902C218.205 9.60902 218.429 9.75569 218.615 9.94902C218.805 10.139 218.954 10.3757 219.06 10.659C219.167 10.939 219.22 11.259 219.22 11.619C219.22 11.759 219.205 11.8524 219.175 11.899C219.145 11.9457 219.089 11.969 219.005 11.969H215.62C215.63 12.289 215.674 12.5674 215.75 12.804C215.83 13.0407 215.94 13.239 216.08 13.399C216.22 13.5557 216.387 13.674 216.58 13.754C216.774 13.8307 216.99 13.869 217.23 13.869C217.454 13.869 217.645 13.844 217.805 13.794C217.969 13.7407 218.109 13.684 218.225 13.624C218.342 13.564 218.439 13.509 218.515 13.459C218.595 13.4057 218.664 13.379 218.72 13.379C218.794 13.379 218.85 13.4074 218.89 13.464L219.14 13.789ZM223.263 10.269C223.223 10.3424 223.162 10.379 223.078 10.379C223.028 10.379 222.972 10.3607 222.908 10.324C222.845 10.2874 222.767 10.2474 222.673 10.204C222.583 10.1574 222.475 10.1157 222.348 10.079C222.222 10.039 222.072 10.019 221.898 10.019C221.748 10.019 221.613 10.039 221.493 10.079C221.373 10.1157 221.27 10.1674 221.183 10.234C221.1 10.3007 221.035 10.379 220.988 10.469C220.945 10.5557 220.923 10.6507 220.923 10.754C220.923 10.884 220.96 10.9924 221.033 11.079C221.11 11.1657 221.21 11.2407 221.333 11.304C221.457 11.3674 221.597 11.424 221.753 11.474C221.91 11.5207 222.07 11.5724 222.233 11.629C222.4 11.6824 222.562 11.7424 222.718 11.809C222.875 11.8757 223.015 11.959 223.138 12.059C223.262 12.159 223.36 12.2824 223.433 12.429C223.51 12.5724 223.548 12.7457 223.548 12.949C223.548 13.1824 223.507 13.399 223.423 13.599C223.34 13.7957 223.217 13.9674 223.053 14.114C222.89 14.2574 222.69 14.3707 222.453 14.454C222.217 14.5374 221.943 14.579 221.633 14.579C221.28 14.579 220.96 14.5224 220.673 14.409C220.387 14.2924 220.143 14.144 219.943 13.964L220.153 13.624C220.18 13.5807 220.212 13.5474 220.248 13.524C220.285 13.5007 220.332 13.489 220.388 13.489C220.448 13.489 220.512 13.5124 220.578 13.559C220.645 13.6057 220.725 13.6574 220.818 13.714C220.915 13.7707 221.032 13.8224 221.168 13.869C221.305 13.9157 221.475 13.939 221.678 13.939C221.852 13.939 222.003 13.9174 222.133 13.874C222.263 13.8274 222.372 13.7657 222.458 13.689C222.545 13.6124 222.608 13.524 222.648 13.424C222.692 13.324 222.713 13.2174 222.713 13.104C222.713 12.964 222.675 12.849 222.598 12.759C222.525 12.6657 222.427 12.5874 222.303 12.524C222.18 12.4574 222.038 12.4007 221.878 12.354C221.722 12.304 221.56 12.2524 221.393 12.199C221.23 12.1457 221.068 12.0857 220.908 12.019C220.752 11.949 220.612 11.8624 220.488 11.759C220.365 11.6557 220.265 11.529 220.188 11.379C220.115 11.2257 220.078 11.0407 220.078 10.824C220.078 10.6307 220.118 10.4457 220.198 10.269C220.278 10.089 220.395 9.93236 220.548 9.79902C220.702 9.66236 220.89 9.55402 221.113 9.47402C221.337 9.39402 221.592 9.35402 221.878 9.35402C222.212 9.35402 222.51 9.40736 222.773 9.51402C223.04 9.61736 223.27 9.76069 223.463 9.94402L223.263 10.269ZM230.588 11.414C230.588 11.2074 230.558 11.019 230.498 10.849C230.441 10.6757 230.356 10.5274 230.243 10.404C230.133 10.2774 229.998 10.1807 229.838 10.114C229.678 10.044 229.496 10.009 229.293 10.009C228.866 10.009 228.528 10.134 228.278 10.384C228.031 10.6307 227.878 10.974 227.818 11.414H230.588ZM231.308 13.789C231.198 13.9224 231.066 14.039 230.913 14.139C230.76 14.2357 230.595 14.3157 230.418 14.379C230.245 14.4424 230.065 14.489 229.878 14.519C229.691 14.5524 229.506 14.569 229.323 14.569C228.973 14.569 228.65 14.5107 228.353 14.394C228.06 14.274 227.805 14.1007 227.588 13.874C227.375 13.644 227.208 13.3607 227.088 13.024C226.968 12.6874 226.908 12.3007 226.908 11.864C226.908 11.5107 226.961 11.1807 227.068 10.874C227.178 10.5674 227.335 10.3024 227.538 10.079C227.741 9.85236 227.99 9.67569 228.283 9.54902C228.576 9.41902 228.906 9.35402 229.273 9.35402C229.576 9.35402 229.856 9.40569 230.113 9.50902C230.373 9.60902 230.596 9.75569 230.783 9.94902C230.973 10.139 231.121 10.3757 231.228 10.659C231.335 10.939 231.388 11.259 231.388 11.619C231.388 11.759 231.373 11.8524 231.343 11.899C231.313 11.9457 231.256 11.969 231.173 11.969H227.788C227.798 12.289 227.841 12.5674 227.918 12.804C227.998 13.0407 228.108 13.239 228.248 13.399C228.388 13.5557 228.555 13.674 228.748 13.754C228.941 13.8307 229.158 13.869 229.398 13.869C229.621 13.869 229.813 13.844 229.973 13.794C230.136 13.7407 230.276 13.684 230.393 13.624C230.51 13.564 230.606 13.509 230.683 13.459C230.763 13.4057 230.831 13.379 230.888 13.379C230.961 13.379 231.018 13.4074 231.058 13.464L231.308 13.789ZM236.714 9.43402L234.649 14.499H233.849L231.784 9.43402H232.509C232.582 9.43402 232.642 9.45236 232.689 9.48902C232.736 9.52569 232.767 9.56902 232.784 9.61902L234.069 12.879C234.109 13.0024 234.144 13.1224 234.174 13.239C234.204 13.3557 234.232 13.4724 234.259 13.589C234.286 13.4724 234.314 13.3557 234.344 13.239C234.374 13.1224 234.411 13.0024 234.454 12.879L235.754 9.61902C235.774 9.56569 235.807 9.52236 235.854 9.48902C235.901 9.45236 235.956 9.43402 236.019 9.43402H236.714ZM240.783 11.414C240.783 11.2074 240.753 11.019 240.693 10.849C240.637 10.6757 240.552 10.5274 240.438 10.404C240.328 10.2774 240.193 10.1807 240.033 10.114C239.873 10.044 239.692 10.009 239.488 10.009C239.062 10.009 238.723 10.134 238.473 10.384C238.227 10.6307 238.073 10.974 238.013 11.414H240.783ZM241.503 13.789C241.393 13.9224 241.262 14.039 241.108 14.139C240.955 14.2357 240.79 14.3157 240.613 14.379C240.44 14.4424 240.26 14.489 240.073 14.519C239.887 14.5524 239.702 14.569 239.518 14.569C239.168 14.569 238.845 14.5107 238.548 14.394C238.255 14.274 238 14.1007 237.783 13.874C237.57 13.644 237.403 13.3607 237.283 13.024C237.163 12.6874 237.103 12.3007 237.103 11.864C237.103 11.5107 237.157 11.1807 237.263 10.874C237.373 10.5674 237.53 10.3024 237.733 10.079C237.937 9.85236 238.185 9.67569 238.478 9.54902C238.772 9.41902 239.102 9.35402 239.468 9.35402C239.772 9.35402 240.052 9.40569 240.308 9.50902C240.568 9.60902 240.792 9.75569 240.978 9.94902C241.168 10.139 241.317 10.3757 241.423 10.659C241.53 10.939 241.583 11.259 241.583 11.619C241.583 11.759 241.568 11.8524 241.538 11.899C241.508 11.9457 241.452 11.969 241.368 11.969H237.983C237.993 12.289 238.037 12.5674 238.113 12.804C238.193 13.0407 238.303 13.239 238.443 13.399C238.583 13.5557 238.75 13.674 238.943 13.754C239.137 13.8307 239.353 13.869 239.593 13.869C239.817 13.869 240.008 13.844 240.168 13.794C240.332 13.7407 240.472 13.684 240.588 13.624C240.705 13.564 240.802 13.509 240.878 13.459C240.958 13.4057 241.027 13.379 241.083 13.379C241.157 13.379 241.213 13.4074 241.253 13.464L241.503 13.789ZM243.517 10.169C243.627 10.0457 243.743 9.93402 243.867 9.83402C243.99 9.73402 244.12 9.64902 244.257 9.57902C244.397 9.50569 244.543 9.45069 244.697 9.41402C244.853 9.37402 245.022 9.35402 245.202 9.35402C245.478 9.35402 245.722 9.40069 245.932 9.49402C246.145 9.58402 246.322 9.71402 246.462 9.88402C246.605 10.0507 246.713 10.2524 246.787 10.489C246.86 10.7257 246.897 10.9874 246.897 11.274V14.499H246.002V11.274C246.002 10.8907 245.913 10.594 245.737 10.384C245.563 10.1707 245.298 10.064 244.942 10.064C244.678 10.064 244.432 10.1274 244.202 10.254C243.975 10.3807 243.765 10.5524 243.572 10.769V14.499H242.677V9.43402H243.212C243.338 9.43402 243.417 9.49569 243.447 9.61902L243.517 10.169ZM249.739 14.579C249.339 14.579 249.031 14.4674 248.814 14.244C248.601 14.0207 248.494 13.699 248.494 13.279V10.179H247.884C247.831 10.179 247.786 10.164 247.749 10.134C247.713 10.1007 247.694 10.0507 247.694 9.98402V9.62902L248.524 9.52402L248.729 7.95902C248.739 7.90902 248.761 7.86902 248.794 7.83902C248.831 7.80569 248.878 7.78902 248.934 7.78902H249.384V9.53402H250.849V10.179H249.384V13.219C249.384 13.4324 249.436 13.5907 249.539 13.694C249.643 13.7974 249.776 13.849 249.939 13.849C250.033 13.849 250.113 13.8374 250.179 13.814C250.249 13.7874 250.309 13.759 250.359 13.729C250.409 13.699 250.451 13.6724 250.484 13.649C250.521 13.6224 250.553 13.609 250.579 13.609C250.626 13.609 250.668 13.6374 250.704 13.694L250.964 14.119C250.811 14.2624 250.626 14.3757 250.409 14.459C250.193 14.539 249.969 14.579 249.739 14.579ZM254.718 10.269C254.678 10.3424 254.617 10.379 254.533 10.379C254.483 10.379 254.427 10.3607 254.363 10.324C254.3 10.2874 254.222 10.2474 254.128 10.204C254.038 10.1574 253.93 10.1157 253.803 10.079C253.677 10.039 253.527 10.019 253.353 10.019C253.203 10.019 253.068 10.039 252.948 10.079C252.828 10.1157 252.725 10.1674 252.638 10.234C252.555 10.3007 252.49 10.379 252.443 10.469C252.4 10.5557 252.378 10.6507 252.378 10.754C252.378 10.884 252.415 10.9924 252.488 11.079C252.565 11.1657 252.665 11.2407 252.788 11.304C252.912 11.3674 253.052 11.424 253.208 11.474C253.365 11.5207 253.525 11.5724 253.688 11.629C253.855 11.6824 254.017 11.7424 254.173 11.809C254.33 11.8757 254.47 11.959 254.593 12.059C254.717 12.159 254.815 12.2824 254.888 12.429C254.965 12.5724 255.003 12.7457 255.003 12.949C255.003 13.1824 254.962 13.399 254.878 13.599C254.795 13.7957 254.672 13.9674 254.508 14.114C254.345 14.2574 254.145 14.3707 253.908 14.454C253.672 14.5374 253.398 14.579 253.088 14.579C252.735 14.579 252.415 14.5224 252.128 14.409C251.842 14.2924 251.598 14.144 251.398 13.964L251.608 13.624C251.635 13.5807 251.667 13.5474 251.703 13.524C251.74 13.5007 251.787 13.489 251.843 13.489C251.903 13.489 251.967 13.5124 252.033 13.559C252.1 13.6057 252.18 13.6574 252.273 13.714C252.37 13.7707 252.487 13.8224 252.623 13.869C252.76 13.9157 252.93 13.939 253.133 13.939C253.307 13.939 253.458 13.9174 253.588 13.874C253.718 13.8274 253.827 13.7657 253.913 13.689C254 13.6124 254.063 13.524 254.103 13.424C254.147 13.324 254.168 13.2174 254.168 13.104C254.168 12.964 254.13 12.849 254.053 12.759C253.98 12.6657 253.882 12.5874 253.758 12.524C253.635 12.4574 253.493 12.4007 253.333 12.354C253.177 12.304 253.015 12.2524 252.848 12.199C252.685 12.1457 252.523 12.0857 252.363 12.019C252.207 11.949 252.067 11.8624 251.943 11.759C251.82 11.6557 251.72 11.529 251.643 11.379C251.57 11.2257 251.533 11.0407 251.533 10.824C251.533 10.6307 251.573 10.4457 251.653 10.269C251.733 10.089 251.85 9.93236 252.003 9.79902C252.157 9.66236 252.345 9.55402 252.568 9.47402C252.792 9.39402 253.047 9.35402 253.333 9.35402C253.667 9.35402 253.965 9.40736 254.228 9.51402C254.495 9.61736 254.725 9.76069 254.918 9.94402L254.718 10.269Z"
        fill={isLightTheme ? '#525266' : '#BEBECC'}
      />
      <path
        d="M103.907 9.35598C104.277 9.35598 104.611 9.41764 104.907 9.54098C105.204 9.66431 105.457 9.83931 105.667 10.066C105.877 10.2926 106.037 10.5676 106.147 10.891C106.261 11.211 106.317 11.5693 106.317 11.966C106.317 12.366 106.261 12.726 106.147 13.046C106.037 13.366 105.877 13.6393 105.667 13.866C105.457 14.0926 105.204 14.2676 104.907 14.391C104.611 14.511 104.277 14.571 103.907 14.571C103.534 14.571 103.197 14.511 102.897 14.391C102.601 14.2676 102.347 14.0926 102.137 13.866C101.927 13.6393 101.766 13.366 101.652 13.046C101.542 12.726 101.487 12.366 101.487 11.966C101.487 11.5693 101.542 11.211 101.652 10.891C101.766 10.5676 101.927 10.2926 102.137 10.066C102.347 9.83931 102.601 9.66431 102.897 9.54098C103.197 9.41764 103.534 9.35598 103.907 9.35598ZM103.907 13.876C104.407 13.876 104.781 13.7093 105.027 13.376C105.274 13.0393 105.397 12.571 105.397 11.971C105.397 11.3676 105.274 10.8976 105.027 10.561C104.781 10.2243 104.407 10.056 103.907 10.056C103.654 10.056 103.432 10.0993 103.242 10.186C103.056 10.2726 102.899 10.3976 102.772 10.561C102.649 10.7243 102.556 10.926 102.492 11.166C102.432 11.4026 102.402 11.671 102.402 11.971C102.402 12.571 102.526 13.0393 102.772 13.376C103.022 13.7093 103.401 13.876 103.907 13.876ZM108.286 10.171C108.396 10.0476 108.513 9.93598 108.636 9.83598C108.76 9.73598 108.89 9.65098 109.026 9.58098C109.166 9.50764 109.313 9.45264 109.466 9.41598C109.623 9.37598 109.791 9.35598 109.971 9.35598C110.248 9.35598 110.491 9.40264 110.701 9.49598C110.915 9.58598 111.091 9.71598 111.231 9.88598C111.375 10.0526 111.483 10.2543 111.556 10.491C111.63 10.7276 111.666 10.9893 111.666 11.276V14.501H110.771V11.276C110.771 10.8926 110.683 10.596 110.506 10.386C110.333 10.1726 110.068 10.066 109.711 10.066C109.448 10.066 109.201 10.1293 108.971 10.256C108.745 10.3826 108.535 10.5543 108.341 10.771V14.501H107.446V9.43598H107.981C108.108 9.43598 108.186 9.49764 108.216 9.62098L108.286 10.171ZM113.942 7.13598V14.501H113.052V7.13598H113.942ZM119.756 9.43598L116.931 15.996C116.901 16.0626 116.862 16.116 116.816 16.156C116.772 16.196 116.704 16.216 116.611 16.216H115.951L116.876 14.206L114.786 9.43598H115.556C115.632 9.43598 115.692 9.45598 115.736 9.49598C115.782 9.53264 115.814 9.57431 115.831 9.62098L117.186 12.811C117.239 12.951 117.284 13.0976 117.321 13.251C117.367 13.0943 117.417 12.946 117.471 12.806L118.786 9.62098C118.806 9.56764 118.839 9.52431 118.886 9.49098C118.936 9.45431 118.991 9.43598 119.051 9.43598H119.756ZM125.806 10.271C125.766 10.3443 125.705 10.381 125.621 10.381C125.571 10.381 125.515 10.3626 125.451 10.326C125.388 10.2893 125.31 10.2493 125.216 10.206C125.126 10.1593 125.018 10.1176 124.891 10.081C124.765 10.041 124.615 10.021 124.441 10.021C124.291 10.021 124.156 10.041 124.036 10.081C123.916 10.1176 123.813 10.1693 123.726 10.236C123.643 10.3026 123.578 10.381 123.531 10.471C123.488 10.5576 123.466 10.6526 123.466 10.756C123.466 10.886 123.503 10.9943 123.576 11.081C123.653 11.1676 123.753 11.2426 123.876 11.306C124 11.3693 124.14 11.426 124.296 11.476C124.453 11.5226 124.613 11.5743 124.776 11.631C124.943 11.6843 125.105 11.7443 125.261 11.811C125.418 11.8776 125.558 11.961 125.681 12.061C125.805 12.161 125.903 12.2843 125.976 12.431C126.053 12.5743 126.091 12.7476 126.091 12.951C126.091 13.1843 126.05 13.401 125.966 13.601C125.883 13.7976 125.76 13.9693 125.596 14.116C125.433 14.2593 125.233 14.3726 124.996 14.456C124.76 14.5393 124.486 14.581 124.176 14.581C123.823 14.581 123.503 14.5243 123.216 14.411C122.93 14.2943 122.686 14.146 122.486 13.966L122.696 13.626C122.723 13.5826 122.755 13.5493 122.791 13.526C122.828 13.5026 122.875 13.491 122.931 13.491C122.991 13.491 123.055 13.5143 123.121 13.561C123.188 13.6076 123.268 13.6593 123.361 13.716C123.458 13.7726 123.575 13.8243 123.711 13.871C123.848 13.9176 124.018 13.941 124.221 13.941C124.395 13.941 124.546 13.9193 124.676 13.876C124.806 13.8293 124.915 13.7676 125.001 13.691C125.088 13.6143 125.151 13.526 125.191 13.426C125.235 13.326 125.256 13.2193 125.256 13.106C125.256 12.966 125.218 12.851 125.141 12.761C125.068 12.6676 124.97 12.5893 124.846 12.526C124.723 12.4593 124.581 12.4026 124.421 12.356C124.265 12.306 124.103 12.2543 123.936 12.201C123.773 12.1476 123.611 12.0876 123.451 12.021C123.295 11.951 123.155 11.8643 123.031 11.761C122.908 11.6576 122.808 11.531 122.731 11.381C122.658 11.2276 122.621 11.0426 122.621 10.826C122.621 10.6326 122.661 10.4476 122.741 10.271C122.821 10.091 122.938 9.93431 123.091 9.80098C123.245 9.66431 123.433 9.55598 123.656 9.47598C123.88 9.39598 124.135 9.35598 124.421 9.35598C124.755 9.35598 125.053 9.40931 125.316 9.51598C125.583 9.61931 125.813 9.76264 126.006 9.94598L125.806 10.271ZM130.573 11.416C130.573 11.2093 130.543 11.021 130.483 10.851C130.426 10.6776 130.341 10.5293 130.228 10.406C130.118 10.2793 129.983 10.1826 129.823 10.116C129.663 10.046 129.481 10.011 129.278 10.011C128.851 10.011 128.513 10.136 128.263 10.386C128.016 10.6326 127.863 10.976 127.803 11.416H130.573ZM131.293 13.791C131.183 13.9243 131.051 14.041 130.898 14.141C130.744 14.2376 130.579 14.3176 130.403 14.381C130.229 14.4443 130.049 14.491 129.863 14.521C129.676 14.5543 129.491 14.571 129.308 14.571C128.958 14.571 128.634 14.5126 128.338 14.396C128.044 14.276 127.789 14.1026 127.573 13.876C127.359 13.646 127.193 13.3626 127.073 13.026C126.953 12.6893 126.893 12.3026 126.893 11.866C126.893 11.5126 126.946 11.1826 127.053 10.876C127.163 10.5693 127.319 10.3043 127.523 10.081C127.726 9.85431 127.974 9.67764 128.268 9.55098C128.561 9.42098 128.891 9.35598 129.258 9.35598C129.561 9.35598 129.841 9.40764 130.098 9.51098C130.358 9.61098 130.581 9.75764 130.768 9.95098C130.958 10.141 131.106 10.3776 131.213 10.661C131.319 10.941 131.373 11.261 131.373 11.621C131.373 11.761 131.358 11.8543 131.328 11.901C131.298 11.9476 131.241 11.971 131.158 11.971H127.773C127.783 12.291 127.826 12.5693 127.903 12.806C127.983 13.0426 128.093 13.241 128.233 13.401C128.373 13.5576 128.539 13.676 128.733 13.756C128.926 13.8326 129.143 13.871 129.383 13.871C129.606 13.871 129.798 13.846 129.958 13.796C130.121 13.7426 130.261 13.686 130.378 13.626C130.494 13.566 130.591 13.511 130.668 13.461C130.748 13.4076 130.816 13.381 130.873 13.381C130.946 13.381 131.003 13.4093 131.043 13.466L131.293 13.791ZM133.306 10.171C133.416 10.0476 133.532 9.93598 133.656 9.83598C133.779 9.73598 133.909 9.65098 134.046 9.58098C134.186 9.50764 134.332 9.45264 134.486 9.41598C134.642 9.37598 134.811 9.35598 134.991 9.35598C135.267 9.35598 135.511 9.40264 135.721 9.49598C135.934 9.58598 136.111 9.71598 136.251 9.88598C136.394 10.0526 136.502 10.2543 136.576 10.491C136.649 10.7276 136.686 10.9893 136.686 11.276V14.501H135.791V11.276C135.791 10.8926 135.702 10.596 135.526 10.386C135.352 10.1726 135.087 10.066 134.731 10.066C134.467 10.066 134.221 10.1293 133.991 10.256C133.764 10.3826 133.554 10.5543 133.361 10.771V14.501H132.466V9.43598H133.001C133.127 9.43598 133.206 9.49764 133.236 9.62098L133.306 10.171ZM141.342 10.641C141.175 10.4176 140.995 10.2626 140.802 10.176C140.609 10.086 140.392 10.041 140.152 10.041C139.682 10.041 139.32 10.2093 139.067 10.546C138.814 10.8826 138.687 11.3626 138.687 11.986C138.687 12.316 138.715 12.5993 138.772 12.836C138.829 13.0693 138.912 13.2626 139.022 13.416C139.132 13.566 139.267 13.676 139.427 13.746C139.587 13.816 139.769 13.851 139.972 13.851C140.265 13.851 140.52 13.7843 140.737 13.651C140.957 13.5176 141.159 13.3293 141.342 13.086V10.641ZM142.232 7.13598V14.501H141.702C141.575 14.501 141.495 14.4393 141.462 14.316L141.382 13.701C141.165 13.961 140.919 14.171 140.642 14.331C140.365 14.491 140.045 14.571 139.682 14.571C139.392 14.571 139.129 14.516 138.892 14.406C138.655 14.2926 138.454 14.1276 138.287 13.911C138.12 13.6943 137.992 13.4243 137.902 13.101C137.812 12.7776 137.767 12.406 137.767 11.986C137.767 11.6126 137.817 11.266 137.917 10.946C138.017 10.6226 138.16 10.3426 138.347 10.106C138.534 9.86931 138.762 9.68431 139.032 9.55098C139.305 9.41431 139.612 9.34598 139.952 9.34598C140.262 9.34598 140.527 9.39931 140.747 9.50598C140.97 9.60931 141.169 9.75431 141.342 9.94098V7.13598H142.232Z"
        fill="#828299"
      />
      <defs>
        <clipPath id="clip0_762_2127">
          <rect width="16" height="16" fill="white" transform="translate(0 20.5381)" />
        </clipPath>
        <clipPath id="clip1_762_2127">
          <rect width="16" height="16" fill="white" transform="translate(76 20.5381)" />
        </clipPath>
        <clipPath id="clip2_762_2127">
          <rect width="16" height="16" fill="white" transform="translate(152 20.5381)" />
        </clipPath>
        <clipPath id="clip3_762_2127">
          <rect width="16" height="16" fill="white" transform="translate(264 20.5381)" />
        </clipPath>
      </defs>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMantineTheme } from '@mantine/core';
import { useMemo } from 'react';
export const BackOffTooltipIcon = () => {
const { colorScheme } = useMantineTheme();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/digest/icons/RegularInfo.tsx
Tamaño: 72296 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useMantineTheme } from '@mantine/core';
import { useMemo } from 'react';

export const RegularInfo = () => {
  const { colorScheme } = useMantineTheme();
  const isLightTheme = useMemo(() => colorScheme === 'light', [colorScheme]);

  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="280" height="57" viewBox="0 0 280 57" fill="none">
      <g clipPath="url(#clip0_571_18377)">
        <path
          d="M15.566 20.679C15.8816 20.8978 16.0472 21.2759 15.9878 21.654L13.9878 34.654C13.941 34.9572 13.7566 35.2228 13.4878 35.3728C13.2191 35.5228 12.8972 35.5415 12.6128 35.4228L8.87533 33.8697L6.7347 36.1853C6.45658 36.4884 6.01908 36.5884 5.6347 36.4384C5.25033 36.2884 5.00033 35.9165 5.00033 35.504V32.8915C5.00033 32.7665 5.0472 32.6478 5.13158 32.5572L10.3691 26.8415C10.5503 26.6447 10.5441 26.3415 10.3566 26.154C10.1691 25.9665 9.86595 25.954 9.66908 26.1322L3.31283 31.779L0.553451 30.3978C0.222201 30.2322 0.00970049 29.9009 0.000325486 29.5322C-0.00904951 29.1634 0.184701 28.8197 0.503451 28.6353L14.5035 20.6353C14.8378 20.4447 15.2503 20.4634 15.566 20.679Z"
          fill={isLightTheme ? '#BEBECC' : '#525266'}
        />
      </g>
      <rect
        x="20.25"
        y="28.2556"
        width="75.5"
        height="0.5"
        rx="0.25"
        stroke={isLightTheme ? '#BEBECC' : '#525266'}
        strokeWidth="0.5"
        strokeDasharray="2 2"
      />
      <g clipPath="url(#clip1_571_18377)">
        <path
          d="M107.999 20.5056C107.446 20.5056 106.999 20.9525 106.999 21.5056V22.1056C104.718 22.5681 102.999 24.5869 102.999 27.0056V27.5931C102.999 29.0619 102.459 30.4806 101.484 31.5806L101.253 31.84C100.99 32.1337 100.928 32.5556 101.087 32.915C101.246 33.2744 101.606 33.5056 101.999 33.5056H113.999C114.393 33.5056 114.749 33.2744 114.912 32.915C115.074 32.5556 115.009 32.1337 114.746 31.84L114.515 31.5806C113.54 30.4806 112.999 29.065 112.999 27.5931V27.0056C112.999 24.5869 111.281 22.5681 108.999 22.1056V21.5056C108.999 20.9525 108.553 20.5056 107.999 20.5056ZM109.415 35.9212C109.79 35.5462 109.999 35.0369 109.999 34.5056H107.999H105.999C105.999 35.0369 106.209 35.5462 106.584 35.9212C106.959 36.2962 107.468 36.5056 107.999 36.5056C108.531 36.5056 109.04 36.2962 109.415 35.9212Z"
          fill={isLightTheme ? '#525266' : '#BEBECC'}
        />
      </g>
      <rect x="120" y="26.5056" width="140" height="4" rx="2" fill={isLightTheme ? '#525266' : '#BEBECC'} />
      <g clipPath="url(#clip2_571_18377)">
        <path
          d="M279.566 20.679C279.882 20.8978 280.047 21.2759 279.988 21.654L277.988 34.654C277.941 34.9572 277.757 35.2228 277.488 35.3728C277.219 35.5228 276.897 35.5415 276.613 35.4228L272.875 33.8697L270.735 36.1853C270.457 36.4884 270.019 36.5884 269.635 36.4384C269.25 36.2884 269 35.9165 269 35.504V32.8915C269 32.7665 269.047 32.6478 269.132 32.5572L274.369 26.8415C274.55 26.6447 274.544 26.3415 274.357 26.154C274.169 25.9665 273.866 25.954 273.669 26.1322L267.313 31.779L264.553 30.3978C264.222 30.2322 264.01 29.9009 264 29.5322C263.991 29.1634 264.185 28.8197 264.503 28.6353L278.503 20.6353C278.838 20.4447 279.25 20.4634 279.566 20.679Z"
          fill={isLightTheme ? '#525266' : '#BEBECC'}
        />
      </g>
      <path
        d="M92.175 49.5789V50.5039H88.175V49.5789H89.64V45.3639C89.64 45.1972 89.645 45.0256 89.655 44.8489L88.615 45.7189C88.555 45.7656 88.495 45.7956 88.435 45.8089C88.3783 45.8189 88.3233 45.8189 88.27 45.8089C88.22 45.7989 88.175 45.7822 88.135 45.7589C88.095 45.7322 88.065 45.7039 88.045 45.6739L87.655 45.1389L89.86 43.2639H90.875V49.5789H92.175ZM96.4558 46.2739C96.4158 46.3472 96.3541 46.3839 96.2708 46.3839C96.2208 46.3839 96.1641 46.3656 96.1008 46.3289C96.0374 46.2922 95.9591 46.2522 95.8658 46.2089C95.7758 46.1622 95.6674 46.1206 95.5408 46.0839C95.4141 46.0439 95.2641 46.0239 95.0908 46.0239C94.9408 46.0239 94.8058 46.0439 94.6858 46.0839C94.5658 46.1206 94.4624 46.1722 94.3758 46.2389C94.2924 46.3056 94.2274 46.3839 94.1808 46.4739C94.1374 46.5606 94.1158 46.6556 94.1158 46.7589C94.1158 46.8889 94.1524 46.9972 94.2258 47.0839C94.3024 47.1706 94.4024 47.2456 94.5258 47.3089C94.6491 47.3722 94.7891 47.4289 94.9458 47.4789C95.1024 47.5256 95.2624 47.5772 95.4258 47.6339C95.5924 47.6872 95.7541 47.7472 95.9108 47.8139C96.0674 47.8806 96.2074 47.9639 96.3308 48.0639C96.4541 48.1639 96.5524 48.2872 96.6258 48.4339C96.7024 48.5772 96.7408 48.7506 96.7408 48.9539C96.7408 49.1872 96.6991 49.4039 96.6158 49.6039C96.5324 49.8006 96.4091 49.9722 96.2458 50.1189C96.0824 50.2622 95.8824 50.3756 95.6458 50.4589C95.4091 50.5422 95.1358 50.5839 94.8258 50.5839C94.4724 50.5839 94.1524 50.5272 93.8658 50.4139C93.5791 50.2972 93.3358 50.1489 93.1358 49.9689L93.3458 49.6289C93.3724 49.5856 93.4041 49.5522 93.4408 49.5289C93.4774 49.5056 93.5241 49.4939 93.5808 49.4939C93.6408 49.4939 93.7041 49.5172 93.7708 49.5639C93.8374 49.6106 93.9174 49.6622 94.0108 49.7189C94.1074 49.7756 94.2241 49.8272 94.3608 49.8739C94.4974 49.9206 94.6674 49.9439 94.8708 49.9439C95.0441 49.9439 95.1958 49.9222 95.3258 49.8789C95.4558 49.8322 95.5641 49.7706 95.6508 49.6939C95.7374 49.6172 95.8008 49.5289 95.8408 49.4289C95.8841 49.3289 95.9058 49.2222 95.9058 49.1089C95.9058 48.9689 95.8674 48.8539 95.7908 48.7639C95.7174 48.6706 95.6191 48.5922 95.4958 48.5289C95.3724 48.4622 95.2308 48.4056 95.0708 48.3589C94.9141 48.3089 94.7524 48.2572 94.5858 48.2039C94.4224 48.1506 94.2608 48.0906 94.1008 48.0239C93.9441 47.9539 93.8041 47.8672 93.6808 47.7639C93.5574 47.6606 93.4574 47.5339 93.3808 47.3839C93.3074 47.2306 93.2708 47.0456 93.2708 46.8289C93.2708 46.6356 93.3108 46.4506 93.3908 46.2739C93.4708 46.0939 93.5874 45.9372 93.7408 45.8039C93.8941 45.6672 94.0824 45.5589 94.3058 45.4789C94.5291 45.3989 94.7841 45.3589 95.0708 45.3589C95.4041 45.3589 95.7024 45.4122 95.9658 45.5189C96.2324 45.6222 96.4624 45.7656 96.6558 45.9489L96.4558 46.2739ZM99.387 50.5839C98.987 50.5839 98.6786 50.4722 98.462 50.2489C98.2486 50.0256 98.142 49.7039 98.142 49.2839V46.1839H97.532C97.4786 46.1839 97.4336 46.1689 97.397 46.1389C97.3603 46.1056 97.342 46.0556 97.342 45.9889V45.6339L98.172 45.5289L98.377 43.9639C98.387 43.9139 98.4086 43.8739 98.442 43.8439C98.4786 43.8106 98.5253 43.7939 98.582 43.7939H99.032V45.5389H100.497V46.1839H99.032V49.2239C99.032 49.4372 99.0836 49.5956 99.187 49.6989C99.2903 49.8022 99.4236 49.8539 99.587 49.8539C99.6803 49.8539 99.7603 49.8422 99.827 49.8189C99.897 49.7922 99.957 49.7639 100.007 49.7339C100.057 49.7039 100.099 49.6772 100.132 49.6539C100.169 49.6272 100.2 49.6139 100.227 49.6139C100.274 49.6139 100.315 49.6422 100.352 49.6989L100.612 50.1239C100.459 50.2672 100.274 50.3806 100.057 50.4639C99.8403 50.5439 99.617 50.5839 99.387 50.5839ZM107.365 47.4189C107.365 47.2122 107.335 47.0239 107.275 46.8539C107.218 46.6806 107.133 46.5322 107.02 46.4089C106.91 46.2822 106.775 46.1856 106.615 46.1189C106.455 46.0489 106.273 46.0139 106.07 46.0139C105.643 46.0139 105.305 46.1389 105.055 46.3889C104.808 46.6356 104.655 46.9789 104.595 47.4189H107.365ZM108.085 49.7939C107.975 49.9272 107.843 50.0439 107.69 50.1439C107.536 50.2406 107.371 50.3206 107.195 50.3839C107.021 50.4472 106.841 50.4939 106.655 50.5239C106.468 50.5572 106.283 50.5739 106.1 50.5739C105.75 50.5739 105.426 50.5156 105.13 50.3989C104.836 50.2789 104.581 50.1056 104.365 49.8789C104.151 49.6489 103.985 49.3656 103.865 49.0289C103.745 48.6922 103.685 48.3056 103.685 47.8689C103.685 47.5156 103.738 47.1856 103.845 46.8789C103.955 46.5722 104.111 46.3072 104.315 46.0839C104.518 45.8572 104.766 45.6806 105.06 45.5539C105.353 45.4239 105.683 45.3589 106.05 45.3589C106.353 45.3589 106.633 45.4106 106.89 45.5139C107.15 45.6139 107.373 45.7606 107.56 45.9539C107.75 46.1439 107.898 46.3806 108.005 46.6639C108.111 46.9439 108.165 47.2639 108.165 47.6239C108.165 47.7639 108.15 47.8572 108.12 47.9039C108.09 47.9506 108.033 47.9739 107.95 47.9739H104.565C104.575 48.2939 104.618 48.5722 104.695 48.8089C104.775 49.0456 104.885 49.2439 105.025 49.4039C105.165 49.5606 105.331 49.6789 105.525 49.7589C105.718 49.8356 105.935 49.8739 106.175 49.8739C106.398 49.8739 106.59 49.8489 106.75 49.7989C106.913 49.7456 107.053 49.6889 107.17 49.6289C107.286 49.5689 107.383 49.5139 107.46 49.4639C107.54 49.4106 107.608 49.3839 107.665 49.3839C107.738 49.3839 107.795 49.4122 107.835 49.4689L108.085 49.7939ZM113.49 45.4389L111.425 50.5039H110.625L108.56 45.4389H109.285C109.359 45.4389 109.419 45.4572 109.465 45.4939C109.512 45.5306 109.544 45.5739 109.56 45.6239L110.845 48.8839C110.885 49.0072 110.92 49.1272 110.95 49.2439C110.98 49.3606 111.009 49.4772 111.035 49.5939C111.062 49.4772 111.09 49.3606 111.12 49.2439C111.15 49.1272 111.187 49.0072 111.23 48.8839L112.53 45.6239C112.55 45.5706 112.584 45.5272 112.63 45.4939C112.677 45.4572 112.732 45.4389 112.795 45.4389H113.49ZM117.56 47.4189C117.56 47.2122 117.53 47.0239 117.47 46.8539C117.413 46.6806 117.328 46.5322 117.215 46.4089C117.105 46.2822 116.97 46.1856 116.81 46.1189C116.65 46.0489 116.468 46.0139 116.265 46.0139C115.838 46.0139 115.5 46.1389 115.25 46.3889C115.003 46.6356 114.85 46.9789 114.79 47.4189H117.56ZM118.28 49.7939C118.17 49.9272 118.038 50.0439 117.885 50.1439C117.732 50.2406 117.567 50.3206 117.39 50.3839C117.217 50.4472 117.037 50.4939 116.85 50.5239C116.663 50.5572 116.478 50.5739 116.295 50.5739C115.945 50.5739 115.622 50.5156 115.325 50.3989C115.032 50.2789 114.777 50.1056 114.56 49.8789C114.347 49.6489 114.18 49.3656 114.06 49.0289C113.94 48.6922 113.88 48.3056 113.88 47.8689C113.88 47.5156 113.933 47.1856 114.04 46.8789C114.15 46.5722 114.307 46.3072 114.51 46.0839C114.713 45.8572 114.962 45.6806 115.255 45.5539C115.548 45.4239 115.878 45.3589 116.245 45.3589C116.548 45.3589 116.828 45.4106 117.085 45.5139C117.345 45.6139 117.568 45.7606 117.755 45.9539C117.945 46.1439 118.093 46.3806 118.2 46.6639C118.307 46.9439 118.36 47.2639 118.36 47.6239C118.36 47.7639 118.345 47.8572 118.315 47.9039C118.285 47.9506 118.228 47.9739 118.145 47.9739H114.76C114.77 48.2939 114.813 48.5722 114.89 48.8089C114.97 49.0456 115.08 49.2439 115.22 49.4039C115.36 49.5606 115.527 49.6789 115.72 49.7589C115.913 49.8356 116.13 49.8739 116.37 49.8739C116.593 49.8739 116.785 49.8489 116.945 49.7989C117.108 49.7456 117.248 49.6889 117.365 49.6289C117.482 49.5689 117.578 49.5139 117.655 49.4639C117.735 49.4106 117.803 49.3839 117.86 49.3839C117.933 49.3839 117.99 49.4122 118.03 49.4689L118.28 49.7939ZM120.293 46.1739C120.403 46.0506 120.52 45.9389 120.643 45.8389C120.766 45.7389 120.896 45.6539 121.033 45.5839C121.173 45.5106 121.32 45.4556 121.473 45.4189C121.63 45.3789 121.798 45.3589 121.978 45.3589C122.255 45.3589 122.498 45.4056 122.708 45.4989C122.921 45.5889 123.098 45.7189 123.238 45.8889C123.381 46.0556 123.49 46.2572 123.563 46.4939C123.636 46.7306 123.673 46.9922 123.673 47.2789V50.5039H122.778V47.2789C122.778 46.8956 122.69 46.5989 122.513 46.3889C122.34 46.1756 122.075 46.0689 121.718 46.0689C121.455 46.0689 121.208 46.1322 120.978 46.2589C120.751 46.3856 120.541 46.5572 120.348 46.7739V50.5039H119.453V45.4389H119.988C120.115 45.4389 120.193 45.5006 120.223 45.6239L120.293 46.1739ZM126.516 50.5839C126.116 50.5839 125.808 50.4722 125.591 50.2489C125.378 50.0256 125.271 49.7039 125.271 49.2839V46.1839H124.661C124.608 46.1839 124.563 46.1689 124.526 46.1389C124.489 46.1056 124.471 46.0556 124.471 45.9889V45.6339L125.301 45.5289L125.506 43.9639C125.516 43.9139 125.538 43.8739 125.571 43.8439C125.608 43.8106 125.654 43.7939 125.711 43.7939H126.161V45.5389H127.626V46.1839H126.161V49.2239C126.161 49.4372 126.213 49.5956 126.316 49.6989C126.419 49.8022 126.553 49.8539 126.716 49.8539C126.809 49.8539 126.889 49.8422 126.956 49.8189C127.026 49.7922 127.086 49.7639 127.136 49.7339C127.186 49.7039 127.228 49.6772 127.261 49.6539C127.298 49.6272 127.329 49.6139 127.356 49.6139C127.403 49.6139 127.444 49.6422 127.481 49.6989L127.741 50.1239C127.588 50.2672 127.403 50.3806 127.186 50.4639C126.969 50.5439 126.746 50.5839 126.516 50.5839Z"
        fill={isLightTheme ? '#525266' : '#BEBECC'}
      />
      <path
        d="M233.357 44.4606C233.327 44.5106 233.294 44.5489 233.257 44.5756C233.224 44.5989 233.182 44.6106 233.132 44.6106C233.076 44.6106 233.009 44.5823 232.932 44.5256C232.856 44.4689 232.759 44.4073 232.642 44.3406C232.529 44.2706 232.391 44.2073 232.227 44.1506C232.067 44.0939 231.872 44.0656 231.642 44.0656C231.426 44.0656 231.234 44.0956 231.067 44.1556C230.904 44.2123 230.766 44.2906 230.652 44.3906C230.542 44.4906 230.459 44.6089 230.402 44.7456C230.346 44.8789 230.317 45.0239 230.317 45.1806C230.317 45.3806 230.366 45.5473 230.462 45.6806C230.562 45.8106 230.692 45.9223 230.852 46.0156C231.016 46.1089 231.199 46.1906 231.402 46.2606C231.609 46.3273 231.819 46.3973 232.032 46.4706C232.249 46.5439 232.459 46.6273 232.662 46.7206C232.869 46.8106 233.052 46.9256 233.212 47.0656C233.376 47.2056 233.506 47.3773 233.602 47.5806C233.702 47.7839 233.752 48.0339 233.752 48.3306C233.752 48.6439 233.699 48.9389 233.592 49.2156C233.486 49.4889 233.329 49.7273 233.122 49.9306C232.919 50.1339 232.667 50.2939 232.367 50.4106C232.071 50.5273 231.732 50.5856 231.352 50.5856C230.886 50.5856 230.462 50.5023 230.082 50.3356C229.702 50.1656 229.377 49.9373 229.107 49.6506L229.387 49.1906C229.414 49.1539 229.446 49.1239 229.482 49.1006C229.522 49.0739 229.566 49.0606 229.612 49.0606C229.656 49.0606 229.704 49.0789 229.757 49.1156C229.814 49.1489 229.877 49.1923 229.947 49.2456C230.017 49.2989 230.097 49.3573 230.187 49.4206C230.277 49.4839 230.379 49.5423 230.492 49.5956C230.609 49.6489 230.741 49.6939 230.887 49.7306C231.034 49.7639 231.199 49.7806 231.382 49.7806C231.612 49.7806 231.817 49.7489 231.997 49.6856C232.177 49.6223 232.329 49.5339 232.452 49.4206C232.579 49.3039 232.676 49.1656 232.742 49.0056C232.809 48.8456 232.842 48.6673 232.842 48.4706C232.842 48.2539 232.792 48.0773 232.692 47.9406C232.596 47.8006 232.467 47.6839 232.307 47.5906C232.147 47.4973 231.964 47.4189 231.757 47.3556C231.551 47.2889 231.341 47.2223 231.127 47.1556C230.914 47.0856 230.704 47.0056 230.497 46.9156C230.291 46.8256 230.107 46.7089 229.947 46.5656C229.787 46.4223 229.657 46.2439 229.557 46.0306C229.461 45.8139 229.412 45.5473 229.412 45.2306C229.412 44.9773 229.461 44.7323 229.557 44.4956C229.657 44.2589 229.801 44.0489 229.987 43.8656C230.177 43.6823 230.409 43.5356 230.682 43.4256C230.959 43.3156 231.276 43.2606 231.632 43.2606C232.032 43.2606 232.396 43.3239 232.722 43.4506C233.052 43.5773 233.342 43.7606 233.592 44.0006L233.357 44.4606ZM238.273 47.4206C238.273 47.2139 238.243 47.0256 238.183 46.8556C238.126 46.6823 238.041 46.5339 237.928 46.4106C237.818 46.2839 237.683 46.1873 237.523 46.1206C237.363 46.0506 237.181 46.0156 236.978 46.0156C236.551 46.0156 236.213 46.1406 235.963 46.3906C235.716 46.6373 235.563 46.9806 235.503 47.4206H238.273ZM238.993 49.7956C238.883 49.9289 238.751 50.0456 238.598 50.1456C238.444 50.2423 238.279 50.3223 238.103 50.3856C237.929 50.4489 237.749 50.4956 237.563 50.5256C237.376 50.5589 237.191 50.5756 237.008 50.5756C236.658 50.5756 236.334 50.5173 236.038 50.4006C235.744 50.2806 235.489 50.1073 235.273 49.8806C235.059 49.6506 234.893 49.3673 234.773 49.0306C234.653 48.6939 234.593 48.3073 234.593 47.8706C234.593 47.5173 234.646 47.1873 234.753 46.8806C234.863 46.5739 235.019 46.3089 235.223 46.0856C235.426 45.8589 235.674 45.6823 235.968 45.5556C236.261 45.4256 236.591 45.3606 236.958 45.3606C237.261 45.3606 237.541 45.4123 237.798 45.5156C238.058 45.6156 238.281 45.7623 238.468 45.9556C238.658 46.1456 238.806 46.3823 238.913 46.6656C239.019 46.9456 239.073 47.2656 239.073 47.6256C239.073 47.7656 239.058 47.8589 239.028 47.9056C238.998 47.9523 238.941 47.9756 238.858 47.9756H235.473C235.483 48.2956 235.526 48.5739 235.603 48.8106C235.683 49.0473 235.793 49.2456 235.933 49.4056C236.073 49.5623 236.239 49.6806 236.433 49.7606C236.626 49.8373 236.843 49.8756 237.083 49.8756C237.306 49.8756 237.498 49.8506 237.658 49.8006C237.821 49.7473 237.961 49.6906 238.078 49.6306C238.194 49.5706 238.291 49.5156 238.368 49.4656C238.448 49.4123 238.516 49.3856 238.573 49.3856C238.646 49.3856 238.703 49.4139 238.743 49.4706L238.993 49.7956ZM241.006 46.1756C241.116 46.0523 241.233 45.9406 241.356 45.8406C241.479 45.7406 241.609 45.6556 241.746 45.5856C241.886 45.5123 242.033 45.4573 242.186 45.4206C242.343 45.3806 242.511 45.3606 242.691 45.3606C242.968 45.3606 243.211 45.4073 243.421 45.5006C243.634 45.5906 243.811 45.7206 243.951 45.8906C244.094 46.0573 244.203 46.2589 244.276 46.4956C244.349 46.7323 244.386 46.9939 244.386 47.2806V50.5056H243.491V47.2806C243.491 46.8973 243.403 46.6006 243.226 46.3906C243.053 46.1773 242.788 46.0706 242.431 46.0706C242.168 46.0706 241.921 46.1339 241.691 46.2606C241.464 46.3873 241.254 46.5589 241.061 46.7756V50.5056H240.166V45.4406H240.701C240.828 45.4406 240.906 45.5023 240.936 45.6256L241.006 46.1756ZM249.042 46.6456C248.875 46.4223 248.695 46.2673 248.502 46.1806C248.309 46.0906 248.092 46.0456 247.852 46.0456C247.382 46.0456 247.02 46.2139 246.767 46.5506C246.514 46.8873 246.387 47.3673 246.387 47.9906C246.387 48.3206 246.415 48.6039 246.472 48.8406C246.529 49.0739 246.612 49.2673 246.722 49.4206C246.832 49.5706 246.967 49.6806 247.127 49.7506C247.287 49.8206 247.469 49.8556 247.672 49.8556C247.965 49.8556 248.22 49.7889 248.437 49.6556C248.657 49.5223 248.859 49.3339 249.042 49.0906V46.6456ZM249.932 43.1406V50.5056H249.402C249.275 50.5056 249.195 50.4439 249.162 50.3206L249.082 49.7056C248.865 49.9656 248.619 50.1756 248.342 50.3356C248.065 50.4956 247.745 50.5756 247.382 50.5756C247.092 50.5756 246.829 50.5206 246.592 50.4106C246.355 50.2973 246.154 50.1323 245.987 49.9156C245.82 49.6989 245.692 49.4289 245.602 49.1056C245.512 48.7823 245.467 48.4106 245.467 47.9906C245.467 47.6173 245.517 47.2706 245.617 46.9506C245.717 46.6273 245.86 46.3473 246.047 46.1106C246.234 45.8739 246.462 45.6889 246.732 45.5556C247.005 45.4189 247.312 45.3506 247.652 45.3506C247.962 45.3506 248.227 45.4039 248.447 45.5106C248.67 45.6139 248.869 45.7589 249.042 45.9456V43.1406H249.932ZM257.196 46.6456C257.03 46.4223 256.85 46.2673 256.656 46.1806C256.463 46.0906 256.246 46.0456 256.006 46.0456C255.536 46.0456 255.175 46.2139 254.921 46.5506C254.668 46.8873 254.541 47.3673 254.541 47.9906C254.541 48.3206 254.57 48.6039 254.626 48.8406C254.683 49.0739 254.766 49.2673 254.876 49.4206C254.986 49.5706 255.121 49.6806 255.281 49.7506C255.441 49.8206 255.623 49.8556 255.826 49.8556C256.12 49.8556 256.375 49.7889 256.591 49.6556C256.811 49.5223 257.013 49.3339 257.196 49.0906V46.6456ZM258.086 43.1406V50.5056H257.556C257.43 50.5056 257.35 50.4439 257.316 50.3206L257.236 49.7056C257.02 49.9656 256.773 50.1756 256.496 50.3356C256.22 50.4956 255.9 50.5756 255.536 50.5756C255.246 50.5756 254.983 50.5206 254.746 50.4106C254.51 50.2973 254.308 50.1323 254.141 49.9156C253.975 49.6989 253.846 49.4289 253.756 49.1056C253.666 48.7823 253.621 48.4106 253.621 47.9906C253.621 47.6173 253.671 47.2706 253.771 46.9506C253.871 46.6273 254.015 46.3473 254.201 46.1106C254.388 45.8739 254.616 45.6889 254.886 45.5556C255.16 45.4189 255.466 45.3506 255.806 45.3506C256.116 45.3506 256.381 45.4039 256.601 45.5106C256.825 45.6139 257.023 45.7589 257.196 45.9456V43.1406H258.086ZM260.432 45.4406V50.5056H259.542V45.4406H260.432ZM260.622 43.8506C260.622 43.9373 260.604 44.0189 260.567 44.0956C260.534 44.1689 260.487 44.2356 260.427 44.2956C260.37 44.3523 260.302 44.3973 260.222 44.4306C260.145 44.4639 260.064 44.4806 259.977 44.4806C259.89 44.4806 259.809 44.4639 259.732 44.4306C259.659 44.3973 259.594 44.3523 259.537 44.2956C259.48 44.2356 259.435 44.1689 259.402 44.0956C259.369 44.0189 259.352 43.9373 259.352 43.8506C259.352 43.7639 259.369 43.6823 259.402 43.6056C259.435 43.5256 259.48 43.4573 259.537 43.4006C259.594 43.3406 259.659 43.2939 259.732 43.2606C259.809 43.2273 259.89 43.2106 259.977 43.2106C260.064 43.2106 260.145 43.2273 260.222 43.2606C260.302 43.2939 260.37 43.3406 260.427 43.4006C260.487 43.4573 260.534 43.5256 260.567 43.6056C260.604 43.6823 260.622 43.7639 260.622 43.8506ZM263.659 48.0306C263.839 48.0306 263.998 48.0056 264.134 47.9556C264.271 47.9056 264.386 47.8356 264.479 47.7456C264.573 47.6556 264.643 47.5489 264.689 47.4256C264.736 47.2989 264.759 47.1606 264.759 47.0106C264.759 46.7006 264.664 46.4539 264.474 46.2706C264.288 46.0873 264.016 45.9956 263.659 45.9956C263.299 45.9956 263.024 46.0873 262.834 46.2706C262.648 46.4539 262.554 46.7006 262.554 47.0106C262.554 47.1606 262.578 47.2989 262.624 47.4256C262.674 47.5489 262.746 47.6556 262.839 47.7456C262.933 47.8356 263.048 47.9056 263.184 47.9556C263.321 48.0056 263.479 48.0306 263.659 48.0306ZM265.264 50.7806C265.264 50.6573 265.229 50.5573 265.159 50.4806C265.089 50.4039 264.994 50.3439 264.874 50.3006C264.758 50.2573 264.621 50.2273 264.464 50.2106C264.308 50.1906 264.141 50.1756 263.964 50.1656C263.791 50.1556 263.614 50.1456 263.434 50.1356C263.254 50.1256 263.081 50.1089 262.914 50.0856C262.728 50.1723 262.574 50.2823 262.454 50.4156C262.338 50.5456 262.279 50.6989 262.279 50.8756C262.279 50.9889 262.308 51.0939 262.364 51.1906C262.424 51.2906 262.514 51.3756 262.634 51.4456C262.754 51.5189 262.904 51.5756 263.084 51.6156C263.268 51.6589 263.483 51.6806 263.729 51.6806C263.969 51.6806 264.184 51.6589 264.374 51.6156C264.564 51.5723 264.724 51.5106 264.854 51.4306C264.988 51.3506 265.089 51.2556 265.159 51.1456C265.229 51.0356 265.264 50.9139 265.264 50.7806ZM266.169 45.6406V45.9706C266.169 46.0806 266.099 46.1506 265.959 46.1806L265.384 46.2556C265.498 46.4756 265.554 46.7189 265.554 46.9856C265.554 47.2323 265.506 47.4573 265.409 47.6606C265.316 47.8606 265.186 48.0323 265.019 48.1756C264.853 48.3189 264.653 48.4289 264.419 48.5056C264.186 48.5823 263.933 48.6206 263.659 48.6206C263.423 48.6206 263.199 48.5923 262.989 48.5356C262.883 48.6023 262.801 48.6739 262.744 48.7506C262.688 48.8239 262.659 48.8989 262.659 48.9756C262.659 49.0956 262.708 49.1873 262.804 49.2506C262.904 49.3106 263.034 49.3539 263.194 49.3806C263.354 49.4073 263.536 49.4239 263.739 49.4306C263.946 49.4373 264.156 49.4489 264.369 49.4656C264.586 49.4789 264.796 49.5039 264.999 49.5406C265.206 49.5773 265.389 49.6373 265.549 49.7206C265.709 49.8039 265.838 49.9189 265.934 50.0656C266.034 50.2123 266.084 50.4023 266.084 50.6356C266.084 50.8523 266.029 51.0623 265.919 51.2656C265.813 51.4689 265.658 51.6489 265.454 51.8056C265.251 51.9656 265.001 52.0923 264.704 52.1856C264.411 52.2823 264.079 52.3306 263.709 52.3306C263.339 52.3306 263.016 52.2939 262.739 52.2206C262.463 52.1473 262.233 52.0489 262.049 51.9256C261.866 51.8023 261.728 51.6589 261.634 51.4956C261.544 51.3356 261.499 51.1673 261.499 50.9906C261.499 50.7406 261.578 50.5289 261.734 50.3556C261.891 50.1823 262.106 50.0439 262.379 49.9406C262.229 49.8739 262.109 49.7856 262.019 49.6756C261.933 49.5623 261.889 49.4106 261.889 49.2206C261.889 49.1473 261.903 49.0723 261.929 48.9956C261.956 48.9156 261.996 48.8373 262.049 48.7606C262.106 48.6806 262.174 48.6056 262.254 48.5356C262.334 48.4656 262.428 48.4039 262.534 48.3506C262.284 48.2106 262.089 48.0256 261.949 47.7956C261.809 47.5623 261.739 47.2923 261.739 46.9856C261.739 46.7389 261.786 46.5156 261.879 46.3156C261.976 46.1123 262.109 45.9406 262.279 45.8006C262.449 45.6573 262.651 45.5473 262.884 45.4706C263.121 45.3939 263.379 45.3556 263.659 45.3556C263.879 45.3556 264.084 45.3806 264.274 45.4306C264.464 45.4773 264.638 45.5473 264.794 45.6406H266.169ZM270.402 47.4206C270.402 47.2139 270.372 47.0256 270.312 46.8556C270.255 46.6823 270.17 46.5339 270.057 46.4106C269.947 46.2839 269.812 46.1873 269.652 46.1206C269.492 46.0506 269.31 46.0156 269.107 46.0156C268.68 46.0156 268.342 46.1406 268.092 46.3906C267.845 46.6373 267.692 46.9806 267.632 47.4206H270.402ZM271.122 49.7956C271.012 49.9289 270.88 50.0456 270.727 50.1456C270.573 50.2423 270.408 50.3223 270.232 50.3856C270.058 50.4489 269.878 50.4956 269.692 50.5256C269.505 50.5589 269.32 50.5756 269.137 50.5756C268.787 50.5756 268.463 50.5173 268.167 50.4006C267.873 50.2806 267.618 50.1073 267.402 49.8806C267.188 49.6506 267.022 49.3673 266.902 49.0306C266.782 48.6939 266.722 48.3073 266.722 47.8706C266.722 47.5173 266.775 47.1873 266.882 46.8806C266.992 46.5739 267.148 46.3089 267.352 46.0856C267.555 45.8589 267.803 45.6823 268.097 45.5556C268.39 45.4256 268.72 45.3606 269.087 45.3606C269.39 45.3606 269.67 45.4123 269.927 45.5156C270.187 45.6156 270.41 45.7623 270.597 45.9556C270.787 46.1456 270.935 46.3823 271.042 46.6656C271.148 46.9456 271.202 47.2656 271.202 47.6256C271.202 47.7656 271.187 47.8589 271.157 47.9056C271.127 47.9523 271.07 47.9756 270.987 47.9756H267.602C267.612 48.2956 267.655 48.5739 267.732 48.8106C267.812 49.0473 267.922 49.2456 268.062 49.4056C268.202 49.5623 268.368 49.6806 268.562 49.7606C268.755 49.8373 268.972 49.8756 269.212 49.8756C269.435 49.8756 269.627 49.8506 269.787 49.8006C269.95 49.7473 270.09 49.6906 270.207 49.6306C270.323 49.5706 270.42 49.5156 270.497 49.4656C270.577 49.4123 270.645 49.3856 270.702 49.3856C270.775 49.3856 270.832 49.4139 270.872 49.4706L271.122 49.7956ZM275.245 46.2756C275.205 46.3489 275.143 46.3856 275.06 46.3856C275.01 46.3856 274.953 46.3673 274.89 46.3306C274.827 46.2939 274.748 46.2539 274.655 46.2106C274.565 46.1639 274.457 46.1223 274.33 46.0856C274.203 46.0456 274.053 46.0256 273.88 46.0256C273.73 46.0256 273.595 46.0456 273.475 46.0856C273.355 46.1223 273.252 46.1739 273.165 46.2406C273.082 46.3073 273.017 46.3856 272.97 46.4756C272.927 46.5623 272.905 46.6573 272.905 46.7606C272.905 46.8906 272.942 46.9989 273.015 47.0856C273.092 47.1723 273.192 47.2473 273.315 47.3106C273.438 47.3739 273.578 47.4306 273.735 47.4806C273.892 47.5273 274.052 47.5789 274.215 47.6356C274.382 47.6889 274.543 47.7489 274.7 47.8156C274.857 47.8823 274.997 47.9656 275.12 48.0656C275.243 48.1656 275.342 48.2889 275.415 48.4356C275.492 48.5789 275.53 48.7523 275.53 48.9556C275.53 49.1889 275.488 49.4056 275.405 49.6056C275.322 49.8023 275.198 49.9739 275.035 50.1206C274.872 50.2639 274.672 50.3773 274.435 50.4606C274.198 50.5439 273.925 50.5856 273.615 50.5856C273.262 50.5856 272.942 50.5289 272.655 50.4156C272.368 50.2989 272.125 50.1506 271.925 49.9706L272.135 49.6306C272.162 49.5873 272.193 49.5539 272.23 49.5306C272.267 49.5073 272.313 49.4956 272.37 49.4956C272.43 49.4956 272.493 49.5189 272.56 49.5656C272.627 49.6123 272.707 49.6639 272.8 49.7206C272.897 49.7773 273.013 49.8289 273.15 49.8756C273.287 49.9223 273.457 49.9456 273.66 49.9456C273.833 49.9456 273.985 49.9239 274.115 49.8806C274.245 49.8339 274.353 49.7723 274.44 49.6956C274.527 49.6189 274.59 49.5306 274.63 49.4306C274.673 49.3306 274.695 49.2239 274.695 49.1106C274.695 48.9706 274.657 48.8556 274.58 48.7656C274.507 48.6723 274.408 48.5939 274.285 48.5306C274.162 48.4639 274.02 48.4073 273.86 48.3606C273.703 48.3106 273.542 48.2589 273.375 48.2056C273.212 48.1523 273.05 48.0923 272.89 48.0256C272.733 47.9556 272.593 47.8689 272.47 47.7656C272.347 47.6623 272.247 47.5356 272.17 47.3856C272.097 47.2323 272.06 47.0473 272.06 46.8306C272.06 46.6373 272.1 46.4523 272.18 46.2756C272.26 46.0956 272.377 45.9389 272.53 45.8056C272.683 45.6689 272.872 45.5606 273.095 45.4806C273.318 45.4006 273.573 45.3606 273.86 45.3606C274.193 45.3606 274.492 45.4139 274.755 45.5206C275.022 45.6239 275.252 45.7673 275.445 45.9506L275.245 46.2756ZM278.176 50.5856C277.776 50.5856 277.468 50.4739 277.251 50.2506C277.038 50.0273 276.931 49.7056 276.931 49.2856V46.1856H276.321C276.268 46.1856 276.223 46.1706 276.186 46.1406C276.149 46.1073 276.131 46.0573 276.131 45.9906V45.6356L276.961 45.5306L277.166 43.9656C277.176 43.9156 277.198 43.8756 277.231 43.8456C277.268 43.8123 277.314 43.7956 277.371 43.7956H277.821V45.5406H279.286V46.1856H277.821V49.2256C277.821 49.4389 277.873 49.5973 277.976 49.7006C278.079 49.8039 278.213 49.8556 278.376 49.8556C278.469 49.8556 278.549 49.8439 278.616 49.8206C278.686 49.7939 278.746 49.7656 278.796 49.7356C278.846 49.7056 278.888 49.6789 278.921 49.6556C278.958 49.6289 278.989 49.6156 279.016 49.6156C279.063 49.6156 279.104 49.6439 279.141 49.7006L279.401 50.1256C279.248 50.2689 279.063 50.3823 278.846 50.4656C278.629 50.5456 278.406 50.5856 278.176 50.5856Z"
        fill={isLightTheme ? '#525266' : '#BEBECC'}
      />
      <path
        d="M4.58 44.4606C4.55 44.5106 4.51667 44.5489 4.48 44.5756C4.44667 44.5989 4.405 44.6106 4.355 44.6106C4.29833 44.6106 4.23167 44.5823 4.155 44.5256C4.07833 44.4689 3.98167 44.4073 3.865 44.3406C3.75167 44.2706 3.61333 44.2073 3.45 44.1506C3.29 44.0939 3.095 44.0656 2.865 44.0656C2.64833 44.0656 2.45667 44.0956 2.29 44.1556C2.12667 44.2123 1.98833 44.2906 1.875 44.3906C1.765 44.4906 1.68167 44.6089 1.625 44.7456C1.56833 44.8789 1.54 45.0239 1.54 45.1806C1.54 45.3806 1.58833 45.5473 1.685 45.6806C1.785 45.8106 1.915 45.9223 2.075 46.0156C2.23833 46.1089 2.42167 46.1906 2.625 46.2606C2.83167 46.3273 3.04167 46.3973 3.255 46.4706C3.47167 46.5439 3.68167 46.6273 3.885 46.7206C4.09167 46.8106 4.275 46.9256 4.435 47.0656C4.59833 47.2056 4.72833 47.3773 4.825 47.5806C4.925 47.7839 4.975 48.0339 4.975 48.3306C4.975 48.6439 4.92167 48.9389 4.815 49.2156C4.70833 49.4889 4.55167 49.7273 4.345 49.9306C4.14167 50.1339 3.89 50.2939 3.59 50.4106C3.29333 50.5273 2.955 50.5856 2.575 50.5856C2.10833 50.5856 1.685 50.5023 1.305 50.3356C0.925 50.1656 0.6 49.9373 0.33 49.6506L0.61 49.1906C0.636667 49.1539 0.668333 49.1239 0.705 49.1006C0.745 49.0739 0.788333 49.0606 0.835 49.0606C0.878333 49.0606 0.926667 49.0789 0.98 49.1156C1.03667 49.1489 1.1 49.1923 1.17 49.2456C1.24 49.2989 1.32 49.3573 1.41 49.4206C1.5 49.4839 1.60167 49.5423 1.715 49.5956C1.83167 49.6489 1.96333 49.6939 2.11 49.7306C2.25667 49.7639 2.42167 49.7806 2.605 49.7806C2.835 49.7806 3.04 49.7489 3.22 49.6856C3.4 49.6223 3.55167 49.5339 3.675 49.4206C3.80167 49.3039 3.89833 49.1656 3.965 49.0056C4.03167 48.8456 4.065 48.6673 4.065 48.4706C4.065 48.2539 4.015 48.0773 3.915 47.9406C3.81833 47.8006 3.69 47.6839 3.53 47.5906C3.37 47.4973 3.18667 47.4189 2.98 47.3556C2.77333 47.2889 2.56333 47.2223 2.35 47.1556C2.13667 47.0856 1.92667 47.0056 1.72 46.9156C1.51333 46.8256 1.33 46.7089 1.17 46.5656C1.01 46.4223 0.88 46.2439 0.78 46.0306C0.683333 45.8139 0.635 45.5473 0.635 45.2306C0.635 44.9773 0.683333 44.7323 0.78 44.4956C0.88 44.2589 1.02333 44.0489 1.21 43.8656C1.4 43.6823 1.63167 43.5356 1.905 43.4256C2.18167 43.3156 2.49833 43.2606 2.855 43.2606C3.255 43.2606 3.61833 43.3239 3.945 43.4506C4.275 43.5773 4.565 43.7606 4.815 44.0006L4.58 44.4606ZM9.49539 47.4206C9.49539 47.2139 9.46539 47.0256 9.40539 46.8556C9.34872 46.6823 9.26372 46.5339 9.15039 46.4106C9.04039 46.2839 8.90539 46.1873 8.74539 46.1206C8.58539 46.0506 8.40372 46.0156 8.20039 46.0156C7.77372 46.0156 7.43539 46.1406 7.18539 46.3906C6.93872 46.6373 6.78539 46.9806 6.72539 47.4206H9.49539ZM10.2154 49.7956C10.1054 49.9289 9.97372 50.0456 9.82039 50.1456C9.66706 50.2423 9.50206 50.3223 9.32539 50.3856C9.15206 50.4489 8.97206 50.4956 8.78539 50.5256C8.59872 50.5589 8.41372 50.5756 8.23039 50.5756C7.88039 50.5756 7.55706 50.5173 7.26039 50.4006C6.96706 50.2806 6.71206 50.1073 6.49539 49.8806C6.28206 49.6506 6.11539 49.3673 5.99539 49.0306C5.87539 48.6939 5.81539 48.3073 5.81539 47.8706C5.81539 47.5173 5.86872 47.1873 5.97539 46.8806C6.08539 46.5739 6.24206 46.3089 6.44539 46.0856C6.64872 45.8589 6.89706 45.6823 7.19039 45.5556C7.48372 45.4256 7.81372 45.3606 8.18039 45.3606C8.48372 45.3606 8.76372 45.4123 9.02039 45.5156C9.28039 45.6156 9.50372 45.7623 9.69039 45.9556C9.88039 46.1456 10.0287 46.3823 10.1354 46.6656C10.2421 46.9456 10.2954 47.2656 10.2954 47.6256C10.2954 47.7656 10.2804 47.8589 10.2504 47.9056C10.2204 47.9523 10.1637 47.9756 10.0804 47.9756H6.69539C6.70539 48.2956 6.74872 48.5739 6.82539 48.8106C6.90539 49.0473 7.01539 49.2456 7.15539 49.4056C7.29539 49.5623 7.46206 49.6806 7.65539 49.7606C7.84872 49.8373 8.06539 49.8756 8.30539 49.8756C8.52872 49.8756 8.72039 49.8506 8.88039 49.8006C9.04372 49.7473 9.18372 49.6906 9.30039 49.6306C9.41706 49.5706 9.51372 49.5156 9.59039 49.4656C9.67039 49.4123 9.73872 49.3856 9.79539 49.3856C9.86872 49.3856 9.92539 49.4139 9.96539 49.4706L10.2154 49.7956ZM12.2286 46.1756C12.3386 46.0523 12.4553 45.9406 12.5786 45.8406C12.7019 45.7406 12.8319 45.6556 12.9686 45.5856C13.1086 45.5123 13.2553 45.4573 13.4086 45.4206C13.5653 45.3806 13.7336 45.3606 13.9136 45.3606C14.1903 45.3606 14.4336 45.4073 14.6436 45.5006C14.8569 45.5906 15.0336 45.7206 15.1736 45.8906C15.3169 46.0573 15.4253 46.2589 15.4986 46.4956C15.5719 46.7323 15.6086 46.9939 15.6086 47.2806V50.5056H14.7136V47.2806C14.7136 46.8973 14.6253 46.6006 14.4486 46.3906C14.2753 46.1773 14.0103 46.0706 13.6536 46.0706C13.3903 46.0706 13.1436 46.1339 12.9136 46.2606C12.6869 46.3873 12.4769 46.5589 12.2836 46.7756V50.5056H11.3886V45.4406H11.9236C12.0503 45.4406 12.1286 45.5023 12.1586 45.6256L12.2286 46.1756ZM18.4514 50.5856C18.0514 50.5856 17.7431 50.4739 17.5264 50.2506C17.3131 50.0273 17.2064 49.7056 17.2064 49.2856V46.1856H16.5964C16.5431 46.1856 16.4981 46.1706 16.4614 46.1406C16.4247 46.1073 16.4064 46.0573 16.4064 45.9906V45.6356L17.2364 45.5306L17.4414 43.9656C17.4514 43.9156 17.4731 43.8756 17.5064 43.8456C17.5431 43.8123 17.5897 43.7956 17.6464 43.7956H18.0964V45.5406H19.5614V46.1856H18.0964V49.2256C18.0964 49.4389 18.1481 49.5973 18.2514 49.7006C18.3547 49.8039 18.4881 49.8556 18.6514 49.8556C18.7447 49.8556 18.8247 49.8439 18.8914 49.8206C18.9614 49.7939 19.0214 49.7656 19.0714 49.7356C19.1214 49.7056 19.1631 49.6789 19.1964 49.6556C19.2331 49.6289 19.2647 49.6156 19.2914 49.6156C19.3381 49.6156 19.3797 49.6439 19.4164 49.7006L19.6764 50.1256C19.5231 50.2689 19.3381 50.3823 19.1214 50.4656C18.9047 50.5456 18.6814 50.5856 18.4514 50.5856ZM26.339 46.6456C26.1723 46.4223 25.9923 46.2673 25.799 46.1806C25.6057 46.0906 25.389 46.0456 25.149 46.0456C24.679 46.0456 24.3173 46.2139 24.064 46.5506C23.8107 46.8873 23.684 47.3673 23.684 47.9906C23.684 48.3206 23.7123 48.6039 23.769 48.8406C23.8257 49.0739 23.909 49.2673 24.019 49.4206C24.129 49.5706 24.264 49.6806 24.424 49.7506C24.584 49.8206 24.7657 49.8556 24.969 49.8556C25.2623 49.8556 25.5173 49.7889 25.734 49.6556C25.954 49.5223 26.1557 49.3339 26.339 49.0906V46.6456ZM27.229 43.1406V50.5056H26.699C26.5723 50.5056 26.4923 50.4439 26.459 50.3206L26.379 49.7056C26.1623 49.9656 25.9157 50.1756 25.639 50.3356C25.3623 50.4956 25.0423 50.5756 24.679 50.5756C24.389 50.5756 24.1257 50.5206 23.889 50.4106C23.6523 50.2973 23.4507 50.1323 23.284 49.9156C23.1173 49.6989 22.989 49.4289 22.899 49.1056C22.809 48.7823 22.764 48.4106 22.764 47.9906C22.764 47.6173 22.814 47.2706 22.914 46.9506C23.014 46.6273 23.1573 46.3473 23.344 46.1106C23.5307 45.8739 23.759 45.6889 24.029 45.5556C24.3023 45.4189 24.609 45.3506 24.949 45.3506C25.259 45.3506 25.524 45.4039 25.744 45.5106C25.9673 45.6139 26.1657 45.7589 26.339 45.9456V43.1406H27.229ZM29.5747 45.4406V50.5056H28.6847V45.4406H29.5747ZM29.7647 43.8506C29.7647 43.9373 29.7464 44.0189 29.7097 44.0956C29.6764 44.1689 29.6297 44.2356 29.5697 44.2956C29.513 44.3523 29.4447 44.3973 29.3647 44.4306C29.288 44.4639 29.2064 44.4806 29.1197 44.4806C29.033 44.4806 28.9514 44.4639 28.8747 44.4306C28.8014 44.3973 28.7364 44.3523 28.6797 44.2956C28.623 44.2356 28.578 44.1689 28.5447 44.0956C28.5114 44.0189 28.4947 43.9373 28.4947 43.8506C28.4947 43.7639 28.5114 43.6823 28.5447 43.6056C28.578 43.5256 28.623 43.4573 28.6797 43.4006C28.7364 43.3406 28.8014 43.2939 28.8747 43.2606C28.9514 43.2273 29.033 43.2106 29.1197 43.2106C29.2064 43.2106 29.288 43.2273 29.3647 43.2606C29.4447 43.2939 29.513 43.3406 29.5697 43.4006C29.6297 43.4573 29.6764 43.5256 29.7097 43.6056C29.7464 43.6823 29.7647 43.7639 29.7647 43.8506ZM32.802 48.0306C32.982 48.0306 33.1404 48.0056 33.277 47.9556C33.4137 47.9056 33.5287 47.8356 33.622 47.7456C33.7154 47.6556 33.7854 47.5489 33.832 47.4256C33.8787 47.2989 33.902 47.1606 33.902 47.0106C33.902 46.7006 33.807 46.4539 33.617 46.2706C33.4304 46.0873 33.1587 45.9956 32.802 45.9956C32.442 45.9956 32.167 46.0873 31.977 46.2706C31.7904 46.4539 31.697 46.7006 31.697 47.0106C31.697 47.1606 31.7204 47.2989 31.767 47.4256C31.817 47.5489 31.8887 47.6556 31.982 47.7456C32.0754 47.8356 32.1904 47.9056 32.327 47.9556C32.4637 48.0056 32.622 48.0306 32.802 48.0306ZM34.407 50.7806C34.407 50.6573 34.372 50.5573 34.302 50.4806C34.232 50.4039 34.137 50.3439 34.017 50.3006C33.9004 50.2573 33.7637 50.2273 33.607 50.2106C33.4504 50.1906 33.2837 50.1756 33.107 50.1656C32.9337 50.1556 32.757 50.1456 32.577 50.1356C32.397 50.1256 32.2237 50.1089 32.057 50.0856C31.8704 50.1723 31.717 50.2823 31.597 50.4156C31.4804 50.5456 31.422 50.6989 31.422 50.8756C31.422 50.9889 31.4504 51.0939 31.507 51.1906C31.567 51.2906 31.657 51.3756 31.777 51.4456C31.897 51.5189 32.047 51.5756 32.227 51.6156C32.4104 51.6589 32.6254 51.6806 32.872 51.6806C33.112 51.6806 33.327 51.6589 33.517 51.6156C33.707 51.5723 33.867 51.5106 33.997 51.4306C34.1304 51.3506 34.232 51.2556 34.302 51.1456C34.372 51.0356 34.407 50.9139 34.407 50.7806ZM35.312 45.6406V45.9706C35.312 46.0806 35.242 46.1506 35.102 46.1806L34.527 46.2556C34.6404 46.4756 34.697 46.7189 34.697 46.9856C34.697 47.2323 34.6487 47.4573 34.552 47.6606C34.4587 47.8606 34.3287 48.0323 34.162 48.1756C33.9954 48.3189 33.7954 48.4289 33.562 48.5056C33.3287 48.5823 33.0754 48.6206 32.802 48.6206C32.5654 48.6206 32.342 48.5923 32.132 48.5356C32.0254 48.6023 31.9437 48.6739 31.887 48.7506C31.8304 48.8239 31.802 48.8989 31.802 48.9756C31.802 49.0956 31.8504 49.1873 31.947 49.2506C32.047 49.3106 32.177 49.3539 32.337 49.3806C32.497 49.4073 32.6787 49.4239 32.882 49.4306C33.0887 49.4373 33.2987 49.4489 33.512 49.4656C33.7287 49.4789 33.9387 49.5039 34.142 49.5406C34.3487 49.5773 34.532 49.6373 34.692 49.7206C34.852 49.8039 34.9804 49.9189 35.077 50.0656C35.177 50.2123 35.227 50.4023 35.227 50.6356C35.227 50.8523 35.172 51.0623 35.062 51.2656C34.9554 51.4689 34.8004 51.6489 34.597 51.8056C34.3937 51.9656 34.1437 52.0923 33.847 52.1856C33.5537 52.2823 33.222 52.3306 32.852 52.3306C32.482 52.3306 32.1587 52.2939 31.882 52.2206C31.6054 52.1473 31.3754 52.0489 31.192 51.9256C31.0087 51.8023 30.8704 51.6589 30.777 51.4956C30.687 51.3356 30.642 51.1673 30.642 50.9906C30.642 50.7406 30.7204 50.5289 30.877 50.3556C31.0337 50.1823 31.2487 50.0439 31.522 49.9406C31.372 49.8739 31.252 49.7856 31.162 49.6756C31.0754 49.5623 31.032 49.4106 31.032 49.2206C31.032 49.1473 31.0454 49.0723 31.072 48.9956C31.0987 48.9156 31.1387 48.8373 31.192 48.7606C31.2487 48.6806 31.317 48.6056 31.397 48.5356C31.477 48.4656 31.5704 48.4039 31.677 48.3506C31.427 48.2106 31.232 48.0256 31.092 47.7956C30.952 47.5623 30.882 47.2923 30.882 46.9856C30.882 46.7389 30.9287 46.5156 31.022 46.3156C31.1187 46.1123 31.252 45.9406 31.422 45.8006C31.592 45.6573 31.7937 45.5473 32.027 45.4706C32.2637 45.3939 32.522 45.3556 32.802 45.3556C33.022 45.3556 33.227 45.3806 33.417 45.4306C33.607 45.4773 33.7804 45.5473 33.937 45.6406H35.312ZM39.5442 47.4206C39.5442 47.2139 39.5142 47.0256 39.4542 46.8556C39.3976 46.6823 39.3126 46.5339 39.1992 46.4106C39.0892 46.2839 38.9542 46.1873 38.7942 46.1206C38.6342 46.0506 38.4526 46.0156 38.2492 46.0156C37.8226 46.0156 37.4842 46.1406 37.2342 46.3906C36.9876 46.6373 36.8342 46.9806 36.7742 47.4206H39.5442ZM40.2642 49.7956C40.1542 49.9289 40.0226 50.0456 39.8692 50.1456C39.7159 50.2423 39.5509 50.3223 39.3742 50.3856C39.2009 50.4489 39.0209 50.4956 38.8342 50.5256C38.6476 50.5589 38.4626 50.5756 38.2792 50.5756C37.9292 50.5756 37.6059 50.5173 37.3092 50.4006C37.0159 50.2806 36.7609 50.1073 36.5442 49.8806C36.3309 49.6506 36.1642 49.3673 36.0442 49.0306C35.9242 48.6939 35.8642 48.3073 35.8642 47.8706C35.8642 47.5173 35.9176 47.1873 36.0242 46.8806C36.1342 46.5739 36.2909 46.3089 36.4942 46.0856C36.6976 45.8589 36.9459 45.6823 37.2392 45.5556C37.5326 45.4256 37.8626 45.3606 38.2292 45.3606C38.5326 45.3606 38.8126 45.4123 39.0692 45.5156C39.3292 45.6156 39.5526 45.7623 39.7392 45.9556C39.9292 46.1456 40.0776 46.3823 40.1842 46.6656C40.2909 46.9456 40.3442 47.2656 40.3442 47.6256C40.3442 47.7656 40.3292 47.8589 40.2992 47.9056C40.2692 47.9523 40.2126 47.9756 40.1292 47.9756H36.7442C36.7542 48.2956 36.7976 48.5739 36.8742 48.8106C36.9542 49.0473 37.0642 49.2456 37.2042 49.4056C37.3442 49.5623 37.5109 49.6806 37.7042 49.7606C37.8976 49.8373 38.1142 49.8756 38.3542 49.8756C38.5776 49.8756 38.7692 49.8506 38.9292 49.8006C39.0926 49.7473 39.2326 49.6906 39.3492 49.6306C39.4659 49.5706 39.5626 49.5156 39.6392 49.4656C39.7192 49.4123 39.7876 49.3856 39.8442 49.3856C39.9176 49.3856 39.9742 49.4139 40.0142 49.4706L40.2642 49.7956ZM44.3874 46.2756C44.3474 46.3489 44.2858 46.3856 44.2024 46.3856C44.1524 46.3856 44.0958 46.3673 44.0324 46.3306C43.9691 46.2939 43.8908 46.2539 43.7974 46.2106C43.7074 46.1639 43.5991 46.1223 43.4724 46.0856C43.3458 46.0456 43.1958 46.0256 43.0224 46.0256C42.8724 46.0256 42.7374 46.0456 42.6174 46.0856C42.4974 46.1223 42.3941 46.1739 42.3074 46.2406C42.2241 46.3073 42.1591 46.3856 42.1124 46.4756C42.0691 46.5623 42.0474 46.6573 42.0474 46.7606C42.0474 46.8906 42.0841 46.9989 42.1574 47.0856C42.2341 47.1723 42.3341 47.2473 42.4574 47.3106C42.5808 47.3739 42.7208 47.4306 42.8774 47.4806C43.0341 47.5273 43.1941 47.5789 43.3574 47.6356C43.5241 47.6889 43.6858 47.7489 43.8424 47.8156C43.9991 47.8823 44.1391 47.9656 44.2624 48.0656C44.3858 48.1656 44.4841 48.2889 44.5574 48.4356C44.6341 48.5789 44.6724 48.7523 44.6724 48.9556C44.6724 49.1889 44.6308 49.4056 44.5474 49.6056C44.4641 49.8023 44.3408 49.9739 44.1774 50.1206C44.0141 50.2639 43.8141 50.3773 43.5774 50.4606C43.3408 50.5439 43.0674 50.5856 42.7574 50.5856C42.4041 50.5856 42.0841 50.5289 41.7974 50.4156C41.5108 50.2989 41.2674 50.1506 41.0674 49.9706L41.2774 49.6306C41.3041 49.5873 41.3358 49.5539 41.3724 49.5306C41.4091 49.5073 41.4558 49.4956 41.5124 49.4956C41.5724 49.4956 41.6358 49.5189 41.7024 49.5656C41.7691 49.6123 41.8491 49.6639 41.9424 49.7206C42.0391 49.7773 42.1558 49.8289 42.2924 49.8756C42.4291 49.9223 42.5991 49.9456 42.8024 49.9456C42.9758 49.9456 43.1274 49.9239 43.2574 49.8806C43.3874 49.8339 43.4958 49.7723 43.5824 49.6956C43.6691 49.6189 43.7324 49.5306 43.7724 49.4306C43.8158 49.3306 43.8374 49.2239 43.8374 49.1106C43.8374 48.9706 43.7991 48.8556 43.7224 48.7656C43.6491 48.6723 43.5508 48.5939 43.4274 48.5306C43.3041 48.4639 43.1624 48.4073 43.0024 48.3606C42.8458 48.3106 42.6841 48.2589 42.5174 48.2056C42.3541 48.1523 42.1924 48.0923 42.0324 48.0256C41.8758 47.9556 41.7358 47.8689 41.6124 47.7656C41.4891 47.6623 41.3891 47.5356 41.3124 47.3856C41.2391 47.2323 41.2024 47.0473 41.2024 46.8306C41.2024 46.6373 41.2424 46.4523 41.3224 46.2756C41.4024 46.0956 41.5191 45.9389 41.6724 45.8056C41.8258 45.6689 42.0141 45.5606 42.2374 45.4806C42.4608 45.4006 42.7158 45.3606 43.0024 45.3606C43.3358 45.3606 43.6341 45.4139 43.8974 45.5206C44.1641 45.6239 44.3941 45.7673 44.5874 45.9506L44.3874 46.2756ZM47.3186 50.5856C46.9186 50.5856 46.6103 50.4739 46.3936 50.2506C46.1803 50.0273 46.0736 49.7056 46.0736 49.2856V46.1856H45.4636C45.4103 46.1856 45.3653 46.1706 45.3286 46.1406C45.2919 46.1073 45.2736 46.0573 45.2736 45.9906V45.6356L46.1036 45.5306L46.3086 43.9656C46.3186 43.9156 46.3403 43.8756 46.3736 43.8456C46.4103 43.8123 46.4569 43.7956 46.5136 43.7956H46.9636V45.5406H48.4286V46.1856H46.9636V49.2256C46.9636 49.4389 47.0153 49.5973 47.1186 49.7006C47.2219 49.8039 47.3553 49.8556 47.5186 49.8556C47.6119 49.8556 47.6919 49.8439 47.7586 49.8206C47.8286 49.7939 47.8886 49.7656 47.9386 49.7356C47.9886 49.7056 48.0303 49.6789 48.0636 49.6556C48.1003 49.6289 48.1319 49.6156 48.1586 49.6156C48.2053 49.6156 48.2469 49.6439 48.2836 49.7006L48.5436 50.1256C48.3903 50.2689 48.2053 50.3823 47.9886 50.4656C47.7719 50.5456 47.5486 50.5856 47.3186 50.5856Z"
        fill={isLightTheme ? '#BEBECC' : '#525266'}
      />
      <path
        d="M154.06 12.221C153.65 12.2343 153.3 12.2676 153.01 12.321C152.724 12.371 152.489 12.4376 152.305 12.521C152.125 12.6043 151.994 12.7026 151.91 12.816C151.83 12.9293 151.79 13.056 151.79 13.196C151.79 13.3293 151.812 13.4443 151.855 13.541C151.899 13.6376 151.957 13.7176 152.03 13.781C152.107 13.841 152.195 13.886 152.295 13.916C152.399 13.9426 152.509 13.956 152.625 13.956C152.782 13.956 152.925 13.941 153.055 13.911C153.185 13.8776 153.307 13.831 153.42 13.771C153.537 13.711 153.647 13.6393 153.75 13.556C153.857 13.4726 153.96 13.3776 154.06 13.271V12.221ZM151.185 10.151C151.465 9.88098 151.767 9.67931 152.09 9.54598C152.414 9.41264 152.772 9.34598 153.165 9.34598C153.449 9.34598 153.7 9.39264 153.92 9.48598C154.14 9.57931 154.325 9.70931 154.475 9.87598C154.625 10.0426 154.739 10.2443 154.815 10.481C154.892 10.7176 154.93 10.9776 154.93 11.261V14.501H154.535C154.449 14.501 154.382 14.4876 154.335 14.461C154.289 14.431 154.252 14.3743 154.225 14.291L154.125 13.811C153.992 13.9343 153.862 14.0443 153.735 14.141C153.609 14.2343 153.475 14.3143 153.335 14.381C153.195 14.4443 153.045 14.4926 152.885 14.526C152.729 14.5626 152.554 14.581 152.36 14.581C152.164 14.581 151.979 14.5543 151.805 14.501C151.632 14.4443 151.48 14.361 151.35 14.251C151.224 14.141 151.122 14.0026 151.045 13.836C150.972 13.666 150.935 13.466 150.935 13.236C150.935 13.036 150.99 12.8443 151.1 12.661C151.21 12.4743 151.389 12.3093 151.635 12.166C151.882 12.0226 152.204 11.906 152.6 11.816C152.997 11.7226 153.484 11.6693 154.06 11.656V11.261C154.06 10.8676 153.975 10.571 153.805 10.371C153.635 10.1676 153.387 10.066 153.06 10.066C152.84 10.066 152.655 10.0943 152.505 10.151C152.359 10.2043 152.23 10.266 152.12 10.336C152.014 10.4026 151.92 10.4643 151.84 10.521C151.764 10.5743 151.687 10.601 151.61 10.601C151.55 10.601 151.499 10.586 151.455 10.556C151.412 10.5226 151.375 10.4826 151.345 10.436L151.185 10.151ZM158.051 12.026C158.231 12.026 158.389 12.001 158.526 11.951C158.663 11.901 158.778 11.831 158.871 11.741C158.964 11.651 159.034 11.5443 159.081 11.421C159.128 11.2943 159.151 11.156 159.151 11.006C159.151 10.696 159.056 10.4493 158.866 10.266C158.679 10.0826 158.408 9.99098 158.051 9.99098C157.691 9.99098 157.416 10.0826 157.226 10.266C157.039 10.4493 156.946 10.696 156.946 11.006C156.946 11.156 156.969 11.2943 157.016 11.421C157.066 11.5443 157.138 11.651 157.231 11.741C157.324 11.831 157.439 11.901 157.576 11.951C157.713 12.001 157.871 12.026 158.051 12.026ZM159.656 14.776C159.656 14.6526 159.621 14.5526 159.551 14.476C159.481 14.3993 159.386 14.3393 159.266 14.296C159.149 14.2526 159.013 14.2226 158.856 14.206C158.699 14.186 158.533 14.171 158.356 14.161C158.183 14.151 158.006 14.141 157.826 14.131C157.646 14.121 157.473 14.1043 157.306 14.081C157.119 14.1676 156.966 14.2776 156.846 14.411C156.729 14.541 156.671 14.6943 156.671 14.871C156.671 14.9843 156.699 15.0893 156.756 15.186C156.816 15.286 156.906 15.371 157.026 15.441C157.146 15.5143 157.296 15.571 157.476 15.611C157.659 15.6543 157.874 15.676 158.121 15.676C158.361 15.676 158.576 15.6543 158.766 15.611C158.956 15.5676 159.116 15.506 159.246 15.426C159.379 15.346 159.481 15.251 159.551 15.141C159.621 15.031 159.656 14.9093 159.656 14.776ZM160.561 9.63598V9.96598C160.561 10.076 160.491 10.146 160.351 10.176L159.776 10.251C159.889 10.471 159.946 10.7143 159.946 10.981C159.946 11.2276 159.898 11.4526 159.801 11.656C159.708 11.856 159.578 12.0276 159.411 12.171C159.244 12.3143 159.044 12.4243 158.811 12.501C158.578 12.5776 158.324 12.616 158.051 12.616C157.814 12.616 157.591 12.5876 157.381 12.531C157.274 12.5976 157.193 12.6693 157.136 12.746C157.079 12.8193 157.051 12.8943 157.051 12.971C157.051 13.091 157.099 13.1826 157.196 13.246C157.296 13.306 157.426 13.3493 157.586 13.376C157.746 13.4026 157.928 13.4193 158.131 13.426C158.338 13.4326 158.548 13.4443 158.761 13.461C158.978 13.4743 159.188 13.4993 159.391 13.536C159.598 13.5726 159.781 13.6326 159.941 13.716C160.101 13.7993 160.229 13.9143 160.326 14.061C160.426 14.2076 160.476 14.3976 160.476 14.631C160.476 14.8476 160.421 15.0576 160.311 15.261C160.204 15.4643 160.049 15.6443 159.846 15.801C159.643 15.961 159.393 16.0876 159.096 16.181C158.803 16.2776 158.471 16.326 158.101 16.326C157.731 16.326 157.408 16.2893 157.131 16.216C156.854 16.1426 156.624 16.0443 156.441 15.921C156.258 15.7976 156.119 15.6543 156.026 15.491C155.936 15.331 155.891 15.1626 155.891 14.986C155.891 14.736 155.969 14.5243 156.126 14.351C156.283 14.1776 156.498 14.0393 156.771 13.936C156.621 13.8693 156.501 13.781 156.411 13.671C156.324 13.5576 156.281 13.406 156.281 13.216C156.281 13.1426 156.294 13.0676 156.321 12.991C156.348 12.911 156.388 12.8326 156.441 12.756C156.498 12.676 156.566 12.601 156.646 12.531C156.726 12.461 156.819 12.3993 156.926 12.346C156.676 12.206 156.481 12.021 156.341 11.791C156.201 11.5576 156.131 11.2876 156.131 10.981C156.131 10.7343 156.178 10.511 156.271 10.311C156.368 10.1076 156.501 9.93598 156.671 9.79598C156.841 9.65264 157.043 9.54264 157.276 9.46598C157.513 9.38931 157.771 9.35098 158.051 9.35098C158.271 9.35098 158.476 9.37598 158.666 9.42598C158.856 9.47264 159.029 9.54264 159.186 9.63598H160.561ZM163.227 12.026C163.407 12.026 163.565 12.001 163.702 11.951C163.839 11.901 163.954 11.831 164.047 11.741C164.14 11.651 164.21 11.5443 164.257 11.421C164.304 11.2943 164.327 11.156 164.327 11.006C164.327 10.696 164.232 10.4493 164.042 10.266C163.855 10.0826 163.584 9.99098 163.227 9.99098C162.867 9.99098 162.592 10.0826 162.402 10.266C162.215 10.4493 162.122 10.696 162.122 11.006C162.122 11.156 162.145 11.2943 162.192 11.421C162.242 11.5443 162.314 11.651 162.407 11.741C162.5 11.831 162.615 11.901 162.752 11.951C162.889 12.001 163.047 12.026 163.227 12.026ZM164.832 14.776C164.832 14.6526 164.797 14.5526 164.727 14.476C164.657 14.3993 164.562 14.3393 164.442 14.296C164.325 14.2526 164.189 14.2226 164.032 14.206C163.875 14.186 163.709 14.171 163.532 14.161C163.359 14.151 163.182 14.141 163.002 14.131C162.822 14.121 162.649 14.1043 162.482 14.081C162.295 14.1676 162.142 14.2776 162.022 14.411C161.905 14.541 161.847 14.6943 161.847 14.871C161.847 14.9843 161.875 15.0893 161.932 15.186C161.992 15.286 162.082 15.371 162.202 15.441C162.322 15.5143 162.472 15.571 162.652 15.611C162.835 15.6543 163.05 15.676 163.297 15.676C163.537 15.676 163.752 15.6543 163.942 15.611C164.132 15.5676 164.292 15.506 164.422 15.426C164.555 15.346 164.657 15.251 164.727 15.141C164.797 15.031 164.832 14.9093 164.832 14.776ZM165.737 9.63598V9.96598C165.737 10.076 165.667 10.146 165.527 10.176L164.952 10.251C165.065 10.471 165.122 10.7143 165.122 10.981C165.122 11.2276 165.074 11.4526 164.977 11.656C164.884 11.856 164.754 12.0276 164.587 12.171C164.42 12.3143 164.22 12.4243 163.987 12.501C163.754 12.5776 163.5 12.616 163.227 12.616C162.99 12.616 162.767 12.5876 162.557 12.531C162.45 12.5976 162.369 12.6693 162.312 12.746C162.255 12.8193 162.227 12.8943 162.227 12.971C162.227 13.091 162.275 13.1826 162.372 13.246C162.472 13.306 162.602 13.3493 162.762 13.376C162.922 13.4026 163.104 13.4193 163.307 13.426C163.514 13.4326 163.724 13.4443 163.937 13.461C164.154 13.4743 164.364 13.4993 164.567 13.536C164.774 13.5726 164.957 13.6326 165.117 13.716C165.277 13.7993 165.405 13.9143 165.502 14.061C165.602 14.2076 165.652 14.3976 165.652 14.631C165.652 14.8476 165.597 15.0576 165.487 15.261C165.38 15.4643 165.225 15.6443 165.022 15.801C164.819 15.961 164.569 16.0876 164.272 16.181C163.979 16.2776 163.647 16.326 163.277 16.326C162.907 16.326 162.584 16.2893 162.307 16.216C162.03 16.1426 161.8 16.0443 161.617 15.921C161.434 15.7976 161.295 15.6543 161.202 15.491C161.112 15.331 161.067 15.1626 161.067 14.986C161.067 14.736 161.145 14.5243 161.302 14.351C161.459 14.1776 161.674 14.0393 161.947 13.936C161.797 13.8693 161.677 13.781 161.587 13.671C161.5 13.5576 161.457 13.406 161.457 13.216C161.457 13.1426 161.47 13.0676 161.497 12.991C161.524 12.911 161.564 12.8326 161.617 12.756C161.674 12.676 161.742 12.601 161.822 12.531C161.902 12.461 161.995 12.3993 162.102 12.346C161.852 12.206 161.657 12.021 161.517 11.791C161.377 11.5576 161.307 11.2876 161.307 10.981C161.307 10.7343 161.354 10.511 161.447 10.311C161.544 10.1076 161.677 9.93598 161.847 9.79598C162.017 9.65264 162.219 9.54264 162.452 9.46598C162.689 9.38931 162.947 9.35098 163.227 9.35098C163.447 9.35098 163.652 9.37598 163.842 9.42598C164.032 9.47264 164.205 9.54264 164.362 9.63598H165.737ZM167.502 10.451C167.662 10.1043 167.859 9.83431 168.092 9.64098C168.325 9.44431 168.61 9.34598 168.947 9.34598C169.054 9.34598 169.155 9.35764 169.252 9.38098C169.352 9.40431 169.44 9.44098 169.517 9.49098L169.452 10.156C169.432 10.2393 169.382 10.281 169.302 10.281C169.255 10.281 169.187 10.271 169.097 10.251C169.007 10.231 168.905 10.221 168.792 10.221C168.632 10.221 168.489 10.2443 168.362 10.291C168.239 10.3376 168.127 10.4076 168.027 10.501C167.93 10.591 167.842 10.7043 167.762 10.841C167.685 10.9743 167.615 11.1276 167.552 11.301V14.501H166.657V9.43598H167.167C167.264 9.43598 167.33 9.45431 167.367 9.49098C167.404 9.52764 167.429 9.59098 167.442 9.68098L167.502 10.451ZM173.485 11.416C173.485 11.2093 173.455 11.021 173.395 10.851C173.338 10.6776 173.253 10.5293 173.14 10.406C173.03 10.2793 172.895 10.1826 172.735 10.116C172.575 10.046 172.393 10.011 172.19 10.011C171.763 10.011 171.425 10.136 171.175 10.386C170.928 10.6326 170.775 10.976 170.715 11.416H173.485ZM174.205 13.791C174.095 13.9243 173.963 14.041 173.81 14.141C173.656 14.2376 173.491 14.3176 173.315 14.381C173.141 14.4443 172.961 14.491 172.775 14.521C172.588 14.5543 172.403 14.571 172.22 14.571C171.87 14.571 171.546 14.5126 171.25 14.396C170.956 14.276 170.701 14.1026 170.485 13.876C170.271 13.646 170.105 13.3626 169.985 13.026C169.865 12.6893 169.805 12.3026 169.805 11.866C169.805 11.5126 169.858 11.1826 169.965 10.876C170.075 10.5693 170.231 10.3043 170.435 10.081C170.638 9.85431 170.886 9.67764 171.18 9.55098C171.473 9.42098 171.803 9.35598 172.17 9.35598C172.473 9.35598 172.753 9.40764 173.01 9.51098C173.27 9.61098 173.493 9.75764 173.68 9.95098C173.87 10.141 174.018 10.3776 174.125 10.661C174.231 10.941 174.285 11.261 174.285 11.621C174.285 11.761 174.27 11.8543 174.24 11.901C174.21 11.9476 174.153 11.971 174.07 11.971H170.685C170.695 12.291 170.738 12.5693 170.815 12.806C170.895 13.0426 171.005 13.241 171.145 13.401C171.285 13.5576 171.451 13.676 171.645 13.756C171.838 13.8326 172.055 13.871 172.295 13.871C172.518 13.871 172.71 13.846 172.87 13.796C173.033 13.7426 173.173 13.686 173.29 13.626C173.406 13.566 173.503 13.511 173.58 13.461C173.66 13.4076 173.728 13.381 173.785 13.381C173.858 13.381 173.915 13.4093 173.955 13.466L174.205 13.791ZM177.143 12.026C177.323 12.026 177.481 12.001 177.618 11.951C177.755 11.901 177.87 11.831 177.963 11.741C178.056 11.651 178.126 11.5443 178.173 11.421C178.22 11.2943 178.243 11.156 178.243 11.006C178.243 10.696 178.148 10.4493 177.958 10.266C177.771 10.0826 177.5 9.99098 177.143 9.99098C176.783 9.99098 176.508 10.0826 176.318 10.266C176.131 10.4493 176.038 10.696 176.038 11.006C176.038 11.156 176.061 11.2943 176.108 11.421C176.158 11.5443 176.23 11.651 176.323 11.741C176.416 11.831 176.531 11.901 176.668 11.951C176.805 12.001 176.963 12.026 177.143 12.026ZM178.748 14.776C178.748 14.6526 178.713 14.5526 178.643 14.476C178.573 14.3993 178.478 14.3393 178.358 14.296C178.241 14.2526 178.105 14.2226 177.948 14.206C177.791 14.186 177.625 14.171 177.448 14.161C177.275 14.151 177.098 14.141 176.918 14.131C176.738 14.121 176.565 14.1043 176.398 14.081C176.211 14.1676 176.058 14.2776 175.938 14.411C175.821 14.541 175.763 14.6943 175.763 14.871C175.763 14.9843 175.791 15.0893 175.848 15.186C175.908 15.286 175.998 15.371 176.118 15.441C176.238 15.5143 176.388 15.571 176.568 15.611C176.751 15.6543 176.966 15.676 177.213 15.676C177.453 15.676 177.668 15.6543 177.858 15.611C178.048 15.5676 178.208 15.506 178.338 15.426C178.471 15.346 178.573 15.251 178.643 15.141C178.713 15.031 178.748 14.9093 178.748 14.776ZM179.653 9.63598V9.96598C179.653 10.076 179.583 10.146 179.443 10.176L178.868 10.251C178.981 10.471 179.038 10.7143 179.038 10.981C179.038 11.2276 178.99 11.4526 178.893 11.656C178.8 11.856 178.67 12.0276 178.503 12.171C178.336 12.3143 178.136 12.4243 177.903 12.501C177.67 12.5776 177.416 12.616 177.143 12.616C176.906 12.616 176.683 12.5876 176.473 12.531C176.366 12.5976 176.285 12.6693 176.228 12.746C176.171 12.8193 176.143 12.8943 176.143 12.971C176.143 13.091 176.191 13.1826 176.288 13.246C176.388 13.306 176.518 13.3493 176.678 13.376C176.838 13.4026 177.02 13.4193 177.223 13.426C177.43 13.4326 177.64 13.4443 177.853 13.461C178.07 13.4743 178.28 13.4993 178.483 13.536C178.69 13.5726 178.873 13.6326 179.033 13.716C179.193 13.7993 179.321 13.9143 179.418 14.061C179.518 14.2076 179.568 14.3976 179.568 14.631C179.568 14.8476 179.513 15.0576 179.403 15.261C179.296 15.4643 179.141 15.6443 178.938 15.801C178.735 15.961 178.485 16.0876 178.188 16.181C177.895 16.2776 177.563 16.326 177.193 16.326C176.823 16.326 176.5 16.2893 176.223 16.216C175.946 16.1426 175.716 16.0443 175.533 15.921C175.35 15.7976 175.211 15.6543 175.118 15.491C175.028 15.331 174.983 15.1626 174.983 14.986C174.983 14.736 175.061 14.5243 175.218 14.351C175.375 14.1776 175.59 14.0393 175.863 13.936C175.713 13.8693 175.593 13.781 175.503 13.671C175.416 13.5576 175.373 13.406 175.373 13.216C175.373 13.1426 175.386 13.0676 175.413 12.991C175.44 12.911 175.48 12.8326 175.533 12.756C175.59 12.676 175.658 12.601 175.738 12.531C175.818 12.461 175.911 12.3993 176.018 12.346C175.768 12.206 175.573 12.021 175.433 11.791C175.293 11.5576 175.223 11.2876 175.223 10.981C175.223 10.7343 175.27 10.511 175.363 10.311C175.46 10.1076 175.593 9.93598 175.763 9.79598C175.933 9.65264 176.135 9.54264 176.368 9.46598C176.605 9.38931 176.863 9.35098 177.143 9.35098C177.363 9.35098 177.568 9.37598 177.758 9.42598C177.948 9.47264 178.121 9.54264 178.278 9.63598H179.653ZM183.318 12.221C182.908 12.2343 182.558 12.2676 182.268 12.321C181.981 12.371 181.746 12.4376 181.563 12.521C181.383 12.6043 181.251 12.7026 181.168 12.816C181.088 12.9293 181.048 13.056 181.048 13.196C181.048 13.3293 181.07 13.4443 181.113 13.541C181.156 13.6376 181.215 13.7176 181.288 13.781C181.365 13.841 181.453 13.886 181.553 13.916C181.656 13.9426 181.766 13.956 181.883 13.956C182.04 13.956 182.183 13.941 182.313 13.911C182.443 13.8776 182.565 13.831 182.678 13.771C182.795 13.711 182.905 13.6393 183.008 13.556C183.115 13.4726 183.218 13.3776 183.318 13.271V12.221ZM180.443 10.151C180.723 9.88098 181.025 9.67931 181.348 9.54598C181.671 9.41264 182.03 9.34598 182.423 9.34598C182.706 9.34598 182.958 9.39264 183.178 9.48598C183.398 9.57931 183.583 9.70931 183.733 9.87598C183.883 10.0426 183.996 10.2443 184.073 10.481C184.15 10.7176 184.188 10.9776 184.188 11.261V14.501H183.793C183.706 14.501 183.64 14.4876 183.593 14.461C183.546 14.431 183.51 14.3743 183.483 14.291L183.383 13.811C183.25 13.9343 183.12 14.0443 182.993 14.141C182.866 14.2343 182.733 14.3143 182.593 14.381C182.453 14.4443 182.303 14.4926 182.143 14.526C181.986 14.5626 181.811 14.581 181.618 14.581C181.421 14.581 181.236 14.5543 181.063 14.501C180.89 14.4443 180.738 14.361 180.608 14.251C180.481 14.141 180.38 14.0026 180.303 13.836C180.23 13.666 180.193 13.466 180.193 13.236C180.193 13.036 180.248 12.8443 180.358 12.661C180.468 12.4743 180.646 12.3093 180.893 12.166C181.14 12.0226 181.461 11.906 181.858 11.816C182.255 11.7226 182.741 11.6693 183.318 11.656V11.261C183.318 10.8676 183.233 10.571 183.063 10.371C182.893 10.1676 182.645 10.066 182.318 10.066C182.098 10.066 181.913 10.0943 181.763 10.151C181.616 10.2043 181.488 10.266 181.378 10.336C181.271 10.4026 181.178 10.4643 181.098 10.521C181.021 10.5743 180.945 10.601 180.868 10.601C180.808 10.601 180.756 10.586 180.713 10.556C180.67 10.5226 180.633 10.4826 180.603 10.436L180.443 10.151ZM187.031 14.581C186.631 14.581 186.322 14.4693 186.106 14.246C185.892 14.0226 185.786 13.701 185.786 13.281V10.181H185.176C185.122 10.181 185.077 10.166 185.041 10.136C185.004 10.1026 184.986 10.0526 184.986 9.98598V9.63098L185.816 9.52598L186.021 7.96098C186.031 7.91098 186.052 7.87098 186.086 7.84098C186.122 7.80764 186.169 7.79098 186.226 7.79098H186.676V9.53598H188.141V10.181H186.676V13.221C186.676 13.4343 186.727 13.5926 186.831 13.696C186.934 13.7993 187.067 13.851 187.231 13.851C187.324 13.851 187.404 13.8393 187.471 13.816C187.541 13.7893 187.601 13.761 187.651 13.731C187.701 13.701 187.742 13.6743 187.776 13.651C187.812 13.6243 187.844 13.611 187.871 13.611C187.917 13.611 187.959 13.6393 187.996 13.696L188.256 14.121C188.102 14.2643 187.917 14.3776 187.701 14.461C187.484 14.541 187.261 14.581 187.031 14.581ZM192.42 11.416C192.42 11.2093 192.39 11.021 192.33 10.851C192.274 10.6776 192.189 10.5293 192.075 10.406C191.965 10.2793 191.83 10.1826 191.67 10.116C191.51 10.046 191.329 10.011 191.125 10.011C190.699 10.011 190.36 10.136 190.11 10.386C189.864 10.6326 189.71 10.976 189.65 11.416H192.42ZM193.14 13.791C193.03 13.9243 192.899 14.041 192.745 14.141C192.592 14.2376 192.427 14.3176 192.25 14.381C192.077 14.4443 191.897 14.491 191.71 14.521C191.524 14.5543 191.339 14.571 191.155 14.571C190.805 14.571 190.482 14.5126 190.185 14.396C189.892 14.276 189.637 14.1026 189.42 13.876C189.207 13.646 189.04 13.3626 188.92 13.026C188.8 12.6893 188.74 12.3026 188.74 11.866C188.74 11.5126 188.794 11.1826 188.9 10.876C189.01 10.5693 189.167 10.3043 189.37 10.081C189.574 9.85431 189.822 9.67764 190.115 9.55098C190.409 9.42098 190.739 9.35598 191.105 9.35598C191.409 9.35598 191.689 9.40764 191.945 9.51098C192.205 9.61098 192.429 9.75764 192.615 9.95098C192.805 10.141 192.954 10.3776 193.06 10.661C193.167 10.941 193.22 11.261 193.22 11.621C193.22 11.761 193.205 11.8543 193.175 11.901C193.145 11.9476 193.089 11.971 193.005 11.971H189.62C189.63 12.291 189.674 12.5693 189.75 12.806C189.83 13.0426 189.94 13.241 190.08 13.401C190.22 13.5576 190.387 13.676 190.58 13.756C190.774 13.8326 190.99 13.871 191.23 13.871C191.454 13.871 191.645 13.846 191.805 13.796C191.969 13.7426 192.109 13.686 192.225 13.626C192.342 13.566 192.439 13.511 192.515 13.461C192.595 13.4076 192.664 13.381 192.72 13.381C192.794 13.381 192.85 13.4093 192.89 13.466L193.14 13.791ZM197.263 10.271C197.223 10.3443 197.162 10.381 197.078 10.381C197.028 10.381 196.972 10.3626 196.908 10.326C196.845 10.2893 196.767 10.2493 196.673 10.206C196.583 10.1593 196.475 10.1176 196.348 10.081C196.222 10.041 196.072 10.021 195.898 10.021C195.748 10.021 195.613 10.041 195.493 10.081C195.373 10.1176 195.27 10.1693 195.183 10.236C195.1 10.3026 195.035 10.381 194.988 10.471C194.945 10.5576 194.923 10.6526 194.923 10.756C194.923 10.886 194.96 10.9943 195.033 11.081C195.11 11.1676 195.21 11.2426 195.333 11.306C195.457 11.3693 195.597 11.426 195.753 11.476C195.91 11.5226 196.07 11.5743 196.233 11.631C196.4 11.6843 196.562 11.7443 196.718 11.811C196.875 11.8776 197.015 11.961 197.138 12.061C197.262 12.161 197.36 12.2843 197.433 12.431C197.51 12.5743 197.548 12.7476 197.548 12.951C197.548 13.1843 197.507 13.401 197.423 13.601C197.34 13.7976 197.217 13.9693 197.053 14.116C196.89 14.2593 196.69 14.3726 196.453 14.456C196.217 14.5393 195.943 14.581 195.633 14.581C195.28 14.581 194.96 14.5243 194.673 14.411C194.387 14.2943 194.143 14.146 193.943 13.966L194.153 13.626C194.18 13.5826 194.212 13.5493 194.248 13.526C194.285 13.5026 194.332 13.491 194.388 13.491C194.448 13.491 194.512 13.5143 194.578 13.561C194.645 13.6076 194.725 13.6593 194.818 13.716C194.915 13.7726 195.032 13.8243 195.168 13.871C195.305 13.9176 195.475 13.941 195.678 13.941C195.852 13.941 196.003 13.9193 196.133 13.876C196.263 13.8293 196.372 13.7676 196.458 13.691C196.545 13.6143 196.608 13.526 196.648 13.426C196.692 13.326 196.713 13.2193 196.713 13.106C196.713 12.966 196.675 12.851 196.598 12.761C196.525 12.6676 196.427 12.5893 196.303 12.526C196.18 12.4593 196.038 12.4026 195.878 12.356C195.722 12.306 195.56 12.2543 195.393 12.201C195.23 12.1476 195.068 12.0876 194.908 12.021C194.752 11.951 194.612 11.8643 194.488 11.761C194.365 11.6576 194.265 11.531 194.188 11.381C194.115 11.2276 194.078 11.0426 194.078 10.826C194.078 10.6326 194.118 10.4476 194.198 10.271C194.278 10.091 194.395 9.93431 194.548 9.80098C194.702 9.66431 194.89 9.55598 195.113 9.47598C195.337 9.39598 195.592 9.35598 195.878 9.35598C196.212 9.35598 196.51 9.40931 196.773 9.51598C197.04 9.61931 197.27 9.76264 197.463 9.94598L197.263 10.271ZM204.588 11.416C204.588 11.2093 204.558 11.021 204.498 10.851C204.441 10.6776 204.356 10.5293 204.243 10.406C204.133 10.2793 203.998 10.1826 203.838 10.116C203.678 10.046 203.496 10.011 203.293 10.011C202.866 10.011 202.528 10.136 202.278 10.386C202.031 10.6326 201.878 10.976 201.818 11.416H204.588ZM205.308 13.791C205.198 13.9243 205.066 14.041 204.913 14.141C204.76 14.2376 204.595 14.3176 204.418 14.381C204.245 14.4443 204.065 14.491 203.878 14.521C203.691 14.5543 203.506 14.571 203.323 14.571C202.973 14.571 202.65 14.5126 202.353 14.396C202.06 14.276 201.805 14.1026 201.588 13.876C201.375 13.646 201.208 13.3626 201.088 13.026C200.968 12.6893 200.908 12.3026 200.908 11.866C200.908 11.5126 200.961 11.1826 201.068 10.876C201.178 10.5693 201.335 10.3043 201.538 10.081C201.741 9.85431 201.99 9.67764 202.283 9.55098C202.576 9.42098 202.906 9.35598 203.273 9.35598C203.576 9.35598 203.856 9.40764 204.113 9.51098C204.373 9.61098 204.596 9.75764 204.783 9.95098C204.973 10.141 205.121 10.3776 205.228 10.661C205.335 10.941 205.388 11.261 205.388 11.621C205.388 11.761 205.373 11.8543 205.343 11.901C205.313 11.9476 205.256 11.971 205.173 11.971H201.788C201.798 12.291 201.841 12.5693 201.918 12.806C201.998 13.0426 202.108 13.241 202.248 13.401C202.388 13.5576 202.555 13.676 202.748 13.756C202.941 13.8326 203.158 13.871 203.398 13.871C203.621 13.871 203.813 13.846 203.973 13.796C204.136 13.7426 204.276 13.686 204.393 13.626C204.51 13.566 204.606 13.511 204.683 13.461C204.763 13.4076 204.831 13.381 204.888 13.381C204.961 13.381 205.018 13.4093 205.058 13.466L205.308 13.791ZM210.714 9.43598L208.649 14.501H207.849L205.784 9.43598H206.509C206.582 9.43598 206.642 9.45431 206.689 9.49098C206.736 9.52764 206.767 9.57098 206.784 9.62098L208.069 12.881C208.109 13.0043 208.144 13.1243 208.174 13.241C208.204 13.3576 208.232 13.4743 208.259 13.591C208.286 13.4743 208.314 13.3576 208.344 13.241C208.374 13.1243 208.411 13.0043 208.454 12.881L209.754 9.62098C209.774 9.56764 209.807 9.52431 209.854 9.49098C209.901 9.45431 209.956 9.43598 210.019 9.43598H210.714ZM214.783 11.416C214.783 11.2093 214.753 11.021 214.693 10.851C214.637 10.6776 214.552 10.5293 214.438 10.406C214.328 10.2793 214.193 10.1826 214.033 10.116C213.873 10.046 213.692 10.011 213.488 10.011C213.062 10.011 212.723 10.136 212.473 10.386C212.227 10.6326 212.073 10.976 212.013 11.416H214.783ZM215.503 13.791C215.393 13.9243 215.262 14.041 215.108 14.141C214.955 14.2376 214.79 14.3176 214.613 14.381C214.44 14.4443 214.26 14.491 214.073 14.521C213.887 14.5543 213.702 14.571 213.518 14.571C213.168 14.571 212.845 14.5126 212.548 14.396C212.255 14.276 212 14.1026 211.783 13.876C211.57 13.646 211.403 13.3626 211.283 13.026C211.163 12.6893 211.103 12.3026 211.103 11.866C211.103 11.5126 211.157 11.1826 211.263 10.876C211.373 10.5693 211.53 10.3043 211.733 10.081C211.937 9.85431 212.185 9.67764 212.478 9.55098C212.772 9.42098 213.102 9.35598 213.468 9.35598C213.772 9.35598 214.052 9.40764 214.308 9.51098C214.568 9.61098 214.792 9.75764 214.978 9.95098C215.168 10.141 215.317 10.3776 215.423 10.661C215.53 10.941 215.583 11.261 215.583 11.621C215.583 11.761 215.568 11.8543 215.538 11.901C215.508 11.9476 215.452 11.971 215.368 11.971H211.983C211.993 12.291 212.037 12.5693 212.113 12.806C212.193 13.0426 212.303 13.241 212.443 13.401C212.583 13.5576 212.75 13.676 212.943 13.756C213.137 13.8326 213.353 13.871 213.593 13.871C213.817 13.871 214.008 13.846 214.168 13.796C214.332 13.7426 214.472 13.686 214.588 13.626C214.705 13.566 214.802 13.511 214.878 13.461C214.958 13.4076 215.027 13.381 215.083 13.381C215.157 13.381 215.213 13.4093 215.253 13.466L215.503 13.791ZM217.517 10.171C217.627 10.0476 217.743 9.93598 217.867 9.83598C217.99 9.73598 218.12 9.65098 218.257 9.58098C218.397 9.50764 218.543 9.45264 218.697 9.41598C218.853 9.37598 219.022 9.35598 219.202 9.35598C219.478 9.35598 219.722 9.40264 219.932 9.49598C220.145 9.58598 220.322 9.71598 220.462 9.88598C220.605 10.0526 220.713 10.2543 220.787 10.491C220.86 10.7276 220.897 10.9893 220.897 11.276V14.501H220.002V11.276C220.002 10.8926 219.913 10.596 219.737 10.386C219.563 10.1726 219.298 10.066 218.942 10.066C218.678 10.066 218.432 10.1293 218.202 10.256C217.975 10.3826 217.765 10.5543 217.572 10.771V14.501H216.677V9.43598H217.212C217.338 9.43598 217.417 9.49764 217.447 9.62098L217.517 10.171ZM223.739 14.581C223.339 14.581 223.031 14.4693 222.814 14.246C222.601 14.0226 222.494 13.701 222.494 13.281V10.181H221.884C221.831 10.181 221.786 10.166 221.749 10.136C221.713 10.1026 221.694 10.0526 221.694 9.98598V9.63098L222.524 9.52598L222.729 7.96098C222.739 7.91098 222.761 7.87098 222.794 7.84098C222.831 7.80764 222.878 7.79098 222.934 7.79098H223.384V9.53598H224.849V10.181H223.384V13.221C223.384 13.4343 223.436 13.5926 223.539 13.696C223.643 13.7993 223.776 13.851 223.939 13.851C224.033 13.851 224.113 13.8393 224.179 13.816C224.249 13.7893 224.309 13.761 224.359 13.731C224.409 13.701 224.451 13.6743 224.484 13.651C224.521 13.6243 224.553 13.611 224.579 13.611C224.626 13.611 224.668 13.6393 224.704 13.696L224.964 14.121C224.811 14.2643 224.626 14.3776 224.409 14.461C224.193 14.541 223.969 14.581 223.739 14.581ZM228.718 10.271C228.678 10.3443 228.617 10.381 228.533 10.381C228.483 10.381 228.427 10.3626 228.363 10.326C228.3 10.2893 228.222 10.2493 228.128 10.206C228.038 10.1593 227.93 10.1176 227.803 10.081C227.677 10.041 227.527 10.021 227.353 10.021C227.203 10.021 227.068 10.041 226.948 10.081C226.828 10.1176 226.725 10.1693 226.638 10.236C226.555 10.3026 226.49 10.381 226.443 10.471C226.4 10.5576 226.378 10.6526 226.378 10.756C226.378 10.886 226.415 10.9943 226.488 11.081C226.565 11.1676 226.665 11.2426 226.788 11.306C226.912 11.3693 227.052 11.426 227.208 11.476C227.365 11.5226 227.525 11.5743 227.688 11.631C227.855 11.6843 228.017 11.7443 228.173 11.811C228.33 11.8776 228.47 11.961 228.593 12.061C228.717 12.161 228.815 12.2843 228.888 12.431C228.965 12.5743 229.003 12.7476 229.003 12.951C229.003 13.1843 228.962 13.401 228.878 13.601C228.795 13.7976 228.672 13.9693 228.508 14.116C228.345 14.2593 228.145 14.3726 227.908 14.456C227.672 14.5393 227.398 14.581 227.088 14.581C226.735 14.581 226.415 14.5243 226.128 14.411C225.842 14.2943 225.598 14.146 225.398 13.966L225.608 13.626C225.635 13.5826 225.667 13.5493 225.703 13.526C225.74 13.5026 225.787 13.491 225.843 13.491C225.903 13.491 225.967 13.5143 226.033 13.561C226.1 13.6076 226.18 13.6593 226.273 13.716C226.37 13.7726 226.487 13.8243 226.623 13.871C226.76 13.9176 226.93 13.941 227.133 13.941C227.307 13.941 227.458 13.9193 227.588 13.876C227.718 13.8293 227.827 13.7676 227.913 13.691C228 13.6143 228.063 13.526 228.103 13.426C228.147 13.326 228.168 13.2193 228.168 13.106C228.168 12.966 228.13 12.851 228.053 12.761C227.98 12.6676 227.882 12.5893 227.758 12.526C227.635 12.4593 227.493 12.4026 227.333 12.356C227.177 12.306 227.015 12.2543 226.848 12.201C226.685 12.1476 226.523 12.0876 226.363 12.021C226.207 11.951 226.067 11.8643 225.943 11.761C225.82 11.6576 225.72 11.531 225.643 11.381C225.57 11.2276 225.533 11.0426 225.533 10.826C225.533 10.6326 225.573 10.4476 225.653 10.271C225.733 10.091 225.85 9.93431 226.003 9.80098C226.157 9.66431 226.345 9.55598 226.568 9.47598C226.792 9.39598 227.047 9.35598 227.333 9.35598C227.667 9.35598 227.965 9.40931 228.228 9.51598C228.495 9.61931 228.725 9.76264 228.918 9.94598L228.718 10.271Z"
        fill={isLightTheme ? '#525266' : '#BEBECC'}
      />
      <defs>
        <clipPath id="clip0_571_18377">
          <rect width="16" height="16" fill="white" transform="translate(0 20.5056)" />
        </clipPath>
        <clipPath id="clip1_571_18377">
          <rect width="16" height="16" fill="white" transform="translate(100 20.5056)" />
        </clipPath>
        <clipPath id="clip2_571_18377">
          <rect width="16" height="16" fill="white" transform="translate(264 20.5056)" />
        </clipPath>
      </defs>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useMantineTheme } from '@mantine/core';
import { useMemo } from 'react';
export const RegularInfo = () => {
const { colorScheme } = useMantineTheme();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/workflow/edge-types/AddNodeEdge.tsx
Tamaño: 1839 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { EdgeProps, getBezierEdgeCenter, getBezierPath } from 'react-flow-renderer';
import styled from '@emotion/styled';
import AddNode from '../node-types/AddNode';

const foreignObjectSize = 30;

export function AddNodeEdge({
  id,
  sourceX,
  sourceY,
  targetX,
  targetY,
  sourcePosition,
  targetPosition,
  style = {},
  data,
  markerEnd,
}: EdgeProps) {
  const [centerX, centerY] = getBezierEdgeCenter({
    sourceX,
    sourceY,
    sourcePosition,
    targetX,
    targetY,
    targetPosition,
  });

  const edgePath = getBezierPath({
    sourceX,
    sourceY,
    sourcePosition,
    targetX,
    targetY,
    targetPosition,
  });

  const { childId, parentId, addNewNode, readonly } = data;

  return (
    <>
      <path style={style} className="react-flow__edge-path" d={edgePath} markerEnd={markerEnd} />

      <NodeWrapper
        size={foreignObjectSize}
        width={foreignObjectSize}
        height={foreignObjectSize}
        x={centerX - foreignObjectSize / 2}
        y={centerY - foreignObjectSize / 2}
        requiredExtensions="http://www.w3.org/1999/xhtml"
        id={`edge-button-${parentId}`}
        className={id}
      >
        <div>
          <AddNode
            data={{
              parentId,
              addNewNode,
              showDropZone: false,
              childId,
              readonly,
            }}
          />
        </div>
      </NodeWrapper>
    </>
  );
}

const NodeWrapper = styled.foreignObject<{ size: number }>`
  opacity: 0;
  height: ${({ size }) => `${size}px`};
  width: ${({ size }) => `${size}px`};
  -webkit-transition: opacity 0.3s ease-in-out;
  -moz-transition: opacity 0.3s ease-in-out;
  -ms-transition: opacity 0.3s ease-in-out;
  -o-transition: opacity 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out;

  &.fade {
    opacity: 1;
  }
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { EdgeProps, getBezierEdgeCenter, getBezierPath } from 'react-flow-renderer';
import styled from '@emotion/styled';
import AddNode from '../node-types/AddNode';
const foreignObjectSize = 30;
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/workflow/node-types/AddNode.tsx
Tamaño: 4329 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { memo } from 'react';
import { ActionIcon, useMantineTheme } from '@mantine/core';
import styled from '@emotion/styled';

import {
  Digest,
  Mail,
  Mobile,
  PlusCircleOutlined,
  Chat,
  Sms,
  InApp,
  Timer,
  colors,
  Dropdown,
  Text,
} from '@novu/design-system';
import { StepTypeEnum } from '@novu/shared';

interface NodeData {
  addNewNode: (parentId: string, type: string, childId?: string) => void;
  parentId: string;
  showDropZone: boolean;
  childId: string;
  readonly: boolean;
}
export default memo(({ data }: { data: NodeData }) => {
  const { parentId, childId } = data;
  const theme = useMantineTheme();
  const addNewNode = (type) => {
    data.addNewNode(data.parentId, type, data.childId);
  };

  const dataTestId = parentId && childId ? `addNodeButton_${parentId}_${childId}` : 'addNodeButton';

  if (data.readonly) {
    return null;
  }

  return (
    <Container data-test-id={dataTestId} style={{ pointerEvents: 'none' }}>
      <Dropdown
        position="right"
        middlewares={{ flip: false, shift: true }}
        withinPortal
        control={
          <ActionIcon
            data-test-id="button-add"
            sx={{
              '&:active': {
                color: theme.colorScheme === 'dark' ? colors.white : colors.B40,
              },
              zIndex: 9999,
              pointerEvents: 'all',
              color: theme.colorScheme === 'dark' ? (data.showDropZone ? colors.white : colors.B60) : colors.B60,
              '&:hover': {
                color: theme.colorScheme === 'dark' ? colors.white : colors.B40,
              },
            }}
            variant="transparent"
          >
            <PlusCircleOutlined fillColor={theme.colorScheme === 'dark' ? colors.B15 : 'transparent'} />
          </ActionIcon>
        }
      >
        <Dropdown.Item
          data-test-id={`add-in-app-node`}
          icon={<InApp />}
          onClick={() => addNewNode(StepTypeEnum.IN_APP)}
        >
          In-App
        </Dropdown.Item>
        <Dropdown.Item data-test-id={`add-email-node`} icon={<Mail />} onClick={() => addNewNode(StepTypeEnum.EMAIL)}>
          Email
        </Dropdown.Item>
        <Dropdown.Item data-test-id={`add-sms-node`} icon={<Sms />} onClick={() => addNewNode(StepTypeEnum.SMS)}>
          SMS
        </Dropdown.Item>
        <Dropdown.Item data-test-id={`add-chat-node`} icon={<Chat />} onClick={() => addNewNode(StepTypeEnum.CHAT)}>
          Chat
        </Dropdown.Item>
        <Dropdown.Item data-test-id={`add-push-node`} icon={<Mobile />} onClick={() => addNewNode(StepTypeEnum.PUSH)}>
          Push
        </Dropdown.Item>
        <Dropdown.Item
          data-test-id={`add-digest-node`}
          icon={
            /* Hack to manage the size of the SVG, which can't be changed with height and width attributes */
            <div style={{ zoom: 0.65, width: 28, marginLeft: 4 }}>
              <Digest color={theme.colorScheme === 'dark' ? colors.white : colors.B40} />
            </div>
          }
          onClick={() => addNewNode(StepTypeEnum.DIGEST)}
        >
          Digest
        </Dropdown.Item>
        <Dropdown.Item
          data-test-id={`add-delay-node`}
          icon={<Timer width={20} height={20} />}
          onClick={() => addNewNode(StepTypeEnum.DELAY)}
        >
          Delay
        </Dropdown.Item>
      </Dropdown>
      <Dropzone data-test-id="dropzone-area" dark={theme.colorScheme === 'dark'} visible={data.showDropZone}>
        <Text weight="bold" size="lg">
          Drag & Drop
        </Text>
        <Text mt={4} color={colors.B60}>
          Place your next step here
        </Text>
      </Dropzone>
    </Container>
  );
});

const Container = styled.div`
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
`;

const Dropzone = styled.div<{ dark: boolean; visible: boolean }>`
  opacity: ${({ visible }) => (visible ? 1 : 0)};
  background: ${({ dark }) => (dark ? colors.B17 : colors.B98)};
  color: ${({ dark }) => (dark ? colors.B98 : colors.B17)};
  border-radius: 7px;
  text-align: center;
  border: 1px dashed ${({ dark }) => (dark ? colors.B30 : colors.B80)};
  cursor: none;
  width: 300px;
  height: 115px;
  margin-top: 20px;
  display: flex;
  justify-content: center;
  flex-direction: column;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { memo } from 'react';
import { ActionIcon, useMantineTheme } from '@mantine/core';
import styled from '@emotion/styled';
import {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/workflow/node-types/ChannelNode.tsx
Tamaño: 4090 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { memo, useEffect, useState } from 'react';
import { Handle, Position, getOutgoers, useReactFlow, useNodes } from 'react-flow-renderer';
import { FilterPartTypeEnum } from '@novu/shared';

import { useParams } from 'react-router-dom';
import { useFormContext } from 'react-hook-form';
import { WorkflowNode } from './WorkflowNode';
import { INode } from '../../../../../components/workflow/types';
import { useStepSubtitle } from '../../../hooks/useStepSubtitle';
import { Conditions } from '../../../../../components/conditions';
import { useFilterPartsList } from '../../../hooks/useFilterPartsList';
import { IForm } from '../../../components/formTypes';

export default memo((node: INode) => {
  const { data, id, dragging } = node;
  const { isReadonly, testId, error, channelType, step, label, index, tabKey, Icon, onAddVariant, onDelete, onEdit } =
    data;
  const { setValue } = useFormContext<IForm>();
  const { getNode, getEdges, getNodes } = useReactFlow();
  const nodes = useNodes<INode['data']>();
  const thisNode = getNode(id);
  const isParent = thisNode ? getOutgoers(thisNode, getNodes(), getEdges()).length : false;
  const noChildStyle = isParent ? {} : { border: 'none', background: 'transparent' };
  const [count, setCount] = useState(0);
  const [areConditionsOpened, setConditionsOpened] = useState(false);
  const { stepUuid = '' } = useParams<{ stepUuid: string }>();
  const filterPartsList = useFilterPartsList({ index });

  useEffect(() => {
    const items = nodes
      .filter((el) => el.type === 'channelNode')
      .filter((el) => {
        return el.data.channelType === channelType;
      });

    if (items.length <= 1) {
      setCount(0);

      return;
    }

    const foundIndex = items.findIndex((el) => el.id === id);

    if (foundIndex === -1) {
      setCount(0);

      return;
    }

    setCount(foundIndex + 1);
  }, [nodes, channelType, id]);

  const subtitle = useStepSubtitle({ path: `steps.${index}`, step, channelType });

  if (!step) {
    return null;
  }

  const { active, uuid, name, stepId, filters: conditions } = step;
  const variantsCount = step.variants?.length;
  const conditionsCount = conditions && conditions.length > 0 ? (conditions[0].children?.length ?? 0) : 0;

  const onConditionsClose = () => setConditionsOpened(false);

  const onUpdateConditions = (newConditions) => {
    setValue(`steps.${index}.filters`, newConditions, { shouldDirty: true });
  };

  return (
    <div data-test-id={`node-${testId}`} style={{ pointerEvents: 'none' }}>
      <WorkflowNode
        errors={error}
        onEdit={(e) => {
          e.preventDefault();
          e.stopPropagation();

          onEdit(e, node);
        }}
        onDelete={() => {
          onDelete(uuid ?? '');
        }}
        onAddVariant={() => {
          onAddVariant(uuid ?? '');
        }}
        onAddConditions={(e) => {
          e.preventDefault();
          e.stopPropagation();

          setConditionsOpened(true);
        }}
        nodeType={variantsCount && variantsCount > 0 ? 'stepRoot' : 'step'}
        variantsCount={variantsCount}
        conditionsCount={conditionsCount}
        tabKey={tabKey}
        channelType={channelType}
        Icon={Icon}
        label={name || stepId ? name || (stepId as string) : label + (count > 0 ? ` (${count})` : '')}
        active={stepUuid === uuid}
        disabled={!active}
        id={id}
        index={index}
        testId={'channel-node'}
        dragging={dragging}
        subtitle={subtitle}
      />
      <Handle type="target" id="b" position={Position.Top} />
      <Handle style={noChildStyle} type="source" id="a" position={Position.Bottom} />
      {areConditionsOpened && (
        <Conditions
          isOpened={areConditionsOpened}
          isReadonly={isReadonly}
          name={name ?? ''}
          onClose={onConditionsClose}
          updateConditions={onUpdateConditions}
          conditions={conditions}
          filterPartsList={filterPartsList}
          defaultFilter={FilterPartTypeEnum.PAYLOAD}
        />
      )}
    </div>
  );
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { memo, useEffect, useState } from 'react';
import { Handle, Position, getOutgoers, useReactFlow, useNodes } from 'react-flow-renderer';
import { FilterPartTypeEnum } from '@novu/shared';
import { useParams } from 'react-router-dom';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/workflow/node-types/TriggerNode.tsx
Tamaño: 2913 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { StepTypeEnum } from '@novu/shared';
import { memo, useState } from 'react';
import { Handle, Position, useReactFlow } from 'react-flow-renderer';

import { createStyles, Stack, useMantineColorScheme } from '@mantine/core';
import { useDidUpdate } from '@mantine/hooks';
import { useFormContext } from 'react-hook-form';
import { colors, Tooltip, BoltOutlinedGradient, Check } from '@novu/design-system';
import { When } from '../../../../../components/utils/When';
import { IForm } from '../../../components/formTypes';
import { WorkflowNode } from './WorkflowNode';
import { INode } from '../../../../../components/workflow/types';

const useStyles = createStyles(
  (
    theme,
    params: {
      animate: boolean;
    }
  ) => ({
    savedIcon: {
      position: 'absolute',
      top: -11,
      right: -11,
      zIndex: 99999,
      height: 22,
      width: 22,
      borderRadius: 22,
      background: colors.success,
      animation: `fade-in-save-icon 2s linear 0s${params.animate ? ', pulse-animation-save-icon 2s linear 2s 3' : ''}`,
      '@keyframes fade-in-save-icon': {
        '0%': {
          opacity: 0,
        },
        '100%': {
          opacity: 1,
        },
      },
      '@keyframes pulse-animation-save-icon': {
        '0%': {
          boxShadow: '0 0 0 0 rgb(77, 153, 128, 0.7)',
        },
        '70%': {
          boxShadow: '0 0 0 10px rgba(77, 153, 128, 0)',
        },
        '100%': {
          boxShadow: '0 0 0 0 rgba(77, 153, 128, 0)',
        },
      },
    },
  })
);

export default memo(({ selected }: INode) => {
  const { getNodes } = useReactFlow();
  const isParent = getNodes().length > 1;
  const noChildStyle = isParent ? {} : { border: 'none', background: 'transparent' };
  const {
    formState: { isDirty },
  } = useFormContext<IForm>();
  const theme = useMantineColorScheme();
  const [shouldAnimate, setShouldAnimate] = useState(false);
  const { classes } = useStyles({
    animate: shouldAnimate,
  });

  useDidUpdate(() => {
    setShouldAnimate(true);
  }, [isDirty]);

  return (
    <div data-test-id={'node-triggerSelector'} style={{ pointerEvents: 'none', width: '100%' }}>
      <When truthy={!isDirty}>
        <Tooltip label="Workflow is saved">
          <div className={classes.savedIcon}>
            <Stack
              justify="center"
              align="center"
              sx={{
                height: '100%',
              }}
            >
              <Check color={theme.colorScheme === 'dark' ? colors.B15 : colors.white} />
            </Stack>
          </div>
        </Tooltip>
      </When>
      <WorkflowNode
        Icon={BoltOutlinedGradient}
        label="Workflow trigger"
        active={selected}
        channelType={StepTypeEnum.TRIGGER}
        subtitle="Notification call"
      />
      <Handle style={noChildStyle} type="source" id="a" position={Position.Bottom} />
    </div>
  );
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { StepTypeEnum } from '@novu/shared';
import { memo, useState } from 'react';
import { Handle, Position, useReactFlow } from 'react-flow-renderer';
import { createStyles, Stack, useMantineColorScheme } from '@mantine/core';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/workflow/node-types/WorkflowNode.tsx
Tamaño: 16890 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import { Divider, Group, useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum, providers, StepTypeEnum } from '@novu/shared';
import React, { MouseEventHandler, useEffect, useState } from 'react';
import { useViewport } from 'react-flow-renderer';
import { useFormContext } from 'react-hook-form';

import {
  Button,
  colors,
  IDropdownProps,
  ProviderMissing,
  Text,
  useTemplateButtonStyles,
  VariantsFile,
  ErrorIcon,
} from '@novu/design-system';
import { useSegment } from '../../../../../components/providers/SegmentProvider';
import { When } from '../../../../../components/utils/When';
import { CONTEXT_PATH } from '../../../../../config';
import { useEnvironment, useGetPrimaryIntegration, useHasActiveIntegrations } from '../../../../../hooks';
import { CHANNEL_TYPE_TO_STRING } from '../../../../../utils/channels';
import { useSelectPrimaryIntegrationModal } from '../../../../integrations/components/multi-provider/useSelectPrimaryIntegrationModal';
import { IntegrationsListModal } from '../../../../integrations/IntegrationsListModal';
import { TemplateEditorAnalyticsEnum } from '../../../constants';
import { getFormattedStepErrors, hasGroupError } from '../../../shared/errors';
import { DisplayPrimaryProviderIcon } from '../../DisplayPrimaryProviderIcon';
import { NodeErrorPopover } from '../../NodeErrorPopover';
import { NODE_ERROR_TYPES } from './utils';
import { WorkflowNodeActions } from './WorkflowNodeActions';
import { useTemplateEditorForm } from '../../../components/TemplateEditorFormProvider';

export type NodeType = 'step' | 'stepRoot' | 'variant' | 'variantRoot';

interface IWorkflowNodeProps {
  Icon: React.FC<any>;
  label: string;
  active?: boolean;
  testId?: string;
  tabKey?: ChannelTypeEnum;
  channelType: StepTypeEnum;
  changeTab?: (string) => void;
  errors?: boolean | string;
  id?: string;
  index?: number;
  onClick?: MouseEventHandler<HTMLDivElement>;
  onDelete?: () => void;
  onAddVariant?: () => void;
  onEdit?: MouseEventHandler<HTMLButtonElement>;
  onAddConditions?: MouseEventHandler<HTMLButtonElement>;
  dragging?: boolean;
  disabled?: boolean;
  variantsCount?: number;
  conditionsCount?: number;
  subtitle?: string | React.ReactNode;
  className?: string;
  menuPosition?: IDropdownProps['position'];
  nodeType?: NodeType;
  nodeErrorType?: NODE_ERROR_TYPES;
}

const MENU_CLICK_OUTSIDE_EVENTS = ['click', 'mousedown', 'touchstart'];

export function WorkflowNode({
  active = false,
  label,
  Icon,
  tabKey,
  channelType,
  index,
  testId,
  errors: initialErrors = false,
  variantsCount = 0,
  conditionsCount = 0,
  id = undefined,
  onClick,
  onDelete,
  onAddVariant,
  onEdit,
  onAddConditions,
  dragging = false,
  disabled: initDisabled,
  subtitle,
  className,
  menuPosition,
  nodeType = 'step',
  nodeErrorType,
}: IWorkflowNodeProps) {
  const segment = useSegment();

  const { template } = useTemplateEditorForm();
  const { readonly: readonlyEnv, environment, bridge } = useEnvironment({ bridge: template?.bridge });
  const { cx, classes, theme } = useTemplateButtonStyles();
  const [popoverOpened, setPopoverOpened] = useState(false);
  const [disabled, setDisabled] = useState(initDisabled);
  const [isIntegrationsModalVisible, setIntegrationsModalVisible] = useState(false);
  const disabledColor = disabled ? { color: theme.colorScheme === 'dark' ? colors.B40 : colors.B70 } : {};
  const disabledProp = disabled ? { disabled } : {};
  const isStepRoot = nodeType === 'stepRoot';
  const isVariant = nodeType === 'variant';
  const isVariantRoot = nodeType === 'variantRoot';

  const viewport = useViewport();
  const channelKey = tabKey ?? '';
  const [hover, setHover] = useState(false);
  const { colorScheme } = useMantineColorScheme();
  const { openModal: openSelectPrimaryIntegrationModal, SelectPrimaryIntegrationModal } =
    useSelectPrimaryIntegrationModal();

  const { hasActiveIntegration, isChannelStep, activeIntegrationsByEnv } = useHasActiveIntegrations({
    filterByEnv: true,
    channelType: channelType as unknown as ChannelTypeEnum,
  });
  const { primaryIntegration, isPrimaryStep } = useGetPrimaryIntegration({
    filterByEnv: true,
    channelType: channelType as unknown as ChannelTypeEnum,
  });

  const onIntegrationModalClose = () => {
    setIntegrationsModalVisible(false);
    setPopoverOpened(false);
  };

  const {
    watch,
    formState: { errors },
  } = useFormContext();

  let stepErrorContent = initialErrors;
  let showGroupError = false;
  if (typeof index === 'number') {
    stepErrorContent = getFormattedStepErrors(index, errors);
    showGroupError = isStepRoot && hasGroupError(index, errors);
  }

  const showMenu = !dragging && hover;

  useEffect(() => {
    const subscription = watch((values) => {
      const thisStep = values.steps.find((step) => step._id === id);

      if (thisStep) {
        setDisabled(!thisStep.active);
      }
    });

    return () => subscription.unsubscribe();
  }, [watch, id]);

  const providerIntegration = isPrimaryStep
    ? primaryIntegration
    : activeIntegrationsByEnv?.find((integration) => integration.channel === channelKey)?.providerId;

  const provider = providers.find((_provider) => _provider.id === providerIntegration);

  const logoSrc = provider && `${CONTEXT_PATH}/static/images/providers/${colorScheme}/square/${provider?.id}.svg`;

  return (
    <>
      <WorkflowNodeButton
        role={'button'}
        onClick={onClick}
        onMouseEnter={() => {
          setPopoverOpened(true);
          setHover(true);
        }}
        onMouseLeave={() => {
          setPopoverOpened(false);
          setHover(false);
        }}
        data-test-id={testId}
        className={cx(
          className,
          classes.button,
          { [classes.active]: active },
          { [classes.variant]: isStepRoot },
          { [classes.variantRoot]: isVariantRoot && !active }
        )}
      >
        <WorkflowNodeWrapper>
          <When truthy={isStepRoot}>
            <NodeErrorPopover
              withinPortal
              opened={popoverOpened && showGroupError}
              transition="rotate-left"
              transitionDuration={250}
              offset={theme.spacing.xs}
              positionDependencies={[dragging, viewport]}
              clickOutsideEvents={MENU_CLICK_OUTSIDE_EVENTS}
              target={
                <ActionWrapper showGroupError={showGroupError}>
                  {showGroupError ? (
                    <Group spacing={4} position="left" noWrap>
                      <ErrorIcon color={colors.error} style={{ width: '16px', minWidth: '16px', height: '16px' }} />
                      <Text color={colors.error} rows={1} weight="bold">
                        Some variants contain errors
                      </Text>
                    </Group>
                  ) : (
                    <IconText
                      color={colors.B60}
                      Icon={VariantsFile}
                      label={
                        <>
                          {variantsCount} <span style={{ fontSize: '12px' }}>variants</span>
                        </>
                      }
                      data-test-id="variants-count"
                    />
                  )}
                  <WorkflowNodeActions
                    nodeType={nodeType}
                    showMenu={showMenu}
                    isReadOnly={readonlyEnv}
                    menuPosition={menuPosition}
                    conditionsCount={conditionsCount}
                    channelType={channelType}
                    onEdit={onEdit}
                    onAddConditions={onAddConditions}
                    onAddVariant={onAddVariant}
                    onDelete={onDelete}
                  />
                </ActionWrapper>
              }
              position="left"
              title="The group contains error!"
              content="Some variants contain errors that may cause notification failure."
            />

            <Divider
              ml={-7}
              mr={-7}
              size={2}
              my={0}
              variant={'dashed'}
              color={colorScheme === 'dark' ? colors.BGDark : colors.BGLight}
            />
          </When>

          <BodyWrapper>
            <DisplayPrimaryProviderIcon
              Icon={Icon}
              disabledProp={disabledProp}
              providerIntegration={providerIntegration}
              isChannelStep={isChannelStep}
              logoSrc={logoSrc}
            />

            <StyledContentWrapper>
              <Text {...disabledColor} weight="bold" rows={1} size={16} data-test-id="workflow-node-label">
                {label}
              </Text>

              {Object.keys(stepErrorContent).length > 0 && !bridge && (
                <Text {...disabledColor} size={12} color={colors.error} rows={1} data-test-id="workflow-node-error">
                  {stepErrorContent}
                </Text>
              )}
              {!(Object.keys(stepErrorContent).length > 0) && !bridge && subtitle && (
                <Text {...disabledColor} size={12} color={colors.B60} rows={1} data-test-id="workflow-node-subtitle">
                  {subtitle}
                </Text>
              )}
            </StyledContentWrapper>

            <When truthy={!isStepRoot}>
              <ActionTopWrapper>
                <WorkflowNodeActions
                  nodeType={nodeType}
                  showMenu={showMenu}
                  isReadOnly={readonlyEnv}
                  menuPosition={menuPosition}
                  conditionsCount={conditionsCount}
                  channelType={channelType}
                  onEdit={onEdit}
                  onAddConditions={onAddConditions}
                  onAddVariant={onAddVariant}
                  onDelete={onDelete}
                />
              </ActionTopWrapper>
            </When>
          </BodyWrapper>
        </WorkflowNodeWrapper>
        {!showGroupError && (
          <>
            {((isVariantRoot && nodeErrorType === NODE_ERROR_TYPES.MISSING_PROVIDER) ||
              (!hasActiveIntegration && !isVariant && !nodeErrorType)) && (
              <NodeErrorPopover
                opened={popoverOpened}
                withinPortal
                transition="rotate-left"
                transitionDuration={250}
                offset={theme.spacing.xs}
                target={
                  <ErrorCircle
                    data-test-id="error-circle"
                    dark={theme.colorScheme === 'dark'}
                    alignment={isVariant || isVariantRoot ? 'left' : 'right'}
                  />
                }
                position={isVariant || isVariantRoot ? 'left' : 'right'}
                titleIcon={<ProviderMissing />}
                title={`${CHANNEL_TYPE_TO_STRING[channelKey]} provider is not connected`}
                content={`Please configure or activate a provider instance for the ${
                  CHANNEL_TYPE_TO_STRING[channelKey]
                } channel to send notifications over this node`}
                actionItem={
                  <Button
                    onClick={() => {
                      segment.track(TemplateEditorAnalyticsEnum.CONFIGURE_PROVIDER_POPOVER_CLICK);
                      setIntegrationsModalVisible(true);
                      setPopoverOpened(false);
                    }}
                  >
                    Open integration store
                  </Button>
                }
              />
            )}
            {((isVariantRoot && nodeErrorType === NODE_ERROR_TYPES.MISSING_PRIMARY_PROVIDER) ||
              (hasActiveIntegration && !primaryIntegration && isPrimaryStep && !isVariant)) && (
              <NodeErrorPopover
                opened={popoverOpened}
                withinPortal
                transition="rotate-left"
                transitionDuration={250}
                offset={theme.spacing.xs}
                target={
                  <ErrorCircle
                    data-test-id="error-circle"
                    dark={theme.colorScheme === 'dark'}
                    alignment={isVariant || isVariantRoot ? 'left' : 'right'}
                  />
                }
                position={isVariant || isVariantRoot ? 'left' : 'right'}
                titleIcon={<ProviderMissing />}
                title="Select primary provider"
                content={`You have multiple provider instances for ${
                  CHANNEL_TYPE_TO_STRING[channelKey]
                } in the ${environment?.name} environment. Please select the primary instance.
            `}
                actionItem={
                  <Button
                    onClick={() => {
                      segment.track(TemplateEditorAnalyticsEnum.CONFIGURE_PROVIDER_POPOVER_CLICK);
                      openSelectPrimaryIntegrationModal({
                        environmentId: environment?._id,
                        channelType: tabKey,
                        onClose: () => {},
                      });
                      setPopoverOpened(false);
                    }}
                  >
                    Select primary provider
                  </Button>
                }
              />
            )}

            {((isVariantRoot && nodeErrorType === NODE_ERROR_TYPES.TEMPLATE_ERROR) ||
              isVariant ||
              hasActiveIntegration) &&
              stepErrorContent &&
              !bridge && (
                <NodeErrorPopover
                  withinPortal
                  opened={popoverOpened && Object.keys(stepErrorContent).length > 0}
                  transition="rotate-left"
                  transitionDuration={250}
                  offset={theme.spacing.xs}
                  positionDependencies={[dragging, viewport]}
                  clickOutsideEvents={MENU_CLICK_OUTSIDE_EVENTS}
                  target={
                    <ErrorCircle
                      data-test-id="error-circle"
                      dark={theme.colorScheme === 'dark'}
                      alignment={isVariant || isVariantRoot ? 'left' : 'right'}
                    />
                  }
                  position={isVariant || isVariantRoot ? 'left' : 'right'}
                  title={stepErrorContent || 'Something is missing here'}
                  content={`Please specify a ${(stepErrorContent as string)
                    .replace(/(is|are) missing!/g, '')
                    .toLowerCase()} to prevent sending empty notifications.`}
                />
              )}
          </>
        )}
      </WorkflowNodeButton>
      <IntegrationsListModal isOpen={isIntegrationsModalVisible} onClose={onIntegrationModalClose} scrollTo={tabKey} />
      <SelectPrimaryIntegrationModal />
    </>
  );
}

const IconText = ({
  color,
  label,
  Icon,
  'data-test-id': dataTestId,
}: {
  color?: string;
  label: any;
  Icon: React.FC<any>;
  'data-test-id'?: string;
}) => {
  return (
    <IconTextWrapper data-test-id={dataTestId}>
      <Icon color={color} width="20px" height="20px" />
      <Text color={color} weight={'bold'} size={14}>
        {label}
      </Text>
    </IconTextWrapper>
  );
};

const IconTextWrapper = styled.div`
  display: flex;
  align-items: center;
  gap: 8px;
  height: 28px;
`;

const WorkflowNodeWrapper = styled.div`
  display: flex;
  flex-direction: column;
  width: 100%;
`;

const ErrorCircle = styled.div<{ dark: boolean; alignment: 'left' | 'right' }>`
  width: 11px;
  height: 11px;
  display: inline-block;
  position: absolute;
  ${({ alignment }) => alignment}: -6px;
  top: calc(50% - 4px);
  background: ${colors.error};
  border-radius: 50%;
  border: 3px solid ${({ dark }) => (dark ? colors.B15 : 'white')};
`;

const ActionWrapper = styled.div<{ showGroupError?: boolean }>`
  display: flex;
  align-items: center;
  height: 40px;
  padding: 4px 12px;
  border-top-right-radius: 7px;
  border-top-left-radius: 7px;
  background: ${({ theme, showGroupError }) =>
    showGroupError && theme.colorScheme === 'dark' ? `${colors.errorGradient}, ${colors.B17}` : 'transparent'};
`;

const ActionTopWrapper = styled(ActionWrapper)`
  align-self: flex-start;
`;

const BodyWrapper = styled.div`
  display: flex;
  flex: 1 1 auto;
  gap: 16px;
  height: 80px;
  padding-left: 20px;
  align-items: center;
`;

const StyledContentWrapper = styled.div`
  display: flex;
  flex-direction: column;
  gap: 4px;
  overflow: hidden;
  justify-content: flex-start;
  width: 100%;
  flex: 1;
  padding-right: 20px;
`;

const WorkflowNodeButton = styled.div`
  display: flex;
  justify-content: space-between;
  position: relative;
  pointer-events: all;
  background-color: ${({ theme }) => (theme.colorScheme === 'dark' ? colors.B17 : colors.white)};
  width: 280px;
`;


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Divider, Group, useMantineColorScheme } from '@mantine/core';
import { ChannelTypeEnum, providers, StepTypeEnum } from '@novu/shared';
import React, { MouseEventHandler, useEffect, useState } from 'react';
import { useViewport } from 'react-flow-renderer';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/workflow/node-types/WorkflowNodeActions.tsx
Tamaño: 5999 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { MouseEventHandler } from 'react';
import styled from '@emotion/styled';
import { Group, Container } from '@mantine/core';
import {
  ActionButton,
  Dropdown,
  IDropdownProps,
  ConditionPlus,
  Condition,
  DotsHorizontal,
  NoConditions,
  PencilOutlined,
  Trash,
  VariantPlus,
} from '@novu/design-system';
import { DELAYED_STEPS, StepTypeEnum } from '@novu/shared';

import { NodeType } from './WorkflowNode';
import { When } from '../../../../../components/utils/When';

const ButtonsContainer = styled(Container)`
  padding: 0;
  margin-left: auto;
  margin-right: 0;
`;

const VARIANT_TYPE_TO_EDIT: Record<NodeType, string> = {
  step: 'Edit step',
  stepRoot: 'Edit root step',
  variant: 'Edit variant',
  variantRoot: 'Edit root step',
};

const VARIANT_TYPE_TO_ADD_CONDITIONS: Record<NodeType, string> = {
  step: 'Add conditions',
  stepRoot: 'Add group conditions',
  variant: 'Add variant conditions',
  variantRoot: 'Add group conditions',
};

const VARIANT_TYPE_TO_EDIT_CONDITIONS: Record<NodeType, string> = {
  step: 'Edit conditions',
  stepRoot: 'Edit group conditions',
  variant: 'Edit conditions',
  variantRoot: 'Edit group conditions',
};

const VARIANT_TYPE_TO_VIEW_CONDITIONS: Record<NodeType, string> = {
  step: 'View conditions',
  stepRoot: 'View group conditions',
  variant: 'View conditions',
  variantRoot: 'View group conditions',
};

const VARIANT_TYPE_TO_DELETE: Record<NodeType, string> = {
  step: 'Delete step',
  stepRoot: 'Delete step',
  variant: 'Delete variant',
  variantRoot: 'Delete step',
};

interface IWorkflowNodeActionsProps {
  nodeType: NodeType;
  menuPosition: IDropdownProps['position'];
  showMenu: boolean;
  isReadOnly: boolean;
  conditionsCount: number;
  channelType: StepTypeEnum;
  onDelete?: () => void;
  onAddVariant?: () => void;
  onEdit?: MouseEventHandler<HTMLButtonElement>;
  onAddConditions?: MouseEventHandler<HTMLButtonElement>;
}

export const WorkflowNodeActions = ({
  showMenu,
  isReadOnly,
  menuPosition,
  conditionsCount,
  nodeType = 'step',
  channelType,
  onEdit,
  onAddConditions,
  onAddVariant,
  onDelete,
}: IWorkflowNodeActionsProps) => {
  if (!onEdit && !onAddConditions) {
    return null;
  }

  if (nodeType === 'variantRoot') {
    return (
      <ButtonsContainer data-test-id="variant-root-actions">
        <When truthy={!showMenu}>
          <ActionButton
            onClick={onAddConditions}
            tooltip={
              conditionsCount > 0 ? VARIANT_TYPE_TO_EDIT_CONDITIONS[nodeType] : VARIANT_TYPE_TO_ADD_CONDITIONS[nodeType]
            }
            text="No"
            Icon={NoConditions}
            data-test-id="conditions-action"
          />
        </When>
        <When truthy={showMenu}>
          <Group noWrap spacing={5}>
            {onEdit && (
              <ActionButton
                onClick={onEdit}
                tooltip={VARIANT_TYPE_TO_EDIT[nodeType]}
                Icon={PencilOutlined}
                data-test-id="edit-step-action"
              />
            )}
          </Group>
        </When>
      </ButtonsContainer>
    );
  }

  const isDelayedStep = DELAYED_STEPS.includes(channelType);
  const conditionsAction = isReadOnly
    ? VARIANT_TYPE_TO_VIEW_CONDITIONS[nodeType]
    : conditionsCount > 0
      ? VARIANT_TYPE_TO_EDIT_CONDITIONS[nodeType]
      : VARIANT_TYPE_TO_ADD_CONDITIONS[nodeType];
  const conditionsIcon = isReadOnly || conditionsCount > 0 ? Condition : ConditionPlus;
  const isShowConditions = onAddConditions && (!isReadOnly || (isReadOnly && conditionsCount > 0));

  return (
    <ButtonsContainer data-test-id="step-actions">
      <When truthy={!showMenu && conditionsCount > 0}>
        <ActionButton
          onClick={onAddConditions}
          tooltip={conditionsAction}
          text={`${conditionsCount > 0 ? conditionsCount : ''}`}
          Icon={conditionsIcon}
          data-test-id="conditions-action"
        />
      </When>
      <When truthy={showMenu}>
        <Group noWrap spacing={5}>
          {onEdit && (
            <ActionButton
              onClick={onEdit}
              tooltip={VARIANT_TYPE_TO_EDIT[nodeType]}
              Icon={PencilOutlined}
              data-test-id="edit-action"
            />
          )}
          {isShowConditions && (
            <ActionButton
              onClick={onAddConditions}
              tooltip={conditionsAction}
              text={`${conditionsCount > 0 ? conditionsCount : ''}`}
              Icon={conditionsIcon}
              data-test-id="add-conditions-action"
            />
          )}
          <When truthy={!isReadOnly}>
            <Dropdown
              withinPortal
              position={menuPosition}
              withArrow={false}
              offset={0}
              control={
                <ActionButton
                  onClick={(e) => e.stopPropagation()}
                  Icon={DotsHorizontal}
                  data-test-id="step-actions-menu"
                />
              }
              middlewares={{ flip: false, shift: false }}
            >
              {onAddVariant && !isDelayedStep && (
                <Dropdown.Item
                  icon={<VariantPlus />}
                  onClick={(e) => {
                    e.stopPropagation();
                    onAddVariant();
                  }}
                  data-test-id="add-variant-action"
                >
                  Add variant
                </Dropdown.Item>
              )}
              {onDelete && (
                <Dropdown.Item
                  onClick={(e) => {
                    e.stopPropagation();
                    onDelete();
                  }}
                  icon={<Trash width="16px" height="16px" />}
                  data-test-id="delete-step-action"
                >
                  {VARIANT_TYPE_TO_DELETE[nodeType]}
                </Dropdown.Item>
              )}
            </Dropdown>
          </When>
        </Group>
      </When>
    </ButtonsContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { MouseEventHandler } from 'react';
import styled from '@emotion/styled';
import { Group, Container } from '@mantine/core';
import {
ActionButton,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/templates/workflow/workflow/node-types/utils.ts
Tamaño: 737 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { DelayTypeEnum, StepTypeEnum } from '@novu/shared';

import { IFlowStep } from '../../../../../components/workflow/types';

export function delaySubtitle(channelType: StepTypeEnum, step: IFlowStep) {
  if (channelType === StepTypeEnum.DELAY && step.delayMetadata) {
    if (step.delayMetadata.type === DelayTypeEnum.REGULAR) {
      return `Delay all events for ${step.delayMetadata.regular?.amount} ${step.delayMetadata.regular?.unit}`;
    } else {
      return `Delay all events on the basis of ${step.delayMetadata.scheduled?.delayPath} path`;
    }
  }
}

export enum NODE_ERROR_TYPES {
  MISSING_PROVIDER = 'missing_provider',
  MISSING_PRIMARY_PROVIDER = 'missing_primary_provider',
  TEMPLATE_ERROR = 'template_error',
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - delaySubtitle(channelType: StepTypeEnum, step: IFlowStep)
Declaraciones 'export' encontradas:
- export function delaySubtitle
- export  enum

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/pages/tenants/CreateTenantPage.tsx
Tamaño: 509 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useNavigate } from 'react-router-dom';

import { ROUTES } from '../../constants/routes';
import { CreateTenantSidebar } from './components/CreateTenantSidebar';

export function CreateTenantPage() {
  const navigate = useNavigate();

  const onClose = () => {
    navigate(ROUTES.TENANTS);
  };

  const onTenantCreated = (identifier: string) => {
    navigate(`${ROUTES.TENANTS}/${identifier}`);
  };

  return <CreateTenantSidebar isOpened onTenantCreated={onTenantCreated} onClose={onClose} />;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useNavigate } from 'react-router-dom';
import { ROUTES } from '../../constants/routes';
import { CreateTenantSidebar } from './components/CreateTenantSidebar';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/tenants/TenantsPage.tsx
Tamaño: 1226 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { useCallback, useEffect } from 'react';
import { Outlet, useNavigate } from 'react-router-dom';
import { Row } from 'react-table';
import { ITenantEntity } from '@novu/shared';

import PageContainer from '../../components/layout/components/PageContainer';
import PageHeader from '../../components/layout/components/PageHeader';
import { TenantsList } from './components/list/TenantsList';
import { ROUTES } from '../../constants/routes';
import { useSegment } from '../../components/providers/SegmentProvider';

export function TenantsPage() {
  const segment = useSegment();
  const navigate = useNavigate();

  useEffect(() => {
    segment.track('Page Visit - [Tenants]');
  }, [segment]);

  const onAddTenantClickCallback = useCallback(() => {
    navigate(ROUTES.TENANTS_CREATE);
  }, [navigate]);

  const onRowClickCallback = useCallback(
    (item: Row<ITenantEntity>) => {
      navigate(`${ROUTES.TENANTS}/${item.original.identifier}`);
    },
    [navigate]
  );

  return (
    <PageContainer title="Tenants">
      <PageHeader title="Tenants" />
      <TenantsList onAddTenantClick={onAddTenantClickCallback} onRowClickCallback={onRowClickCallback} />
      <Outlet />
    </PageContainer>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { useCallback, useEffect } from 'react';
import { Outlet, useNavigate } from 'react-router-dom';
import { Row } from 'react-table';
import { ITenantEntity } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/tenants/UpdateTenantPage.tsx
Tamaño: 521 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useNavigate, useParams } from 'react-router-dom';

import { ROUTES } from '../../constants/routes';
import { UpdateTenantSidebar } from './components/UpdateTenantSidebar';

export function UpdateTenantPage() {
  const { identifier } = useParams();
  const navigate = useNavigate();

  const onClose = () => {
    navigate(ROUTES.TENANTS);
  };

  if (!identifier) {
    navigate(ROUTES.TENANTS);

    return null;
  }

  return <UpdateTenantSidebar isOpened onClose={onClose} tenantIdentifier={identifier} />;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useNavigate, useParams } from 'react-router-dom';
import { ROUTES } from '../../constants/routes';
import { UpdateTenantSidebar } from './components/UpdateTenantSidebar';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/tenants/components/CreateTenantSidebar.tsx
Tamaño: 3549 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { Group, Stack } from '@mantine/core';
import { useForm } from 'react-hook-form';
import { useQueryClient, useMutation } from '@tanstack/react-query';
import type { IResponseError, ICreateTenantDto, ITenantEntity } from '@novu/shared';
import { slugify } from '@novu/shared';
import { Button, colors, Sidebar, Text, Title, Tooltip } from '@novu/design-system';

import { createTenant } from '../../../api/tenants';
import { errorMessage, successMessage } from '../../../utils/notifications';
import { QueryKeys } from '../../../api/query.keys';
import { TenantFormCommonFields } from './TenantFormCommonFields';
import { defaultFormValues, ITenantForm } from './UpdateTenantSidebar';

export function CreateTenantSidebar({
  isOpened,
  onTenantCreated,
  onClose,
}: {
  isOpened: boolean;
  onTenantCreated: (identifier: string) => void;
  onClose: () => void;
}) {
  const queryClient = useQueryClient();

  const { mutateAsync: createTenantMutation, isLoading: isLoadingCreate } = useMutation<
    ITenantEntity,
    IResponseError,
    ICreateTenantDto
  >(createTenant, {
    onSuccess: async () => {
      await queryClient.refetchQueries({
        predicate: ({ queryKey }) => queryKey.includes(QueryKeys.tenantsList),
      });
      successMessage('New tenant has been created!');
    },
    onError: (e: any) => {
      errorMessage(e.message || 'Unexpected error');
    },
  });

  const {
    handleSubmit,
    control,
    formState: { isValid, isDirty },
    setValue,
    watch,
  } = useForm<ITenantForm>({
    shouldUseNativeValidation: false,
    defaultValues: defaultFormValues,
  });

  const name = watch('name');
  const identifier = watch('identifier');

  useEffect(() => {
    const newIdentifier = slugify(name);

    if (newIdentifier === identifier) {
      return;
    }

    setValue('identifier', newIdentifier);
  }, [name]);

  const onCreateTenant = async (data) => {
    const { identifier: tenantIdentifier } = await createTenantMutation({
      name: data.name,
      identifier: data.identifier,
      ...(data.data ? { data: JSON.parse(data.data) } : {}),
    });

    if (!tenantIdentifier) {
      onClose();
    } else {
      onTenantCreated(tenantIdentifier);
    }
  };

  return (
    <Sidebar
      isOpened={isOpened}
      onClose={onClose}
      onSubmit={(e) => {
        handleSubmit(onCreateTenant)(e);
        e.stopPropagation();
      }}
      customHeader={
        <Stack h={80} spacing={8}>
          <Group h={40}>
            <Title size={2}>Create a tenant</Title>
          </Group>
          <Text color={colors.B40}>
            Tenants are isolated user scopes in your product, e.g., accounts or workspaces.
          </Text>
        </Stack>
      }
      customFooter={
        <Group ml="auto">
          <Button variant={'outline'} onClick={onClose} data-test-id="create-tenant-sidebar-cancel">
            Cancel
          </Button>
          <Tooltip
            sx={{ position: 'absolute' }}
            disabled={isDirty}
            label={'Fill in the name and identifier to create the tenant'}
          >
            <span>
              <Button
                loading={isLoadingCreate}
                disabled={!isDirty || !isValid}
                submit
                data-test-id="create-tenant-sidebar-submit"
              >
                Create
              </Button>
            </span>
          </Tooltip>
        </Group>
      }
    >
      <TenantFormCommonFields control={control} />
    </Sidebar>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect } from 'react';
import { Group, Stack } from '@mantine/core';
import { useForm } from 'react-hook-form';
import { useQueryClient, useMutation } from '@tanstack/react-query';
import type { IResponseError, ICreateTenantDto, ITenantEntity } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/tenants/components/TenantFormCommonFields.tsx
Tamaño: 2801 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Control, Controller } from 'react-hook-form';
import { useClipboard } from '@mantine/hooks';
import { JsonInput, ActionIcon } from '@mantine/core';

import { Input, inputStyles, Check, Copy } from '@novu/design-system';
import { ITenantForm } from './UpdateTenantSidebar';

function jsonValidator(value?: string) {
  if (!value) {
    return true;
  }
  try {
    JSON.parse(value);
  } catch (e) {
    return 'Invalid JSON';
  }
}
export const TenantFormCommonFields = ({ control }: { control: Control<ITenantForm, any> }) => {
  const identifierClipboard = useClipboard({ timeout: 1000 });

  return (
    <>
      <Controller
        control={control}
        name="name"
        defaultValue={''}
        rules={{
          required: 'Required - Tenant name',
        }}
        render={({ field, fieldState }) => (
          <Input
            {...field}
            value={field.value}
            description="It helps you to distinguish a tenant from others"
            required
            label="Name"
            error={fieldState.error?.message}
            data-test-id="tenant-name"
          />
        )}
      />
      <Controller
        control={control}
        name="identifier"
        defaultValue={''}
        rules={{
          required: 'Required - Tenant identifier',
          pattern: {
            value: /^[A-Za-z0-9_-]+$/,
            message: 'Identifier must contains only alphabetical, numeric, dash or underscore characters',
          },
        }}
        render={({ field, fieldState }) => (
          <Input
            {...field}
            required
            label="Tenant identifier"
            description="You reference to it when triggering a workflow"
            error={fieldState.error?.message}
            data-test-id="tenant-identifier"
            rightSection={
              <ActionIcon
                variant="transparent"
                disabled={!field.value}
                onClick={() => identifierClipboard.copy(field.value)}
              >
                {identifierClipboard.copied ? <Check /> : <Copy />}
              </ActionIcon>
            }
          />
        )}
      />
      <Controller
        control={control}
        name="data"
        defaultValue={''}
        rules={{
          validate: (value) => jsonValidator(value),
        }}
        render={({ field }) => (
          <JsonInput
            {...field}
            data-test-id="tenant-custom-properties"
            formatOnBlur
            autosize
            placeholder={'{\n\n}'}
            styles={inputStyles}
            label="Custom properties"
            description="Set-up custom properties using JSON format"
            minRows={5}
            validationError="Invalid JSON"
          />
        )}
      />
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Control, Controller } from 'react-hook-form';
import { useClipboard } from '@mantine/hooks';
import { JsonInput, ActionIcon } from '@mantine/core';
import { Input, inputStyles, Check, Copy } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/tenants/components/UpdateTenantSidebar.tsx
Tamaño: 3989 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { Group, Stack } from '@mantine/core';
import { Controller, useForm } from 'react-hook-form';
import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';
import { format } from 'date-fns';
import type { IResponseError, ITenantEntity, IUpdateTenantDto } from '@novu/shared';
import { Button, colors, NameInput, Sidebar, Text } from '@novu/design-system';

import { getTenantByIdentifier, updateTenant } from '../../../api/tenants';
import { errorMessage, successMessage } from '../../../utils/notifications';
import { QueryKeys } from '../../../api/query.keys';
import { TenantFormCommonFields } from './TenantFormCommonFields';

export interface ITenantForm {
  identifier: string;
  name: string;
  data?: string;
}
export const defaultFormValues = {
  identifier: '',
  name: '',
  data: '',
};
export function UpdateTenantSidebar({
  isOpened,
  tenantIdentifier,
  onClose,
}: {
  isOpened: boolean;
  tenantIdentifier: string;
  onClose: () => void;
}) {
  const queryClient = useQueryClient();

  const { data: tenant, isLoading: isLoadingTenant } = useQuery<ITenantEntity>(
    [QueryKeys.getTenantByIdentifier(tenantIdentifier)],
    () => getTenantByIdentifier(tenantIdentifier),
    {
      enabled: !!tenantIdentifier,
    }
  );

  const { mutateAsync: updateTenantMutate, isLoading: isLoadingUpdate } = useMutation<
    ITenantEntity,
    IResponseError,
    { identifier: string; data: IUpdateTenantDto }
  >(({ identifier, data }) => updateTenant(identifier, data), {
    onSuccess: async () => {
      await queryClient.refetchQueries({
        predicate: ({ queryKey }) => queryKey.includes(QueryKeys.tenantsList),
      });
      successMessage('Tenant has been updated!');
    },
    onError: (e: any) => {
      errorMessage(e.message || 'Unexpected error');
    },
  });

  const {
    handleSubmit,
    control,
    formState: { isDirty, isValid },
    reset,
  } = useForm<ITenantForm>({
    shouldUseNativeValidation: false,
    defaultValues: defaultFormValues,
  });

  useEffect(() => {
    if (!tenant) return;

    reset({ name: tenant.name, identifier: tenant.identifier, data: JSON.stringify(tenant.data, null, 2) });
  }, [reset, tenant]);

  const onUpdateTenant = async (form) => {
    await updateTenantMutate({
      identifier: tenantIdentifier,
      data: { ...form, ...(form.data ? { data: JSON.parse(form.data) } : {}) },
    });

    onClose();
  };

  if (!tenant) {
    return null;
  }

  return (
    <Sidebar
      isOpened={isOpened}
      onClose={onClose}
      isLoading={isLoadingTenant}
      onSubmit={(e) => {
        handleSubmit(onUpdateTenant)(e);
        e.stopPropagation();
      }}
      customHeader={
        <Stack h={80}>
          <Controller
            control={control}
            name="name"
            defaultValue=""
            render={({ field }) => {
              return (
                <NameInput
                  {...field}
                  value={field.value}
                  data-test-id="tenant-title-name"
                  placeholder="Enter tenant name"
                  ml={-10}
                />
              );
            }}
          />
        </Stack>
      }
      customFooter={
        <Group position="apart" w="100%">
          <Stack spacing={0}>
            <Text size={'sm'} color={colors.B40}>
              Updated at {format(new Date(tenant.updatedAt), 'dd/MM/yyyy HH:mm')}
            </Text>
            <Text size={'sm'} color={colors.B40}>
              Created at {format(new Date(tenant.createdAt), 'dd/MM/yyyy HH:mm')}
            </Text>
          </Stack>
          <Button
            disabled={!isDirty || !isValid || isLoadingUpdate}
            submit
            loading={isLoadingUpdate}
            data-test-id="update-tenant-sidebar-submit"
          >
            Update
          </Button>
        </Group>
      }
    >
      <TenantFormCommonFields control={control} />
    </Sidebar>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect } from 'react';
import { Group, Stack } from '@mantine/core';
import { Controller, useForm } from 'react-hook-form';
import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';
import { format } from 'date-fns';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/tenants/components/list/TenantsList.tsx
Tamaño: 1657 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useState } from 'react';
import { Container } from '@mantine/core';
import { Row } from 'react-table';
import { ITenantEntity } from '@novu/shared';

import { Table, When } from '@novu/design-system';
import { columns } from './columns';
import { useTenants } from '../../../../hooks/useTenants';
import { Toolbar } from './ToolBar';
import { TenantsListNoData } from './TenantsListNoData';

export const TenantsList = ({
  onAddTenantClick,
  onRowClickCallback,
}: {
  onAddTenantClick: React.MouseEventHandler<HTMLButtonElement>;
  onRowClickCallback: (row: Row<ITenantEntity>) => void;
}) => {
  const [page, setPage] = useState<number>(0);
  const { tenants, pageSize, hasMore, loading, ...ten } = useTenants({ page });

  const hasTenants = tenants && tenants?.length > 0;
  const loadingPhase = hasTenants || loading;
  const noTenants = !hasTenants && !loading;

  function handleTableChange(pageIndex) {
    setPage(pageIndex);
  }

  return (
    <>
      <Container fluid sx={{ padding: '0 24px 8px 24px' }}>
        <Toolbar onAddTenantClick={onAddTenantClick} tenantLoading={loading} />
      </Container>
      <When truthy={loadingPhase}>
        <Table
          onRowClick={onRowClickCallback}
          loading={loading}
          data-test-id="tenants-list-table"
          columns={columns}
          data={tenants || []}
          pagination={{
            pageSize,
            current: page,
            hasMore,
            minimalPagination: true,
            onPageChange: handleTableChange,
          }}
        />
      </When>
      <When truthy={noTenants}>
        <TenantsListNoData />
      </When>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useState } from 'react';
import { Container } from '@mantine/core';
import { Row } from 'react-table';
import { ITenantEntity } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/tenants/components/list/TenantsListNoData.tsx
Tamaño: 1005 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';

import { Buildings, colors } from '@novu/design-system';
import { useEnvironment } from '../../../../hooks';
import { When } from '../../../../components/utils/When';

const NoDataHolder = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  height: 500px;
`;

const NoDataText = styled.h2`
  font-size: 14px;
  font-weight: 400;
  line-height: 20px;
  color: ${colors.B40};
  margin: 0;
`;

export const TenantsListNoData = () => {
  const { environment, isLoaded } = useEnvironment();
  const environmentName = environment?.name?.toLowerCase();

  return (
    <When truthy={isLoaded}>
      <NoDataHolder data-test-id="no-tenant-placeholder">
        <Buildings style={{ color: colors.B30, width: '50px', height: '45px', margin: '30px' }} />
        <NoDataText>Add the first tenant for the</NoDataText>
        <NoDataText>{environmentName} environment</NoDataText>
      </NoDataHolder>
    </When>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import { Buildings, colors } from '@novu/design-system';
import { useEnvironment } from '../../../../hooks';
import { When } from '../../../../components/utils/When';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/tenants/components/list/ToolBar.tsx
Tamaño: 993 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import styled from '@emotion/styled';
import React from 'react';

import { Button, Text } from '@novu/design-system';

const Holder = styled.div`
  display: flex;
  justify-content: space-between;
`;

const ButtonStyled = styled(Button)`
  margin-left: -8px;
`;

const PlusSquare = styled.div`
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  max-width: 24px;
  height: 24px;
  padding: 0;
  font-size: 18px;
  font-weight: 700;
  border-radius: 4px;
`;

export const Toolbar = ({
  tenantLoading,
  onAddTenantClick,
}: {
  tenantLoading: boolean;
  onAddTenantClick: React.MouseEventHandler<HTMLButtonElement>;
}) => {
  return (
    <Holder>
      <ButtonStyled
        id="add-tenant"
        onClick={onAddTenantClick}
        disabled={tenantLoading}
        data-test-id="add-tenant"
        variant="subtle"
      >
        <PlusSquare data-square>+</PlusSquare>
        <Text gradient>Add a tenant</Text>
      </ButtonStyled>
    </Holder>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import styled from '@emotion/styled';
import React from 'react';
import { Button, Text } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/pages/tenants/components/list/columns.tsx
Tamaño: 1209 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { format } from 'date-fns';

import { ITenantEntity } from '@novu/shared';
import { IExtendedColumn, Tooltip, withCellLoading, Text } from '@novu/design-system';

const maxWidth = 60;

export const columns: IExtendedColumn<ITenantEntity>[] = [
  {
    accessor: 'name',
    Header: 'Name',
    Cell: withCellLoading(({ row: { original } }) => (
      <Tooltip label={original.name}>
        <div>
          <Text rows={1}>{original.name || ''}</Text>
        </div>
      </Tooltip>
    )),
  },
  {
    accessor: 'identifier',
    Header: 'Tenant identifier',
    Cell: withCellLoading(({ row: { original } }) => (
      <Tooltip label={original.identifier}>
        <div>
          <Text rows={1}>{original.identifier || ''}</Text>
        </div>
      </Tooltip>
    )),
  },
  {
    accessor: 'createdAt',
    Header: 'Created at',
    maxWidth,
    Cell: withCellLoading(({ row: { original } }) => {
      return format(new Date(original.createdAt), 'dd/MM/yyyy HH:mm');
    }),
  },
  {
    accessor: 'updatedAt',
    Header: 'Updated at',
    maxWidth,
    Cell: withCellLoading(({ row: { original } }) => {
      return format(new Date(original.updatedAt), 'dd/MM/yyyy HH:mm');
    }),
  },
];


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { format } from 'date-fns';
import { ITenantEntity } from '@novu/shared';
import { IExtendedColumn, Tooltip, withCellLoading, Text } from '@novu/design-system';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/stories/Introduction.stories.mdx
Tamaño: 5202 bytes
Lenguaje detectado: MDX

### CONTENIDO ORIGINAL ###

import { Meta } from '@storybook/addon-docs';
import Code from './assets/code-brackets.svg';
import Colors from './assets/colors.svg';
import Comments from './assets/comments.svg';
import Direction from './assets/direction.svg';
import Flow from './assets/flow.svg';
import Plugin from './assets/plugin.svg';
import Repo from './assets/repo.svg';
import StackAlt from './assets/stackalt.svg';

<Meta title="Introduction" />

<style>
  {`
  .subheading {
    --mediumdark: '#999999';
    font-weight: 900;
    font-size: 13px;
    color: #999;
    letter-spacing: 6px;
    line-height: 24px;
    text-transform: uppercase;
    margin-bottom: 12px;
    margin-top: 40px;
  }

  .link-list {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr;
    row-gap: 10px;
  }

  @media (min-width: 620px) {
    .link-list {
      row-gap: 20px;
      column-gap: 20px;
      grid-template-columns: 1fr 1fr;
    }
  }

  @media all and (-ms-high-contrast:none) {
  .link-list {
      display: -ms-grid;
      -ms-grid-columns: 1fr 1fr;
      -ms-grid-rows: 1fr 1fr;
    }
  }

  .link-item {
    display: block;
    padding: 20px 30px 20px 15px;
    border: 1px solid #00000010;
    border-radius: 5px;
    transition: background 150ms ease-out, border 150ms ease-out, transform 150ms ease-out;
    color: #333333;
    display: flex;
    align-items: flex-start;
  }

  .link-item:hover {
    border-color: #1EA7FD50;
    transform: translate3d(0, -3px, 0);
    box-shadow: rgba(0, 0, 0, 0.08) 0 3px 10px 0;
  }

  .link-item:active {
    border-color: #1EA7FD;
    transform: translate3d(0, 0, 0);
  }

  .link-item strong {
    font-weight: 700;
    display: block;
    margin-bottom: 2px;
  }

  .link-item img {
    height: 40px;
    width: 40px;
    margin-right: 15px;
    flex: none;
  }

  .link-item span {
    font-size: 14px;
    line-height: 20px;
  }

  .tip {
    display: inline-block;
    border-radius: 1em;
    font-size: 11px;
    line-height: 12px;
    font-weight: 700;
    background: #E7FDD8;
    color: #66BF3C;
    padding: 4px 12px;
    margin-right: 10px;
    vertical-align: top;
  }

  .tip-wrapper {
    font-size: 13px;
    line-height: 20px;
    margin-top: 40px;
    margin-bottom: 40px;
  }

  .tip-wrapper code {
    font-size: 12px;
    display: inline-block;
  }


  `}
</style>

# Welcome to Storybook

Storybook helps you build UI components in isolation from your app's business logic, data, and context.
That makes it easy to develop hard-to-reach states. Save these UI states as **stories** to revisit during development, testing, or QA.

Browse example stories now by navigating to them in the sidebar.
View their code in the `src/stories` directory to learn how they work.
We recommend building UIs with a [**component-driven**](https://componentdriven.org) process starting with atomic components and ending with pages.

<div className="subheading">Configure</div>

<div className="link-list">
  <a className="link-item" href="https://storybook.js.org/docs/react/addons/addon-types" target="_blank">
    <img src={Plugin} alt="plugin" />
    <span>
      <strong>Presets for popular tools</strong>
      Easy setup for TypeScript, SCSS and more.
    </span>
  </a>
  <a className="link-item" href="https://storybook.js.org/docs/react/configure/webpack" target="_blank">
    <img src={StackAlt} alt="Build" />
    <span>
      <strong>Build configuration</strong>
      How to customize webpack and Babel
    </span>
  </a>
  <a className="link-item" href="https://storybook.js.org/docs/react/configure/styling-and-css" target="_blank">
    <img src={Colors} alt="colors" />
    <span>
      <strong>Styling</strong>
      How to load and configure CSS libraries
    </span>
  </a>
  <a
    className="link-item"
    href="https://storybook.js.org/docs/react/get-started/setup#configure-storybook-for-your-stack"
    target="_blank"
  >
    <img src={Flow} alt="flow" />
    <span>
      <strong>Data</strong>
      Providers and mocking for data libraries
    </span>
  </a>
</div>

<div className="subheading">Learn</div>

<div className="link-list">
  <a className="link-item" href="https://storybook.js.org/docs" target="_blank">
    <img src={Repo} alt="repo" />
    <span>
      <strong>Storybook documentation</strong>
      Configure, customize, and extend
    </span>
  </a>
  <a className="link-item" href="https://storybook.js.org/tutorials/" target="_blank">
    <img src={Direction} alt="direction" />
    <span>
      <strong>In-depth guides</strong>
      Best practices from leading teams
    </span>
  </a>
  <a className="link-item" href="https://github.com/storybookjs/storybook" target="_blank">
    <img src={Code} alt="code" />
    <span>
      <strong>GitHub project</strong>
      View the source and add issues
    </span>
  </a>
  <a className="link-item" href="https://discord.gg/storybook" target="_blank">
    <img src={Comments} alt="comments" />
    <span>
      <strong>Discord chat</strong>
      Chat with maintainers and the community
    </span>
  </a>
</div>

<div className="tip-wrapper">
  <span className="tip">Tip</span>Edit the Markdown in <code>src/stories/Introduction.stories.mdx</code>
</div>


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Meta } from '@storybook/addon-docs';
import Code from './assets/code-brackets.svg';
import Colors from './assets/colors.svg';
import Comments from './assets/comments.svg';
import Direction from './assets/direction.svg';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/stories/assets/code-brackets.svg
Tamaño: 1459 bytes
Lenguaje detectado: SVG

### CONTENIDO ORIGINAL ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/code-brackets</title><g id="illustration/code-brackets" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><path id="Combined-Shape" fill="#87E6E5" d="M11.4139325,12 C11.7605938,12 12,12.5059743 12,13.3779712 L12,17.4951758 L6.43502246,23.3839989 C5.85499251,23.9978337 5.85499251,25.0021663 6.43502246,25.6160011 L12,31.5048242 L12,35.6220288 C12,36.4939606 11.7605228,37 11.4139325,37 C11.2725831,37 11.1134406,36.9158987 10.9453839,36.7379973 L0.435022463,25.6160011 C-0.145007488,25.0021663 -0.145007488,23.9978337 0.435022463,23.3839989 L10.9453839,12.2620027 C11.1134051,12.0841663 11.2725831,12 11.4139325,12 Z M36.5860675,12 C36.7274169,12 36.8865594,12.0841013 37.0546161,12.2620027 L47.5649775,23.3839989 C48.1450075,23.9978337 48.1450075,25.0021663 47.5649775,25.6160011 L37.0546161,36.7379973 C36.8865949,36.9158337 36.7274169,37 36.5860675,37 C36.2394062,37 36,36.4940257 36,35.6220288 L36,31.5048242 L41.5649775,25.6160011 C42.1450075,25.0021663 42.1450075,23.9978337 41.5649775,23.3839989 L36,17.4951758 L36,13.3779712 C36,12.5060394 36.2394772,12 36.5860675,12 Z"/><rect id="Rectangle-7-Copy-5" width="35.57" height="4" x="5.009" y="22.662" fill="#A0DB77" rx="2" transform="translate(22.793959, 24.662305) rotate(-75.000000) translate(-22.793959, -24.662305)"/></g></svg>

### ANALISIS AUTOMATICO (ESPAÑOL) ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/code-brackets</title><g id="illustration/code-brackets" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><path id="Combined-Shape" fill="#87E6E5" d="M11.4139325,12 C11.7605938,12 12,12.5059743 12,13.3779712 L12,17.4951758 L6.43502246,23.3839989 C5.85499251,23.9978337 5.85499251,25.0021663 6.43502246,25.6160011 L12,31.5048242 L12,35.6220288 C12,36.4939606 11.7605228,37 11.4139325,37 C11.2725831,37 11.1134406,36.9158987 10.9453839,36.7379973 L0.435022463,25.6160011 C-0.145007488,25.0021663 -0.145007488,23.9978337 0.435022463,23.3839989 L10.9453839,12.2620027 C11.1134051,12.0841663 11.2725831,12 11.4139325,12 Z M36.5860675,12 C36.7274169,12 36.8865594,12.0841013 37.0546161,12.2620027 L47.5649775,23.3839989 C48.1450075,23.9978337 48.1450075,25.0021663 47.5649775,25.6160011 L37.0546161,36.7379973 C36.8865949,36.9158337 36.7274169,37 36.5860675,37 C36.2394062,37 36,36.4940257 36,35.6220288 L36,31.5048242 L41.5649775,25.6160011 C42.1450075,25.0021663 42.1450075,23.9978337 41.5649775,23.3839989 L36,17.4951758 L36,13.3779712 C36,12.5060394 36.2394772,12 36.5860675,12 Z"/><rect id="Rectangle-7-Copy-5" width="35.57" height="4" x="5.009" y="22.662" fill="#A0DB77" rx="2" transform="translate(22.793959, 24.662305) rotate(-75.000000) translate(-22.793959, -24.662305)"/></g></svg>
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/stories/assets/colors.svg
Tamaño: 8508 bytes
Lenguaje detectado: SVG

### CONTENIDO ORIGINAL ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/colors</title><g id="illustration/colors" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><circle id="Oval" cx="23.763" cy="16.192" r="13.271" fill="#FC521F" opacity=".6"/><circle id="Oval-Copy" cx="15.468" cy="32.308" r="13.271" fill="#66BF3C" opacity=".6"/><path id="Combined-Shape" fill="#FF5F95" d="M15.4683651,19.0362231 C21.5434817,19.0362231 26.6652087,23.1181689 28.2404554,28.6889694 C26.8420385,29.1906678 25.3344184,29.4637769 23.7630101,29.4637769 C17.6878936,29.4637769 12.5661666,25.3818311 10.9909199,19.8110306 C12.3898993,19.3092302 13.8972501,19.0362231 15.4683651,19.0362231 Z"/><circle id="Oval-Copy-2" cx="32.532" cy="32.308" r="13.271" fill="#1EA7FD" opacity=".6"/><path id="Combined-Shape" fill="#87E6E5" d="M24.00025,22.1417324 C26.897967,24.5762286 28.7397972,28.2268506 28.7397972,32.3076552 C28.7397972,36.3884597 26.897967,40.0390817 24.00025,42.4735779 C21.1018087,40.038637 19.2602028,36.3882111 19.2602028,32.3076552 C19.2602028,28.2815316 21.0530043,24.6741393 23.8838362,22.2402492 Z"/><path id="Combined-Shape" fill="#FBD178" d="M32.5316349,19.0362231 C33.9415155,19.0362231 35.3000478,19.2560712 36.5748203,19.6633557 C35.0489179,25.3104816 29.8909911,29.4637769 23.7630101,29.4637769 C22.3527608,29.4637769 20.9938866,29.2438138 19.7188247,28.8363247 C21.2451195,23.1900077 26.403293,19.0362231 32.5316349,19.0362231 Z"/><path id="Combined-Shape" fill="#FFF" d="M24.00025,22.1417324 L24.0124326,22.1519799 C24.1747744,22.288701 24.3337918,22.4292434 24.4893463,22.5734686 L24.3896855,22.4820008 C24.4671836,22.552408 24.5438453,22.6237194 24.619654,22.6959185 L24.4893463,22.5734686 C24.5690639,22.6473803 24.6478719,22.7222591 24.7257519,22.7980864 L24.619654,22.6959185 C24.6907654,22.7636441 24.7611262,22.8321506 24.8307226,22.9014245 L24.7257519,22.7980864 C24.8120661,22.8821258 24.8972403,22.9673303 24.981249,23.0536745 L24.8307226,22.9014245 C24.9073006,22.9776475 24.9829531,23.0547994 25.0576619,23.132862 L25.057852,23.1330605 C25.3140855,23.4007967 25.559391,23.679459 25.7928375,23.9681079 L25.7230574,23.8825538 C25.7985998,23.9743942 25.8729325,24.0672672 25.9460311,24.1611484 L25.7928375,23.9681079 C25.8624256,24.0541514 25.93096,24.1410823 25.998421,24.228881 L25.9460311,24.1611484 C26.0074362,24.2400115 26.0679704,24.319586 26.1276194,24.3998576 L25.998421,24.228881 C26.0663495,24.317288 26.1331896,24.4065749 26.1989214,24.4967216 L26.1276194,24.3998576 C26.204848,24.5037867 26.2805926,24.6088841 26.3548219,24.7151187 L26.1989214,24.4967216 C26.2678555,24.59126 26.3355706,24.6867441 26.4020436,24.7831507 L26.3548219,24.7151187 C26.4130013,24.798383 26.4702498,24.8823459 26.5265523,24.9669921 L26.4020436,24.7831507 C26.4678788,24.8786322 26.5324956,24.9750187 26.5958716,25.0722875 L26.5959296,25.0723765 C26.736338,25.2878741 26.870709,25.5077955 26.9987399,25.7318073 L26.9410662,25.6319089 C26.9973106,25.7283602 27.0523736,25.8255849 27.1062352,25.9235633 L26.9987399,25.7318073 C27.0539848,25.8284676 27.1080492,25.9258895 27.1609136,26.0240532 L27.1606656,26.0235927 C27.2696676,26.2259984 27.3733426,26.4310837 27.4717677,26.6391379 L27.4715275,26.6386302 C27.5541941,26.8133735 27.6329386,26.9896914 27.7079006,27.1679911 C27.7630163,27.299081 27.8161443,27.431391 27.8671831,27.5647345 L27.804312,27.4036517 C27.8391482,27.4912057 27.8730792,27.5792182 27.9060936,27.6676774 L27.8671831,27.5647345 C27.906613,27.6677486 27.9447959,27.7713796 27.9817136,27.8756091 L27.9060936,27.6676774 C27.946474,27.7758735 27.9854831,27.884738 28.0230997,27.9942498 L27.9817136,27.8756091 C28.0144978,27.9681688 28.0462842,28.0612004 28.0770597,28.1546911 L28.0230997,27.9942498 C28.0618265,28.1069941 28.0990774,28.2204244 28.1348294,28.3345177 L28.0770597,28.1546911 C28.1112208,28.2584663 28.1441365,28.3628071 28.175789,28.4676958 L28.1756797,28.4673338 L28.2408136,28.6893554 C28.2284694,28.6937793 28.2161167,28.6981854 28.2037557,28.7025737 L28.2404554,28.6889694 C27.9517707,28.7925384 27.6584322,28.8863659 27.3608394,28.97006 L27.3609965,28.9702524 C27.0695498,29.0519815 26.7741843,29.1241944 26.4751174,29.1863314 L26.5385665,29.1730829 C26.3901218,29.2046704 26.2407589,29.2337757 26.0905233,29.2603535 L26.4751174,29.1863314 C26.3367402,29.215082 26.1975707,29.2416755 26.0576458,29.2660754 L26.0905233,29.2603535 C25.9366833,29.2875689 25.7819282,29.312134 25.6263069,29.334 L26.0576458,29.2660754 C25.9017815,29.2932549 25.7449801,29.3177127 25.5872928,29.3393985 L25.6263069,29.334 C25.493366,29.3526793 25.3597929,29.3693888 25.2256182,29.3840982 L25.5872928,29.3393985 C25.4326976,29.360659 25.277251,29.3792552 25.1210012,29.3951396 L25.2256182,29.3840982 C25.0570566,29.4025774 24.8875455,29.4178998 24.7171453,29.4300052 L25.1210012,29.3951396 C24.9661341,29.4108835 24.810478,29.4239634 24.6540799,29.4343333 L24.7171453,29.4300052 C24.5612618,29.4410793 24.4046342,29.4494611 24.2473088,29.4551045 L24.6540799,29.4343333 C24.5098436,29.4438967 24.3649762,29.4511552 24.2195147,29.4560724 L24.2473088,29.4551045 C24.0865878,29.4608697 23.9251385,29.4637769 23.7630101,29.4637769 L23.3130142,29.4562912 C23.2993121,29.4558347 23.2856153,29.4553574 23.2719237,29.4548593 C22.9596275,29.4434959 22.6502324,29.4213577 22.3439491,29.3888006 L22.3886972,29.3934808 C22.2468147,29.3788837 22.105595,29.3620515 21.9650736,29.3430199 L22.3439491,29.3888006 C22.1914515,29.3725905 22.0397254,29.3537976 21.8888152,29.3324664 L21.9650736,29.3430199 C21.8025527,29.3210088 21.6409661,29.2960557 21.4803691,29.2682161 L21.8888152,29.3324664 C21.7352182,29.3107553 21.5824665,29.2864149 21.4306071,29.2594919 L21.4803691,29.2682161 C21.3506285,29.2457255 21.2215338,29.221351 21.0931142,29.1951218 L21.4306071,29.2594919 C21.2772401,29.2323016 21.1247833,29.2024774 20.973285,29.1700676 L21.0931142,29.1951218 C20.9267071,29.1611338 20.7614335,29.1240315 20.5973571,29.0838786 L20.973285,29.1700676 C20.825476,29.138447 20.6785795,29.1043653 20.5326403,29.0678674 L20.5973571,29.0838786 C20.4596684,29.0501832 20.3228227,29.0143396 20.1868576,28.9763851 L20.5326403,29.0678674 C20.3930822,29.0329653 20.2543997,28.9958536 20.1166319,28.9565718 L20.1169729,28.956669 L19.7188247,28.8363247 L19.7188247,28.8363247 L19.7880988,28.5894836 C19.8166627,28.4914193 19.8463277,28.3938241 19.8770797,28.2967124 L19.8480041,28.389868 C19.888904,28.2573207 19.931824,28.1256601 19.9767281,27.9949221 L19.8770797,28.2967124 C19.9117081,28.1873592 19.9477148,28.0786191 19.9850793,27.9705124 L19.9853117,27.9700125 C20.1152243,27.5939638 20.2618428,27.2250995 20.4240731,26.8647811 L20.345088,27.0439391 C20.3899401,26.9402428 20.4360767,26.8372321 20.4834778,26.7349269 L20.4240731,26.8647811 C20.461061,26.78263 20.4988604,26.7009231 20.5374612,26.6196707 L20.4834778,26.7349269 C20.5344734,26.6248636 20.5869326,26.515617 20.6408302,26.4072119 L20.5374612,26.6196707 C20.5871241,26.5151329 20.6381134,26.4113474 20.6904074,26.308336 L20.6408302,26.4072119 C20.681671,26.3250682 20.7233378,26.2434076 20.7658197,26.1622412 L20.7658807,26.1619302 C20.8435258,26.013775 20.923959,25.866962 21.0070529,25.7218685 C21.2050227,25.3759931 21.4182299,25.0398756 21.6456589,24.7144306 L21.5286537,24.8848257 C21.5876708,24.7975143 21.6476996,24.7109431 21.7087233,24.6251289 L21.6456589,24.7144306 C21.6993229,24.6376387 21.7537788,24.5614411 21.8090146,24.4858495 L21.7087233,24.6251289 C21.7826333,24.5211934 21.8580028,24.4183683 21.9348018,24.3166836 L21.8090146,24.4858495 C21.8722751,24.3992759 21.9365587,24.3134973 22.0018475,24.2285315 L22.0016895,24.2288802 C22.3179789,23.8171232 22.6576794,23.4247699 23.0189296,23.053491 L22.8296293,23.2521975 C22.9033796,23.1732135 22.9780829,23.095131 23.0537208,23.0179683 L23.0189296,23.053491 C23.083529,22.9870982 23.1488175,22.9213793 23.2147836,22.8563459 L23.0537208,23.0179683 C23.131055,22.9390752 23.2093662,22.8611436 23.2886348,22.7841931 L23.2147836,22.8563459 C23.2821211,22.7899605 23.3501645,22.7242893 23.4189017,22.6593447 L23.2886348,22.7841931 C23.3852399,22.6904132 23.4832671,22.5980904 23.582681,22.5072602 L23.4189017,22.6593447 C23.4912637,22.5909753 23.5643945,22.523411 23.6382797,22.4566663 L23.582681,22.5072602 C23.6715916,22.4260264 23.7616113,22.3459865 23.8527148,22.2671658 L23.8525967,22.2671923 C23.8915062,22.2336043 23.9304941,22.2002638 23.9696766,22.1671464 L24.00025,22.1417324 Z"/></g></svg>

### ANALISIS AUTOMATICO (ESPAÑOL) ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/colors</title><g id="illustration/colors" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><circle id="Oval" cx="23.763" cy="16.192" r="13.271" fill="#FC521F" opacity=".6"/><circle id="Oval-Copy" cx="15.468" cy="32.308" r="13.271" fill="#66BF3C" opacity=".6"/><path id="Combined-Shape" fill="#FF5F95" d="M15.4683651,19.0362231 C21.5434817,19.0362231 26.6652087,23.1181689 28.2404554,28.6889694 C26.8420385,29.1906678 25.3344184,29.4637769 23.7630101,29.4637769 C17.6878936,29.4637769 12.5661666,25.3818311 10.9909199,19.8110306 C12.3898993,19.3092302 13.8972501,19.0362231 15.4683651,19.0362231 Z"/><circle id="Oval-Copy-2" cx="32.532" cy="32.308" r="13.271" fill="#1EA7FD" opacity=".6"/><path id="Combined-Shape" fill="#87E6E5" d="M24.00025,22.1417324 C26.897967,24.5762286 28.7397972,28.2268506 28.7397972,32.3076552 C28.7397972,36.3884597 26.897967,40.0390817 24.00025,42.4735779 C21.1018087,40.038637 19.2602028,36.3882111 19.2602028,32.3076552 C19.2602028,28.2815316 21.0530043,24.6741393 23.8838362,22.2402492 Z"/><path id="Combined-Shape" fill="#FBD178" d="M32.5316349,19.0362231 C33.9415155,19.0362231 35.3000478,19.2560712 36.5748203,19.6633557 C35.0489179,25.3104816 29.8909911,29.4637769 23.7630101,29.4637769 C22.3527608,29.4637769 20.9938866,29.2438138 19.7188247,28.8363247 C21.2451195,23.1900077 26.403293,19.0362231 32.5316349,19.0362231 Z"/><path id="Combined-Shape" fill="#FFF" d="M24.00025,22.1417324 L24.0124326,22.1519799 C24.1747744,22.288701 24.3337918,22.4292434 24.4893463,22.5734686 L24.3896855,22.4820008 C24.4671836,22.552408 24.5438453,22.6237194 24.619654,22.6959185 L24.4893463,22.5734686 C24.5690639,22.6473803 24.6478719,22.7222591 24.7257519,22.7980864 L24.619654,22.6959185 C24.6907654,22.7636441 24.7611262,22.8321506 24.8307226,22.9014245 L24.7257519,22.7980864 C24.8120661,22.8821258 24.8972403,22.9673303 24.981249,23.0536745 L24.8307226,22.9014245 C24.9073006,22.9776475 24.9829531,23.0547994 25.0576619,23.132862 L25.057852,23.1330605 C25.3140855,23.4007967 25.559391,23.679459 25.7928375,23.9681079 L25.7230574,23.8825538 C25.7985998,23.9743942 25.8729325,24.0672672 25.9460311,24.1611484 L25.7928375,23.9681079 C25.8624256,24.0541514 25.93096,24.1410823 25.998421,24.228881 L25.9460311,24.1611484 C26.0074362,24.2400115 26.0679704,24.319586 26.1276194,24.3998576 L25.998421,24.228881 C26.0663495,24.317288 26.1331896,24.4065749 26.1989214,24.4967216 L26.1276194,24.3998576 C26.204848,24.5037867 26.2805926,24.6088841 26.3548219,24.7151187 L26.1989214,24.4967216 C26.2678555,24.59126 26.3355706,24.6867441 26.4020436,24.7831507 L26.3548219,24.7151187 C26.4130013,24.798383 26.4702498,24.8823459 26.5265523,24.9669921 L26.4020436,24.7831507 C26.4678788,24.8786322 26.5324956,24.9750187 26.5958716,25.0722875 L26.5959296,25.0723765 C26.736338,25.2878741 26.870709,25.5077955 26.9987399,25.7318073 L26.9410662,25.6319089 C26.9973106,25.7283602 27.0523736,25.8255849 27.1062352,25.9235633 L26.9987399,25.7318073 C27.0539848,25.8284676 27.1080492,25.9258895 27.1609136,26.0240532 L27.1606656,26.0235927 C27.2696676,26.2259984 27.3733426,26.4310837 27.4717677,26.6391379 L27.4715275,26.6386302 C27.5541941,26.8133735 27.6329386,26.9896914 27.7079006,27.1679911 C27.7630163,27.299081 27.8161443,27.431391 27.8671831,27.5647345 L27.804312,27.4036517 C27.8391482,27.4912057 27.8730792,27.5792182 27.9060936,27.6676774 L27.8671831,27.5647345 C27.906613,27.6677486 27.9447959,27.7713796 27.9817136,27.8756091 L27.9060936,27.6676774 C27.946474,27.7758735 27.9854831,27.884738 28.0230997,27.9942498 L27.9817136,27.8756091 C28.0144978,27.9681688 28.0462842,28.0612004 28.0770597,28.1546911 L28.0230997,27.9942498 C28.0618265,28.1069941 28.0990774,28.2204244 28.1348294,28.3345177 L28.0770597,28.1546911 C28.1112208,28.2584663 28.1441365,28.3628071 28.175789,28.4676958 L28.1756797,28.4673338 L28.2408136,28.6893554 C28.2284694,28.6937793 28.2161167,28.6981854 28.2037557,28.7025737 L28.2404554,28.6889694 C27.9517707,28.7925384 27.6584322,28.8863659 27.3608394,28.97006 L27.3609965,28.9702524 C27.0695498,29.0519815 26.7741843,29.1241944 26.4751174,29.1863314 L26.5385665,29.1730829 C26.3901218,29.2046704 26.2407589,29.2337757 26.0905233,29.2603535 L26.4751174,29.1863314 C26.3367402,29.215082 26.1975707,29.2416755 26.0576458,29.2660754 L26.0905233,29.2603535 C25.9366833,29.2875689 25.7819282,29.312134 25.6263069,29.334 L26.0576458,29.2660754 C25.9017815,29.2932549 25.7449801,29.3177127 25.5872928,29.3393985 L25.6263069,29.334 C25.493366,29.3526793 25.3597929,29.3693888 25.2256182,29.3840982 L25.5872928,29.3393985 C25.4326976,29.360659 25.277251,29.3792552 25.1210012,29.3951396 L25.2256182,29.3840982 C25.0570566,29.4025774 24.8875455,29.4178998 24.7171453,29.4300052 L25.1210012,29.3951396 C24.9661341,29.4108835 24.810478,29.4239634 24.6540799,29.4343333 L24.7171453,29.4300052 C24.5612618,29.4410793 24.4046342,29.4494611 24.2473088,29.4551045 L24.6540799,29.4343333 C24.5098436,29.4438967 24.3649762,29.4511552 24.2195147,29.4560724 L24.2473088,29.4551045 C24.0865878,29.4608697 23.9251385,29.4637769 23.7630101,29.4637769 L23.3130142,29.4562912 C23.2993121,29.4558347 23.2856153,29.4553574 23.2719237,29.4548593 C22.9596275,29.4434959 22.6502324,29.4213577 22.3439491,29.3888006 L22.3886972,29.3934808 C22.2468147,29.3788837 22.105595,29.3620515 21.9650736,29.3430199 L22.3439491,29.3888006 C22.1914515,29.3725905 22.0397254,29.3537976 21.8888152,29.3324664 L21.9650736,29.3430199 C21.8025527,29.3210088 21.6409661,29.2960557 21.4803691,29.2682161 L21.8888152,29.3324664 C21.7352182,29.3107553 21.5824665,29.2864149 21.4306071,29.2594919 L21.4803691,29.2682161 C21.3506285,29.2457255 21.2215338,29.221351 21.0931142,29.1951218 L21.4306071,29.2594919 C21.2772401,29.2323016 21.1247833,29.2024774 20.973285,29.1700676 L21.0931142,29.1951218 C20.9267071,29.1611338 20.7614335,29.1240315 20.5973571,29.0838786 L20.973285,29.1700676 C20.825476,29.138447 20.6785795,29.1043653 20.5326403,29.0678674 L20.5973571,29.0838786 C20.4596684,29.0501832 20.3228227,29.0143396 20.1868576,28.9763851 L20.5326403,29.0678674 C20.3930822,29.0329653 20.2543997,28.9958536 20.1166319,28.9565718 L20.1169729,28.956669 L19.7188247,28.8363247 L19.7188247,28.8363247 L19.7880988,28.5894836 C19.8166627,28.4914193 19.8463277,28.3938241 19.8770797,28.2967124 L19.8480041,28.389868 C19.888904,28.2573207 19.931824,28.1256601 19.9767281,27.9949221 L19.8770797,28.2967124 C19.9117081,28.1873592 19.9477148,28.0786191 19.9850793,27.9705124 L19.9853117,27.9700125 C20.1152243,27.5939638 20.2618428,27.2250995 20.4240731,26.8647811 L20.345088,27.0439391 C20.3899401,26.9402428 20.4360767,26.8372321 20.4834778,26.7349269 L20.4240731,26.8647811 C20.461061,26.78263 20.4988604,26.7009231 20.5374612,26.6196707 L20.4834778,26.7349269 C20.5344734,26.6248636 20.5869326,26.515617 20.6408302,26.4072119 L20.5374612,26.6196707 C20.5871241,26.5151329 20.6381134,26.4113474 20.6904074,26.308336 L20.6408302,26.4072119 C20.681671,26.3250682 20.7233378,26.2434076 20.7658197,26.1622412 L20.7658807,26.1619302 C20.8435258,26.013775 20.923959,25.866962 21.0070529,25.7218685 C21.2050227,25.3759931 21.4182299,25.0398756 21.6456589,24.7144306 L21.5286537,24.8848257 C21.5876708,24.7975143 21.6476996,24.7109431 21.7087233,24.6251289 L21.6456589,24.7144306 C21.6993229,24.6376387 21.7537788,24.5614411 21.8090146,24.4858495 L21.7087233,24.6251289 C21.7826333,24.5211934 21.8580028,24.4183683 21.9348018,24.3166836 L21.8090146,24.4858495 C21.8722751,24.3992759 21.9365587,24.3134973 22.0018475,24.2285315 L22.0016895,24.2288802 C22.3179789,23.8171232 22.6576794,23.4247699 23.0189296,23.053491 L22.8296293,23.2521975 C22.9033796,23.1732135 22.9780829,23.095131 23.0537208,23.0179683 L23.0189296,23.053491 C23.083529,22.9870982 23.1488175,22.9213793 23.2147836,22.8563459 L23.0537208,23.0179683 C23.131055,22.9390752 23.2093662,22.8611436 23.2886348,22.7841931 L23.2147836,22.8563459 C23.2821211,22.7899605 23.3501645,22.7242893 23.4189017,22.6593447 L23.2886348,22.7841931 C23.3852399,22.6904132 23.4832671,22.5980904 23.582681,22.5072602 L23.4189017,22.6593447 C23.4912637,22.5909753 23.5643945,22.523411 23.6382797,22.4566663 L23.582681,22.5072602 C23.6715916,22.4260264 23.7616113,22.3459865 23.8527148,22.2671658 L23.8525967,22.2671923 C23.8915062,22.2336043 23.9304941,22.2002638 23.9696766,22.1671464 L24.00025,22.1417324 Z"/></g></svg>
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/stories/assets/comments.svg
Tamaño: 1529 bytes
Lenguaje detectado: SVG

### CONTENIDO ORIGINAL ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/comments</title><g id="illustration/comments" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><path id="Path" fill="#96D07C" d="M2.52730803,17.9196415 C2.44329744,17.9745167 2.36370847,18.000488 2.29303375,18.000488 C2.1197031,18.000488 2,17.8443588 2,17.5752855 L2,4 C2,1.790861 3.790861,3.23296945e-13 6,3.23296945e-13 L33.9995117,3.23296945e-13 C36.2086507,3.23296945e-13 37.9995117,1.790861 37.9995117,4 L37.9995117,9.999512 C37.9995117,12.208651 36.2086507,13.999512 33.9995117,13.999512 L8,13.999512 C7.83499225,13.999512 7.6723181,13.9895206 7.51254954,13.9701099 L2.52730803,17.9196415 Z"/><path id="Path" fill="#73E1E0" d="M7.51066,44.9703679 L2.52730803,47.9186655 C2.44329744,47.9735407 2.36370847,47.999512 2.29303375,47.999512 C2.1197031,47.999512 2,47.8433828 2,47.5743095 L2,35 C2,32.790861 3.790861,31 6,31 L26,31 C28.209139,31 30,32.790861 30,35 L30,41 C30,43.209139 28.209139,45 26,45 L8,45 C7.8343417,45 7.67103544,44.9899297 7.51066,44.9703679 Z"/><path id="Path" fill="#FFD476" d="M46,19.5 L46,33.0747975 C46,33.3438708 45.8802969,33.5 45.7069663,33.5 C45.6362915,33.5 45.5567026,33.4740287 45.472692,33.4191535 L40.4887103,29.4704446 C40.3285371,29.489956 40.1654415,29.5 40,29.5 L18,29.5 C15.790861,29.5 14,27.709139 14,25.5 L14,19.5 C14,17.290861 15.790861,15.5 18,15.5 L42,15.5 C44.209139,15.5 46,17.290861 46,19.5 Z"/></g></svg>

### ANALISIS AUTOMATICO (ESPAÑOL) ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/comments</title><g id="illustration/comments" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><path id="Path" fill="#96D07C" d="M2.52730803,17.9196415 C2.44329744,17.9745167 2.36370847,18.000488 2.29303375,18.000488 C2.1197031,18.000488 2,17.8443588 2,17.5752855 L2,4 C2,1.790861 3.790861,3.23296945e-13 6,3.23296945e-13 L33.9995117,3.23296945e-13 C36.2086507,3.23296945e-13 37.9995117,1.790861 37.9995117,4 L37.9995117,9.999512 C37.9995117,12.208651 36.2086507,13.999512 33.9995117,13.999512 L8,13.999512 C7.83499225,13.999512 7.6723181,13.9895206 7.51254954,13.9701099 L2.52730803,17.9196415 Z"/><path id="Path" fill="#73E1E0" d="M7.51066,44.9703679 L2.52730803,47.9186655 C2.44329744,47.9735407 2.36370847,47.999512 2.29303375,47.999512 C2.1197031,47.999512 2,47.8433828 2,47.5743095 L2,35 C2,32.790861 3.790861,31 6,31 L26,31 C28.209139,31 30,32.790861 30,35 L30,41 C30,43.209139 28.209139,45 26,45 L8,45 C7.8343417,45 7.67103544,44.9899297 7.51066,44.9703679 Z"/><path id="Path" fill="#FFD476" d="M46,19.5 L46,33.0747975 C46,33.3438708 45.8802969,33.5 45.7069663,33.5 C45.6362915,33.5 45.5567026,33.4740287 45.472692,33.4191535 L40.4887103,29.4704446 C40.3285371,29.489956 40.1654415,29.5 40,29.5 L18,29.5 C15.790861,29.5 14,27.709139 14,25.5 L14,19.5 C14,17.290861 15.790861,15.5 18,15.5 L42,15.5 C44.209139,15.5 46,17.290861 46,19.5 Z"/></g></svg>
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/stories/assets/direction.svg
Tamaño: 1281 bytes
Lenguaje detectado: SVG

### CONTENIDO ORIGINAL ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/direction</title><g id="illustration/direction" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><path id="Combined-Shape" fill="#FFD476" d="M23.4917015,33.6030641 L2.93840258,31.4321033 C2.38917316,31.3740904 1.99096346,30.8818233 2.04897631,30.3325939 C2.0747515,30.0885705 2.18934861,29.8625419 2.37095722,29.6975265 L34.2609105,0.721285325 C34.6696614,0.349881049 35.3021022,0.38015648 35.6735064,0.788907393 C35.9232621,1.06377731 36.0001133,1.45442096 35.8730901,1.80341447 L24.5364357,32.9506164 C24.3793473,33.3822133 23.9484565,33.6513092 23.4917015,33.6030641 L23.4917015,33.6030641 Z"/><path id="Combined-Shape-Copy" fill="#FFC445" d="M24.3163597,33.2881029 C24.0306575,33.0138462 23.9337246,32.5968232 24.069176,32.2246735 L35.091923,1.9399251 C35.2266075,1.56988243 35.5659249,1.31333613 35.9586669,1.28460955 C36.5094802,1.24432106 36.9886628,1.65818318 37.0289513,2.20899647 L40.2437557,46.1609256 C40.2644355,46.4436546 40.1641446,46.7218752 39.9678293,46.9263833 C39.5853672,47.3248067 38.9523344,47.3377458 38.5539111,46.9552837 L24.3163597,33.2881029 L24.3163597,33.2881029 Z"/></g></svg>

### ANALISIS AUTOMATICO (ESPAÑOL) ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/direction</title><g id="illustration/direction" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><path id="Combined-Shape" fill="#FFD476" d="M23.4917015,33.6030641 L2.93840258,31.4321033 C2.38917316,31.3740904 1.99096346,30.8818233 2.04897631,30.3325939 C2.0747515,30.0885705 2.18934861,29.8625419 2.37095722,29.6975265 L34.2609105,0.721285325 C34.6696614,0.349881049 35.3021022,0.38015648 35.6735064,0.788907393 C35.9232621,1.06377731 36.0001133,1.45442096 35.8730901,1.80341447 L24.5364357,32.9506164 C24.3793473,33.3822133 23.9484565,33.6513092 23.4917015,33.6030641 L23.4917015,33.6030641 Z"/><path id="Combined-Shape-Copy" fill="#FFC445" d="M24.3163597,33.2881029 C24.0306575,33.0138462 23.9337246,32.5968232 24.069176,32.2246735 L35.091923,1.9399251 C35.2266075,1.56988243 35.5659249,1.31333613 35.9586669,1.28460955 C36.5094802,1.24432106 36.9886628,1.65818318 37.0289513,2.20899647 L40.2437557,46.1609256 C40.2644355,46.4436546 40.1641446,46.7218752 39.9678293,46.9263833 C39.5853672,47.3248067 38.9523344,47.3377458 38.5539111,46.9552837 L24.3163597,33.2881029 L24.3163597,33.2881029 Z"/></g></svg>
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/stories/assets/flow.svg
Tamaño: 1394 bytes
Lenguaje detectado: SVG

### CONTENIDO ORIGINAL ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/flow</title><g id="illustration/flow" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><path id="Combined-Shape" fill="#79C9FC" fill-rule="nonzero" d="M30,29 C32.7614237,29 35,26.7614237 35,24 C35,14.6111593 27.3888407,7 18,7 C8.61115925,7 1,14.6111593 1,24 C1,33.3888407 8.61115925,41 18,41 C19.3333404,41 20.6447683,40.8466238 21.9154603,40.5471706 C19.5096374,39.3319645 17.5510566,37.8612875 16.0456579,36.1314815 C14.1063138,33.9030427 12.769443,31.0725999 12.0293806,27.6556449 C11.360469,26.565281 11,25.3082308 11,24 C11,20.1340068 14.1340068,17 18,17 C21.8659932,17 25,20.1340068 25,24 C25,26.125 27.7040312,29 30,29 Z"/><path id="Combined-Shape-Copy" fill="#FFC445" fill-rule="nonzero" d="M42,29 C44.7614237,29 47,26.7614237 47,24 C47,14.6111593 39.3888407,7 30,7 C20.6111593,7 13,14.6111593 13,24 C13,33.3888407 20.6111593,41 30,41 C31.3333404,41 32.6447683,40.8466238 33.9154603,40.5471706 C31.5096374,39.3319645 29.4051056,37.9781963 28.0456579,36.1314815 C26.0625,33.4375 23,27.1875 23,24 C23,20.1340068 26.1340068,17 30,17 C33.8659932,17 37,20.1340068 37,24 C37.02301,26.3435241 39.7040312,29 42,29 Z" transform="translate(30.000000, 24.000000) scale(-1, -1) translate(-30.000000, -24.000000)"/></g></svg>

### ANALISIS AUTOMATICO (ESPAÑOL) ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/flow</title><g id="illustration/flow" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><path id="Combined-Shape" fill="#79C9FC" fill-rule="nonzero" d="M30,29 C32.7614237,29 35,26.7614237 35,24 C35,14.6111593 27.3888407,7 18,7 C8.61115925,7 1,14.6111593 1,24 C1,33.3888407 8.61115925,41 18,41 C19.3333404,41 20.6447683,40.8466238 21.9154603,40.5471706 C19.5096374,39.3319645 17.5510566,37.8612875 16.0456579,36.1314815 C14.1063138,33.9030427 12.769443,31.0725999 12.0293806,27.6556449 C11.360469,26.565281 11,25.3082308 11,24 C11,20.1340068 14.1340068,17 18,17 C21.8659932,17 25,20.1340068 25,24 C25,26.125 27.7040312,29 30,29 Z"/><path id="Combined-Shape-Copy" fill="#FFC445" fill-rule="nonzero" d="M42,29 C44.7614237,29 47,26.7614237 47,24 C47,14.6111593 39.3888407,7 30,7 C20.6111593,7 13,14.6111593 13,24 C13,33.3888407 20.6111593,41 30,41 C31.3333404,41 32.6447683,40.8466238 33.9154603,40.5471706 C31.5096374,39.3319645 29.4051056,37.9781963 28.0456579,36.1314815 C26.0625,33.4375 23,27.1875 23,24 C23,20.1340068 26.1340068,17 30,17 C33.8659932,17 37,20.1340068 37,24 C37.02301,26.3435241 39.7040312,29 42,29 Z" transform="translate(30.000000, 24.000000) scale(-1, -1) translate(-30.000000, -24.000000)"/></g></svg>
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/stories/assets/plugin.svg
Tamaño: 2174 bytes
Lenguaje detectado: SVG

### CONTENIDO ORIGINAL ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/plugin</title><g id="illustration/plugin" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><path id="Combined-Shape" fill="#79C9FC" d="M26,15.3994248 C26,15.4091303 26,15.4188459 26,15.4285714 L26,21.4694881 C25.8463595,21.4969567 25.6941676,21.51275 25.5873784,21.51275 C25.4974117,21.51275 25.4230979,21.4768034 25.377756,21.4206259 L25.2660784,21.2822603 L25.1317423,21.1657666 C24.2436317,20.3956144 23.100098,19.9633214 21.895551,19.9633214 C19.2039137,19.9633214 17,22.1075558 17,24.7804643 C17,27.4533728 19.2039137,29.5976071 21.895551,29.5976071 C23.1972122,29.5976071 24.3149423,29.2878193 25.1231445,28.3613697 C25.4542273,27.9818463 25.568273,27.9073214 25.5873784,27.9073214 C25.681532,27.9073214 25.8352452,27.9239643 26,27.9524591 L26,32.5714286 C26,32.5811541 26,32.5908697 26,32.6005752 L26,33 C26,35.209139 24.209139,37 22,37 L4,37 C1.790861,37 0,35.209139 0,33 L0,15 C0,12.790861 1.790861,11 4,11 L22,11 C24.209139,11 26,12.790861 26,15 L26,15.3994248 Z"/><path id="Path" fill="#87E6E5" d="M27.9998779,32.5714286 C27.9998779,33.3604068 28.6572726,34 29.4682101,34 L46.5315458,34 C47.3424832,34 47.9998779,33.3604068 47.9998779,32.5714286 L47.9998779,15.4285714 C47.9998779,14.6395932 47.3424832,14 46.5315458,14 L29.4682101,14 C28.6572726,14 27.9998779,14.6395932 27.9998779,15.4285714 L27.9998779,21.8355216 C27.9334367,22.2650514 27.8567585,22.6454496 27.746391,22.8084643 C27.4245309,23.2838571 26.2402709,23.51275 25.5873784,23.51275 C24.8705773,23.51275 24.2322714,23.1857725 23.8214379,22.6767605 C23.3096996,22.2329909 22.6349941,21.9633214 21.895551,21.9633214 C20.2963823,21.9633214 19,23.2245992 19,24.7804643 C19,26.3363293 20.2963823,27.5976071 21.895551,27.5976071 C22.5398535,27.5976071 23.2399343,27.477727 23.6160247,27.0466112 C24.1396029,26.4464286 24.7367044,25.9073214 25.5873784,25.9073214 C26.2402709,25.9073214 27.5912951,26.1766031 27.8226692,26.6116071 C27.8819199,26.7230038 27.9403239,26.921677 27.9998779,27.1556219 L27.9998779,32.5714286 Z"/></g></svg>

### ANALISIS AUTOMATICO (ESPAÑOL) ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/plugin</title><g id="illustration/plugin" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><path id="Combined-Shape" fill="#79C9FC" d="M26,15.3994248 C26,15.4091303 26,15.4188459 26,15.4285714 L26,21.4694881 C25.8463595,21.4969567 25.6941676,21.51275 25.5873784,21.51275 C25.4974117,21.51275 25.4230979,21.4768034 25.377756,21.4206259 L25.2660784,21.2822603 L25.1317423,21.1657666 C24.2436317,20.3956144 23.100098,19.9633214 21.895551,19.9633214 C19.2039137,19.9633214 17,22.1075558 17,24.7804643 C17,27.4533728 19.2039137,29.5976071 21.895551,29.5976071 C23.1972122,29.5976071 24.3149423,29.2878193 25.1231445,28.3613697 C25.4542273,27.9818463 25.568273,27.9073214 25.5873784,27.9073214 C25.681532,27.9073214 25.8352452,27.9239643 26,27.9524591 L26,32.5714286 C26,32.5811541 26,32.5908697 26,32.6005752 L26,33 C26,35.209139 24.209139,37 22,37 L4,37 C1.790861,37 0,35.209139 0,33 L0,15 C0,12.790861 1.790861,11 4,11 L22,11 C24.209139,11 26,12.790861 26,15 L26,15.3994248 Z"/><path id="Path" fill="#87E6E5" d="M27.9998779,32.5714286 C27.9998779,33.3604068 28.6572726,34 29.4682101,34 L46.5315458,34 C47.3424832,34 47.9998779,33.3604068 47.9998779,32.5714286 L47.9998779,15.4285714 C47.9998779,14.6395932 47.3424832,14 46.5315458,14 L29.4682101,14 C28.6572726,14 27.9998779,14.6395932 27.9998779,15.4285714 L27.9998779,21.8355216 C27.9334367,22.2650514 27.8567585,22.6454496 27.746391,22.8084643 C27.4245309,23.2838571 26.2402709,23.51275 25.5873784,23.51275 C24.8705773,23.51275 24.2322714,23.1857725 23.8214379,22.6767605 C23.3096996,22.2329909 22.6349941,21.9633214 21.895551,21.9633214 C20.2963823,21.9633214 19,23.2245992 19,24.7804643 C19,26.3363293 20.2963823,27.5976071 21.895551,27.5976071 C22.5398535,27.5976071 23.2399343,27.477727 23.6160247,27.0466112 C24.1396029,26.4464286 24.7367044,25.9073214 25.5873784,25.9073214 C26.2402709,25.9073214 27.5912951,26.1766031 27.8226692,26.6116071 C27.8819199,26.7230038 27.9403239,26.921677 27.9998779,27.1556219 L27.9998779,32.5714286 Z"/></g></svg>
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/stories/assets/repo.svg
Tamaño: 1638 bytes
Lenguaje detectado: SVG

### CONTENIDO ORIGINAL ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/repo</title><g id="illustration/repo" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><path id="Rectangle-62-Copy" fill="#B7F0EF" d="M27.2217723,9.04506931 L41.2217723,6.2682098 C43.3886973,5.83840648 45.4937616,7.2466219 45.9235649,9.41354696 C45.9743993,9.66983721 46,9.93049166 46,10.1917747 L46,32.581381 C46,34.4904961 44.650862,36.1335143 42.7782277,36.5049459 L28.7782277,39.2818054 C26.6113027,39.7116087 24.5062384,38.3033933 24.0764351,36.1364682 C24.0256007,35.880178 24,35.6195235 24,35.3582405 L24,12.9686342 C24,11.0595191 25.349138,9.4165009 27.2217723,9.04506931 Z" opacity=".7"/><path id="Combined-Shape" fill="#87E6E5" d="M6.77822775,6.2682098 L20.7782277,9.04506931 C22.650862,9.4165009 24,11.0595191 24,12.9686342 L24,35.3582405 C24,37.5673795 22.209139,39.3582405 20,39.3582405 C19.738717,39.3582405 19.4780625,39.3326398 19.2217723,39.2818054 L5.22177225,36.5049459 C3.34913798,36.1335143 2,34.4904961 2,32.581381 L2,10.1917747 C2,7.98263571 3.790861,6.19177471 6,6.19177471 C6.26128305,6.19177471 6.5219375,6.21737537 6.77822775,6.2682098 Z"/><path id="Rectangle-63-Copy-2" fill="#61C1FD" d="M22,10 C23.1666667,10.2291667 24.0179036,10.625 24.5537109,11.1875 C25.0895182,11.75 25.5716146,12.875 26,14.5625 C26,29.3020833 26,37.5208333 26,39.21875 C26,40.9166667 26.4241536,42.9583333 27.2724609,45.34375 L24.5537109,41.875 L22.9824219,45.34375 C22.327474,43.1979167 22,41.2291667 22,39.4375 C22,37.6458333 22,27.8333333 22,10 Z"/></g></svg>

### ANALISIS AUTOMATICO (ESPAÑOL) ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/repo</title><g id="illustration/repo" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><path id="Rectangle-62-Copy" fill="#B7F0EF" d="M27.2217723,9.04506931 L41.2217723,6.2682098 C43.3886973,5.83840648 45.4937616,7.2466219 45.9235649,9.41354696 C45.9743993,9.66983721 46,9.93049166 46,10.1917747 L46,32.581381 C46,34.4904961 44.650862,36.1335143 42.7782277,36.5049459 L28.7782277,39.2818054 C26.6113027,39.7116087 24.5062384,38.3033933 24.0764351,36.1364682 C24.0256007,35.880178 24,35.6195235 24,35.3582405 L24,12.9686342 C24,11.0595191 25.349138,9.4165009 27.2217723,9.04506931 Z" opacity=".7"/><path id="Combined-Shape" fill="#87E6E5" d="M6.77822775,6.2682098 L20.7782277,9.04506931 C22.650862,9.4165009 24,11.0595191 24,12.9686342 L24,35.3582405 C24,37.5673795 22.209139,39.3582405 20,39.3582405 C19.738717,39.3582405 19.4780625,39.3326398 19.2217723,39.2818054 L5.22177225,36.5049459 C3.34913798,36.1335143 2,34.4904961 2,32.581381 L2,10.1917747 C2,7.98263571 3.790861,6.19177471 6,6.19177471 C6.26128305,6.19177471 6.5219375,6.21737537 6.77822775,6.2682098 Z"/><path id="Rectangle-63-Copy-2" fill="#61C1FD" d="M22,10 C23.1666667,10.2291667 24.0179036,10.625 24.5537109,11.1875 C25.0895182,11.75 25.5716146,12.875 26,14.5625 C26,29.3020833 26,37.5208333 26,39.21875 C26,40.9166667 26.4241536,42.9583333 27.2724609,45.34375 L24.5537109,41.875 L22.9824219,45.34375 C22.327474,43.1979167 22,41.2291667 22,39.4375 C22,37.6458333 22,27.8333333 22,10 Z"/></g></svg>
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/stories/assets/stackalt.svg
Tamaño: 2546 bytes
Lenguaje detectado: SVG

### CONTENIDO ORIGINAL ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/stackalt</title><g id="illustration/stackalt" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><path id="Combined-Shape" fill="#FFAE00" d="M23.8628277,0 L23.8628277,48 L3.32291648,36.2491883 L3.32155653,11.9499781 L23.8628277,0 Z M23.8670509,0 L44.408322,11.9499781 L44.4069621,36.2491883 L23.8670509,48 L23.8670509,0 Z" opacity=".196"/><path id="Rectangle-46-Copy-3" fill="#66BF3C" d="M15.8232279,19.1155258 L24.7368455,21.4714881 C29.6053842,22.7582937 33.4077423,26.5606518 34.694548,31.4291905 L37.0505103,40.3428082 C37.6150232,42.4786032 36.3412474,44.6676353 34.2054524,45.2321482 C33.5569474,45.4035549 32.87575,45.4091235 32.2245294,45.2483418 L23.3459013,43.0562718 C18.2976962,41.809906 14.3561301,37.8683399 13.1097642,32.8201348 L10.9176943,23.9415066 C10.3881737,21.7967682 11.6975664,19.6288529 13.8423049,19.0993322 C14.4935255,18.9385505 15.1747229,18.9441191 15.8232279,19.1155258 Z" opacity=".5" transform="translate(23.999997, 32.166058) rotate(-45.000000) translate(-23.999997, -32.166058)"/><path id="Rectangle-46-Copy-2" fill="#FFAE00" d="M15.8232279,11.2216893 L24.7368455,13.5776516 C29.6053842,14.8644572 33.4077423,18.6668153 34.694548,23.5353541 L37.0505103,32.4489717 C37.6150232,34.5847667 36.3412474,36.7737988 34.2054524,37.3383117 C33.5569474,37.5097184 32.87575,37.515287 32.2245294,37.3545053 L23.3459013,35.1624353 C18.2976962,33.9160695 14.3561301,29.9745034 13.1097642,24.9262983 L10.9176943,16.0476701 C10.3881737,13.9029317 11.6975664,11.7350164 13.8423049,11.2054957 C14.4935255,11.044714 15.1747229,11.0502826 15.8232279,11.2216893 Z" opacity=".5" transform="translate(23.999997, 24.272222) rotate(-45.000000) translate(-23.999997, -24.272222)"/><path id="Rectangle-46-Copy" fill="#FC521F" d="M15.8232279,3.32785281 L24.7368455,5.68381509 C29.6053842,6.97062075 33.4077423,10.7729788 34.694548,15.6415176 L37.0505103,24.5551352 C37.6150232,26.6909302 36.3412474,28.8799623 34.2054524,29.4444752 C33.5569474,29.6158819 32.87575,29.6214505 32.2245294,29.4606688 L23.3459013,27.2685988 C18.2976962,26.022233 14.3561301,22.0806669 13.1097642,17.0324618 L10.9176943,8.15383364 C10.3881737,6.00909519 11.6975664,3.84117987 13.8423049,3.31165925 C14.4935255,3.15087753 15.1747229,3.15644615 15.8232279,3.32785281 Z" opacity=".5" transform="translate(23.999997, 16.378385) rotate(-45.000000) translate(-23.999997, -16.378385)"/></g></svg>

### ANALISIS AUTOMATICO (ESPAÑOL) ###

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48" height="48" version="1.1" viewBox="0 0 48 48"><title>illustration/stackalt</title><g id="illustration/stackalt" fill="none" fill-rule="evenodd" stroke="none" stroke-width="1"><path id="Combined-Shape" fill="#FFAE00" d="M23.8628277,0 L23.8628277,48 L3.32291648,36.2491883 L3.32155653,11.9499781 L23.8628277,0 Z M23.8670509,0 L44.408322,11.9499781 L44.4069621,36.2491883 L23.8670509,48 L23.8670509,0 Z" opacity=".196"/><path id="Rectangle-46-Copy-3" fill="#66BF3C" d="M15.8232279,19.1155258 L24.7368455,21.4714881 C29.6053842,22.7582937 33.4077423,26.5606518 34.694548,31.4291905 L37.0505103,40.3428082 C37.6150232,42.4786032 36.3412474,44.6676353 34.2054524,45.2321482 C33.5569474,45.4035549 32.87575,45.4091235 32.2245294,45.2483418 L23.3459013,43.0562718 C18.2976962,41.809906 14.3561301,37.8683399 13.1097642,32.8201348 L10.9176943,23.9415066 C10.3881737,21.7967682 11.6975664,19.6288529 13.8423049,19.0993322 C14.4935255,18.9385505 15.1747229,18.9441191 15.8232279,19.1155258 Z" opacity=".5" transform="translate(23.999997, 32.166058) rotate(-45.000000) translate(-23.999997, -32.166058)"/><path id="Rectangle-46-Copy-2" fill="#FFAE00" d="M15.8232279,11.2216893 L24.7368455,13.5776516 C29.6053842,14.8644572 33.4077423,18.6668153 34.694548,23.5353541 L37.0505103,32.4489717 C37.6150232,34.5847667 36.3412474,36.7737988 34.2054524,37.3383117 C33.5569474,37.5097184 32.87575,37.515287 32.2245294,37.3545053 L23.3459013,35.1624353 C18.2976962,33.9160695 14.3561301,29.9745034 13.1097642,24.9262983 L10.9176943,16.0476701 C10.3881737,13.9029317 11.6975664,11.7350164 13.8423049,11.2054957 C14.4935255,11.044714 15.1747229,11.0502826 15.8232279,11.2216893 Z" opacity=".5" transform="translate(23.999997, 24.272222) rotate(-45.000000) translate(-23.999997, -24.272222)"/><path id="Rectangle-46-Copy" fill="#FC521F" d="M15.8232279,3.32785281 L24.7368455,5.68381509 C29.6053842,6.97062075 33.4077423,10.7729788 34.694548,15.6415176 L37.0505103,24.5551352 C37.6150232,26.6909302 36.3412474,28.8799623 34.2054524,29.4444752 C33.5569474,29.6158819 32.87575,29.6214505 32.2245294,29.4606688 L23.3459013,27.2685988 C18.2976962,26.022233 14.3561301,22.0806669 13.1097642,17.0324618 L10.9176943,8.15383364 C10.3881737,6.00909519 11.6975664,3.84117987 13.8423049,3.31165925 C14.4935255,3.15087753 15.1747229,3.15644615 15.8232279,3.32785281 Z" opacity=".5" transform="translate(23.999997, 16.378385) rotate(-45.000000) translate(-23.999997, -16.378385)"/></g></svg>
No se detectaron dependencias obvias en el texto.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/LocalStudioAuthenticator.tsx
Tamaño: 5623 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useEffect } from 'react';
import { useLocation } from 'react-router-dom';
import { useAuth, useEnvironment } from '../hooks';
import { ROUTES } from '../constants/routes';
import { assertProtocol } from '../utils/url';
import { encodeBase64 } from './utils/base64';
import { StudioState } from './types';
import { novuOnboardedCookie } from '../utils/cookies';
import { LocalStudioPageLayout } from '../components/layout/components/LocalStudioPageLayout';
import { getToken } from '../components/providers/AuthProvider';

function buildBridgeURL(origin: string | null, tunnelPath: string) {
  if (!origin) {
    return '';
  }

  return new URL(tunnelPath, origin).href;
}

function buildStudioURL(state: StudioState, defaultPath?: string | null) {
  const url = new URL(defaultPath || ROUTES.STUDIO, window.location.origin);
  url.searchParams.append('state', encodeBase64(state));

  return url.href;
}

export function LocalStudioAuthenticator() {
  const { currentUser, isUserLoaded, redirectToLogin, redirectToSignUp, currentOrganization, isOrganizationLoaded } =
    useAuth();
  const isLoading = !isUserLoaded && !isOrganizationLoaded;
  const location = useLocation();
  const { environments } = useEnvironment();
  const hasToken = !!getToken();

  // TODO: Refactor this to a smaller size function
  useEffect(() => {
    const parsedSearchParams = new URLSearchParams(location.search);
    const anonymousId = parsedSearchParams.get('anonymous_id');

    // Get the redirect URL of the Local Studio server
    const redirectURL = parsedSearchParams.get('redirect_url');

    if (!redirectURL) {
      throw new Error('Failed to load Local Studio: missing redirect_url parameter.');
    }

    // Convert it to a URL object
    const parsedRedirectURL = new URL(redirectURL);

    // Protect against XSS attacks via the javascript: pseudo protocol
    assertProtocol(parsedRedirectURL);

    // Parse the current URL, we will need it later
    const currentURL = new URL(window.location.href);

    // If the user is not logged in, redirect to the login or signup page
    if (!currentUser) {
      /*
       * If user is loading, wait for user to be loaded
       * We check for token here because on login we have a race condition
       * that is done with the loading and is missing a user but the auth token
       * is already present, the data just needs to refresh. Whe should investigate
       * why this race condition exists
       */
      if (!isLoading && !hasToken) {
        /*
         * If the user has logged in before, redirect to the login page.
         * After authentication, redirect back to the this /local-studio/auth path.
         */
        if (novuOnboardedCookie.get()) {
          return redirectToLogin({ redirectURL: window.location.href });
        }

        /*
         * If the user hasn't logged in before, redirect to the login page.
         * After authentication, redirect back to the this /local-studio/auth path and
         * remember that studio needs to be in onboarding mode.
         */
        return redirectToSignUp({ redirectURL: currentURL.href, origin: 'cli', anonymousId: anonymousId || undefined });
      }

      return;
    }

    // Wait for environments and apiKeys to be loaded
    if (!environments || environments?.length === 0) {
      return;
    }

    // Get the local application origin parameter
    const applicationOrigin = parsedSearchParams.get('application_origin');

    if (!applicationOrigin) {
      throw new Error('Failed to load Local Studio: missing application_origin parameter.');
    }

    const parsedApplicationOrigin = new URL(applicationOrigin);

    // Protect against XSS attacks via the javascript: pseudo protocol
    assertProtocol(parsedApplicationOrigin);

    // Get the optional tunnel origin parameter
    const tunnelOrigin = parsedSearchParams.get('tunnel_origin');
    const tunnelPath = parsedSearchParams.get('tunnel_route');

    if (!tunnelPath) {
      throw new Error('Tunnel Path is not defined');
    }

    // Protect against XSS attacks via the javascript: pseudo protocol
    assertProtocol(tunnelOrigin);

    // Build the state that will be passed to the Local Studio iframe

    const localBridgeURL = buildBridgeURL(parsedApplicationOrigin.origin, tunnelPath);
    const tunnelBridgeURL = buildBridgeURL(tunnelOrigin, tunnelPath);

    // TODO: Add apiKeys to the IEnvironment interface as they exist in the response

    // @ts-expect-error - TODO: fix this
    const devSecretKey = environments.find((env) => env.name.toLowerCase() === 'development')?.apiKeys[0]?.key;

    if (environments?.length > 0 && !devSecretKey) {
      throw new Error('Failed to load Local Studio: missing development environment secret key.');
    }

    const state: StudioState = {
      isLocalStudio: true,
      devSecretKey,
      testUser: {
        id: currentUser._id,
        emailAddress: currentUser.email || '',
      },
      localBridgeURL,
      tunnelBridgeURL,
      organizationName: currentOrganization?.name || '',
      anonymousId,
    };

    /*
     * Construct the final redirect URL pointing to the Local Studio server and add
     * the iframe src URL as a search param.
     */
    const finalRedirectURL = new URL(redirectURL);
    finalRedirectURL.searchParams.append(
      'local_studio_url',
      buildStudioURL(state, currentURL.searchParams.get('studio_path_hint'))
    );

    // Redirect to Local Studio server
    window.location.href = finalRedirectURL.href;
  }, [currentUser, environments, isLoading]);

  return <LocalStudioPageLayout.LoadingDisplay />;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useEffect } from 'react';
import { useLocation } from 'react-router-dom';
import { useAuth, useEnvironment } from '../hooks';
import { ROUTES } from '../constants/routes';
import { assertProtocol } from '../utils/url';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/StudioPageLayout.tsx
Tamaño: 904 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Outlet, useLocation } from 'react-router-dom';
import { useEffect } from 'react';
import { useStudioState } from './StudioStateProvider';
import { PrivatePageLayout } from '../components/layout/components/PrivatePageLayout';
import { LocalStudioPageLayout } from '../components/layout/components/LocalStudioPageLayout';
import { ROUTES } from '../constants/routes';

export function StudioPageLayout() {
  const state = useStudioState();
  const { pathname } = useLocation();

  useEffect(() => {
    onPathnameChangeUpdateIframeClient(pathname);
  }, [pathname]);

  if (pathname.startsWith(ROUTES.STUDIO_ONBOARDING)) {
    return <Outlet />;
  }

  if (state?.isLocalStudio) {
    return <LocalStudioPageLayout />;
  }

  return <PrivatePageLayout />;
}

function onPathnameChangeUpdateIframeClient(pathname: string) {
  window.parent.postMessage({ type: 'pathnameChange', pathname }, '*');
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Outlet, useLocation } from 'react-router-dom';
import { useEffect } from 'react';
import { useStudioState } from './StudioStateProvider';
import { PrivatePageLayout } from '../components/layout/components/PrivatePageLayout';
import { LocalStudioPageLayout } from '../components/layout/components/LocalStudioPageLayout';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/StudioStateProvider.tsx
Tamaño: 2544 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import React, { useEffect, useMemo, useState } from 'react';
import { useLocation } from 'react-router-dom';
import type { IUserEntity } from '@novu/shared';
import { useAuth } from '../hooks/useAuth';
import { useEnvironment } from '../hooks/useEnvironment';
import type { StudioState } from './types';
import { decodeBase64 } from './utils/base64';

type BridgeURLGetterSetter = { bridgeURL: string; setBridgeURL: (url: string) => void };

const StudioStateContext = React.createContext<(StudioState & BridgeURLGetterSetter) | undefined>(undefined);

function computeBridgeURL(state: StudioState) {
  return state.isLocalStudio ? state.localBridgeURL || state.tunnelBridgeURL : state.storedBridgeURL;
}

function convertToTestUser(currentUser?: IUserEntity | null) {
  return {
    id: currentUser?._id || '',
    emailAddress: currentUser?.email || '',
    firstName: currentUser?.firstName || '',
    lastName: currentUser?.lastName || '',
  };
}

export const StudioStateProvider = ({ children }: { children: React.ReactNode }) => {
  const location = useLocation();
  const { currentUser, currentOrganization } = useAuth();
  const { environment } = useEnvironment();
  const [state, setState] = useState<StudioState>(() => {
    const stateParam = new URLSearchParams(location.search).get('state');

    // Local mode
    if (stateParam) {
      return decodeBase64(stateParam);
    }

    return {
      isLocalStudio: false,
      storedBridgeURL: environment?.echo?.url || '',
      testUser: convertToTestUser(currentUser),
      organizationName: currentOrganization?.name || '',
    };
  });

  const [bridgeURL, setBridgeURL] = useState(computeBridgeURL(state));

  useEffect(() => {
    if (!state.isLocalStudio) {
      setState({
        isLocalStudio: false,
        storedBridgeURL: environment?.echo?.url || '',
        testUser: convertToTestUser(currentUser),
        organizationName: currentOrganization?.name || '',
      });
    }
  }, [environment, state?.isLocalStudio, currentUser, currentOrganization]);

  useEffect(() => {
    setBridgeURL(computeBridgeURL(state));
  }, [state]);

  const value = useMemo(() => ({ ...state, bridgeURL, setBridgeURL }), [state, bridgeURL, setBridgeURL]);

  return <StudioStateContext.Provider value={value}>{children}</StudioStateContext.Provider>;
};

export const useStudioState = () => {
  const value = React.useContext(StudioStateContext);
  if (!value) {
    throw new Error("The useStudioState can't be used outside the <StudioStateProvider/>.");
  }

  return value;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import React, { useEffect, useMemo, useState } from 'react';
import { useLocation } from 'react-router-dom';
import type { IUserEntity } from '@novu/shared';
import { useAuth } from '../hooks/useAuth';
import { useEnvironment } from '../hooks/useEnvironment';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/types.ts
Tamaño: 841 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

type BaseStudioState = {
  testUser: {
    id: string;
    firstName?: string;
    lastName?: string;
    emailAddress: string;
  };
  organizationName?: string;
  devSecretKey?: string;
  anonymousId?: string | null;
};

type CloudStudioState = BaseStudioState & {
  isLocalStudio: false;
  storedBridgeURL: string;
};

type LocalStudioState = BaseStudioState & {
  isLocalStudio: true;
  localBridgeURL: string;
  tunnelBridgeURL: string;
};

export type StudioState = LocalStudioState | CloudStudioState;

/** Current state of connection to Novu Bridge */
export type ConnectionStatus = 'connected' | 'disconnected' | 'loading';

/** Payload from our well-known URI */
export type LocalStudioWellKnownMetadata = {
  port: string;
  route: string;
  dashboardUrl: string;
  studioPort: string;
  origin: string;
  tunnelOrigin: string;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  type
- export  type
- export  type

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/components/OpenLocalStudioModal.tsx
Tamaño: 1459 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Modal } from '@novu/design-system';
import { FC } from 'react';
import { Button, Text, Title } from '@novu/novui';
import { css } from '@novu/novui/css';
import { HStack, Stack } from '@novu/novui/jsx';
import { CodeSnippet } from '../../pages/studio-onboarding/components/CodeSnippet';
import { useNavigateToLocalStudio } from '../hooks/useNavigateToLocalStudio';

type OpenLocalStudioModalProps = {
  isOpen: boolean;
  toggleOpen: () => void;
};

export const OpenLocalStudioModal: FC<OpenLocalStudioModalProps> = ({ isOpen, toggleOpen }) => {
  const { forceStudioNavigation } = useNavigateToLocalStudio();

  const handlePrimaryClick = () => {
    forceStudioNavigation();
    toggleOpen();
  };

  return (
    <Modal
      opened={isOpen}
      title={<Title variant="section">Open local studio</Title>}
      onClose={toggleOpen}
      className={css({ colorPalette: 'mode.cloud' })}
    >
      <Stack gap="100">
        <Text color="typography.text.secondary">
          The Local Studio is where you can create your own workflows and expose no-code controls to your non-technical
          team-members. This command will run the Studio on your local machine
        </Text>

        <CodeSnippet command={'npx novu@latest dev'} />
        <HStack justify={'flex-end'}>
          <Button size={'md'} onClick={handlePrimaryClick} variant="outline">
            Open
          </Button>
        </HStack>
      </Stack>
    </Modal>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Modal } from '@novu/design-system';
import { FC } from 'react';
import { Button, Text, Title } from '@novu/novui';
import { css } from '@novu/novui/css';
import { HStack, Stack } from '@novu/novui/jsx';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/OutlineButton.tsx
Tamaño: 910 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Button, ButtonProps } from '@novu/novui';
import { css, cx } from '@novu/novui/css';
import { FC } from 'react';

type OutlineButtonProps = Omit<ButtonProps, 'variant'>;

/**
 * An outline button with non-colored label and icon.
 *
 * TODO: Extract to Novui if it is meant to be standardized. For now, it is just a reused component across web.
 */
export const OutlineButton: FC<OutlineButtonProps> = ({ className, children, ...buttonProps }) => {
  return (
    <Button
      variant="outline"
      className={cx(
        css({
          '& .nv-button__label, & .nv-button__section': {
            '&, & svg': { color: 'typography.text.main !important', fill: 'typography.text.main !important' },
            WebkitTextFillColor: 'unset !important',
          },
          bg: 'transparent',
        }),
        className
      )}
      {...buttonProps}
    >
      {children}
    </Button>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Button, ButtonProps } from '@novu/novui';
import { css, cx } from '@novu/novui/css';
import { FC } from 'react';
type OutlineButtonProps = Omit<ButtonProps, 'variant'>;
/**
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/GetStartedPageV2/Development.tsx
Tamaño: 203655 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useColorScheme } from '@novu/design-system';

export const Development = () => {
  const { colorScheme } = useColorScheme();

  if (colorScheme === 'light') {
    return (
      <svg xmlns="http://www.w3.org/2000/svg" width="280" height="180" viewBox="0 0 280 180" fill="none">
        <g clipPath="url(#clip0_5956_60010)">
          <mask
            id="mask0_5956_60010"
            style={{
              maskType: 'luminance',
            }}
            maskUnits="userSpaceOnUse"
            x="0"
            y="0"
            width="280"
            height="180"
          >
            <path
              d="M0 12C0 5.37258 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V168C280 174.627 274.627 180 268 180H12C5.37259 180 0 174.627 0 168V12Z"
              fill="white"
            />
          </mask>
          <g mask="url(#mask0_5956_60010)">
            <g filter="url(#filter0_d_5956_60010)">
              <path d="M280 0H0V36H280V0Z" fill="white" />
              <path
                d="M21.1887 20.1146L22.6027 18.7006L26.6 22.6979L25.186 24.1119L21.1887 20.1146ZM23.6667 16.6666C24.9533 16.6666 26 15.6199 26 14.3333C26 13.9466 25.8933 13.5866 25.7267 13.2666L23.9267 15.0666L22.9333 14.0733L24.7333 12.2733C24.4133 12.1066 24.0533 11.9999 23.6667 11.9999C22.38 11.9999 21.3333 13.0466 21.3333 14.3333C21.3333 14.6066 21.3867 14.8666 21.4733 15.1066L20.24 16.3399L19.0533 15.1533L19.5267 14.6799L18.5867 13.7399L20 12.3266C19.625 11.9521 19.1167 11.7417 18.5867 11.7417C18.0567 11.7417 17.5483 11.9521 17.1733 12.3266L14.8133 14.6866L15.7533 15.6266H13.8733L13.4 16.0999L15.76 18.4599L16.2333 17.9866V16.0999L17.1733 17.0399L17.6467 16.5666L18.8333 17.7533L13.8933 22.6933L15.3067 24.1066L22.8933 16.5266C23.1333 16.6133 23.3933 16.6666 23.6667 16.6666Z"
                fill="#A1A1B2"
              />
              <path
                d="M33.2168 23V13.1357H36.915C39.8477 13.1357 41.5566 14.9268 41.5566 18.0166V18.0303C41.5566 21.1885 39.8682 23 36.915 23H33.2168ZM34.9805 21.5166H36.6826C38.6445 21.5166 39.7588 20.2725 39.7588 18.0576V18.0439C39.7588 15.877 38.6172 14.6191 36.6826 14.6191H34.9805V21.5166ZM46.6016 23.1504C44.3799 23.1504 43.0332 21.6602 43.0332 19.2812V19.2744C43.0332 16.9229 44.3936 15.3848 46.5195 15.3848C48.6455 15.3848 49.958 16.875 49.958 19.1309V19.6914H44.7354C44.7559 21.0312 45.4805 21.8105 46.6357 21.8105C47.5586 21.8105 48.085 21.3457 48.249 21.0039L48.2695 20.9561H49.8896L49.8691 21.0176C49.6299 21.9814 48.6318 23.1504 46.6016 23.1504ZM46.54 16.7178C45.5898 16.7178 44.8789 17.3604 44.749 18.5498H48.2969C48.1807 17.3262 47.4902 16.7178 46.54 16.7178ZM53.4922 23L50.833 15.5283H52.6514L54.3809 21.3389H54.4971L56.2129 15.5283H58.0039L55.3584 23H53.4922ZM62.3379 23.1504C60.1162 23.1504 58.7695 21.6602 58.7695 19.2812V19.2744C58.7695 16.9229 60.1299 15.3848 62.2559 15.3848C64.3818 15.3848 65.6943 16.875 65.6943 19.1309V19.6914H60.4717C60.4922 21.0312 61.2168 21.8105 62.3721 21.8105C63.2949 21.8105 63.8213 21.3457 63.9854 21.0039L64.0059 20.9561H65.626L65.6055 21.0176C65.3662 21.9814 64.3682 23.1504 62.3379 23.1504ZM62.2764 16.7178C61.3262 16.7178 60.6152 17.3604 60.4854 18.5498H64.0332C63.917 17.3262 63.2266 16.7178 62.2764 16.7178ZM67.4648 23V12.6367H69.167V23H67.4648ZM74.5469 23.1504C72.3047 23.1504 70.9512 21.6875 70.9512 19.2676V19.2539C70.9512 16.8545 72.3252 15.3848 74.5469 15.3848C76.7754 15.3848 78.1426 16.8477 78.1426 19.2539V19.2676C78.1426 21.6875 76.7822 23.1504 74.5469 23.1504ZM74.5469 21.7695C75.7295 21.7695 76.3994 20.8467 76.3994 19.2744V19.2607C76.3994 17.6885 75.7227 16.7588 74.5469 16.7588C73.3643 16.7588 72.6875 17.6885 72.6875 19.2607V19.2744C72.6875 20.8467 73.3643 21.7695 74.5469 21.7695ZM79.8516 25.4814V15.5283H81.5537V16.6973H81.6699C82.0801 15.8838 82.8936 15.4053 83.9395 15.4053C85.8125 15.4053 87.0088 16.8955 87.0088 19.2607V19.2744C87.0088 21.6533 85.833 23.123 83.9395 23.123C82.9141 23.123 82.0596 22.6172 81.6699 21.8105H81.5537V25.4814H79.8516ZM83.4062 21.6875C84.5684 21.6875 85.2725 20.7715 85.2725 19.2744V19.2607C85.2725 17.7568 84.5684 16.8408 83.4062 16.8408C82.251 16.8408 81.5332 17.7568 81.5332 19.2539V19.2676C81.5332 20.7646 82.251 21.6875 83.4062 21.6875ZM88.7246 23V15.5283H90.4268V16.6904H90.543C90.8643 15.8564 91.6162 15.3848 92.5938 15.3848C93.6055 15.3848 94.3438 15.9043 94.665 16.7314H94.7812C95.1436 15.918 96.0049 15.3848 97.0439 15.3848C98.5479 15.3848 99.4502 16.3076 99.4502 17.8594V23H97.748V18.2764C97.748 17.3057 97.3037 16.8135 96.3945 16.8135C95.5059 16.8135 94.9316 17.4766 94.9316 18.3311V23H93.2295V18.1533C93.2295 17.3262 92.7168 16.8135 91.8828 16.8135C91.042 16.8135 90.4268 17.5244 90.4268 18.4541V23H88.7246ZM104.666 23.1504C102.444 23.1504 101.098 21.6602 101.098 19.2812V19.2744C101.098 16.9229 102.458 15.3848 104.584 15.3848C106.71 15.3848 108.022 16.875 108.022 19.1309V19.6914H102.8C102.82 21.0312 103.545 21.8105 104.7 21.8105C105.623 21.8105 106.149 21.3457 106.313 21.0039L106.334 20.9561H107.954L107.934 21.0176C107.694 21.9814 106.696 23.1504 104.666 23.1504ZM104.604 16.7178C103.654 16.7178 102.943 17.3604 102.813 18.5498H106.361C106.245 17.3262 105.555 16.7178 104.604 16.7178ZM109.725 23V15.5283H111.427V16.6699H111.543C111.898 15.8701 112.616 15.3848 113.696 15.3848C115.364 15.3848 116.273 16.3896 116.273 18.167V23H114.571V18.5635C114.571 17.4014 114.1 16.8135 113.067 16.8135C112.056 16.8135 111.427 17.5244 111.427 18.6455V23H109.725ZM121.223 23.0342C119.507 23.0342 118.803 22.46 118.803 21.0176V16.8477H117.641V15.5283H118.803V13.6963H120.532V15.5283H122.111V16.8477H120.532V20.6143C120.532 21.3594 120.826 21.6738 121.537 21.6738C121.776 21.6738 121.906 21.667 122.111 21.6465V22.959C121.865 23.0068 121.551 23.0342 121.223 23.0342Z"
                fill="#A1A1B2"
              />
              <mask
                id="mask1_5956_60010"
                style={{
                  maskType: 'luminance',
                }}
                maskUnits="userSpaceOnUse"
                x="0"
                y="36"
                width="280"
                height="195"
              >
                <path d="M280 36H0V231H280V36Z" fill="white" />
              </mask>
              <g mask="url(#mask1_5956_60010)">
                <path d="M280 36H0V231H280V36Z" fill="white" />
                <g filter="url(#filter1_d_5956_60010)">
                  <path
                    d="M8 52C8 47.5817 11.5817 44 16 44H264C268.418 44 272 47.5817 272 52V68H8V52Z"
                    fill="#F5F8FA"
                  />
                  <path
                    d="M24 60C26.2091 60 28 58.2091 28 56C28 53.7909 26.2091 52 24 52C21.7909 52 20 53.7909 20 56C20 58.2091 21.7909 60 24 60Z"
                    fill="#A1A1B2"
                  />
                  <path
                    d="M38 60C40.2091 60 42 58.2091 42 56C42 53.7909 40.2091 52 38 52C35.7909 52 34 53.7909 34 56C34 58.2091 35.7909 60 38 60Z"
                    fill="#A1A1B2"
                  />
                  <path
                    d="M52 60C54.2091 60 56 58.2091 56 56C56 53.7909 54.2091 52 52 52C49.7909 52 48 53.7909 48 56C48 58.2091 49.7909 60 52 60Z"
                    fill="#A1A1B2"
                  />
                  <path d="M8 68H272V219C272 225.627 266.627 231 260 231H8V68Z" fill="white" />
                  <path
                    d="M16 84C16 79.5817 19.5817 76 24 76H48C52.4183 76 56 79.5817 56 84V108C56 112.418 52.4183 116 48 116H24C19.5817 116 16 112.418 16 108V84Z"
                    fill="#F5F8FA"
                  />
                  <path
                    d="M36 96.0002C38.9467 96.0002 41.3333 93.6135 41.3333 90.6668C41.3333 87.7202 38.9467 85.3335 36 85.3335C33.0533 85.3335 30.6667 87.7202 30.6667 90.6668C30.6667 93.6135 33.0533 96.0002 36 96.0002ZM36 98.6668C32.44 98.6668 25.3333 100.453 25.3333 104V106.667H46.6667V104C46.6667 100.453 39.56 98.6668 36 98.6668Z"
                    fill="#A1A1B2"
                  />
                  <path
                    d="M75.3018 91L72.6152 81.1357H73.9004L75.8623 89.1543H75.9443L78.1523 81.1357H79.3965L81.6045 89.1543H81.6865L83.6484 81.1357H84.9336L82.2471 91H81.085L78.8154 83.2139H78.7334L76.4639 91H75.3018ZM88.9805 91.1299C86.875 91.1299 85.6035 89.6533 85.6035 87.3428V87.3359C85.6035 85.0596 86.9023 83.501 88.9053 83.501C90.9082 83.501 92.125 84.9912 92.125 87.1924V87.6572H86.8203C86.8545 89.1816 87.6953 90.0703 89.0078 90.0703C90.0059 90.0703 90.6211 89.5986 90.8193 89.1543L90.8467 89.0928H92.0361L92.0225 89.1475C91.7695 90.1455 90.7168 91.1299 88.9805 91.1299ZM88.8984 84.5605C87.8047 84.5605 86.9707 85.3057 86.8408 86.707H90.915C90.792 85.251 89.9854 84.5605 88.8984 84.5605ZM94.0391 91V80.7051H95.2285V91H94.0391ZM100.526 91.1299C98.4619 91.1299 97.1426 89.6328 97.1426 87.2949V87.2812C97.1426 84.9912 98.4551 83.501 100.52 83.501C102.311 83.501 103.384 84.5332 103.603 85.8457L103.609 85.8867H102.427L102.42 85.8662C102.235 85.1416 101.579 84.5537 100.52 84.5537C99.1934 84.5537 98.3594 85.6201 98.3594 87.2812V87.2949C98.3594 88.9902 99.207 90.0771 100.52 90.0771C101.511 90.0771 102.14 89.6396 102.413 88.8193L102.427 88.7783L103.603 88.7715L103.589 88.8467C103.288 90.1797 102.297 91.1299 100.526 91.1299ZM108.374 91.1299C106.275 91.1299 104.977 89.6807 104.977 87.3223V87.3086C104.977 84.9434 106.275 83.501 108.374 83.501C110.473 83.501 111.771 84.9434 111.771 87.3086V87.3223C111.771 89.6807 110.473 91.1299 108.374 91.1299ZM108.374 90.0771C109.769 90.0771 110.555 89.0586 110.555 87.3223V87.3086C110.555 85.5654 109.769 84.5537 108.374 84.5537C106.979 84.5537 106.193 85.5654 106.193 87.3086V87.3223C106.193 89.0586 106.979 90.0771 108.374 90.0771ZM113.617 91V83.6309H114.807V84.752H114.916C115.244 83.959 115.941 83.501 116.905 83.501C117.903 83.501 118.601 84.0273 118.942 84.793H119.052C119.448 84.0137 120.289 83.501 121.308 83.501C122.812 83.501 123.652 84.3623 123.652 85.9072V91H122.463V86.1807C122.463 85.0938 121.964 84.5537 120.925 84.5537C119.899 84.5537 119.223 85.3262 119.223 86.2627V91H118.033V85.9961C118.033 85.1211 117.432 84.5537 116.502 84.5537C115.538 84.5537 114.807 85.3945 114.807 86.4336V91H113.617ZM128.807 91.1299C126.701 91.1299 125.43 89.6533 125.43 87.3428V87.3359C125.43 85.0596 126.729 83.501 128.731 83.501C130.734 83.501 131.951 84.9912 131.951 87.1924V87.6572H126.646C126.681 89.1816 127.521 90.0703 128.834 90.0703C129.832 90.0703 130.447 89.5986 130.646 89.1543L130.673 89.0928H131.862L131.849 89.1475C131.596 90.1455 130.543 91.1299 128.807 91.1299ZM128.725 84.5605C127.631 84.5605 126.797 85.3057 126.667 86.707H130.741C130.618 85.251 129.812 84.5605 128.725 84.5605ZM137.734 91V83.6309H138.924V84.752H139.033C139.361 83.959 140.059 83.501 141.022 83.501C142.021 83.501 142.718 84.0273 143.06 84.793H143.169C143.565 84.0137 144.406 83.501 145.425 83.501C146.929 83.501 147.77 84.3623 147.77 85.9072V91H146.58V86.1807C146.58 85.0938 146.081 84.5537 145.042 84.5537C144.017 84.5537 143.34 85.3262 143.34 86.2627V91H142.15V85.9961C142.15 85.1211 141.549 84.5537 140.619 84.5537C139.655 84.5537 138.924 85.3945 138.924 86.4336V91H137.734ZM152.924 91.1299C150.818 91.1299 149.547 89.6533 149.547 87.3428V87.3359C149.547 85.0596 150.846 83.501 152.849 83.501C154.852 83.501 156.068 84.9912 156.068 87.1924V87.6572H150.764C150.798 89.1816 151.639 90.0703 152.951 90.0703C153.949 90.0703 154.564 89.5986 154.763 89.1543L154.79 89.0928H155.979L155.966 89.1475C155.713 90.1455 154.66 91.1299 152.924 91.1299ZM152.842 84.5605C151.748 84.5605 150.914 85.3057 150.784 86.707H154.858C154.735 85.251 153.929 84.5605 152.842 84.5605ZM160.443 91.1299C158.803 91.1299 157.675 90.3369 157.538 89.1201H158.755C158.953 89.7354 159.541 90.1387 160.484 90.1387C161.476 90.1387 162.18 89.667 162.18 88.9971V88.9834C162.18 88.4844 161.804 88.1357 160.895 87.917L159.753 87.6436C158.372 87.3154 157.75 86.7139 157.75 85.6543V85.6475C157.75 84.4238 158.926 83.501 160.491 83.501C162.036 83.501 163.109 84.2734 163.273 85.4766H162.104C161.947 84.8955 161.373 84.4922 160.484 84.4922C159.609 84.4922 158.967 84.9434 158.967 85.5928V85.6064C158.967 86.1055 159.336 86.4199 160.204 86.6318L161.339 86.9053C162.727 87.2402 163.396 87.8418 163.396 88.8945V88.9082C163.396 90.2207 162.118 91.1299 160.443 91.1299ZM167.635 91.1299C165.994 91.1299 164.866 90.3369 164.729 89.1201H165.946C166.145 89.7354 166.732 90.1387 167.676 90.1387C168.667 90.1387 169.371 89.667 169.371 88.9971V88.9834C169.371 88.4844 168.995 88.1357 168.086 87.917L166.944 87.6436C165.563 87.3154 164.941 86.7139 164.941 85.6543V85.6475C164.941 84.4238 166.117 83.501 167.683 83.501C169.228 83.501 170.301 84.2734 170.465 85.4766H169.296C169.139 84.8955 168.564 84.4922 167.676 84.4922C166.801 84.4922 166.158 84.9434 166.158 85.5928V85.6064C166.158 86.1055 166.527 86.4199 167.396 86.6318L168.53 86.9053C169.918 87.2402 170.588 87.8418 170.588 88.8945V88.9082C170.588 90.2207 169.31 91.1299 167.635 91.1299ZM174.457 91.1299C173.056 91.1299 171.996 90.2822 171.996 88.9424V88.9287C171.996 87.6162 172.967 86.8574 174.683 86.7549L176.795 86.625V85.9551C176.795 85.0459 176.241 84.5537 175.141 84.5537C174.259 84.5537 173.678 84.8818 173.486 85.4561L173.479 85.4766H172.29L172.297 85.4355C172.488 84.2803 173.609 83.501 175.182 83.501C176.979 83.501 177.984 84.4238 177.984 85.9551V91H176.795V89.9131H176.686C176.221 90.6992 175.448 91.1299 174.457 91.1299ZM173.213 88.915C173.213 89.6602 173.849 90.0977 174.703 90.0977C175.913 90.0977 176.795 89.3047 176.795 88.252V87.582L174.826 87.7051C173.705 87.7734 173.213 88.1699 173.213 88.9014V88.915ZM183.193 93.5977C181.416 93.5977 180.281 92.7979 180.097 91.5879L180.11 91.5811H181.341L181.348 91.5879C181.478 92.1484 182.134 92.5449 183.193 92.5449C184.513 92.5449 185.299 91.9229 185.299 90.8359V89.3457H185.189C184.725 90.1592 183.891 90.6172 182.879 90.6172C180.972 90.6172 179.789 89.1406 179.789 87.0762V87.0625C179.789 84.998 180.979 83.501 182.906 83.501C183.945 83.501 184.752 84.0137 185.203 84.8477H185.285V83.6309H186.475V90.8975C186.475 92.5449 185.203 93.5977 183.193 93.5977ZM183.139 89.5645C184.506 89.5645 185.326 88.5391 185.326 87.0762V87.0625C185.326 85.5996 184.499 84.5537 183.139 84.5537C181.771 84.5537 181.006 85.5996 181.006 87.0625V87.0762C181.006 88.5391 181.771 89.5645 183.139 89.5645ZM191.697 91.1299C189.592 91.1299 188.32 89.6533 188.32 87.3428V87.3359C188.32 85.0596 189.619 83.501 191.622 83.501C193.625 83.501 194.842 84.9912 194.842 87.1924V87.6572H189.537C189.571 89.1816 190.412 90.0703 191.725 90.0703C192.723 90.0703 193.338 89.5986 193.536 89.1543L193.563 89.0928H194.753L194.739 89.1475C194.486 90.1455 193.434 91.1299 191.697 91.1299ZM191.615 84.5605C190.521 84.5605 189.688 85.3057 189.558 86.707H193.632C193.509 85.251 192.702 84.5605 191.615 84.5605Z"
                    fill="#BEBECC"
                  />
                  <path
                    d="M75.5752 111.13C73.9004 111.13 73.0391 110.146 73.0391 108.402V103.631H74.2285V108.115C74.2285 109.441 74.707 110.077 75.8828 110.077C77.1816 110.077 77.8721 109.284 77.8721 107.992V103.631H79.0615V111H77.8721V109.899H77.7627C77.4004 110.686 76.6553 111.13 75.5752 111.13ZM83.8125 111.13C82.1719 111.13 81.0439 110.337 80.9072 109.12H82.124C82.3223 109.735 82.9102 110.139 83.8535 110.139C84.8447 110.139 85.5488 109.667 85.5488 108.997V108.983C85.5488 108.484 85.1729 108.136 84.2637 107.917L83.1221 107.644C81.7412 107.315 81.1191 106.714 81.1191 105.654V105.647C81.1191 104.424 82.2949 103.501 83.8604 103.501C85.4053 103.501 86.4785 104.273 86.6426 105.477H85.4736C85.3164 104.896 84.7422 104.492 83.8535 104.492C82.9785 104.492 82.3359 104.943 82.3359 105.593V105.606C82.3359 106.105 82.7051 106.42 83.5732 106.632L84.708 106.905C86.0957 107.24 86.7656 107.842 86.7656 108.895V108.908C86.7656 110.221 85.4873 111.13 83.8125 111.13ZM91.6191 111.13C89.5137 111.13 88.2422 109.653 88.2422 107.343V107.336C88.2422 105.06 89.541 103.501 91.5439 103.501C93.5469 103.501 94.7637 104.991 94.7637 107.192V107.657H89.459C89.4932 109.182 90.334 110.07 91.6465 110.07C92.6445 110.07 93.2598 109.599 93.458 109.154L93.4854 109.093H94.6748L94.6611 109.147C94.4082 110.146 93.3555 111.13 91.6191 111.13ZM91.5371 104.561C90.4434 104.561 89.6094 105.306 89.4795 106.707H93.5537C93.4307 105.251 92.624 104.561 91.5371 104.561ZM96.6094 111V103.631H97.7988V104.725H97.9082C98.1885 103.952 98.8789 103.501 99.877 103.501C100.103 103.501 100.355 103.528 100.472 103.549V104.704C100.226 104.663 100 104.636 99.7402 104.636C98.6055 104.636 97.7988 105.354 97.7988 106.434V111H96.6094ZM107.574 112.6C104.047 112.6 101.812 110.385 101.812 106.898V106.885C101.812 103.508 104.108 101.19 107.458 101.19C110.691 101.19 112.94 103.255 112.94 106.215V106.229C112.94 108.45 111.942 109.865 110.37 109.865C109.584 109.865 108.982 109.421 108.873 108.758L108.866 108.717H108.757C108.463 109.414 107.848 109.804 107.048 109.804C105.626 109.804 104.669 108.635 104.669 106.905V106.892C104.669 105.237 105.646 104.075 107.048 104.075C107.766 104.075 108.381 104.444 108.647 105.039H108.757V104.205H109.789V108.218C109.789 108.696 110.069 108.977 110.562 108.977C111.423 108.977 111.977 107.89 111.977 106.215V106.201C111.977 103.74 110.104 102.052 107.369 102.052C104.696 102.052 102.775 104.089 102.775 106.926V106.939C102.775 109.852 104.662 111.731 107.588 111.731C108.524 111.731 109.447 111.602 109.878 111.403V112.265C109.263 112.477 108.436 112.6 107.574 112.6ZM107.205 108.84C108.142 108.84 108.743 108.095 108.743 106.933V106.919C108.743 105.757 108.148 105.019 107.219 105.019C106.303 105.019 105.763 105.729 105.763 106.919V106.933C105.763 108.115 106.31 108.84 107.205 108.84ZM117.808 111.13C115.743 111.13 114.424 109.633 114.424 107.295V107.281C114.424 104.991 115.736 103.501 117.801 103.501C119.592 103.501 120.665 104.533 120.884 105.846L120.891 105.887H119.708L119.701 105.866C119.517 105.142 118.86 104.554 117.801 104.554C116.475 104.554 115.641 105.62 115.641 107.281V107.295C115.641 108.99 116.488 110.077 117.801 110.077C118.792 110.077 119.421 109.64 119.694 108.819L119.708 108.778L120.884 108.771L120.87 108.847C120.569 110.18 119.578 111.13 117.808 111.13ZM125.655 111.13C123.557 111.13 122.258 109.681 122.258 107.322V107.309C122.258 104.943 123.557 103.501 125.655 103.501C127.754 103.501 129.053 104.943 129.053 107.309V107.322C129.053 109.681 127.754 111.13 125.655 111.13ZM125.655 110.077C127.05 110.077 127.836 109.059 127.836 107.322V107.309C127.836 105.565 127.05 104.554 125.655 104.554C124.261 104.554 123.475 105.565 123.475 107.309V107.322C123.475 109.059 124.261 110.077 125.655 110.077ZM130.898 111V103.631H132.088V104.752H132.197C132.525 103.959 133.223 103.501 134.187 103.501C135.185 103.501 135.882 104.027 136.224 104.793H136.333C136.729 104.014 137.57 103.501 138.589 103.501C140.093 103.501 140.934 104.362 140.934 105.907V111H139.744V106.181C139.744 105.094 139.245 104.554 138.206 104.554C137.181 104.554 136.504 105.326 136.504 106.263V111H135.314V105.996C135.314 105.121 134.713 104.554 133.783 104.554C132.819 104.554 132.088 105.395 132.088 106.434V111H130.898ZM143.08 113.461V103.631H144.27V104.807H144.379C144.83 103.986 145.65 103.501 146.676 103.501C148.542 103.501 149.766 105.012 149.766 107.309V107.322C149.766 109.633 148.549 111.13 146.676 111.13C145.664 111.13 144.782 110.624 144.379 109.838H144.27V113.461H143.08ZM146.402 110.077C147.749 110.077 148.549 109.038 148.549 107.322V107.309C148.549 105.593 147.749 104.554 146.402 104.554C145.062 104.554 144.242 105.606 144.242 107.309V107.322C144.242 109.024 145.062 110.077 146.402 110.077ZM153.648 111.13C152.247 111.13 151.188 110.282 151.188 108.942V108.929C151.188 107.616 152.158 106.857 153.874 106.755L155.986 106.625V105.955C155.986 105.046 155.433 104.554 154.332 104.554C153.45 104.554 152.869 104.882 152.678 105.456L152.671 105.477H151.481L151.488 105.436C151.68 104.28 152.801 103.501 154.373 103.501C156.171 103.501 157.176 104.424 157.176 105.955V111H155.986V109.913H155.877C155.412 110.699 154.64 111.13 153.648 111.13ZM152.404 108.915C152.404 109.66 153.04 110.098 153.895 110.098C155.104 110.098 155.986 109.305 155.986 108.252V107.582L154.018 107.705C152.896 107.773 152.404 108.17 152.404 108.901V108.915ZM159.35 111V103.631H160.539V104.738H160.648C161.018 103.959 161.708 103.501 162.795 103.501C164.449 103.501 165.372 104.479 165.372 106.229V111H164.183V106.516C164.183 105.189 163.636 104.554 162.46 104.554C161.284 104.554 160.539 105.347 160.539 106.639V111H159.35ZM167.881 113.584C167.724 113.584 167.519 113.57 167.354 113.543V112.565C167.498 112.593 167.683 112.6 167.847 112.6C168.523 112.6 168.934 112.292 169.2 111.444L169.337 111.007L166.609 103.631H167.881L169.904 109.694H170.014L172.03 103.631H173.281L170.403 111.451C169.795 113.105 169.187 113.584 167.881 113.584ZM174.799 111.068C174.313 111.068 173.91 110.665 173.91 110.18C173.91 109.688 174.313 109.291 174.799 109.291C175.291 109.291 175.688 109.688 175.688 110.18C175.688 110.665 175.291 111.068 174.799 111.068ZM180.726 111.13C178.661 111.13 177.342 109.633 177.342 107.295V107.281C177.342 104.991 178.654 103.501 180.719 103.501C182.51 103.501 183.583 104.533 183.802 105.846L183.809 105.887H182.626L182.619 105.866C182.435 105.142 181.778 104.554 180.719 104.554C179.393 104.554 178.559 105.62 178.559 107.281V107.295C178.559 108.99 179.406 110.077 180.719 110.077C181.71 110.077 182.339 109.64 182.612 108.819L182.626 108.778L183.802 108.771L183.788 108.847C183.487 110.18 182.496 111.13 180.726 111.13ZM188.573 111.13C186.475 111.13 185.176 109.681 185.176 107.322V107.309C185.176 104.943 186.475 103.501 188.573 103.501C190.672 103.501 191.971 104.943 191.971 107.309V107.322C191.971 109.681 190.672 111.13 188.573 111.13ZM188.573 110.077C189.968 110.077 190.754 109.059 190.754 107.322V107.309C190.754 105.565 189.968 104.554 188.573 104.554C187.179 104.554 186.393 105.565 186.393 107.309V107.322C186.393 109.059 187.179 110.077 188.573 110.077ZM193.816 111V103.631H195.006V104.752H195.115C195.443 103.959 196.141 103.501 197.104 103.501C198.103 103.501 198.8 104.027 199.142 104.793H199.251C199.647 104.014 200.488 103.501 201.507 103.501C203.011 103.501 203.852 104.362 203.852 105.907V111H202.662V106.181C202.662 105.094 202.163 104.554 201.124 104.554C200.099 104.554 199.422 105.326 199.422 106.263V111H198.232V105.996C198.232 105.121 197.631 104.554 196.701 104.554C195.737 104.554 195.006 105.395 195.006 106.434V111H193.816Z"
                    fill="#BEBECC"
                  />
                  <path
                    d="M16 136C16 129.373 21.3726 124 28 124H252C258.627 124 264 129.373 264 136V231H16V136Z"
                    fill="#F5F8FA"
                  />
                  <path
                    d="M25.2578 145V135.136H26.4883V139.401H31.9023V135.136H33.1328V145H31.9023V140.509H26.4883V145H25.2578ZM38.5059 145.13C36.4004 145.13 35.1289 143.653 35.1289 141.343V141.336C35.1289 139.06 36.4277 137.501 38.4307 137.501C40.4336 137.501 41.6504 138.991 41.6504 141.192V141.657H36.3457C36.3799 143.182 37.2207 144.07 38.5332 144.07C39.5312 144.07 40.1465 143.599 40.3447 143.154L40.3721 143.093H41.5615L41.5479 143.147C41.2949 144.146 40.2422 145.13 38.5059 145.13ZM38.4238 138.561C37.3301 138.561 36.4961 139.306 36.3662 140.707H40.4404C40.3174 139.251 39.5107 138.561 38.4238 138.561ZM43.5645 145V134.705H44.7539V145H43.5645ZM47.1055 145V134.705H48.2949V145H47.1055ZM53.6064 145.13C51.5078 145.13 50.209 143.681 50.209 141.322V141.309C50.209 138.943 51.5078 137.501 53.6064 137.501C55.7051 137.501 57.0039 138.943 57.0039 141.309V141.322C57.0039 143.681 55.7051 145.13 53.6064 145.13ZM53.6064 144.077C55.001 144.077 55.7871 143.059 55.7871 141.322V141.309C55.7871 139.565 55.001 138.554 53.6064 138.554C52.2119 138.554 51.4258 139.565 51.4258 141.309V141.322C51.4258 143.059 52.2119 144.077 53.6064 144.077ZM62.1514 145L65.7881 135.136H67.0049L70.6416 145H69.3496L68.3584 142.177H64.4346L63.4434 145H62.1514ZM66.3418 136.729L64.7969 141.131H67.9961L66.4512 136.729H66.3418ZM72.2891 145V134.705H73.4785V145H72.2891ZM77.7852 145.13C76.3838 145.13 75.3242 144.282 75.3242 142.942V142.929C75.3242 141.616 76.2949 140.857 78.0107 140.755L80.123 140.625V139.955C80.123 139.046 79.5693 138.554 78.4688 138.554C77.5869 138.554 77.0059 138.882 76.8145 139.456L76.8076 139.477H75.6182L75.625 139.436C75.8164 138.28 76.9375 137.501 78.5098 137.501C80.3076 137.501 81.3125 138.424 81.3125 139.955V145H80.123V143.913H80.0137C79.5488 144.699 78.7764 145.13 77.7852 145.13ZM76.541 142.915C76.541 143.66 77.1768 144.098 78.0312 144.098C79.2412 144.098 80.123 143.305 80.123 142.252V141.582L78.1543 141.705C77.0332 141.773 76.541 142.17 76.541 142.901V142.915ZM83.4863 145V137.631H84.6758V138.738H84.7852C85.1543 137.959 85.8447 137.501 86.9316 137.501C88.5859 137.501 89.5088 138.479 89.5088 140.229V145H88.3193V140.516C88.3193 139.189 87.7725 138.554 86.5967 138.554C85.4209 138.554 84.6758 139.347 84.6758 140.639V145H83.4863ZM98.3135 145V136.243H95.1348V135.136H102.723V136.243H99.5439V145H98.3135ZM105.915 145.13C104.24 145.13 103.379 144.146 103.379 142.402V137.631H104.568V142.115C104.568 143.441 105.047 144.077 106.223 144.077C107.521 144.077 108.212 143.284 108.212 141.992V137.631H109.401V145H108.212V143.899H108.103C107.74 144.686 106.995 145.13 105.915 145.13ZM111.623 145V137.631H112.812V138.725H112.922C113.202 137.952 113.893 137.501 114.891 137.501C115.116 137.501 115.369 137.528 115.485 137.549V138.704C115.239 138.663 115.014 138.636 114.754 138.636C113.619 138.636 112.812 139.354 112.812 140.434V145H111.623ZM117.584 136.209C117.133 136.209 116.764 135.84 116.764 135.389C116.764 134.938 117.133 134.568 117.584 134.568C118.035 134.568 118.404 134.938 118.404 135.389C118.404 135.84 118.035 136.209 117.584 136.209ZM116.982 145V137.631H118.172V145H116.982ZM120.414 145V137.631H121.604V138.738H121.713C122.082 137.959 122.772 137.501 123.859 137.501C125.514 137.501 126.437 138.479 126.437 140.229V145H125.247V140.516C125.247 139.189 124.7 138.554 123.524 138.554C122.349 138.554 121.604 139.347 121.604 140.639V145H120.414ZM131.625 147.598C129.848 147.598 128.713 146.798 128.528 145.588L128.542 145.581H129.772L129.779 145.588C129.909 146.148 130.565 146.545 131.625 146.545C132.944 146.545 133.73 145.923 133.73 144.836V143.346H133.621C133.156 144.159 132.322 144.617 131.311 144.617C129.403 144.617 128.221 143.141 128.221 141.076V141.062C128.221 138.998 129.41 137.501 131.338 137.501C132.377 137.501 133.184 138.014 133.635 138.848H133.717V137.631H134.906V144.897C134.906 146.545 133.635 147.598 131.625 147.598ZM131.57 143.564C132.938 143.564 133.758 142.539 133.758 141.076V141.062C133.758 139.6 132.931 138.554 131.57 138.554C130.203 138.554 129.438 139.6 129.438 141.062V141.076C129.438 142.539 130.203 143.564 131.57 143.564ZM136.82 147.509L137.415 143.619H138.775L137.702 147.509H136.82ZM24.4717 173L28.1084 163.136H29.3252L32.9619 173H31.6699L30.6787 170.177H26.7549L25.7637 173H24.4717ZM28.6621 164.729L27.1172 169.131H30.3164L28.7715 164.729H28.6621ZM34.6094 173V162.705H35.7988V173H34.6094ZM40.1055 173.13C38.7041 173.13 37.6445 172.282 37.6445 170.942V170.929C37.6445 169.616 38.6152 168.857 40.3311 168.755L42.4434 168.625V167.955C42.4434 167.046 41.8896 166.554 40.7891 166.554C39.9072 166.554 39.3262 166.882 39.1348 167.456L39.1279 167.477H37.9385L37.9453 167.436C38.1367 166.28 39.2578 165.501 40.8301 165.501C42.6279 165.501 43.6328 166.424 43.6328 167.955V173H42.4434V171.913H42.334C41.8691 172.699 41.0967 173.13 40.1055 173.13ZM38.8613 170.915C38.8613 171.66 39.4971 172.098 40.3516 172.098C41.5615 172.098 42.4434 171.305 42.4434 170.252V169.582L40.4746 169.705C39.3535 169.773 38.8613 170.17 38.8613 170.901V170.915ZM45.8066 173V165.631H46.9961V166.738H47.1055C47.4746 165.959 48.165 165.501 49.252 165.501C50.9062 165.501 51.8291 166.479 51.8291 168.229V173H50.6396V168.516C50.6396 167.189 50.0928 166.554 48.917 166.554C47.7412 166.554 46.9961 167.347 46.9961 168.639V173H45.8066ZM59.9434 173.13C58.542 173.13 57.4824 172.282 57.4824 170.942V170.929C57.4824 169.616 58.4531 168.857 60.1689 168.755L62.2812 168.625V167.955C62.2812 167.046 61.7275 166.554 60.627 166.554C59.7451 166.554 59.1641 166.882 58.9727 167.456L58.9658 167.477H57.7764L57.7832 167.436C57.9746 166.28 59.0957 165.501 60.668 165.501C62.4658 165.501 63.4707 166.424 63.4707 167.955V173H62.2812V171.913H62.1719C61.707 172.699 60.9346 173.13 59.9434 173.13ZM58.6992 170.915C58.6992 171.66 59.335 172.098 60.1895 172.098C61.3994 172.098 62.2812 171.305 62.2812 170.252V169.582L60.3125 169.705C59.1914 169.773 58.6992 170.17 58.6992 170.901V170.915ZM65.7129 173V162.705H66.9023V173H65.7129ZM71.209 173.13C69.8076 173.13 68.748 172.282 68.748 170.942V170.929C68.748 169.616 69.7188 168.857 71.4346 168.755L73.5469 168.625V167.955C73.5469 167.046 72.9932 166.554 71.8926 166.554C71.0107 166.554 70.4297 166.882 70.2383 167.456L70.2314 167.477H69.042L69.0488 167.436C69.2402 166.28 70.3613 165.501 71.9336 165.501C73.7314 165.501 74.7363 166.424 74.7363 167.955V173H73.5469V171.913H73.4375C72.9727 172.699 72.2002 173.13 71.209 173.13ZM69.9648 170.915C69.9648 171.66 70.6006 172.098 71.4551 172.098C72.665 172.098 73.5469 171.305 73.5469 170.252V169.582L71.5781 169.705C70.457 169.773 69.9648 170.17 69.9648 170.901V170.915ZM76.9102 173V165.631H78.0996V166.738H78.209C78.5781 165.959 79.2686 165.501 80.3555 165.501C82.0098 165.501 82.9326 166.479 82.9326 168.229V173H81.7432V168.516C81.7432 167.189 81.1963 166.554 80.0205 166.554C78.8447 166.554 78.0996 167.347 78.0996 168.639V173H76.9102ZM86.0566 173.068C85.5713 173.068 85.168 172.665 85.168 172.18C85.168 171.688 85.5713 171.291 86.0566 171.291C86.5488 171.291 86.9453 171.688 86.9453 172.18C86.9453 172.665 86.5488 173.068 86.0566 173.068ZM91.5869 173.055C90.0693 173.055 89.4336 172.494 89.4336 171.086V166.615H88.2715V165.631H89.4336V163.724H90.6641V165.631H92.2773V166.615H90.6641V170.785C90.6641 171.653 90.9648 172.002 91.7305 172.002C91.9424 172.002 92.0586 171.995 92.2773 171.975V172.986C92.0449 173.027 91.8193 173.055 91.5869 173.055ZM96.5225 173.13C94.8477 173.13 93.9863 172.146 93.9863 170.402V165.631H95.1758V170.115C95.1758 171.441 95.6543 172.077 96.8301 172.077C98.1289 172.077 98.8193 171.284 98.8193 169.992V165.631H100.009V173H98.8193V171.899H98.71C98.3477 172.686 97.6025 173.13 96.5225 173.13ZM102.23 173V165.631H103.42V166.725H103.529C103.81 165.952 104.5 165.501 105.498 165.501C105.724 165.501 105.977 165.528 106.093 165.549V166.704C105.847 166.663 105.621 166.636 105.361 166.636C104.227 166.636 103.42 167.354 103.42 168.434V173H102.23ZM108.191 164.209C107.74 164.209 107.371 163.84 107.371 163.389C107.371 162.938 107.74 162.568 108.191 162.568C108.643 162.568 109.012 162.938 109.012 163.389C109.012 163.84 108.643 164.209 108.191 164.209ZM107.59 173V165.631H108.779V173H107.59ZM111.021 173V165.631H112.211V166.738H112.32C112.689 165.959 113.38 165.501 114.467 165.501C116.121 165.501 117.044 166.479 117.044 168.229V173H115.854V168.516C115.854 167.189 115.308 166.554 114.132 166.554C112.956 166.554 112.211 167.347 112.211 168.639V173H111.021ZM122.232 175.598C120.455 175.598 119.32 174.798 119.136 173.588L119.149 173.581H120.38L120.387 173.588C120.517 174.148 121.173 174.545 122.232 174.545C123.552 174.545 124.338 173.923 124.338 172.836V171.346H124.229C123.764 172.159 122.93 172.617 121.918 172.617C120.011 172.617 118.828 171.141 118.828 169.076V169.062C118.828 166.998 120.018 165.501 121.945 165.501C122.984 165.501 123.791 166.014 124.242 166.848H124.324V165.631H125.514V172.897C125.514 174.545 124.242 175.598 122.232 175.598ZM122.178 171.564C123.545 171.564 124.365 170.539 124.365 169.076V169.062C124.365 167.6 123.538 166.554 122.178 166.554C120.811 166.554 120.045 167.6 120.045 169.062V169.076C120.045 170.539 120.811 171.564 122.178 171.564ZM133.361 174.6C129.834 174.6 127.599 172.385 127.599 168.898V168.885C127.599 165.508 129.896 163.19 133.245 163.19C136.479 163.19 138.728 165.255 138.728 168.215V168.229C138.728 170.45 137.729 171.865 136.157 171.865C135.371 171.865 134.77 171.421 134.66 170.758L134.653 170.717H134.544C134.25 171.414 133.635 171.804 132.835 171.804C131.413 171.804 130.456 170.635 130.456 168.905V168.892C130.456 167.237 131.434 166.075 132.835 166.075C133.553 166.075 134.168 166.444 134.435 167.039H134.544V166.205H135.576V170.218C135.576 170.696 135.856 170.977 136.349 170.977C137.21 170.977 137.764 169.89 137.764 168.215V168.201C137.764 165.74 135.891 164.052 133.156 164.052C130.483 164.052 128.562 166.089 128.562 168.926V168.939C128.562 171.852 130.449 173.731 133.375 173.731C134.312 173.731 135.234 173.602 135.665 173.403V174.265C135.05 174.477 134.223 174.6 133.361 174.6ZM132.992 170.84C133.929 170.84 134.53 170.095 134.53 168.933V168.919C134.53 167.757 133.936 167.019 133.006 167.019C132.09 167.019 131.55 167.729 131.55 168.919V168.933C131.55 170.115 132.097 170.84 132.992 170.84ZM143.588 173.13C141.482 173.13 140.211 171.653 140.211 169.343V169.336C140.211 167.06 141.51 165.501 143.513 165.501C145.516 165.501 146.732 166.991 146.732 169.192V169.657H141.428C141.462 171.182 142.303 172.07 143.615 172.07C144.613 172.07 145.229 171.599 145.427 171.154L145.454 171.093H146.644L146.63 171.147C146.377 172.146 145.324 173.13 143.588 173.13ZM143.506 166.561C142.412 166.561 141.578 167.306 141.448 168.707H145.522C145.399 167.251 144.593 166.561 143.506 166.561ZM147.717 173L150.239 169.315L147.689 165.631H149.091L150.841 168.372H150.95L152.68 165.631H154.013L151.511 169.268L154.047 173H152.652L150.909 170.218H150.8L149.05 173H147.717ZM157.67 173.13C156.269 173.13 155.209 172.282 155.209 170.942V170.929C155.209 169.616 156.18 168.857 157.896 168.755L160.008 168.625V167.955C160.008 167.046 159.454 166.554 158.354 166.554C157.472 166.554 156.891 166.882 156.699 167.456L156.692 167.477H155.503L155.51 167.436C155.701 166.28 156.822 165.501 158.395 165.501C160.192 165.501 161.197 166.424 161.197 167.955V173H160.008V171.913H159.898C159.434 172.699 158.661 173.13 157.67 173.13ZM156.426 170.915C156.426 171.66 157.062 172.098 157.916 172.098C159.126 172.098 160.008 171.305 160.008 170.252V169.582L158.039 169.705C156.918 169.773 156.426 170.17 156.426 170.901V170.915ZM163.371 173V165.631H164.561V166.752H164.67C164.998 165.959 165.695 165.501 166.659 165.501C167.657 165.501 168.354 166.027 168.696 166.793H168.806C169.202 166.014 170.043 165.501 171.062 165.501C172.565 165.501 173.406 166.362 173.406 167.907V173H172.217V168.181C172.217 167.094 171.718 166.554 170.679 166.554C169.653 166.554 168.977 167.326 168.977 168.263V173H167.787V167.996C167.787 167.121 167.186 166.554 166.256 166.554C165.292 166.554 164.561 167.395 164.561 168.434V173H163.371ZM175.553 175.461V165.631H176.742V166.807H176.852C177.303 165.986 178.123 165.501 179.148 165.501C181.015 165.501 182.238 167.012 182.238 169.309V169.322C182.238 171.633 181.021 173.13 179.148 173.13C178.137 173.13 177.255 172.624 176.852 171.838H176.742V175.461H175.553ZM178.875 172.077C180.222 172.077 181.021 171.038 181.021 169.322V169.309C181.021 167.593 180.222 166.554 178.875 166.554C177.535 166.554 176.715 167.606 176.715 169.309V169.322C176.715 171.024 177.535 172.077 178.875 172.077ZM184.166 173V162.705H185.355V173H184.166ZM190.646 173.13C188.541 173.13 187.27 171.653 187.27 169.343V169.336C187.27 167.06 188.568 165.501 190.571 165.501C192.574 165.501 193.791 166.991 193.791 169.192V169.657H188.486C188.521 171.182 189.361 172.07 190.674 172.07C191.672 172.07 192.287 171.599 192.485 171.154L192.513 171.093H193.702L193.688 171.147C193.436 172.146 192.383 173.13 190.646 173.13ZM190.564 166.561C189.471 166.561 188.637 167.306 188.507 168.707H192.581C192.458 167.251 191.651 166.561 190.564 166.561ZM196.607 173.068C196.122 173.068 195.719 172.665 195.719 172.18C195.719 171.688 196.122 171.291 196.607 171.291C197.1 171.291 197.496 171.688 197.496 172.18C197.496 172.665 197.1 173.068 196.607 173.068ZM202.534 173.13C200.47 173.13 199.15 171.633 199.15 169.295V169.281C199.15 166.991 200.463 165.501 202.527 165.501C204.318 165.501 205.392 166.533 205.61 167.846L205.617 167.887H204.435L204.428 167.866C204.243 167.142 203.587 166.554 202.527 166.554C201.201 166.554 200.367 167.62 200.367 169.281V169.295C200.367 170.99 201.215 172.077 202.527 172.077C203.519 172.077 204.147 171.64 204.421 170.819L204.435 170.778L205.61 170.771L205.597 170.847C205.296 172.18 204.305 173.13 202.534 173.13ZM210.382 173.13C208.283 173.13 206.984 171.681 206.984 169.322V169.309C206.984 166.943 208.283 165.501 210.382 165.501C212.48 165.501 213.779 166.943 213.779 169.309V169.322C213.779 171.681 212.48 173.13 210.382 173.13ZM210.382 172.077C211.776 172.077 212.562 171.059 212.562 169.322V169.309C212.562 167.565 211.776 166.554 210.382 166.554C208.987 166.554 208.201 167.565 208.201 169.309V169.322C208.201 171.059 208.987 172.077 210.382 172.077ZM215.625 173V165.631H216.814V166.752H216.924C217.252 165.959 217.949 165.501 218.913 165.501C219.911 165.501 220.608 166.027 220.95 166.793H221.06C221.456 166.014 222.297 165.501 223.315 165.501C224.819 165.501 225.66 166.362 225.66 167.907V173H224.471V168.181C224.471 167.094 223.972 166.554 222.933 166.554C221.907 166.554 221.23 167.326 221.23 168.263V173H220.041V167.996C220.041 167.121 219.439 166.554 218.51 166.554C217.546 166.554 216.814 167.395 216.814 168.434V173H215.625ZM231.812 173V162.705H233.002V166.738H233.111C233.48 165.959 234.171 165.501 235.258 165.501C236.912 165.501 237.835 166.479 237.835 168.229V173H236.646V168.516C236.646 167.189 236.099 166.554 234.923 166.554C233.747 166.554 233.002 167.347 233.002 168.639V173H231.812ZM242.012 173.13C240.61 173.13 239.551 172.282 239.551 170.942V170.929C239.551 169.616 240.521 168.857 242.237 168.755L244.35 168.625V167.955C244.35 167.046 243.796 166.554 242.695 166.554C241.813 166.554 241.232 166.882 241.041 167.456L241.034 167.477H239.845L239.852 167.436C240.043 166.28 241.164 165.501 242.736 165.501C244.534 165.501 245.539 166.424 245.539 167.955V173H244.35V171.913H244.24C243.775 172.699 243.003 173.13 242.012 173.13ZM240.768 170.915C240.768 171.66 241.403 172.098 242.258 172.098C243.468 172.098 244.35 171.305 244.35 170.252V169.582L242.381 169.705C241.26 169.773 240.768 170.17 240.768 170.901V170.915ZM250.242 173.13C248.602 173.13 247.474 172.337 247.337 171.12H248.554C248.752 171.735 249.34 172.139 250.283 172.139C251.274 172.139 251.979 171.667 251.979 170.997V170.983C251.979 170.484 251.603 170.136 250.693 169.917L249.552 169.644C248.171 169.315 247.549 168.714 247.549 167.654V167.647C247.549 166.424 248.725 165.501 250.29 165.501C251.835 165.501 252.908 166.273 253.072 167.477H251.903C251.746 166.896 251.172 166.492 250.283 166.492C249.408 166.492 248.766 166.943 248.766 167.593V167.606C248.766 168.105 249.135 168.42 250.003 168.632L251.138 168.905C252.525 169.24 253.195 169.842 253.195 170.895V170.908C253.195 172.221 251.917 173.13 250.242 173.13ZM25.7363 184.209C25.2852 184.209 24.916 183.84 24.916 183.389C24.916 182.938 25.2852 182.568 25.7363 182.568C26.1875 182.568 26.5566 182.938 26.5566 183.389C26.5566 183.84 26.1875 184.209 25.7363 184.209ZM25.1348 193V185.631H26.3242V193H25.1348ZM28.5664 193V185.631H29.7559V186.738H29.8652C30.2344 185.959 30.9248 185.501 32.0117 185.501C33.666 185.501 34.5889 186.479 34.5889 188.229V193H33.3994V188.516C33.3994 187.189 32.8525 186.554 31.6768 186.554C30.501 186.554 29.7559 187.347 29.7559 188.639V193H28.5664ZM38.5537 193L35.8262 185.631H37.084L39.1006 191.701H39.21L41.2266 185.631H42.4844L39.7568 193H38.5537ZM44.6855 184.209C44.2344 184.209 43.8652 183.84 43.8652 183.389C43.8652 182.938 44.2344 182.568 44.6855 182.568C45.1367 182.568 45.5059 182.938 45.5059 183.389C45.5059 183.84 45.1367 184.209 44.6855 184.209ZM44.084 193V185.631H45.2734V193H44.084ZM50.1338 193.055C48.6162 193.055 47.9805 192.494 47.9805 191.086V186.615H46.8184V185.631H47.9805V183.724H49.2109V185.631H50.8242V186.615H49.2109V190.785C49.2109 191.653 49.5117 192.002 50.2773 192.002C50.4893 192.002 50.6055 191.995 50.8242 191.975V192.986C50.5918 193.027 50.3662 193.055 50.1338 193.055ZM55.5 193.13C53.3945 193.13 52.123 191.653 52.123 189.343V189.336C52.123 187.06 53.4219 185.501 55.4248 185.501C57.4277 185.501 58.6445 186.991 58.6445 189.192V189.657H53.3398C53.374 191.182 54.2148 192.07 55.5273 192.07C56.5254 192.07 57.1406 191.599 57.3389 191.154L57.3662 191.093H58.5557L58.542 191.147C58.2891 192.146 57.2363 193.13 55.5 193.13ZM55.418 186.561C54.3242 186.561 53.4902 187.306 53.3604 188.707H57.4346C57.3115 187.251 56.5049 186.561 55.418 186.561ZM63.2109 193.13C61.3447 193.13 60.1211 191.619 60.1211 189.322V189.309C60.1211 186.998 61.3379 185.501 63.2109 185.501C64.2227 185.501 65.1045 186.007 65.5078 186.793H65.6172V182.705H66.8066V193H65.6172V191.824H65.5078C65.0566 192.645 64.2363 193.13 63.2109 193.13ZM63.4844 192.077C64.8242 192.077 65.6445 191.024 65.6445 189.322V189.309C65.6445 187.606 64.8242 186.554 63.4844 186.554C62.1377 186.554 61.3379 187.593 61.3379 189.309V189.322C61.3379 191.038 62.1377 192.077 63.4844 192.077ZM73.6562 195.584C73.499 195.584 73.2939 195.57 73.1299 195.543V194.565C73.2734 194.593 73.458 194.6 73.6221 194.6C74.2988 194.6 74.709 194.292 74.9756 193.444L75.1123 193.007L72.3848 185.631H73.6562L75.6797 191.694H75.7891L77.8057 185.631H79.0566L76.1787 193.451C75.5703 195.105 74.9619 195.584 73.6562 195.584ZM83.3838 193.13C81.2852 193.13 79.9863 191.681 79.9863 189.322V189.309C79.9863 186.943 81.2852 185.501 83.3838 185.501C85.4824 185.501 86.7812 186.943 86.7812 189.309V189.322C86.7812 191.681 85.4824 193.13 83.3838 193.13ZM83.3838 192.077C84.7783 192.077 85.5645 191.059 85.5645 189.322V189.309C85.5645 187.565 84.7783 186.554 83.3838 186.554C81.9893 186.554 81.2031 187.565 81.2031 189.309V189.322C81.2031 191.059 81.9893 192.077 83.3838 192.077ZM91.0947 193.13C89.4199 193.13 88.5586 192.146 88.5586 190.402V185.631H89.748V190.115C89.748 191.441 90.2266 192.077 91.4023 192.077C92.7012 192.077 93.3916 191.284 93.3916 189.992V185.631H94.5811V193H93.3916V191.899H93.2822C92.9199 192.686 92.1748 193.13 91.0947 193.13ZM103.358 193.055C101.841 193.055 101.205 192.494 101.205 191.086V186.615H100.043V185.631H101.205V183.724H102.436V185.631H104.049V186.615H102.436V190.785C102.436 191.653 102.736 192.002 103.502 192.002C103.714 192.002 103.83 191.995 104.049 191.975V192.986C103.816 193.027 103.591 193.055 103.358 193.055ZM108.745 193.13C106.646 193.13 105.348 191.681 105.348 189.322V189.309C105.348 186.943 106.646 185.501 108.745 185.501C110.844 185.501 112.143 186.943 112.143 189.309V189.322C112.143 191.681 110.844 193.13 108.745 193.13ZM108.745 192.077C110.14 192.077 110.926 191.059 110.926 189.322V189.309C110.926 187.565 110.14 186.554 108.745 186.554C107.351 186.554 106.564 187.565 106.564 189.309V189.322C106.564 191.059 107.351 192.077 108.745 192.077ZM120.544 193.055C119.026 193.055 118.391 192.494 118.391 191.086V186.615H117.229V185.631H118.391V183.724H119.621V185.631H121.234V186.615H119.621V190.785C119.621 191.653 119.922 192.002 120.688 192.002C120.899 192.002 121.016 191.995 121.234 191.975V192.986C121.002 193.027 120.776 193.055 120.544 193.055ZM123.08 193V182.705H124.27V186.738H124.379C124.748 185.959 125.438 185.501 126.525 185.501C128.18 185.501 129.103 186.479 129.103 188.229V193H127.913V188.516C127.913 187.189 127.366 186.554 126.19 186.554C125.015 186.554 124.27 187.347 124.27 188.639V193H123.08ZM134.264 193.13C132.158 193.13 130.887 191.653 130.887 189.343V189.336C130.887 187.06 132.186 185.501 134.188 185.501C136.191 185.501 137.408 186.991 137.408 189.192V189.657H132.104C132.138 191.182 132.979 192.07 134.291 192.07C135.289 192.07 135.904 191.599 136.103 191.154L136.13 191.093H137.319L137.306 191.147C137.053 192.146 136 193.13 134.264 193.13ZM134.182 186.561C133.088 186.561 132.254 187.306 132.124 188.707H136.198C136.075 187.251 135.269 186.561 134.182 186.561ZM143.342 193V183.136H144.572V187.401H149.986V183.136H151.217V193H149.986V188.509H144.572V193H143.342ZM156.583 193L152.946 183.136H154.238L157.137 191.407H157.246L160.145 183.136H161.437L157.8 193H156.583ZM161.491 193L165.128 183.136H166.345L169.981 193H168.689L167.698 190.177H163.774L162.783 193H161.491ZM165.682 184.729L164.137 189.131H167.336L165.791 184.729H165.682ZM175.204 193.232C172.524 193.232 170.85 191.25 170.85 188.078V188.064C170.85 184.886 172.518 182.903 175.197 182.903C177.275 182.903 178.896 184.209 179.189 186.103L179.183 186.116H177.945L177.938 186.103C177.61 184.838 176.558 184.038 175.197 184.038C173.304 184.038 172.114 185.597 172.114 188.064V188.078C172.114 190.546 173.304 192.098 175.204 192.098C176.578 192.098 177.624 191.394 177.932 190.259L177.945 190.245H179.189V190.259C178.861 192.063 177.303 193.232 175.204 193.232ZM24.4717 221L28.1084 211.136H29.3252L32.9619 221H31.6699L30.6787 218.177H26.7549L25.7637 221H24.4717ZM28.6621 212.729L27.1172 217.131H30.3164L28.7715 212.729H28.6621ZM42.1426 221.13C41.1172 221.13 40.2969 220.645 39.8457 219.824H39.7363V221H38.5469V210.705H39.7363V214.793H39.8457C40.249 214.007 41.1309 213.501 42.1426 213.501C44.0156 213.501 45.2324 214.998 45.2324 217.309V217.322C45.2324 219.619 44.0088 221.13 42.1426 221.13ZM41.8691 220.077C43.2158 220.077 44.0156 219.038 44.0156 217.322V217.309C44.0156 215.593 43.2158 214.554 41.8691 214.554C40.5293 214.554 39.709 215.606 39.709 217.309V217.322C39.709 219.024 40.5293 220.077 41.8691 220.077ZM47.0781 221V213.631H48.2676V214.725H48.377C48.6572 213.952 49.3477 213.501 50.3457 213.501C50.5713 213.501 50.8242 213.528 50.9404 213.549V214.704C50.6943 214.663 50.4688 214.636 50.209 214.636C49.0742 214.636 48.2676 215.354 48.2676 216.434V221H47.0781ZM53.0391 212.209C52.5879 212.209 52.2188 211.84 52.2188 211.389C52.2188 210.938 52.5879 210.568 53.0391 210.568C53.4902 210.568 53.8594 210.938 53.8594 211.389C53.8594 211.84 53.4902 212.209 53.0391 212.209ZM52.4375 221V213.631H53.627V221H52.4375ZM55.9375 221V210.705H57.127V221H55.9375ZM59.4785 221V210.705H60.668V221H59.4785ZM63.5801 212.209C63.1289 212.209 62.7598 211.84 62.7598 211.389C62.7598 210.938 63.1289 210.568 63.5801 210.568C64.0312 210.568 64.4004 210.938 64.4004 211.389C64.4004 211.84 64.0312 212.209 63.5801 212.209ZM62.9785 221V213.631H64.168V221H62.9785ZM68.4336 221.13C67.0322 221.13 65.9727 220.282 65.9727 218.942V218.929C65.9727 217.616 66.9434 216.857 68.6592 216.755L70.7715 216.625V215.955C70.7715 215.046 70.2178 214.554 69.1172 214.554C68.2354 214.554 67.6543 214.882 67.4629 215.456L67.4561 215.477H66.2666L66.2734 215.436C66.4648 214.28 67.5859 213.501 69.1582 213.501C70.9561 213.501 71.9609 214.424 71.9609 215.955V221H70.7715V219.913H70.6621C70.1973 220.699 69.4248 221.13 68.4336 221.13ZM67.1895 218.915C67.1895 219.66 67.8252 220.098 68.6797 220.098C69.8896 220.098 70.7715 219.305 70.7715 218.252V217.582L68.8027 217.705C67.6816 217.773 67.1895 218.17 67.1895 218.901V218.915ZM74.1348 221V213.631H75.3242V214.738H75.4336C75.8027 213.959 76.4932 213.501 77.5801 213.501C79.2344 213.501 80.1572 214.479 80.1572 216.229V221H78.9678V216.516C78.9678 215.189 78.4209 214.554 77.2451 214.554C76.0693 214.554 75.3242 215.347 75.3242 216.639V221H74.1348ZM84.9287 221.055C83.4111 221.055 82.7754 220.494 82.7754 219.086V214.615H81.6133V213.631H82.7754V211.724H84.0059V213.631H85.6191V214.615H84.0059V218.785C84.0059 219.653 84.3066 220.002 85.0723 220.002C85.2842 220.002 85.4004 219.995 85.6191 219.975V220.986C85.3867 221.027 85.1611 221.055 84.9287 221.055ZM91.4844 221V211.136H95.2578C97.0693 211.136 98.1768 212.086 98.1768 213.59V213.604C98.1768 214.622 97.4248 215.552 96.4746 215.723V215.832C97.8213 216.003 98.6758 216.926 98.6758 218.225V218.238C98.6758 219.968 97.4316 221 95.333 221H91.4844ZM94.998 212.223H92.7148V215.388H94.6836C96.1738 215.388 96.9326 214.854 96.9326 213.815V213.802C96.9326 212.804 96.2217 212.223 94.998 212.223ZM95.0322 216.447H92.7148V219.913H95.1484C96.6318 219.913 97.4111 219.312 97.4111 218.177V218.163C97.4111 217.028 96.6045 216.447 95.0322 216.447ZM100.535 221V213.631H101.725V214.725H101.834C102.114 213.952 102.805 213.501 103.803 213.501C104.028 213.501 104.281 213.528 104.397 213.549V214.704C104.151 214.663 103.926 214.636 103.666 214.636C102.531 214.636 101.725 215.354 101.725 216.434V221H100.535ZM106.496 212.209C106.045 212.209 105.676 211.84 105.676 211.389C105.676 210.938 106.045 210.568 106.496 210.568C106.947 210.568 107.316 210.938 107.316 211.389C107.316 211.84 106.947 212.209 106.496 212.209ZM105.895 221V213.631H107.084V221H105.895ZM111.944 221.055C110.427 221.055 109.791 220.494 109.791 219.086V214.615H108.629V213.631H109.791V211.724H111.021V213.631H112.635V214.615H111.021V218.785C111.021 219.653 111.322 220.002 112.088 220.002C112.3 220.002 112.416 219.995 112.635 219.975V220.986C112.402 221.027 112.177 221.055 111.944 221.055ZM115.041 212.209C114.59 212.209 114.221 211.84 114.221 211.389C114.221 210.938 114.59 210.568 115.041 210.568C115.492 210.568 115.861 210.938 115.861 211.389C115.861 211.84 115.492 212.209 115.041 212.209ZM114.439 221V213.631H115.629V221H114.439ZM120.4 221.13C118.76 221.13 117.632 220.337 117.495 219.12H118.712C118.91 219.735 119.498 220.139 120.441 220.139C121.433 220.139 122.137 219.667 122.137 218.997V218.983C122.137 218.484 121.761 218.136 120.852 217.917L119.71 217.644C118.329 217.315 117.707 216.714 117.707 215.654V215.647C117.707 214.424 118.883 213.501 120.448 213.501C121.993 213.501 123.066 214.273 123.23 215.477H122.062C121.904 214.896 121.33 214.492 120.441 214.492C119.566 214.492 118.924 214.943 118.924 215.593V215.606C118.924 216.105 119.293 216.42 120.161 216.632L121.296 216.905C122.684 217.24 123.354 217.842 123.354 218.895V218.908C123.354 220.221 122.075 221.13 120.4 221.13ZM125.268 221V210.705H126.457V214.738H126.566C126.936 213.959 127.626 213.501 128.713 213.501C130.367 213.501 131.29 214.479 131.29 216.229V221H130.101V216.516C130.101 215.189 129.554 214.554 128.378 214.554C127.202 214.554 126.457 215.347 126.457 216.639V221H125.268ZM137.381 221V213.631H138.57V214.752H138.68C139.008 213.959 139.705 213.501 140.669 213.501C141.667 213.501 142.364 214.027 142.706 214.793H142.815C143.212 214.014 144.053 213.501 145.071 213.501C146.575 213.501 147.416 214.362 147.416 215.907V221H146.227V216.181C146.227 215.094 145.728 214.554 144.688 214.554C143.663 214.554 142.986 215.326 142.986 216.263V221H141.797V215.996C141.797 215.121 141.195 214.554 140.266 214.554C139.302 214.554 138.57 215.395 138.57 216.434V221H137.381ZM150.191 212.209C149.74 212.209 149.371 211.84 149.371 211.389C149.371 210.938 149.74 210.568 150.191 210.568C150.643 210.568 151.012 210.938 151.012 211.389C151.012 211.84 150.643 212.209 150.191 212.209ZM149.59 221V213.631H150.779V221H149.59ZM153.021 221V213.631H154.211V214.738H154.32C154.689 213.959 155.38 213.501 156.467 213.501C158.121 213.501 159.044 214.479 159.044 216.229V221H157.854V216.516C157.854 215.189 157.308 214.554 156.132 214.554C154.956 214.554 154.211 215.347 154.211 216.639V221H153.021ZM163.918 221.13C162.052 221.13 160.828 219.619 160.828 217.322V217.309C160.828 214.998 162.045 213.501 163.918 213.501C164.93 213.501 165.812 214.007 166.215 214.793H166.324V210.705H167.514V221H166.324V219.824H166.215C165.764 220.645 164.943 221.13 163.918 221.13ZM164.191 220.077C165.531 220.077 166.352 219.024 166.352 217.322V217.309C166.352 215.606 165.531 214.554 164.191 214.554C162.845 214.554 162.045 215.593 162.045 217.309V217.322C162.045 219.038 162.845 220.077 164.191 220.077ZM169.496 223.509L170.091 219.619H171.451L170.378 223.509H169.496ZM180.905 221.13C178.841 221.13 177.521 219.633 177.521 217.295V217.281C177.521 214.991 178.834 213.501 180.898 213.501C182.689 213.501 183.763 214.533 183.981 215.846L183.988 215.887H182.806L182.799 215.866C182.614 215.142 181.958 214.554 180.898 214.554C179.572 214.554 178.738 215.62 178.738 217.281V217.295C178.738 218.99 179.586 220.077 180.898 220.077C181.89 220.077 182.519 219.64 182.792 218.819L182.806 218.778L183.981 218.771L183.968 218.847C183.667 220.18 182.676 221.13 180.905 221.13ZM185.725 221V213.631H186.914V214.725H187.023C187.304 213.952 187.994 213.501 188.992 213.501C189.218 213.501 189.471 213.528 189.587 213.549V214.704C189.341 214.663 189.115 214.636 188.855 214.636C187.721 214.636 186.914 215.354 186.914 216.434V221H185.725ZM193.08 221.13C191.679 221.13 190.619 220.282 190.619 218.942V218.929C190.619 217.616 191.59 216.857 193.306 216.755L195.418 216.625V215.955C195.418 215.046 194.864 214.554 193.764 214.554C192.882 214.554 192.301 214.882 192.109 215.456L192.103 215.477H190.913L190.92 215.436C191.111 214.28 192.232 213.501 193.805 213.501C195.603 213.501 196.607 214.424 196.607 215.955V221H195.418V219.913H195.309C194.844 220.699 194.071 221.13 193.08 221.13ZM191.836 218.915C191.836 219.66 192.472 220.098 193.326 220.098C194.536 220.098 195.418 219.305 195.418 218.252V217.582L193.449 217.705C192.328 217.773 191.836 218.17 191.836 218.901V218.915ZM201.796 221.13C199.731 221.13 198.412 219.633 198.412 217.295V217.281C198.412 214.991 199.725 213.501 201.789 213.501C203.58 213.501 204.653 214.533 204.872 215.846L204.879 215.887H203.696L203.689 215.866C203.505 215.142 202.849 214.554 201.789 214.554C200.463 214.554 199.629 215.62 199.629 217.281V217.295C199.629 218.99 200.477 220.077 201.789 220.077C202.78 220.077 203.409 219.64 203.683 218.819L203.696 218.778L204.872 218.771L204.858 218.847C204.558 220.18 203.566 221.13 201.796 221.13ZM206.684 221V210.705H207.873V216.851H207.982L211.168 213.631H212.61L209.397 216.728L212.822 221H211.325L208.563 217.534L207.873 218.204V221H206.684ZM216.883 221.13C214.777 221.13 213.506 219.653 213.506 217.343V217.336C213.506 215.06 214.805 213.501 216.808 213.501C218.811 213.501 220.027 214.991 220.027 217.192V217.657H214.723C214.757 219.182 215.598 220.07 216.91 220.07C217.908 220.07 218.523 219.599 218.722 219.154L218.749 219.093H219.938L219.925 219.147C219.672 220.146 218.619 221.13 216.883 221.13ZM216.801 214.561C215.707 214.561 214.873 215.306 214.743 216.707H218.817C218.694 215.251 217.888 214.561 216.801 214.561ZM224.594 221.13C222.728 221.13 221.504 219.619 221.504 217.322V217.309C221.504 214.998 222.721 213.501 224.594 213.501C225.605 213.501 226.487 214.007 226.891 214.793H227V210.705H228.189V221H227V219.824H226.891C226.439 220.645 225.619 221.13 224.594 221.13ZM224.867 220.077C226.207 220.077 227.027 219.024 227.027 217.322V217.309C227.027 215.606 226.207 214.554 224.867 214.554C223.521 214.554 222.721 215.593 222.721 217.309V217.322C222.721 219.038 223.521 220.077 224.867 220.077ZM25.2578 241V231.136H26.4541L31.8066 238.812H31.916V231.136H33.1328V241H31.9365L26.584 233.351H26.4746V241H25.2578ZM37.5215 241.13C36.1201 241.13 35.0605 240.282 35.0605 238.942V238.929C35.0605 237.616 36.0312 236.857 37.7471 236.755L39.8594 236.625V235.955C39.8594 235.046 39.3057 234.554 38.2051 234.554C37.3232 234.554 36.7422 234.882 36.5508 235.456L36.5439 235.477H35.3545L35.3613 235.436C35.5527 234.28 36.6738 233.501 38.2461 233.501C40.0439 233.501 41.0488 234.424 41.0488 235.955V241H39.8594V239.913H39.75C39.2852 240.699 38.5127 241.13 37.5215 241.13ZM36.2773 238.915C36.2773 239.66 36.9131 240.098 37.7676 240.098C38.9775 240.098 39.8594 239.305 39.8594 238.252V237.582L37.8906 237.705C36.7695 237.773 36.2773 238.17 36.2773 238.901V238.915ZM43.0518 241V240.139L47.3037 234.725V234.615H43.0586V233.631H48.7051V234.513L44.4736 239.906V240.016H48.7256V241H43.0518ZM51.3984 232.209C50.9473 232.209 50.5781 231.84 50.5781 231.389C50.5781 230.938 50.9473 230.568 51.3984 230.568C51.8496 230.568 52.2188 230.938 52.2188 231.389C52.2188 231.84 51.8496 232.209 51.3984 232.209ZM50.7969 241V233.631H51.9863V241H50.7969ZM61.1807 241.13C59.1162 241.13 57.7969 239.633 57.7969 237.295V237.281C57.7969 234.991 59.1094 233.501 61.1738 233.501C62.9648 233.501 64.0381 234.533 64.2568 235.846L64.2637 235.887H63.0811L63.0742 235.866C62.8896 235.142 62.2334 234.554 61.1738 234.554C59.8477 234.554 59.0137 235.62 59.0137 237.281V237.295C59.0137 238.99 59.8613 240.077 61.1738 240.077C62.165 240.077 62.7939 239.64 63.0674 238.819L63.0811 238.778L64.2568 238.771L64.2432 238.847C63.9424 240.18 62.9512 241.13 61.1807 241.13ZM69.0283 241.13C66.9297 241.13 65.6309 239.681 65.6309 237.322V237.309C65.6309 234.943 66.9297 233.501 69.0283 233.501C71.127 233.501 72.4258 234.943 72.4258 237.309V237.322C72.4258 239.681 71.127 241.13 69.0283 241.13ZM69.0283 240.077C70.4229 240.077 71.209 239.059 71.209 237.322V237.309C71.209 235.565 70.4229 234.554 69.0283 234.554C67.6338 234.554 66.8477 235.565 66.8477 237.309V237.322C66.8477 239.059 67.6338 240.077 69.0283 240.077ZM76.9922 241.13C75.126 241.13 73.9023 239.619 73.9023 237.322V237.309C73.9023 234.998 75.1191 233.501 76.9922 233.501C78.0039 233.501 78.8857 234.007 79.2891 234.793H79.3984V230.705H80.5879V241H79.3984V239.824H79.2891C78.8379 240.645 78.0176 241.13 76.9922 241.13ZM77.2656 240.077C78.6055 240.077 79.4258 239.024 79.4258 237.322V237.309C79.4258 235.606 78.6055 234.554 77.2656 234.554C75.9189 234.554 75.1191 235.593 75.1191 237.309V237.322C75.1191 239.038 75.9189 240.077 77.2656 240.077ZM85.8789 241.13C83.7734 241.13 82.502 239.653 82.502 237.343V237.336C82.502 235.06 83.8008 233.501 85.8037 233.501C87.8066 233.501 89.0234 234.991 89.0234 237.192V237.657H83.7188C83.7529 239.182 84.5938 240.07 85.9062 240.07C86.9043 240.07 87.5195 239.599 87.7178 239.154L87.7451 239.093H88.9346L88.9209 239.147C88.668 240.146 87.6152 241.13 85.8789 241.13ZM85.7969 234.561C84.7031 234.561 83.8691 235.306 83.7393 236.707H87.8135C87.6904 235.251 86.8838 234.561 85.7969 234.561ZM93.3984 241.13C91.7578 241.13 90.6299 240.337 90.4932 239.12H91.71C91.9082 239.735 92.4961 240.139 93.4395 240.139C94.4307 240.139 95.1348 239.667 95.1348 238.997V238.983C95.1348 238.484 94.7588 238.136 93.8496 237.917L92.708 237.644C91.3271 237.315 90.7051 236.714 90.7051 235.654V235.647C90.7051 234.424 91.8809 233.501 93.4463 233.501C94.9912 233.501 96.0645 234.273 96.2285 235.477H95.0596C94.9023 234.896 94.3281 234.492 93.4395 234.492C92.5645 234.492 91.9219 234.943 91.9219 235.593V235.606C91.9219 236.105 92.291 236.42 93.1592 236.632L94.2939 236.905C95.6816 237.24 96.3516 237.842 96.3516 238.895V238.908C96.3516 240.221 95.0732 241.13 93.3984 241.13ZM102.764 232.209C102.312 232.209 101.943 231.84 101.943 231.389C101.943 230.938 102.312 230.568 102.764 230.568C103.215 230.568 103.584 230.938 103.584 231.389C103.584 231.84 103.215 232.209 102.764 232.209ZM102.162 241V233.631H103.352V241H102.162ZM105.594 241V233.631H106.783V234.738H106.893C107.262 233.959 107.952 233.501 109.039 233.501C110.693 233.501 111.616 234.479 111.616 236.229V241H110.427V236.516C110.427 235.189 109.88 234.554 108.704 234.554C107.528 234.554 106.783 235.347 106.783 236.639V241H105.594ZM119.901 241L117.215 231.136H118.5L120.462 239.154H120.544L122.752 231.136H123.996L126.204 239.154H126.286L128.248 231.136H129.533L126.847 241H125.685L123.415 233.214H123.333L121.063 241H119.901ZM133.45 241L130.764 231.136H132.049L134.011 239.154H134.093L136.301 231.136H137.545L139.753 239.154H139.835L141.797 231.136H143.082L140.396 241H139.233L136.964 233.214H136.882L134.612 241H133.45ZM144.955 241V231.136H146.186V241H144.955ZM148.701 241V231.136H149.932V241H148.701ZM158.258 241.13C156.856 241.13 155.797 240.282 155.797 238.942V238.929C155.797 237.616 156.768 236.857 158.483 236.755L160.596 236.625V235.955C160.596 235.046 160.042 234.554 158.941 234.554C158.06 234.554 157.479 234.882 157.287 235.456L157.28 235.477H156.091L156.098 235.436C156.289 234.28 157.41 233.501 158.982 233.501C160.78 233.501 161.785 234.424 161.785 235.955V241H160.596V239.913H160.486C160.021 240.699 159.249 241.13 158.258 241.13ZM157.014 238.915C157.014 239.66 157.649 240.098 158.504 240.098C159.714 240.098 160.596 239.305 160.596 238.252V237.582L158.627 237.705C157.506 237.773 157.014 238.17 157.014 238.901V238.915ZM163.959 241V233.631H165.148V234.738H165.258C165.627 233.959 166.317 233.501 167.404 233.501C169.059 233.501 169.981 234.479 169.981 236.229V241H168.792V236.516C168.792 235.189 168.245 234.554 167.069 234.554C165.894 234.554 165.148 235.347 165.148 236.639V241H163.959ZM174.855 241.13C172.989 241.13 171.766 239.619 171.766 237.322V237.309C171.766 234.998 172.982 233.501 174.855 233.501C175.867 233.501 176.749 234.007 177.152 234.793H177.262V230.705H178.451V241H177.262V239.824H177.152C176.701 240.645 175.881 241.13 174.855 241.13ZM175.129 240.077C176.469 240.077 177.289 239.024 177.289 237.322V237.309C177.289 235.606 176.469 234.554 175.129 234.554C173.782 234.554 172.982 235.593 172.982 237.309V237.322C172.982 239.038 173.782 240.077 175.129 240.077ZM185.301 232.209C184.85 232.209 184.48 231.84 184.48 231.389C184.48 230.938 184.85 230.568 185.301 230.568C185.752 230.568 186.121 230.938 186.121 231.389C186.121 231.84 185.752 232.209 185.301 232.209ZM184.699 241V233.631H185.889V241H184.699ZM190.66 241.13C189.02 241.13 187.892 240.337 187.755 239.12H188.972C189.17 239.735 189.758 240.139 190.701 240.139C191.692 240.139 192.396 239.667 192.396 238.997V238.983C192.396 238.484 192.021 238.136 191.111 237.917L189.97 237.644C188.589 237.315 187.967 236.714 187.967 235.654V235.647C187.967 234.424 189.143 233.501 190.708 233.501C192.253 233.501 193.326 234.273 193.49 235.477H192.321C192.164 234.896 191.59 234.492 190.701 234.492C189.826 234.492 189.184 234.943 189.184 235.593V235.606C189.184 236.105 189.553 236.42 190.421 236.632L191.556 236.905C192.943 237.24 193.613 237.842 193.613 238.895V238.908C193.613 240.221 192.335 241.13 190.66 241.13ZM28.1221 261.13C26.0576 261.13 24.7383 259.633 24.7383 257.295V257.281C24.7383 254.991 26.0508 253.501 28.1152 253.501C29.9062 253.501 30.9795 254.533 31.1982 255.846L31.2051 255.887H30.0225L30.0156 255.866C29.8311 255.142 29.1748 254.554 28.1152 254.554C26.7891 254.554 25.9551 255.62 25.9551 257.281V257.295C25.9551 258.99 26.8027 260.077 28.1152 260.077C29.1064 260.077 29.7354 259.64 30.0088 258.819L30.0225 258.778L31.1982 258.771L31.1846 258.847C30.8838 260.18 29.8926 261.13 28.1221 261.13ZM35.9697 261.13C33.8711 261.13 32.5723 259.681 32.5723 257.322V257.309C32.5723 254.943 33.8711 253.501 35.9697 253.501C38.0684 253.501 39.3672 254.943 39.3672 257.309V257.322C39.3672 259.681 38.0684 261.13 35.9697 261.13ZM35.9697 260.077C37.3643 260.077 38.1504 259.059 38.1504 257.322V257.309C38.1504 255.565 37.3643 254.554 35.9697 254.554C34.5752 254.554 33.7891 255.565 33.7891 257.309V257.322C33.7891 259.059 34.5752 260.077 35.9697 260.077ZM41.2129 261V253.631H42.4023V254.738H42.5117C42.8809 253.959 43.5713 253.501 44.6582 253.501C46.3125 253.501 47.2354 254.479 47.2354 256.229V261H46.0459V256.516C46.0459 255.189 45.499 254.554 44.3232 254.554C43.1475 254.554 42.4023 255.347 42.4023 256.639V261H41.2129ZM51.918 261.13C50.2773 261.13 49.1494 260.337 49.0127 259.12H50.2295C50.4277 259.735 51.0156 260.139 51.959 260.139C52.9502 260.139 53.6543 259.667 53.6543 258.997V258.983C53.6543 258.484 53.2783 258.136 52.3691 257.917L51.2275 257.644C49.8467 257.315 49.2246 256.714 49.2246 255.654V255.647C49.2246 254.424 50.4004 253.501 51.9658 253.501C53.5107 253.501 54.584 254.273 54.748 255.477H53.5791C53.4219 254.896 52.8477 254.492 51.959 254.492C51.084 254.492 50.4414 254.943 50.4414 255.593V255.606C50.4414 256.105 50.8105 256.42 51.6787 256.632L52.8135 256.905C54.2012 257.24 54.8711 257.842 54.8711 258.895V258.908C54.8711 260.221 53.5928 261.13 51.918 261.13ZM57.3457 252.209C56.8945 252.209 56.5254 251.84 56.5254 251.389C56.5254 250.938 56.8945 250.568 57.3457 250.568C57.7969 250.568 58.166 250.938 58.166 251.389C58.166 251.84 57.7969 252.209 57.3457 252.209ZM56.7441 261V253.631H57.9336V261H56.7441ZM62.8965 261.13C61.0303 261.13 59.8066 259.619 59.8066 257.322V257.309C59.8066 254.998 61.0234 253.501 62.8965 253.501C63.9082 253.501 64.79 254.007 65.1934 254.793H65.3027V250.705H66.4922V261H65.3027V259.824H65.1934C64.7422 260.645 63.9219 261.13 62.8965 261.13ZM63.1699 260.077C64.5098 260.077 65.3301 259.024 65.3301 257.322V257.309C65.3301 255.606 64.5098 254.554 63.1699 254.554C61.8232 254.554 61.0234 255.593 61.0234 257.309V257.322C61.0234 259.038 61.8232 260.077 63.1699 260.077ZM71.7832 261.13C69.6777 261.13 68.4062 259.653 68.4062 257.343V257.336C68.4062 255.06 69.7051 253.501 71.708 253.501C73.7109 253.501 74.9277 254.991 74.9277 257.192V257.657H69.623C69.6572 259.182 70.498 260.07 71.8105 260.07C72.8086 260.07 73.4238 259.599 73.6221 259.154L73.6494 259.093H74.8389L74.8252 259.147C74.5723 260.146 73.5195 261.13 71.7832 261.13ZM71.7012 254.561C70.6074 254.561 69.7734 255.306 69.6436 256.707H73.7178C73.5947 255.251 72.7881 254.561 71.7012 254.561ZM76.7734 261V253.631H77.9629V254.725H78.0723C78.3525 253.952 79.043 253.501 80.041 253.501C80.2666 253.501 80.5195 253.528 80.6357 253.549V254.704C80.3896 254.663 80.1641 254.636 79.9043 254.636C78.7695 254.636 77.9629 255.354 77.9629 256.434V261H76.7734ZM84.9082 261.13C82.8027 261.13 81.5312 259.653 81.5312 257.343V257.336C81.5312 255.06 82.8301 253.501 84.833 253.501C86.8359 253.501 88.0527 254.991 88.0527 257.192V257.657H82.748C82.7822 259.182 83.623 260.07 84.9355 260.07C85.9336 260.07 86.5488 259.599 86.7471 259.154L86.7744 259.093H87.9639L87.9502 259.147C87.6973 260.146 86.6445 261.13 84.9082 261.13ZM84.8262 254.561C83.7324 254.561 82.8984 255.306 82.7686 256.707H86.8428C86.7197 255.251 85.9131 254.561 84.8262 254.561ZM92.6191 261.13C90.7529 261.13 89.5293 259.619 89.5293 257.322V257.309C89.5293 254.998 90.7461 253.501 92.6191 253.501C93.6309 253.501 94.5127 254.007 94.916 254.793H95.0254V250.705H96.2148V261H95.0254V259.824H94.916C94.4648 260.645 93.6445 261.13 92.6191 261.13ZM92.8926 260.077C94.2324 260.077 95.0527 259.024 95.0527 257.322V257.309C95.0527 255.606 94.2324 254.554 92.8926 254.554C91.5459 254.554 90.7461 255.593 90.7461 257.309V257.322C90.7461 259.038 91.5459 260.077 92.8926 260.077ZM105.054 261.055C103.536 261.055 102.9 260.494 102.9 259.086V254.615H101.738V253.631H102.9V251.724H104.131V253.631H105.744V254.615H104.131V258.785C104.131 259.653 104.432 260.002 105.197 260.002C105.409 260.002 105.525 259.995 105.744 259.975V260.986C105.512 261.027 105.286 261.055 105.054 261.055ZM107.59 261V250.705H108.779V254.738H108.889C109.258 253.959 109.948 253.501 111.035 253.501C112.689 253.501 113.612 254.479 113.612 256.229V261H112.423V256.516C112.423 255.189 111.876 254.554 110.7 254.554C109.524 254.554 108.779 255.347 108.779 256.639V261H107.59ZM118.773 261.13C116.668 261.13 115.396 259.653 115.396 257.343V257.336C115.396 255.06 116.695 253.501 118.698 253.501C120.701 253.501 121.918 254.991 121.918 257.192V257.657H116.613C116.647 259.182 117.488 260.07 118.801 260.07C119.799 260.07 120.414 259.599 120.612 259.154L120.64 259.093H121.829L121.815 259.147C121.562 260.146 120.51 261.13 118.773 261.13ZM118.691 254.561C117.598 254.561 116.764 255.306 116.634 256.707H120.708C120.585 255.251 119.778 254.561 118.691 254.561ZM128.193 261V254.615H126.97V253.631H128.193V252.811C128.193 251.341 128.932 250.637 130.333 250.637C130.62 250.637 130.88 250.657 131.126 250.705V251.655C130.982 251.628 130.784 251.621 130.572 251.621C129.725 251.621 129.383 252.038 129.383 252.845V253.631H131.058V254.615H129.383V261H128.193ZM134.592 261.13C133.19 261.13 132.131 260.282 132.131 258.942V258.929C132.131 257.616 133.102 256.857 134.817 256.755L136.93 256.625V255.955C136.93 255.046 136.376 254.554 135.275 254.554C134.394 254.554 133.812 254.882 133.621 255.456L133.614 255.477H132.425L132.432 255.436C132.623 254.28 133.744 253.501 135.316 253.501C137.114 253.501 138.119 254.424 138.119 255.955V261H136.93V259.913H136.82C136.355 260.699 135.583 261.13 134.592 261.13ZM133.348 258.915C133.348 259.66 133.983 260.098 134.838 260.098C136.048 260.098 136.93 259.305 136.93 258.252V257.582L134.961 257.705C133.84 257.773 133.348 258.17 133.348 258.901V258.915ZM142.911 261.055C141.394 261.055 140.758 260.494 140.758 259.086V254.615H139.596V253.631H140.758V251.724H141.988V253.631H143.602V254.615H141.988V258.785C141.988 259.653 142.289 260.002 143.055 260.002C143.267 260.002 143.383 259.995 143.602 259.975V260.986C143.369 261.027 143.144 261.055 142.911 261.055ZM145.447 261V250.705H146.637V254.738H146.746C147.115 253.959 147.806 253.501 148.893 253.501C150.547 253.501 151.47 254.479 151.47 256.229V261H150.28V256.516C150.28 255.189 149.733 254.554 148.558 254.554C147.382 254.554 146.637 255.347 146.637 256.639V261H145.447ZM156.631 261.13C154.525 261.13 153.254 259.653 153.254 257.343V257.336C153.254 255.06 154.553 253.501 156.556 253.501C158.559 253.501 159.775 254.991 159.775 257.192V257.657H154.471C154.505 259.182 155.346 260.07 156.658 260.07C157.656 260.07 158.271 259.599 158.47 259.154L158.497 259.093H159.687L159.673 259.147C159.42 260.146 158.367 261.13 156.631 261.13ZM156.549 254.561C155.455 254.561 154.621 255.306 154.491 256.707H158.565C158.442 255.251 157.636 254.561 156.549 254.561ZM161.621 261V253.631H162.811V254.725H162.92C163.2 253.952 163.891 253.501 164.889 253.501C165.114 253.501 165.367 253.528 165.483 253.549V254.704C165.237 254.663 165.012 254.636 164.752 254.636C163.617 254.636 162.811 255.354 162.811 256.434V261H161.621ZM173.919 261.13C171.82 261.13 170.521 259.681 170.521 257.322V257.309C170.521 254.943 171.82 253.501 173.919 253.501C176.018 253.501 177.316 254.943 177.316 257.309V257.322C177.316 259.681 176.018 261.13 173.919 261.13ZM173.919 260.077C175.313 260.077 176.1 259.059 176.1 257.322V257.309C176.1 255.565 175.313 254.554 173.919 254.554C172.524 254.554 171.738 255.565 171.738 257.309V257.322C171.738 259.059 172.524 260.077 173.919 260.077ZM179.654 261V254.615H178.431V253.631H179.654V252.811C179.654 251.341 180.393 250.637 181.794 250.637C182.081 250.637 182.341 250.657 182.587 250.705V251.655C182.443 251.628 182.245 251.621 182.033 251.621C181.186 251.621 180.844 252.038 180.844 252.845V253.631H182.519V254.615H180.844V261H179.654ZM27.7256 281.055C26.208 281.055 25.5723 280.494 25.5723 279.086V274.615H24.4102V273.631H25.5723V271.724H26.8027V273.631H28.416V274.615H26.8027V278.785C26.8027 279.653 27.1035 280.002 27.8691 280.002C28.0811 280.002 28.1973 279.995 28.416 279.975V280.986C28.1836 281.027 27.958 281.055 27.7256 281.055ZM30.2617 281V270.705H31.4512V274.738H31.5605C31.9297 273.959 32.6201 273.501 33.707 273.501C35.3613 273.501 36.2842 274.479 36.2842 276.229V281H35.0947V276.516C35.0947 275.189 34.5479 274.554 33.3721 274.554C32.1963 274.554 31.4512 275.347 31.4512 276.639V281H30.2617ZM41.4453 281.13C39.3398 281.13 38.0684 279.653 38.0684 277.343V277.336C38.0684 275.06 39.3672 273.501 41.3701 273.501C43.373 273.501 44.5898 274.991 44.5898 277.192V277.657H39.2852C39.3193 279.182 40.1602 280.07 41.4727 280.07C42.4707 280.07 43.0859 279.599 43.2842 279.154L43.3115 279.093H44.501L44.4873 279.147C44.2344 280.146 43.1816 281.13 41.4453 281.13ZM41.3633 274.561C40.2695 274.561 39.4355 275.306 39.3057 276.707H43.3799C43.2568 275.251 42.4502 274.561 41.3633 274.561ZM49.4639 281.13C47.3652 281.13 46.0664 279.681 46.0664 277.322V277.309C46.0664 274.943 47.3652 273.501 49.4639 273.501C51.5625 273.501 52.8613 274.943 52.8613 277.309V277.322C52.8613 279.681 51.5625 281.13 49.4639 281.13ZM49.4639 280.077C50.8584 280.077 51.6445 279.059 51.6445 277.322V277.309C51.6445 275.565 50.8584 274.554 49.4639 274.554C48.0693 274.554 47.2832 275.565 47.2832 277.309V277.322C47.2832 279.059 48.0693 280.077 49.4639 280.077ZM54.707 281V273.631H55.8965V274.725H56.0059C56.2861 273.952 56.9766 273.501 57.9746 273.501C58.2002 273.501 58.4531 273.528 58.5693 273.549V274.704C58.3232 274.663 58.0977 274.636 57.8379 274.636C56.7031 274.636 55.8965 275.354 55.8965 276.434V281H54.707ZM62.8418 281.13C60.7363 281.13 59.4648 279.653 59.4648 277.343V277.336C59.4648 275.06 60.7637 273.501 62.7666 273.501C64.7695 273.501 65.9863 274.991 65.9863 277.192V277.657H60.6816C60.7158 279.182 61.5566 280.07 62.8691 280.07C63.8672 280.07 64.4824 279.599 64.6807 279.154L64.708 279.093H65.8975L65.8838 279.147C65.6309 280.146 64.5781 281.13 62.8418 281.13ZM62.7598 274.561C61.666 274.561 60.832 275.306 60.7021 276.707H64.7764C64.6533 275.251 63.8467 274.561 62.7598 274.561ZM70.4502 281.055C68.9326 281.055 68.2969 280.494 68.2969 279.086V274.615H67.1348V273.631H68.2969V271.724H69.5273V273.631H71.1406V274.615H69.5273V278.785C69.5273 279.653 69.8281 280.002 70.5938 280.002C70.8057 280.002 70.9219 279.995 71.1406 279.975V280.986C70.9082 281.027 70.6826 281.055 70.4502 281.055ZM73.5469 272.209C73.0957 272.209 72.7266 271.84 72.7266 271.389C72.7266 270.938 73.0957 270.568 73.5469 270.568C73.998 270.568 74.3672 270.938 74.3672 271.389C74.3672 271.84 73.998 272.209 73.5469 272.209ZM72.9453 281V273.631H74.1348V281H72.9453ZM79.3916 281.13C77.3271 281.13 76.0078 279.633 76.0078 277.295V277.281C76.0078 274.991 77.3203 273.501 79.3848 273.501C81.1758 273.501 82.249 274.533 82.4678 275.846L82.4746 275.887H81.292L81.2852 275.866C81.1006 275.142 80.4443 274.554 79.3848 274.554C78.0586 274.554 77.2246 275.62 77.2246 277.281V277.295C77.2246 278.99 78.0723 280.077 79.3848 280.077C80.376 280.077 81.0049 279.64 81.2783 278.819L81.292 278.778L82.4678 278.771L82.4541 278.847C82.1533 280.18 81.1621 281.13 79.3916 281.13ZM86.2344 281.13C84.833 281.13 83.7734 280.282 83.7734 278.942V278.929C83.7734 277.616 84.7441 276.857 86.46 276.755L88.5723 276.625V275.955C88.5723 275.046 88.0186 274.554 86.918 274.554C86.0361 274.554 85.4551 274.882 85.2637 275.456L85.2568 275.477H84.0674L84.0742 275.436C84.2656 274.28 85.3867 273.501 86.959 273.501C88.7568 273.501 89.7617 274.424 89.7617 275.955V281H88.5723V279.913H88.4629C87.998 280.699 87.2256 281.13 86.2344 281.13ZM84.9902 278.915C84.9902 279.66 85.626 280.098 86.4805 280.098C87.6904 280.098 88.5723 279.305 88.5723 278.252V277.582L86.6035 277.705C85.4824 277.773 84.9902 278.17 84.9902 278.901V278.915ZM92.0039 281V270.705H93.1934V281H92.0039ZM102.429 281.13C100.364 281.13 99.0449 279.633 99.0449 277.295V277.281C99.0449 274.991 100.357 273.501 102.422 273.501C104.213 273.501 105.286 274.533 105.505 275.846L105.512 275.887H104.329L104.322 275.866C104.138 275.142 103.481 274.554 102.422 274.554C101.096 274.554 100.262 275.62 100.262 277.281V277.295C100.262 278.99 101.109 280.077 102.422 280.077C103.413 280.077 104.042 279.64 104.315 278.819L104.329 278.778L105.505 278.771L105.491 278.847C105.19 280.18 104.199 281.13 102.429 281.13ZM110.276 281.13C108.178 281.13 106.879 279.681 106.879 277.322V277.309C106.879 274.943 108.178 273.501 110.276 273.501C112.375 273.501 113.674 274.943 113.674 277.309V277.322C113.674 279.681 112.375 281.13 110.276 281.13ZM110.276 280.077C111.671 280.077 112.457 279.059 112.457 277.322V277.309C112.457 275.565 111.671 274.554 110.276 274.554C108.882 274.554 108.096 275.565 108.096 277.309V277.322C108.096 279.059 108.882 280.077 110.276 280.077ZM115.52 281V273.631H116.709V274.752H116.818C117.146 273.959 117.844 273.501 118.808 273.501C119.806 273.501 120.503 274.027 120.845 274.793H120.954C121.351 274.014 122.191 273.501 123.21 273.501C124.714 273.501 125.555 274.362 125.555 275.907V281H124.365V276.181C124.365 275.094 123.866 274.554 122.827 274.554C121.802 274.554 121.125 275.326 121.125 276.263V281H119.936V275.996C119.936 275.121 119.334 274.554 118.404 274.554C117.44 274.554 116.709 275.395 116.709 276.434V281H115.52ZM127.701 283.461V273.631H128.891V274.807H129C129.451 273.986 130.271 273.501 131.297 273.501C133.163 273.501 134.387 275.012 134.387 277.309V277.322C134.387 279.633 133.17 281.13 131.297 281.13C130.285 281.13 129.403 280.624 129 279.838H128.891V283.461H127.701ZM131.023 280.077C132.37 280.077 133.17 279.038 133.17 277.322V277.309C133.17 275.593 132.37 274.554 131.023 274.554C129.684 274.554 128.863 275.606 128.863 277.309V277.322C128.863 279.024 129.684 280.077 131.023 280.077ZM138.714 281.13C137.039 281.13 136.178 280.146 136.178 278.402V273.631H137.367V278.115C137.367 279.441 137.846 280.077 139.021 280.077C140.32 280.077 141.011 279.284 141.011 277.992V273.631H142.2V281H141.011V279.899H140.901C140.539 280.686 139.794 281.13 138.714 281.13ZM147.04 281.055C145.522 281.055 144.887 280.494 144.887 279.086V274.615H143.725V273.631H144.887V271.724H146.117V273.631H147.73V274.615H146.117V278.785C146.117 279.653 146.418 280.002 147.184 280.002C147.396 280.002 147.512 279.995 147.73 279.975V280.986C147.498 281.027 147.272 281.055 147.04 281.055ZM152.406 281.13C150.301 281.13 149.029 279.653 149.029 277.343V277.336C149.029 275.06 150.328 273.501 152.331 273.501C154.334 273.501 155.551 274.991 155.551 277.192V277.657H150.246C150.28 279.182 151.121 280.07 152.434 280.07C153.432 280.07 154.047 279.599 154.245 279.154L154.272 279.093H155.462L155.448 279.147C155.195 280.146 154.143 281.13 152.406 281.13ZM152.324 274.561C151.23 274.561 150.396 275.306 150.267 276.707H154.341C154.218 275.251 153.411 274.561 152.324 274.561ZM157.396 281V273.631H158.586V274.725H158.695C158.976 273.952 159.666 273.501 160.664 273.501C160.89 273.501 161.143 273.528 161.259 273.549V274.704C161.013 274.663 160.787 274.636 160.527 274.636C159.393 274.636 158.586 275.354 158.586 276.434V281H157.396ZM169.195 281.13C167.555 281.13 166.427 280.337 166.29 279.12H167.507C167.705 279.735 168.293 280.139 169.236 280.139C170.228 280.139 170.932 279.667 170.932 278.997V278.983C170.932 278.484 170.556 278.136 169.646 277.917L168.505 277.644C167.124 277.315 166.502 276.714 166.502 275.654V275.647C166.502 274.424 167.678 273.501 169.243 273.501C170.788 273.501 171.861 274.273 172.025 275.477H170.856C170.699 274.896 170.125 274.492 169.236 274.492C168.361 274.492 167.719 274.943 167.719 275.593V275.606C167.719 276.105 168.088 276.42 168.956 276.632L170.091 276.905C171.479 277.24 172.148 277.842 172.148 278.895V278.908C172.148 280.221 170.87 281.13 169.195 281.13ZM177.009 281.13C174.944 281.13 173.625 279.633 173.625 277.295V277.281C173.625 274.991 174.938 273.501 177.002 273.501C178.793 273.501 179.866 274.533 180.085 275.846L180.092 275.887H178.909L178.902 275.866C178.718 275.142 178.062 274.554 177.002 274.554C175.676 274.554 174.842 275.62 174.842 277.281V277.295C174.842 278.99 175.689 280.077 177.002 280.077C177.993 280.077 178.622 279.64 178.896 278.819L178.909 278.778L180.085 278.771L180.071 278.847C179.771 280.18 178.779 281.13 177.009 281.13ZM182.457 272.209C182.006 272.209 181.637 271.84 181.637 271.389C181.637 270.938 182.006 270.568 182.457 270.568C182.908 270.568 183.277 270.938 183.277 271.389C183.277 271.84 182.908 272.209 182.457 272.209ZM181.855 281V273.631H183.045V281H181.855ZM188.295 281.13C186.189 281.13 184.918 279.653 184.918 277.343V277.336C184.918 275.06 186.217 273.501 188.22 273.501C190.223 273.501 191.439 274.991 191.439 277.192V277.657H186.135C186.169 279.182 187.01 280.07 188.322 280.07C189.32 280.07 189.936 279.599 190.134 279.154L190.161 279.093H191.351L191.337 279.147C191.084 280.146 190.031 281.13 188.295 281.13ZM188.213 274.561C187.119 274.561 186.285 275.306 186.155 276.707H190.229C190.106 275.251 189.3 274.561 188.213 274.561ZM193.285 281V273.631H194.475V274.738H194.584C194.953 273.959 195.644 273.501 196.73 273.501C198.385 273.501 199.308 274.479 199.308 276.229V281H198.118V276.516C198.118 275.189 197.571 274.554 196.396 274.554C195.22 274.554 194.475 275.347 194.475 276.639V281H193.285ZM204.476 281.13C202.411 281.13 201.092 279.633 201.092 277.295V277.281C201.092 274.991 202.404 273.501 204.469 273.501C206.26 273.501 207.333 274.533 207.552 275.846L207.559 275.887H206.376L206.369 275.866C206.185 275.142 205.528 274.554 204.469 274.554C203.143 274.554 202.309 275.62 202.309 277.281V277.295C202.309 278.99 203.156 280.077 204.469 280.077C205.46 280.077 206.089 279.64 206.362 278.819L206.376 278.778L207.552 278.771L207.538 278.847C207.237 280.18 206.246 281.13 204.476 281.13ZM212.303 281.13C210.197 281.13 208.926 279.653 208.926 277.343V277.336C208.926 275.06 210.225 273.501 212.228 273.501C214.23 273.501 215.447 274.991 215.447 277.192V277.657H210.143C210.177 279.182 211.018 280.07 212.33 280.07C213.328 280.07 213.943 279.599 214.142 279.154L214.169 279.093H215.358L215.345 279.147C215.092 280.146 214.039 281.13 212.303 281.13ZM212.221 274.561C211.127 274.561 210.293 275.306 210.163 276.707H214.237C214.114 275.251 213.308 274.561 212.221 274.561ZM223.254 281.13C221.853 281.13 220.793 280.282 220.793 278.942V278.929C220.793 277.616 221.764 276.857 223.479 276.755L225.592 276.625V275.955C225.592 275.046 225.038 274.554 223.938 274.554C223.056 274.554 222.475 274.882 222.283 275.456L222.276 275.477H221.087L221.094 275.436C221.285 274.28 222.406 273.501 223.979 273.501C225.776 273.501 226.781 274.424 226.781 275.955V281H225.592V279.913H225.482C225.018 280.699 224.245 281.13 223.254 281.13ZM222.01 278.915C222.01 279.66 222.646 280.098 223.5 280.098C224.71 280.098 225.592 279.305 225.592 278.252V277.582L223.623 277.705C222.502 277.773 222.01 278.17 222.01 278.901V278.915ZM228.955 281V273.631H230.145V274.738H230.254C230.623 273.959 231.313 273.501 232.4 273.501C234.055 273.501 234.978 274.479 234.978 276.229V281H233.788V276.516C233.788 275.189 233.241 274.554 232.065 274.554C230.89 274.554 230.145 275.347 230.145 276.639V281H228.955ZM239.852 281.13C237.985 281.13 236.762 279.619 236.762 277.322V277.309C236.762 274.998 237.979 273.501 239.852 273.501C240.863 273.501 241.745 274.007 242.148 274.793H242.258V270.705H243.447V281H242.258V279.824H242.148C241.697 280.645 240.877 281.13 239.852 281.13ZM240.125 280.077C241.465 280.077 242.285 279.024 242.285 277.322V277.309C242.285 275.606 241.465 274.554 240.125 274.554C238.778 274.554 237.979 275.593 237.979 277.309V277.322C237.979 279.038 238.778 280.077 240.125 280.077ZM27.1309 301.13C25.7295 301.13 24.6699 300.282 24.6699 298.942V298.929C24.6699 297.616 25.6406 296.857 27.3564 296.755L29.4688 296.625V295.955C29.4688 295.046 28.915 294.554 27.8145 294.554C26.9326 294.554 26.3516 294.882 26.1602 295.456L26.1533 295.477H24.9639L24.9707 295.436C25.1621 294.28 26.2832 293.501 27.8555 293.501C29.6533 293.501 30.6582 294.424 30.6582 295.955V301H29.4688V299.913H29.3594C28.8945 300.699 28.1221 301.13 27.1309 301.13ZM25.8867 298.915C25.8867 299.66 26.5225 300.098 27.377 300.098C28.5869 300.098 29.4688 299.305 29.4688 298.252V297.582L27.5 297.705C26.3789 297.773 25.8867 298.17 25.8867 298.901V298.915ZM32.832 301V293.631H34.0215V294.725H34.1309C34.4111 293.952 35.1016 293.501 36.0996 293.501C36.3252 293.501 36.5781 293.528 36.6943 293.549V294.704C36.4482 294.663 36.2227 294.636 35.9629 294.636C34.8281 294.636 34.0215 295.354 34.0215 296.434V301H32.832ZM40.9189 301.055C39.4014 301.055 38.7656 300.494 38.7656 299.086V294.615H37.6035V293.631H38.7656V291.724H39.9961V293.631H41.6094V294.615H39.9961V298.785C39.9961 299.653 40.2969 300.002 41.0625 300.002C41.2744 300.002 41.3906 299.995 41.6094 299.975V300.986C41.377 301.027 41.1514 301.055 40.9189 301.055ZM44.0156 292.209C43.5645 292.209 43.1953 291.84 43.1953 291.389C43.1953 290.938 43.5645 290.568 44.0156 290.568C44.4668 290.568 44.8359 290.938 44.8359 291.389C44.8359 291.84 44.4668 292.209 44.0156 292.209ZM43.4141 301V293.631H44.6035V301H43.4141ZM47.3379 301V294.615H46.1143V293.631H47.3379V292.811C47.3379 291.341 48.0762 290.637 49.4775 290.637C49.7646 290.637 50.0244 290.657 50.2705 290.705V291.655C50.127 291.628 49.9287 291.621 49.7168 291.621C48.8691 291.621 48.5273 292.038 48.5273 292.845V293.631H50.2021V294.615H48.5273V301H47.3379ZM52.5469 292.209C52.0957 292.209 51.7266 291.84 51.7266 291.389C51.7266 290.938 52.0957 290.568 52.5469 290.568C52.998 290.568 53.3672 290.938 53.3672 291.389C53.3672 291.84 52.998 292.209 52.5469 292.209ZM51.9453 301V293.631H53.1348V301H51.9453ZM58.3916 301.13C56.3271 301.13 55.0078 299.633 55.0078 297.295V297.281C55.0078 294.991 56.3203 293.501 58.3848 293.501C60.1758 293.501 61.249 294.533 61.4678 295.846L61.4746 295.887H60.292L60.2852 295.866C60.1006 295.142 59.4443 294.554 58.3848 294.554C57.0586 294.554 56.2246 295.62 56.2246 297.281V297.295C56.2246 298.99 57.0723 300.077 58.3848 300.077C59.376 300.077 60.0049 299.64 60.2783 298.819L60.292 298.778L61.4678 298.771L61.4541 298.847C61.1533 300.18 60.1621 301.13 58.3916 301.13ZM63.8398 292.209C63.3887 292.209 63.0195 291.84 63.0195 291.389C63.0195 290.938 63.3887 290.568 63.8398 290.568C64.291 290.568 64.6602 290.938 64.6602 291.389C64.6602 291.84 64.291 292.209 63.8398 292.209ZM63.2383 301V293.631H64.4277V301H63.2383ZM68.6934 301.13C67.292 301.13 66.2324 300.282 66.2324 298.942V298.929C66.2324 297.616 67.2031 296.857 68.9189 296.755L71.0312 296.625V295.955C71.0312 295.046 70.4775 294.554 69.377 294.554C68.4951 294.554 67.9141 294.882 67.7227 295.456L67.7158 295.477H66.5264L66.5332 295.436C66.7246 294.28 67.8457 293.501 69.418 293.501C71.2158 293.501 72.2207 294.424 72.2207 295.955V301H71.0312V299.913H70.9219C70.457 300.699 69.6846 301.13 68.6934 301.13ZM67.4492 298.915C67.4492 299.66 68.085 300.098 68.9395 300.098C70.1494 300.098 71.0312 299.305 71.0312 298.252V297.582L69.0625 297.705C67.9414 297.773 67.4492 298.17 67.4492 298.901V298.915ZM74.4629 301V290.705H75.6523V301H74.4629ZM82.502 292.209C82.0508 292.209 81.6816 291.84 81.6816 291.389C81.6816 290.938 82.0508 290.568 82.502 290.568C82.9531 290.568 83.3223 290.938 83.3223 291.389C83.3223 291.84 82.9531 292.209 82.502 292.209ZM81.9004 301V293.631H83.0898V301H81.9004ZM85.332 301V293.631H86.5215V294.738H86.6309C87 293.959 87.6904 293.501 88.7773 293.501C90.4316 293.501 91.3545 294.479 91.3545 296.229V301H90.165V296.516C90.165 295.189 89.6182 294.554 88.4424 294.554C87.2666 294.554 86.5215 295.347 86.5215 296.639V301H85.332ZM96.126 301.055C94.6084 301.055 93.9727 300.494 93.9727 299.086V294.615H92.8105V293.631H93.9727V291.724H95.2031V293.631H96.8164V294.615H95.2031V298.785C95.2031 299.653 95.5039 300.002 96.2695 300.002C96.4814 300.002 96.5977 299.995 96.8164 299.975V300.986C96.584 301.027 96.3584 301.055 96.126 301.055ZM101.492 301.13C99.3867 301.13 98.1152 299.653 98.1152 297.343V297.336C98.1152 295.06 99.4141 293.501 101.417 293.501C103.42 293.501 104.637 294.991 104.637 297.192V297.657H99.332C99.3662 299.182 100.207 300.07 101.52 300.07C102.518 300.07 103.133 299.599 103.331 299.154L103.358 299.093H104.548L104.534 299.147C104.281 300.146 103.229 301.13 101.492 301.13ZM101.41 294.561C100.316 294.561 99.4824 295.306 99.3525 296.707H103.427C103.304 295.251 102.497 294.561 101.41 294.561ZM106.551 301V290.705H107.74V301H106.551ZM110.092 301V290.705H111.281V301H110.092ZM114.193 292.209C113.742 292.209 113.373 291.84 113.373 291.389C113.373 290.938 113.742 290.568 114.193 290.568C114.645 290.568 115.014 290.938 115.014 291.389C115.014 291.84 114.645 292.209 114.193 292.209ZM113.592 301V293.631H114.781V301H113.592ZM120.059 303.598C118.281 303.598 117.146 302.798 116.962 301.588L116.976 301.581H118.206L118.213 301.588C118.343 302.148 118.999 302.545 120.059 302.545C121.378 302.545 122.164 301.923 122.164 300.836V299.346H122.055C121.59 300.159 120.756 300.617 119.744 300.617C117.837 300.617 116.654 299.141 116.654 297.076V297.062C116.654 294.998 117.844 293.501 119.771 293.501C120.811 293.501 121.617 294.014 122.068 294.848H122.15V293.631H123.34V300.897C123.34 302.545 122.068 303.598 120.059 303.598ZM120.004 299.564C121.371 299.564 122.191 298.539 122.191 297.076V297.062C122.191 295.6 121.364 294.554 120.004 294.554C118.637 294.554 117.871 295.6 117.871 297.062V297.076C117.871 298.539 118.637 299.564 120.004 299.564ZM128.562 301.13C126.457 301.13 125.186 299.653 125.186 297.343V297.336C125.186 295.06 126.484 293.501 128.487 293.501C130.49 293.501 131.707 294.991 131.707 297.192V297.657H126.402C126.437 299.182 127.277 300.07 128.59 300.07C129.588 300.07 130.203 299.599 130.401 299.154L130.429 299.093H131.618L131.604 299.147C131.352 300.146 130.299 301.13 128.562 301.13ZM128.48 294.561C127.387 294.561 126.553 295.306 126.423 296.707H130.497C130.374 295.251 129.567 294.561 128.48 294.561ZM133.553 301V293.631H134.742V294.738H134.852C135.221 293.959 135.911 293.501 136.998 293.501C138.652 293.501 139.575 294.479 139.575 296.229V301H138.386V296.516C138.386 295.189 137.839 294.554 136.663 294.554C135.487 294.554 134.742 295.347 134.742 296.639V301H133.553ZM144.743 301.13C142.679 301.13 141.359 299.633 141.359 297.295V297.281C141.359 294.991 142.672 293.501 144.736 293.501C146.527 293.501 147.601 294.533 147.819 295.846L147.826 295.887H146.644L146.637 295.866C146.452 295.142 145.796 294.554 144.736 294.554C143.41 294.554 142.576 295.62 142.576 297.281V297.295C142.576 298.99 143.424 300.077 144.736 300.077C145.728 300.077 146.356 299.64 146.63 298.819L146.644 298.778L147.819 298.771L147.806 298.847C147.505 300.18 146.514 301.13 144.743 301.13ZM152.57 301.13C150.465 301.13 149.193 299.653 149.193 297.343V297.336C149.193 295.06 150.492 293.501 152.495 293.501C154.498 293.501 155.715 294.991 155.715 297.192V297.657H150.41C150.444 299.182 151.285 300.07 152.598 300.07C153.596 300.07 154.211 299.599 154.409 299.154L154.437 299.093H155.626L155.612 299.147C155.359 300.146 154.307 301.13 152.57 301.13ZM152.488 294.561C151.395 294.561 150.561 295.306 150.431 296.707H154.505C154.382 295.251 153.575 294.561 152.488 294.561ZM158.531 301.068C158.046 301.068 157.643 300.665 157.643 300.18C157.643 299.688 158.046 299.291 158.531 299.291C159.023 299.291 159.42 299.688 159.42 300.18C159.42 300.665 159.023 301.068 158.531 301.068Z"
                    fill="#828299"
                  />
                </g>
              </g>
            </g>
            <path
              d="M1 12.0002C1 5.37283 6.37258 0.000244141 13 0.000244141H269C275.627 0.000244141 281 5.37283 281 12.0002V168C281 174.628 275.627 180 269 180H13C6.37259 180 1 174.628 1 168V12.0002Z"
              fill="url(#paint0_linear_5956_60010)"
            />
            <path
              d="M216.533 70.0002C216.533 64.4774 212.056 60.0002 206.533 60.0002H162.133C156.61 60.0002 152.133 64.4774 152.133 70.0002C152.133 75.5231 156.61 80.0002 162.133 80.0002H206.533C212.056 80.0002 216.533 75.5231 216.533 70.0002Z"
              fill="#BEBECC"
            />
            <path
              d="M159.526 75.0002V65.136H163.244C165.097 65.136 166.409 66.4143 166.409 68.2874V68.301C166.409 70.1741 165.097 71.4797 163.244 71.4797H160.756V75.0002H159.526ZM162.93 66.2297H160.756V70.386H162.93C164.338 70.386 165.152 69.6135 165.152 68.3147V68.301C165.152 67.0022 164.338 66.2297 162.93 66.2297ZM168.276 75.0002V67.6311H169.465V68.7249H169.575C169.855 67.9524 170.545 67.5012 171.543 67.5012C171.769 67.5012 172.022 67.5286 172.138 67.5491V68.7043C171.892 68.6633 171.666 68.636 171.407 68.636C170.272 68.636 169.465 69.3538 169.465 70.4338V75.0002H168.276ZM176.431 75.1301C174.332 75.1301 173.034 73.6809 173.034 71.3225V71.3088C173.034 68.9436 174.332 67.5012 176.431 67.5012C178.53 67.5012 179.828 68.9436 179.828 71.3088V71.3225C179.828 73.6809 178.53 75.1301 176.431 75.1301ZM176.431 74.0774C177.826 74.0774 178.612 73.0588 178.612 71.3225V71.3088C178.612 69.5657 177.826 68.554 176.431 68.554C175.036 68.554 174.25 69.5657 174.25 71.3088V71.3225C174.25 73.0588 175.036 74.0774 176.431 74.0774ZM184.395 75.1301C182.529 75.1301 181.305 73.6194 181.305 71.3225V71.3088C181.305 68.9983 182.522 67.5012 184.395 67.5012C185.407 67.5012 186.288 68.0071 186.692 68.7932H186.801V64.7053H187.991V75.0002H186.801V73.8245H186.692C186.241 74.6448 185.42 75.1301 184.395 75.1301ZM184.668 74.0774C186.008 74.0774 186.828 73.0247 186.828 71.3225V71.3088C186.828 69.6067 186.008 68.554 184.668 68.554C183.322 68.554 182.522 69.593 182.522 71.3088V71.3225C182.522 73.0383 183.322 74.0774 184.668 74.0774ZM192.742 75.1301C191.067 75.1301 190.205 74.1458 190.205 72.4026V67.6311H191.395V72.1155C191.395 73.4417 191.873 74.0774 193.049 74.0774C194.348 74.0774 195.038 73.2844 195.038 71.9924V67.6311H196.228V75.0002H195.038V73.8997H194.929C194.567 74.6858 193.822 75.1301 192.742 75.1301ZM201.464 75.1301C199.4 75.1301 198.08 73.6331 198.08 71.2952V71.2815C198.08 68.9915 199.393 67.5012 201.457 67.5012C203.248 67.5012 204.322 68.5334 204.54 69.8459L204.547 69.887H203.365L203.358 69.8665C203.173 69.1418 202.517 68.554 201.457 68.554C200.131 68.554 199.297 69.6204 199.297 71.2815V71.2952C199.297 72.9905 200.145 74.0774 201.457 74.0774C202.449 74.0774 203.077 73.6399 203.351 72.8196L203.365 72.7786L204.54 72.7717L204.527 72.8469C204.226 74.1799 203.235 75.1301 201.464 75.1301ZM209.038 75.0549C207.521 75.0549 206.885 74.4944 206.885 73.0862V68.6155H205.723V67.6311H206.885V65.7239H208.116V67.6311H209.729V68.6155H208.116V72.7854C208.116 73.6536 208.416 74.0022 209.182 74.0022C209.394 74.0022 209.51 73.9954 209.729 73.9749V74.9866C209.496 75.0276 209.271 75.0549 209.038 75.0549Z"
              fill="#525266"
            />
            <path
              d="M139.522 54.4995C143.914 55.1279 153.161 55.757 153.533 55.832L148.334 60.0413L146.658 65.9868L139.522 54.4995Z"
              fill="#BEBECC"
            />
            <path
              d="M23.4 149.5H93.9V130.5H23.4C21.467 130.5 19.9 132.067 19.9 134V146C19.9 147.933 21.467 149.5 23.4 149.5Z"
              fill="#EDF0F2"
            />
            <path
              d="M23.4 149.5H93.9V130.5H23.4C21.467 130.5 19.9 132.067 19.9 134V146C19.9 147.933 21.467 149.5 23.4 149.5Z"
              stroke="#BEBECC"
            />
            <path
              d="M24.8805 145V135.136H26.111V139.401H31.525V135.136H32.7555V145H31.525V140.509H26.111V145H24.8805ZM38.1285 145.13C36.0231 145.13 34.7516 143.653 34.7516 141.343V141.336C34.7516 139.06 36.0504 137.501 38.0533 137.501C40.0563 137.501 41.2731 138.991 41.2731 141.192V141.657H35.9684C36.0026 143.182 36.8434 144.07 38.1559 144.07C39.1539 144.07 39.7692 143.599 39.9674 143.154L39.9948 143.093H41.1842L41.1705 143.147C40.9176 144.146 39.8649 145.13 38.1285 145.13ZM38.0465 138.561C36.9528 138.561 36.1188 139.306 35.9889 140.707H40.0631C39.9401 139.251 39.1334 138.561 38.0465 138.561ZM43.1871 145V134.705H44.3766V145H43.1871ZM46.7282 145V134.705H47.9176V145H46.7282ZM53.2291 145.13C51.1305 145.13 49.8317 143.681 49.8317 141.322V141.309C49.8317 138.943 51.1305 137.501 53.2291 137.501C55.3278 137.501 56.6266 138.943 56.6266 141.309V141.322C56.6266 143.681 55.3278 145.13 53.2291 145.13ZM53.2291 144.077C54.6237 144.077 55.4098 143.059 55.4098 141.322V141.309C55.4098 139.565 54.6237 138.554 53.2291 138.554C51.8346 138.554 51.0485 139.565 51.0485 141.309V141.322C51.0485 143.059 51.8346 144.077 53.2291 144.077ZM61.7741 145L65.4108 135.136H66.6276L70.2643 145H68.9723L67.9811 142.177H64.0573L63.066 145H61.7741ZM65.9645 136.729L64.4196 141.131H67.6188L66.0739 136.729H65.9645ZM71.9117 145V134.705H73.1012V145H71.9117ZM77.4078 145.13C76.0065 145.13 74.9469 144.282 74.9469 142.942V142.929C74.9469 141.616 75.9176 140.857 77.6334 140.755L79.7457 140.625V139.955C79.7457 139.046 79.192 138.554 78.0914 138.554C77.2096 138.554 76.6285 138.882 76.4371 139.456L76.4303 139.477H75.2408L75.2477 139.436C75.4391 138.28 76.5602 137.501 78.1324 137.501C79.9303 137.501 80.9352 138.424 80.9352 139.955V145H79.7457V143.913H79.6364C79.1715 144.699 78.3991 145.13 77.4078 145.13ZM76.1637 142.915C76.1637 143.66 76.7994 144.098 77.6539 144.098C78.8639 144.098 79.7457 143.305 79.7457 142.252V141.582L77.777 141.705C76.6559 141.773 76.1637 142.17 76.1637 142.901V142.915ZM83.109 145V137.631H84.2985V138.738H84.4078C84.777 137.959 85.4674 137.501 86.5543 137.501C88.2086 137.501 89.1315 138.479 89.1315 140.229V145H87.942V140.516C87.942 139.189 87.3951 138.554 86.2194 138.554C85.0436 138.554 84.2985 139.347 84.2985 140.639V145H83.109Z"
              fill="#A1A1B2"
            />
            <path
              d="M187.533 124C187.533 126.209 185.742 128 183.533 128H93.5334V112C93.5334 109.791 95.3242 108 97.5334 108H183.533C185.742 108 187.533 109.791 187.533 112V124Z"
              fill="#BEBECC"
            />
            <path
              d="M99.2375 123V113.136H102.956C104.809 113.136 106.121 114.414 106.121 116.287V116.301C106.121 118.174 104.809 119.479 102.956 119.479H100.468V123H99.2375ZM102.642 114.229H100.468V118.386H102.642C104.05 118.386 104.863 117.613 104.863 116.314V116.301C104.863 115.002 104.05 114.229 102.642 114.229ZM108.138 123V113.136H109.567L112.944 121.366H113.053L116.43 113.136H117.859V123H116.71V115.467H116.635L113.518 123H112.479L109.361 115.467H109.286V123H108.138ZM124.79 114.209C124.339 114.209 123.97 113.84 123.97 113.389C123.97 112.937 124.339 112.568 124.79 112.568C125.241 112.568 125.611 112.937 125.611 113.389C125.611 113.84 125.241 114.209 124.79 114.209ZM124.189 123V115.631H125.378V123H124.189ZM130.15 123.13C128.509 123.13 127.381 122.337 127.244 121.12H128.461C128.659 121.735 129.247 122.139 130.191 122.139C131.182 122.139 131.886 121.667 131.886 120.997V120.983C131.886 120.484 131.51 120.136 130.601 119.917L129.459 119.644C128.078 119.315 127.456 118.714 127.456 117.654V117.647C127.456 116.424 128.632 115.501 130.197 115.501C131.742 115.501 132.816 116.273 132.98 117.477H131.811C131.653 116.896 131.079 116.492 130.191 116.492C129.316 116.492 128.673 116.943 128.673 117.593V117.606C128.673 118.105 129.042 118.42 129.91 118.632L131.045 118.905C132.433 119.24 133.103 119.842 133.103 120.895V120.908C133.103 122.221 131.824 123.13 130.15 123.13ZM141.894 123.13C139.788 123.13 138.517 121.653 138.517 119.343V119.336C138.517 117.06 139.816 115.501 141.819 115.501C143.821 115.501 145.038 116.991 145.038 119.192V119.657H139.734C139.768 121.182 140.609 122.07 141.921 122.07C142.919 122.07 143.534 121.599 143.733 121.154L143.76 121.093H144.949L144.936 121.147C144.683 122.145 143.63 123.13 141.894 123.13ZM141.812 116.561C140.718 116.561 139.884 117.306 139.754 118.707H143.828C143.705 117.251 142.899 116.561 141.812 116.561ZM149.605 123.13C147.738 123.13 146.515 121.619 146.515 119.322V119.309C146.515 116.998 147.732 115.501 149.605 115.501C150.616 115.501 151.498 116.007 151.902 116.793H152.011V112.705H153.2V123H152.011V121.824H151.902C151.45 122.645 150.63 123.13 149.605 123.13ZM149.878 122.077C151.218 122.077 152.038 121.024 152.038 119.322V119.309C152.038 117.606 151.218 116.554 149.878 116.554C148.531 116.554 147.732 117.593 147.732 119.309V119.322C147.732 121.038 148.531 122.077 149.878 122.077ZM156.112 114.209C155.661 114.209 155.292 113.84 155.292 113.389C155.292 112.937 155.661 112.568 156.112 112.568C156.564 112.568 156.933 112.937 156.933 113.389C156.933 113.84 156.564 114.209 156.112 114.209ZM155.511 123V115.631H156.7V123H155.511ZM161.561 123.055C160.043 123.055 159.407 122.494 159.407 121.086V116.615H158.245V115.631H159.407V113.724H160.638V115.631H162.251V116.615H160.638V120.785C160.638 121.653 160.939 122.002 161.704 122.002C161.916 122.002 162.032 121.995 162.251 121.975V122.986C162.019 123.027 161.793 123.055 161.561 123.055ZM164.657 114.209C164.206 114.209 163.837 113.84 163.837 113.389C163.837 112.937 164.206 112.568 164.657 112.568C165.109 112.568 165.478 112.937 165.478 113.389C165.478 113.84 165.109 114.209 164.657 114.209ZM164.056 123V115.631H165.245V123H164.056ZM167.487 123V115.631H168.677V116.738H168.786C169.155 115.959 169.846 115.501 170.933 115.501C172.587 115.501 173.51 116.479 173.51 118.229V123H172.32V118.516C172.32 117.189 171.774 116.554 170.598 116.554C169.422 116.554 168.677 117.347 168.677 118.639V123H167.487ZM178.698 125.598C176.921 125.598 175.786 124.798 175.602 123.588L175.615 123.581H176.846L176.853 123.588C176.983 124.148 177.639 124.545 178.698 124.545C180.018 124.545 180.804 123.923 180.804 122.836V121.346H180.694C180.23 122.159 179.396 122.617 178.384 122.617C176.477 122.617 175.294 121.141 175.294 119.076V119.062C175.294 116.998 176.484 115.501 178.411 115.501C179.45 115.501 180.257 116.014 180.708 116.848H180.79V115.631H181.98V122.897C181.98 124.545 180.708 125.598 178.698 125.598ZM178.644 121.564C180.011 121.564 180.831 120.539 180.831 119.076V119.062C180.831 117.6 180.004 116.554 178.644 116.554C177.277 116.554 176.511 117.6 176.511 119.062V119.076C176.511 120.539 177.277 121.564 178.644 121.564Z"
              fill="#525266"
            />
            <path d="M95.4001 128H93.5334V150H95.4001V128Z" fill="#BEBECC" />
          </g>
        </g>
        <defs>
          <filter
            id="filter0_d_5956_60010"
            x="-20"
            y="-15"
            width="320"
            height="271"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_60010" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_60010" result="shape" />
          </filter>
          <filter
            id="filter1_d_5956_60010"
            x="-7"
            y="34"
            width="294"
            height="289.598"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="7.5" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0.48 0 0 0 0 0.52 0 0 0 0 0.6 0 0 0 0.25 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_60010" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_60010" result="shape" />
          </filter>
          <linearGradient
            id="paint0_linear_5956_60010"
            x1="0.999995"
            y1="3.21649e-06"
            x2="164.744"
            y2="254.731"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor="white" stopOpacity="0" />
            <stop offset="0.732193" stopColor="white" />
          </linearGradient>
          <clipPath id="clip0_5956_60010">
            <rect width="280" height="180" fill="white" />
          </clipPath>
        </defs>
      </svg>
    );
  }

  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="280" height="180" viewBox="0 0 280 180" fill="none">
      <g clipPath="url(#clip0_5956_94496)">
        <mask
          id="mask0_5956_94496"
          style={{
            maskType: 'luminance',
          }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="280"
          height="180"
        >
          <path
            d="M0 12C0 5.37258 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V168C280 174.627 274.627 180 268 180H12C5.37259 180 0 174.627 0 168V12Z"
            fill="white"
          />
        </mask>
        <g mask="url(#mask0_5956_94496)">
          <g filter="url(#filter0_d_5956_94496)">
            <path d="M280 0H0V36H280V0Z" fill="#23232B" />
            <path
              d="M21.1887 20.1146L22.6027 18.7006L26.6 22.6979L25.186 24.1119L21.1887 20.1146ZM23.6667 16.6666C24.9533 16.6666 26 15.6199 26 14.3333C26 13.9466 25.8933 13.5866 25.7267 13.2666L23.9267 15.0666L22.9333 14.0733L24.7333 12.2733C24.4133 12.1066 24.0533 11.9999 23.6667 11.9999C22.38 11.9999 21.3333 13.0466 21.3333 14.3333C21.3333 14.6066 21.3867 14.8666 21.4733 15.1066L20.24 16.3399L19.0533 15.1533L19.5267 14.6799L18.5867 13.7399L20 12.3266C19.625 11.9521 19.1167 11.7417 18.5867 11.7417C18.0567 11.7417 17.5483 11.9521 17.1733 12.3266L14.8133 14.6866L15.7533 15.6266H13.8733L13.4 16.0999L15.76 18.4599L16.2333 17.9866V16.0999L17.1733 17.0399L17.6467 16.5666L18.8333 17.7533L13.8933 22.6933L15.3067 24.1066L22.8933 16.5266C23.1333 16.6133 23.3933 16.6666 23.6667 16.6666Z"
              fill="#828299"
            />
            <path
              d="M33.2168 23V13.1357H36.915C39.8477 13.1357 41.5566 14.9268 41.5566 18.0166V18.0303C41.5566 21.1885 39.8682 23 36.915 23H33.2168ZM34.9805 21.5166H36.6826C38.6445 21.5166 39.7588 20.2725 39.7588 18.0576V18.0439C39.7588 15.877 38.6172 14.6191 36.6826 14.6191H34.9805V21.5166ZM46.6016 23.1504C44.3799 23.1504 43.0332 21.6602 43.0332 19.2812V19.2744C43.0332 16.9229 44.3936 15.3848 46.5195 15.3848C48.6455 15.3848 49.958 16.875 49.958 19.1309V19.6914H44.7354C44.7559 21.0312 45.4805 21.8105 46.6357 21.8105C47.5586 21.8105 48.085 21.3457 48.249 21.0039L48.2695 20.9561H49.8896L49.8691 21.0176C49.6299 21.9814 48.6318 23.1504 46.6016 23.1504ZM46.54 16.7178C45.5898 16.7178 44.8789 17.3604 44.749 18.5498H48.2969C48.1807 17.3262 47.4902 16.7178 46.54 16.7178ZM53.4922 23L50.833 15.5283H52.6514L54.3809 21.3389H54.4971L56.2129 15.5283H58.0039L55.3584 23H53.4922ZM62.3379 23.1504C60.1162 23.1504 58.7695 21.6602 58.7695 19.2812V19.2744C58.7695 16.9229 60.1299 15.3848 62.2559 15.3848C64.3818 15.3848 65.6943 16.875 65.6943 19.1309V19.6914H60.4717C60.4922 21.0312 61.2168 21.8105 62.3721 21.8105C63.2949 21.8105 63.8213 21.3457 63.9854 21.0039L64.0059 20.9561H65.626L65.6055 21.0176C65.3662 21.9814 64.3682 23.1504 62.3379 23.1504ZM62.2764 16.7178C61.3262 16.7178 60.6152 17.3604 60.4854 18.5498H64.0332C63.917 17.3262 63.2266 16.7178 62.2764 16.7178ZM67.4648 23V12.6367H69.167V23H67.4648ZM74.5469 23.1504C72.3047 23.1504 70.9512 21.6875 70.9512 19.2676V19.2539C70.9512 16.8545 72.3252 15.3848 74.5469 15.3848C76.7754 15.3848 78.1426 16.8477 78.1426 19.2539V19.2676C78.1426 21.6875 76.7822 23.1504 74.5469 23.1504ZM74.5469 21.7695C75.7295 21.7695 76.3994 20.8467 76.3994 19.2744V19.2607C76.3994 17.6885 75.7227 16.7588 74.5469 16.7588C73.3643 16.7588 72.6875 17.6885 72.6875 19.2607V19.2744C72.6875 20.8467 73.3643 21.7695 74.5469 21.7695ZM79.8516 25.4814V15.5283H81.5537V16.6973H81.6699C82.0801 15.8838 82.8936 15.4053 83.9395 15.4053C85.8125 15.4053 87.0088 16.8955 87.0088 19.2607V19.2744C87.0088 21.6533 85.833 23.123 83.9395 23.123C82.9141 23.123 82.0596 22.6172 81.6699 21.8105H81.5537V25.4814H79.8516ZM83.4062 21.6875C84.5684 21.6875 85.2725 20.7715 85.2725 19.2744V19.2607C85.2725 17.7568 84.5684 16.8408 83.4062 16.8408C82.251 16.8408 81.5332 17.7568 81.5332 19.2539V19.2676C81.5332 20.7646 82.251 21.6875 83.4062 21.6875ZM88.7246 23V15.5283H90.4268V16.6904H90.543C90.8643 15.8564 91.6162 15.3848 92.5938 15.3848C93.6055 15.3848 94.3438 15.9043 94.665 16.7314H94.7812C95.1436 15.918 96.0049 15.3848 97.0439 15.3848C98.5479 15.3848 99.4502 16.3076 99.4502 17.8594V23H97.748V18.2764C97.748 17.3057 97.3037 16.8135 96.3945 16.8135C95.5059 16.8135 94.9316 17.4766 94.9316 18.3311V23H93.2295V18.1533C93.2295 17.3262 92.7168 16.8135 91.8828 16.8135C91.042 16.8135 90.4268 17.5244 90.4268 18.4541V23H88.7246ZM104.666 23.1504C102.444 23.1504 101.098 21.6602 101.098 19.2812V19.2744C101.098 16.9229 102.458 15.3848 104.584 15.3848C106.71 15.3848 108.022 16.875 108.022 19.1309V19.6914H102.8C102.82 21.0312 103.545 21.8105 104.7 21.8105C105.623 21.8105 106.149 21.3457 106.313 21.0039L106.334 20.9561H107.954L107.934 21.0176C107.694 21.9814 106.696 23.1504 104.666 23.1504ZM104.604 16.7178C103.654 16.7178 102.943 17.3604 102.813 18.5498H106.361C106.245 17.3262 105.555 16.7178 104.604 16.7178ZM109.725 23V15.5283H111.427V16.6699H111.543C111.898 15.8701 112.616 15.3848 113.696 15.3848C115.364 15.3848 116.273 16.3896 116.273 18.167V23H114.571V18.5635C114.571 17.4014 114.1 16.8135 113.067 16.8135C112.056 16.8135 111.427 17.5244 111.427 18.6455V23H109.725ZM121.223 23.0342C119.507 23.0342 118.803 22.46 118.803 21.0176V16.8477H117.641V15.5283H118.803V13.6963H120.532V15.5283H122.111V16.8477H120.532V20.6143C120.532 21.3594 120.826 21.6738 121.537 21.6738C121.776 21.6738 121.906 21.667 122.111 21.6465V22.959C121.865 23.0068 121.551 23.0342 121.223 23.0342Z"
              fill="#828299"
            />
            <mask
              id="mask1_5956_94496"
              style={{
                maskType: 'luminance',
              }}
              maskUnits="userSpaceOnUse"
              x="0"
              y="36"
              width="280"
              height="195"
            >
              <path d="M280 36H0V231H280V36Z" fill="white" />
            </mask>
            <g mask="url(#mask1_5956_94496)">
              <path d="M280 36H0V231H280V36Z" fill="#23232B" />
              <g filter="url(#filter1_d_5956_94496)">
                <path d="M8 52C8 47.5817 11.5817 44 16 44H264C268.418 44 272 47.5817 272 52V68H8V52Z" fill="#23232B" />
                <path
                  d="M24 60C26.2091 60 28 58.2091 28 56C28 53.7909 26.2091 52 24 52C21.7909 52 20 53.7909 20 56C20 58.2091 21.7909 60 24 60Z"
                  fill="#3D3D4D"
                />
                <path
                  d="M38 60C40.2091 60 42 58.2091 42 56C42 53.7909 40.2091 52 38 52C35.7909 52 34 53.7909 34 56C34 58.2091 35.7909 60 38 60Z"
                  fill="#3D3D4D"
                />
                <path
                  d="M52 60C54.2091 60 56 58.2091 56 56C56 53.7909 54.2091 52 52 52C49.7909 52 48 53.7909 48 56C48 58.2091 49.7909 60 52 60Z"
                  fill="#3D3D4D"
                />
                <path d="M8 68H272V219C272 225.627 266.627 231 260 231H8V68Z" fill="#23232B" />
                <path
                  d="M16 84C16 79.5817 19.5817 76 24 76H48C52.4183 76 56 79.5817 56 84V108C56 112.418 52.4183 116 48 116H24C19.5817 116 16 112.418 16 108V84Z"
                  fill="#292933"
                />
                <path
                  d="M36 95.9999C38.9467 95.9999 41.3333 93.6133 41.3333 90.6666C41.3333 87.7199 38.9467 85.3333 36 85.3333C33.0533 85.3333 30.6667 87.7199 30.6667 90.6666C30.6667 93.6133 33.0533 95.9999 36 95.9999ZM36 98.6666C32.44 98.6666 25.3333 100.453 25.3333 104V106.667H46.6667V104C46.6667 100.453 39.56 98.6666 36 98.6666Z"
                  fill="#3D3D4D"
                />
                <path
                  d="M75.3018 91L72.6152 81.1357H73.9004L75.8623 89.1543H75.9443L78.1523 81.1357H79.3965L81.6045 89.1543H81.6865L83.6484 81.1357H84.9336L82.2471 91H81.085L78.8154 83.2139H78.7334L76.4639 91H75.3018ZM88.9805 91.1299C86.875 91.1299 85.6035 89.6533 85.6035 87.3428V87.3359C85.6035 85.0596 86.9023 83.501 88.9053 83.501C90.9082 83.501 92.125 84.9912 92.125 87.1924V87.6572H86.8203C86.8545 89.1816 87.6953 90.0703 89.0078 90.0703C90.0059 90.0703 90.6211 89.5986 90.8193 89.1543L90.8467 89.0928H92.0361L92.0225 89.1475C91.7695 90.1455 90.7168 91.1299 88.9805 91.1299ZM88.8984 84.5605C87.8047 84.5605 86.9707 85.3057 86.8408 86.707H90.915C90.792 85.251 89.9854 84.5605 88.8984 84.5605ZM94.0391 91V80.7051H95.2285V91H94.0391ZM100.526 91.1299C98.4619 91.1299 97.1426 89.6328 97.1426 87.2949V87.2812C97.1426 84.9912 98.4551 83.501 100.52 83.501C102.311 83.501 103.384 84.5332 103.603 85.8457L103.609 85.8867H102.427L102.42 85.8662C102.235 85.1416 101.579 84.5537 100.52 84.5537C99.1934 84.5537 98.3594 85.6201 98.3594 87.2812V87.2949C98.3594 88.9902 99.207 90.0771 100.52 90.0771C101.511 90.0771 102.14 89.6396 102.413 88.8193L102.427 88.7783L103.603 88.7715L103.589 88.8467C103.288 90.1797 102.297 91.1299 100.526 91.1299ZM108.374 91.1299C106.275 91.1299 104.977 89.6807 104.977 87.3223V87.3086C104.977 84.9434 106.275 83.501 108.374 83.501C110.473 83.501 111.771 84.9434 111.771 87.3086V87.3223C111.771 89.6807 110.473 91.1299 108.374 91.1299ZM108.374 90.0771C109.769 90.0771 110.555 89.0586 110.555 87.3223V87.3086C110.555 85.5654 109.769 84.5537 108.374 84.5537C106.979 84.5537 106.193 85.5654 106.193 87.3086V87.3223C106.193 89.0586 106.979 90.0771 108.374 90.0771ZM113.617 91V83.6309H114.807V84.752H114.916C115.244 83.959 115.941 83.501 116.905 83.501C117.903 83.501 118.601 84.0273 118.942 84.793H119.052C119.448 84.0137 120.289 83.501 121.308 83.501C122.812 83.501 123.652 84.3623 123.652 85.9072V91H122.463V86.1807C122.463 85.0938 121.964 84.5537 120.925 84.5537C119.899 84.5537 119.223 85.3262 119.223 86.2627V91H118.033V85.9961C118.033 85.1211 117.432 84.5537 116.502 84.5537C115.538 84.5537 114.807 85.3945 114.807 86.4336V91H113.617ZM128.807 91.1299C126.701 91.1299 125.43 89.6533 125.43 87.3428V87.3359C125.43 85.0596 126.729 83.501 128.731 83.501C130.734 83.501 131.951 84.9912 131.951 87.1924V87.6572H126.646C126.681 89.1816 127.521 90.0703 128.834 90.0703C129.832 90.0703 130.447 89.5986 130.646 89.1543L130.673 89.0928H131.862L131.849 89.1475C131.596 90.1455 130.543 91.1299 128.807 91.1299ZM128.725 84.5605C127.631 84.5605 126.797 85.3057 126.667 86.707H130.741C130.618 85.251 129.812 84.5605 128.725 84.5605ZM137.734 91V83.6309H138.924V84.752H139.033C139.361 83.959 140.059 83.501 141.022 83.501C142.021 83.501 142.718 84.0273 143.06 84.793H143.169C143.565 84.0137 144.406 83.501 145.425 83.501C146.929 83.501 147.77 84.3623 147.77 85.9072V91H146.58V86.1807C146.58 85.0938 146.081 84.5537 145.042 84.5537C144.017 84.5537 143.34 85.3262 143.34 86.2627V91H142.15V85.9961C142.15 85.1211 141.549 84.5537 140.619 84.5537C139.655 84.5537 138.924 85.3945 138.924 86.4336V91H137.734ZM152.924 91.1299C150.818 91.1299 149.547 89.6533 149.547 87.3428V87.3359C149.547 85.0596 150.846 83.501 152.849 83.501C154.852 83.501 156.068 84.9912 156.068 87.1924V87.6572H150.764C150.798 89.1816 151.639 90.0703 152.951 90.0703C153.949 90.0703 154.564 89.5986 154.763 89.1543L154.79 89.0928H155.979L155.966 89.1475C155.713 90.1455 154.66 91.1299 152.924 91.1299ZM152.842 84.5605C151.748 84.5605 150.914 85.3057 150.784 86.707H154.858C154.735 85.251 153.929 84.5605 152.842 84.5605ZM160.443 91.1299C158.803 91.1299 157.675 90.3369 157.538 89.1201H158.755C158.953 89.7354 159.541 90.1387 160.484 90.1387C161.476 90.1387 162.18 89.667 162.18 88.9971V88.9834C162.18 88.4844 161.804 88.1357 160.895 87.917L159.753 87.6436C158.372 87.3154 157.75 86.7139 157.75 85.6543V85.6475C157.75 84.4238 158.926 83.501 160.491 83.501C162.036 83.501 163.109 84.2734 163.273 85.4766H162.104C161.947 84.8955 161.373 84.4922 160.484 84.4922C159.609 84.4922 158.967 84.9434 158.967 85.5928V85.6064C158.967 86.1055 159.336 86.4199 160.204 86.6318L161.339 86.9053C162.727 87.2402 163.396 87.8418 163.396 88.8945V88.9082C163.396 90.2207 162.118 91.1299 160.443 91.1299ZM167.635 91.1299C165.994 91.1299 164.866 90.3369 164.729 89.1201H165.946C166.145 89.7354 166.732 90.1387 167.676 90.1387C168.667 90.1387 169.371 89.667 169.371 88.9971V88.9834C169.371 88.4844 168.995 88.1357 168.086 87.917L166.944 87.6436C165.563 87.3154 164.941 86.7139 164.941 85.6543V85.6475C164.941 84.4238 166.117 83.501 167.683 83.501C169.228 83.501 170.301 84.2734 170.465 85.4766H169.296C169.139 84.8955 168.564 84.4922 167.676 84.4922C166.801 84.4922 166.158 84.9434 166.158 85.5928V85.6064C166.158 86.1055 166.527 86.4199 167.396 86.6318L168.53 86.9053C169.918 87.2402 170.588 87.8418 170.588 88.8945V88.9082C170.588 90.2207 169.31 91.1299 167.635 91.1299ZM174.457 91.1299C173.056 91.1299 171.996 90.2822 171.996 88.9424V88.9287C171.996 87.6162 172.967 86.8574 174.683 86.7549L176.795 86.625V85.9551C176.795 85.0459 176.241 84.5537 175.141 84.5537C174.259 84.5537 173.678 84.8818 173.486 85.4561L173.479 85.4766H172.29L172.297 85.4355C172.488 84.2803 173.609 83.501 175.182 83.501C176.979 83.501 177.984 84.4238 177.984 85.9551V91H176.795V89.9131H176.686C176.221 90.6992 175.448 91.1299 174.457 91.1299ZM173.213 88.915C173.213 89.6602 173.849 90.0977 174.703 90.0977C175.913 90.0977 176.795 89.3047 176.795 88.252V87.582L174.826 87.7051C173.705 87.7734 173.213 88.1699 173.213 88.9014V88.915ZM183.193 93.5977C181.416 93.5977 180.281 92.7979 180.097 91.5879L180.11 91.5811H181.341L181.348 91.5879C181.478 92.1484 182.134 92.5449 183.193 92.5449C184.513 92.5449 185.299 91.9229 185.299 90.8359V89.3457H185.189C184.725 90.1592 183.891 90.6172 182.879 90.6172C180.972 90.6172 179.789 89.1406 179.789 87.0762V87.0625C179.789 84.998 180.979 83.501 182.906 83.501C183.945 83.501 184.752 84.0137 185.203 84.8477H185.285V83.6309H186.475V90.8975C186.475 92.5449 185.203 93.5977 183.193 93.5977ZM183.139 89.5645C184.506 89.5645 185.326 88.5391 185.326 87.0762V87.0625C185.326 85.5996 184.499 84.5537 183.139 84.5537C181.771 84.5537 181.006 85.5996 181.006 87.0625V87.0762C181.006 88.5391 181.771 89.5645 183.139 89.5645ZM191.697 91.1299C189.592 91.1299 188.32 89.6533 188.32 87.3428V87.3359C188.32 85.0596 189.619 83.501 191.622 83.501C193.625 83.501 194.842 84.9912 194.842 87.1924V87.6572H189.537C189.571 89.1816 190.412 90.0703 191.725 90.0703C192.723 90.0703 193.338 89.5986 193.536 89.1543L193.563 89.0928H194.753L194.739 89.1475C194.486 90.1455 193.434 91.1299 191.697 91.1299ZM191.615 84.5605C190.521 84.5605 189.688 85.3057 189.558 86.707H193.632C193.509 85.251 192.702 84.5605 191.615 84.5605Z"
                  fill="#3D3D4D"
                />
                <path
                  d="M75.5752 111.13C73.9004 111.13 73.0391 110.146 73.0391 108.402V103.631H74.2285V108.115C74.2285 109.441 74.707 110.077 75.8828 110.077C77.1816 110.077 77.8721 109.284 77.8721 107.992V103.631H79.0615V111H77.8721V109.899H77.7627C77.4004 110.686 76.6553 111.13 75.5752 111.13ZM83.8125 111.13C82.1719 111.13 81.0439 110.337 80.9072 109.12H82.124C82.3223 109.735 82.9102 110.139 83.8535 110.139C84.8447 110.139 85.5488 109.667 85.5488 108.997V108.983C85.5488 108.484 85.1729 108.136 84.2637 107.917L83.1221 107.644C81.7412 107.315 81.1191 106.714 81.1191 105.654V105.647C81.1191 104.424 82.2949 103.501 83.8604 103.501C85.4053 103.501 86.4785 104.273 86.6426 105.477H85.4736C85.3164 104.896 84.7422 104.492 83.8535 104.492C82.9785 104.492 82.3359 104.943 82.3359 105.593V105.606C82.3359 106.105 82.7051 106.42 83.5732 106.632L84.708 106.905C86.0957 107.24 86.7656 107.842 86.7656 108.895V108.908C86.7656 110.221 85.4873 111.13 83.8125 111.13ZM91.6191 111.13C89.5137 111.13 88.2422 109.653 88.2422 107.343V107.336C88.2422 105.06 89.541 103.501 91.5439 103.501C93.5469 103.501 94.7637 104.991 94.7637 107.192V107.657H89.459C89.4932 109.182 90.334 110.07 91.6465 110.07C92.6445 110.07 93.2598 109.599 93.458 109.154L93.4854 109.093H94.6748L94.6611 109.147C94.4082 110.146 93.3555 111.13 91.6191 111.13ZM91.5371 104.561C90.4434 104.561 89.6094 105.306 89.4795 106.707H93.5537C93.4307 105.251 92.624 104.561 91.5371 104.561ZM96.6094 111V103.631H97.7988V104.725H97.9082C98.1885 103.952 98.8789 103.501 99.877 103.501C100.103 103.501 100.355 103.528 100.472 103.549V104.704C100.226 104.663 100 104.636 99.7402 104.636C98.6055 104.636 97.7988 105.354 97.7988 106.434V111H96.6094ZM107.574 112.6C104.047 112.6 101.812 110.385 101.812 106.898V106.885C101.812 103.508 104.108 101.19 107.458 101.19C110.691 101.19 112.94 103.255 112.94 106.215V106.229C112.94 108.45 111.942 109.865 110.37 109.865C109.584 109.865 108.982 109.421 108.873 108.758L108.866 108.717H108.757C108.463 109.414 107.848 109.804 107.048 109.804C105.626 109.804 104.669 108.635 104.669 106.905V106.892C104.669 105.237 105.646 104.075 107.048 104.075C107.766 104.075 108.381 104.444 108.647 105.039H108.757V104.205H109.789V108.218C109.789 108.696 110.069 108.977 110.562 108.977C111.423 108.977 111.977 107.89 111.977 106.215V106.201C111.977 103.74 110.104 102.052 107.369 102.052C104.696 102.052 102.775 104.089 102.775 106.926V106.939C102.775 109.852 104.662 111.731 107.588 111.731C108.524 111.731 109.447 111.602 109.878 111.403V112.265C109.263 112.477 108.436 112.6 107.574 112.6ZM107.205 108.84C108.142 108.84 108.743 108.095 108.743 106.933V106.919C108.743 105.757 108.148 105.019 107.219 105.019C106.303 105.019 105.763 105.729 105.763 106.919V106.933C105.763 108.115 106.31 108.84 107.205 108.84ZM117.808 111.13C115.743 111.13 114.424 109.633 114.424 107.295V107.281C114.424 104.991 115.736 103.501 117.801 103.501C119.592 103.501 120.665 104.533 120.884 105.846L120.891 105.887H119.708L119.701 105.866C119.517 105.142 118.86 104.554 117.801 104.554C116.475 104.554 115.641 105.62 115.641 107.281V107.295C115.641 108.99 116.488 110.077 117.801 110.077C118.792 110.077 119.421 109.64 119.694 108.819L119.708 108.778L120.884 108.771L120.87 108.847C120.569 110.18 119.578 111.13 117.808 111.13ZM125.655 111.13C123.557 111.13 122.258 109.681 122.258 107.322V107.309C122.258 104.943 123.557 103.501 125.655 103.501C127.754 103.501 129.053 104.943 129.053 107.309V107.322C129.053 109.681 127.754 111.13 125.655 111.13ZM125.655 110.077C127.05 110.077 127.836 109.059 127.836 107.322V107.309C127.836 105.565 127.05 104.554 125.655 104.554C124.261 104.554 123.475 105.565 123.475 107.309V107.322C123.475 109.059 124.261 110.077 125.655 110.077ZM130.898 111V103.631H132.088V104.752H132.197C132.525 103.959 133.223 103.501 134.187 103.501C135.185 103.501 135.882 104.027 136.224 104.793H136.333C136.729 104.014 137.57 103.501 138.589 103.501C140.093 103.501 140.934 104.362 140.934 105.907V111H139.744V106.181C139.744 105.094 139.245 104.554 138.206 104.554C137.181 104.554 136.504 105.326 136.504 106.263V111H135.314V105.996C135.314 105.121 134.713 104.554 133.783 104.554C132.819 104.554 132.088 105.395 132.088 106.434V111H130.898ZM143.08 113.461V103.631H144.27V104.807H144.379C144.83 103.986 145.65 103.501 146.676 103.501C148.542 103.501 149.766 105.012 149.766 107.309V107.322C149.766 109.633 148.549 111.13 146.676 111.13C145.664 111.13 144.782 110.624 144.379 109.838H144.27V113.461H143.08ZM146.402 110.077C147.749 110.077 148.549 109.038 148.549 107.322V107.309C148.549 105.593 147.749 104.554 146.402 104.554C145.062 104.554 144.242 105.606 144.242 107.309V107.322C144.242 109.024 145.062 110.077 146.402 110.077ZM153.648 111.13C152.247 111.13 151.188 110.282 151.188 108.942V108.929C151.188 107.616 152.158 106.857 153.874 106.755L155.986 106.625V105.955C155.986 105.046 155.433 104.554 154.332 104.554C153.45 104.554 152.869 104.882 152.678 105.456L152.671 105.477H151.481L151.488 105.436C151.68 104.28 152.801 103.501 154.373 103.501C156.171 103.501 157.176 104.424 157.176 105.955V111H155.986V109.913H155.877C155.412 110.699 154.64 111.13 153.648 111.13ZM152.404 108.915C152.404 109.66 153.04 110.098 153.895 110.098C155.104 110.098 155.986 109.305 155.986 108.252V107.582L154.018 107.705C152.896 107.773 152.404 108.17 152.404 108.901V108.915ZM159.35 111V103.631H160.539V104.738H160.648C161.018 103.959 161.708 103.501 162.795 103.501C164.449 103.501 165.372 104.479 165.372 106.229V111H164.183V106.516C164.183 105.189 163.636 104.554 162.46 104.554C161.284 104.554 160.539 105.347 160.539 106.639V111H159.35ZM167.881 113.584C167.724 113.584 167.519 113.57 167.354 113.543V112.565C167.498 112.593 167.683 112.6 167.847 112.6C168.523 112.6 168.934 112.292 169.2 111.444L169.337 111.007L166.609 103.631H167.881L169.904 109.694H170.014L172.03 103.631H173.281L170.403 111.451C169.795 113.105 169.187 113.584 167.881 113.584ZM174.799 111.068C174.313 111.068 173.91 110.665 173.91 110.18C173.91 109.688 174.313 109.291 174.799 109.291C175.291 109.291 175.688 109.688 175.688 110.18C175.688 110.665 175.291 111.068 174.799 111.068ZM180.726 111.13C178.661 111.13 177.342 109.633 177.342 107.295V107.281C177.342 104.991 178.654 103.501 180.719 103.501C182.51 103.501 183.583 104.533 183.802 105.846L183.809 105.887H182.626L182.619 105.866C182.435 105.142 181.778 104.554 180.719 104.554C179.393 104.554 178.559 105.62 178.559 107.281V107.295C178.559 108.99 179.406 110.077 180.719 110.077C181.71 110.077 182.339 109.64 182.612 108.819L182.626 108.778L183.802 108.771L183.788 108.847C183.487 110.18 182.496 111.13 180.726 111.13ZM188.573 111.13C186.475 111.13 185.176 109.681 185.176 107.322V107.309C185.176 104.943 186.475 103.501 188.573 103.501C190.672 103.501 191.971 104.943 191.971 107.309V107.322C191.971 109.681 190.672 111.13 188.573 111.13ZM188.573 110.077C189.968 110.077 190.754 109.059 190.754 107.322V107.309C190.754 105.565 189.968 104.554 188.573 104.554C187.179 104.554 186.393 105.565 186.393 107.309V107.322C186.393 109.059 187.179 110.077 188.573 110.077ZM193.816 111V103.631H195.006V104.752H195.115C195.443 103.959 196.141 103.501 197.104 103.501C198.103 103.501 198.8 104.027 199.142 104.793H199.251C199.647 104.014 200.488 103.501 201.507 103.501C203.011 103.501 203.852 104.362 203.852 105.907V111H202.662V106.181C202.662 105.094 202.163 104.554 201.124 104.554C200.099 104.554 199.422 105.326 199.422 106.263V111H198.232V105.996C198.232 105.121 197.631 104.554 196.701 104.554C195.737 104.554 195.006 105.395 195.006 106.434V111H193.816Z"
                  fill="#3D3D4D"
                />
                <path
                  d="M16 136C16 129.373 21.3726 124 28 124H252C258.627 124 264 129.373 264 136V231H16V136Z"
                  fill="#23232B"
                />
                <path
                  d="M25.2578 145V135.136H26.4883V139.401H31.9023V135.136H33.1328V145H31.9023V140.509H26.4883V145H25.2578ZM38.5059 145.13C36.4004 145.13 35.1289 143.653 35.1289 141.343V141.336C35.1289 139.06 36.4277 137.501 38.4307 137.501C40.4336 137.501 41.6504 138.991 41.6504 141.192V141.657H36.3457C36.3799 143.182 37.2207 144.07 38.5332 144.07C39.5312 144.07 40.1465 143.599 40.3447 143.154L40.3721 143.093H41.5615L41.5479 143.147C41.2949 144.146 40.2422 145.13 38.5059 145.13ZM38.4238 138.561C37.3301 138.561 36.4961 139.306 36.3662 140.707H40.4404C40.3174 139.251 39.5107 138.561 38.4238 138.561ZM43.5645 145V134.705H44.7539V145H43.5645ZM47.1055 145V134.705H48.2949V145H47.1055ZM53.6064 145.13C51.5078 145.13 50.209 143.681 50.209 141.322V141.309C50.209 138.943 51.5078 137.501 53.6064 137.501C55.7051 137.501 57.0039 138.943 57.0039 141.309V141.322C57.0039 143.681 55.7051 145.13 53.6064 145.13ZM53.6064 144.077C55.001 144.077 55.7871 143.059 55.7871 141.322V141.309C55.7871 139.565 55.001 138.554 53.6064 138.554C52.2119 138.554 51.4258 139.565 51.4258 141.309V141.322C51.4258 143.059 52.2119 144.077 53.6064 144.077ZM62.1514 145L65.7881 135.136H67.0049L70.6416 145H69.3496L68.3584 142.177H64.4346L63.4434 145H62.1514ZM66.3418 136.729L64.7969 141.131H67.9961L66.4512 136.729H66.3418ZM72.2891 145V134.705H73.4785V145H72.2891ZM77.7852 145.13C76.3838 145.13 75.3242 144.282 75.3242 142.942V142.929C75.3242 141.616 76.2949 140.857 78.0107 140.755L80.123 140.625V139.955C80.123 139.046 79.5693 138.554 78.4688 138.554C77.5869 138.554 77.0059 138.882 76.8145 139.456L76.8076 139.477H75.6182L75.625 139.436C75.8164 138.28 76.9375 137.501 78.5098 137.501C80.3076 137.501 81.3125 138.424 81.3125 139.955V145H80.123V143.913H80.0137C79.5488 144.699 78.7764 145.13 77.7852 145.13ZM76.541 142.915C76.541 143.66 77.1768 144.098 78.0312 144.098C79.2412 144.098 80.123 143.305 80.123 142.252V141.582L78.1543 141.705C77.0332 141.773 76.541 142.17 76.541 142.901V142.915ZM83.4863 145V137.631H84.6758V138.738H84.7852C85.1543 137.959 85.8447 137.501 86.9316 137.501C88.5859 137.501 89.5088 138.479 89.5088 140.229V145H88.3193V140.516C88.3193 139.189 87.7725 138.554 86.5967 138.554C85.4209 138.554 84.6758 139.347 84.6758 140.639V145H83.4863ZM98.3135 145V136.243H95.1348V135.136H102.723V136.243H99.5439V145H98.3135ZM105.915 145.13C104.24 145.13 103.379 144.146 103.379 142.402V137.631H104.568V142.115C104.568 143.441 105.047 144.077 106.223 144.077C107.521 144.077 108.212 143.284 108.212 141.992V137.631H109.401V145H108.212V143.899H108.103C107.74 144.686 106.995 145.13 105.915 145.13ZM111.623 145V137.631H112.812V138.725H112.922C113.202 137.952 113.893 137.501 114.891 137.501C115.116 137.501 115.369 137.528 115.485 137.549V138.704C115.239 138.663 115.014 138.636 114.754 138.636C113.619 138.636 112.812 139.354 112.812 140.434V145H111.623ZM117.584 136.209C117.133 136.209 116.764 135.84 116.764 135.389C116.764 134.938 117.133 134.568 117.584 134.568C118.035 134.568 118.404 134.938 118.404 135.389C118.404 135.84 118.035 136.209 117.584 136.209ZM116.982 145V137.631H118.172V145H116.982ZM120.414 145V137.631H121.604V138.738H121.713C122.082 137.959 122.772 137.501 123.859 137.501C125.514 137.501 126.437 138.479 126.437 140.229V145H125.247V140.516C125.247 139.189 124.7 138.554 123.524 138.554C122.349 138.554 121.604 139.347 121.604 140.639V145H120.414ZM131.625 147.598C129.848 147.598 128.713 146.798 128.528 145.588L128.542 145.581H129.772L129.779 145.588C129.909 146.148 130.565 146.545 131.625 146.545C132.944 146.545 133.73 145.923 133.73 144.836V143.346H133.621C133.156 144.159 132.322 144.617 131.311 144.617C129.403 144.617 128.221 143.141 128.221 141.076V141.062C128.221 138.998 129.41 137.501 131.338 137.501C132.377 137.501 133.184 138.014 133.635 138.848H133.717V137.631H134.906V144.897C134.906 146.545 133.635 147.598 131.625 147.598ZM131.57 143.564C132.938 143.564 133.758 142.539 133.758 141.076V141.062C133.758 139.6 132.931 138.554 131.57 138.554C130.203 138.554 129.438 139.6 129.438 141.062V141.076C129.438 142.539 130.203 143.564 131.57 143.564ZM136.82 147.509L137.415 143.619H138.775L137.702 147.509H136.82ZM24.4717 173L28.1084 163.136H29.3252L32.9619 173H31.6699L30.6787 170.177H26.7549L25.7637 173H24.4717ZM28.6621 164.729L27.1172 169.131H30.3164L28.7715 164.729H28.6621ZM34.6094 173V162.705H35.7988V173H34.6094ZM40.1055 173.13C38.7041 173.13 37.6445 172.282 37.6445 170.942V170.929C37.6445 169.616 38.6152 168.857 40.3311 168.755L42.4434 168.625V167.955C42.4434 167.046 41.8896 166.554 40.7891 166.554C39.9072 166.554 39.3262 166.882 39.1348 167.456L39.1279 167.477H37.9385L37.9453 167.436C38.1367 166.28 39.2578 165.501 40.8301 165.501C42.6279 165.501 43.6328 166.424 43.6328 167.955V173H42.4434V171.913H42.334C41.8691 172.699 41.0967 173.13 40.1055 173.13ZM38.8613 170.915C38.8613 171.66 39.4971 172.098 40.3516 172.098C41.5615 172.098 42.4434 171.305 42.4434 170.252V169.582L40.4746 169.705C39.3535 169.773 38.8613 170.17 38.8613 170.901V170.915ZM45.8066 173V165.631H46.9961V166.738H47.1055C47.4746 165.959 48.165 165.501 49.252 165.501C50.9062 165.501 51.8291 166.479 51.8291 168.229V173H50.6396V168.516C50.6396 167.189 50.0928 166.554 48.917 166.554C47.7412 166.554 46.9961 167.347 46.9961 168.639V173H45.8066ZM59.9434 173.13C58.542 173.13 57.4824 172.282 57.4824 170.942V170.929C57.4824 169.616 58.4531 168.857 60.1689 168.755L62.2812 168.625V167.955C62.2812 167.046 61.7275 166.554 60.627 166.554C59.7451 166.554 59.1641 166.882 58.9727 167.456L58.9658 167.477H57.7764L57.7832 167.436C57.9746 166.28 59.0957 165.501 60.668 165.501C62.4658 165.501 63.4707 166.424 63.4707 167.955V173H62.2812V171.913H62.1719C61.707 172.699 60.9346 173.13 59.9434 173.13ZM58.6992 170.915C58.6992 171.66 59.335 172.098 60.1895 172.098C61.3994 172.098 62.2812 171.305 62.2812 170.252V169.582L60.3125 169.705C59.1914 169.773 58.6992 170.17 58.6992 170.901V170.915ZM65.7129 173V162.705H66.9023V173H65.7129ZM71.209 173.13C69.8076 173.13 68.748 172.282 68.748 170.942V170.929C68.748 169.616 69.7188 168.857 71.4346 168.755L73.5469 168.625V167.955C73.5469 167.046 72.9932 166.554 71.8926 166.554C71.0107 166.554 70.4297 166.882 70.2383 167.456L70.2314 167.477H69.042L69.0488 167.436C69.2402 166.28 70.3613 165.501 71.9336 165.501C73.7314 165.501 74.7363 166.424 74.7363 167.955V173H73.5469V171.913H73.4375C72.9727 172.699 72.2002 173.13 71.209 173.13ZM69.9648 170.915C69.9648 171.66 70.6006 172.098 71.4551 172.098C72.665 172.098 73.5469 171.305 73.5469 170.252V169.582L71.5781 169.705C70.457 169.773 69.9648 170.17 69.9648 170.901V170.915ZM76.9102 173V165.631H78.0996V166.738H78.209C78.5781 165.959 79.2686 165.501 80.3555 165.501C82.0098 165.501 82.9326 166.479 82.9326 168.229V173H81.7432V168.516C81.7432 167.189 81.1963 166.554 80.0205 166.554C78.8447 166.554 78.0996 167.347 78.0996 168.639V173H76.9102ZM86.0566 173.068C85.5713 173.068 85.168 172.665 85.168 172.18C85.168 171.688 85.5713 171.291 86.0566 171.291C86.5488 171.291 86.9453 171.688 86.9453 172.18C86.9453 172.665 86.5488 173.068 86.0566 173.068ZM91.5869 173.055C90.0693 173.055 89.4336 172.494 89.4336 171.086V166.615H88.2715V165.631H89.4336V163.724H90.6641V165.631H92.2773V166.615H90.6641V170.785C90.6641 171.653 90.9648 172.002 91.7305 172.002C91.9424 172.002 92.0586 171.995 92.2773 171.975V172.986C92.0449 173.027 91.8193 173.055 91.5869 173.055ZM96.5225 173.13C94.8477 173.13 93.9863 172.146 93.9863 170.402V165.631H95.1758V170.115C95.1758 171.441 95.6543 172.077 96.8301 172.077C98.1289 172.077 98.8193 171.284 98.8193 169.992V165.631H100.009V173H98.8193V171.899H98.71C98.3477 172.686 97.6025 173.13 96.5225 173.13ZM102.23 173V165.631H103.42V166.725H103.529C103.81 165.952 104.5 165.501 105.498 165.501C105.724 165.501 105.977 165.528 106.093 165.549V166.704C105.847 166.663 105.621 166.636 105.361 166.636C104.227 166.636 103.42 167.354 103.42 168.434V173H102.23ZM108.191 164.209C107.74 164.209 107.371 163.84 107.371 163.389C107.371 162.938 107.74 162.568 108.191 162.568C108.643 162.568 109.012 162.938 109.012 163.389C109.012 163.84 108.643 164.209 108.191 164.209ZM107.59 173V165.631H108.779V173H107.59ZM111.021 173V165.631H112.211V166.738H112.32C112.689 165.959 113.38 165.501 114.467 165.501C116.121 165.501 117.044 166.479 117.044 168.229V173H115.854V168.516C115.854 167.189 115.308 166.554 114.132 166.554C112.956 166.554 112.211 167.347 112.211 168.639V173H111.021ZM122.232 175.598C120.455 175.598 119.32 174.798 119.136 173.588L119.149 173.581H120.38L120.387 173.588C120.517 174.148 121.173 174.545 122.232 174.545C123.552 174.545 124.338 173.923 124.338 172.836V171.346H124.229C123.764 172.159 122.93 172.617 121.918 172.617C120.011 172.617 118.828 171.141 118.828 169.076V169.062C118.828 166.998 120.018 165.501 121.945 165.501C122.984 165.501 123.791 166.014 124.242 166.848H124.324V165.631H125.514V172.897C125.514 174.545 124.242 175.598 122.232 175.598ZM122.178 171.564C123.545 171.564 124.365 170.539 124.365 169.076V169.062C124.365 167.6 123.538 166.554 122.178 166.554C120.811 166.554 120.045 167.6 120.045 169.062V169.076C120.045 170.539 120.811 171.564 122.178 171.564ZM133.361 174.6C129.834 174.6 127.599 172.385 127.599 168.898V168.885C127.599 165.508 129.896 163.19 133.245 163.19C136.479 163.19 138.728 165.255 138.728 168.215V168.229C138.728 170.45 137.729 171.865 136.157 171.865C135.371 171.865 134.77 171.421 134.66 170.758L134.653 170.717H134.544C134.25 171.414 133.635 171.804 132.835 171.804C131.413 171.804 130.456 170.635 130.456 168.905V168.892C130.456 167.237 131.434 166.075 132.835 166.075C133.553 166.075 134.168 166.444 134.435 167.039H134.544V166.205H135.576V170.218C135.576 170.696 135.856 170.977 136.349 170.977C137.21 170.977 137.764 169.89 137.764 168.215V168.201C137.764 165.74 135.891 164.052 133.156 164.052C130.483 164.052 128.562 166.089 128.562 168.926V168.939C128.562 171.852 130.449 173.731 133.375 173.731C134.312 173.731 135.234 173.602 135.665 173.403V174.265C135.05 174.477 134.223 174.6 133.361 174.6ZM132.992 170.84C133.929 170.84 134.53 170.095 134.53 168.933V168.919C134.53 167.757 133.936 167.019 133.006 167.019C132.09 167.019 131.55 167.729 131.55 168.919V168.933C131.55 170.115 132.097 170.84 132.992 170.84ZM143.588 173.13C141.482 173.13 140.211 171.653 140.211 169.343V169.336C140.211 167.06 141.51 165.501 143.513 165.501C145.516 165.501 146.732 166.991 146.732 169.192V169.657H141.428C141.462 171.182 142.303 172.07 143.615 172.07C144.613 172.07 145.229 171.599 145.427 171.154L145.454 171.093H146.644L146.63 171.147C146.377 172.146 145.324 173.13 143.588 173.13ZM143.506 166.561C142.412 166.561 141.578 167.306 141.448 168.707H145.522C145.399 167.251 144.593 166.561 143.506 166.561ZM147.717 173L150.239 169.315L147.689 165.631H149.091L150.841 168.372H150.95L152.68 165.631H154.013L151.511 169.268L154.047 173H152.652L150.909 170.218H150.8L149.05 173H147.717ZM157.67 173.13C156.269 173.13 155.209 172.282 155.209 170.942V170.929C155.209 169.616 156.18 168.857 157.896 168.755L160.008 168.625V167.955C160.008 167.046 159.454 166.554 158.354 166.554C157.472 166.554 156.891 166.882 156.699 167.456L156.692 167.477H155.503L155.51 167.436C155.701 166.28 156.822 165.501 158.395 165.501C160.192 165.501 161.197 166.424 161.197 167.955V173H160.008V171.913H159.898C159.434 172.699 158.661 173.13 157.67 173.13ZM156.426 170.915C156.426 171.66 157.062 172.098 157.916 172.098C159.126 172.098 160.008 171.305 160.008 170.252V169.582L158.039 169.705C156.918 169.773 156.426 170.17 156.426 170.901V170.915ZM163.371 173V165.631H164.561V166.752H164.67C164.998 165.959 165.695 165.501 166.659 165.501C167.657 165.501 168.354 166.027 168.696 166.793H168.806C169.202 166.014 170.043 165.501 171.062 165.501C172.565 165.501 173.406 166.362 173.406 167.907V173H172.217V168.181C172.217 167.094 171.718 166.554 170.679 166.554C169.653 166.554 168.977 167.326 168.977 168.263V173H167.787V167.996C167.787 167.121 167.186 166.554 166.256 166.554C165.292 166.554 164.561 167.395 164.561 168.434V173H163.371ZM175.553 175.461V165.631H176.742V166.807H176.852C177.303 165.986 178.123 165.501 179.148 165.501C181.015 165.501 182.238 167.012 182.238 169.309V169.322C182.238 171.633 181.021 173.13 179.148 173.13C178.137 173.13 177.255 172.624 176.852 171.838H176.742V175.461H175.553ZM178.875 172.077C180.222 172.077 181.021 171.038 181.021 169.322V169.309C181.021 167.593 180.222 166.554 178.875 166.554C177.535 166.554 176.715 167.606 176.715 169.309V169.322C176.715 171.024 177.535 172.077 178.875 172.077ZM184.166 173V162.705H185.355V173H184.166ZM190.646 173.13C188.541 173.13 187.27 171.653 187.27 169.343V169.336C187.27 167.06 188.568 165.501 190.571 165.501C192.574 165.501 193.791 166.991 193.791 169.192V169.657H188.486C188.521 171.182 189.361 172.07 190.674 172.07C191.672 172.07 192.287 171.599 192.485 171.154L192.513 171.093H193.702L193.688 171.147C193.436 172.146 192.383 173.13 190.646 173.13ZM190.564 166.561C189.471 166.561 188.637 167.306 188.507 168.707H192.581C192.458 167.251 191.651 166.561 190.564 166.561ZM196.607 173.068C196.122 173.068 195.719 172.665 195.719 172.18C195.719 171.688 196.122 171.291 196.607 171.291C197.1 171.291 197.496 171.688 197.496 172.18C197.496 172.665 197.1 173.068 196.607 173.068ZM202.534 173.13C200.47 173.13 199.15 171.633 199.15 169.295V169.281C199.15 166.991 200.463 165.501 202.527 165.501C204.318 165.501 205.392 166.533 205.61 167.846L205.617 167.887H204.435L204.428 167.866C204.243 167.142 203.587 166.554 202.527 166.554C201.201 166.554 200.367 167.62 200.367 169.281V169.295C200.367 170.99 201.215 172.077 202.527 172.077C203.519 172.077 204.147 171.64 204.421 170.819L204.435 170.778L205.61 170.771L205.597 170.847C205.296 172.18 204.305 173.13 202.534 173.13ZM210.382 173.13C208.283 173.13 206.984 171.681 206.984 169.322V169.309C206.984 166.943 208.283 165.501 210.382 165.501C212.48 165.501 213.779 166.943 213.779 169.309V169.322C213.779 171.681 212.48 173.13 210.382 173.13ZM210.382 172.077C211.776 172.077 212.562 171.059 212.562 169.322V169.309C212.562 167.565 211.776 166.554 210.382 166.554C208.987 166.554 208.201 167.565 208.201 169.309V169.322C208.201 171.059 208.987 172.077 210.382 172.077ZM215.625 173V165.631H216.814V166.752H216.924C217.252 165.959 217.949 165.501 218.913 165.501C219.911 165.501 220.608 166.027 220.95 166.793H221.06C221.456 166.014 222.297 165.501 223.315 165.501C224.819 165.501 225.66 166.362 225.66 167.907V173H224.471V168.181C224.471 167.094 223.972 166.554 222.933 166.554C221.907 166.554 221.23 167.326 221.23 168.263V173H220.041V167.996C220.041 167.121 219.439 166.554 218.51 166.554C217.546 166.554 216.814 167.395 216.814 168.434V173H215.625ZM231.812 173V162.705H233.002V166.738H233.111C233.48 165.959 234.171 165.501 235.258 165.501C236.912 165.501 237.835 166.479 237.835 168.229V173H236.646V168.516C236.646 167.189 236.099 166.554 234.923 166.554C233.747 166.554 233.002 167.347 233.002 168.639V173H231.812ZM242.012 173.13C240.61 173.13 239.551 172.282 239.551 170.942V170.929C239.551 169.616 240.521 168.857 242.237 168.755L244.35 168.625V167.955C244.35 167.046 243.796 166.554 242.695 166.554C241.813 166.554 241.232 166.882 241.041 167.456L241.034 167.477H239.845L239.852 167.436C240.043 166.28 241.164 165.501 242.736 165.501C244.534 165.501 245.539 166.424 245.539 167.955V173H244.35V171.913H244.24C243.775 172.699 243.003 173.13 242.012 173.13ZM240.768 170.915C240.768 171.66 241.403 172.098 242.258 172.098C243.468 172.098 244.35 171.305 244.35 170.252V169.582L242.381 169.705C241.26 169.773 240.768 170.17 240.768 170.901V170.915ZM250.242 173.13C248.602 173.13 247.474 172.337 247.337 171.12H248.554C248.752 171.735 249.34 172.139 250.283 172.139C251.274 172.139 251.979 171.667 251.979 170.997V170.983C251.979 170.484 251.603 170.136 250.693 169.917L249.552 169.644C248.171 169.315 247.549 168.714 247.549 167.654V167.647C247.549 166.424 248.725 165.501 250.29 165.501C251.835 165.501 252.908 166.273 253.072 167.477H251.903C251.746 166.896 251.172 166.492 250.283 166.492C249.408 166.492 248.766 166.943 248.766 167.593V167.606C248.766 168.105 249.135 168.42 250.003 168.632L251.138 168.905C252.525 169.24 253.195 169.842 253.195 170.895V170.908C253.195 172.221 251.917 173.13 250.242 173.13ZM25.7363 184.209C25.2852 184.209 24.916 183.84 24.916 183.389C24.916 182.938 25.2852 182.568 25.7363 182.568C26.1875 182.568 26.5566 182.938 26.5566 183.389C26.5566 183.84 26.1875 184.209 25.7363 184.209ZM25.1348 193V185.631H26.3242V193H25.1348ZM28.5664 193V185.631H29.7559V186.738H29.8652C30.2344 185.959 30.9248 185.501 32.0117 185.501C33.666 185.501 34.5889 186.479 34.5889 188.229V193H33.3994V188.516C33.3994 187.189 32.8525 186.554 31.6768 186.554C30.501 186.554 29.7559 187.347 29.7559 188.639V193H28.5664ZM38.5537 193L35.8262 185.631H37.084L39.1006 191.701H39.21L41.2266 185.631H42.4844L39.7568 193H38.5537ZM44.6855 184.209C44.2344 184.209 43.8652 183.84 43.8652 183.389C43.8652 182.938 44.2344 182.568 44.6855 182.568C45.1367 182.568 45.5059 182.938 45.5059 183.389C45.5059 183.84 45.1367 184.209 44.6855 184.209ZM44.084 193V185.631H45.2734V193H44.084ZM50.1338 193.055C48.6162 193.055 47.9805 192.494 47.9805 191.086V186.615H46.8184V185.631H47.9805V183.724H49.2109V185.631H50.8242V186.615H49.2109V190.785C49.2109 191.653 49.5117 192.002 50.2773 192.002C50.4893 192.002 50.6055 191.995 50.8242 191.975V192.986C50.5918 193.027 50.3662 193.055 50.1338 193.055ZM55.5 193.13C53.3945 193.13 52.123 191.653 52.123 189.343V189.336C52.123 187.06 53.4219 185.501 55.4248 185.501C57.4277 185.501 58.6445 186.991 58.6445 189.192V189.657H53.3398C53.374 191.182 54.2148 192.07 55.5273 192.07C56.5254 192.07 57.1406 191.599 57.3389 191.154L57.3662 191.093H58.5557L58.542 191.147C58.2891 192.146 57.2363 193.13 55.5 193.13ZM55.418 186.561C54.3242 186.561 53.4902 187.306 53.3604 188.707H57.4346C57.3115 187.251 56.5049 186.561 55.418 186.561ZM63.2109 193.13C61.3447 193.13 60.1211 191.619 60.1211 189.322V189.309C60.1211 186.998 61.3379 185.501 63.2109 185.501C64.2227 185.501 65.1045 186.007 65.5078 186.793H65.6172V182.705H66.8066V193H65.6172V191.824H65.5078C65.0566 192.645 64.2363 193.13 63.2109 193.13ZM63.4844 192.077C64.8242 192.077 65.6445 191.024 65.6445 189.322V189.309C65.6445 187.606 64.8242 186.554 63.4844 186.554C62.1377 186.554 61.3379 187.593 61.3379 189.309V189.322C61.3379 191.038 62.1377 192.077 63.4844 192.077ZM73.6562 195.584C73.499 195.584 73.2939 195.57 73.1299 195.543V194.565C73.2734 194.593 73.458 194.6 73.6221 194.6C74.2988 194.6 74.709 194.292 74.9756 193.444L75.1123 193.007L72.3848 185.631H73.6562L75.6797 191.694H75.7891L77.8057 185.631H79.0566L76.1787 193.451C75.5703 195.105 74.9619 195.584 73.6562 195.584ZM83.3838 193.13C81.2852 193.13 79.9863 191.681 79.9863 189.322V189.309C79.9863 186.943 81.2852 185.501 83.3838 185.501C85.4824 185.501 86.7812 186.943 86.7812 189.309V189.322C86.7812 191.681 85.4824 193.13 83.3838 193.13ZM83.3838 192.077C84.7783 192.077 85.5645 191.059 85.5645 189.322V189.309C85.5645 187.565 84.7783 186.554 83.3838 186.554C81.9893 186.554 81.2031 187.565 81.2031 189.309V189.322C81.2031 191.059 81.9893 192.077 83.3838 192.077ZM91.0947 193.13C89.4199 193.13 88.5586 192.146 88.5586 190.402V185.631H89.748V190.115C89.748 191.441 90.2266 192.077 91.4023 192.077C92.7012 192.077 93.3916 191.284 93.3916 189.992V185.631H94.5811V193H93.3916V191.899H93.2822C92.9199 192.686 92.1748 193.13 91.0947 193.13ZM103.358 193.055C101.841 193.055 101.205 192.494 101.205 191.086V186.615H100.043V185.631H101.205V183.724H102.436V185.631H104.049V186.615H102.436V190.785C102.436 191.653 102.736 192.002 103.502 192.002C103.714 192.002 103.83 191.995 104.049 191.975V192.986C103.816 193.027 103.591 193.055 103.358 193.055ZM108.745 193.13C106.646 193.13 105.348 191.681 105.348 189.322V189.309C105.348 186.943 106.646 185.501 108.745 185.501C110.844 185.501 112.143 186.943 112.143 189.309V189.322C112.143 191.681 110.844 193.13 108.745 193.13ZM108.745 192.077C110.14 192.077 110.926 191.059 110.926 189.322V189.309C110.926 187.565 110.14 186.554 108.745 186.554C107.351 186.554 106.564 187.565 106.564 189.309V189.322C106.564 191.059 107.351 192.077 108.745 192.077ZM120.544 193.055C119.026 193.055 118.391 192.494 118.391 191.086V186.615H117.229V185.631H118.391V183.724H119.621V185.631H121.234V186.615H119.621V190.785C119.621 191.653 119.922 192.002 120.688 192.002C120.899 192.002 121.016 191.995 121.234 191.975V192.986C121.002 193.027 120.776 193.055 120.544 193.055ZM123.08 193V182.705H124.27V186.738H124.379C124.748 185.959 125.438 185.501 126.525 185.501C128.18 185.501 129.103 186.479 129.103 188.229V193H127.913V188.516C127.913 187.189 127.366 186.554 126.19 186.554C125.015 186.554 124.27 187.347 124.27 188.639V193H123.08ZM134.264 193.13C132.158 193.13 130.887 191.653 130.887 189.343V189.336C130.887 187.06 132.186 185.501 134.188 185.501C136.191 185.501 137.408 186.991 137.408 189.192V189.657H132.104C132.138 191.182 132.979 192.07 134.291 192.07C135.289 192.07 135.904 191.599 136.103 191.154L136.13 191.093H137.319L137.306 191.147C137.053 192.146 136 193.13 134.264 193.13ZM134.182 186.561C133.088 186.561 132.254 187.306 132.124 188.707H136.198C136.075 187.251 135.269 186.561 134.182 186.561ZM143.342 193V183.136H144.572V187.401H149.986V183.136H151.217V193H149.986V188.509H144.572V193H143.342ZM156.583 193L152.946 183.136H154.238L157.137 191.407H157.246L160.145 183.136H161.437L157.8 193H156.583ZM161.491 193L165.128 183.136H166.345L169.981 193H168.689L167.698 190.177H163.774L162.783 193H161.491ZM165.682 184.729L164.137 189.131H167.336L165.791 184.729H165.682ZM175.204 193.232C172.524 193.232 170.85 191.25 170.85 188.078V188.064C170.85 184.886 172.518 182.903 175.197 182.903C177.275 182.903 178.896 184.209 179.189 186.103L179.183 186.116H177.945L177.938 186.103C177.61 184.838 176.558 184.038 175.197 184.038C173.304 184.038 172.114 185.597 172.114 188.064V188.078C172.114 190.546 173.304 192.098 175.204 192.098C176.578 192.098 177.624 191.394 177.932 190.259L177.945 190.245H179.189V190.259C178.861 192.063 177.303 193.232 175.204 193.232ZM24.4717 221L28.1084 211.136H29.3252L32.9619 221H31.6699L30.6787 218.177H26.7549L25.7637 221H24.4717ZM28.6621 212.729L27.1172 217.131H30.3164L28.7715 212.729H28.6621ZM42.1426 221.13C41.1172 221.13 40.2969 220.645 39.8457 219.824H39.7363V221H38.5469V210.705H39.7363V214.793H39.8457C40.249 214.007 41.1309 213.501 42.1426 213.501C44.0156 213.501 45.2324 214.998 45.2324 217.309V217.322C45.2324 219.619 44.0088 221.13 42.1426 221.13ZM41.8691 220.077C43.2158 220.077 44.0156 219.038 44.0156 217.322V217.309C44.0156 215.593 43.2158 214.554 41.8691 214.554C40.5293 214.554 39.709 215.606 39.709 217.309V217.322C39.709 219.024 40.5293 220.077 41.8691 220.077ZM47.0781 221V213.631H48.2676V214.725H48.377C48.6572 213.952 49.3477 213.501 50.3457 213.501C50.5713 213.501 50.8242 213.528 50.9404 213.549V214.704C50.6943 214.663 50.4688 214.636 50.209 214.636C49.0742 214.636 48.2676 215.354 48.2676 216.434V221H47.0781ZM53.0391 212.209C52.5879 212.209 52.2188 211.84 52.2188 211.389C52.2188 210.938 52.5879 210.568 53.0391 210.568C53.4902 210.568 53.8594 210.938 53.8594 211.389C53.8594 211.84 53.4902 212.209 53.0391 212.209ZM52.4375 221V213.631H53.627V221H52.4375ZM55.9375 221V210.705H57.127V221H55.9375ZM59.4785 221V210.705H60.668V221H59.4785ZM63.5801 212.209C63.1289 212.209 62.7598 211.84 62.7598 211.389C62.7598 210.938 63.1289 210.568 63.5801 210.568C64.0312 210.568 64.4004 210.938 64.4004 211.389C64.4004 211.84 64.0312 212.209 63.5801 212.209ZM62.9785 221V213.631H64.168V221H62.9785ZM68.4336 221.13C67.0322 221.13 65.9727 220.282 65.9727 218.942V218.929C65.9727 217.616 66.9434 216.857 68.6592 216.755L70.7715 216.625V215.955C70.7715 215.046 70.2178 214.554 69.1172 214.554C68.2354 214.554 67.6543 214.882 67.4629 215.456L67.4561 215.477H66.2666L66.2734 215.436C66.4648 214.28 67.5859 213.501 69.1582 213.501C70.9561 213.501 71.9609 214.424 71.9609 215.955V221H70.7715V219.913H70.6621C70.1973 220.699 69.4248 221.13 68.4336 221.13ZM67.1895 218.915C67.1895 219.66 67.8252 220.098 68.6797 220.098C69.8896 220.098 70.7715 219.305 70.7715 218.252V217.582L68.8027 217.705C67.6816 217.773 67.1895 218.17 67.1895 218.901V218.915ZM74.1348 221V213.631H75.3242V214.738H75.4336C75.8027 213.959 76.4932 213.501 77.5801 213.501C79.2344 213.501 80.1572 214.479 80.1572 216.229V221H78.9678V216.516C78.9678 215.189 78.4209 214.554 77.2451 214.554C76.0693 214.554 75.3242 215.347 75.3242 216.639V221H74.1348ZM84.9287 221.055C83.4111 221.055 82.7754 220.494 82.7754 219.086V214.615H81.6133V213.631H82.7754V211.724H84.0059V213.631H85.6191V214.615H84.0059V218.785C84.0059 219.653 84.3066 220.002 85.0723 220.002C85.2842 220.002 85.4004 219.995 85.6191 219.975V220.986C85.3867 221.027 85.1611 221.055 84.9287 221.055ZM91.4844 221V211.136H95.2578C97.0693 211.136 98.1768 212.086 98.1768 213.59V213.604C98.1768 214.622 97.4248 215.552 96.4746 215.723V215.832C97.8213 216.003 98.6758 216.926 98.6758 218.225V218.238C98.6758 219.968 97.4316 221 95.333 221H91.4844ZM94.998 212.223H92.7148V215.388H94.6836C96.1738 215.388 96.9326 214.854 96.9326 213.815V213.802C96.9326 212.804 96.2217 212.223 94.998 212.223ZM95.0322 216.447H92.7148V219.913H95.1484C96.6318 219.913 97.4111 219.312 97.4111 218.177V218.163C97.4111 217.028 96.6045 216.447 95.0322 216.447ZM100.535 221V213.631H101.725V214.725H101.834C102.114 213.952 102.805 213.501 103.803 213.501C104.028 213.501 104.281 213.528 104.397 213.549V214.704C104.151 214.663 103.926 214.636 103.666 214.636C102.531 214.636 101.725 215.354 101.725 216.434V221H100.535ZM106.496 212.209C106.045 212.209 105.676 211.84 105.676 211.389C105.676 210.938 106.045 210.568 106.496 210.568C106.947 210.568 107.316 210.938 107.316 211.389C107.316 211.84 106.947 212.209 106.496 212.209ZM105.895 221V213.631H107.084V221H105.895ZM111.944 221.055C110.427 221.055 109.791 220.494 109.791 219.086V214.615H108.629V213.631H109.791V211.724H111.021V213.631H112.635V214.615H111.021V218.785C111.021 219.653 111.322 220.002 112.088 220.002C112.3 220.002 112.416 219.995 112.635 219.975V220.986C112.402 221.027 112.177 221.055 111.944 221.055ZM115.041 212.209C114.59 212.209 114.221 211.84 114.221 211.389C114.221 210.938 114.59 210.568 115.041 210.568C115.492 210.568 115.861 210.938 115.861 211.389C115.861 211.84 115.492 212.209 115.041 212.209ZM114.439 221V213.631H115.629V221H114.439ZM120.4 221.13C118.76 221.13 117.632 220.337 117.495 219.12H118.712C118.91 219.735 119.498 220.139 120.441 220.139C121.433 220.139 122.137 219.667 122.137 218.997V218.983C122.137 218.484 121.761 218.136 120.852 217.917L119.71 217.644C118.329 217.315 117.707 216.714 117.707 215.654V215.647C117.707 214.424 118.883 213.501 120.448 213.501C121.993 213.501 123.066 214.273 123.23 215.477H122.062C121.904 214.896 121.33 214.492 120.441 214.492C119.566 214.492 118.924 214.943 118.924 215.593V215.606C118.924 216.105 119.293 216.42 120.161 216.632L121.296 216.905C122.684 217.24 123.354 217.842 123.354 218.895V218.908C123.354 220.221 122.075 221.13 120.4 221.13ZM125.268 221V210.705H126.457V214.738H126.566C126.936 213.959 127.626 213.501 128.713 213.501C130.367 213.501 131.29 214.479 131.29 216.229V221H130.101V216.516C130.101 215.189 129.554 214.554 128.378 214.554C127.202 214.554 126.457 215.347 126.457 216.639V221H125.268ZM137.381 221V213.631H138.57V214.752H138.68C139.008 213.959 139.705 213.501 140.669 213.501C141.667 213.501 142.364 214.027 142.706 214.793H142.815C143.212 214.014 144.053 213.501 145.071 213.501C146.575 213.501 147.416 214.362 147.416 215.907V221H146.227V216.181C146.227 215.094 145.728 214.554 144.688 214.554C143.663 214.554 142.986 215.326 142.986 216.263V221H141.797V215.996C141.797 215.121 141.195 214.554 140.266 214.554C139.302 214.554 138.57 215.395 138.57 216.434V221H137.381ZM150.191 212.209C149.74 212.209 149.371 211.84 149.371 211.389C149.371 210.938 149.74 210.568 150.191 210.568C150.643 210.568 151.012 210.938 151.012 211.389C151.012 211.84 150.643 212.209 150.191 212.209ZM149.59 221V213.631H150.779V221H149.59ZM153.021 221V213.631H154.211V214.738H154.32C154.689 213.959 155.38 213.501 156.467 213.501C158.121 213.501 159.044 214.479 159.044 216.229V221H157.854V216.516C157.854 215.189 157.308 214.554 156.132 214.554C154.956 214.554 154.211 215.347 154.211 216.639V221H153.021ZM163.918 221.13C162.052 221.13 160.828 219.619 160.828 217.322V217.309C160.828 214.998 162.045 213.501 163.918 213.501C164.93 213.501 165.812 214.007 166.215 214.793H166.324V210.705H167.514V221H166.324V219.824H166.215C165.764 220.645 164.943 221.13 163.918 221.13ZM164.191 220.077C165.531 220.077 166.352 219.024 166.352 217.322V217.309C166.352 215.606 165.531 214.554 164.191 214.554C162.845 214.554 162.045 215.593 162.045 217.309V217.322C162.045 219.038 162.845 220.077 164.191 220.077ZM169.496 223.509L170.091 219.619H171.451L170.378 223.509H169.496ZM180.905 221.13C178.841 221.13 177.521 219.633 177.521 217.295V217.281C177.521 214.991 178.834 213.501 180.898 213.501C182.689 213.501 183.763 214.533 183.981 215.846L183.988 215.887H182.806L182.799 215.866C182.614 215.142 181.958 214.554 180.898 214.554C179.572 214.554 178.738 215.62 178.738 217.281V217.295C178.738 218.99 179.586 220.077 180.898 220.077C181.89 220.077 182.519 219.64 182.792 218.819L182.806 218.778L183.981 218.771L183.968 218.847C183.667 220.18 182.676 221.13 180.905 221.13ZM185.725 221V213.631H186.914V214.725H187.023C187.304 213.952 187.994 213.501 188.992 213.501C189.218 213.501 189.471 213.528 189.587 213.549V214.704C189.341 214.663 189.115 214.636 188.855 214.636C187.721 214.636 186.914 215.354 186.914 216.434V221H185.725ZM193.08 221.13C191.679 221.13 190.619 220.282 190.619 218.942V218.929C190.619 217.616 191.59 216.857 193.306 216.755L195.418 216.625V215.955C195.418 215.046 194.864 214.554 193.764 214.554C192.882 214.554 192.301 214.882 192.109 215.456L192.103 215.477H190.913L190.92 215.436C191.111 214.28 192.232 213.501 193.805 213.501C195.603 213.501 196.607 214.424 196.607 215.955V221H195.418V219.913H195.309C194.844 220.699 194.071 221.13 193.08 221.13ZM191.836 218.915C191.836 219.66 192.472 220.098 193.326 220.098C194.536 220.098 195.418 219.305 195.418 218.252V217.582L193.449 217.705C192.328 217.773 191.836 218.17 191.836 218.901V218.915ZM201.796 221.13C199.731 221.13 198.412 219.633 198.412 217.295V217.281C198.412 214.991 199.725 213.501 201.789 213.501C203.58 213.501 204.653 214.533 204.872 215.846L204.879 215.887H203.696L203.689 215.866C203.505 215.142 202.849 214.554 201.789 214.554C200.463 214.554 199.629 215.62 199.629 217.281V217.295C199.629 218.99 200.477 220.077 201.789 220.077C202.78 220.077 203.409 219.64 203.683 218.819L203.696 218.778L204.872 218.771L204.858 218.847C204.558 220.18 203.566 221.13 201.796 221.13ZM206.684 221V210.705H207.873V216.851H207.982L211.168 213.631H212.61L209.397 216.728L212.822 221H211.325L208.563 217.534L207.873 218.204V221H206.684ZM216.883 221.13C214.777 221.13 213.506 219.653 213.506 217.343V217.336C213.506 215.06 214.805 213.501 216.808 213.501C218.811 213.501 220.027 214.991 220.027 217.192V217.657H214.723C214.757 219.182 215.598 220.07 216.91 220.07C217.908 220.07 218.523 219.599 218.722 219.154L218.749 219.093H219.938L219.925 219.147C219.672 220.146 218.619 221.13 216.883 221.13ZM216.801 214.561C215.707 214.561 214.873 215.306 214.743 216.707H218.817C218.694 215.251 217.888 214.561 216.801 214.561ZM224.594 221.13C222.728 221.13 221.504 219.619 221.504 217.322V217.309C221.504 214.998 222.721 213.501 224.594 213.501C225.605 213.501 226.487 214.007 226.891 214.793H227V210.705H228.189V221H227V219.824H226.891C226.439 220.645 225.619 221.13 224.594 221.13ZM224.867 220.077C226.207 220.077 227.027 219.024 227.027 217.322V217.309C227.027 215.606 226.207 214.554 224.867 214.554C223.521 214.554 222.721 215.593 222.721 217.309V217.322C222.721 219.038 223.521 220.077 224.867 220.077ZM25.2578 241V231.136H26.4541L31.8066 238.812H31.916V231.136H33.1328V241H31.9365L26.584 233.351H26.4746V241H25.2578ZM37.5215 241.13C36.1201 241.13 35.0605 240.282 35.0605 238.942V238.929C35.0605 237.616 36.0312 236.857 37.7471 236.755L39.8594 236.625V235.955C39.8594 235.046 39.3057 234.554 38.2051 234.554C37.3232 234.554 36.7422 234.882 36.5508 235.456L36.5439 235.477H35.3545L35.3613 235.436C35.5527 234.28 36.6738 233.501 38.2461 233.501C40.0439 233.501 41.0488 234.424 41.0488 235.955V241H39.8594V239.913H39.75C39.2852 240.699 38.5127 241.13 37.5215 241.13ZM36.2773 238.915C36.2773 239.66 36.9131 240.098 37.7676 240.098C38.9775 240.098 39.8594 239.305 39.8594 238.252V237.582L37.8906 237.705C36.7695 237.773 36.2773 238.17 36.2773 238.901V238.915ZM43.0518 241V240.139L47.3037 234.725V234.615H43.0586V233.631H48.7051V234.513L44.4736 239.906V240.016H48.7256V241H43.0518ZM51.3984 232.209C50.9473 232.209 50.5781 231.84 50.5781 231.389C50.5781 230.938 50.9473 230.568 51.3984 230.568C51.8496 230.568 52.2188 230.938 52.2188 231.389C52.2188 231.84 51.8496 232.209 51.3984 232.209ZM50.7969 241V233.631H51.9863V241H50.7969ZM61.1807 241.13C59.1162 241.13 57.7969 239.633 57.7969 237.295V237.281C57.7969 234.991 59.1094 233.501 61.1738 233.501C62.9648 233.501 64.0381 234.533 64.2568 235.846L64.2637 235.887H63.0811L63.0742 235.866C62.8896 235.142 62.2334 234.554 61.1738 234.554C59.8477 234.554 59.0137 235.62 59.0137 237.281V237.295C59.0137 238.99 59.8613 240.077 61.1738 240.077C62.165 240.077 62.7939 239.64 63.0674 238.819L63.0811 238.778L64.2568 238.771L64.2432 238.847C63.9424 240.18 62.9512 241.13 61.1807 241.13ZM69.0283 241.13C66.9297 241.13 65.6309 239.681 65.6309 237.322V237.309C65.6309 234.943 66.9297 233.501 69.0283 233.501C71.127 233.501 72.4258 234.943 72.4258 237.309V237.322C72.4258 239.681 71.127 241.13 69.0283 241.13ZM69.0283 240.077C70.4229 240.077 71.209 239.059 71.209 237.322V237.309C71.209 235.565 70.4229 234.554 69.0283 234.554C67.6338 234.554 66.8477 235.565 66.8477 237.309V237.322C66.8477 239.059 67.6338 240.077 69.0283 240.077ZM76.9922 241.13C75.126 241.13 73.9023 239.619 73.9023 237.322V237.309C73.9023 234.998 75.1191 233.501 76.9922 233.501C78.0039 233.501 78.8857 234.007 79.2891 234.793H79.3984V230.705H80.5879V241H79.3984V239.824H79.2891C78.8379 240.645 78.0176 241.13 76.9922 241.13ZM77.2656 240.077C78.6055 240.077 79.4258 239.024 79.4258 237.322V237.309C79.4258 235.606 78.6055 234.554 77.2656 234.554C75.9189 234.554 75.1191 235.593 75.1191 237.309V237.322C75.1191 239.038 75.9189 240.077 77.2656 240.077ZM85.8789 241.13C83.7734 241.13 82.502 239.653 82.502 237.343V237.336C82.502 235.06 83.8008 233.501 85.8037 233.501C87.8066 233.501 89.0234 234.991 89.0234 237.192V237.657H83.7188C83.7529 239.182 84.5938 240.07 85.9062 240.07C86.9043 240.07 87.5195 239.599 87.7178 239.154L87.7451 239.093H88.9346L88.9209 239.147C88.668 240.146 87.6152 241.13 85.8789 241.13ZM85.7969 234.561C84.7031 234.561 83.8691 235.306 83.7393 236.707H87.8135C87.6904 235.251 86.8838 234.561 85.7969 234.561ZM93.3984 241.13C91.7578 241.13 90.6299 240.337 90.4932 239.12H91.71C91.9082 239.735 92.4961 240.139 93.4395 240.139C94.4307 240.139 95.1348 239.667 95.1348 238.997V238.983C95.1348 238.484 94.7588 238.136 93.8496 237.917L92.708 237.644C91.3271 237.315 90.7051 236.714 90.7051 235.654V235.647C90.7051 234.424 91.8809 233.501 93.4463 233.501C94.9912 233.501 96.0645 234.273 96.2285 235.477H95.0596C94.9023 234.896 94.3281 234.492 93.4395 234.492C92.5645 234.492 91.9219 234.943 91.9219 235.593V235.606C91.9219 236.105 92.291 236.42 93.1592 236.632L94.2939 236.905C95.6816 237.24 96.3516 237.842 96.3516 238.895V238.908C96.3516 240.221 95.0732 241.13 93.3984 241.13ZM102.764 232.209C102.312 232.209 101.943 231.84 101.943 231.389C101.943 230.938 102.312 230.568 102.764 230.568C103.215 230.568 103.584 230.938 103.584 231.389C103.584 231.84 103.215 232.209 102.764 232.209ZM102.162 241V233.631H103.352V241H102.162ZM105.594 241V233.631H106.783V234.738H106.893C107.262 233.959 107.952 233.501 109.039 233.501C110.693 233.501 111.616 234.479 111.616 236.229V241H110.427V236.516C110.427 235.189 109.88 234.554 108.704 234.554C107.528 234.554 106.783 235.347 106.783 236.639V241H105.594ZM119.901 241L117.215 231.136H118.5L120.462 239.154H120.544L122.752 231.136H123.996L126.204 239.154H126.286L128.248 231.136H129.533L126.847 241H125.685L123.415 233.214H123.333L121.063 241H119.901ZM133.45 241L130.764 231.136H132.049L134.011 239.154H134.093L136.301 231.136H137.545L139.753 239.154H139.835L141.797 231.136H143.082L140.396 241H139.233L136.964 233.214H136.882L134.612 241H133.45ZM144.955 241V231.136H146.186V241H144.955ZM148.701 241V231.136H149.932V241H148.701ZM158.258 241.13C156.856 241.13 155.797 240.282 155.797 238.942V238.929C155.797 237.616 156.768 236.857 158.483 236.755L160.596 236.625V235.955C160.596 235.046 160.042 234.554 158.941 234.554C158.06 234.554 157.479 234.882 157.287 235.456L157.28 235.477H156.091L156.098 235.436C156.289 234.28 157.41 233.501 158.982 233.501C160.78 233.501 161.785 234.424 161.785 235.955V241H160.596V239.913H160.486C160.021 240.699 159.249 241.13 158.258 241.13ZM157.014 238.915C157.014 239.66 157.649 240.098 158.504 240.098C159.714 240.098 160.596 239.305 160.596 238.252V237.582L158.627 237.705C157.506 237.773 157.014 238.17 157.014 238.901V238.915ZM163.959 241V233.631H165.148V234.738H165.258C165.627 233.959 166.317 233.501 167.404 233.501C169.059 233.501 169.981 234.479 169.981 236.229V241H168.792V236.516C168.792 235.189 168.245 234.554 167.069 234.554C165.894 234.554 165.148 235.347 165.148 236.639V241H163.959ZM174.855 241.13C172.989 241.13 171.766 239.619 171.766 237.322V237.309C171.766 234.998 172.982 233.501 174.855 233.501C175.867 233.501 176.749 234.007 177.152 234.793H177.262V230.705H178.451V241H177.262V239.824H177.152C176.701 240.645 175.881 241.13 174.855 241.13ZM175.129 240.077C176.469 240.077 177.289 239.024 177.289 237.322V237.309C177.289 235.606 176.469 234.554 175.129 234.554C173.782 234.554 172.982 235.593 172.982 237.309V237.322C172.982 239.038 173.782 240.077 175.129 240.077ZM185.301 232.209C184.85 232.209 184.48 231.84 184.48 231.389C184.48 230.938 184.85 230.568 185.301 230.568C185.752 230.568 186.121 230.938 186.121 231.389C186.121 231.84 185.752 232.209 185.301 232.209ZM184.699 241V233.631H185.889V241H184.699ZM190.66 241.13C189.02 241.13 187.892 240.337 187.755 239.12H188.972C189.17 239.735 189.758 240.139 190.701 240.139C191.692 240.139 192.396 239.667 192.396 238.997V238.983C192.396 238.484 192.021 238.136 191.111 237.917L189.97 237.644C188.589 237.315 187.967 236.714 187.967 235.654V235.647C187.967 234.424 189.143 233.501 190.708 233.501C192.253 233.501 193.326 234.273 193.49 235.477H192.321C192.164 234.896 191.59 234.492 190.701 234.492C189.826 234.492 189.184 234.943 189.184 235.593V235.606C189.184 236.105 189.553 236.42 190.421 236.632L191.556 236.905C192.943 237.24 193.613 237.842 193.613 238.895V238.908C193.613 240.221 192.335 241.13 190.66 241.13ZM28.1221 261.13C26.0576 261.13 24.7383 259.633 24.7383 257.295V257.281C24.7383 254.991 26.0508 253.501 28.1152 253.501C29.9062 253.501 30.9795 254.533 31.1982 255.846L31.2051 255.887H30.0225L30.0156 255.866C29.8311 255.142 29.1748 254.554 28.1152 254.554C26.7891 254.554 25.9551 255.62 25.9551 257.281V257.295C25.9551 258.99 26.8027 260.077 28.1152 260.077C29.1064 260.077 29.7354 259.64 30.0088 258.819L30.0225 258.778L31.1982 258.771L31.1846 258.847C30.8838 260.18 29.8926 261.13 28.1221 261.13ZM35.9697 261.13C33.8711 261.13 32.5723 259.681 32.5723 257.322V257.309C32.5723 254.943 33.8711 253.501 35.9697 253.501C38.0684 253.501 39.3672 254.943 39.3672 257.309V257.322C39.3672 259.681 38.0684 261.13 35.9697 261.13ZM35.9697 260.077C37.3643 260.077 38.1504 259.059 38.1504 257.322V257.309C38.1504 255.565 37.3643 254.554 35.9697 254.554C34.5752 254.554 33.7891 255.565 33.7891 257.309V257.322C33.7891 259.059 34.5752 260.077 35.9697 260.077ZM41.2129 261V253.631H42.4023V254.738H42.5117C42.8809 253.959 43.5713 253.501 44.6582 253.501C46.3125 253.501 47.2354 254.479 47.2354 256.229V261H46.0459V256.516C46.0459 255.189 45.499 254.554 44.3232 254.554C43.1475 254.554 42.4023 255.347 42.4023 256.639V261H41.2129ZM51.918 261.13C50.2773 261.13 49.1494 260.337 49.0127 259.12H50.2295C50.4277 259.735 51.0156 260.139 51.959 260.139C52.9502 260.139 53.6543 259.667 53.6543 258.997V258.983C53.6543 258.484 53.2783 258.136 52.3691 257.917L51.2275 257.644C49.8467 257.315 49.2246 256.714 49.2246 255.654V255.647C49.2246 254.424 50.4004 253.501 51.9658 253.501C53.5107 253.501 54.584 254.273 54.748 255.477H53.5791C53.4219 254.896 52.8477 254.492 51.959 254.492C51.084 254.492 50.4414 254.943 50.4414 255.593V255.606C50.4414 256.105 50.8105 256.42 51.6787 256.632L52.8135 256.905C54.2012 257.24 54.8711 257.842 54.8711 258.895V258.908C54.8711 260.221 53.5928 261.13 51.918 261.13ZM57.3457 252.209C56.8945 252.209 56.5254 251.84 56.5254 251.389C56.5254 250.938 56.8945 250.568 57.3457 250.568C57.7969 250.568 58.166 250.938 58.166 251.389C58.166 251.84 57.7969 252.209 57.3457 252.209ZM56.7441 261V253.631H57.9336V261H56.7441ZM62.8965 261.13C61.0303 261.13 59.8066 259.619 59.8066 257.322V257.309C59.8066 254.998 61.0234 253.501 62.8965 253.501C63.9082 253.501 64.79 254.007 65.1934 254.793H65.3027V250.705H66.4922V261H65.3027V259.824H65.1934C64.7422 260.645 63.9219 261.13 62.8965 261.13ZM63.1699 260.077C64.5098 260.077 65.3301 259.024 65.3301 257.322V257.309C65.3301 255.606 64.5098 254.554 63.1699 254.554C61.8232 254.554 61.0234 255.593 61.0234 257.309V257.322C61.0234 259.038 61.8232 260.077 63.1699 260.077ZM71.7832 261.13C69.6777 261.13 68.4062 259.653 68.4062 257.343V257.336C68.4062 255.06 69.7051 253.501 71.708 253.501C73.7109 253.501 74.9277 254.991 74.9277 257.192V257.657H69.623C69.6572 259.182 70.498 260.07 71.8105 260.07C72.8086 260.07 73.4238 259.599 73.6221 259.154L73.6494 259.093H74.8389L74.8252 259.147C74.5723 260.146 73.5195 261.13 71.7832 261.13ZM71.7012 254.561C70.6074 254.561 69.7734 255.306 69.6436 256.707H73.7178C73.5947 255.251 72.7881 254.561 71.7012 254.561ZM76.7734 261V253.631H77.9629V254.725H78.0723C78.3525 253.952 79.043 253.501 80.041 253.501C80.2666 253.501 80.5195 253.528 80.6357 253.549V254.704C80.3896 254.663 80.1641 254.636 79.9043 254.636C78.7695 254.636 77.9629 255.354 77.9629 256.434V261H76.7734ZM84.9082 261.13C82.8027 261.13 81.5312 259.653 81.5312 257.343V257.336C81.5312 255.06 82.8301 253.501 84.833 253.501C86.8359 253.501 88.0527 254.991 88.0527 257.192V257.657H82.748C82.7822 259.182 83.623 260.07 84.9355 260.07C85.9336 260.07 86.5488 259.599 86.7471 259.154L86.7744 259.093H87.9639L87.9502 259.147C87.6973 260.146 86.6445 261.13 84.9082 261.13ZM84.8262 254.561C83.7324 254.561 82.8984 255.306 82.7686 256.707H86.8428C86.7197 255.251 85.9131 254.561 84.8262 254.561ZM92.6191 261.13C90.7529 261.13 89.5293 259.619 89.5293 257.322V257.309C89.5293 254.998 90.7461 253.501 92.6191 253.501C93.6309 253.501 94.5127 254.007 94.916 254.793H95.0254V250.705H96.2148V261H95.0254V259.824H94.916C94.4648 260.645 93.6445 261.13 92.6191 261.13ZM92.8926 260.077C94.2324 260.077 95.0527 259.024 95.0527 257.322V257.309C95.0527 255.606 94.2324 254.554 92.8926 254.554C91.5459 254.554 90.7461 255.593 90.7461 257.309V257.322C90.7461 259.038 91.5459 260.077 92.8926 260.077ZM105.054 261.055C103.536 261.055 102.9 260.494 102.9 259.086V254.615H101.738V253.631H102.9V251.724H104.131V253.631H105.744V254.615H104.131V258.785C104.131 259.653 104.432 260.002 105.197 260.002C105.409 260.002 105.525 259.995 105.744 259.975V260.986C105.512 261.027 105.286 261.055 105.054 261.055ZM107.59 261V250.705H108.779V254.738H108.889C109.258 253.959 109.948 253.501 111.035 253.501C112.689 253.501 113.612 254.479 113.612 256.229V261H112.423V256.516C112.423 255.189 111.876 254.554 110.7 254.554C109.524 254.554 108.779 255.347 108.779 256.639V261H107.59ZM118.773 261.13C116.668 261.13 115.396 259.653 115.396 257.343V257.336C115.396 255.06 116.695 253.501 118.698 253.501C120.701 253.501 121.918 254.991 121.918 257.192V257.657H116.613C116.647 259.182 117.488 260.07 118.801 260.07C119.799 260.07 120.414 259.599 120.612 259.154L120.64 259.093H121.829L121.815 259.147C121.562 260.146 120.51 261.13 118.773 261.13ZM118.691 254.561C117.598 254.561 116.764 255.306 116.634 256.707H120.708C120.585 255.251 119.778 254.561 118.691 254.561ZM128.193 261V254.615H126.97V253.631H128.193V252.811C128.193 251.341 128.932 250.637 130.333 250.637C130.62 250.637 130.88 250.657 131.126 250.705V251.655C130.982 251.628 130.784 251.621 130.572 251.621C129.725 251.621 129.383 252.038 129.383 252.845V253.631H131.058V254.615H129.383V261H128.193ZM134.592 261.13C133.19 261.13 132.131 260.282 132.131 258.942V258.929C132.131 257.616 133.102 256.857 134.817 256.755L136.93 256.625V255.955C136.93 255.046 136.376 254.554 135.275 254.554C134.394 254.554 133.812 254.882 133.621 255.456L133.614 255.477H132.425L132.432 255.436C132.623 254.28 133.744 253.501 135.316 253.501C137.114 253.501 138.119 254.424 138.119 255.955V261H136.93V259.913H136.82C136.355 260.699 135.583 261.13 134.592 261.13ZM133.348 258.915C133.348 259.66 133.983 260.098 134.838 260.098C136.048 260.098 136.93 259.305 136.93 258.252V257.582L134.961 257.705C133.84 257.773 133.348 258.17 133.348 258.901V258.915ZM142.911 261.055C141.394 261.055 140.758 260.494 140.758 259.086V254.615H139.596V253.631H140.758V251.724H141.988V253.631H143.602V254.615H141.988V258.785C141.988 259.653 142.289 260.002 143.055 260.002C143.267 260.002 143.383 259.995 143.602 259.975V260.986C143.369 261.027 143.144 261.055 142.911 261.055ZM145.447 261V250.705H146.637V254.738H146.746C147.115 253.959 147.806 253.501 148.893 253.501C150.547 253.501 151.47 254.479 151.47 256.229V261H150.28V256.516C150.28 255.189 149.733 254.554 148.558 254.554C147.382 254.554 146.637 255.347 146.637 256.639V261H145.447ZM156.631 261.13C154.525 261.13 153.254 259.653 153.254 257.343V257.336C153.254 255.06 154.553 253.501 156.556 253.501C158.559 253.501 159.775 254.991 159.775 257.192V257.657H154.471C154.505 259.182 155.346 260.07 156.658 260.07C157.656 260.07 158.271 259.599 158.47 259.154L158.497 259.093H159.687L159.673 259.147C159.42 260.146 158.367 261.13 156.631 261.13ZM156.549 254.561C155.455 254.561 154.621 255.306 154.491 256.707H158.565C158.442 255.251 157.636 254.561 156.549 254.561ZM161.621 261V253.631H162.811V254.725H162.92C163.2 253.952 163.891 253.501 164.889 253.501C165.114 253.501 165.367 253.528 165.483 253.549V254.704C165.237 254.663 165.012 254.636 164.752 254.636C163.617 254.636 162.811 255.354 162.811 256.434V261H161.621ZM173.919 261.13C171.82 261.13 170.521 259.681 170.521 257.322V257.309C170.521 254.943 171.82 253.501 173.919 253.501C176.018 253.501 177.316 254.943 177.316 257.309V257.322C177.316 259.681 176.018 261.13 173.919 261.13ZM173.919 260.077C175.313 260.077 176.1 259.059 176.1 257.322V257.309C176.1 255.565 175.313 254.554 173.919 254.554C172.524 254.554 171.738 255.565 171.738 257.309V257.322C171.738 259.059 172.524 260.077 173.919 260.077ZM179.654 261V254.615H178.431V253.631H179.654V252.811C179.654 251.341 180.393 250.637 181.794 250.637C182.081 250.637 182.341 250.657 182.587 250.705V251.655C182.443 251.628 182.245 251.621 182.033 251.621C181.186 251.621 180.844 252.038 180.844 252.845V253.631H182.519V254.615H180.844V261H179.654ZM27.7256 281.055C26.208 281.055 25.5723 280.494 25.5723 279.086V274.615H24.4102V273.631H25.5723V271.724H26.8027V273.631H28.416V274.615H26.8027V278.785C26.8027 279.653 27.1035 280.002 27.8691 280.002C28.0811 280.002 28.1973 279.995 28.416 279.975V280.986C28.1836 281.027 27.958 281.055 27.7256 281.055ZM30.2617 281V270.705H31.4512V274.738H31.5605C31.9297 273.959 32.6201 273.501 33.707 273.501C35.3613 273.501 36.2842 274.479 36.2842 276.229V281H35.0947V276.516C35.0947 275.189 34.5479 274.554 33.3721 274.554C32.1963 274.554 31.4512 275.347 31.4512 276.639V281H30.2617ZM41.4453 281.13C39.3398 281.13 38.0684 279.653 38.0684 277.343V277.336C38.0684 275.06 39.3672 273.501 41.3701 273.501C43.373 273.501 44.5898 274.991 44.5898 277.192V277.657H39.2852C39.3193 279.182 40.1602 280.07 41.4727 280.07C42.4707 280.07 43.0859 279.599 43.2842 279.154L43.3115 279.093H44.501L44.4873 279.147C44.2344 280.146 43.1816 281.13 41.4453 281.13ZM41.3633 274.561C40.2695 274.561 39.4355 275.306 39.3057 276.707H43.3799C43.2568 275.251 42.4502 274.561 41.3633 274.561ZM49.4639 281.13C47.3652 281.13 46.0664 279.681 46.0664 277.322V277.309C46.0664 274.943 47.3652 273.501 49.4639 273.501C51.5625 273.501 52.8613 274.943 52.8613 277.309V277.322C52.8613 279.681 51.5625 281.13 49.4639 281.13ZM49.4639 280.077C50.8584 280.077 51.6445 279.059 51.6445 277.322V277.309C51.6445 275.565 50.8584 274.554 49.4639 274.554C48.0693 274.554 47.2832 275.565 47.2832 277.309V277.322C47.2832 279.059 48.0693 280.077 49.4639 280.077ZM54.707 281V273.631H55.8965V274.725H56.0059C56.2861 273.952 56.9766 273.501 57.9746 273.501C58.2002 273.501 58.4531 273.528 58.5693 273.549V274.704C58.3232 274.663 58.0977 274.636 57.8379 274.636C56.7031 274.636 55.8965 275.354 55.8965 276.434V281H54.707ZM62.8418 281.13C60.7363 281.13 59.4648 279.653 59.4648 277.343V277.336C59.4648 275.06 60.7637 273.501 62.7666 273.501C64.7695 273.501 65.9863 274.991 65.9863 277.192V277.657H60.6816C60.7158 279.182 61.5566 280.07 62.8691 280.07C63.8672 280.07 64.4824 279.599 64.6807 279.154L64.708 279.093H65.8975L65.8838 279.147C65.6309 280.146 64.5781 281.13 62.8418 281.13ZM62.7598 274.561C61.666 274.561 60.832 275.306 60.7021 276.707H64.7764C64.6533 275.251 63.8467 274.561 62.7598 274.561ZM70.4502 281.055C68.9326 281.055 68.2969 280.494 68.2969 279.086V274.615H67.1348V273.631H68.2969V271.724H69.5273V273.631H71.1406V274.615H69.5273V278.785C69.5273 279.653 69.8281 280.002 70.5938 280.002C70.8057 280.002 70.9219 279.995 71.1406 279.975V280.986C70.9082 281.027 70.6826 281.055 70.4502 281.055ZM73.5469 272.209C73.0957 272.209 72.7266 271.84 72.7266 271.389C72.7266 270.938 73.0957 270.568 73.5469 270.568C73.998 270.568 74.3672 270.938 74.3672 271.389C74.3672 271.84 73.998 272.209 73.5469 272.209ZM72.9453 281V273.631H74.1348V281H72.9453ZM79.3916 281.13C77.3271 281.13 76.0078 279.633 76.0078 277.295V277.281C76.0078 274.991 77.3203 273.501 79.3848 273.501C81.1758 273.501 82.249 274.533 82.4678 275.846L82.4746 275.887H81.292L81.2852 275.866C81.1006 275.142 80.4443 274.554 79.3848 274.554C78.0586 274.554 77.2246 275.62 77.2246 277.281V277.295C77.2246 278.99 78.0723 280.077 79.3848 280.077C80.376 280.077 81.0049 279.64 81.2783 278.819L81.292 278.778L82.4678 278.771L82.4541 278.847C82.1533 280.18 81.1621 281.13 79.3916 281.13ZM86.2344 281.13C84.833 281.13 83.7734 280.282 83.7734 278.942V278.929C83.7734 277.616 84.7441 276.857 86.46 276.755L88.5723 276.625V275.955C88.5723 275.046 88.0186 274.554 86.918 274.554C86.0361 274.554 85.4551 274.882 85.2637 275.456L85.2568 275.477H84.0674L84.0742 275.436C84.2656 274.28 85.3867 273.501 86.959 273.501C88.7568 273.501 89.7617 274.424 89.7617 275.955V281H88.5723V279.913H88.4629C87.998 280.699 87.2256 281.13 86.2344 281.13ZM84.9902 278.915C84.9902 279.66 85.626 280.098 86.4805 280.098C87.6904 280.098 88.5723 279.305 88.5723 278.252V277.582L86.6035 277.705C85.4824 277.773 84.9902 278.17 84.9902 278.901V278.915ZM92.0039 281V270.705H93.1934V281H92.0039ZM102.429 281.13C100.364 281.13 99.0449 279.633 99.0449 277.295V277.281C99.0449 274.991 100.357 273.501 102.422 273.501C104.213 273.501 105.286 274.533 105.505 275.846L105.512 275.887H104.329L104.322 275.866C104.138 275.142 103.481 274.554 102.422 274.554C101.096 274.554 100.262 275.62 100.262 277.281V277.295C100.262 278.99 101.109 280.077 102.422 280.077C103.413 280.077 104.042 279.64 104.315 278.819L104.329 278.778L105.505 278.771L105.491 278.847C105.19 280.18 104.199 281.13 102.429 281.13ZM110.276 281.13C108.178 281.13 106.879 279.681 106.879 277.322V277.309C106.879 274.943 108.178 273.501 110.276 273.501C112.375 273.501 113.674 274.943 113.674 277.309V277.322C113.674 279.681 112.375 281.13 110.276 281.13ZM110.276 280.077C111.671 280.077 112.457 279.059 112.457 277.322V277.309C112.457 275.565 111.671 274.554 110.276 274.554C108.882 274.554 108.096 275.565 108.096 277.309V277.322C108.096 279.059 108.882 280.077 110.276 280.077ZM115.52 281V273.631H116.709V274.752H116.818C117.146 273.959 117.844 273.501 118.808 273.501C119.806 273.501 120.503 274.027 120.845 274.793H120.954C121.351 274.014 122.191 273.501 123.21 273.501C124.714 273.501 125.555 274.362 125.555 275.907V281H124.365V276.181C124.365 275.094 123.866 274.554 122.827 274.554C121.802 274.554 121.125 275.326 121.125 276.263V281H119.936V275.996C119.936 275.121 119.334 274.554 118.404 274.554C117.44 274.554 116.709 275.395 116.709 276.434V281H115.52ZM127.701 283.461V273.631H128.891V274.807H129C129.451 273.986 130.271 273.501 131.297 273.501C133.163 273.501 134.387 275.012 134.387 277.309V277.322C134.387 279.633 133.17 281.13 131.297 281.13C130.285 281.13 129.403 280.624 129 279.838H128.891V283.461H127.701ZM131.023 280.077C132.37 280.077 133.17 279.038 133.17 277.322V277.309C133.17 275.593 132.37 274.554 131.023 274.554C129.684 274.554 128.863 275.606 128.863 277.309V277.322C128.863 279.024 129.684 280.077 131.023 280.077ZM138.714 281.13C137.039 281.13 136.178 280.146 136.178 278.402V273.631H137.367V278.115C137.367 279.441 137.846 280.077 139.021 280.077C140.32 280.077 141.011 279.284 141.011 277.992V273.631H142.2V281H141.011V279.899H140.901C140.539 280.686 139.794 281.13 138.714 281.13ZM147.04 281.055C145.522 281.055 144.887 280.494 144.887 279.086V274.615H143.725V273.631H144.887V271.724H146.117V273.631H147.73V274.615H146.117V278.785C146.117 279.653 146.418 280.002 147.184 280.002C147.396 280.002 147.512 279.995 147.73 279.975V280.986C147.498 281.027 147.272 281.055 147.04 281.055ZM152.406 281.13C150.301 281.13 149.029 279.653 149.029 277.343V277.336C149.029 275.06 150.328 273.501 152.331 273.501C154.334 273.501 155.551 274.991 155.551 277.192V277.657H150.246C150.28 279.182 151.121 280.07 152.434 280.07C153.432 280.07 154.047 279.599 154.245 279.154L154.272 279.093H155.462L155.448 279.147C155.195 280.146 154.143 281.13 152.406 281.13ZM152.324 274.561C151.23 274.561 150.396 275.306 150.267 276.707H154.341C154.218 275.251 153.411 274.561 152.324 274.561ZM157.396 281V273.631H158.586V274.725H158.695C158.976 273.952 159.666 273.501 160.664 273.501C160.89 273.501 161.143 273.528 161.259 273.549V274.704C161.013 274.663 160.787 274.636 160.527 274.636C159.393 274.636 158.586 275.354 158.586 276.434V281H157.396ZM169.195 281.13C167.555 281.13 166.427 280.337 166.29 279.12H167.507C167.705 279.735 168.293 280.139 169.236 280.139C170.228 280.139 170.932 279.667 170.932 278.997V278.983C170.932 278.484 170.556 278.136 169.646 277.917L168.505 277.644C167.124 277.315 166.502 276.714 166.502 275.654V275.647C166.502 274.424 167.678 273.501 169.243 273.501C170.788 273.501 171.861 274.273 172.025 275.477H170.856C170.699 274.896 170.125 274.492 169.236 274.492C168.361 274.492 167.719 274.943 167.719 275.593V275.606C167.719 276.105 168.088 276.42 168.956 276.632L170.091 276.905C171.479 277.24 172.148 277.842 172.148 278.895V278.908C172.148 280.221 170.87 281.13 169.195 281.13ZM177.009 281.13C174.944 281.13 173.625 279.633 173.625 277.295V277.281C173.625 274.991 174.938 273.501 177.002 273.501C178.793 273.501 179.866 274.533 180.085 275.846L180.092 275.887H178.909L178.902 275.866C178.718 275.142 178.062 274.554 177.002 274.554C175.676 274.554 174.842 275.62 174.842 277.281V277.295C174.842 278.99 175.689 280.077 177.002 280.077C177.993 280.077 178.622 279.64 178.896 278.819L178.909 278.778L180.085 278.771L180.071 278.847C179.771 280.18 178.779 281.13 177.009 281.13ZM182.457 272.209C182.006 272.209 181.637 271.84 181.637 271.389C181.637 270.938 182.006 270.568 182.457 270.568C182.908 270.568 183.277 270.938 183.277 271.389C183.277 271.84 182.908 272.209 182.457 272.209ZM181.855 281V273.631H183.045V281H181.855ZM188.295 281.13C186.189 281.13 184.918 279.653 184.918 277.343V277.336C184.918 275.06 186.217 273.501 188.22 273.501C190.223 273.501 191.439 274.991 191.439 277.192V277.657H186.135C186.169 279.182 187.01 280.07 188.322 280.07C189.32 280.07 189.936 279.599 190.134 279.154L190.161 279.093H191.351L191.337 279.147C191.084 280.146 190.031 281.13 188.295 281.13ZM188.213 274.561C187.119 274.561 186.285 275.306 186.155 276.707H190.229C190.106 275.251 189.3 274.561 188.213 274.561ZM193.285 281V273.631H194.475V274.738H194.584C194.953 273.959 195.644 273.501 196.73 273.501C198.385 273.501 199.308 274.479 199.308 276.229V281H198.118V276.516C198.118 275.189 197.571 274.554 196.396 274.554C195.22 274.554 194.475 275.347 194.475 276.639V281H193.285ZM204.476 281.13C202.411 281.13 201.092 279.633 201.092 277.295V277.281C201.092 274.991 202.404 273.501 204.469 273.501C206.26 273.501 207.333 274.533 207.552 275.846L207.559 275.887H206.376L206.369 275.866C206.185 275.142 205.528 274.554 204.469 274.554C203.143 274.554 202.309 275.62 202.309 277.281V277.295C202.309 278.99 203.156 280.077 204.469 280.077C205.46 280.077 206.089 279.64 206.362 278.819L206.376 278.778L207.552 278.771L207.538 278.847C207.237 280.18 206.246 281.13 204.476 281.13ZM212.303 281.13C210.197 281.13 208.926 279.653 208.926 277.343V277.336C208.926 275.06 210.225 273.501 212.228 273.501C214.23 273.501 215.447 274.991 215.447 277.192V277.657H210.143C210.177 279.182 211.018 280.07 212.33 280.07C213.328 280.07 213.943 279.599 214.142 279.154L214.169 279.093H215.358L215.345 279.147C215.092 280.146 214.039 281.13 212.303 281.13ZM212.221 274.561C211.127 274.561 210.293 275.306 210.163 276.707H214.237C214.114 275.251 213.308 274.561 212.221 274.561ZM223.254 281.13C221.853 281.13 220.793 280.282 220.793 278.942V278.929C220.793 277.616 221.764 276.857 223.479 276.755L225.592 276.625V275.955C225.592 275.046 225.038 274.554 223.938 274.554C223.056 274.554 222.475 274.882 222.283 275.456L222.276 275.477H221.087L221.094 275.436C221.285 274.28 222.406 273.501 223.979 273.501C225.776 273.501 226.781 274.424 226.781 275.955V281H225.592V279.913H225.482C225.018 280.699 224.245 281.13 223.254 281.13ZM222.01 278.915C222.01 279.66 222.646 280.098 223.5 280.098C224.71 280.098 225.592 279.305 225.592 278.252V277.582L223.623 277.705C222.502 277.773 222.01 278.17 222.01 278.901V278.915ZM228.955 281V273.631H230.145V274.738H230.254C230.623 273.959 231.313 273.501 232.4 273.501C234.055 273.501 234.978 274.479 234.978 276.229V281H233.788V276.516C233.788 275.189 233.241 274.554 232.065 274.554C230.89 274.554 230.145 275.347 230.145 276.639V281H228.955ZM239.852 281.13C237.985 281.13 236.762 279.619 236.762 277.322V277.309C236.762 274.998 237.979 273.501 239.852 273.501C240.863 273.501 241.745 274.007 242.148 274.793H242.258V270.705H243.447V281H242.258V279.824H242.148C241.697 280.645 240.877 281.13 239.852 281.13ZM240.125 280.077C241.465 280.077 242.285 279.024 242.285 277.322V277.309C242.285 275.606 241.465 274.554 240.125 274.554C238.778 274.554 237.979 275.593 237.979 277.309V277.322C237.979 279.038 238.778 280.077 240.125 280.077ZM27.1309 301.13C25.7295 301.13 24.6699 300.282 24.6699 298.942V298.929C24.6699 297.616 25.6406 296.857 27.3564 296.755L29.4688 296.625V295.955C29.4688 295.046 28.915 294.554 27.8145 294.554C26.9326 294.554 26.3516 294.882 26.1602 295.456L26.1533 295.477H24.9639L24.9707 295.436C25.1621 294.28 26.2832 293.501 27.8555 293.501C29.6533 293.501 30.6582 294.424 30.6582 295.955V301H29.4688V299.913H29.3594C28.8945 300.699 28.1221 301.13 27.1309 301.13ZM25.8867 298.915C25.8867 299.66 26.5225 300.098 27.377 300.098C28.5869 300.098 29.4688 299.305 29.4688 298.252V297.582L27.5 297.705C26.3789 297.773 25.8867 298.17 25.8867 298.901V298.915ZM32.832 301V293.631H34.0215V294.725H34.1309C34.4111 293.952 35.1016 293.501 36.0996 293.501C36.3252 293.501 36.5781 293.528 36.6943 293.549V294.704C36.4482 294.663 36.2227 294.636 35.9629 294.636C34.8281 294.636 34.0215 295.354 34.0215 296.434V301H32.832ZM40.9189 301.055C39.4014 301.055 38.7656 300.494 38.7656 299.086V294.615H37.6035V293.631H38.7656V291.724H39.9961V293.631H41.6094V294.615H39.9961V298.785C39.9961 299.653 40.2969 300.002 41.0625 300.002C41.2744 300.002 41.3906 299.995 41.6094 299.975V300.986C41.377 301.027 41.1514 301.055 40.9189 301.055ZM44.0156 292.209C43.5645 292.209 43.1953 291.84 43.1953 291.389C43.1953 290.938 43.5645 290.568 44.0156 290.568C44.4668 290.568 44.8359 290.938 44.8359 291.389C44.8359 291.84 44.4668 292.209 44.0156 292.209ZM43.4141 301V293.631H44.6035V301H43.4141ZM47.3379 301V294.615H46.1143V293.631H47.3379V292.811C47.3379 291.341 48.0762 290.637 49.4775 290.637C49.7646 290.637 50.0244 290.657 50.2705 290.705V291.655C50.127 291.628 49.9287 291.621 49.7168 291.621C48.8691 291.621 48.5273 292.038 48.5273 292.845V293.631H50.2021V294.615H48.5273V301H47.3379ZM52.5469 292.209C52.0957 292.209 51.7266 291.84 51.7266 291.389C51.7266 290.938 52.0957 290.568 52.5469 290.568C52.998 290.568 53.3672 290.938 53.3672 291.389C53.3672 291.84 52.998 292.209 52.5469 292.209ZM51.9453 301V293.631H53.1348V301H51.9453ZM58.3916 301.13C56.3271 301.13 55.0078 299.633 55.0078 297.295V297.281C55.0078 294.991 56.3203 293.501 58.3848 293.501C60.1758 293.501 61.249 294.533 61.4678 295.846L61.4746 295.887H60.292L60.2852 295.866C60.1006 295.142 59.4443 294.554 58.3848 294.554C57.0586 294.554 56.2246 295.62 56.2246 297.281V297.295C56.2246 298.99 57.0723 300.077 58.3848 300.077C59.376 300.077 60.0049 299.64 60.2783 298.819L60.292 298.778L61.4678 298.771L61.4541 298.847C61.1533 300.18 60.1621 301.13 58.3916 301.13ZM63.8398 292.209C63.3887 292.209 63.0195 291.84 63.0195 291.389C63.0195 290.938 63.3887 290.568 63.8398 290.568C64.291 290.568 64.6602 290.938 64.6602 291.389C64.6602 291.84 64.291 292.209 63.8398 292.209ZM63.2383 301V293.631H64.4277V301H63.2383ZM68.6934 301.13C67.292 301.13 66.2324 300.282 66.2324 298.942V298.929C66.2324 297.616 67.2031 296.857 68.9189 296.755L71.0312 296.625V295.955C71.0312 295.046 70.4775 294.554 69.377 294.554C68.4951 294.554 67.9141 294.882 67.7227 295.456L67.7158 295.477H66.5264L66.5332 295.436C66.7246 294.28 67.8457 293.501 69.418 293.501C71.2158 293.501 72.2207 294.424 72.2207 295.955V301H71.0312V299.913H70.9219C70.457 300.699 69.6846 301.13 68.6934 301.13ZM67.4492 298.915C67.4492 299.66 68.085 300.098 68.9395 300.098C70.1494 300.098 71.0312 299.305 71.0312 298.252V297.582L69.0625 297.705C67.9414 297.773 67.4492 298.17 67.4492 298.901V298.915ZM74.4629 301V290.705H75.6523V301H74.4629ZM82.502 292.209C82.0508 292.209 81.6816 291.84 81.6816 291.389C81.6816 290.938 82.0508 290.568 82.502 290.568C82.9531 290.568 83.3223 290.938 83.3223 291.389C83.3223 291.84 82.9531 292.209 82.502 292.209ZM81.9004 301V293.631H83.0898V301H81.9004ZM85.332 301V293.631H86.5215V294.738H86.6309C87 293.959 87.6904 293.501 88.7773 293.501C90.4316 293.501 91.3545 294.479 91.3545 296.229V301H90.165V296.516C90.165 295.189 89.6182 294.554 88.4424 294.554C87.2666 294.554 86.5215 295.347 86.5215 296.639V301H85.332ZM96.126 301.055C94.6084 301.055 93.9727 300.494 93.9727 299.086V294.615H92.8105V293.631H93.9727V291.724H95.2031V293.631H96.8164V294.615H95.2031V298.785C95.2031 299.653 95.5039 300.002 96.2695 300.002C96.4814 300.002 96.5977 299.995 96.8164 299.975V300.986C96.584 301.027 96.3584 301.055 96.126 301.055ZM101.492 301.13C99.3867 301.13 98.1152 299.653 98.1152 297.343V297.336C98.1152 295.06 99.4141 293.501 101.417 293.501C103.42 293.501 104.637 294.991 104.637 297.192V297.657H99.332C99.3662 299.182 100.207 300.07 101.52 300.07C102.518 300.07 103.133 299.599 103.331 299.154L103.358 299.093H104.548L104.534 299.147C104.281 300.146 103.229 301.13 101.492 301.13ZM101.41 294.561C100.316 294.561 99.4824 295.306 99.3525 296.707H103.427C103.304 295.251 102.497 294.561 101.41 294.561ZM106.551 301V290.705H107.74V301H106.551ZM110.092 301V290.705H111.281V301H110.092ZM114.193 292.209C113.742 292.209 113.373 291.84 113.373 291.389C113.373 290.938 113.742 290.568 114.193 290.568C114.645 290.568 115.014 290.938 115.014 291.389C115.014 291.84 114.645 292.209 114.193 292.209ZM113.592 301V293.631H114.781V301H113.592ZM120.059 303.598C118.281 303.598 117.146 302.798 116.962 301.588L116.976 301.581H118.206L118.213 301.588C118.343 302.148 118.999 302.545 120.059 302.545C121.378 302.545 122.164 301.923 122.164 300.836V299.346H122.055C121.59 300.159 120.756 300.617 119.744 300.617C117.837 300.617 116.654 299.141 116.654 297.076V297.062C116.654 294.998 117.844 293.501 119.771 293.501C120.811 293.501 121.617 294.014 122.068 294.848H122.15V293.631H123.34V300.897C123.34 302.545 122.068 303.598 120.059 303.598ZM120.004 299.564C121.371 299.564 122.191 298.539 122.191 297.076V297.062C122.191 295.6 121.364 294.554 120.004 294.554C118.637 294.554 117.871 295.6 117.871 297.062V297.076C117.871 298.539 118.637 299.564 120.004 299.564ZM128.562 301.13C126.457 301.13 125.186 299.653 125.186 297.343V297.336C125.186 295.06 126.484 293.501 128.487 293.501C130.49 293.501 131.707 294.991 131.707 297.192V297.657H126.402C126.437 299.182 127.277 300.07 128.59 300.07C129.588 300.07 130.203 299.599 130.401 299.154L130.429 299.093H131.618L131.604 299.147C131.352 300.146 130.299 301.13 128.562 301.13ZM128.48 294.561C127.387 294.561 126.553 295.306 126.423 296.707H130.497C130.374 295.251 129.567 294.561 128.48 294.561ZM133.553 301V293.631H134.742V294.738H134.852C135.221 293.959 135.911 293.501 136.998 293.501C138.652 293.501 139.575 294.479 139.575 296.229V301H138.386V296.516C138.386 295.189 137.839 294.554 136.663 294.554C135.487 294.554 134.742 295.347 134.742 296.639V301H133.553ZM144.743 301.13C142.679 301.13 141.359 299.633 141.359 297.295V297.281C141.359 294.991 142.672 293.501 144.736 293.501C146.527 293.501 147.601 294.533 147.819 295.846L147.826 295.887H146.644L146.637 295.866C146.452 295.142 145.796 294.554 144.736 294.554C143.41 294.554 142.576 295.62 142.576 297.281V297.295C142.576 298.99 143.424 300.077 144.736 300.077C145.728 300.077 146.356 299.64 146.63 298.819L146.644 298.778L147.819 298.771L147.806 298.847C147.505 300.18 146.514 301.13 144.743 301.13ZM152.57 301.13C150.465 301.13 149.193 299.653 149.193 297.343V297.336C149.193 295.06 150.492 293.501 152.495 293.501C154.498 293.501 155.715 294.991 155.715 297.192V297.657H150.41C150.444 299.182 151.285 300.07 152.598 300.07C153.596 300.07 154.211 299.599 154.409 299.154L154.437 299.093H155.626L155.612 299.147C155.359 300.146 154.307 301.13 152.57 301.13ZM152.488 294.561C151.395 294.561 150.561 295.306 150.431 296.707H154.505C154.382 295.251 153.575 294.561 152.488 294.561ZM158.531 301.068C158.046 301.068 157.643 300.665 157.643 300.18C157.643 299.688 158.046 299.291 158.531 299.291C159.023 299.291 159.42 299.688 159.42 300.18C159.42 300.665 159.023 301.068 158.531 301.068Z"
                  fill="#828299"
                />
              </g>
            </g>
          </g>
          <path
            d="M1 12.0002C1 5.37283 6.37258 0.000244141 13 0.000244141H269C275.627 0.000244141 281 5.37283 281 12.0002V168C281 174.628 275.627 180 269 180H13C6.37259 180 1 174.628 1 168V12.0002Z"
            fill="url(#paint0_linear_5956_94496)"
          />
          <path
            d="M216.533 70.0002C216.533 64.4774 212.056 60.0002 206.533 60.0002H162.133C156.61 60.0002 152.133 64.4774 152.133 70.0002C152.133 75.5231 156.61 80.0002 162.133 80.0002H206.533C212.056 80.0002 216.533 75.5231 216.533 70.0002Z"
            fill="#3D3D4D"
          />
          <path
            d="M159.526 75.0002V65.136H163.244C165.097 65.136 166.409 66.4143 166.409 68.2874V68.301C166.409 70.1741 165.097 71.4797 163.244 71.4797H160.756V75.0002H159.526ZM162.93 66.2297H160.756V70.386H162.93C164.338 70.386 165.152 69.6135 165.152 68.3147V68.301C165.152 67.0022 164.338 66.2297 162.93 66.2297ZM168.276 75.0002V67.6311H169.465V68.7249H169.575C169.855 67.9524 170.545 67.5012 171.543 67.5012C171.769 67.5012 172.022 67.5286 172.138 67.5491V68.7043C171.892 68.6633 171.666 68.636 171.407 68.636C170.272 68.636 169.465 69.3538 169.465 70.4338V75.0002H168.276ZM176.431 75.1301C174.332 75.1301 173.034 73.6809 173.034 71.3225V71.3088C173.034 68.9436 174.332 67.5012 176.431 67.5012C178.53 67.5012 179.828 68.9436 179.828 71.3088V71.3225C179.828 73.6809 178.53 75.1301 176.431 75.1301ZM176.431 74.0774C177.826 74.0774 178.612 73.0588 178.612 71.3225V71.3088C178.612 69.5657 177.826 68.554 176.431 68.554C175.036 68.554 174.25 69.5657 174.25 71.3088V71.3225C174.25 73.0588 175.036 74.0774 176.431 74.0774ZM184.395 75.1301C182.529 75.1301 181.305 73.6194 181.305 71.3225V71.3088C181.305 68.9983 182.522 67.5012 184.395 67.5012C185.407 67.5012 186.288 68.0071 186.692 68.7932H186.801V64.7053H187.991V75.0002H186.801V73.8245H186.692C186.241 74.6448 185.42 75.1301 184.395 75.1301ZM184.668 74.0774C186.008 74.0774 186.828 73.0247 186.828 71.3225V71.3088C186.828 69.6067 186.008 68.554 184.668 68.554C183.322 68.554 182.522 69.593 182.522 71.3088V71.3225C182.522 73.0383 183.322 74.0774 184.668 74.0774ZM192.742 75.1301C191.067 75.1301 190.205 74.1458 190.205 72.4026V67.6311H191.395V72.1155C191.395 73.4417 191.873 74.0774 193.049 74.0774C194.348 74.0774 195.038 73.2844 195.038 71.9924V67.6311H196.228V75.0002H195.038V73.8997H194.929C194.567 74.6858 193.822 75.1301 192.742 75.1301ZM201.464 75.1301C199.4 75.1301 198.08 73.6331 198.08 71.2952V71.2815C198.08 68.9915 199.393 67.5012 201.457 67.5012C203.248 67.5012 204.322 68.5334 204.54 69.8459L204.547 69.887H203.365L203.358 69.8665C203.173 69.1418 202.517 68.554 201.457 68.554C200.131 68.554 199.297 69.6204 199.297 71.2815V71.2952C199.297 72.9905 200.145 74.0774 201.457 74.0774C202.449 74.0774 203.077 73.6399 203.351 72.8196L203.365 72.7786L204.54 72.7717L204.527 72.8469C204.226 74.1799 203.235 75.1301 201.464 75.1301ZM209.038 75.0549C207.521 75.0549 206.885 74.4944 206.885 73.0862V68.6155H205.723V67.6311H206.885V65.7239H208.116V67.6311H209.729V68.6155H208.116V72.7854C208.116 73.6536 208.416 74.0022 209.182 74.0022C209.394 74.0022 209.51 73.9954 209.729 73.9749V74.9866C209.496 75.0276 209.271 75.0549 209.038 75.0549Z"
            fill="#828299"
          />
          <path
            d="M139.522 54.4995C143.914 55.1279 153.161 55.757 153.533 55.832L148.334 60.0413L146.658 65.9868L139.522 54.4995Z"
            fill="#3D3D4D"
          />
          <path
            d="M23.4 149.5H93.9V130.5H23.4C21.467 130.5 19.9 132.067 19.9 134V146C19.9 147.933 21.467 149.5 23.4 149.5Z"
            fill="#292933"
          />
          <path
            d="M23.4 149.5H93.9V130.5H23.4C21.467 130.5 19.9 132.067 19.9 134V146C19.9 147.933 21.467 149.5 23.4 149.5Z"
            stroke="#3D3D4D"
          />
          <path
            d="M24.8805 145V135.136H26.111V139.401H31.525V135.136H32.7555V145H31.525V140.509H26.111V145H24.8805ZM38.1285 145.13C36.0231 145.13 34.7516 143.653 34.7516 141.343V141.336C34.7516 139.06 36.0504 137.501 38.0533 137.501C40.0563 137.501 41.2731 138.991 41.2731 141.192V141.657H35.9684C36.0026 143.182 36.8434 144.07 38.1559 144.07C39.1539 144.07 39.7692 143.599 39.9674 143.154L39.9948 143.093H41.1842L41.1705 143.147C40.9176 144.146 39.8649 145.13 38.1285 145.13ZM38.0465 138.561C36.9528 138.561 36.1188 139.306 35.9889 140.707H40.0631C39.9401 139.251 39.1334 138.561 38.0465 138.561ZM43.1871 145V134.705H44.3766V145H43.1871ZM46.7282 145V134.705H47.9176V145H46.7282ZM53.2291 145.13C51.1305 145.13 49.8317 143.681 49.8317 141.322V141.309C49.8317 138.943 51.1305 137.501 53.2291 137.501C55.3278 137.501 56.6266 138.943 56.6266 141.309V141.322C56.6266 143.681 55.3278 145.13 53.2291 145.13ZM53.2291 144.077C54.6237 144.077 55.4098 143.059 55.4098 141.322V141.309C55.4098 139.565 54.6237 138.554 53.2291 138.554C51.8346 138.554 51.0485 139.565 51.0485 141.309V141.322C51.0485 143.059 51.8346 144.077 53.2291 144.077ZM61.7741 145L65.4108 135.136H66.6276L70.2643 145H68.9723L67.9811 142.177H64.0573L63.066 145H61.7741ZM65.9645 136.729L64.4196 141.131H67.6188L66.0739 136.729H65.9645ZM71.9117 145V134.705H73.1012V145H71.9117ZM77.4078 145.13C76.0065 145.13 74.9469 144.282 74.9469 142.942V142.929C74.9469 141.616 75.9176 140.857 77.6334 140.755L79.7457 140.625V139.955C79.7457 139.046 79.192 138.554 78.0914 138.554C77.2096 138.554 76.6285 138.882 76.4371 139.456L76.4303 139.477H75.2408L75.2477 139.436C75.4391 138.28 76.5602 137.501 78.1324 137.501C79.9303 137.501 80.9352 138.424 80.9352 139.955V145H79.7457V143.913H79.6364C79.1715 144.699 78.3991 145.13 77.4078 145.13ZM76.1637 142.915C76.1637 143.66 76.7994 144.098 77.6539 144.098C78.8639 144.098 79.7457 143.305 79.7457 142.252V141.582L77.777 141.705C76.6559 141.773 76.1637 142.17 76.1637 142.901V142.915ZM83.109 145V137.631H84.2985V138.738H84.4078C84.777 137.959 85.4674 137.501 86.5543 137.501C88.2086 137.501 89.1315 138.479 89.1315 140.229V145H87.942V140.516C87.942 139.189 87.3951 138.554 86.2194 138.554C85.0436 138.554 84.2985 139.347 84.2985 140.639V145H83.109Z"
            fill="#828299"
          />
          <path
            d="M187.533 124C187.533 126.209 185.742 128 183.533 128H93.5334V112C93.5334 109.791 95.3242 108 97.5334 108H183.533C185.742 108 187.533 109.791 187.533 112V124Z"
            fill="#3D3D4D"
          />
          <path
            d="M99.2375 123V113.136H102.956C104.809 113.136 106.121 114.414 106.121 116.287V116.301C106.121 118.174 104.809 119.479 102.956 119.479H100.468V123H99.2375ZM102.642 114.229H100.468V118.386H102.642C104.05 118.386 104.863 117.613 104.863 116.314V116.301C104.863 115.002 104.05 114.229 102.642 114.229ZM108.138 123V113.136H109.567L112.944 121.366H113.053L116.43 113.136H117.859V123H116.71V115.467H116.635L113.518 123H112.479L109.361 115.467H109.286V123H108.138ZM124.79 114.209C124.339 114.209 123.97 113.84 123.97 113.389C123.97 112.937 124.339 112.568 124.79 112.568C125.241 112.568 125.611 112.937 125.611 113.389C125.611 113.84 125.241 114.209 124.79 114.209ZM124.189 123V115.631H125.378V123H124.189ZM130.15 123.13C128.509 123.13 127.381 122.337 127.244 121.12H128.461C128.659 121.735 129.247 122.139 130.191 122.139C131.182 122.139 131.886 121.667 131.886 120.997V120.983C131.886 120.484 131.51 120.136 130.601 119.917L129.459 119.644C128.078 119.315 127.456 118.714 127.456 117.654V117.647C127.456 116.424 128.632 115.501 130.197 115.501C131.742 115.501 132.816 116.273 132.98 117.477H131.811C131.653 116.896 131.079 116.492 130.191 116.492C129.316 116.492 128.673 116.943 128.673 117.593V117.606C128.673 118.105 129.042 118.42 129.91 118.632L131.045 118.905C132.433 119.24 133.103 119.842 133.103 120.895V120.908C133.103 122.221 131.824 123.13 130.15 123.13ZM141.894 123.13C139.788 123.13 138.517 121.653 138.517 119.343V119.336C138.517 117.06 139.816 115.501 141.819 115.501C143.821 115.501 145.038 116.991 145.038 119.192V119.657H139.734C139.768 121.182 140.609 122.07 141.921 122.07C142.919 122.07 143.534 121.599 143.733 121.154L143.76 121.093H144.949L144.936 121.147C144.683 122.145 143.63 123.13 141.894 123.13ZM141.812 116.561C140.718 116.561 139.884 117.306 139.754 118.707H143.828C143.705 117.251 142.899 116.561 141.812 116.561ZM149.605 123.13C147.738 123.13 146.515 121.619 146.515 119.322V119.309C146.515 116.998 147.732 115.501 149.605 115.501C150.616 115.501 151.498 116.007 151.902 116.793H152.011V112.705H153.2V123H152.011V121.824H151.902C151.45 122.645 150.63 123.13 149.605 123.13ZM149.878 122.077C151.218 122.077 152.038 121.024 152.038 119.322V119.309C152.038 117.606 151.218 116.554 149.878 116.554C148.531 116.554 147.732 117.593 147.732 119.309V119.322C147.732 121.038 148.531 122.077 149.878 122.077ZM156.112 114.209C155.661 114.209 155.292 113.84 155.292 113.389C155.292 112.937 155.661 112.568 156.112 112.568C156.564 112.568 156.933 112.937 156.933 113.389C156.933 113.84 156.564 114.209 156.112 114.209ZM155.511 123V115.631H156.7V123H155.511ZM161.561 123.055C160.043 123.055 159.407 122.494 159.407 121.086V116.615H158.245V115.631H159.407V113.724H160.638V115.631H162.251V116.615H160.638V120.785C160.638 121.653 160.939 122.002 161.704 122.002C161.916 122.002 162.032 121.995 162.251 121.975V122.986C162.019 123.027 161.793 123.055 161.561 123.055ZM164.657 114.209C164.206 114.209 163.837 113.84 163.837 113.389C163.837 112.937 164.206 112.568 164.657 112.568C165.109 112.568 165.478 112.937 165.478 113.389C165.478 113.84 165.109 114.209 164.657 114.209ZM164.056 123V115.631H165.245V123H164.056ZM167.487 123V115.631H168.677V116.738H168.786C169.155 115.959 169.846 115.501 170.933 115.501C172.587 115.501 173.51 116.479 173.51 118.229V123H172.32V118.516C172.32 117.189 171.774 116.554 170.598 116.554C169.422 116.554 168.677 117.347 168.677 118.639V123H167.487ZM178.698 125.598C176.921 125.598 175.786 124.798 175.602 123.588L175.615 123.581H176.846L176.853 123.588C176.983 124.148 177.639 124.545 178.698 124.545C180.018 124.545 180.804 123.923 180.804 122.836V121.346H180.694C180.23 122.159 179.396 122.617 178.384 122.617C176.477 122.617 175.294 121.141 175.294 119.076V119.062C175.294 116.998 176.484 115.501 178.411 115.501C179.45 115.501 180.257 116.014 180.708 116.848H180.79V115.631H181.98V122.897C181.98 124.545 180.708 125.598 178.698 125.598ZM178.644 121.564C180.011 121.564 180.831 120.539 180.831 119.076V119.062C180.831 117.6 180.004 116.554 178.644 116.554C177.277 116.554 176.511 117.6 176.511 119.062V119.076C176.511 120.539 177.277 121.564 178.644 121.564Z"
            fill="#828299"
          />
          <path d="M95.4001 128H93.5334V150H95.4001V128Z" fill="#3D3D4D" />
        </g>
      </g>
      <defs>
        <filter
          id="filter0_d_5956_94496"
          x="-20"
          y="-15"
          width="320"
          height="271"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_94496" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_94496" result="shape" />
        </filter>
        <filter
          id="filter1_d_5956_94496"
          x="-12"
          y="29"
          width="304"
          height="299.598"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_94496" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_94496" result="shape" />
        </filter>
        <linearGradient
          id="paint0_linear_5956_94496"
          x1="0.999995"
          y1="3.21649e-06"
          x2="164.744"
          y2="254.731"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#1E1E26" stopOpacity="0" />
          <stop offset="0.732193" stopColor="#1E1E26" />
        </linearGradient>
        <clipPath id="clip0_5956_94496">
          <rect width="280" height="180" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useColorScheme } from '@novu/design-system';
export const Development = () => {
const { colorScheme } = useColorScheme();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/GetStartedPageV2/GithubAction.tsx
Tamaño: 158022 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useColorScheme } from '@novu/design-system';

export const GithubAction = () => {
  const { colorScheme } = useColorScheme();

  if (colorScheme === 'light') {
    return (
      <svg xmlns="http://www.w3.org/2000/svg" width="280" height="180" viewBox="0 0 280 180" fill="none">
        <mask
          id="mask0_6003_242425"
          style={{
            maskType: 'luminance',
          }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="280"
          height="180"
        >
          <path
            d="M0 12C0 5.37258 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V168C280 174.627 274.627 180 268 180H12C5.37259 180 0 174.627 0 168V12Z"
            fill="white"
          />
        </mask>
        <g mask="url(#mask0_6003_242425)">
          <mask
            id="mask1_6003_242425"
            style={{
              maskType: 'luminance',
            }}
            maskUnits="userSpaceOnUse"
            x="0"
            y="0"
            width="280"
            height="248"
          >
            <path
              d="M0 12C0 5.37259 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V236C280 242.627 274.627 248 268 248H12C5.37259 248 0 242.627 0 236V12Z"
              fill="white"
            />
          </mask>
          <g mask="url(#mask1_6003_242425)">
            <mask
              id="mask2_6003_242425"
              style={{
                maskType: 'luminance',
              }}
              maskUnits="userSpaceOnUse"
              x="0"
              y="0"
              width="280"
              height="248"
            >
              <path
                d="M0 8.00001C0 3.58173 3.58172 0 8 0H272C276.418 0 280 3.58172 280 8V248H0V8.00001Z"
                fill="white"
              />
            </mask>
            <g mask="url(#mask2_6003_242425)">
              <path
                d="M0 8.00001C0 3.58173 3.58172 0 8 0H272C276.418 0 280 3.58172 280 8V248H0V8.00001Z"
                fill="white"
              />
              <mask
                id="mask3_6003_242425"
                style={{
                  maskType: 'luminance',
                }}
                maskUnits="userSpaceOnUse"
                x="8"
                y="8"
                width="16"
                height="16"
              >
                <path d="M24 8H8V24H24V8Z" fill="white" />
              </mask>
              <g mask="url(#mask3_6003_242425)">
                <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M16.0066 8C11.5792 8 8 11.6667 8 16.2028C8 19.8288 10.2933 22.8981 13.4747 23.9844C13.8725 24.0661 14.0182 23.8079 14.0182 23.5908C14.0182 23.4006 14.005 22.7488 14.005 22.0696C11.7778 22.5586 11.314 21.0918 11.314 21.0918C10.9561 20.1411 10.4257 19.8968 10.4257 19.8968C9.69674 19.3943 10.4788 19.3943 10.4788 19.3943C11.2874 19.4486 11.7118 20.2363 11.7118 20.2363C12.4275 21.4856 13.5807 21.1326 14.0447 20.9153C14.1109 20.3856 14.3232 20.0189 14.5485 19.8153C12.7721 19.6251 10.9031 18.919 10.9031 15.7681C10.9031 14.8718 11.2211 14.1385 11.7249 13.5681C11.6454 13.3645 11.3669 12.5223 11.8045 11.3952C11.8045 11.3952 12.4806 11.1778 14.0049 12.2371C14.6575 12.0576 15.3305 11.9663 16.0066 11.9655C16.6827 11.9655 17.3718 12.0606 18.0082 12.2371C19.5327 11.1778 20.2087 11.3952 20.2087 11.3952C20.6463 12.5223 20.3677 13.3645 20.2882 13.5681C20.8053 14.1385 21.1101 14.8718 21.1101 15.7681C21.1101 18.919 19.2411 19.6115 17.4515 19.8153C17.7432 20.0733 17.9949 20.5621 17.9949 21.3363C17.9949 22.4363 17.9818 23.3191 17.9818 23.5906C17.9818 23.8079 18.1277 24.0661 18.5253 23.9846C21.7067 22.8979 24 19.8288 24 16.2028C24.0131 11.6667 20.4208 8 16.0066 8Z"
                  fill="#A1A1B2"
                />
              </g>
              <path
                d="M33.4346 21.2461C30.5771 21.2461 28.7998 19.2568 28.7998 16.0713V16.0576C28.7998 12.9062 30.5977 10.8896 33.4072 10.8896C35.6836 10.8896 37.3242 12.1953 37.6592 14.123L37.666 14.1914H35.916L35.8955 14.123C35.5742 13.043 34.6719 12.4141 33.4072 12.4141C31.6846 12.4141 30.5977 13.8154 30.5977 16.0439V16.0576C30.5977 18.3203 31.7051 19.7217 33.4619 19.7217C34.9658 19.7217 35.9912 18.7852 36.0117 17.3838L36.0186 17.1787H33.6533V15.832H37.748V17.0625C37.748 19.6123 36.0664 21.2461 33.4346 21.2461ZM40.4961 12.2773C39.9355 12.2773 39.4775 11.833 39.4775 11.2725C39.4775 10.7188 39.9355 10.2676 40.4961 10.2676C41.0498 10.2676 41.5078 10.7188 41.5078 11.2725C41.5078 11.833 41.0498 12.2773 40.4961 12.2773ZM39.6416 21V13.5283H41.3438V21H39.6416ZM46.375 21.0342C44.6592 21.0342 43.9551 20.46 43.9551 19.0176V14.8477H42.793V13.5283H43.9551V11.6963H45.6846V13.5283H47.2637V14.8477H45.6846V18.6143C45.6846 19.3594 45.9785 19.6738 46.6895 19.6738C46.9287 19.6738 47.0586 19.667 47.2637 19.6465V20.959C47.0176 21.0068 46.7031 21.0342 46.375 21.0342ZM49.1367 21V11.1357H50.9004V15.2373H55.6992V11.1357H57.4561V21H55.6992V16.7207H50.9004V21H49.1367ZM62.1934 21.1504C60.5117 21.1504 59.6504 20.1387 59.6504 18.3613V13.5283H61.3525V17.9717C61.3525 19.127 61.7832 19.7148 62.8086 19.7148C63.9092 19.7148 64.4971 19.0039 64.4971 17.8828V13.5283H66.1992V21H64.4971V19.8652H64.3809C64.0322 20.665 63.2734 21.1504 62.1934 21.1504ZM72.4336 21.123C71.3877 21.123 70.5742 20.6445 70.1641 19.8311H70.0479V21H68.3457V10.6367H70.0479V14.7178H70.1641C70.5537 13.9111 71.4082 13.4053 72.4336 13.4053C74.3271 13.4053 75.5029 14.8818 75.5029 17.2607V17.2744C75.5029 19.6396 74.3066 21.123 72.4336 21.123ZM71.9004 19.6875C73.0625 19.6875 73.7666 18.7783 73.7666 17.2744V17.2607C73.7666 15.7568 73.0625 14.8408 71.9004 14.8408C70.7451 14.8408 70.0273 15.7637 70.0273 17.2607V17.2744C70.0273 18.7715 70.7451 19.6875 71.9004 19.6875ZM82.9746 21.123C81.5527 21.123 80.5205 20.248 80.5205 18.8877V18.874C80.5205 17.541 81.5391 16.7617 83.3574 16.6523L85.2783 16.5361V15.8936C85.2783 15.1484 84.793 14.7383 83.877 14.7383C83.0977 14.7383 82.5918 15.0186 82.4209 15.5107L82.4141 15.5381H80.8076L80.8145 15.4766C80.9785 14.2188 82.1816 13.3848 83.959 13.3848C85.8799 13.3848 86.96 14.3145 86.96 15.8936V21H85.2783V19.9746H85.1621C84.752 20.6992 83.959 21.123 82.9746 21.123ZM82.2021 18.8057C82.2021 19.4414 82.7422 19.8174 83.4941 19.8174C84.5195 19.8174 85.2783 19.1475 85.2783 18.2588V17.6572L83.5967 17.7666C82.6465 17.8281 82.2021 18.1768 82.2021 18.792V18.8057ZM92.21 21.1504C89.9609 21.1504 88.6348 19.6943 88.6348 17.2539V17.2402C88.6348 14.8271 89.9541 13.3848 92.2031 13.3848C94.124 13.3848 95.2725 14.4512 95.4639 15.9961V16.0234H93.8574L93.8506 16.0029C93.6934 15.2783 93.1396 14.7588 92.21 14.7588C91.0479 14.7588 90.3643 15.6748 90.3643 17.2402V17.2539C90.3643 18.8398 91.0547 19.7695 92.21 19.7695C93.0918 19.7695 93.6318 19.3662 93.8438 18.5801L93.8574 18.5527L95.4639 18.5459L95.4502 18.6006C95.2041 20.1318 94.1035 21.1504 92.21 21.1504ZM100.119 21.0342C98.4033 21.0342 97.6992 20.46 97.6992 19.0176V14.8477H96.5371V13.5283H97.6992V11.6963H99.4287V13.5283H101.008V14.8477H99.4287V18.6143C99.4287 19.3594 99.7227 19.6738 100.434 19.6738C100.673 19.6738 100.803 19.667 101.008 19.6465V20.959C100.762 21.0068 100.447 21.0342 100.119 21.0342ZM103.578 12.2773C103.018 12.2773 102.56 11.833 102.56 11.2725C102.56 10.7188 103.018 10.2676 103.578 10.2676C104.132 10.2676 104.59 10.7188 104.59 11.2725C104.59 11.833 104.132 12.2773 103.578 12.2773ZM102.724 21V13.5283H104.426V21H102.724ZM109.744 21.1504C107.502 21.1504 106.148 19.6875 106.148 17.2676V17.2539C106.148 14.8545 107.522 13.3848 109.744 13.3848C111.973 13.3848 113.34 14.8477 113.34 17.2539V17.2676C113.34 19.6875 111.979 21.1504 109.744 21.1504ZM109.744 19.7695C110.927 19.7695 111.597 18.8467 111.597 17.2744V17.2607C111.597 15.6885 110.92 14.7588 109.744 14.7588C108.562 14.7588 107.885 15.6885 107.885 17.2607V17.2744C107.885 18.8467 108.562 19.7695 109.744 19.7695ZM115.049 21V13.5283H116.751V14.6699H116.867C117.223 13.8701 117.94 13.3848 119.021 13.3848C120.688 13.3848 121.598 14.3896 121.598 16.167V21H119.896V16.5635C119.896 15.4014 119.424 14.8135 118.392 14.8135C117.38 14.8135 116.751 15.5244 116.751 16.6455V21H115.049ZM126.431 21.1504C124.53 21.1504 123.382 20.2754 123.238 19.0107V18.9971H124.927L124.934 19.0107C125.111 19.5303 125.61 19.8926 126.458 19.8926C127.306 19.8926 127.894 19.5098 127.894 18.9492V18.9355C127.894 18.498 127.565 18.2109 126.745 18.0264L125.535 17.7529C124.113 17.4385 123.437 16.7686 123.437 15.668V15.6611C123.437 14.3145 124.667 13.3848 126.431 13.3848C128.249 13.3848 129.336 14.2871 129.445 15.4971V15.5107H127.846L127.839 15.4902C127.716 15.0186 127.224 14.6357 126.424 14.6357C125.665 14.6357 125.118 15.0049 125.118 15.5654V15.5723C125.118 16.0098 125.433 16.2764 126.239 16.4609L127.449 16.7275C128.912 17.0557 129.603 17.6777 129.603 18.7646V18.7783C129.603 20.2002 128.27 21.1504 126.431 21.1504Z"
                fill="#A1A1B2"
              />
              <path
                d="M266.667 8.6665H258.667C257.933 8.6665 257.333 9.2665 257.333 9.99984V19.3332H258.667V9.99984H266.667V8.6665ZM268.667 11.3332H261.333C260.6 11.3332 260 11.9332 260 12.6665V21.9998C260 22.7332 260.6 23.3332 261.333 23.3332H268.667C269.4 23.3332 270 22.7332 270 21.9998V12.6665C270 11.9332 269.4 11.3332 268.667 11.3332ZM268.667 21.9998H261.333V12.6665H268.667V21.9998Z"
                fill="#A1A1B2"
              />
              <path
                d="M21.7256 51H14.8486V49.9404H17.7607V42.5029H17.6514L14.8281 44.3281V43.043L17.7676 41.1357H18.9502V49.9404H21.7256V51Z"
                fill="#A1A1B2"
              />
              <path
                d="M14.8555 63.9111C14.8555 62.1748 16.1406 60.9307 17.9385 60.9307C19.75 60.9307 20.9941 62.0518 20.9941 63.6992C20.9941 64.7246 20.5293 65.5449 18.957 67.2607L16.6328 69.79V69.9062H21.1514V71H14.9102V70.166L18.2461 66.4541C19.4971 65.0527 19.7979 64.5264 19.7979 63.7471C19.7979 62.6875 19.0527 61.9902 17.9043 61.9902C16.7695 61.9902 16.0176 62.749 16.0176 63.9111V63.9521H14.8555V63.9111Z"
                fill="#A1A1B2"
              />
              <path
                d="M16.7969 86.4268V85.415H17.8701C18.9775 85.415 19.75 84.6904 19.75 83.6582C19.75 82.6533 19.0117 81.9902 17.8975 81.9902C16.79 81.9902 16.0518 82.6396 15.9561 83.6992H14.8008C14.917 81.9902 16.1201 80.9307 17.9453 80.9307C19.709 80.9307 20.9668 81.9902 20.9668 83.4873C20.9668 84.6768 20.3447 85.5244 19.2852 85.7842V85.8936C20.5977 86.0645 21.377 86.9873 21.377 88.334C21.377 90.0088 19.9688 91.2051 18 91.2051C16.0518 91.2051 14.6982 90.084 14.6094 88.3818H15.751C15.8604 89.4346 16.7354 90.1182 17.9658 90.1182C19.3193 90.1182 20.1602 89.4209 20.1602 88.3066C20.1602 87.1582 19.292 86.4268 17.9248 86.4268H16.7969Z"
                fill="#A1A1B2"
              />
              <path
                d="M19.1553 111V108.915H14.6572V107.938L18.0068 101.136H19.2373L15.9355 107.78V107.869H19.1689V105.053H20.2627V107.855H21.7666V108.915H20.2559V111H19.1553Z"
                fill="#A1A1B2"
              />
              <path
                d="M17.918 131.198C16.0791 131.198 14.7803 130.063 14.6777 128.368H15.8398C15.9492 129.4 16.8311 130.111 17.9863 130.111C19.2578 130.111 20.1055 129.216 20.1055 127.876C20.1055 126.522 19.251 125.606 17.9863 125.606C17.1045 125.606 16.373 126.01 15.9834 126.707H14.8418L15.3408 121.136H20.7344V122.223H16.291L16.0176 125.442H16.127C16.6123 124.854 17.3164 124.547 18.1846 124.547C20.0098 124.547 21.2812 125.907 21.2812 127.849C21.2812 129.845 19.9209 131.198 17.918 131.198Z"
                fill="#A1A1B2"
              />
              <path
                d="M21.3838 147.835C21.3838 149.79 19.9756 151.205 18.0205 151.205C16.0791 151.205 14.6777 149.797 14.6777 147.835C14.6777 146.68 15.0674 145.634 16.0107 144.26C16.0996 144.109 18.1504 141.238 18.2188 141.136H19.6064L16.9131 144.834C16.6123 145.258 16.6396 145.23 16.5918 145.34L16.6943 145.395C16.9883 144.998 17.6992 144.704 18.3281 144.704C20.085 144.704 21.3838 146.037 21.3838 147.835ZM18.0273 150.132C19.2715 150.132 20.2148 149.161 20.2148 147.896C20.2148 146.625 19.2715 145.654 18.0273 145.654C16.79 145.654 15.8467 146.625 15.8467 147.896C15.8467 149.161 16.79 150.132 18.0273 150.132Z"
                fill="#A1A1B2"
              />
              <path
                d="M15.6348 171L20.1123 162.305V162.216H14.7598V161.136H21.3428V162.25L16.9199 171H15.6348Z"
                fill="#A1A1B2"
              />
              <path
                d="M39.5752 51.1299C38.1602 51.1299 37.2168 50.2412 37.2168 48.8945C37.2168 47.582 38.1602 46.8027 39.8486 46.7139L41.8857 46.6113V45.9414C41.8857 45.0117 41.3184 44.499 40.2861 44.499C39.4316 44.499 38.8301 44.8613 38.6387 45.4971H37.4971C37.6338 44.3076 38.7822 43.4941 40.2998 43.4941C42.043 43.4941 43.041 44.3828 43.041 45.9277V51.0068H41.9336V49.8926H41.8174C41.4619 50.6855 40.6553 51.1299 39.5752 51.1299ZM39.9102 50.1113C41.0312 50.1113 41.8857 49.3662 41.8857 48.375V47.5L39.9785 47.5889C38.9395 47.6367 38.3926 48.0811 38.3926 48.8535C38.3926 49.6328 38.9736 50.1113 39.9102 50.1113ZM52.9873 43.583L51.3945 51H50.2803L49.0225 45.2168H48.9404L47.6826 51H46.5684L44.9756 43.583H46.1104L47.1152 49.5303H47.2383L48.4346 43.5898H49.5283L50.7246 49.5303H50.8477L51.8525 43.583H52.9873ZM56.8838 51.1299C55.4688 51.1299 54.5254 50.2412 54.5254 48.8945C54.5254 47.582 55.4688 46.8027 57.1572 46.7139L59.1943 46.6113V45.9414C59.1943 45.0117 58.627 44.499 57.5947 44.499C56.7402 44.499 56.1387 44.8613 55.9473 45.4971H54.8057C54.9424 44.3076 56.0908 43.4941 57.6084 43.4941C59.3516 43.4941 60.3496 44.3828 60.3496 45.9277V51.0068H59.2422V49.8926H59.126C58.7705 50.6855 57.9639 51.1299 56.8838 51.1299ZM57.2188 50.1113C58.3398 50.1113 59.1943 49.3662 59.1943 48.375V47.5L57.2871 47.5889C56.248 47.6367 55.7012 48.0811 55.7012 48.8535C55.7012 49.6328 56.2822 50.1113 57.2188 50.1113ZM66.4199 41.7646C65.873 41.7646 65.4561 41.3545 65.4561 40.8076C65.4561 40.2676 65.873 39.8574 66.4199 39.8574C66.9668 39.8574 67.3838 40.2676 67.3838 40.8076C67.3838 41.3545 66.9668 41.7646 66.4199 41.7646ZM69.5303 51H63.3848V50.0361H65.9277V44.5469H63.4053V43.583H67.0762V50.0361H69.5303V51ZM73.6797 41.5938H74.8281V43.6035H77.8359V44.5947H74.8418V48.7783C74.8418 49.585 75.4092 50.0225 76.4551 50.0225C76.8721 50.0225 77.6172 50.002 77.8154 49.9814V50.9658C77.6309 51 76.7285 51.0342 76.373 51.0342C74.5342 51.0342 73.6797 50.3369 73.6797 48.792V44.5947H71.7041V43.6035H73.6797V41.5938ZM89.5527 45.5859C89.5527 44.3008 90.6465 43.4395 92.2803 43.4395C93.8252 43.4395 94.8711 44.2119 95.0078 45.4492H93.8867C93.75 44.7998 93.1279 44.4033 92.2598 44.4033C91.3164 44.4033 90.708 44.8408 90.708 45.5176C90.708 46.085 91.0908 46.4062 92.0205 46.6113L93.0664 46.8506C94.5088 47.1787 95.165 47.8076 95.165 48.8809C95.165 50.248 94.0234 51.1367 92.2666 51.1367C90.585 51.1367 89.4707 50.3506 89.3408 49.0791H90.5234C90.6943 49.7627 91.3506 50.1592 92.3076 50.1592C93.3193 50.1592 93.9619 49.7012 93.9619 48.9902C93.9619 48.4023 93.5996 48.0879 92.6562 47.876L91.5557 47.623C90.2158 47.3154 89.5527 46.6387 89.5527 45.5859ZM99.6426 41.5938H100.791V43.6035H103.799V44.5947H100.805V48.7783C100.805 49.585 101.372 50.0225 102.418 50.0225C102.835 50.0225 103.58 50.002 103.778 49.9814V50.9658C103.594 51 102.691 51.0342 102.336 51.0342C100.497 51.0342 99.6426 50.3369 99.6426 48.792V44.5947H97.667V43.6035H99.6426V41.5938ZM111.564 49.0859H112.692C112.467 50.3096 111.291 51.1367 109.732 51.1367C107.695 51.1367 106.513 49.9131 106.513 47.8008V46.6865C106.513 44.7314 107.764 43.4463 109.65 43.4463C111.578 43.4463 112.713 44.7246 112.713 46.8711V47.5957H107.661V47.8965C107.661 49.2568 108.468 50.1318 109.732 50.1318C110.669 50.1318 111.359 49.7354 111.564 49.0859ZM109.644 44.4443C108.406 44.4443 107.661 45.292 107.661 46.7139H111.564C111.564 45.2988 110.84 44.4443 109.644 44.4443ZM118.681 43.46C120.396 43.46 121.518 44.6973 121.518 46.6045V47.9854C121.518 49.8857 120.396 51.123 118.681 51.123C117.607 51.123 116.821 50.665 116.5 49.8516H116.37V53.502H115.188V43.583H116.336V44.7178H116.459C116.849 43.8975 117.621 43.46 118.681 43.46ZM118.346 44.5264C117.122 44.5264 116.343 45.4014 116.343 46.7686V47.835C116.343 49.209 117.122 50.084 118.346 50.084C119.569 50.084 120.349 49.2021 120.349 47.835V46.7686C120.349 45.4014 119.569 44.5264 118.346 44.5264ZM126.87 51.041C126.193 51.041 125.633 50.4736 125.633 49.7764C125.633 49.0859 126.193 48.5186 126.87 48.5186C127.547 48.5186 128.107 49.0859 128.107 49.7764C128.107 50.4736 127.547 51.041 126.87 51.041ZM137.527 49.0859H138.655C138.43 50.3096 137.254 51.1367 135.695 51.1367C133.658 51.1367 132.476 49.9131 132.476 47.8008V46.6865C132.476 44.7314 133.727 43.4463 135.613 43.4463C137.541 43.4463 138.676 44.7246 138.676 46.8711V47.5957H133.624V47.8965C133.624 49.2568 134.431 50.1318 135.695 50.1318C136.632 50.1318 137.322 49.7354 137.527 49.0859ZM135.606 44.4443C134.369 44.4443 133.624 45.292 133.624 46.7139H137.527C137.527 45.2988 136.803 44.4443 135.606 44.4443ZM147.754 45.5381V51H146.708V45.8799C146.708 44.9775 146.38 44.5059 145.758 44.5059C145.108 44.5059 144.712 45.0732 144.712 45.9961V51H143.673V45.873C143.673 44.9775 143.345 44.5059 142.716 44.5059C142.06 44.5059 141.649 45.0732 141.649 45.9961V51H140.604V43.583H141.643V44.6289H141.766C141.95 43.8838 142.483 43.4463 143.181 43.4463C143.878 43.4463 144.37 43.877 144.527 44.6084H144.65C144.842 43.8975 145.437 43.4463 146.182 43.4463C147.214 43.4463 147.754 44.1641 147.754 45.5381ZM152.081 51.1299C150.666 51.1299 149.723 50.2412 149.723 48.8945C149.723 47.582 150.666 46.8027 152.354 46.7139L154.392 46.6113V45.9414C154.392 45.0117 153.824 44.499 152.792 44.499C151.938 44.499 151.336 44.8613 151.145 45.4971H150.003C150.14 44.3076 151.288 43.4941 152.806 43.4941C154.549 43.4941 155.547 44.3828 155.547 45.9277V51.0068H154.439V49.8926H154.323C153.968 50.6855 153.161 51.1299 152.081 51.1299ZM152.416 50.1113C153.537 50.1113 154.392 49.3662 154.392 48.375V47.5L152.484 47.5889C151.445 47.6367 150.898 48.0811 150.898 48.8535C150.898 49.6328 151.479 50.1113 152.416 50.1113ZM161.617 41.7646C161.07 41.7646 160.653 41.3545 160.653 40.8076C160.653 40.2676 161.07 39.8574 161.617 39.8574C162.164 39.8574 162.581 40.2676 162.581 40.8076C162.581 41.3545 162.164 41.7646 161.617 41.7646ZM164.728 51H158.582V50.0361H161.125V44.5469H158.603V43.583H162.273V50.0361H164.728V51ZM173.382 51H167.236V50.0361H169.772V41.6348H167.257V40.6709H170.935V50.0361H173.382V51ZM177.306 46.0645C177.306 43.7471 178.003 41.7305 179.363 40.1855H180.519C179.104 42.1748 178.509 43.918 178.509 46.0645C178.509 48.2109 179.104 49.9541 180.519 51.9434H179.363C178.003 50.3984 177.306 48.3887 177.306 46.0645ZM188.072 45.5859H186.828V41.1357H188.072V45.5859ZM193.404 45.5859C193.404 44.3008 194.498 43.4395 196.132 43.4395C197.677 43.4395 198.723 44.2119 198.859 45.4492H197.738C197.602 44.7998 196.979 44.4033 196.111 44.4033C195.168 44.4033 194.56 44.8408 194.56 45.5176C194.56 46.085 194.942 46.4062 195.872 46.6113L196.918 46.8506C198.36 47.1787 199.017 47.8076 199.017 48.8809C199.017 50.248 197.875 51.1367 196.118 51.1367C194.437 51.1367 193.322 50.3506 193.192 49.0791H194.375C194.546 49.7627 195.202 50.1592 196.159 50.1592C197.171 50.1592 197.813 49.7012 197.813 48.9902C197.813 48.4023 197.451 48.0879 196.508 47.876L195.407 47.623C194.067 47.3154 193.404 46.6387 193.404 45.5859ZM206.762 49.0859H207.89C207.664 50.3096 206.488 51.1367 204.93 51.1367C202.893 51.1367 201.71 49.9131 201.71 47.8008V46.6865C201.71 44.7314 202.961 43.4463 204.848 43.4463C206.775 43.4463 207.91 44.7246 207.91 46.8711V47.5957H202.858V47.8965C202.858 49.2568 203.665 50.1318 204.93 50.1318C205.866 50.1318 206.557 49.7354 206.762 49.0859ZM204.841 44.4443C203.604 44.4443 202.858 45.292 202.858 46.7139H206.762C206.762 45.2988 206.037 44.4443 204.841 44.4443ZM210.378 51V43.583H211.492V44.8887H211.588C211.984 43.9658 212.832 43.4463 213.96 43.4463C215.573 43.4463 216.448 44.4102 216.448 46.1875V51H215.286V46.4814C215.286 45.1416 214.739 44.5127 213.584 44.5127C212.36 44.5127 211.54 45.3672 211.54 46.6318V51H210.378ZM221.603 51.123C219.887 51.123 218.766 49.8857 218.766 47.9785V46.5977C218.766 44.6973 219.887 43.46 221.603 43.46C222.676 43.46 223.469 43.918 223.79 44.7314H223.913V40.6709H225.096V51H223.954V49.8652H223.824C223.441 50.6855 222.662 51.123 221.603 51.123ZM221.944 50.0635C223.161 50.0635 223.947 49.1885 223.947 47.8145V46.748C223.947 45.3809 223.161 44.5059 221.944 44.5059C220.721 44.5059 219.935 45.3809 219.935 46.748V47.8145C219.935 49.1816 220.721 50.0635 221.944 50.0635ZM234.338 47.165H227.105V46.085H234.338V47.165ZM241.379 49.0859H242.507C242.281 50.3096 241.105 51.1367 239.547 51.1367C237.51 51.1367 236.327 49.9131 236.327 47.8008V46.6865C236.327 44.7314 237.578 43.4463 239.465 43.4463C241.393 43.4463 242.527 44.7246 242.527 46.8711V47.5957H237.476V47.8965C237.476 49.2568 238.282 50.1318 239.547 50.1318C240.483 50.1318 241.174 49.7354 241.379 49.0859ZM239.458 44.4443C238.221 44.4443 237.476 45.292 237.476 46.7139H241.379C241.379 45.2988 240.654 44.4443 239.458 44.4443ZM251.605 45.5381V51H250.56V45.8799C250.56 44.9775 250.231 44.5059 249.609 44.5059C248.96 44.5059 248.563 45.0732 248.563 45.9961V51H247.524V45.873C247.524 44.9775 247.196 44.5059 246.567 44.5059C245.911 44.5059 245.501 45.0732 245.501 45.9961V51H244.455V43.583H245.494V44.6289H245.617C245.802 43.8838 246.335 43.4463 247.032 43.4463C247.729 43.4463 248.222 43.877 248.379 44.6084H248.502C248.693 43.8975 249.288 43.4463 250.033 43.4463C251.065 43.4463 251.605 44.1641 251.605 45.5381ZM253.916 51.041C253.39 51.041 253.103 50.6309 253.103 49.8789C253.103 49.127 253.39 48.71 253.916 48.71C254.449 48.71 254.736 49.127 254.736 49.8789C254.736 50.6309 254.449 51.041 253.916 51.041ZM256.685 51.041C256.158 51.041 255.864 50.6309 255.864 49.8789C255.864 49.127 256.158 48.71 256.685 48.71C257.211 48.71 257.505 49.127 257.505 49.8789C257.505 50.6309 257.211 51.041 256.685 51.041ZM259.453 51.041C258.92 51.041 258.633 50.6309 258.633 49.8789C258.633 49.127 258.92 48.71 259.453 48.71C259.979 48.71 260.267 49.127 260.267 49.8789C260.267 50.6309 259.979 51.041 259.453 51.041Z"
                fill="#A1A1B2"
              />
              <g filter="url(#filter0_d_6003_242425)">
                <path d="M44.5 56H43.5V76H44.5V56Z" fill="#A1A1B2" />
              </g>
              <path
                d="M56.0332 67.6777V70.0703H58.3301V71H53.4014V70.0703H54.8984V64.5127H53.251V63.583H56.0195V65.4766H56.1699C56.4434 64.1025 57.3662 63.3916 58.7949 63.3916C59.2188 63.3916 59.6221 63.4531 59.8682 63.5557V64.8613C59.5264 64.7383 59.0479 64.6562 58.6445 64.6562C57.0039 64.6562 56.0332 65.791 56.0332 67.6777ZM66.9844 69.0859H68.1123C67.8867 70.3096 66.7109 71.1367 65.1523 71.1367C63.1152 71.1367 61.9326 69.9131 61.9326 67.8008V66.6865C61.9326 64.7314 63.1836 63.4463 65.0703 63.4463C66.998 63.4463 68.1328 64.7246 68.1328 66.8711V67.5957H63.0811V67.8965C63.0811 69.2568 63.8877 70.1318 65.1523 70.1318C66.0889 70.1318 66.7793 69.7354 66.9844 69.0859ZM65.0635 64.4443C63.8262 64.4443 63.0811 65.292 63.0811 66.7139H66.9844C66.9844 65.2988 66.2598 64.4443 65.0635 64.4443ZM72.3711 61.5938H73.5195V63.6035H76.5273V64.5947H73.5332V68.7783C73.5332 69.585 74.1006 70.0225 75.1465 70.0225C75.5635 70.0225 76.3086 70.002 76.5068 69.9814V70.9658C76.3223 71 75.4199 71.0342 75.0645 71.0342C73.2256 71.0342 72.3711 70.3369 72.3711 68.792V64.5947H70.3955V63.6035H72.3711V61.5938ZM85.3252 63.583V71H84.2109V69.6943H84.1152C83.7188 70.6172 82.8711 71.1367 81.7432 71.1367C80.1299 71.1367 79.2549 70.1729 79.2549 68.3955V63.583H80.417V68.1016C80.417 69.4414 80.9639 70.0703 82.1191 70.0703C83.3428 70.0703 84.1631 69.2158 84.1631 67.9512V63.583H85.3252ZM90.6504 67.6777V70.0703H92.9473V71H88.0186V70.0703H89.5156V64.5127H87.8682V63.583H90.6367V65.4766H90.7871C91.0605 64.1025 91.9834 63.3916 93.4121 63.3916C93.8359 63.3916 94.2393 63.4531 94.4854 63.5557V64.8613C94.1436 64.7383 93.665 64.6562 93.2617 64.6562C91.6211 64.6562 90.6504 65.791 90.6504 67.6777ZM96.5635 71V63.583H97.6777V64.8887H97.7734C98.1699 63.9658 99.0176 63.4463 100.146 63.4463C101.759 63.4463 102.634 64.4102 102.634 66.1875V71H101.472V66.4814C101.472 65.1416 100.925 64.5127 99.7695 64.5127C98.5459 64.5127 97.7256 65.3672 97.7256 66.6318V71H96.5635ZM119.573 71.9365H118.644C116.982 71.9365 116.456 71.4102 116.456 69.7217V68.1904C116.456 67.1377 115.841 66.5225 114.241 66.6865V65.4492C115.841 65.6133 116.456 65.0049 116.456 63.9453V62.4141C116.456 60.7256 116.982 60.1992 118.644 60.1992H119.573V61.1357H118.828C117.803 61.1357 117.604 61.375 117.604 62.5645V64.3896C117.604 65.3467 116.887 65.9824 115.499 66.0166V66.126C116.887 66.1533 117.604 66.7891 117.604 67.7461V69.5713C117.604 70.7607 117.803 71 118.828 71H119.573V71.9365Z"
                fill="#A1A1B2"
              />
              <g filter="url(#filter1_d_6003_242425)">
                <path d="M44.5 76H43.5V96H44.5V76Z" fill="#A1A1B2" />
              </g>
              <g filter="url(#filter2_d_6003_242425)">
                <path d="M60.5 76H59.5V96H60.5V76Z" fill="#A1A1B2" />
              </g>
              <path
                d="M69.627 85.5859C69.627 84.3008 70.7207 83.4395 72.3545 83.4395C73.8994 83.4395 74.9453 84.2119 75.082 85.4492H73.9609C73.8242 84.7998 73.2021 84.4033 72.334 84.4033C71.3906 84.4033 70.7822 84.8408 70.7822 85.5176C70.7822 86.085 71.165 86.4062 72.0947 86.6113L73.1406 86.8506C74.583 87.1787 75.2393 87.8076 75.2393 88.8809C75.2393 90.248 74.0977 91.1367 72.3408 91.1367C70.6592 91.1367 69.5449 90.3506 69.415 89.0791H70.5977C70.7686 89.7627 71.4248 90.1592 72.3818 90.1592C73.3936 90.1592 74.0361 89.7012 74.0361 88.9902C74.0361 88.4023 73.6738 88.0879 72.7305 87.876L71.6299 87.623C70.29 87.3154 69.627 86.6387 69.627 85.5859ZM84.0166 83.583V91H82.9023V89.6943H82.8066C82.4102 90.6172 81.5625 91.1367 80.4346 91.1367C78.8213 91.1367 77.9463 90.1729 77.9463 88.3955V83.583H79.1084V88.1016C79.1084 89.4414 79.6553 90.0703 80.8105 90.0703C82.0342 90.0703 82.8545 89.2158 82.8545 87.9512V83.583H84.0166ZM90.1006 91.123C89.041 91.123 88.2617 90.6855 87.8789 89.8652H87.749V91H86.6074V80.6709H87.79V84.7314H87.9131C88.2412 83.918 89.0273 83.46 90.1006 83.46C91.8164 83.46 92.9375 84.6973 92.9375 86.5977V87.9785C92.9375 89.8857 91.8164 91.123 90.1006 91.123ZM89.7588 90.0635C90.9893 90.0635 91.7686 89.1816 91.7686 87.8145V86.748C91.7686 85.3809 90.9893 84.5059 89.7588 84.5059C88.542 84.5059 87.7627 85.3809 87.7627 86.748V87.8145C87.7627 89.1885 88.542 90.0635 89.7588 90.0635ZM99.2676 81.7646C98.7207 81.7646 98.3037 81.3545 98.3037 80.8076C98.3037 80.2676 98.7207 79.8574 99.2676 79.8574C99.8145 79.8574 100.231 80.2676 100.231 80.8076C100.231 81.3545 99.8145 81.7646 99.2676 81.7646ZM99.9375 83.583V90.959C99.9375 92.5996 99.0967 93.249 97.0322 93.249C96.5195 93.249 95.7266 93.2354 95.2344 93.1943V92.1553C95.5898 92.1895 96.5469 92.21 96.998 92.21C98.3789 92.21 98.7959 91.8818 98.7959 90.8223V84.5469H95.4053V83.583H99.9375ZM108.947 89.0859H110.075C109.85 90.3096 108.674 91.1367 107.115 91.1367C105.078 91.1367 103.896 89.9131 103.896 87.8008V86.6865C103.896 84.7314 105.146 83.4463 107.033 83.4463C108.961 83.4463 110.096 84.7246 110.096 86.8711V87.5957H105.044V87.8965C105.044 89.2568 105.851 90.1318 107.115 90.1318C108.052 90.1318 108.742 89.7354 108.947 89.0859ZM107.026 84.4443C105.789 84.4443 105.044 85.292 105.044 86.7139H108.947C108.947 85.2988 108.223 84.4443 107.026 84.4443ZM118.688 85.8936H117.54C117.396 85.0254 116.672 84.4785 115.715 84.4785C114.423 84.4785 113.705 85.3604 113.705 86.9531V87.623C113.705 89.2158 114.423 90.0908 115.715 90.0908C116.672 90.0908 117.396 89.5508 117.54 88.7031H118.688C118.504 90.2139 117.376 91.1367 115.735 91.1367C113.719 91.1367 112.543 89.8994 112.543 87.7734V86.8027C112.543 84.6768 113.719 83.4395 115.735 83.4395C117.376 83.4395 118.497 84.3691 118.688 85.8936ZM122.988 81.5938H124.137V83.6035H127.145V84.5947H124.15V88.7783C124.15 89.585 124.718 90.0225 125.764 90.0225C126.181 90.0225 126.926 90.002 127.124 89.9814V90.9658C126.939 91 126.037 91.0342 125.682 91.0342C123.843 91.0342 122.988 90.3369 122.988 88.792V84.5947H121.013V83.6035H122.988V81.5938ZM132.907 85.791C132.23 85.791 131.67 85.2168 131.67 84.5264C131.67 83.8359 132.23 83.2617 132.907 83.2617C133.584 83.2617 134.145 83.8359 134.145 84.5264C134.145 85.2168 133.584 85.791 132.907 85.791ZM132.907 91.041C132.23 91.041 131.67 90.4736 131.67 89.7764C131.67 89.0859 132.23 88.5186 132.907 88.5186C133.584 88.5186 134.145 89.0859 134.145 89.7764C134.145 90.4736 133.584 91.041 132.907 91.041ZM150.838 85.5859H149.594V81.1357H150.838V85.5859ZM159.472 91H158.269V86.9326L154.98 81.1357H156.327L158.822 85.6475H158.918L161.413 81.1357H162.76L159.472 86.9326V91ZM167.524 91.1367C165.562 91.1367 164.312 89.8584 164.312 87.8555V86.7344C164.312 84.7314 165.562 83.4531 167.524 83.4531C169.486 83.4531 170.737 84.7314 170.737 86.7344V87.8555C170.737 89.8584 169.486 91.1367 167.524 91.1367ZM167.524 84.4785C166.253 84.4785 165.46 85.3809 165.46 86.8369V87.7461C165.46 89.209 166.253 90.1045 167.524 90.1045C168.796 90.1045 169.589 89.209 169.589 87.7461V86.8369C169.589 85.3809 168.796 84.4785 167.524 84.4785ZM179.214 83.583V91H178.1V89.6943H178.004C177.607 90.6172 176.76 91.1367 175.632 91.1367C174.019 91.1367 173.144 90.1729 173.144 88.3955V83.583H174.306V88.1016C174.306 89.4414 174.853 90.0703 176.008 90.0703C177.231 90.0703 178.052 89.2158 178.052 87.9512V83.583H179.214ZM193.193 87.6777V90.0703H195.49V91H190.562V90.0703H192.059V84.5127H190.411V83.583H193.18V85.4766H193.33C193.604 84.1025 194.526 83.3916 195.955 83.3916C196.379 83.3916 196.782 83.4531 197.028 83.5557V84.8613C196.687 84.7383 196.208 84.6562 195.805 84.6562C194.164 84.6562 193.193 85.791 193.193 87.6777ZM204.145 89.0859H205.272C205.047 90.3096 203.871 91.1367 202.312 91.1367C200.275 91.1367 199.093 89.9131 199.093 87.8008V86.6865C199.093 84.7314 200.344 83.4463 202.23 83.4463C204.158 83.4463 205.293 84.7246 205.293 86.8711V87.5957H200.241V87.8965C200.241 89.2568 201.048 90.1318 202.312 90.1318C203.249 90.1318 203.939 89.7354 204.145 89.0859ZM202.224 84.4443C200.986 84.4443 200.241 85.292 200.241 86.7139H204.145C204.145 85.2988 203.42 84.4443 202.224 84.4443ZM213.886 85.8936H212.737C212.594 85.0254 211.869 84.4785 210.912 84.4785C209.62 84.4785 208.902 85.3604 208.902 86.9531V87.623C208.902 89.2158 209.62 90.0908 210.912 90.0908C211.869 90.0908 212.594 89.5508 212.737 88.7031H213.886C213.701 90.2139 212.573 91.1367 210.933 91.1367C208.916 91.1367 207.74 89.8994 207.74 87.7734V86.8027C207.74 84.6768 208.916 83.4395 210.933 83.4395C212.573 83.4395 213.694 84.3691 213.886 85.8936ZM221.453 89.0859H222.581C222.355 90.3096 221.18 91.1367 219.621 91.1367C217.584 91.1367 216.401 89.9131 216.401 87.8008V86.6865C216.401 84.7314 217.652 83.4463 219.539 83.4463C221.467 83.4463 222.602 84.7246 222.602 86.8711V87.5957H217.55V87.8965C217.55 89.2568 218.356 90.1318 219.621 90.1318C220.558 90.1318 221.248 89.7354 221.453 89.0859ZM219.532 84.4443C218.295 84.4443 217.55 85.292 217.55 86.7139H221.453C221.453 85.2988 220.729 84.4443 219.532 84.4443ZM228.234 81.7646C227.688 81.7646 227.271 81.3545 227.271 80.8076C227.271 80.2676 227.688 79.8574 228.234 79.8574C228.781 79.8574 229.198 80.2676 229.198 80.8076C229.198 81.3545 228.781 81.7646 228.234 81.7646ZM231.345 91H225.199V90.0361H227.742V84.5469H225.22V83.583H228.891V90.0361H231.345V91ZM233.409 83.583H234.653L236.725 89.7559H236.813L238.871 83.583H240.108L237.401 91H236.123L233.409 83.583ZM247.416 89.0859H248.544C248.318 90.3096 247.143 91.1367 245.584 91.1367C243.547 91.1367 242.364 89.9131 242.364 87.8008V86.6865C242.364 84.7314 243.615 83.4463 245.502 83.4463C247.43 83.4463 248.564 84.7246 248.564 86.8711V87.5957H243.513V87.8965C243.513 89.2568 244.319 90.1318 245.584 90.1318C246.521 90.1318 247.211 89.7354 247.416 89.0859ZM245.495 84.4443C244.258 84.4443 243.513 85.292 243.513 86.7139H247.416C247.416 85.2988 246.691 84.4443 245.495 84.4443ZM251.299 91.041C250.772 91.041 250.485 90.6309 250.485 89.8789C250.485 89.127 250.772 88.71 251.299 88.71C251.832 88.71 252.119 89.127 252.119 89.8789C252.119 90.6309 251.832 91.041 251.299 91.041ZM254.067 91.041C253.541 91.041 253.247 90.6309 253.247 89.8789C253.247 89.127 253.541 88.71 254.067 88.71C254.594 88.71 254.888 89.127 254.888 89.8789C254.888 90.6309 254.594 91.041 254.067 91.041ZM256.836 91.041C256.303 91.041 256.016 90.6309 256.016 89.8789C256.016 89.127 256.303 88.71 256.836 88.71C257.362 88.71 257.649 89.127 257.649 89.8789C257.649 90.6309 257.362 91.041 256.836 91.041Z"
                fill="#A1A1B2"
              />
              <g filter="url(#filter3_d_6003_242425)">
                <path d="M44.5 96H43.5V116H44.5V96Z" fill="#A1A1B2" />
              </g>
              <g filter="url(#filter4_d_6003_242425)">
                <path d="M60.5 96H59.5V116H60.5V96Z" fill="#A1A1B2" />
              </g>
              <g filter="url(#filter5_d_6003_242425)">
                <path d="M76.5 96H75.5V116H76.5V96Z" fill="#A1A1B2" />
              </g>
              <path
                d="M88.792 111.123C87.7324 111.123 86.9531 110.686 86.5703 109.865H86.4404V111H85.2988V100.671H86.4814V104.731H86.6045C86.9326 103.918 87.7188 103.46 88.792 103.46C90.5078 103.46 91.6289 104.697 91.6289 106.598V107.979C91.6289 109.886 90.5078 111.123 88.792 111.123ZM88.4502 110.063C89.6807 110.063 90.46 109.182 90.46 107.814V106.748C90.46 105.381 89.6807 104.506 88.4502 104.506C87.2334 104.506 86.4541 105.381 86.4541 106.748V107.814C86.4541 109.188 87.2334 110.063 88.4502 110.063ZM96.9814 111.137C95.0195 111.137 93.7686 109.858 93.7686 107.855V106.734C93.7686 104.731 95.0195 103.453 96.9814 103.453C98.9434 103.453 100.194 104.731 100.194 106.734V107.855C100.194 109.858 98.9434 111.137 96.9814 111.137ZM96.9814 104.479C95.71 104.479 94.917 105.381 94.917 106.837V107.746C94.917 109.209 95.71 110.104 96.9814 110.104C98.2529 110.104 99.0459 109.209 99.0459 107.746V106.837C99.0459 105.381 98.2529 104.479 96.9814 104.479ZM105.171 111.123C103.455 111.123 102.334 109.886 102.334 107.979V106.598C102.334 104.697 103.455 103.46 105.171 103.46C106.244 103.46 107.037 103.918 107.358 104.731H107.481V100.671H108.664V111H107.522V109.865H107.393C107.01 110.686 106.23 111.123 105.171 111.123ZM105.513 110.063C106.729 110.063 107.516 109.188 107.516 107.814V106.748C107.516 105.381 106.729 104.506 105.513 104.506C104.289 104.506 103.503 105.381 103.503 106.748V107.814C103.503 109.182 104.289 110.063 105.513 110.063ZM112.212 113.639C112.041 113.639 111.815 113.632 111.713 113.618V112.6C111.802 112.62 112.014 112.627 112.123 112.627C112.82 112.627 113.203 112.312 113.511 111.451L113.641 111.048L110.913 103.583H112.178L114.256 109.79H114.345L116.416 103.583H117.653L114.857 111.273C114.208 113.099 113.586 113.639 112.212 113.639ZM122.944 105.791C122.268 105.791 121.707 105.217 121.707 104.526C121.707 103.836 122.268 103.262 122.944 103.262C123.621 103.262 124.182 103.836 124.182 104.526C124.182 105.217 123.621 105.791 122.944 105.791ZM122.944 111.041C122.268 111.041 121.707 110.474 121.707 109.776C121.707 109.086 122.268 108.519 122.944 108.519C123.621 108.519 124.182 109.086 124.182 109.776C124.182 110.474 123.621 111.041 122.944 111.041ZM141.777 102.141H140.54L138.729 99.8232H140.144L141.777 102.141ZM151.847 103.959L147.144 106.563V106.687L151.847 109.291V110.597L145.968 107.131V106.119L151.847 102.653V103.959ZM154.52 111V100.671H155.641V104.896H155.736C156.126 103.973 156.98 103.453 158.115 103.453C159.729 103.453 160.604 104.424 160.604 106.194V111H159.441V106.488C159.441 105.155 158.895 104.52 157.732 104.52C156.509 104.52 155.682 105.374 155.682 106.639V111H154.52ZM164.951 101.594H166.1V103.604H169.107V104.595H166.113V108.778C166.113 109.585 166.681 110.022 167.727 110.022C168.144 110.022 168.889 110.002 169.087 109.981V110.966C168.902 111 168 111.034 167.645 111.034C165.806 111.034 164.951 110.337 164.951 108.792V104.595H162.976V103.604H164.951V101.594ZM178.445 105.538V111H177.399V105.88C177.399 104.978 177.071 104.506 176.449 104.506C175.8 104.506 175.403 105.073 175.403 105.996V111H174.364V105.873C174.364 104.978 174.036 104.506 173.407 104.506C172.751 104.506 172.341 105.073 172.341 105.996V111H171.295V103.583H172.334V104.629H172.457C172.642 103.884 173.175 103.446 173.872 103.446C174.569 103.446 175.062 103.877 175.219 104.608H175.342C175.533 103.897 176.128 103.446 176.873 103.446C177.905 103.446 178.445 104.164 178.445 105.538ZM186.765 111H180.619V110.036H183.155V101.635H180.64V100.671H184.317V110.036H186.765V111ZM189.239 103.959V102.653L195.118 106.119V107.131L189.239 110.597V109.291L193.936 106.687V106.563L189.239 103.959ZM203.772 103.959L199.069 106.563V106.687L203.772 109.291V110.597L197.894 107.131V106.119L203.772 102.653V103.959ZM209.952 111.123C208.893 111.123 208.113 110.686 207.73 109.865H207.601V111H206.459V100.671H207.642V104.731H207.765C208.093 103.918 208.879 103.46 209.952 103.46C211.668 103.46 212.789 104.697 212.789 106.598V107.979C212.789 109.886 211.668 111.123 209.952 111.123ZM209.61 110.063C210.841 110.063 211.62 109.182 211.62 107.814V106.748C211.62 105.381 210.841 104.506 209.61 104.506C208.394 104.506 207.614 105.381 207.614 106.748V107.814C207.614 109.188 208.394 110.063 209.61 110.063ZM218.142 111.137C216.18 111.137 214.929 109.858 214.929 107.855V106.734C214.929 104.731 216.18 103.453 218.142 103.453C220.104 103.453 221.354 104.731 221.354 106.734V107.855C221.354 109.858 220.104 111.137 218.142 111.137ZM218.142 104.479C216.87 104.479 216.077 105.381 216.077 106.837V107.746C216.077 109.209 216.87 110.104 218.142 110.104C219.413 110.104 220.206 109.209 220.206 107.746V106.837C220.206 105.381 219.413 104.479 218.142 104.479ZM226.331 111.123C224.615 111.123 223.494 109.886 223.494 107.979V106.598C223.494 104.697 224.615 103.46 226.331 103.46C227.404 103.46 228.197 103.918 228.519 104.731H228.642V100.671H229.824V111H228.683V109.865H228.553C228.17 110.686 227.391 111.123 226.331 111.123ZM226.673 110.063C227.89 110.063 228.676 109.188 228.676 107.814V106.748C228.676 105.381 227.89 104.506 226.673 104.506C225.449 104.506 224.663 105.381 224.663 106.748V107.814C224.663 109.182 225.449 110.063 226.673 110.063ZM233.372 113.639C233.201 113.639 232.976 113.632 232.873 113.618V112.6C232.962 112.62 233.174 112.627 233.283 112.627C233.98 112.627 234.363 112.312 234.671 111.451L234.801 111.048L232.073 103.583H233.338L235.416 109.79H235.505L237.576 103.583H238.813L236.018 111.273C235.368 113.099 234.746 113.639 233.372 113.639ZM241.165 103.959V102.653L247.044 106.119V107.131L241.165 110.597V109.291L245.861 106.687V106.563L241.165 103.959ZM249.99 111.041C249.464 111.041 249.177 110.631 249.177 109.879C249.177 109.127 249.464 108.71 249.99 108.71C250.523 108.71 250.811 109.127 250.811 109.879C250.811 110.631 250.523 111.041 249.99 111.041ZM252.759 111.041C252.232 111.041 251.938 110.631 251.938 109.879C251.938 109.127 252.232 108.71 252.759 108.71C253.285 108.71 253.579 109.127 253.579 109.879C253.579 110.631 253.285 111.041 252.759 111.041ZM255.527 111.041C254.994 111.041 254.707 110.631 254.707 109.879C254.707 109.127 254.994 108.71 255.527 108.71C256.054 108.71 256.341 109.127 256.341 109.879C256.341 110.631 256.054 111.041 255.527 111.041Z"
                fill="#A1A1B2"
              />
              <g filter="url(#filter6_d_6003_242425)">
                <path d="M44.5 116H43.5V136H44.5V116Z" fill="#A1A1B2" />
              </g>
              <g filter="url(#filter7_d_6003_242425)">
                <path d="M60.5 116H59.5V136H60.5V116Z" fill="#A1A1B2" />
              </g>
              <path
                d="M69.6611 131.937V131H70.4062C71.4316 131 71.6299 130.761 71.6299 129.571V127.746C71.6299 126.789 72.3477 126.153 73.7354 126.126V126.017C72.3477 125.982 71.6299 125.347 71.6299 124.39V122.564C71.6299 121.375 71.4316 121.136 70.4062 121.136H69.6611V120.199H70.5908C72.252 120.199 72.7783 120.726 72.7783 122.414V123.945C72.7783 125.005 73.3936 125.613 74.9932 125.449V126.687C73.3936 126.522 72.7783 127.138 72.7783 128.19V129.722C72.7783 131.41 72.252 131.937 70.5908 131.937H69.6611Z"
                fill="#A1A1B2"
              />
              <g filter="url(#filter8_d_6003_242425)">
                <path d="M44.5 136H43.5V156H44.5V136Z" fill="#A1A1B2" />
              </g>
              <path
                d="M53.6611 151.937V151H54.4062C55.4316 151 55.6299 150.761 55.6299 149.571V147.746C55.6299 146.789 56.3477 146.153 57.7354 146.126V146.017C56.3477 145.982 55.6299 145.347 55.6299 144.39V142.564C55.6299 141.375 55.4316 141.136 54.4062 141.136H53.6611V140.199H54.5908C56.252 140.199 56.7783 140.726 56.7783 142.414V143.945C56.7783 145.005 57.3936 145.613 58.9932 145.449V146.687C57.3936 146.522 56.7783 147.138 56.7783 148.19V149.722C56.7783 151.41 56.252 151.937 54.5908 151.937H53.6611Z"
                fill="#A1A1B2"
              />
              <path
                d="M37.6611 171.937V171H38.4062C39.4316 171 39.6299 170.761 39.6299 169.571V167.746C39.6299 166.789 40.3477 166.153 41.7354 166.126V166.017C40.3477 165.982 39.6299 165.347 39.6299 164.39V162.564C39.6299 161.375 39.4316 161.136 38.4062 161.136H37.6611V160.199H38.5908C40.252 160.199 40.7783 160.726 40.7783 162.414V163.945C40.7783 165.005 41.3936 165.613 42.9932 165.449V166.687C41.3936 166.522 40.7783 167.138 40.7783 168.19V169.722C40.7783 171.41 40.252 171.937 38.5908 171.937H37.6611Z"
                fill="#A1A1B2"
              />
            </g>
          </g>
          <path
            d="M0 12C0 5.37258 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V168C280 174.627 274.627 180 268 180H12C5.37259 180 0 174.627 0 168V12Z"
            fill="url(#paint0_linear_6003_242425)"
          />
          <g filter="url(#filter9_d_6003_242425)">
            <mask
              id="mask4_6003_242425"
              style={{
                maskType: 'luminance',
              }}
              maskUnits="userSpaceOnUse"
              x="40"
              y="40"
              width="240"
              height="140"
            >
              <path d="M40 48C40 43.5817 43.5817 40 48 40H280V180H40V48Z" fill="white" />
            </mask>
            <g mask="url(#mask4_6003_242425)">
              <path d="M40 48C40 43.5817 43.5817 40 48 40H280V180H40V48Z" fill="white" />
              <path
                d="M66.3332 55.4832V62.9998C66.3332 63.9165 65.5832 64.6665 64.6665 64.6665H51.3332C50.4165 64.6665 49.6665 63.9165 49.6665 62.9998L49.6748 52.9998C49.6748 52.0832 50.4165 51.3332 51.3332 51.3332H59.7498C59.6998 51.5998 59.6665 51.8832 59.6665 52.1665C59.6665 52.4498 59.6998 52.7332 59.7498 52.9998H51.3332L57.9998 57.1665L61.0582 55.2582C61.4498 55.6165 61.9082 55.8915 62.4165 56.0748L57.9998 58.8332L51.3332 54.6665V62.9998H64.6665V56.2498C65.2832 56.1248 65.8498 55.8498 66.3332 55.4832ZM61.3332 52.1665C61.3332 53.5498 62.4498 54.6665 63.8332 54.6665C65.2165 54.6665 66.3332 53.5498 66.3332 52.1665C66.3332 50.7832 65.2165 49.6665 63.8332 49.6665C62.4498 49.6665 61.3332 50.7832 61.3332 52.1665Z"
                fill="#BEBECC"
              />
              <path
                d="M76.6416 63.2461C74.3516 63.2461 72.8955 62.1182 72.7725 60.416L72.7656 60.3203H74.4746L74.4814 60.3887C74.5635 61.2158 75.4453 61.7627 76.6963 61.7627C77.8857 61.7627 78.7197 61.1748 78.7197 60.3271V60.3203C78.7197 59.6094 78.207 59.1787 76.9355 58.9053L75.876 58.6865C73.8594 58.2627 72.9844 57.3193 72.9844 55.8496V55.8428C72.9844 54.0791 74.502 52.8896 76.6348 52.8896C78.8223 52.8896 80.1826 54.0859 80.3057 55.6719L80.3125 55.7607H78.624L78.6104 55.6787C78.4873 54.9131 77.7559 54.3662 76.6279 54.373C75.5342 54.373 74.7549 54.8857 74.7549 55.7266V55.7334C74.7549 56.4307 75.2539 56.8682 76.4844 57.1279L77.5439 57.3535C79.6221 57.791 80.4902 58.625 80.4902 60.1152V60.1221C80.4902 62.043 79.0068 63.2461 76.6416 63.2461ZM84.7695 63.1504C83.0879 63.1504 82.2266 62.1387 82.2266 60.3613V55.5283H83.9287V59.9717C83.9287 61.127 84.3594 61.7148 85.3848 61.7148C86.4854 61.7148 87.0732 61.0039 87.0732 59.8828V55.5283H88.7754V63H87.0732V61.8652H86.957C86.6084 62.665 85.8496 63.1504 84.7695 63.1504ZM95.0098 63.123C93.9639 63.123 93.1504 62.6445 92.7402 61.8311H92.624V63H90.9219V52.6367H92.624V56.7178H92.7402C93.1299 55.9111 93.9844 55.4053 95.0098 55.4053C96.9033 55.4053 98.0791 56.8818 98.0791 59.2607V59.2744C98.0791 61.6396 96.8828 63.123 95.0098 63.123ZM94.4766 61.6875C95.6387 61.6875 96.3428 60.7783 96.3428 59.2744V59.2607C96.3428 57.7568 95.6387 56.8408 94.4766 56.8408C93.3213 56.8408 92.6035 57.7637 92.6035 59.2607V59.2744C92.6035 60.7715 93.3213 61.6875 94.4766 61.6875ZM102.604 63.1504C100.704 63.1504 99.5557 62.2754 99.4121 61.0107V60.9971H101.101L101.107 61.0107C101.285 61.5303 101.784 61.8926 102.632 61.8926C103.479 61.8926 104.067 61.5098 104.067 60.9492V60.9355C104.067 60.498 103.739 60.2109 102.919 60.0264L101.709 59.7529C100.287 59.4385 99.6104 58.7686 99.6104 57.668V57.6611C99.6104 56.3145 100.841 55.3848 102.604 55.3848C104.423 55.3848 105.51 56.2871 105.619 57.4971V57.5107H104.02L104.013 57.4902C103.89 57.0186 103.397 56.6357 102.598 56.6357C101.839 56.6357 101.292 57.0049 101.292 57.5654V57.5723C101.292 58.0098 101.606 58.2764 102.413 58.4609L103.623 58.7275C105.086 59.0557 105.776 59.6777 105.776 60.7646V60.7783C105.776 62.2002 104.443 63.1504 102.604 63.1504ZM110.698 63.1504C108.449 63.1504 107.123 61.6943 107.123 59.2539V59.2402C107.123 56.8271 108.442 55.3848 110.691 55.3848C112.612 55.3848 113.761 56.4512 113.952 57.9961V58.0234H112.346L112.339 58.0029C112.182 57.2783 111.628 56.7588 110.698 56.7588C109.536 56.7588 108.853 57.6748 108.853 59.2402V59.2539C108.853 60.8398 109.543 61.7695 110.698 61.7695C111.58 61.7695 112.12 61.3662 112.332 60.5801L112.346 60.5527L113.952 60.5459L113.938 60.6006C113.692 62.1318 112.592 63.1504 110.698 63.1504ZM115.572 63V55.5283H117.274V56.6768H117.391C117.644 55.877 118.327 55.4053 119.312 55.4053C119.571 55.4053 119.838 55.4395 120.002 55.4873V57.0117C119.729 56.957 119.448 56.916 119.154 56.916C118.02 56.916 117.274 57.5928 117.274 58.6592V63H115.572ZM122.271 54.2773C121.711 54.2773 121.253 53.833 121.253 53.2725C121.253 52.7188 121.711 52.2676 122.271 52.2676C122.825 52.2676 123.283 52.7188 123.283 53.2725C123.283 53.833 122.825 54.2773 122.271 54.2773ZM121.417 63V55.5283H123.119V63H121.417ZM129.367 63.123C128.321 63.123 127.508 62.6445 127.098 61.8311H126.981V63H125.279V52.6367H126.981V56.7178H127.098C127.487 55.9111 128.342 55.4053 129.367 55.4053C131.261 55.4053 132.437 56.8818 132.437 59.2607V59.2744C132.437 61.6396 131.24 63.123 129.367 63.123ZM128.834 61.6875C129.996 61.6875 130.7 60.7783 130.7 59.2744V59.2607C130.7 57.7568 129.996 56.8408 128.834 56.8408C127.679 56.8408 126.961 57.7637 126.961 59.2607V59.2744C126.961 60.7715 127.679 61.6875 128.834 61.6875ZM137.338 63.1504C135.116 63.1504 133.77 61.6602 133.77 59.2812V59.2744C133.77 56.9229 135.13 55.3848 137.256 55.3848C139.382 55.3848 140.694 56.875 140.694 59.1309V59.6914H135.472C135.492 61.0312 136.217 61.8105 137.372 61.8105C138.295 61.8105 138.821 61.3457 138.985 61.0039L139.006 60.9561H140.626L140.605 61.0176C140.366 61.9814 139.368 63.1504 137.338 63.1504ZM137.276 56.7178C136.326 56.7178 135.615 57.3604 135.485 58.5498H139.033C138.917 57.3262 138.227 56.7178 137.276 56.7178ZM142.396 63V55.5283H144.099V56.6768H144.215C144.468 55.877 145.151 55.4053 146.136 55.4053C146.396 55.4053 146.662 55.4395 146.826 55.4873V57.0117C146.553 56.957 146.272 56.916 145.979 56.916C144.844 56.916 144.099 57.5928 144.099 58.6592V63H142.396ZM150.88 63.1504C148.979 63.1504 147.831 62.2754 147.688 61.0107V60.9971H149.376L149.383 61.0107C149.561 61.5303 150.06 61.8926 150.907 61.8926C151.755 61.8926 152.343 61.5098 152.343 60.9492V60.9355C152.343 60.498 152.015 60.2109 151.194 60.0264L149.984 59.7529C148.562 59.4385 147.886 58.7686 147.886 57.668V57.6611C147.886 56.3145 149.116 55.3848 150.88 55.3848C152.698 55.3848 153.785 56.2871 153.895 57.4971V57.5107H152.295L152.288 57.4902C152.165 57.0186 151.673 56.6357 150.873 56.6357C150.114 56.6357 149.567 57.0049 149.567 57.5654V57.5723C149.567 58.0098 149.882 58.2764 150.688 58.4609L151.898 58.7275C153.361 59.0557 154.052 59.6777 154.052 60.7646V60.7783C154.052 62.2002 152.719 63.1504 150.88 63.1504ZM159.5 63V55.5283H161.202V56.6904H161.318C161.64 55.8564 162.392 55.3848 163.369 55.3848C164.381 55.3848 165.119 55.9043 165.44 56.7314H165.557C165.919 55.918 166.78 55.3848 167.819 55.3848C169.323 55.3848 170.226 56.3076 170.226 57.8594V63H168.523V58.2764C168.523 57.3057 168.079 56.8135 167.17 56.8135C166.281 56.8135 165.707 57.4766 165.707 58.3311V63H164.005V58.1533C164.005 57.3262 163.492 56.8135 162.658 56.8135C161.817 56.8135 161.202 57.5244 161.202 58.4541V63H159.5ZM174.279 63.123C172.857 63.123 171.825 62.248 171.825 60.8877V60.874C171.825 59.541 172.844 58.7617 174.662 58.6523L176.583 58.5361V57.8936C176.583 57.1484 176.098 56.7383 175.182 56.7383C174.402 56.7383 173.896 57.0186 173.726 57.5107L173.719 57.5381H172.112L172.119 57.4766C172.283 56.2188 173.486 55.3848 175.264 55.3848C177.185 55.3848 178.265 56.3145 178.265 57.8936V63H176.583V61.9746H176.467C176.057 62.6992 175.264 63.123 174.279 63.123ZM173.507 60.8057C173.507 61.4414 174.047 61.8174 174.799 61.8174C175.824 61.8174 176.583 61.1475 176.583 60.2588V59.6572L174.901 59.7666C173.951 59.8281 173.507 60.1768 173.507 60.792V60.8057ZM181.184 54.2773C180.623 54.2773 180.165 53.833 180.165 53.2725C180.165 52.7188 180.623 52.2676 181.184 52.2676C181.737 52.2676 182.195 52.7188 182.195 53.2725C182.195 53.833 181.737 54.2773 181.184 54.2773ZM180.329 63V55.5283H182.031V63H180.329ZM184.191 63V52.6367H185.894V63H184.191ZM192.203 63.123C191.157 63.123 190.344 62.6445 189.934 61.8311H189.817V63H188.115V52.6367H189.817V56.7178H189.934C190.323 55.9111 191.178 55.4053 192.203 55.4053C194.097 55.4053 195.272 56.8818 195.272 59.2607V59.2744C195.272 61.6396 194.076 63.123 192.203 63.123ZM191.67 61.6875C192.832 61.6875 193.536 60.7783 193.536 59.2744V59.2607C193.536 57.7568 192.832 56.8408 191.67 56.8408C190.515 56.8408 189.797 57.7637 189.797 59.2607V59.2744C189.797 60.7715 190.515 61.6875 191.67 61.6875ZM200.201 63.1504C197.959 63.1504 196.605 61.6875 196.605 59.2676V59.2539C196.605 56.8545 197.979 55.3848 200.201 55.3848C202.43 55.3848 203.797 56.8477 203.797 59.2539V59.2676C203.797 61.6875 202.437 63.1504 200.201 63.1504ZM200.201 61.7695C201.384 61.7695 202.054 60.8467 202.054 59.2744V59.2607C202.054 57.6885 201.377 56.7588 200.201 56.7588C199.019 56.7588 198.342 57.6885 198.342 59.2607V59.2744C198.342 60.8467 199.019 61.7695 200.201 61.7695ZM204.556 63L206.976 59.2949L204.535 55.5283H206.504L207.987 58.1191H208.104L209.58 55.5283H211.446L209.033 59.2197L211.474 63H209.56L208.028 60.4023H207.912L206.388 63H204.556Z"
                fill="#BEBECC"
              />
              <g filter="url(#filter10_d_6003_242425)">
                <path
                  d="M48 84C48 79.5817 51.5817 76 56 76H440C444.418 76 448 79.5817 448 84V100H48V84Z"
                  fill="#F5F8FA"
                />
                <path
                  d="M64 92C66.2091 92 68 90.2091 68 88C68 85.7909 66.2091 84 64 84C61.7909 84 60 85.7909 60 88C60 90.2091 61.7909 92 64 92Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M78 92C80.2091 92 82 90.2091 82 88C82 85.7909 80.2091 84 78 84C75.7909 84 74 85.7909 74 88C74 90.2091 75.7909 92 78 92Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M92 92C94.2091 92 96 90.2091 96 88C96 85.7909 94.2091 84 92 84C89.7909 84 88 85.7909 88 88C88 90.2091 89.7909 92 92 92Z"
                  fill="#A1A1B2"
                />
                <path d="M48 100H448V168C448 174.627 442.627 180 436 180H48V100Z" fill="white" />
                <path
                  d="M56 116C56 111.582 59.5817 108 64 108H88C92.4183 108 96 111.582 96 116V140C96 144.418 92.4183 148 88 148H64C59.5817 148 56 144.418 56 140V116Z"
                  fill="#F5F8FA"
                />
                <path
                  d="M76.0002 128C78.9468 128 81.3335 125.613 81.3335 122.667C81.3335 119.72 78.9468 117.333 76.0002 117.333C73.0535 117.333 70.6668 119.72 70.6668 122.667C70.6668 125.613 73.0535 128 76.0002 128ZM76.0002 130.667C72.4402 130.667 65.3335 132.453 65.3335 136V138.667H86.6668V136C86.6668 132.453 79.5602 130.667 76.0002 130.667Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M115.302 123L112.615 113.136H113.9L115.862 121.154H115.944L118.152 113.136H119.396L121.604 121.154H121.687L123.648 113.136H124.934L122.247 123H121.085L118.815 115.214H118.733L116.464 123H115.302ZM128.98 123.13C126.875 123.13 125.604 121.653 125.604 119.343V119.336C125.604 117.06 126.902 115.501 128.905 115.501C130.908 115.501 132.125 116.991 132.125 119.192V119.657H126.82C126.854 121.182 127.695 122.07 129.008 122.07C130.006 122.07 130.621 121.599 130.819 121.154L130.847 121.093H132.036L132.022 121.147C131.77 122.146 130.717 123.13 128.98 123.13ZM128.898 116.561C127.805 116.561 126.971 117.306 126.841 118.707H130.915C130.792 117.251 129.985 116.561 128.898 116.561ZM134.039 123V112.705H135.229V123H134.039ZM140.526 123.13C138.462 123.13 137.143 121.633 137.143 119.295V119.281C137.143 116.991 138.455 115.501 140.52 115.501C142.311 115.501 143.384 116.533 143.603 117.846L143.609 117.887H142.427L142.42 117.866C142.235 117.142 141.579 116.554 140.52 116.554C139.193 116.554 138.359 117.62 138.359 119.281V119.295C138.359 120.99 139.207 122.077 140.52 122.077C141.511 122.077 142.14 121.64 142.413 120.819L142.427 120.778L143.603 120.771L143.589 120.847C143.288 122.18 142.297 123.13 140.526 123.13ZM148.374 123.13C146.275 123.13 144.977 121.681 144.977 119.322V119.309C144.977 116.943 146.275 115.501 148.374 115.501C150.473 115.501 151.771 116.943 151.771 119.309V119.322C151.771 121.681 150.473 123.13 148.374 123.13ZM148.374 122.077C149.769 122.077 150.555 121.059 150.555 119.322V119.309C150.555 117.565 149.769 116.554 148.374 116.554C146.979 116.554 146.193 117.565 146.193 119.309V119.322C146.193 121.059 146.979 122.077 148.374 122.077ZM153.617 123V115.631H154.807V116.752H154.916C155.244 115.959 155.941 115.501 156.905 115.501C157.903 115.501 158.601 116.027 158.942 116.793H159.052C159.448 116.014 160.289 115.501 161.308 115.501C162.812 115.501 163.652 116.362 163.652 117.907V123H162.463V118.181C162.463 117.094 161.964 116.554 160.925 116.554C159.899 116.554 159.223 117.326 159.223 118.263V123H158.033V117.996C158.033 117.121 157.432 116.554 156.502 116.554C155.538 116.554 154.807 117.395 154.807 118.434V123H153.617ZM168.807 123.13C166.701 123.13 165.43 121.653 165.43 119.343V119.336C165.43 117.06 166.729 115.501 168.731 115.501C170.734 115.501 171.951 116.991 171.951 119.192V119.657H166.646C166.681 121.182 167.521 122.07 168.834 122.07C169.832 122.07 170.447 121.599 170.646 121.154L170.673 121.093H171.862L171.849 121.147C171.596 122.146 170.543 123.13 168.807 123.13ZM168.725 116.561C167.631 116.561 166.797 117.306 166.667 118.707H170.741C170.618 117.251 169.812 116.561 168.725 116.561ZM177.734 123V115.631H178.924V116.752H179.033C179.361 115.959 180.059 115.501 181.022 115.501C182.021 115.501 182.718 116.027 183.06 116.793H183.169C183.565 116.014 184.406 115.501 185.425 115.501C186.929 115.501 187.77 116.362 187.77 117.907V123H186.58V118.181C186.58 117.094 186.081 116.554 185.042 116.554C184.017 116.554 183.34 117.326 183.34 118.263V123H182.15V117.996C182.15 117.121 181.549 116.554 180.619 116.554C179.655 116.554 178.924 117.395 178.924 118.434V123H177.734ZM192.924 123.13C190.818 123.13 189.547 121.653 189.547 119.343V119.336C189.547 117.06 190.846 115.501 192.849 115.501C194.852 115.501 196.068 116.991 196.068 119.192V119.657H190.764C190.798 121.182 191.639 122.07 192.951 122.07C193.949 122.07 194.564 121.599 194.763 121.154L194.79 121.093H195.979L195.966 121.147C195.713 122.146 194.66 123.13 192.924 123.13ZM192.842 116.561C191.748 116.561 190.914 117.306 190.784 118.707H194.858C194.735 117.251 193.929 116.561 192.842 116.561ZM200.443 123.13C198.803 123.13 197.675 122.337 197.538 121.12H198.755C198.953 121.735 199.541 122.139 200.484 122.139C201.476 122.139 202.18 121.667 202.18 120.997V120.983C202.18 120.484 201.804 120.136 200.895 119.917L199.753 119.644C198.372 119.315 197.75 118.714 197.75 117.654V117.647C197.75 116.424 198.926 115.501 200.491 115.501C202.036 115.501 203.109 116.273 203.273 117.477H202.104C201.947 116.896 201.373 116.492 200.484 116.492C199.609 116.492 198.967 116.943 198.967 117.593V117.606C198.967 118.105 199.336 118.42 200.204 118.632L201.339 118.905C202.727 119.24 203.396 119.842 203.396 120.895V120.908C203.396 122.221 202.118 123.13 200.443 123.13ZM207.635 123.13C205.994 123.13 204.866 122.337 204.729 121.12H205.946C206.145 121.735 206.732 122.139 207.676 122.139C208.667 122.139 209.371 121.667 209.371 120.997V120.983C209.371 120.484 208.995 120.136 208.086 119.917L206.944 119.644C205.563 119.315 204.941 118.714 204.941 117.654V117.647C204.941 116.424 206.117 115.501 207.683 115.501C209.228 115.501 210.301 116.273 210.465 117.477H209.296C209.139 116.896 208.564 116.492 207.676 116.492C206.801 116.492 206.158 116.943 206.158 117.593V117.606C206.158 118.105 206.527 118.42 207.396 118.632L208.53 118.905C209.918 119.24 210.588 119.842 210.588 120.895V120.908C210.588 122.221 209.31 123.13 207.635 123.13ZM214.457 123.13C213.056 123.13 211.996 122.282 211.996 120.942V120.929C211.996 119.616 212.967 118.857 214.683 118.755L216.795 118.625V117.955C216.795 117.046 216.241 116.554 215.141 116.554C214.259 116.554 213.678 116.882 213.486 117.456L213.479 117.477H212.29L212.297 117.436C212.488 116.28 213.609 115.501 215.182 115.501C216.979 115.501 217.984 116.424 217.984 117.955V123H216.795V121.913H216.686C216.221 122.699 215.448 123.13 214.457 123.13ZM213.213 120.915C213.213 121.66 213.849 122.098 214.703 122.098C215.913 122.098 216.795 121.305 216.795 120.252V119.582L214.826 119.705C213.705 119.773 213.213 120.17 213.213 120.901V120.915ZM223.193 125.598C221.416 125.598 220.281 124.798 220.097 123.588L220.11 123.581H221.341L221.348 123.588C221.478 124.148 222.134 124.545 223.193 124.545C224.513 124.545 225.299 123.923 225.299 122.836V121.346H225.189C224.725 122.159 223.891 122.617 222.879 122.617C220.972 122.617 219.789 121.141 219.789 119.076V119.062C219.789 116.998 220.979 115.501 222.906 115.501C223.945 115.501 224.752 116.014 225.203 116.848H225.285V115.631H226.475V122.897C226.475 124.545 225.203 125.598 223.193 125.598ZM223.139 121.564C224.506 121.564 225.326 120.539 225.326 119.076V119.062C225.326 117.6 224.499 116.554 223.139 116.554C221.771 116.554 221.006 117.6 221.006 119.062V119.076C221.006 120.539 221.771 121.564 223.139 121.564ZM231.697 123.13C229.592 123.13 228.32 121.653 228.32 119.343V119.336C228.32 117.06 229.619 115.501 231.622 115.501C233.625 115.501 234.842 116.991 234.842 119.192V119.657H229.537C229.571 121.182 230.412 122.07 231.725 122.07C232.723 122.07 233.338 121.599 233.536 121.154L233.563 121.093H234.753L234.739 121.147C234.486 122.146 233.434 123.13 231.697 123.13ZM231.615 116.561C230.521 116.561 229.688 117.306 229.558 118.707H233.632C233.509 117.251 232.702 116.561 231.615 116.561Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M115.575 143.13C113.9 143.13 113.039 142.146 113.039 140.402V135.631H114.229V140.115C114.229 141.441 114.707 142.077 115.883 142.077C117.182 142.077 117.872 141.284 117.872 139.992V135.631H119.062V143H117.872V141.899H117.763C117.4 142.686 116.655 143.13 115.575 143.13ZM123.812 143.13C122.172 143.13 121.044 142.337 120.907 141.12H122.124C122.322 141.735 122.91 142.139 123.854 142.139C124.845 142.139 125.549 141.667 125.549 140.997V140.983C125.549 140.484 125.173 140.136 124.264 139.917L123.122 139.644C121.741 139.315 121.119 138.714 121.119 137.654V137.647C121.119 136.424 122.295 135.501 123.86 135.501C125.405 135.501 126.479 136.273 126.643 137.477H125.474C125.316 136.896 124.742 136.492 123.854 136.492C122.979 136.492 122.336 136.943 122.336 137.593V137.606C122.336 138.105 122.705 138.42 123.573 138.632L124.708 138.905C126.096 139.24 126.766 139.842 126.766 140.895V140.908C126.766 142.221 125.487 143.13 123.812 143.13ZM131.619 143.13C129.514 143.13 128.242 141.653 128.242 139.343V139.336C128.242 137.06 129.541 135.501 131.544 135.501C133.547 135.501 134.764 136.991 134.764 139.192V139.657H129.459C129.493 141.182 130.334 142.07 131.646 142.07C132.645 142.07 133.26 141.599 133.458 141.154L133.485 141.093H134.675L134.661 141.147C134.408 142.146 133.355 143.13 131.619 143.13ZM131.537 136.561C130.443 136.561 129.609 137.306 129.479 138.707H133.554C133.431 137.251 132.624 136.561 131.537 136.561ZM136.609 143V135.631H137.799V136.725H137.908C138.188 135.952 138.879 135.501 139.877 135.501C140.103 135.501 140.355 135.528 140.472 135.549V136.704C140.226 136.663 140 136.636 139.74 136.636C138.605 136.636 137.799 137.354 137.799 138.434V143H136.609ZM147.574 144.6C144.047 144.6 141.812 142.385 141.812 138.898V138.885C141.812 135.508 144.108 133.19 147.458 133.19C150.691 133.19 152.94 135.255 152.94 138.215V138.229C152.94 140.45 151.942 141.865 150.37 141.865C149.584 141.865 148.982 141.421 148.873 140.758L148.866 140.717H148.757C148.463 141.414 147.848 141.804 147.048 141.804C145.626 141.804 144.669 140.635 144.669 138.905V138.892C144.669 137.237 145.646 136.075 147.048 136.075C147.766 136.075 148.381 136.444 148.647 137.039H148.757V136.205H149.789V140.218C149.789 140.696 150.069 140.977 150.562 140.977C151.423 140.977 151.977 139.89 151.977 138.215V138.201C151.977 135.74 150.104 134.052 147.369 134.052C144.696 134.052 142.775 136.089 142.775 138.926V138.939C142.775 141.852 144.662 143.731 147.588 143.731C148.524 143.731 149.447 143.602 149.878 143.403V144.265C149.263 144.477 148.436 144.6 147.574 144.6ZM147.205 140.84C148.142 140.84 148.743 140.095 148.743 138.933V138.919C148.743 137.757 148.148 137.019 147.219 137.019C146.303 137.019 145.763 137.729 145.763 138.919V138.933C145.763 140.115 146.31 140.84 147.205 140.84ZM157.808 143.13C155.743 143.13 154.424 141.633 154.424 139.295V139.281C154.424 136.991 155.736 135.501 157.801 135.501C159.592 135.501 160.665 136.533 160.884 137.846L160.891 137.887H159.708L159.701 137.866C159.517 137.142 158.86 136.554 157.801 136.554C156.475 136.554 155.641 137.62 155.641 139.281V139.295C155.641 140.99 156.488 142.077 157.801 142.077C158.792 142.077 159.421 141.64 159.694 140.819L159.708 140.778L160.884 140.771L160.87 140.847C160.569 142.18 159.578 143.13 157.808 143.13ZM165.655 143.13C163.557 143.13 162.258 141.681 162.258 139.322V139.309C162.258 136.943 163.557 135.501 165.655 135.501C167.754 135.501 169.053 136.943 169.053 139.309V139.322C169.053 141.681 167.754 143.13 165.655 143.13ZM165.655 142.077C167.05 142.077 167.836 141.059 167.836 139.322V139.309C167.836 137.565 167.05 136.554 165.655 136.554C164.261 136.554 163.475 137.565 163.475 139.309V139.322C163.475 141.059 164.261 142.077 165.655 142.077ZM170.898 143V135.631H172.088V136.752H172.197C172.525 135.959 173.223 135.501 174.187 135.501C175.185 135.501 175.882 136.027 176.224 136.793H176.333C176.729 136.014 177.57 135.501 178.589 135.501C180.093 135.501 180.934 136.362 180.934 137.907V143H179.744V138.181C179.744 137.094 179.245 136.554 178.206 136.554C177.181 136.554 176.504 137.326 176.504 138.263V143H175.314V137.996C175.314 137.121 174.713 136.554 173.783 136.554C172.819 136.554 172.088 137.395 172.088 138.434V143H170.898ZM183.08 145.461V135.631H184.27V136.807H184.379C184.83 135.986 185.65 135.501 186.676 135.501C188.542 135.501 189.766 137.012 189.766 139.309V139.322C189.766 141.633 188.549 143.13 186.676 143.13C185.664 143.13 184.782 142.624 184.379 141.838H184.27V145.461H183.08ZM186.402 142.077C187.749 142.077 188.549 141.038 188.549 139.322V139.309C188.549 137.593 187.749 136.554 186.402 136.554C185.062 136.554 184.242 137.606 184.242 139.309V139.322C184.242 141.024 185.062 142.077 186.402 142.077ZM193.648 143.13C192.247 143.13 191.188 142.282 191.188 140.942V140.929C191.188 139.616 192.158 138.857 193.874 138.755L195.986 138.625V137.955C195.986 137.046 195.433 136.554 194.332 136.554C193.45 136.554 192.869 136.882 192.678 137.456L192.671 137.477H191.481L191.488 137.436C191.68 136.28 192.801 135.501 194.373 135.501C196.171 135.501 197.176 136.424 197.176 137.955V143H195.986V141.913H195.877C195.412 142.699 194.64 143.13 193.648 143.13ZM192.404 140.915C192.404 141.66 193.04 142.098 193.895 142.098C195.104 142.098 195.986 141.305 195.986 140.252V139.582L194.018 139.705C192.896 139.773 192.404 140.17 192.404 140.901V140.915ZM199.35 143V135.631H200.539V136.738H200.648C201.018 135.959 201.708 135.501 202.795 135.501C204.449 135.501 205.372 136.479 205.372 138.229V143H204.183V138.516C204.183 137.189 203.636 136.554 202.46 136.554C201.284 136.554 200.539 137.347 200.539 138.639V143H199.35ZM207.881 145.584C207.724 145.584 207.519 145.57 207.354 145.543V144.565C207.498 144.593 207.683 144.6 207.847 144.6C208.523 144.6 208.934 144.292 209.2 143.444L209.337 143.007L206.609 135.631H207.881L209.904 141.694H210.014L212.03 135.631H213.281L210.403 143.451C209.795 145.105 209.187 145.584 207.881 145.584ZM214.799 143.068C214.313 143.068 213.91 142.665 213.91 142.18C213.91 141.688 214.313 141.291 214.799 141.291C215.291 141.291 215.688 141.688 215.688 142.18C215.688 142.665 215.291 143.068 214.799 143.068ZM220.726 143.13C218.661 143.13 217.342 141.633 217.342 139.295V139.281C217.342 136.991 218.654 135.501 220.719 135.501C222.51 135.501 223.583 136.533 223.802 137.846L223.809 137.887H222.626L222.619 137.866C222.435 137.142 221.778 136.554 220.719 136.554C219.393 136.554 218.559 137.62 218.559 139.281V139.295C218.559 140.99 219.406 142.077 220.719 142.077C221.71 142.077 222.339 141.64 222.612 140.819L222.626 140.778L223.802 140.771L223.788 140.847C223.487 142.18 222.496 143.13 220.726 143.13ZM228.573 143.13C226.475 143.13 225.176 141.681 225.176 139.322V139.309C225.176 136.943 226.475 135.501 228.573 135.501C230.672 135.501 231.971 136.943 231.971 139.309V139.322C231.971 141.681 230.672 143.13 228.573 143.13ZM228.573 142.077C229.968 142.077 230.754 141.059 230.754 139.322V139.309C230.754 137.565 229.968 136.554 228.573 136.554C227.179 136.554 226.393 137.565 226.393 139.309V139.322C226.393 141.059 227.179 142.077 228.573 142.077ZM233.816 143V135.631H235.006V136.752H235.115C235.443 135.959 236.141 135.501 237.104 135.501C238.103 135.501 238.8 136.027 239.142 136.793H239.251C239.647 136.014 240.488 135.501 241.507 135.501C243.011 135.501 243.852 136.362 243.852 137.907V143H242.662V138.181C242.662 137.094 242.163 136.554 241.124 136.554C240.099 136.554 239.422 137.326 239.422 138.263V143H238.232V137.996C238.232 137.121 237.631 136.554 236.701 136.554C235.737 136.554 235.006 137.395 235.006 138.434V143H233.816Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M56 168C56 161.373 61.3726 156 68 156H428C434.627 156 440 161.373 440 168C440 174.627 434.627 180 428 180H56V168Z"
                  fill="#F5F8FA"
                />
              </g>
            </g>
          </g>
        </g>
        <defs>
          <filter
            id="filter0_d_6003_242425"
            x="23.5"
            y="41"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_242425" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_242425" result="shape" />
          </filter>
          <filter
            id="filter1_d_6003_242425"
            x="23.5"
            y="61"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_242425" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_242425" result="shape" />
          </filter>
          <filter
            id="filter2_d_6003_242425"
            x="39.5"
            y="61"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_242425" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_242425" result="shape" />
          </filter>
          <filter
            id="filter3_d_6003_242425"
            x="23.5"
            y="81"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_242425" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_242425" result="shape" />
          </filter>
          <filter
            id="filter4_d_6003_242425"
            x="39.5"
            y="81"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_242425" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_242425" result="shape" />
          </filter>
          <filter
            id="filter5_d_6003_242425"
            x="55.5"
            y="81"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_242425" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_242425" result="shape" />
          </filter>
          <filter
            id="filter6_d_6003_242425"
            x="23.5"
            y="101"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_242425" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_242425" result="shape" />
          </filter>
          <filter
            id="filter7_d_6003_242425"
            x="39.5"
            y="101"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_242425" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_242425" result="shape" />
          </filter>
          <filter
            id="filter8_d_6003_242425"
            x="23.5"
            y="121"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_242425" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_242425" result="shape" />
          </filter>
          <filter
            id="filter9_d_6003_242425"
            x="25"
            y="30"
            width="270"
            height="170"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="7.5" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0.15 0 0 0 0 0.266667 0 0 0 0 0.5 0 0 0 0.05 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_242425" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_242425" result="shape" />
          </filter>
          <filter
            id="filter10_d_6003_242425"
            x="33"
            y="66"
            width="430"
            height="134"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="7.5" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0.15 0 0 0 0 0.266667 0 0 0 0 0.5 0 0 0 0.05 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_242425" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_242425" result="shape" />
          </filter>
          <linearGradient
            id="paint0_linear_6003_242425"
            x1="0"
            y1="0"
            x2="163.744"
            y2="254.731"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor="white" stopOpacity="0" />
            <stop offset="0.625985" stopColor="white" />
          </linearGradient>
        </defs>
      </svg>
    );
  }

  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="288" height="188" viewBox="0 0 288 188" fill="none">
      <g clipPath="url(#clip0_6003_246339)" filter="url(#filter0_d_6003_246339)">
        <mask
          id="mask0_6003_246339"
          style={{
            maskType: 'luminance',
          }}
          maskUnits="userSpaceOnUse"
          x="4"
          y="0"
          width="280"
          height="180"
        >
          <path
            d="M4 12C4 5.37258 9.37258 0 16 0H272C278.627 0 284 5.37258 284 12V168C284 174.627 278.627 180 272 180H16C9.37259 180 4 174.627 4 168V12Z"
            fill="white"
          />
        </mask>
        <g mask="url(#mask0_6003_246339)">
          <mask
            id="mask1_6003_246339"
            style={{
              maskType: 'luminance',
            }}
            maskUnits="userSpaceOnUse"
            x="4"
            y="0"
            width="280"
            height="248"
          >
            <path
              d="M4 12C4 5.37259 9.37258 0 16 0H272C278.627 0 284 5.37258 284 12V236C284 242.627 278.627 248 272 248H16C9.37259 248 4 242.627 4 236V12Z"
              fill="white"
            />
          </mask>
          <g mask="url(#mask1_6003_246339)">
            <mask
              id="mask2_6003_246339"
              style={{
                maskType: 'luminance',
              }}
              maskUnits="userSpaceOnUse"
              x="4"
              y="0"
              width="280"
              height="248"
            >
              <path
                d="M4 8.00001C4 3.58173 7.58172 0 12 0H276C280.418 0 284 3.58172 284 8V248H4V8.00001Z"
                fill="white"
              />
            </mask>
            <g mask="url(#mask2_6003_246339)">
              <path
                d="M4 8.00001C4 3.58173 7.58172 0 12 0H276C280.418 0 284 3.58172 284 8V248H4V8.00001Z"
                fill="#23232B"
              />
              <mask
                id="mask3_6003_246339"
                style={{
                  maskType: 'luminance',
                }}
                maskUnits="userSpaceOnUse"
                x="12"
                y="8"
                width="16"
                height="16"
              >
                <path d="M28 8H12V24H28V8Z" fill="white" />
              </mask>
              <g mask="url(#mask3_6003_246339)">
                <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M20.0066 8C15.5792 8 12 11.6667 12 16.2028C12 19.8288 14.2933 22.8981 17.4747 23.9844C17.8725 24.0661 18.0182 23.8079 18.0182 23.5908C18.0182 23.4006 18.005 22.7488 18.005 22.0696C15.7778 22.5586 15.314 21.0918 15.314 21.0918C14.9561 20.1411 14.4257 19.8968 14.4257 19.8968C13.6967 19.3943 14.4788 19.3943 14.4788 19.3943C15.2874 19.4486 15.7118 20.2363 15.7118 20.2363C16.4275 21.4856 17.5807 21.1326 18.0447 20.9153C18.1109 20.3856 18.3232 20.0189 18.5485 19.8153C16.7721 19.6251 14.9031 18.919 14.9031 15.7681C14.9031 14.8718 15.2211 14.1385 15.7249 13.5681C15.6454 13.3645 15.3669 12.5223 15.8045 11.3952C15.8045 11.3952 16.4806 11.1778 18.0049 12.2371C18.6575 12.0576 19.3305 11.9663 20.0066 11.9655C20.6827 11.9655 21.3718 12.0606 22.0082 12.2371C23.5327 11.1778 24.2087 11.3952 24.2087 11.3952C24.6463 12.5223 24.3677 13.3645 24.2882 13.5681C24.8053 14.1385 25.1101 14.8718 25.1101 15.7681C25.1101 18.919 23.2411 19.6115 21.4515 19.8153C21.7432 20.0733 21.9949 20.5621 21.9949 21.3363C21.9949 22.4363 21.9818 23.3191 21.9818 23.5906C21.9818 23.8079 22.1277 24.0661 22.5253 23.9846C25.7067 22.8979 28 19.8288 28 16.2028C28.0131 11.6667 24.4208 8 20.0066 8Z"
                  fill="#76768B"
                />
              </g>
              <path
                d="M37.4346 21.2461C34.5771 21.2461 32.7998 19.2568 32.7998 16.0713V16.0576C32.7998 12.9062 34.5977 10.8896 37.4072 10.8896C39.6836 10.8896 41.3242 12.1953 41.6592 14.123L41.666 14.1914H39.916L39.8955 14.123C39.5742 13.043 38.6719 12.4141 37.4072 12.4141C35.6846 12.4141 34.5977 13.8154 34.5977 16.0439V16.0576C34.5977 18.3203 35.7051 19.7217 37.4619 19.7217C38.9658 19.7217 39.9912 18.7852 40.0117 17.3838L40.0186 17.1787H37.6533V15.832H41.748V17.0625C41.748 19.6123 40.0664 21.2461 37.4346 21.2461ZM44.4961 12.2773C43.9355 12.2773 43.4775 11.833 43.4775 11.2725C43.4775 10.7188 43.9355 10.2676 44.4961 10.2676C45.0498 10.2676 45.5078 10.7188 45.5078 11.2725C45.5078 11.833 45.0498 12.2773 44.4961 12.2773ZM43.6416 21V13.5283H45.3438V21H43.6416ZM50.375 21.0342C48.6592 21.0342 47.9551 20.46 47.9551 19.0176V14.8477H46.793V13.5283H47.9551V11.6963H49.6846V13.5283H51.2637V14.8477H49.6846V18.6143C49.6846 19.3594 49.9785 19.6738 50.6895 19.6738C50.9287 19.6738 51.0586 19.667 51.2637 19.6465V20.959C51.0176 21.0068 50.7031 21.0342 50.375 21.0342ZM53.1367 21V11.1357H54.9004V15.2373H59.6992V11.1357H61.4561V21H59.6992V16.7207H54.9004V21H53.1367ZM66.1934 21.1504C64.5117 21.1504 63.6504 20.1387 63.6504 18.3613V13.5283H65.3525V17.9717C65.3525 19.127 65.7832 19.7148 66.8086 19.7148C67.9092 19.7148 68.4971 19.0039 68.4971 17.8828V13.5283H70.1992V21H68.4971V19.8652H68.3809C68.0322 20.665 67.2734 21.1504 66.1934 21.1504ZM76.4336 21.123C75.3877 21.123 74.5742 20.6445 74.1641 19.8311H74.0479V21H72.3457V10.6367H74.0479V14.7178H74.1641C74.5537 13.9111 75.4082 13.4053 76.4336 13.4053C78.3271 13.4053 79.5029 14.8818 79.5029 17.2607V17.2744C79.5029 19.6396 78.3066 21.123 76.4336 21.123ZM75.9004 19.6875C77.0625 19.6875 77.7666 18.7783 77.7666 17.2744V17.2607C77.7666 15.7568 77.0625 14.8408 75.9004 14.8408C74.7451 14.8408 74.0273 15.7637 74.0273 17.2607V17.2744C74.0273 18.7715 74.7451 19.6875 75.9004 19.6875ZM86.9746 21.123C85.5527 21.123 84.5205 20.248 84.5205 18.8877V18.874C84.5205 17.541 85.5391 16.7617 87.3574 16.6523L89.2783 16.5361V15.8936C89.2783 15.1484 88.793 14.7383 87.877 14.7383C87.0977 14.7383 86.5918 15.0186 86.4209 15.5107L86.4141 15.5381H84.8076L84.8145 15.4766C84.9785 14.2188 86.1816 13.3848 87.959 13.3848C89.8799 13.3848 90.96 14.3145 90.96 15.8936V21H89.2783V19.9746H89.1621C88.752 20.6992 87.959 21.123 86.9746 21.123ZM86.2021 18.8057C86.2021 19.4414 86.7422 19.8174 87.4941 19.8174C88.5195 19.8174 89.2783 19.1475 89.2783 18.2588V17.6572L87.5967 17.7666C86.6465 17.8281 86.2021 18.1768 86.2021 18.792V18.8057ZM96.21 21.1504C93.9609 21.1504 92.6348 19.6943 92.6348 17.2539V17.2402C92.6348 14.8271 93.9541 13.3848 96.2031 13.3848C98.124 13.3848 99.2725 14.4512 99.4639 15.9961V16.0234H97.8574L97.8506 16.0029C97.6934 15.2783 97.1396 14.7588 96.21 14.7588C95.0479 14.7588 94.3643 15.6748 94.3643 17.2402V17.2539C94.3643 18.8398 95.0547 19.7695 96.21 19.7695C97.0918 19.7695 97.6318 19.3662 97.8438 18.5801L97.8574 18.5527L99.4639 18.5459L99.4502 18.6006C99.2041 20.1318 98.1035 21.1504 96.21 21.1504ZM104.119 21.0342C102.403 21.0342 101.699 20.46 101.699 19.0176V14.8477H100.537V13.5283H101.699V11.6963H103.429V13.5283H105.008V14.8477H103.429V18.6143C103.429 19.3594 103.723 19.6738 104.434 19.6738C104.673 19.6738 104.803 19.667 105.008 19.6465V20.959C104.762 21.0068 104.447 21.0342 104.119 21.0342ZM107.578 12.2773C107.018 12.2773 106.56 11.833 106.56 11.2725C106.56 10.7188 107.018 10.2676 107.578 10.2676C108.132 10.2676 108.59 10.7188 108.59 11.2725C108.59 11.833 108.132 12.2773 107.578 12.2773ZM106.724 21V13.5283H108.426V21H106.724ZM113.744 21.1504C111.502 21.1504 110.148 19.6875 110.148 17.2676V17.2539C110.148 14.8545 111.522 13.3848 113.744 13.3848C115.973 13.3848 117.34 14.8477 117.34 17.2539V17.2676C117.34 19.6875 115.979 21.1504 113.744 21.1504ZM113.744 19.7695C114.927 19.7695 115.597 18.8467 115.597 17.2744V17.2607C115.597 15.6885 114.92 14.7588 113.744 14.7588C112.562 14.7588 111.885 15.6885 111.885 17.2607V17.2744C111.885 18.8467 112.562 19.7695 113.744 19.7695ZM119.049 21V13.5283H120.751V14.6699H120.867C121.223 13.8701 121.94 13.3848 123.021 13.3848C124.688 13.3848 125.598 14.3896 125.598 16.167V21H123.896V16.5635C123.896 15.4014 123.424 14.8135 122.392 14.8135C121.38 14.8135 120.751 15.5244 120.751 16.6455V21H119.049ZM130.431 21.1504C128.53 21.1504 127.382 20.2754 127.238 19.0107V18.9971H128.927L128.934 19.0107C129.111 19.5303 129.61 19.8926 130.458 19.8926C131.306 19.8926 131.894 19.5098 131.894 18.9492V18.9355C131.894 18.498 131.565 18.2109 130.745 18.0264L129.535 17.7529C128.113 17.4385 127.437 16.7686 127.437 15.668V15.6611C127.437 14.3145 128.667 13.3848 130.431 13.3848C132.249 13.3848 133.336 14.2871 133.445 15.4971V15.5107H131.846L131.839 15.4902C131.716 15.0186 131.224 14.6357 130.424 14.6357C129.665 14.6357 129.118 15.0049 129.118 15.5654V15.5723C129.118 16.0098 129.433 16.2764 130.239 16.4609L131.449 16.7275C132.912 17.0557 133.603 17.6777 133.603 18.7646V18.7783C133.603 20.2002 132.27 21.1504 130.431 21.1504Z"
                fill="#828299"
              />
              <path
                d="M270.667 8.6665H262.667C261.933 8.6665 261.333 9.2665 261.333 9.99984V19.3332H262.667V9.99984H270.667V8.6665ZM272.667 11.3332H265.333C264.6 11.3332 264 11.9332 264 12.6665V21.9998C264 22.7332 264.6 23.3332 265.333 23.3332H272.667C273.4 23.3332 274 22.7332 274 21.9998V12.6665C274 11.9332 273.4 11.3332 272.667 11.3332ZM272.667 21.9998H265.333V12.6665H272.667V21.9998Z"
                fill="#828299"
              />
              <path
                d="M25.7256 51H18.8486V49.9404H21.7607V42.5029H21.6514L18.8281 44.3281V43.043L21.7676 41.1357H22.9502V49.9404H25.7256V51Z"
                fill="#525266"
              />
              <path
                d="M18.8555 63.9111C18.8555 62.1748 20.1406 60.9307 21.9385 60.9307C23.75 60.9307 24.9941 62.0518 24.9941 63.6992C24.9941 64.7246 24.5293 65.5449 22.957 67.2607L20.6328 69.79V69.9062H25.1514V71H18.9102V70.166L22.2461 66.4541C23.4971 65.0527 23.7979 64.5264 23.7979 63.7471C23.7979 62.6875 23.0527 61.9902 21.9043 61.9902C20.7695 61.9902 20.0176 62.749 20.0176 63.9111V63.9521H18.8555V63.9111Z"
                fill="#525266"
              />
              <path
                d="M20.7969 86.4268V85.415H21.8701C22.9775 85.415 23.75 84.6904 23.75 83.6582C23.75 82.6533 23.0117 81.9902 21.8975 81.9902C20.79 81.9902 20.0518 82.6396 19.9561 83.6992H18.8008C18.917 81.9902 20.1201 80.9307 21.9453 80.9307C23.709 80.9307 24.9668 81.9902 24.9668 83.4873C24.9668 84.6768 24.3447 85.5244 23.2852 85.7842V85.8936C24.5977 86.0645 25.377 86.9873 25.377 88.334C25.377 90.0088 23.9688 91.2051 22 91.2051C20.0518 91.2051 18.6982 90.084 18.6094 88.3818H19.751C19.8604 89.4346 20.7354 90.1182 21.9658 90.1182C23.3193 90.1182 24.1602 89.4209 24.1602 88.3066C24.1602 87.1582 23.292 86.4268 21.9248 86.4268H20.7969Z"
                fill="#525266"
              />
              <path
                d="M23.1553 111V108.915H18.6572V107.938L22.0068 101.136H23.2373L19.9355 107.78V107.869H23.1689V105.053H24.2627V107.855H25.7666V108.915H24.2559V111H23.1553Z"
                fill="#525266"
              />
              <path
                d="M21.918 131.198C20.0791 131.198 18.7803 130.063 18.6777 128.368H19.8398C19.9492 129.4 20.8311 130.111 21.9863 130.111C23.2578 130.111 24.1055 129.216 24.1055 127.876C24.1055 126.522 23.251 125.606 21.9863 125.606C21.1045 125.606 20.373 126.01 19.9834 126.707H18.8418L19.3408 121.136H24.7344V122.223H20.291L20.0176 125.442H20.127C20.6123 124.854 21.3164 124.547 22.1846 124.547C24.0098 124.547 25.2812 125.907 25.2812 127.849C25.2812 129.845 23.9209 131.198 21.918 131.198Z"
                fill="#525266"
              />
              <path
                d="M25.3838 147.835C25.3838 149.79 23.9756 151.205 22.0205 151.205C20.0791 151.205 18.6777 149.797 18.6777 147.835C18.6777 146.68 19.0674 145.634 20.0107 144.26C20.0996 144.109 22.1504 141.238 22.2188 141.136H23.6064L20.9131 144.834C20.6123 145.258 20.6396 145.23 20.5918 145.34L20.6943 145.395C20.9883 144.998 21.6992 144.704 22.3281 144.704C24.085 144.704 25.3838 146.037 25.3838 147.835ZM22.0273 150.132C23.2715 150.132 24.2148 149.161 24.2148 147.896C24.2148 146.625 23.2715 145.654 22.0273 145.654C20.79 145.654 19.8467 146.625 19.8467 147.896C19.8467 149.161 20.79 150.132 22.0273 150.132Z"
                fill="#525266"
              />
              <path
                d="M19.6348 171L24.1123 162.305V162.216H18.7598V161.136H25.3428V162.25L20.9199 171H19.6348Z"
                fill="#525266"
              />
              <path
                d="M43.5752 51.1299C42.1602 51.1299 41.2168 50.2412 41.2168 48.8945C41.2168 47.582 42.1602 46.8027 43.8486 46.7139L45.8857 46.6113V45.9414C45.8857 45.0117 45.3184 44.499 44.2861 44.499C43.4316 44.499 42.8301 44.8613 42.6387 45.4971H41.4971C41.6338 44.3076 42.7822 43.4941 44.2998 43.4941C46.043 43.4941 47.041 44.3828 47.041 45.9277V51.0068H45.9336V49.8926H45.8174C45.4619 50.6855 44.6553 51.1299 43.5752 51.1299ZM43.9102 50.1113C45.0312 50.1113 45.8857 49.3662 45.8857 48.375V47.5L43.9785 47.5889C42.9395 47.6367 42.3926 48.0811 42.3926 48.8535C42.3926 49.6328 42.9736 50.1113 43.9102 50.1113ZM56.9873 43.583L55.3945 51H54.2803L53.0225 45.2168H52.9404L51.6826 51H50.5684L48.9756 43.583H50.1104L51.1152 49.5303H51.2383L52.4346 43.5898H53.5283L54.7246 49.5303H54.8477L55.8525 43.583H56.9873ZM60.8838 51.1299C59.4688 51.1299 58.5254 50.2412 58.5254 48.8945C58.5254 47.582 59.4688 46.8027 61.1572 46.7139L63.1943 46.6113V45.9414C63.1943 45.0117 62.627 44.499 61.5947 44.499C60.7402 44.499 60.1387 44.8613 59.9473 45.4971H58.8057C58.9424 44.3076 60.0908 43.4941 61.6084 43.4941C63.3516 43.4941 64.3496 44.3828 64.3496 45.9277V51.0068H63.2422V49.8926H63.126C62.7705 50.6855 61.9639 51.1299 60.8838 51.1299ZM61.2188 50.1113C62.3398 50.1113 63.1943 49.3662 63.1943 48.375V47.5L61.2871 47.5889C60.248 47.6367 59.7012 48.0811 59.7012 48.8535C59.7012 49.6328 60.2822 50.1113 61.2188 50.1113ZM70.4199 41.7646C69.873 41.7646 69.4561 41.3545 69.4561 40.8076C69.4561 40.2676 69.873 39.8574 70.4199 39.8574C70.9668 39.8574 71.3838 40.2676 71.3838 40.8076C71.3838 41.3545 70.9668 41.7646 70.4199 41.7646ZM73.5303 51H67.3848V50.0361H69.9277V44.5469H67.4053V43.583H71.0762V50.0361H73.5303V51ZM77.6797 41.5938H78.8281V43.6035H81.8359V44.5947H78.8418V48.7783C78.8418 49.585 79.4092 50.0225 80.4551 50.0225C80.8721 50.0225 81.6172 50.002 81.8154 49.9814V50.9658C81.6309 51 80.7285 51.0342 80.373 51.0342C78.5342 51.0342 77.6797 50.3369 77.6797 48.792V44.5947H75.7041V43.6035H77.6797V41.5938ZM93.5527 45.5859C93.5527 44.3008 94.6465 43.4395 96.2803 43.4395C97.8252 43.4395 98.8711 44.2119 99.0078 45.4492H97.8867C97.75 44.7998 97.1279 44.4033 96.2598 44.4033C95.3164 44.4033 94.708 44.8408 94.708 45.5176C94.708 46.085 95.0908 46.4062 96.0205 46.6113L97.0664 46.8506C98.5088 47.1787 99.165 47.8076 99.165 48.8809C99.165 50.248 98.0234 51.1367 96.2666 51.1367C94.585 51.1367 93.4707 50.3506 93.3408 49.0791H94.5234C94.6943 49.7627 95.3506 50.1592 96.3076 50.1592C97.3193 50.1592 97.9619 49.7012 97.9619 48.9902C97.9619 48.4023 97.5996 48.0879 96.6562 47.876L95.5557 47.623C94.2158 47.3154 93.5527 46.6387 93.5527 45.5859ZM103.643 41.5938H104.791V43.6035H107.799V44.5947H104.805V48.7783C104.805 49.585 105.372 50.0225 106.418 50.0225C106.835 50.0225 107.58 50.002 107.778 49.9814V50.9658C107.594 51 106.691 51.0342 106.336 51.0342C104.497 51.0342 103.643 50.3369 103.643 48.792V44.5947H101.667V43.6035H103.643V41.5938ZM115.564 49.0859H116.692C116.467 50.3096 115.291 51.1367 113.732 51.1367C111.695 51.1367 110.513 49.9131 110.513 47.8008V46.6865C110.513 44.7314 111.764 43.4463 113.65 43.4463C115.578 43.4463 116.713 44.7246 116.713 46.8711V47.5957H111.661V47.8965C111.661 49.2568 112.468 50.1318 113.732 50.1318C114.669 50.1318 115.359 49.7354 115.564 49.0859ZM113.644 44.4443C112.406 44.4443 111.661 45.292 111.661 46.7139H115.564C115.564 45.2988 114.84 44.4443 113.644 44.4443ZM122.681 43.46C124.396 43.46 125.518 44.6973 125.518 46.6045V47.9854C125.518 49.8857 124.396 51.123 122.681 51.123C121.607 51.123 120.821 50.665 120.5 49.8516H120.37V53.502H119.188V43.583H120.336V44.7178H120.459C120.849 43.8975 121.621 43.46 122.681 43.46ZM122.346 44.5264C121.122 44.5264 120.343 45.4014 120.343 46.7686V47.835C120.343 49.209 121.122 50.084 122.346 50.084C123.569 50.084 124.349 49.2021 124.349 47.835V46.7686C124.349 45.4014 123.569 44.5264 122.346 44.5264ZM130.87 51.041C130.193 51.041 129.633 50.4736 129.633 49.7764C129.633 49.0859 130.193 48.5186 130.87 48.5186C131.547 48.5186 132.107 49.0859 132.107 49.7764C132.107 50.4736 131.547 51.041 130.87 51.041ZM141.527 49.0859H142.655C142.43 50.3096 141.254 51.1367 139.695 51.1367C137.658 51.1367 136.476 49.9131 136.476 47.8008V46.6865C136.476 44.7314 137.727 43.4463 139.613 43.4463C141.541 43.4463 142.676 44.7246 142.676 46.8711V47.5957H137.624V47.8965C137.624 49.2568 138.431 50.1318 139.695 50.1318C140.632 50.1318 141.322 49.7354 141.527 49.0859ZM139.606 44.4443C138.369 44.4443 137.624 45.292 137.624 46.7139H141.527C141.527 45.2988 140.803 44.4443 139.606 44.4443ZM151.754 45.5381V51H150.708V45.8799C150.708 44.9775 150.38 44.5059 149.758 44.5059C149.108 44.5059 148.712 45.0732 148.712 45.9961V51H147.673V45.873C147.673 44.9775 147.345 44.5059 146.716 44.5059C146.06 44.5059 145.649 45.0732 145.649 45.9961V51H144.604V43.583H145.643V44.6289H145.766C145.95 43.8838 146.483 43.4463 147.181 43.4463C147.878 43.4463 148.37 43.877 148.527 44.6084H148.65C148.842 43.8975 149.437 43.4463 150.182 43.4463C151.214 43.4463 151.754 44.1641 151.754 45.5381ZM156.081 51.1299C154.666 51.1299 153.723 50.2412 153.723 48.8945C153.723 47.582 154.666 46.8027 156.354 46.7139L158.392 46.6113V45.9414C158.392 45.0117 157.824 44.499 156.792 44.499C155.938 44.499 155.336 44.8613 155.145 45.4971H154.003C154.14 44.3076 155.288 43.4941 156.806 43.4941C158.549 43.4941 159.547 44.3828 159.547 45.9277V51.0068H158.439V49.8926H158.323C157.968 50.6855 157.161 51.1299 156.081 51.1299ZM156.416 50.1113C157.537 50.1113 158.392 49.3662 158.392 48.375V47.5L156.484 47.5889C155.445 47.6367 154.898 48.0811 154.898 48.8535C154.898 49.6328 155.479 50.1113 156.416 50.1113ZM165.617 41.7646C165.07 41.7646 164.653 41.3545 164.653 40.8076C164.653 40.2676 165.07 39.8574 165.617 39.8574C166.164 39.8574 166.581 40.2676 166.581 40.8076C166.581 41.3545 166.164 41.7646 165.617 41.7646ZM168.728 51H162.582V50.0361H165.125V44.5469H162.603V43.583H166.273V50.0361H168.728V51ZM177.382 51H171.236V50.0361H173.772V41.6348H171.257V40.6709H174.935V50.0361H177.382V51ZM181.306 46.0645C181.306 43.7471 182.003 41.7305 183.363 40.1855H184.519C183.104 42.1748 182.509 43.918 182.509 46.0645C182.509 48.2109 183.104 49.9541 184.519 51.9434H183.363C182.003 50.3984 181.306 48.3887 181.306 46.0645ZM192.072 45.5859H190.828V41.1357H192.072V45.5859ZM197.404 45.5859C197.404 44.3008 198.498 43.4395 200.132 43.4395C201.677 43.4395 202.723 44.2119 202.859 45.4492H201.738C201.602 44.7998 200.979 44.4033 200.111 44.4033C199.168 44.4033 198.56 44.8408 198.56 45.5176C198.56 46.085 198.942 46.4062 199.872 46.6113L200.918 46.8506C202.36 47.1787 203.017 47.8076 203.017 48.8809C203.017 50.248 201.875 51.1367 200.118 51.1367C198.437 51.1367 197.322 50.3506 197.192 49.0791H198.375C198.546 49.7627 199.202 50.1592 200.159 50.1592C201.171 50.1592 201.813 49.7012 201.813 48.9902C201.813 48.4023 201.451 48.0879 200.508 47.876L199.407 47.623C198.067 47.3154 197.404 46.6387 197.404 45.5859ZM210.762 49.0859H211.89C211.664 50.3096 210.488 51.1367 208.93 51.1367C206.893 51.1367 205.71 49.9131 205.71 47.8008V46.6865C205.71 44.7314 206.961 43.4463 208.848 43.4463C210.775 43.4463 211.91 44.7246 211.91 46.8711V47.5957H206.858V47.8965C206.858 49.2568 207.665 50.1318 208.93 50.1318C209.866 50.1318 210.557 49.7354 210.762 49.0859ZM208.841 44.4443C207.604 44.4443 206.858 45.292 206.858 46.7139H210.762C210.762 45.2988 210.037 44.4443 208.841 44.4443ZM214.378 51V43.583H215.492V44.8887H215.588C215.984 43.9658 216.832 43.4463 217.96 43.4463C219.573 43.4463 220.448 44.4102 220.448 46.1875V51H219.286V46.4814C219.286 45.1416 218.739 44.5127 217.584 44.5127C216.36 44.5127 215.54 45.3672 215.54 46.6318V51H214.378ZM225.603 51.123C223.887 51.123 222.766 49.8857 222.766 47.9785V46.5977C222.766 44.6973 223.887 43.46 225.603 43.46C226.676 43.46 227.469 43.918 227.79 44.7314H227.913V40.6709H229.096V51H227.954V49.8652H227.824C227.441 50.6855 226.662 51.123 225.603 51.123ZM225.944 50.0635C227.161 50.0635 227.947 49.1885 227.947 47.8145V46.748C227.947 45.3809 227.161 44.5059 225.944 44.5059C224.721 44.5059 223.935 45.3809 223.935 46.748V47.8145C223.935 49.1816 224.721 50.0635 225.944 50.0635ZM238.338 47.165H231.105V46.085H238.338V47.165ZM245.379 49.0859H246.507C246.281 50.3096 245.105 51.1367 243.547 51.1367C241.51 51.1367 240.327 49.9131 240.327 47.8008V46.6865C240.327 44.7314 241.578 43.4463 243.465 43.4463C245.393 43.4463 246.527 44.7246 246.527 46.8711V47.5957H241.476V47.8965C241.476 49.2568 242.282 50.1318 243.547 50.1318C244.483 50.1318 245.174 49.7354 245.379 49.0859ZM243.458 44.4443C242.221 44.4443 241.476 45.292 241.476 46.7139H245.379C245.379 45.2988 244.654 44.4443 243.458 44.4443ZM255.605 45.5381V51H254.56V45.8799C254.56 44.9775 254.231 44.5059 253.609 44.5059C252.96 44.5059 252.563 45.0732 252.563 45.9961V51H251.524V45.873C251.524 44.9775 251.196 44.5059 250.567 44.5059C249.911 44.5059 249.501 45.0732 249.501 45.9961V51H248.455V43.583H249.494V44.6289H249.617C249.802 43.8838 250.335 43.4463 251.032 43.4463C251.729 43.4463 252.222 43.877 252.379 44.6084H252.502C252.693 43.8975 253.288 43.4463 254.033 43.4463C255.065 43.4463 255.605 44.1641 255.605 45.5381ZM257.916 51.041C257.39 51.041 257.103 50.6309 257.103 49.8789C257.103 49.127 257.39 48.71 257.916 48.71C258.449 48.71 258.736 49.127 258.736 49.8789C258.736 50.6309 258.449 51.041 257.916 51.041ZM260.685 51.041C260.158 51.041 259.864 50.6309 259.864 49.8789C259.864 49.127 260.158 48.71 260.685 48.71C261.211 48.71 261.505 49.127 261.505 49.8789C261.505 50.6309 261.211 51.041 260.685 51.041ZM263.453 51.041C262.92 51.041 262.633 50.6309 262.633 49.8789C262.633 49.127 262.92 48.71 263.453 48.71C263.979 48.71 264.267 49.127 264.267 49.8789C264.267 50.6309 263.979 51.041 263.453 51.041Z"
                fill="#525266"
              />
              <g filter="url(#filter1_d_6003_246339)">
                <path d="M48.5 56H47.5V76H48.5V56Z" fill="#525266" />
              </g>
              <path
                d="M60.0332 67.6777V70.0703H62.3301V71H57.4014V70.0703H58.8984V64.5127H57.251V63.583H60.0195V65.4766H60.1699C60.4434 64.1025 61.3662 63.3916 62.7949 63.3916C63.2188 63.3916 63.6221 63.4531 63.8682 63.5557V64.8613C63.5264 64.7383 63.0479 64.6562 62.6445 64.6562C61.0039 64.6562 60.0332 65.791 60.0332 67.6777ZM70.9844 69.0859H72.1123C71.8867 70.3096 70.7109 71.1367 69.1523 71.1367C67.1152 71.1367 65.9326 69.9131 65.9326 67.8008V66.6865C65.9326 64.7314 67.1836 63.4463 69.0703 63.4463C70.998 63.4463 72.1328 64.7246 72.1328 66.8711V67.5957H67.0811V67.8965C67.0811 69.2568 67.8877 70.1318 69.1523 70.1318C70.0889 70.1318 70.7793 69.7354 70.9844 69.0859ZM69.0635 64.4443C67.8262 64.4443 67.0811 65.292 67.0811 66.7139H70.9844C70.9844 65.2988 70.2598 64.4443 69.0635 64.4443ZM76.3711 61.5938H77.5195V63.6035H80.5273V64.5947H77.5332V68.7783C77.5332 69.585 78.1006 70.0225 79.1465 70.0225C79.5635 70.0225 80.3086 70.002 80.5068 69.9814V70.9658C80.3223 71 79.4199 71.0342 79.0645 71.0342C77.2256 71.0342 76.3711 70.3369 76.3711 68.792V64.5947H74.3955V63.6035H76.3711V61.5938ZM89.3252 63.583V71H88.2109V69.6943H88.1152C87.7188 70.6172 86.8711 71.1367 85.7432 71.1367C84.1299 71.1367 83.2549 70.1729 83.2549 68.3955V63.583H84.417V68.1016C84.417 69.4414 84.9639 70.0703 86.1191 70.0703C87.3428 70.0703 88.1631 69.2158 88.1631 67.9512V63.583H89.3252ZM94.6504 67.6777V70.0703H96.9473V71H92.0186V70.0703H93.5156V64.5127H91.8682V63.583H94.6367V65.4766H94.7871C95.0605 64.1025 95.9834 63.3916 97.4121 63.3916C97.8359 63.3916 98.2393 63.4531 98.4854 63.5557V64.8613C98.1436 64.7383 97.665 64.6562 97.2617 64.6562C95.6211 64.6562 94.6504 65.791 94.6504 67.6777ZM100.564 71V63.583H101.678V64.8887H101.773C102.17 63.9658 103.018 63.4463 104.146 63.4463C105.759 63.4463 106.634 64.4102 106.634 66.1875V71H105.472V66.4814C105.472 65.1416 104.925 64.5127 103.77 64.5127C102.546 64.5127 101.726 65.3672 101.726 66.6318V71H100.564ZM123.573 71.9365H122.644C120.982 71.9365 120.456 71.4102 120.456 69.7217V68.1904C120.456 67.1377 119.841 66.5225 118.241 66.6865V65.4492C119.841 65.6133 120.456 65.0049 120.456 63.9453V62.4141C120.456 60.7256 120.982 60.1992 122.644 60.1992H123.573V61.1357H122.828C121.803 61.1357 121.604 61.375 121.604 62.5645V64.3896C121.604 65.3467 120.887 65.9824 119.499 66.0166V66.126C120.887 66.1533 121.604 66.7891 121.604 67.7461V69.5713C121.604 70.7607 121.803 71 122.828 71H123.573V71.9365Z"
                fill="#525266"
              />
              <g filter="url(#filter2_d_6003_246339)">
                <path d="M48.5 76H47.5V96H48.5V76Z" fill="#525266" />
              </g>
              <g filter="url(#filter3_d_6003_246339)">
                <path d="M64.5 76H63.5V96H64.5V76Z" fill="#525266" />
              </g>
              <path
                d="M73.627 85.5859C73.627 84.3008 74.7207 83.4395 76.3545 83.4395C77.8994 83.4395 78.9453 84.2119 79.082 85.4492H77.9609C77.8242 84.7998 77.2021 84.4033 76.334 84.4033C75.3906 84.4033 74.7822 84.8408 74.7822 85.5176C74.7822 86.085 75.165 86.4062 76.0947 86.6113L77.1406 86.8506C78.583 87.1787 79.2393 87.8076 79.2393 88.8809C79.2393 90.248 78.0977 91.1367 76.3408 91.1367C74.6592 91.1367 73.5449 90.3506 73.415 89.0791H74.5977C74.7686 89.7627 75.4248 90.1592 76.3818 90.1592C77.3936 90.1592 78.0361 89.7012 78.0361 88.9902C78.0361 88.4023 77.6738 88.0879 76.7305 87.876L75.6299 87.623C74.29 87.3154 73.627 86.6387 73.627 85.5859ZM88.0166 83.583V91H86.9023V89.6943H86.8066C86.4102 90.6172 85.5625 91.1367 84.4346 91.1367C82.8213 91.1367 81.9463 90.1729 81.9463 88.3955V83.583H83.1084V88.1016C83.1084 89.4414 83.6553 90.0703 84.8105 90.0703C86.0342 90.0703 86.8545 89.2158 86.8545 87.9512V83.583H88.0166ZM94.1006 91.123C93.041 91.123 92.2617 90.6855 91.8789 89.8652H91.749V91H90.6074V80.6709H91.79V84.7314H91.9131C92.2412 83.918 93.0273 83.46 94.1006 83.46C95.8164 83.46 96.9375 84.6973 96.9375 86.5977V87.9785C96.9375 89.8857 95.8164 91.123 94.1006 91.123ZM93.7588 90.0635C94.9893 90.0635 95.7686 89.1816 95.7686 87.8145V86.748C95.7686 85.3809 94.9893 84.5059 93.7588 84.5059C92.542 84.5059 91.7627 85.3809 91.7627 86.748V87.8145C91.7627 89.1885 92.542 90.0635 93.7588 90.0635ZM103.268 81.7646C102.721 81.7646 102.304 81.3545 102.304 80.8076C102.304 80.2676 102.721 79.8574 103.268 79.8574C103.815 79.8574 104.231 80.2676 104.231 80.8076C104.231 81.3545 103.815 81.7646 103.268 81.7646ZM103.938 83.583V90.959C103.938 92.5996 103.097 93.249 101.032 93.249C100.52 93.249 99.7266 93.2354 99.2344 93.1943V92.1553C99.5898 92.1895 100.547 92.21 100.998 92.21C102.379 92.21 102.796 91.8818 102.796 90.8223V84.5469H99.4053V83.583H103.938ZM112.947 89.0859H114.075C113.85 90.3096 112.674 91.1367 111.115 91.1367C109.078 91.1367 107.896 89.9131 107.896 87.8008V86.6865C107.896 84.7314 109.146 83.4463 111.033 83.4463C112.961 83.4463 114.096 84.7246 114.096 86.8711V87.5957H109.044V87.8965C109.044 89.2568 109.851 90.1318 111.115 90.1318C112.052 90.1318 112.742 89.7354 112.947 89.0859ZM111.026 84.4443C109.789 84.4443 109.044 85.292 109.044 86.7139H112.947C112.947 85.2988 112.223 84.4443 111.026 84.4443ZM122.688 85.8936H121.54C121.396 85.0254 120.672 84.4785 119.715 84.4785C118.423 84.4785 117.705 85.3604 117.705 86.9531V87.623C117.705 89.2158 118.423 90.0908 119.715 90.0908C120.672 90.0908 121.396 89.5508 121.54 88.7031H122.688C122.504 90.2139 121.376 91.1367 119.735 91.1367C117.719 91.1367 116.543 89.8994 116.543 87.7734V86.8027C116.543 84.6768 117.719 83.4395 119.735 83.4395C121.376 83.4395 122.497 84.3691 122.688 85.8936ZM126.988 81.5938H128.137V83.6035H131.145V84.5947H128.15V88.7783C128.15 89.585 128.718 90.0225 129.764 90.0225C130.181 90.0225 130.926 90.002 131.124 89.9814V90.9658C130.939 91 130.037 91.0342 129.682 91.0342C127.843 91.0342 126.988 90.3369 126.988 88.792V84.5947H125.013V83.6035H126.988V81.5938ZM136.907 85.791C136.23 85.791 135.67 85.2168 135.67 84.5264C135.67 83.8359 136.23 83.2617 136.907 83.2617C137.584 83.2617 138.145 83.8359 138.145 84.5264C138.145 85.2168 137.584 85.791 136.907 85.791ZM136.907 91.041C136.23 91.041 135.67 90.4736 135.67 89.7764C135.67 89.0859 136.23 88.5186 136.907 88.5186C137.584 88.5186 138.145 89.0859 138.145 89.7764C138.145 90.4736 137.584 91.041 136.907 91.041ZM154.838 85.5859H153.594V81.1357H154.838V85.5859ZM163.472 91H162.269V86.9326L158.98 81.1357H160.327L162.822 85.6475H162.918L165.413 81.1357H166.76L163.472 86.9326V91ZM171.524 91.1367C169.562 91.1367 168.312 89.8584 168.312 87.8555V86.7344C168.312 84.7314 169.562 83.4531 171.524 83.4531C173.486 83.4531 174.737 84.7314 174.737 86.7344V87.8555C174.737 89.8584 173.486 91.1367 171.524 91.1367ZM171.524 84.4785C170.253 84.4785 169.46 85.3809 169.46 86.8369V87.7461C169.46 89.209 170.253 90.1045 171.524 90.1045C172.796 90.1045 173.589 89.209 173.589 87.7461V86.8369C173.589 85.3809 172.796 84.4785 171.524 84.4785ZM183.214 83.583V91H182.1V89.6943H182.004C181.607 90.6172 180.76 91.1367 179.632 91.1367C178.019 91.1367 177.144 90.1729 177.144 88.3955V83.583H178.306V88.1016C178.306 89.4414 178.853 90.0703 180.008 90.0703C181.231 90.0703 182.052 89.2158 182.052 87.9512V83.583H183.214ZM197.193 87.6777V90.0703H199.49V91H194.562V90.0703H196.059V84.5127H194.411V83.583H197.18V85.4766H197.33C197.604 84.1025 198.526 83.3916 199.955 83.3916C200.379 83.3916 200.782 83.4531 201.028 83.5557V84.8613C200.687 84.7383 200.208 84.6562 199.805 84.6562C198.164 84.6562 197.193 85.791 197.193 87.6777ZM208.145 89.0859H209.272C209.047 90.3096 207.871 91.1367 206.312 91.1367C204.275 91.1367 203.093 89.9131 203.093 87.8008V86.6865C203.093 84.7314 204.344 83.4463 206.23 83.4463C208.158 83.4463 209.293 84.7246 209.293 86.8711V87.5957H204.241V87.8965C204.241 89.2568 205.048 90.1318 206.312 90.1318C207.249 90.1318 207.939 89.7354 208.145 89.0859ZM206.224 84.4443C204.986 84.4443 204.241 85.292 204.241 86.7139H208.145C208.145 85.2988 207.42 84.4443 206.224 84.4443ZM217.886 85.8936H216.737C216.594 85.0254 215.869 84.4785 214.912 84.4785C213.62 84.4785 212.902 85.3604 212.902 86.9531V87.623C212.902 89.2158 213.62 90.0908 214.912 90.0908C215.869 90.0908 216.594 89.5508 216.737 88.7031H217.886C217.701 90.2139 216.573 91.1367 214.933 91.1367C212.916 91.1367 211.74 89.8994 211.74 87.7734V86.8027C211.74 84.6768 212.916 83.4395 214.933 83.4395C216.573 83.4395 217.694 84.3691 217.886 85.8936ZM225.453 89.0859H226.581C226.355 90.3096 225.18 91.1367 223.621 91.1367C221.584 91.1367 220.401 89.9131 220.401 87.8008V86.6865C220.401 84.7314 221.652 83.4463 223.539 83.4463C225.467 83.4463 226.602 84.7246 226.602 86.8711V87.5957H221.55V87.8965C221.55 89.2568 222.356 90.1318 223.621 90.1318C224.558 90.1318 225.248 89.7354 225.453 89.0859ZM223.532 84.4443C222.295 84.4443 221.55 85.292 221.55 86.7139H225.453C225.453 85.2988 224.729 84.4443 223.532 84.4443ZM232.234 81.7646C231.688 81.7646 231.271 81.3545 231.271 80.8076C231.271 80.2676 231.688 79.8574 232.234 79.8574C232.781 79.8574 233.198 80.2676 233.198 80.8076C233.198 81.3545 232.781 81.7646 232.234 81.7646ZM235.345 91H229.199V90.0361H231.742V84.5469H229.22V83.583H232.891V90.0361H235.345V91ZM237.409 83.583H238.653L240.725 89.7559H240.813L242.871 83.583H244.108L241.401 91H240.123L237.409 83.583ZM251.416 89.0859H252.544C252.318 90.3096 251.143 91.1367 249.584 91.1367C247.547 91.1367 246.364 89.9131 246.364 87.8008V86.6865C246.364 84.7314 247.615 83.4463 249.502 83.4463C251.43 83.4463 252.564 84.7246 252.564 86.8711V87.5957H247.513V87.8965C247.513 89.2568 248.319 90.1318 249.584 90.1318C250.521 90.1318 251.211 89.7354 251.416 89.0859ZM249.495 84.4443C248.258 84.4443 247.513 85.292 247.513 86.7139H251.416C251.416 85.2988 250.691 84.4443 249.495 84.4443ZM255.299 91.041C254.772 91.041 254.485 90.6309 254.485 89.8789C254.485 89.127 254.772 88.71 255.299 88.71C255.832 88.71 256.119 89.127 256.119 89.8789C256.119 90.6309 255.832 91.041 255.299 91.041ZM258.067 91.041C257.541 91.041 257.247 90.6309 257.247 89.8789C257.247 89.127 257.541 88.71 258.067 88.71C258.594 88.71 258.888 89.127 258.888 89.8789C258.888 90.6309 258.594 91.041 258.067 91.041ZM260.836 91.041C260.303 91.041 260.016 90.6309 260.016 89.8789C260.016 89.127 260.303 88.71 260.836 88.71C261.362 88.71 261.649 89.127 261.649 89.8789C261.649 90.6309 261.362 91.041 260.836 91.041Z"
                fill="#525266"
              />
              <g filter="url(#filter4_d_6003_246339)">
                <path d="M48.5 96H47.5V116H48.5V96Z" fill="#525266" />
              </g>
              <g filter="url(#filter5_d_6003_246339)">
                <path d="M64.5 96H63.5V116H64.5V96Z" fill="#525266" />
              </g>
              <g filter="url(#filter6_d_6003_246339)">
                <path d="M80.5 96H79.5V116H80.5V96Z" fill="#525266" />
              </g>
              <path
                d="M92.792 111.123C91.7324 111.123 90.9531 110.686 90.5703 109.865H90.4404V111H89.2988V100.671H90.4814V104.731H90.6045C90.9326 103.918 91.7188 103.46 92.792 103.46C94.5078 103.46 95.6289 104.697 95.6289 106.598V107.979C95.6289 109.886 94.5078 111.123 92.792 111.123ZM92.4502 110.063C93.6807 110.063 94.46 109.182 94.46 107.814V106.748C94.46 105.381 93.6807 104.506 92.4502 104.506C91.2334 104.506 90.4541 105.381 90.4541 106.748V107.814C90.4541 109.188 91.2334 110.063 92.4502 110.063ZM100.981 111.137C99.0195 111.137 97.7686 109.858 97.7686 107.855V106.734C97.7686 104.731 99.0195 103.453 100.981 103.453C102.943 103.453 104.194 104.731 104.194 106.734V107.855C104.194 109.858 102.943 111.137 100.981 111.137ZM100.981 104.479C99.71 104.479 98.917 105.381 98.917 106.837V107.746C98.917 109.209 99.71 110.104 100.981 110.104C102.253 110.104 103.046 109.209 103.046 107.746V106.837C103.046 105.381 102.253 104.479 100.981 104.479ZM109.171 111.123C107.455 111.123 106.334 109.886 106.334 107.979V106.598C106.334 104.697 107.455 103.46 109.171 103.46C110.244 103.46 111.037 103.918 111.358 104.731H111.481V100.671H112.664V111H111.522V109.865H111.393C111.01 110.686 110.23 111.123 109.171 111.123ZM109.513 110.063C110.729 110.063 111.516 109.188 111.516 107.814V106.748C111.516 105.381 110.729 104.506 109.513 104.506C108.289 104.506 107.503 105.381 107.503 106.748V107.814C107.503 109.182 108.289 110.063 109.513 110.063ZM116.212 113.639C116.041 113.639 115.815 113.632 115.713 113.618V112.6C115.802 112.62 116.014 112.627 116.123 112.627C116.82 112.627 117.203 112.312 117.511 111.451L117.641 111.048L114.913 103.583H116.178L118.256 109.79H118.345L120.416 103.583H121.653L118.857 111.273C118.208 113.099 117.586 113.639 116.212 113.639ZM126.944 105.791C126.268 105.791 125.707 105.217 125.707 104.526C125.707 103.836 126.268 103.262 126.944 103.262C127.621 103.262 128.182 103.836 128.182 104.526C128.182 105.217 127.621 105.791 126.944 105.791ZM126.944 111.041C126.268 111.041 125.707 110.474 125.707 109.776C125.707 109.086 126.268 108.519 126.944 108.519C127.621 108.519 128.182 109.086 128.182 109.776C128.182 110.474 127.621 111.041 126.944 111.041ZM145.777 102.141H144.54L142.729 99.8232H144.144L145.777 102.141ZM155.847 103.959L151.144 106.563V106.687L155.847 109.291V110.597L149.968 107.131V106.119L155.847 102.653V103.959ZM158.52 111V100.671H159.641V104.896H159.736C160.126 103.973 160.98 103.453 162.115 103.453C163.729 103.453 164.604 104.424 164.604 106.194V111H163.441V106.488C163.441 105.155 162.895 104.52 161.732 104.52C160.509 104.52 159.682 105.374 159.682 106.639V111H158.52ZM168.951 101.594H170.1V103.604H173.107V104.595H170.113V108.778C170.113 109.585 170.681 110.022 171.727 110.022C172.144 110.022 172.889 110.002 173.087 109.981V110.966C172.902 111 172 111.034 171.645 111.034C169.806 111.034 168.951 110.337 168.951 108.792V104.595H166.976V103.604H168.951V101.594ZM182.445 105.538V111H181.399V105.88C181.399 104.978 181.071 104.506 180.449 104.506C179.8 104.506 179.403 105.073 179.403 105.996V111H178.364V105.873C178.364 104.978 178.036 104.506 177.407 104.506C176.751 104.506 176.341 105.073 176.341 105.996V111H175.295V103.583H176.334V104.629H176.457C176.642 103.884 177.175 103.446 177.872 103.446C178.569 103.446 179.062 103.877 179.219 104.608H179.342C179.533 103.897 180.128 103.446 180.873 103.446C181.905 103.446 182.445 104.164 182.445 105.538ZM190.765 111H184.619V110.036H187.155V101.635H184.64V100.671H188.317V110.036H190.765V111ZM193.239 103.959V102.653L199.118 106.119V107.131L193.239 110.597V109.291L197.936 106.687V106.563L193.239 103.959ZM207.772 103.959L203.069 106.563V106.687L207.772 109.291V110.597L201.894 107.131V106.119L207.772 102.653V103.959ZM213.952 111.123C212.893 111.123 212.113 110.686 211.73 109.865H211.601V111H210.459V100.671H211.642V104.731H211.765C212.093 103.918 212.879 103.46 213.952 103.46C215.668 103.46 216.789 104.697 216.789 106.598V107.979C216.789 109.886 215.668 111.123 213.952 111.123ZM213.61 110.063C214.841 110.063 215.62 109.182 215.62 107.814V106.748C215.62 105.381 214.841 104.506 213.61 104.506C212.394 104.506 211.614 105.381 211.614 106.748V107.814C211.614 109.188 212.394 110.063 213.61 110.063ZM222.142 111.137C220.18 111.137 218.929 109.858 218.929 107.855V106.734C218.929 104.731 220.18 103.453 222.142 103.453C224.104 103.453 225.354 104.731 225.354 106.734V107.855C225.354 109.858 224.104 111.137 222.142 111.137ZM222.142 104.479C220.87 104.479 220.077 105.381 220.077 106.837V107.746C220.077 109.209 220.87 110.104 222.142 110.104C223.413 110.104 224.206 109.209 224.206 107.746V106.837C224.206 105.381 223.413 104.479 222.142 104.479ZM230.331 111.123C228.615 111.123 227.494 109.886 227.494 107.979V106.598C227.494 104.697 228.615 103.46 230.331 103.46C231.404 103.46 232.197 103.918 232.519 104.731H232.642V100.671H233.824V111H232.683V109.865H232.553C232.17 110.686 231.391 111.123 230.331 111.123ZM230.673 110.063C231.89 110.063 232.676 109.188 232.676 107.814V106.748C232.676 105.381 231.89 104.506 230.673 104.506C229.449 104.506 228.663 105.381 228.663 106.748V107.814C228.663 109.182 229.449 110.063 230.673 110.063ZM237.372 113.639C237.201 113.639 236.976 113.632 236.873 113.618V112.6C236.962 112.62 237.174 112.627 237.283 112.627C237.98 112.627 238.363 112.312 238.671 111.451L238.801 111.048L236.073 103.583H237.338L239.416 109.79H239.505L241.576 103.583H242.813L240.018 111.273C239.368 113.099 238.746 113.639 237.372 113.639ZM245.165 103.959V102.653L251.044 106.119V107.131L245.165 110.597V109.291L249.861 106.687V106.563L245.165 103.959ZM253.99 111.041C253.464 111.041 253.177 110.631 253.177 109.879C253.177 109.127 253.464 108.71 253.99 108.71C254.523 108.71 254.811 109.127 254.811 109.879C254.811 110.631 254.523 111.041 253.99 111.041ZM256.759 111.041C256.232 111.041 255.938 110.631 255.938 109.879C255.938 109.127 256.232 108.71 256.759 108.71C257.285 108.71 257.579 109.127 257.579 109.879C257.579 110.631 257.285 111.041 256.759 111.041ZM259.527 111.041C258.994 111.041 258.707 110.631 258.707 109.879C258.707 109.127 258.994 108.71 259.527 108.71C260.054 108.71 260.341 109.127 260.341 109.879C260.341 110.631 260.054 111.041 259.527 111.041Z"
                fill="#525266"
              />
              <g filter="url(#filter7_d_6003_246339)">
                <path d="M48.5 116H47.5V136H48.5V116Z" fill="#525266" />
              </g>
              <g filter="url(#filter8_d_6003_246339)">
                <path d="M64.5 116H63.5V136H64.5V116Z" fill="#525266" />
              </g>
              <path
                d="M73.6611 131.937V131H74.4062C75.4316 131 75.6299 130.761 75.6299 129.571V127.746C75.6299 126.789 76.3477 126.153 77.7354 126.126V126.017C76.3477 125.982 75.6299 125.347 75.6299 124.39V122.564C75.6299 121.375 75.4316 121.136 74.4062 121.136H73.6611V120.199H74.5908C76.252 120.199 76.7783 120.726 76.7783 122.414V123.945C76.7783 125.005 77.3936 125.613 78.9932 125.449V126.687C77.3936 126.522 76.7783 127.138 76.7783 128.19V129.722C76.7783 131.41 76.252 131.937 74.5908 131.937H73.6611Z"
                fill="#525266"
              />
              <g filter="url(#filter9_d_6003_246339)">
                <path d="M48.5 136H47.5V156H48.5V136Z" fill="#525266" />
              </g>
              <path
                d="M57.6611 151.937V151H58.4062C59.4316 151 59.6299 150.761 59.6299 149.571V147.746C59.6299 146.789 60.3477 146.153 61.7354 146.126V146.017C60.3477 145.982 59.6299 145.347 59.6299 144.39V142.564C59.6299 141.375 59.4316 141.136 58.4062 141.136H57.6611V140.199H58.5908C60.252 140.199 60.7783 140.726 60.7783 142.414V143.945C60.7783 145.005 61.3936 145.613 62.9932 145.449V146.687C61.3936 146.522 60.7783 147.138 60.7783 148.19V149.722C60.7783 151.41 60.252 151.937 58.5908 151.937H57.6611Z"
                fill="#525266"
              />
              <path
                d="M41.6611 171.937V171H42.4062C43.4316 171 43.6299 170.761 43.6299 169.571V167.746C43.6299 166.789 44.3477 166.153 45.7354 166.126V166.017C44.3477 165.982 43.6299 165.347 43.6299 164.39V162.564C43.6299 161.375 43.4316 161.136 42.4062 161.136H41.6611V160.199H42.5908C44.252 160.199 44.7783 160.726 44.7783 162.414V163.945C44.7783 165.005 45.3936 165.613 46.9932 165.449V166.687C45.3936 166.522 44.7783 167.138 44.7783 168.19V169.722C44.7783 171.41 44.252 171.937 42.5908 171.937H41.6611Z"
                fill="#525266"
              />
            </g>
          </g>
          <path
            d="M4 12C4 5.37258 9.37258 0 16 0H272C278.627 0 284 5.37258 284 12V168C284 174.627 278.627 180 272 180H16C9.37259 180 4 174.627 4 168V12Z"
            fill="url(#paint0_linear_6003_246339)"
          />
          <g filter="url(#filter10_dii_6003_246339)">
            <mask
              id="mask4_6003_246339"
              style={{
                maskType: 'luminance',
              }}
              maskUnits="userSpaceOnUse"
              x="44"
              y="40"
              width="240"
              height="140"
            >
              <path d="M44 48C44 43.5817 47.5817 40 52 40H284V180H44V48Z" fill="white" />
            </mask>
            <g mask="url(#mask4_6003_246339)">
              <path d="M44 48C44 43.5817 47.5817 40 52 40H284V180H44V48Z" fill="#23232B" />
              <path
                d="M70.3334 55.4832V62.9998C70.3334 63.9165 69.5834 64.6665 68.6667 64.6665H55.3334C54.4167 64.6665 53.6667 63.9165 53.6667 62.9998L53.6751 52.9998C53.6751 52.0832 54.4167 51.3332 55.3334 51.3332H63.7501C63.7001 51.5998 63.6667 51.8832 63.6667 52.1665C63.6667 52.4498 63.7001 52.7332 63.7501 52.9998H55.3334L62.0001 57.1665L65.0584 55.2582C65.4501 55.6165 65.9084 55.8915 66.4167 56.0748L62.0001 58.8332L55.3334 54.6665V62.9998H68.6667V56.2498C69.2834 56.1248 69.8501 55.8498 70.3334 55.4832ZM65.3334 52.1665C65.3334 53.5498 66.4501 54.6665 67.8334 54.6665C69.2167 54.6665 70.3334 53.5498 70.3334 52.1665C70.3334 50.7832 69.2167 49.6665 67.8334 49.6665C66.4501 49.6665 65.3334 50.7832 65.3334 52.1665Z"
                fill="#525266"
              />
              <path
                d="M80.6416 63.2461C78.3516 63.2461 76.8955 62.1182 76.7725 60.416L76.7656 60.3203H78.4746L78.4814 60.3887C78.5635 61.2158 79.4453 61.7627 80.6963 61.7627C81.8857 61.7627 82.7197 61.1748 82.7197 60.3271V60.3203C82.7197 59.6094 82.207 59.1787 80.9355 58.9053L79.876 58.6865C77.8594 58.2627 76.9844 57.3193 76.9844 55.8496V55.8428C76.9844 54.0791 78.502 52.8896 80.6348 52.8896C82.8223 52.8896 84.1826 54.0859 84.3057 55.6719L84.3125 55.7607H82.624L82.6104 55.6787C82.4873 54.9131 81.7559 54.3662 80.6279 54.373C79.5342 54.373 78.7549 54.8857 78.7549 55.7266V55.7334C78.7549 56.4307 79.2539 56.8682 80.4844 57.1279L81.5439 57.3535C83.6221 57.791 84.4902 58.625 84.4902 60.1152V60.1221C84.4902 62.043 83.0068 63.2461 80.6416 63.2461ZM88.7695 63.1504C87.0879 63.1504 86.2266 62.1387 86.2266 60.3613V55.5283H87.9287V59.9717C87.9287 61.127 88.3594 61.7148 89.3848 61.7148C90.4854 61.7148 91.0732 61.0039 91.0732 59.8828V55.5283H92.7754V63H91.0732V61.8652H90.957C90.6084 62.665 89.8496 63.1504 88.7695 63.1504ZM99.0098 63.123C97.9639 63.123 97.1504 62.6445 96.7402 61.8311H96.624V63H94.9219V52.6367H96.624V56.7178H96.7402C97.1299 55.9111 97.9844 55.4053 99.0098 55.4053C100.903 55.4053 102.079 56.8818 102.079 59.2607V59.2744C102.079 61.6396 100.883 63.123 99.0098 63.123ZM98.4766 61.6875C99.6387 61.6875 100.343 60.7783 100.343 59.2744V59.2607C100.343 57.7568 99.6387 56.8408 98.4766 56.8408C97.3213 56.8408 96.6035 57.7637 96.6035 59.2607V59.2744C96.6035 60.7715 97.3213 61.6875 98.4766 61.6875ZM106.604 63.1504C104.704 63.1504 103.556 62.2754 103.412 61.0107V60.9971H105.101L105.107 61.0107C105.285 61.5303 105.784 61.8926 106.632 61.8926C107.479 61.8926 108.067 61.5098 108.067 60.9492V60.9355C108.067 60.498 107.739 60.2109 106.919 60.0264L105.709 59.7529C104.287 59.4385 103.61 58.7686 103.61 57.668V57.6611C103.61 56.3145 104.841 55.3848 106.604 55.3848C108.423 55.3848 109.51 56.2871 109.619 57.4971V57.5107H108.02L108.013 57.4902C107.89 57.0186 107.397 56.6357 106.598 56.6357C105.839 56.6357 105.292 57.0049 105.292 57.5654V57.5723C105.292 58.0098 105.606 58.2764 106.413 58.4609L107.623 58.7275C109.086 59.0557 109.776 59.6777 109.776 60.7646V60.7783C109.776 62.2002 108.443 63.1504 106.604 63.1504ZM114.698 63.1504C112.449 63.1504 111.123 61.6943 111.123 59.2539V59.2402C111.123 56.8271 112.442 55.3848 114.691 55.3848C116.612 55.3848 117.761 56.4512 117.952 57.9961V58.0234H116.346L116.339 58.0029C116.182 57.2783 115.628 56.7588 114.698 56.7588C113.536 56.7588 112.853 57.6748 112.853 59.2402V59.2539C112.853 60.8398 113.543 61.7695 114.698 61.7695C115.58 61.7695 116.12 61.3662 116.332 60.5801L116.346 60.5527L117.952 60.5459L117.938 60.6006C117.692 62.1318 116.592 63.1504 114.698 63.1504ZM119.572 63V55.5283H121.274V56.6768H121.391C121.644 55.877 122.327 55.4053 123.312 55.4053C123.571 55.4053 123.838 55.4395 124.002 55.4873V57.0117C123.729 56.957 123.448 56.916 123.154 56.916C122.02 56.916 121.274 57.5928 121.274 58.6592V63H119.572ZM126.271 54.2773C125.711 54.2773 125.253 53.833 125.253 53.2725C125.253 52.7188 125.711 52.2676 126.271 52.2676C126.825 52.2676 127.283 52.7188 127.283 53.2725C127.283 53.833 126.825 54.2773 126.271 54.2773ZM125.417 63V55.5283H127.119V63H125.417ZM133.367 63.123C132.321 63.123 131.508 62.6445 131.098 61.8311H130.981V63H129.279V52.6367H130.981V56.7178H131.098C131.487 55.9111 132.342 55.4053 133.367 55.4053C135.261 55.4053 136.437 56.8818 136.437 59.2607V59.2744C136.437 61.6396 135.24 63.123 133.367 63.123ZM132.834 61.6875C133.996 61.6875 134.7 60.7783 134.7 59.2744V59.2607C134.7 57.7568 133.996 56.8408 132.834 56.8408C131.679 56.8408 130.961 57.7637 130.961 59.2607V59.2744C130.961 60.7715 131.679 61.6875 132.834 61.6875ZM141.338 63.1504C139.116 63.1504 137.77 61.6602 137.77 59.2812V59.2744C137.77 56.9229 139.13 55.3848 141.256 55.3848C143.382 55.3848 144.694 56.875 144.694 59.1309V59.6914H139.472C139.492 61.0312 140.217 61.8105 141.372 61.8105C142.295 61.8105 142.821 61.3457 142.985 61.0039L143.006 60.9561H144.626L144.605 61.0176C144.366 61.9814 143.368 63.1504 141.338 63.1504ZM141.276 56.7178C140.326 56.7178 139.615 57.3604 139.485 58.5498H143.033C142.917 57.3262 142.227 56.7178 141.276 56.7178ZM146.396 63V55.5283H148.099V56.6768H148.215C148.468 55.877 149.151 55.4053 150.136 55.4053C150.396 55.4053 150.662 55.4395 150.826 55.4873V57.0117C150.553 56.957 150.272 56.916 149.979 56.916C148.844 56.916 148.099 57.5928 148.099 58.6592V63H146.396ZM154.88 63.1504C152.979 63.1504 151.831 62.2754 151.688 61.0107V60.9971H153.376L153.383 61.0107C153.561 61.5303 154.06 61.8926 154.907 61.8926C155.755 61.8926 156.343 61.5098 156.343 60.9492V60.9355C156.343 60.498 156.015 60.2109 155.194 60.0264L153.984 59.7529C152.562 59.4385 151.886 58.7686 151.886 57.668V57.6611C151.886 56.3145 153.116 55.3848 154.88 55.3848C156.698 55.3848 157.785 56.2871 157.895 57.4971V57.5107H156.295L156.288 57.4902C156.165 57.0186 155.673 56.6357 154.873 56.6357C154.114 56.6357 153.567 57.0049 153.567 57.5654V57.5723C153.567 58.0098 153.882 58.2764 154.688 58.4609L155.898 58.7275C157.361 59.0557 158.052 59.6777 158.052 60.7646V60.7783C158.052 62.2002 156.719 63.1504 154.88 63.1504ZM163.5 63V55.5283H165.202V56.6904H165.318C165.64 55.8564 166.392 55.3848 167.369 55.3848C168.381 55.3848 169.119 55.9043 169.44 56.7314H169.557C169.919 55.918 170.78 55.3848 171.819 55.3848C173.323 55.3848 174.226 56.3076 174.226 57.8594V63H172.523V58.2764C172.523 57.3057 172.079 56.8135 171.17 56.8135C170.281 56.8135 169.707 57.4766 169.707 58.3311V63H168.005V58.1533C168.005 57.3262 167.492 56.8135 166.658 56.8135C165.817 56.8135 165.202 57.5244 165.202 58.4541V63H163.5ZM178.279 63.123C176.857 63.123 175.825 62.248 175.825 60.8877V60.874C175.825 59.541 176.844 58.7617 178.662 58.6523L180.583 58.5361V57.8936C180.583 57.1484 180.098 56.7383 179.182 56.7383C178.402 56.7383 177.896 57.0186 177.726 57.5107L177.719 57.5381H176.112L176.119 57.4766C176.283 56.2188 177.486 55.3848 179.264 55.3848C181.185 55.3848 182.265 56.3145 182.265 57.8936V63H180.583V61.9746H180.467C180.057 62.6992 179.264 63.123 178.279 63.123ZM177.507 60.8057C177.507 61.4414 178.047 61.8174 178.799 61.8174C179.824 61.8174 180.583 61.1475 180.583 60.2588V59.6572L178.901 59.7666C177.951 59.8281 177.507 60.1768 177.507 60.792V60.8057ZM185.184 54.2773C184.623 54.2773 184.165 53.833 184.165 53.2725C184.165 52.7188 184.623 52.2676 185.184 52.2676C185.737 52.2676 186.195 52.7188 186.195 53.2725C186.195 53.833 185.737 54.2773 185.184 54.2773ZM184.329 63V55.5283H186.031V63H184.329ZM188.191 63V52.6367H189.894V63H188.191ZM196.203 63.123C195.157 63.123 194.344 62.6445 193.934 61.8311H193.817V63H192.115V52.6367H193.817V56.7178H193.934C194.323 55.9111 195.178 55.4053 196.203 55.4053C198.097 55.4053 199.272 56.8818 199.272 59.2607V59.2744C199.272 61.6396 198.076 63.123 196.203 63.123ZM195.67 61.6875C196.832 61.6875 197.536 60.7783 197.536 59.2744V59.2607C197.536 57.7568 196.832 56.8408 195.67 56.8408C194.515 56.8408 193.797 57.7637 193.797 59.2607V59.2744C193.797 60.7715 194.515 61.6875 195.67 61.6875ZM204.201 63.1504C201.959 63.1504 200.605 61.6875 200.605 59.2676V59.2539C200.605 56.8545 201.979 55.3848 204.201 55.3848C206.43 55.3848 207.797 56.8477 207.797 59.2539V59.2676C207.797 61.6875 206.437 63.1504 204.201 63.1504ZM204.201 61.7695C205.384 61.7695 206.054 60.8467 206.054 59.2744V59.2607C206.054 57.6885 205.377 56.7588 204.201 56.7588C203.019 56.7588 202.342 57.6885 202.342 59.2607V59.2744C202.342 60.8467 203.019 61.7695 204.201 61.7695ZM208.556 63L210.976 59.2949L208.535 55.5283H210.504L211.987 58.1191H212.104L213.58 55.5283H215.446L213.033 59.2197L215.474 63H213.56L212.028 60.4023H211.912L210.388 63H208.556Z"
                fill="#525266"
              />
              <g filter="url(#filter11_d_6003_246339)">
                <path
                  d="M52 84C52 79.5817 55.5817 76 60 76H444C448.418 76 452 79.5817 452 84V100H52V84Z"
                  fill="#292933"
                />
                <path
                  d="M68 92C70.2091 92 72 90.2091 72 88C72 85.7909 70.2091 84 68 84C65.7909 84 64 85.7909 64 88C64 90.2091 65.7909 92 68 92Z"
                  fill="#3D3D4D"
                />
                <path
                  d="M82 92C84.2091 92 86 90.2091 86 88C86 85.7909 84.2091 84 82 84C79.7909 84 78 85.7909 78 88C78 90.2091 79.7909 92 82 92Z"
                  fill="#3D3D4D"
                />
                <path
                  d="M96 92C98.2091 92 100 90.2091 100 88C100 85.7909 98.2091 84 96 84C93.7909 84 92 85.7909 92 88C92 90.2091 93.7909 92 96 92Z"
                  fill="#3D3D4D"
                />
                <path d="M52 100H452V168C452 174.627 446.627 180 440 180H52V100Z" fill="#1E1E26" />
                <path
                  d="M60 116C60 111.582 63.5817 108 68 108H92C96.4183 108 100 111.582 100 116V140C100 144.418 96.4183 148 92 148H68C63.5817 148 60 144.418 60 140V116Z"
                  fill="#292933"
                />
                <path
                  d="M79.9999 128C82.9466 128 85.3333 125.613 85.3333 122.667C85.3333 119.72 82.9466 117.333 79.9999 117.333C77.0533 117.333 74.6666 119.72 74.6666 122.667C74.6666 125.613 77.0533 128 79.9999 128ZM79.9999 130.667C76.4399 130.667 69.3333 132.453 69.3333 136V138.667H90.6666V136C90.6666 132.453 83.5599 130.667 79.9999 130.667Z"
                  fill="#3D3D4D"
                />
                <path
                  d="M119.302 123L116.615 113.136H117.9L119.862 121.154H119.944L122.152 113.136H123.396L125.604 121.154H125.687L127.648 113.136H128.934L126.247 123H125.085L122.815 115.214H122.733L120.464 123H119.302ZM132.98 123.13C130.875 123.13 129.604 121.653 129.604 119.343V119.336C129.604 117.06 130.902 115.501 132.905 115.501C134.908 115.501 136.125 116.991 136.125 119.192V119.657H130.82C130.854 121.182 131.695 122.07 133.008 122.07C134.006 122.07 134.621 121.599 134.819 121.154L134.847 121.093H136.036L136.022 121.147C135.77 122.146 134.717 123.13 132.98 123.13ZM132.898 116.561C131.805 116.561 130.971 117.306 130.841 118.707H134.915C134.792 117.251 133.985 116.561 132.898 116.561ZM138.039 123V112.705H139.229V123H138.039ZM144.526 123.13C142.462 123.13 141.143 121.633 141.143 119.295V119.281C141.143 116.991 142.455 115.501 144.52 115.501C146.311 115.501 147.384 116.533 147.603 117.846L147.609 117.887H146.427L146.42 117.866C146.235 117.142 145.579 116.554 144.52 116.554C143.193 116.554 142.359 117.62 142.359 119.281V119.295C142.359 120.99 143.207 122.077 144.52 122.077C145.511 122.077 146.14 121.64 146.413 120.819L146.427 120.778L147.603 120.771L147.589 120.847C147.288 122.18 146.297 123.13 144.526 123.13ZM152.374 123.13C150.275 123.13 148.977 121.681 148.977 119.322V119.309C148.977 116.943 150.275 115.501 152.374 115.501C154.473 115.501 155.771 116.943 155.771 119.309V119.322C155.771 121.681 154.473 123.13 152.374 123.13ZM152.374 122.077C153.769 122.077 154.555 121.059 154.555 119.322V119.309C154.555 117.565 153.769 116.554 152.374 116.554C150.979 116.554 150.193 117.565 150.193 119.309V119.322C150.193 121.059 150.979 122.077 152.374 122.077ZM157.617 123V115.631H158.807V116.752H158.916C159.244 115.959 159.941 115.501 160.905 115.501C161.903 115.501 162.601 116.027 162.942 116.793H163.052C163.448 116.014 164.289 115.501 165.308 115.501C166.812 115.501 167.652 116.362 167.652 117.907V123H166.463V118.181C166.463 117.094 165.964 116.554 164.925 116.554C163.899 116.554 163.223 117.326 163.223 118.263V123H162.033V117.996C162.033 117.121 161.432 116.554 160.502 116.554C159.538 116.554 158.807 117.395 158.807 118.434V123H157.617ZM172.807 123.13C170.701 123.13 169.43 121.653 169.43 119.343V119.336C169.43 117.06 170.729 115.501 172.731 115.501C174.734 115.501 175.951 116.991 175.951 119.192V119.657H170.646C170.681 121.182 171.521 122.07 172.834 122.07C173.832 122.07 174.447 121.599 174.646 121.154L174.673 121.093H175.862L175.849 121.147C175.596 122.146 174.543 123.13 172.807 123.13ZM172.725 116.561C171.631 116.561 170.797 117.306 170.667 118.707H174.741C174.618 117.251 173.812 116.561 172.725 116.561ZM181.734 123V115.631H182.924V116.752H183.033C183.361 115.959 184.059 115.501 185.022 115.501C186.021 115.501 186.718 116.027 187.06 116.793H187.169C187.565 116.014 188.406 115.501 189.425 115.501C190.929 115.501 191.77 116.362 191.77 117.907V123H190.58V118.181C190.58 117.094 190.081 116.554 189.042 116.554C188.017 116.554 187.34 117.326 187.34 118.263V123H186.15V117.996C186.15 117.121 185.549 116.554 184.619 116.554C183.655 116.554 182.924 117.395 182.924 118.434V123H181.734ZM196.924 123.13C194.818 123.13 193.547 121.653 193.547 119.343V119.336C193.547 117.06 194.846 115.501 196.849 115.501C198.852 115.501 200.068 116.991 200.068 119.192V119.657H194.764C194.798 121.182 195.639 122.07 196.951 122.07C197.949 122.07 198.564 121.599 198.763 121.154L198.79 121.093H199.979L199.966 121.147C199.713 122.146 198.66 123.13 196.924 123.13ZM196.842 116.561C195.748 116.561 194.914 117.306 194.784 118.707H198.858C198.735 117.251 197.929 116.561 196.842 116.561ZM204.443 123.13C202.803 123.13 201.675 122.337 201.538 121.12H202.755C202.953 121.735 203.541 122.139 204.484 122.139C205.476 122.139 206.18 121.667 206.18 120.997V120.983C206.18 120.484 205.804 120.136 204.895 119.917L203.753 119.644C202.372 119.315 201.75 118.714 201.75 117.654V117.647C201.75 116.424 202.926 115.501 204.491 115.501C206.036 115.501 207.109 116.273 207.273 117.477H206.104C205.947 116.896 205.373 116.492 204.484 116.492C203.609 116.492 202.967 116.943 202.967 117.593V117.606C202.967 118.105 203.336 118.42 204.204 118.632L205.339 118.905C206.727 119.24 207.396 119.842 207.396 120.895V120.908C207.396 122.221 206.118 123.13 204.443 123.13ZM211.635 123.13C209.994 123.13 208.866 122.337 208.729 121.12H209.946C210.145 121.735 210.732 122.139 211.676 122.139C212.667 122.139 213.371 121.667 213.371 120.997V120.983C213.371 120.484 212.995 120.136 212.086 119.917L210.944 119.644C209.563 119.315 208.941 118.714 208.941 117.654V117.647C208.941 116.424 210.117 115.501 211.683 115.501C213.228 115.501 214.301 116.273 214.465 117.477H213.296C213.139 116.896 212.564 116.492 211.676 116.492C210.801 116.492 210.158 116.943 210.158 117.593V117.606C210.158 118.105 210.527 118.42 211.396 118.632L212.53 118.905C213.918 119.24 214.588 119.842 214.588 120.895V120.908C214.588 122.221 213.31 123.13 211.635 123.13ZM218.457 123.13C217.056 123.13 215.996 122.282 215.996 120.942V120.929C215.996 119.616 216.967 118.857 218.683 118.755L220.795 118.625V117.955C220.795 117.046 220.241 116.554 219.141 116.554C218.259 116.554 217.678 116.882 217.486 117.456L217.479 117.477H216.29L216.297 117.436C216.488 116.28 217.609 115.501 219.182 115.501C220.979 115.501 221.984 116.424 221.984 117.955V123H220.795V121.913H220.686C220.221 122.699 219.448 123.13 218.457 123.13ZM217.213 120.915C217.213 121.66 217.849 122.098 218.703 122.098C219.913 122.098 220.795 121.305 220.795 120.252V119.582L218.826 119.705C217.705 119.773 217.213 120.17 217.213 120.901V120.915ZM227.193 125.598C225.416 125.598 224.281 124.798 224.097 123.588L224.11 123.581H225.341L225.348 123.588C225.478 124.148 226.134 124.545 227.193 124.545C228.513 124.545 229.299 123.923 229.299 122.836V121.346H229.189C228.725 122.159 227.891 122.617 226.879 122.617C224.972 122.617 223.789 121.141 223.789 119.076V119.062C223.789 116.998 224.979 115.501 226.906 115.501C227.945 115.501 228.752 116.014 229.203 116.848H229.285V115.631H230.475V122.897C230.475 124.545 229.203 125.598 227.193 125.598ZM227.139 121.564C228.506 121.564 229.326 120.539 229.326 119.076V119.062C229.326 117.6 228.499 116.554 227.139 116.554C225.771 116.554 225.006 117.6 225.006 119.062V119.076C225.006 120.539 225.771 121.564 227.139 121.564ZM235.697 123.13C233.592 123.13 232.32 121.653 232.32 119.343V119.336C232.32 117.06 233.619 115.501 235.622 115.501C237.625 115.501 238.842 116.991 238.842 119.192V119.657H233.537C233.571 121.182 234.412 122.07 235.725 122.07C236.723 122.07 237.338 121.599 237.536 121.154L237.563 121.093H238.753L238.739 121.147C238.486 122.146 237.434 123.13 235.697 123.13ZM235.615 116.561C234.521 116.561 233.688 117.306 233.558 118.707H237.632C237.509 117.251 236.702 116.561 235.615 116.561Z"
                  fill="#3D3D4D"
                />
                <path
                  d="M119.575 143.13C117.9 143.13 117.039 142.146 117.039 140.402V135.631H118.229V140.115C118.229 141.441 118.707 142.077 119.883 142.077C121.182 142.077 121.872 141.284 121.872 139.992V135.631H123.062V143H121.872V141.899H121.763C121.4 142.686 120.655 143.13 119.575 143.13ZM127.812 143.13C126.172 143.13 125.044 142.337 124.907 141.12H126.124C126.322 141.735 126.91 142.139 127.854 142.139C128.845 142.139 129.549 141.667 129.549 140.997V140.983C129.549 140.484 129.173 140.136 128.264 139.917L127.122 139.644C125.741 139.315 125.119 138.714 125.119 137.654V137.647C125.119 136.424 126.295 135.501 127.86 135.501C129.405 135.501 130.479 136.273 130.643 137.477H129.474C129.316 136.896 128.742 136.492 127.854 136.492C126.979 136.492 126.336 136.943 126.336 137.593V137.606C126.336 138.105 126.705 138.42 127.573 138.632L128.708 138.905C130.096 139.24 130.766 139.842 130.766 140.895V140.908C130.766 142.221 129.487 143.13 127.812 143.13ZM135.619 143.13C133.514 143.13 132.242 141.653 132.242 139.343V139.336C132.242 137.06 133.541 135.501 135.544 135.501C137.547 135.501 138.764 136.991 138.764 139.192V139.657H133.459C133.493 141.182 134.334 142.07 135.646 142.07C136.645 142.07 137.26 141.599 137.458 141.154L137.485 141.093H138.675L138.661 141.147C138.408 142.146 137.355 143.13 135.619 143.13ZM135.537 136.561C134.443 136.561 133.609 137.306 133.479 138.707H137.554C137.431 137.251 136.624 136.561 135.537 136.561ZM140.609 143V135.631H141.799V136.725H141.908C142.188 135.952 142.879 135.501 143.877 135.501C144.103 135.501 144.355 135.528 144.472 135.549V136.704C144.226 136.663 144 136.636 143.74 136.636C142.605 136.636 141.799 137.354 141.799 138.434V143H140.609ZM151.574 144.6C148.047 144.6 145.812 142.385 145.812 138.898V138.885C145.812 135.508 148.108 133.19 151.458 133.19C154.691 133.19 156.94 135.255 156.94 138.215V138.229C156.94 140.45 155.942 141.865 154.37 141.865C153.584 141.865 152.982 141.421 152.873 140.758L152.866 140.717H152.757C152.463 141.414 151.848 141.804 151.048 141.804C149.626 141.804 148.669 140.635 148.669 138.905V138.892C148.669 137.237 149.646 136.075 151.048 136.075C151.766 136.075 152.381 136.444 152.647 137.039H152.757V136.205H153.789V140.218C153.789 140.696 154.069 140.977 154.562 140.977C155.423 140.977 155.977 139.89 155.977 138.215V138.201C155.977 135.74 154.104 134.052 151.369 134.052C148.696 134.052 146.775 136.089 146.775 138.926V138.939C146.775 141.852 148.662 143.731 151.588 143.731C152.524 143.731 153.447 143.602 153.878 143.403V144.265C153.263 144.477 152.436 144.6 151.574 144.6ZM151.205 140.84C152.142 140.84 152.743 140.095 152.743 138.933V138.919C152.743 137.757 152.148 137.019 151.219 137.019C150.303 137.019 149.763 137.729 149.763 138.919V138.933C149.763 140.115 150.31 140.84 151.205 140.84ZM161.808 143.13C159.743 143.13 158.424 141.633 158.424 139.295V139.281C158.424 136.991 159.736 135.501 161.801 135.501C163.592 135.501 164.665 136.533 164.884 137.846L164.891 137.887H163.708L163.701 137.866C163.517 137.142 162.86 136.554 161.801 136.554C160.475 136.554 159.641 137.62 159.641 139.281V139.295C159.641 140.99 160.488 142.077 161.801 142.077C162.792 142.077 163.421 141.64 163.694 140.819L163.708 140.778L164.884 140.771L164.87 140.847C164.569 142.18 163.578 143.13 161.808 143.13ZM169.655 143.13C167.557 143.13 166.258 141.681 166.258 139.322V139.309C166.258 136.943 167.557 135.501 169.655 135.501C171.754 135.501 173.053 136.943 173.053 139.309V139.322C173.053 141.681 171.754 143.13 169.655 143.13ZM169.655 142.077C171.05 142.077 171.836 141.059 171.836 139.322V139.309C171.836 137.565 171.05 136.554 169.655 136.554C168.261 136.554 167.475 137.565 167.475 139.309V139.322C167.475 141.059 168.261 142.077 169.655 142.077ZM174.898 143V135.631H176.088V136.752H176.197C176.525 135.959 177.223 135.501 178.187 135.501C179.185 135.501 179.882 136.027 180.224 136.793H180.333C180.729 136.014 181.57 135.501 182.589 135.501C184.093 135.501 184.934 136.362 184.934 137.907V143H183.744V138.181C183.744 137.094 183.245 136.554 182.206 136.554C181.181 136.554 180.504 137.326 180.504 138.263V143H179.314V137.996C179.314 137.121 178.713 136.554 177.783 136.554C176.819 136.554 176.088 137.395 176.088 138.434V143H174.898ZM187.08 145.461V135.631H188.27V136.807H188.379C188.83 135.986 189.65 135.501 190.676 135.501C192.542 135.501 193.766 137.012 193.766 139.309V139.322C193.766 141.633 192.549 143.13 190.676 143.13C189.664 143.13 188.782 142.624 188.379 141.838H188.27V145.461H187.08ZM190.402 142.077C191.749 142.077 192.549 141.038 192.549 139.322V139.309C192.549 137.593 191.749 136.554 190.402 136.554C189.062 136.554 188.242 137.606 188.242 139.309V139.322C188.242 141.024 189.062 142.077 190.402 142.077ZM197.648 143.13C196.247 143.13 195.188 142.282 195.188 140.942V140.929C195.188 139.616 196.158 138.857 197.874 138.755L199.986 138.625V137.955C199.986 137.046 199.433 136.554 198.332 136.554C197.45 136.554 196.869 136.882 196.678 137.456L196.671 137.477H195.481L195.488 137.436C195.68 136.28 196.801 135.501 198.373 135.501C200.171 135.501 201.176 136.424 201.176 137.955V143H199.986V141.913H199.877C199.412 142.699 198.64 143.13 197.648 143.13ZM196.404 140.915C196.404 141.66 197.04 142.098 197.895 142.098C199.104 142.098 199.986 141.305 199.986 140.252V139.582L198.018 139.705C196.896 139.773 196.404 140.17 196.404 140.901V140.915ZM203.35 143V135.631H204.539V136.738H204.648C205.018 135.959 205.708 135.501 206.795 135.501C208.449 135.501 209.372 136.479 209.372 138.229V143H208.183V138.516C208.183 137.189 207.636 136.554 206.46 136.554C205.284 136.554 204.539 137.347 204.539 138.639V143H203.35ZM211.881 145.584C211.724 145.584 211.519 145.57 211.354 145.543V144.565C211.498 144.593 211.683 144.6 211.847 144.6C212.523 144.6 212.934 144.292 213.2 143.444L213.337 143.007L210.609 135.631H211.881L213.904 141.694H214.014L216.03 135.631H217.281L214.403 143.451C213.795 145.105 213.187 145.584 211.881 145.584ZM218.799 143.068C218.313 143.068 217.91 142.665 217.91 142.18C217.91 141.688 218.313 141.291 218.799 141.291C219.291 141.291 219.688 141.688 219.688 142.18C219.688 142.665 219.291 143.068 218.799 143.068ZM224.726 143.13C222.661 143.13 221.342 141.633 221.342 139.295V139.281C221.342 136.991 222.654 135.501 224.719 135.501C226.51 135.501 227.583 136.533 227.802 137.846L227.809 137.887H226.626L226.619 137.866C226.435 137.142 225.778 136.554 224.719 136.554C223.393 136.554 222.559 137.62 222.559 139.281V139.295C222.559 140.99 223.406 142.077 224.719 142.077C225.71 142.077 226.339 141.64 226.612 140.819L226.626 140.778L227.802 140.771L227.788 140.847C227.487 142.18 226.496 143.13 224.726 143.13ZM232.573 143.13C230.475 143.13 229.176 141.681 229.176 139.322V139.309C229.176 136.943 230.475 135.501 232.573 135.501C234.672 135.501 235.971 136.943 235.971 139.309V139.322C235.971 141.681 234.672 143.13 232.573 143.13ZM232.573 142.077C233.968 142.077 234.754 141.059 234.754 139.322V139.309C234.754 137.565 233.968 136.554 232.573 136.554C231.179 136.554 230.393 137.565 230.393 139.309V139.322C230.393 141.059 231.179 142.077 232.573 142.077ZM237.816 143V135.631H239.006V136.752H239.115C239.443 135.959 240.141 135.501 241.104 135.501C242.103 135.501 242.8 136.027 243.142 136.793H243.251C243.647 136.014 244.488 135.501 245.507 135.501C247.011 135.501 247.852 136.362 247.852 137.907V143H246.662V138.181C246.662 137.094 246.163 136.554 245.124 136.554C244.099 136.554 243.422 137.326 243.422 138.263V143H242.232V137.996C242.232 137.121 241.631 136.554 240.701 136.554C239.737 136.554 239.006 137.395 239.006 138.434V143H237.816Z"
                  fill="#3D3D4D"
                />
                <path
                  d="M60 168C60 161.373 65.3726 156 72 156H432C438.627 156 444 161.373 444 168C444 174.627 438.627 180 432 180H60V168Z"
                  fill="#23232B"
                />
              </g>
            </g>
          </g>
        </g>
      </g>
      <defs>
        <filter
          id="filter0_d_6003_246339"
          x="0"
          y="0"
          width="288"
          height="188"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="4" />
          <feGaussianBlur stdDeviation="2" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_246339" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_246339" result="shape" />
        </filter>
        <filter
          id="filter1_d_6003_246339"
          x="27.5"
          y="41"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_246339" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_246339" result="shape" />
        </filter>
        <filter
          id="filter2_d_6003_246339"
          x="27.5"
          y="61"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_246339" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_246339" result="shape" />
        </filter>
        <filter
          id="filter3_d_6003_246339"
          x="43.5"
          y="61"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_246339" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_246339" result="shape" />
        </filter>
        <filter
          id="filter4_d_6003_246339"
          x="27.5"
          y="81"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_246339" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_246339" result="shape" />
        </filter>
        <filter
          id="filter5_d_6003_246339"
          x="43.5"
          y="81"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_246339" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_246339" result="shape" />
        </filter>
        <filter
          id="filter6_d_6003_246339"
          x="59.5"
          y="81"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_246339" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_246339" result="shape" />
        </filter>
        <filter
          id="filter7_d_6003_246339"
          x="27.5"
          y="101"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_246339" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_246339" result="shape" />
        </filter>
        <filter
          id="filter8_d_6003_246339"
          x="43.5"
          y="101"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_246339" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_246339" result="shape" />
        </filter>
        <filter
          id="filter9_d_6003_246339"
          x="27.5"
          y="121"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_246339" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_246339" result="shape" />
        </filter>
        <filter
          id="filter10_dii_6003_246339"
          x="-4"
          y="-4"
          width="336"
          height="236"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="4" />
          <feGaussianBlur stdDeviation="24" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.24 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_246339" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_246339" result="shape" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feGaussianBlur stdDeviation="16" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix type="matrix" values="0 0 0 0 0.117647 0 0 0 0 0.117647 0 0 0 0 0.14902 0 0 0 0.28 0" />
          <feBlend mode="normal" in2="shape" result="effect2_innerShadow_6003_246339" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feGaussianBlur stdDeviation="4" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix type="matrix" values="0 0 0 0 0.0729527 0 0 0 0 0.0729527 0 0 0 0 0.0887533 0 0 0 0.48 0" />
          <feBlend mode="normal" in2="effect2_innerShadow_6003_246339" result="effect3_innerShadow_6003_246339" />
        </filter>
        <filter
          id="filter11_d_6003_246339"
          x="32"
          y="61"
          width="440"
          height="144"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_6003_246339" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_6003_246339" result="shape" />
        </filter>
        <linearGradient
          id="paint0_linear_6003_246339"
          x1="4"
          y1="0"
          x2="167.744"
          y2="254.731"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#1E1E26" stopOpacity="0" />
          <stop offset="0.625985" stopColor="#1E1E26" />
        </linearGradient>
        <clipPath id="clip0_6003_246339">
          <rect width="280" height="180" fill="white" transform="translate(4)" />
        </clipPath>
      </defs>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useColorScheme } from '@novu/design-system';
export const GithubAction = () => {
const { colorScheme } = useColorScheme();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/GetStartedPageV2/Studio.tsx
Tamaño: 101047 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useColorScheme } from '@novu/design-system';

export const Studio = () => {
  const { colorScheme } = useColorScheme();

  if (colorScheme === 'light') {
    return (
      <svg xmlns="http://www.w3.org/2000/svg" width="280" height="180" viewBox="0 0 280 180" fill="none">
        <g clip-path="url(#clip0_5956_42863)">
          <mask
            id="mask0_5956_42863"
            style={{
              maskType: 'luminance',
            }}
            maskUnits="userSpaceOnUse"
            x="0"
            y="0"
            width="280"
            height="180"
          >
            <path
              d="M0 12C0 5.37258 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V168C280 174.627 274.627 180 268 180H12C5.37259 180 0 174.627 0 168V12Z"
              fill="white"
            />
          </mask>
          <g mask="url(#mask0_5956_42863)">
            <g filter="url(#filter0_d_5956_42863)">
              <path d="M0 12C0 5.37258 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V36H0V12Z" fill="white" />
              <path
                d="M25.3333 22C26.0667 22 26.66 21.4 26.66 20.6667L26.6667 13.3333C26.6667 12.6 26.0667 12 25.3333 12H14.6667C13.9333 12 13.3333 12.6 13.3333 13.3333V20.6667C13.3333 21.4 13.9333 22 14.6667 22H12C12 22.7333 12.6 23.3333 13.3333 23.3333H26.6667C27.4 23.3333 28 22.7333 28 22H25.3333ZM14.6667 13.3333H25.3333V20.6667H14.6667V13.3333ZM20 22.6667C19.6333 22.6667 19.3333 22.3667 19.3333 22C19.3333 21.6333 19.6333 21.3333 20 21.3333C20.3667 21.3333 20.6667 21.6333 20.6667 22C20.6667 22.3667 20.3667 22.6667 20 22.6667Z"
                fill="#A1A1B2"
              />
              <path
                d="M33.2168 23V13.1357H34.748L39.5947 19.9307H39.7041V13.1357H41.3994V23H39.875L35.0283 16.2051H34.9189V23H33.2168ZM46.8887 23.1504C44.6465 23.1504 43.293 21.6875 43.293 19.2676V19.2539C43.293 16.8545 44.667 15.3848 46.8887 15.3848C49.1172 15.3848 50.4844 16.8477 50.4844 19.2539V19.2676C50.4844 21.6875 49.124 23.1504 46.8887 23.1504ZM46.8887 21.7695C48.0713 21.7695 48.7412 20.8467 48.7412 19.2744V19.2607C48.7412 17.6885 48.0645 16.7588 46.8887 16.7588C45.7061 16.7588 45.0293 17.6885 45.0293 19.2607V19.2744C45.0293 20.8467 45.7061 21.7695 46.8887 21.7695ZM53.9023 23L51.2432 15.5283H53.0615L54.791 21.3389H54.9072L56.623 15.5283H58.4141L55.7686 23H53.9023ZM62.3242 23.1504C60.6426 23.1504 59.7812 22.1387 59.7812 20.3613V15.5283H61.4834V19.9717C61.4834 21.127 61.9141 21.7148 62.9395 21.7148C64.04 21.7148 64.6279 21.0039 64.6279 19.8828V15.5283H66.3301V23H64.6279V21.8652H64.5117C64.1631 22.665 63.4043 23.1504 62.3242 23.1504ZM75.7432 23.2461C73.4531 23.2461 71.9971 22.1182 71.874 20.416L71.8672 20.3203H73.5762L73.583 20.3887C73.665 21.2158 74.5469 21.7627 75.7979 21.7627C76.9873 21.7627 77.8213 21.1748 77.8213 20.3271V20.3203C77.8213 19.6094 77.3086 19.1787 76.0371 18.9053L74.9775 18.6865C72.9609 18.2627 72.0859 17.3193 72.0859 15.8496V15.8428C72.0859 14.0791 73.6035 12.8896 75.7363 12.8896C77.9238 12.8896 79.2842 14.0859 79.4072 15.6719L79.4141 15.7607H77.7256L77.7119 15.6787C77.5889 14.9131 76.8574 14.3662 75.7295 14.373C74.6357 14.373 73.8564 14.8857 73.8564 15.7266V15.7334C73.8564 16.4307 74.3555 16.8682 75.5859 17.1279L76.6455 17.3535C78.7236 17.791 79.5918 18.625 79.5918 20.1152V20.1221C79.5918 22.043 78.1084 23.2461 75.7432 23.2461ZM84.3359 23.0342C82.6201 23.0342 81.916 22.46 81.916 21.0176V16.8477H80.7539V15.5283H81.916V13.6963H83.6455V15.5283H85.2246V16.8477H83.6455V20.6143C83.6455 21.3594 83.9395 21.6738 84.6504 21.6738C84.8896 21.6738 85.0195 21.667 85.2246 21.6465V22.959C84.9785 23.0068 84.6641 23.0342 84.3359 23.0342ZM89.3945 23.1504C87.7129 23.1504 86.8516 22.1387 86.8516 20.3613V15.5283H88.5537V19.9717C88.5537 21.127 88.9844 21.7148 90.0098 21.7148C91.1104 21.7148 91.6982 21.0039 91.6982 19.8828V15.5283H93.4004V23H91.6982V21.8652H91.582C91.2334 22.665 90.4746 23.1504 89.3945 23.1504ZM98.1719 23.123C96.2988 23.123 95.1094 21.6396 95.1094 19.2744V19.2607C95.1094 16.8818 96.2783 15.4053 98.1719 15.4053C99.1973 15.4053 100.052 15.9111 100.441 16.7178H100.558V12.6367H102.267V23H100.558V21.8311H100.441C100.031 22.6445 99.2246 23.123 98.1719 23.123ZM98.7051 21.6875C99.8672 21.6875 100.585 20.7715 100.585 19.2744V19.2607C100.585 17.7637 99.8604 16.8408 98.7051 16.8408C97.5498 16.8408 96.8389 17.7568 96.8389 19.2607V19.2744C96.8389 20.7783 97.543 21.6875 98.7051 21.6875ZM105.281 14.2773C104.721 14.2773 104.263 13.833 104.263 13.2725C104.263 12.7188 104.721 12.2676 105.281 12.2676C105.835 12.2676 106.293 12.7188 106.293 13.2725C106.293 13.833 105.835 14.2773 105.281 14.2773ZM104.427 23V15.5283H106.129V23H104.427ZM111.447 23.1504C109.205 23.1504 107.852 21.6875 107.852 19.2676V19.2539C107.852 16.8545 109.226 15.3848 111.447 15.3848C113.676 15.3848 115.043 16.8477 115.043 19.2539V19.2676C115.043 21.6875 113.683 23.1504 111.447 23.1504ZM111.447 21.7695C112.63 21.7695 113.3 20.8467 113.3 19.2744V19.2607C113.3 17.6885 112.623 16.7588 111.447 16.7588C110.265 16.7588 109.588 17.6885 109.588 19.2607V19.2744C109.588 20.8467 110.265 21.7695 111.447 21.7695Z"
                fill="#A1A1B2"
              />
              <path
                d="M194 22C196.209 22 198 20.2091 198 18C198 15.7909 196.209 14 194 14C191.791 14 190 15.7909 190 18C190 20.2091 191.791 22 194 22Z"
                fill="#299764"
              />
              <path
                opacity="0.2"
                d="M194 26C198.418 26 202 22.4183 202 18C202 13.5817 198.418 10 194 10C189.582 10 186 13.5817 186 18C186 22.4183 189.582 26 194 26Z"
                fill="#299764"
              />
              <path
                d="M210.482 22.1992C208.186 22.1992 206.75 20.5 206.75 17.7812V17.7695C206.75 15.0449 208.18 13.3457 210.477 13.3457C212.258 13.3457 213.646 14.4648 213.898 16.0879L213.893 16.0996H212.832L212.826 16.0879C212.545 15.0039 211.643 14.3184 210.477 14.3184C208.854 14.3184 207.834 15.6543 207.834 17.7695V17.7812C207.834 19.8965 208.854 21.2266 210.482 21.2266C211.66 21.2266 212.557 20.623 212.82 19.6504L212.832 19.6387H213.898V19.6504C213.617 21.1973 212.281 22.1992 210.482 22.1992ZM218.135 22.1113C216.336 22.1113 215.223 20.8691 215.223 18.8477V18.8359C215.223 16.8086 216.336 15.5723 218.135 15.5723C219.934 15.5723 221.047 16.8086 221.047 18.8359V18.8477C221.047 20.8691 219.934 22.1113 218.135 22.1113ZM218.135 21.209C219.33 21.209 220.004 20.3359 220.004 18.8477V18.8359C220.004 17.3418 219.33 16.4746 218.135 16.4746C216.939 16.4746 216.266 17.3418 216.266 18.8359V18.8477C216.266 20.3359 216.939 21.209 218.135 21.209ZM222.629 22V15.6836H223.648V16.6328H223.742C224.059 15.9648 224.65 15.5723 225.582 15.5723C227 15.5723 227.791 16.4102 227.791 17.9102V22H226.771V18.1562C226.771 17.0195 226.303 16.4746 225.295 16.4746C224.287 16.4746 223.648 17.1543 223.648 18.2617V22H222.629ZM229.637 22V15.6836H230.656V16.6328H230.75C231.066 15.9648 231.658 15.5723 232.59 15.5723C234.008 15.5723 234.799 16.4102 234.799 17.9102V22H233.779V18.1562C233.779 17.0195 233.311 16.4746 232.303 16.4746C231.295 16.4746 230.656 17.1543 230.656 18.2617V22H229.637ZM239.223 22.1113C237.418 22.1113 236.328 20.8457 236.328 18.8652V18.8594C236.328 16.9082 237.441 15.5723 239.158 15.5723C240.875 15.5723 241.918 16.8496 241.918 18.7363V19.1348H237.371C237.4 20.4414 238.121 21.2031 239.246 21.2031C240.102 21.2031 240.629 20.7988 240.799 20.418L240.822 20.3652H241.842L241.83 20.4121C241.613 21.2676 240.711 22.1113 239.223 22.1113ZM239.152 16.4805C238.215 16.4805 237.5 17.1191 237.389 18.3203H240.881C240.775 17.0723 240.084 16.4805 239.152 16.4805ZM246.084 22.1113C244.314 22.1113 243.184 20.8281 243.184 18.8242V18.8125C243.184 16.8496 244.309 15.5723 246.078 15.5723C247.613 15.5723 248.533 16.457 248.721 17.582L248.727 17.6172H247.713L247.707 17.5996C247.549 16.9785 246.986 16.4746 246.078 16.4746C244.941 16.4746 244.227 17.3887 244.227 18.8125V18.8242C244.227 20.2773 244.953 21.209 246.078 21.209C246.928 21.209 247.467 20.834 247.701 20.1309L247.713 20.0957L248.721 20.0898L248.709 20.1543C248.451 21.2969 247.602 22.1113 246.084 22.1113ZM252.576 22.0469C251.275 22.0469 250.73 21.5664 250.73 20.3594V16.5273H249.734V15.6836H250.73V14.0488H251.785V15.6836H253.168V16.5273H251.785V20.1016C251.785 20.8457 252.043 21.1445 252.699 21.1445C252.881 21.1445 252.98 21.1387 253.168 21.1211V21.9883C252.969 22.0234 252.775 22.0469 252.576 22.0469ZM257.176 22.1113C255.371 22.1113 254.281 20.8457 254.281 18.8652V18.8594C254.281 16.9082 255.395 15.5723 257.111 15.5723C258.828 15.5723 259.871 16.8496 259.871 18.7363V19.1348H255.324C255.354 20.4414 256.074 21.2031 257.199 21.2031C258.055 21.2031 258.582 20.7988 258.752 20.418L258.775 20.3652H259.795L259.783 20.4121C259.566 21.2676 258.664 22.1113 257.176 22.1113ZM257.105 16.4805C256.168 16.4805 255.453 17.1191 255.342 18.3203H258.834C258.729 17.0723 258.037 16.4805 257.105 16.4805ZM263.785 22.1113C262.186 22.1113 261.137 20.8164 261.137 18.8477V18.8359C261.137 16.8555 262.18 15.5723 263.785 15.5723C264.652 15.5723 265.408 16.0059 265.754 16.6797H265.848V13.1758H266.867V22H265.848V20.9922H265.754C265.367 21.6953 264.664 22.1113 263.785 22.1113ZM264.02 21.209C265.168 21.209 265.871 20.3066 265.871 18.8477V18.8359C265.871 17.377 265.168 16.4746 264.02 16.4746C262.865 16.4746 262.18 17.3652 262.18 18.8359V18.8477C262.18 20.3184 262.865 21.209 264.02 21.209Z"
                fill="#A1A1B2"
              />
              <mask
                id="mask1_5956_42863"
                style={{
                  maskType: 'luminance',
                }}
                maskUnits="userSpaceOnUse"
                x="0"
                y="36"
                width="280"
                height="236"
              >
                <path d="M280 36H0V272H280V36Z" fill="white" />
              </mask>
              <g mask="url(#mask1_5956_42863)">
                <path d="M280 36H0V272H280V36Z" fill="white" />
                <path d="M277.5 172H280.5V173H277.5V172Z" fill="#EDF0F2" />
                <path d="M278.5 171H279.5V174H278.5V171Z" fill="#EDF0F2" />
                <path d="M277.5 142H280.5V143H277.5V142Z" fill="#EDF0F2" />
                <path d="M278.5 141H279.5V144H278.5V141Z" fill="#EDF0F2" />
                <path d="M277.5 112H280.5V113H277.5V112Z" fill="#EDF0F2" />
                <path d="M278.5 111H279.5V114H278.5V111Z" fill="#EDF0F2" />
                <path d="M277.5 82H280.5V83H277.5V82Z" fill="#EDF0F2" />
                <path d="M278.5 81H279.5V84H278.5V81Z" fill="#EDF0F2" />
                <path d="M277.5 52H280.5V53H277.5V52Z" fill="#EDF0F2" />
                <path d="M278.5 51H279.5V54H278.5V51Z" fill="#EDF0F2" />
                <path d="M262.5 172H265.5V173H262.5V172Z" fill="#EDF0F2" />
                <path d="M263.5 171H264.5V174H263.5V171Z" fill="#EDF0F2" />
                <path d="M262.5 142H265.5V143H262.5V142Z" fill="#EDF0F2" />
                <path d="M263.5 141H264.5V144H263.5V141Z" fill="#EDF0F2" />
                <path d="M262.5 112H265.5V113H262.5V112Z" fill="#EDF0F2" />
                <path d="M263.5 111H264.5V114H263.5V111Z" fill="#EDF0F2" />
                <path d="M262.5 82H265.5V83H262.5V82Z" fill="#EDF0F2" />
                <path d="M263.5 81H264.5V84H263.5V81Z" fill="#EDF0F2" />
                <path d="M262.5 52H265.5V53H262.5V52Z" fill="#EDF0F2" />
                <path d="M263.5 51H264.5V54H263.5V51Z" fill="#EDF0F2" />
                <path d="M247.5 172H250.5V173H247.5V172Z" fill="#EDF0F2" />
                <path d="M248.5 171H249.5V174H248.5V171Z" fill="#EDF0F2" />
                <path d="M247.5 142H250.5V143H247.5V142Z" fill="#EDF0F2" />
                <path d="M248.5 141H249.5V144H248.5V141Z" fill="#EDF0F2" />
                <path d="M247.5 112H250.5V113H247.5V112Z" fill="#EDF0F2" />
                <path d="M248.5 111H249.5V114H248.5V111Z" fill="#EDF0F2" />
                <path d="M247.5 82H250.5V83H247.5V82Z" fill="#EDF0F2" />
                <path d="M248.5 81H249.5V84H248.5V81Z" fill="#EDF0F2" />
                <path d="M247.5 52H250.5V53H247.5V52Z" fill="#EDF0F2" />
                <path d="M248.5 51H249.5V54H248.5V51Z" fill="#EDF0F2" />
                <path d="M232.5 172H235.5V173H232.5V172Z" fill="#EDF0F2" />
                <path d="M233.5 171H234.5V174H233.5V171Z" fill="#EDF0F2" />
                <path d="M232.5 142H235.5V143H232.5V142Z" fill="#EDF0F2" />
                <path d="M233.5 141H234.5V144H233.5V141Z" fill="#EDF0F2" />
                <path d="M232.5 112H235.5V113H232.5V112Z" fill="#EDF0F2" />
                <path d="M233.5 111H234.5V114H233.5V111Z" fill="#EDF0F2" />
                <path d="M232.5 82H235.5V83H232.5V82Z" fill="#EDF0F2" />
                <path d="M233.5 81H234.5V84H233.5V81Z" fill="#EDF0F2" />
                <path d="M232.5 52H235.5V53H232.5V52Z" fill="#EDF0F2" />
                <path d="M233.5 51H234.5V54H233.5V51Z" fill="#EDF0F2" />
                <path d="M217.5 172H220.5V173H217.5V172Z" fill="#EDF0F2" />
                <path d="M218.5 171H219.5V174H218.5V171Z" fill="#EDF0F2" />
                <path d="M217.5 142H220.5V143H217.5V142Z" fill="#EDF0F2" />
                <path d="M218.5 141H219.5V144H218.5V141Z" fill="#EDF0F2" />
                <path d="M217.5 112H220.5V113H217.5V112Z" fill="#EDF0F2" />
                <path d="M218.5 111H219.5V114H218.5V111Z" fill="#EDF0F2" />
                <path d="M217.5 82H220.5V83H217.5V82Z" fill="#EDF0F2" />
                <path d="M218.5 81H219.5V84H218.5V81Z" fill="#EDF0F2" />
                <path d="M217.5 52H220.5V53H217.5V52Z" fill="#EDF0F2" />
                <path d="M218.5 51H219.5V54H218.5V51Z" fill="#EDF0F2" />
                <path d="M202.5 172H205.5V173H202.5V172Z" fill="#EDF0F2" />
                <path d="M203.5 171H204.5V174H203.5V171Z" fill="#EDF0F2" />
                <path d="M202.5 142H205.5V143H202.5V142Z" fill="#EDF0F2" />
                <path d="M203.5 141H204.5V144H203.5V141Z" fill="#EDF0F2" />
                <path d="M202.5 112H205.5V113H202.5V112Z" fill="#EDF0F2" />
                <path d="M203.5 111H204.5V114H203.5V111Z" fill="#EDF0F2" />
                <path d="M202.5 82H205.5V83H202.5V82Z" fill="#EDF0F2" />
                <path d="M203.5 81H204.5V84H203.5V81Z" fill="#EDF0F2" />
                <path d="M202.5 52H205.5V53H202.5V52Z" fill="#EDF0F2" />
                <path d="M203.5 51H204.5V54H203.5V51Z" fill="#EDF0F2" />
                <path d="M187.5 172H190.5V173H187.5V172Z" fill="#EDF0F2" />
                <path d="M188.5 171H189.5V174H188.5V171Z" fill="#EDF0F2" />
                <path d="M187.5 142H190.5V143H187.5V142Z" fill="#EDF0F2" />
                <path d="M188.5 141H189.5V144H188.5V141Z" fill="#EDF0F2" />
                <path d="M187.5 112H190.5V113H187.5V112Z" fill="#EDF0F2" />
                <path d="M188.5 111H189.5V114H188.5V111Z" fill="#EDF0F2" />
                <path d="M187.5 82H190.5V83H187.5V82Z" fill="#EDF0F2" />
                <path d="M188.5 81H189.5V84H188.5V81Z" fill="#EDF0F2" />
                <path d="M187.5 52H190.5V53H187.5V52Z" fill="#EDF0F2" />
                <path d="M188.5 51H189.5V54H188.5V51Z" fill="#EDF0F2" />
                <path d="M172.5 172H175.5V173H172.5V172Z" fill="#EDF0F2" />
                <path d="M173.5 171H174.5V174H173.5V171Z" fill="#EDF0F2" />
                <path d="M172.5 142H175.5V143H172.5V142Z" fill="#EDF0F2" />
                <path d="M173.5 141H174.5V144H173.5V141Z" fill="#EDF0F2" />
                <path d="M172.5 112H175.5V113H172.5V112Z" fill="#EDF0F2" />
                <path d="M173.5 111H174.5V114H173.5V111Z" fill="#EDF0F2" />
                <path d="M172.5 82H175.5V83H172.5V82Z" fill="#EDF0F2" />
                <path d="M173.5 81H174.5V84H173.5V81Z" fill="#EDF0F2" />
                <path d="M172.5 52H175.5V53H172.5V52Z" fill="#EDF0F2" />
                <path d="M173.5 51H174.5V54H173.5V51Z" fill="#EDF0F2" />
                <path d="M157.5 172H160.5V173H157.5V172Z" fill="#EDF0F2" />
                <path d="M158.5 171H159.5V174H158.5V171Z" fill="#EDF0F2" />
                <path d="M157.5 142H160.5V143H157.5V142Z" fill="#EDF0F2" />
                <path d="M158.5 141H159.5V144H158.5V141Z" fill="#EDF0F2" />
                <path d="M157.5 112H160.5V113H157.5V112Z" fill="#EDF0F2" />
                <path d="M158.5 111H159.5V114H158.5V111Z" fill="#EDF0F2" />
                <path d="M157.5 82H160.5V83H157.5V82Z" fill="#EDF0F2" />
                <path d="M158.5 81H159.5V84H158.5V81Z" fill="#EDF0F2" />
                <path d="M157.5 52H160.5V53H157.5V52Z" fill="#EDF0F2" />
                <path d="M158.5 51H159.5V54H158.5V51Z" fill="#EDF0F2" />
                <path d="M142.5 172H145.5V173H142.5V172Z" fill="#EDF0F2" />
                <path d="M143.5 171H144.5V174H143.5V171Z" fill="#EDF0F2" />
                <path d="M142.5 142H145.5V143H142.5V142Z" fill="#EDF0F2" />
                <path d="M143.5 141H144.5V144H143.5V141Z" fill="#EDF0F2" />
                <path d="M142.5 112H145.5V113H142.5V112Z" fill="#EDF0F2" />
                <path d="M143.5 111H144.5V114H143.5V111Z" fill="#EDF0F2" />
                <path d="M142.5 82H145.5V83H142.5V82Z" fill="#EDF0F2" />
                <path d="M143.5 81H144.5V84H143.5V81Z" fill="#EDF0F2" />
                <path d="M142.5 52H145.5V53H142.5V52Z" fill="#EDF0F2" />
                <path d="M143.5 51H144.5V54H143.5V51Z" fill="#EDF0F2" />
                <path d="M127.5 172H130.5V173H127.5V172Z" fill="#EDF0F2" />
                <path d="M128.5 171H129.5V174H128.5V171Z" fill="#EDF0F2" />
                <path d="M127.5 142H130.5V143H127.5V142Z" fill="#EDF0F2" />
                <path d="M128.5 141H129.5V144H128.5V141Z" fill="#EDF0F2" />
                <path d="M127.5 112H130.5V113H127.5V112Z" fill="#EDF0F2" />
                <path d="M128.5 111H129.5V114H128.5V111Z" fill="#EDF0F2" />
                <path d="M127.5 82H130.5V83H127.5V82Z" fill="#EDF0F2" />
                <path d="M128.5 81H129.5V84H128.5V81Z" fill="#EDF0F2" />
                <path d="M127.5 52H130.5V53H127.5V52Z" fill="#EDF0F2" />
                <path d="M128.5 51H129.5V54H128.5V51Z" fill="#EDF0F2" />
                <path d="M112.5 172H115.5V173H112.5V172Z" fill="#EDF0F2" />
                <path d="M113.5 171H114.5V174H113.5V171Z" fill="#EDF0F2" />
                <path d="M112.5 142H115.5V143H112.5V142Z" fill="#EDF0F2" />
                <path d="M113.5 141H114.5V144H113.5V141Z" fill="#EDF0F2" />
                <path d="M112.5 112H115.5V113H112.5V112Z" fill="#EDF0F2" />
                <path d="M113.5 111H114.5V114H113.5V111Z" fill="#EDF0F2" />
                <path d="M112.5 82H115.5V83H112.5V82Z" fill="#EDF0F2" />
                <path d="M113.5 81H114.5V84H113.5V81Z" fill="#EDF0F2" />
                <path d="M112.5 52H115.5V53H112.5V52Z" fill="#EDF0F2" />
                <path d="M113.5 51H114.5V54H113.5V51Z" fill="#EDF0F2" />
                <path d="M97.5 172H100.5V173H97.5V172Z" fill="#EDF0F2" />
                <path d="M98.5 171H99.5V174H98.5V171Z" fill="#EDF0F2" />
                <path d="M97.5 142H100.5V143H97.5V142Z" fill="#EDF0F2" />
                <path d="M98.5 141H99.5V144H98.5V141Z" fill="#EDF0F2" />
                <path d="M97.5 112H100.5V113H97.5V112Z" fill="#EDF0F2" />
                <path d="M98.5 111H99.5V114H98.5V111Z" fill="#EDF0F2" />
                <path d="M97.5 82H100.5V83H97.5V82Z" fill="#EDF0F2" />
                <path d="M98.5 81H99.5V84H98.5V81Z" fill="#EDF0F2" />
                <path d="M97.5 52H100.5V53H97.5V52Z" fill="#EDF0F2" />
                <path d="M98.5 51H99.5V54H98.5V51Z" fill="#EDF0F2" />
                <path d="M82.5 172H85.5V173H82.5V172Z" fill="#EDF0F2" />
                <path d="M83.5 171H84.5V174H83.5V171Z" fill="#EDF0F2" />
                <path d="M82.5 142H85.5V143H82.5V142Z" fill="#EDF0F2" />
                <path d="M83.5 141H84.5V144H83.5V141Z" fill="#EDF0F2" />
                <path d="M82.5 112H85.5V113H82.5V112Z" fill="#EDF0F2" />
                <path d="M83.5 111H84.5V114H83.5V111Z" fill="#EDF0F2" />
                <path d="M82.5 82H85.5V83H82.5V82Z" fill="#EDF0F2" />
                <path d="M83.5 81H84.5V84H83.5V81Z" fill="#EDF0F2" />
                <path d="M82.5 52H85.5V53H82.5V52Z" fill="#EDF0F2" />
                <path d="M83.5 51H84.5V54H83.5V51Z" fill="#EDF0F2" />
                <path d="M67.5 172H70.5V173H67.5V172Z" fill="#EDF0F2" />
                <path d="M68.5 171H69.5V174H68.5V171Z" fill="#EDF0F2" />
                <path d="M67.5 142H70.5V143H67.5V142Z" fill="#EDF0F2" />
                <path d="M68.5 141H69.5V144H68.5V141Z" fill="#EDF0F2" />
                <path d="M67.5 112H70.5V113H67.5V112Z" fill="#EDF0F2" />
                <path d="M68.5 111H69.5V114H68.5V111Z" fill="#EDF0F2" />
                <path d="M67.5 82H70.5V83H67.5V82Z" fill="#EDF0F2" />
                <path d="M68.5 81H69.5V84H68.5V81Z" fill="#EDF0F2" />
                <path d="M67.5 52H70.5V53H67.5V52Z" fill="#EDF0F2" />
                <path d="M68.5 51H69.5V54H68.5V51Z" fill="#EDF0F2" />
                <path d="M52.5 172H55.5V173H52.5V172Z" fill="#EDF0F2" />
                <path d="M53.5 171H54.5V174H53.5V171Z" fill="#EDF0F2" />
                <path d="M52.5 142H55.5V143H52.5V142Z" fill="#EDF0F2" />
                <path d="M53.5 141H54.5V144H53.5V141Z" fill="#EDF0F2" />
                <path d="M52.5 112H55.5V113H52.5V112Z" fill="#EDF0F2" />
                <path d="M53.5 111H54.5V114H53.5V111Z" fill="#EDF0F2" />
                <path d="M52.5 82H55.5V83H52.5V82Z" fill="#EDF0F2" />
                <path d="M53.5 81H54.5V84H53.5V81Z" fill="#EDF0F2" />
                <path d="M52.5 52H55.5V53H52.5V52Z" fill="#EDF0F2" />
                <path d="M53.5 51H54.5V54H53.5V51Z" fill="#EDF0F2" />
                <path d="M37.5 172H40.5V173H37.5V172Z" fill="#EDF0F2" />
                <path d="M38.5 171H39.5V174H38.5V171Z" fill="#EDF0F2" />
                <path d="M37.5 142H40.5V143H37.5V142Z" fill="#EDF0F2" />
                <path d="M38.5 141H39.5V144H38.5V141Z" fill="#EDF0F2" />
                <path d="M37.5 112H40.5V113H37.5V112Z" fill="#EDF0F2" />
                <path d="M38.5 111H39.5V114H38.5V111Z" fill="#EDF0F2" />
                <path d="M37.5 82H40.5V83H37.5V82Z" fill="#EDF0F2" />
                <path d="M38.5 81H39.5V84H38.5V81Z" fill="#EDF0F2" />
                <path d="M37.5 52H40.5V53H37.5V52Z" fill="#EDF0F2" />
                <path d="M38.5 51H39.5V54H38.5V51Z" fill="#EDF0F2" />
                <path d="M22.5 172H25.5V173H22.5V172Z" fill="#EDF0F2" />
                <path d="M23.5 171H24.5V174H23.5V171Z" fill="#EDF0F2" />
                <path d="M22.5 142H25.5V143H22.5V142Z" fill="#EDF0F2" />
                <path d="M23.5 141H24.5V144H23.5V141Z" fill="#EDF0F2" />
                <path d="M22.5 112H25.5V113H22.5V112Z" fill="#EDF0F2" />
                <path d="M23.5 111H24.5V114H23.5V111Z" fill="#EDF0F2" />
                <path d="M22.5 82H25.5V83H22.5V82Z" fill="#EDF0F2" />
                <path d="M23.5 81H24.5V84H23.5V81Z" fill="#EDF0F2" />
                <path d="M22.5 52H25.5V53H22.5V52Z" fill="#EDF0F2" />
                <path d="M23.5 51H24.5V54H23.5V51Z" fill="#EDF0F2" />
                <path d="M7.5 172H10.5V173H7.5V172Z" fill="#EDF0F2" />
                <path d="M8.5 171H9.5V174H8.5V171Z" fill="#EDF0F2" />
                <path d="M7.5 142H10.5V143H7.5V142Z" fill="#EDF0F2" />
                <path d="M8.5 141H9.5V144H8.5V141Z" fill="#EDF0F2" />
                <path d="M7.5 112H10.5V113H7.5V112Z" fill="#EDF0F2" />
                <path d="M8.5 111H9.5V114H8.5V111Z" fill="#EDF0F2" />
                <path d="M7.5 82H10.5V83H7.5V82Z" fill="#EDF0F2" />
                <path d="M8.5 81H9.5V84H8.5V81Z" fill="#EDF0F2" />
                <path d="M7.5 52H10.5V53H7.5V52Z" fill="#EDF0F2" />
                <path d="M8.5 51H9.5V54H8.5V51Z" fill="#EDF0F2" />
                <path d="M277.5 157H280.5V158H277.5V157Z" fill="#EDF0F2" />
                <path d="M278.5 156H279.5V159H278.5V156Z" fill="#EDF0F2" />
                <path d="M277.5 127H280.5V128H277.5V127Z" fill="#EDF0F2" />
                <path d="M278.5 126H279.5V129H278.5V126Z" fill="#EDF0F2" />
                <path d="M277.5 97H280.5V98H277.5V97Z" fill="#EDF0F2" />
                <path d="M278.5 96H279.5V99H278.5V96Z" fill="#EDF0F2" />
                <path d="M277.5 67H280.5V68H277.5V67Z" fill="#EDF0F2" />
                <path d="M278.5 66H279.5V69H278.5V66Z" fill="#EDF0F2" />
                <path d="M277.5 37H280.5V38H277.5V37Z" fill="#EDF0F2" />
                <path d="M278.5 36H279.5V39H278.5V36Z" fill="#EDF0F2" />
                <path d="M262.5 157H265.5V158H262.5V157Z" fill="#EDF0F2" />
                <path d="M263.5 156H264.5V159H263.5V156Z" fill="#EDF0F2" />
                <path d="M262.5 127H265.5V128H262.5V127Z" fill="#EDF0F2" />
                <path d="M263.5 126H264.5V129H263.5V126Z" fill="#EDF0F2" />
                <path d="M262.5 97H265.5V98H262.5V97Z" fill="#EDF0F2" />
                <path d="M263.5 96H264.5V99H263.5V96Z" fill="#EDF0F2" />
                <path d="M262.5 67H265.5V68H262.5V67Z" fill="#EDF0F2" />
                <path d="M263.5 66H264.5V69H263.5V66Z" fill="#EDF0F2" />
                <path d="M262.5 37H265.5V38H262.5V37Z" fill="#EDF0F2" />
                <path d="M263.5 36H264.5V39H263.5V36Z" fill="#EDF0F2" />
                <path d="M247.5 157H250.5V158H247.5V157Z" fill="#EDF0F2" />
                <path d="M248.5 156H249.5V159H248.5V156Z" fill="#EDF0F2" />
                <path d="M247.5 127H250.5V128H247.5V127Z" fill="#EDF0F2" />
                <path d="M248.5 126H249.5V129H248.5V126Z" fill="#EDF0F2" />
                <path d="M247.5 97H250.5V98H247.5V97Z" fill="#EDF0F2" />
                <path d="M248.5 96H249.5V99H248.5V96Z" fill="#EDF0F2" />
                <path d="M247.5 67H250.5V68H247.5V67Z" fill="#EDF0F2" />
                <path d="M248.5 66H249.5V69H248.5V66Z" fill="#EDF0F2" />
                <path d="M247.5 37H250.5V38H247.5V37Z" fill="#EDF0F2" />
                <path d="M248.5 36H249.5V39H248.5V36Z" fill="#EDF0F2" />
                <path d="M232.5 157H235.5V158H232.5V157Z" fill="#EDF0F2" />
                <path d="M233.5 156H234.5V159H233.5V156Z" fill="#EDF0F2" />
                <path d="M232.5 127H235.5V128H232.5V127Z" fill="#EDF0F2" />
                <path d="M233.5 126H234.5V129H233.5V126Z" fill="#EDF0F2" />
                <path d="M232.5 97H235.5V98H232.5V97Z" fill="#EDF0F2" />
                <path d="M233.5 96H234.5V99H233.5V96Z" fill="#EDF0F2" />
                <path d="M232.5 67H235.5V68H232.5V67Z" fill="#EDF0F2" />
                <path d="M233.5 66H234.5V69H233.5V66Z" fill="#EDF0F2" />
                <path d="M232.5 37H235.5V38H232.5V37Z" fill="#EDF0F2" />
                <path d="M233.5 36H234.5V39H233.5V36Z" fill="#EDF0F2" />
                <path d="M217.5 157H220.5V158H217.5V157Z" fill="#EDF0F2" />
                <path d="M218.5 156H219.5V159H218.5V156Z" fill="#EDF0F2" />
                <path d="M217.5 127H220.5V128H217.5V127Z" fill="#EDF0F2" />
                <path d="M218.5 126H219.5V129H218.5V126Z" fill="#EDF0F2" />
                <path d="M217.5 97H220.5V98H217.5V97Z" fill="#EDF0F2" />
                <path d="M218.5 96H219.5V99H218.5V96Z" fill="#EDF0F2" />
                <path d="M217.5 67H220.5V68H217.5V67Z" fill="#EDF0F2" />
                <path d="M218.5 66H219.5V69H218.5V66Z" fill="#EDF0F2" />
                <path d="M217.5 37H220.5V38H217.5V37Z" fill="#EDF0F2" />
                <path d="M218.5 36H219.5V39H218.5V36Z" fill="#EDF0F2" />
                <path d="M202.5 157H205.5V158H202.5V157Z" fill="#EDF0F2" />
                <path d="M203.5 156H204.5V159H203.5V156Z" fill="#EDF0F2" />
                <path d="M202.5 127H205.5V128H202.5V127Z" fill="#EDF0F2" />
                <path d="M203.5 126H204.5V129H203.5V126Z" fill="#EDF0F2" />
                <path d="M202.5 97H205.5V98H202.5V97Z" fill="#EDF0F2" />
                <path d="M203.5 96H204.5V99H203.5V96Z" fill="#EDF0F2" />
                <path d="M202.5 67H205.5V68H202.5V67Z" fill="#EDF0F2" />
                <path d="M203.5 66H204.5V69H203.5V66Z" fill="#EDF0F2" />
                <path d="M202.5 37H205.5V38H202.5V37Z" fill="#EDF0F2" />
                <path d="M203.5 36H204.5V39H203.5V36Z" fill="#EDF0F2" />
                <path d="M187.5 157H190.5V158H187.5V157Z" fill="#EDF0F2" />
                <path d="M188.5 156H189.5V159H188.5V156Z" fill="#EDF0F2" />
                <path d="M187.5 127H190.5V128H187.5V127Z" fill="#EDF0F2" />
                <path d="M188.5 126H189.5V129H188.5V126Z" fill="#EDF0F2" />
                <path d="M187.5 97H190.5V98H187.5V97Z" fill="#EDF0F2" />
                <path d="M188.5 96H189.5V99H188.5V96Z" fill="#EDF0F2" />
                <path d="M187.5 67H190.5V68H187.5V67Z" fill="#EDF0F2" />
                <path d="M188.5 66H189.5V69H188.5V66Z" fill="#EDF0F2" />
                <path d="M187.5 37H190.5V38H187.5V37Z" fill="#EDF0F2" />
                <path d="M188.5 36H189.5V39H188.5V36Z" fill="#EDF0F2" />
                <path d="M172.5 157H175.5V158H172.5V157Z" fill="#EDF0F2" />
                <path d="M173.5 156H174.5V159H173.5V156Z" fill="#EDF0F2" />
                <path d="M172.5 127H175.5V128H172.5V127Z" fill="#EDF0F2" />
                <path d="M173.5 126H174.5V129H173.5V126Z" fill="#EDF0F2" />
                <path d="M172.5 97H175.5V98H172.5V97Z" fill="#EDF0F2" />
                <path d="M173.5 96H174.5V99H173.5V96Z" fill="#EDF0F2" />
                <path d="M172.5 67H175.5V68H172.5V67Z" fill="#EDF0F2" />
                <path d="M173.5 66H174.5V69H173.5V66Z" fill="#EDF0F2" />
                <path d="M172.5 37H175.5V38H172.5V37Z" fill="#EDF0F2" />
                <path d="M173.5 36H174.5V39H173.5V36Z" fill="#EDF0F2" />
                <path d="M157.5 157H160.5V158H157.5V157Z" fill="#EDF0F2" />
                <path d="M158.5 156H159.5V159H158.5V156Z" fill="#EDF0F2" />
                <path d="M157.5 127H160.5V128H157.5V127Z" fill="#EDF0F2" />
                <path d="M158.5 126H159.5V129H158.5V126Z" fill="#EDF0F2" />
                <path d="M157.5 97H160.5V98H157.5V97Z" fill="#EDF0F2" />
                <path d="M158.5 96H159.5V99H158.5V96Z" fill="#EDF0F2" />
                <path d="M157.5 67H160.5V68H157.5V67Z" fill="#EDF0F2" />
                <path d="M158.5 66H159.5V69H158.5V66Z" fill="#EDF0F2" />
                <path d="M157.5 37H160.5V38H157.5V37Z" fill="#EDF0F2" />
                <path d="M158.5 36H159.5V39H158.5V36Z" fill="#EDF0F2" />
                <path d="M142.5 157H145.5V158H142.5V157Z" fill="#EDF0F2" />
                <path d="M143.5 156H144.5V159H143.5V156Z" fill="#EDF0F2" />
                <path d="M142.5 127H145.5V128H142.5V127Z" fill="#EDF0F2" />
                <path d="M143.5 126H144.5V129H143.5V126Z" fill="#EDF0F2" />
                <path d="M142.5 97H145.5V98H142.5V97Z" fill="#EDF0F2" />
                <path d="M143.5 96H144.5V99H143.5V96Z" fill="#EDF0F2" />
                <path d="M142.5 67H145.5V68H142.5V67Z" fill="#EDF0F2" />
                <path d="M143.5 66H144.5V69H143.5V66Z" fill="#EDF0F2" />
                <path d="M142.5 37H145.5V38H142.5V37Z" fill="#EDF0F2" />
                <path d="M143.5 36H144.5V39H143.5V36Z" fill="#EDF0F2" />
                <path d="M127.5 157H130.5V158H127.5V157Z" fill="#EDF0F2" />
                <path d="M128.5 156H129.5V159H128.5V156Z" fill="#EDF0F2" />
                <path d="M127.5 127H130.5V128H127.5V127Z" fill="#EDF0F2" />
                <path d="M128.5 126H129.5V129H128.5V126Z" fill="#EDF0F2" />
                <path d="M127.5 97H130.5V98H127.5V97Z" fill="#EDF0F2" />
                <path d="M128.5 96H129.5V99H128.5V96Z" fill="#EDF0F2" />
                <path d="M127.5 67H130.5V68H127.5V67Z" fill="#EDF0F2" />
                <path d="M128.5 66H129.5V69H128.5V66Z" fill="#EDF0F2" />
                <path d="M127.5 37H130.5V38H127.5V37Z" fill="#EDF0F2" />
                <path d="M128.5 36H129.5V39H128.5V36Z" fill="#EDF0F2" />
                <path d="M112.5 157H115.5V158H112.5V157Z" fill="#EDF0F2" />
                <path d="M113.5 156H114.5V159H113.5V156Z" fill="#EDF0F2" />
                <path d="M112.5 127H115.5V128H112.5V127Z" fill="#EDF0F2" />
                <path d="M113.5 126H114.5V129H113.5V126Z" fill="#EDF0F2" />
                <path d="M112.5 97H115.5V98H112.5V97Z" fill="#EDF0F2" />
                <path d="M113.5 96H114.5V99H113.5V96Z" fill="#EDF0F2" />
                <path d="M112.5 67H115.5V68H112.5V67Z" fill="#EDF0F2" />
                <path d="M113.5 66H114.5V69H113.5V66Z" fill="#EDF0F2" />
                <path d="M112.5 37H115.5V38H112.5V37Z" fill="#EDF0F2" />
                <path d="M113.5 36H114.5V39H113.5V36Z" fill="#EDF0F2" />
                <path d="M97.5 157H100.5V158H97.5V157Z" fill="#EDF0F2" />
                <path d="M98.5 156H99.5V159H98.5V156Z" fill="#EDF0F2" />
                <path d="M97.5 127H100.5V128H97.5V127Z" fill="#EDF0F2" />
                <path d="M98.5 126H99.5V129H98.5V126Z" fill="#EDF0F2" />
                <path d="M97.5 97H100.5V98H97.5V97Z" fill="#EDF0F2" />
                <path d="M98.5 96H99.5V99H98.5V96Z" fill="#EDF0F2" />
                <path d="M97.5 67H100.5V68H97.5V67Z" fill="#EDF0F2" />
                <path d="M98.5 66H99.5V69H98.5V66Z" fill="#EDF0F2" />
                <path d="M97.5 37H100.5V38H97.5V37Z" fill="#EDF0F2" />
                <path d="M98.5 36H99.5V39H98.5V36Z" fill="#EDF0F2" />
                <path d="M82.5 157H85.5V158H82.5V157Z" fill="#EDF0F2" />
                <path d="M83.5 156H84.5V159H83.5V156Z" fill="#EDF0F2" />
                <path d="M82.5 127H85.5V128H82.5V127Z" fill="#EDF0F2" />
                <path d="M83.5 126H84.5V129H83.5V126Z" fill="#EDF0F2" />
                <path d="M82.5 97H85.5V98H82.5V97Z" fill="#EDF0F2" />
                <path d="M83.5 96H84.5V99H83.5V96Z" fill="#EDF0F2" />
                <path d="M82.5 67H85.5V68H82.5V67Z" fill="#EDF0F2" />
                <path d="M83.5 66H84.5V69H83.5V66Z" fill="#EDF0F2" />
                <path d="M82.5 37H85.5V38H82.5V37Z" fill="#EDF0F2" />
                <path d="M83.5 36H84.5V39H83.5V36Z" fill="#EDF0F2" />
                <path d="M67.5 157H70.5V158H67.5V157Z" fill="#EDF0F2" />
                <path d="M68.5 156H69.5V159H68.5V156Z" fill="#EDF0F2" />
                <path d="M67.5 127H70.5V128H67.5V127Z" fill="#EDF0F2" />
                <path d="M68.5 126H69.5V129H68.5V126Z" fill="#EDF0F2" />
                <path d="M67.5 97H70.5V98H67.5V97Z" fill="#EDF0F2" />
                <path d="M68.5 96H69.5V99H68.5V96Z" fill="#EDF0F2" />
                <path d="M67.5 67H70.5V68H67.5V67Z" fill="#EDF0F2" />
                <path d="M68.5 66H69.5V69H68.5V66Z" fill="#EDF0F2" />
                <path d="M67.5 37H70.5V38H67.5V37Z" fill="#EDF0F2" />
                <path d="M68.5 36H69.5V39H68.5V36Z" fill="#EDF0F2" />
                <path d="M52.5 157H55.5V158H52.5V157Z" fill="#EDF0F2" />
                <path d="M53.5 156H54.5V159H53.5V156Z" fill="#EDF0F2" />
                <path d="M52.5 127H55.5V128H52.5V127Z" fill="#EDF0F2" />
                <path d="M53.5 126H54.5V129H53.5V126Z" fill="#EDF0F2" />
                <path d="M52.5 97H55.5V98H52.5V97Z" fill="#EDF0F2" />
                <path d="M53.5 96H54.5V99H53.5V96Z" fill="#EDF0F2" />
                <path d="M52.5 67H55.5V68H52.5V67Z" fill="#EDF0F2" />
                <path d="M53.5 66H54.5V69H53.5V66Z" fill="#EDF0F2" />
                <path d="M52.5 37H55.5V38H52.5V37Z" fill="#EDF0F2" />
                <path d="M53.5 36H54.5V39H53.5V36Z" fill="#EDF0F2" />
                <path d="M37.5 157H40.5V158H37.5V157Z" fill="#EDF0F2" />
                <path d="M38.5 156H39.5V159H38.5V156Z" fill="#EDF0F2" />
                <path d="M37.5 127H40.5V128H37.5V127Z" fill="#EDF0F2" />
                <path d="M38.5 126H39.5V129H38.5V126Z" fill="#EDF0F2" />
                <path d="M37.5 97H40.5V98H37.5V97Z" fill="#EDF0F2" />
                <path d="M38.5 96H39.5V99H38.5V96Z" fill="#EDF0F2" />
                <path d="M37.5 67H40.5V68H37.5V67Z" fill="#EDF0F2" />
                <path d="M38.5 66H39.5V69H38.5V66Z" fill="#EDF0F2" />
                <path d="M37.5 37H40.5V38H37.5V37Z" fill="#EDF0F2" />
                <path d="M38.5 36H39.5V39H38.5V36Z" fill="#EDF0F2" />
                <path d="M22.5 157H25.5V158H22.5V157Z" fill="#EDF0F2" />
                <path d="M23.5 156H24.5V159H23.5V156Z" fill="#EDF0F2" />
                <path d="M22.5 127H25.5V128H22.5V127Z" fill="#EDF0F2" />
                <path d="M23.5 126H24.5V129H23.5V126Z" fill="#EDF0F2" />
                <path d="M22.5 97H25.5V98H22.5V97Z" fill="#EDF0F2" />
                <path d="M23.5 96H24.5V99H23.5V96Z" fill="#EDF0F2" />
                <path d="M22.5 67H25.5V68H22.5V67Z" fill="#EDF0F2" />
                <path d="M23.5 66H24.5V69H23.5V66Z" fill="#EDF0F2" />
                <path d="M22.5 37H25.5V38H22.5V37Z" fill="#EDF0F2" />
                <path d="M23.5 36H24.5V39H23.5V36Z" fill="#EDF0F2" />
                <path d="M7.5 157H10.5V158H7.5V157Z" fill="#EDF0F2" />
                <path d="M8.5 156H9.5V159H8.5V156Z" fill="#EDF0F2" />
                <path d="M7.5 127H10.5V128H7.5V127Z" fill="#EDF0F2" />
                <path d="M8.5 126H9.5V129H8.5V126Z" fill="#EDF0F2" />
                <path d="M7.5 97H10.5V98H7.5V97Z" fill="#EDF0F2" />
                <path d="M8.5 96H9.5V99H8.5V96Z" fill="#EDF0F2" />
                <path d="M7.5 67H10.5V68H7.5V67Z" fill="#EDF0F2" />
                <path d="M8.5 66H9.5V69H8.5V66Z" fill="#EDF0F2" />
                <path d="M7.5 37H10.5V38H7.5V37Z" fill="#EDF0F2" />
                <path d="M8.5 36H9.5V39H8.5V36Z" fill="#EDF0F2" />
                <g filter="url(#filter1_d_5956_42863)">
                  <path
                    d="M40 60C40 53.3726 45.3726 48 52 48H228C234.627 48 240 53.3726 240 60V96C240 102.627 234.627 108 228 108H52C45.3726 108 40 102.627 40 96V60Z"
                    fill="white"
                  />
                  <path
                    d="M78.6667 90H77.3333L78.6667 80.6667H74C73.2267 80.6667 73.24 80.24 73.4933 79.7867C73.7467 79.3333 73.56 79.68 73.5867 79.6267C75.3067 76.5867 77.8933 72.0533 81.3333 66H82.6667L81.3333 75.3333H86C86.6533 75.3333 86.7467 75.7733 86.6267 76.0133L86.5333 76.2133C81.28 85.4 78.6667 90 78.6667 90Z"
                    fill="#A1A1B2"
                  />
                  <path
                    d="M99.3594 84L96.3359 72.7266H98.4297L100.391 81.2344H100.43L102.688 72.7266H104.516L106.773 81.2344H106.812L108.773 72.7266H110.867L107.844 84H105.898L103.625 75.9141H103.578L101.305 84H99.3594ZM114.758 84.1641C112.32 84.1641 110.75 82.5391 110.75 79.8594V79.8438C110.75 77.1875 112.344 75.5469 114.75 75.5469C117.164 75.5469 118.766 77.1719 118.766 79.8438V79.8594C118.766 82.5469 117.188 84.1641 114.758 84.1641ZM114.766 82.5938C115.992 82.5938 116.781 81.5938 116.781 79.8594V79.8438C116.781 78.1172 115.984 77.125 114.75 77.125C113.539 77.125 112.734 78.125 112.734 79.8438V79.8594C112.734 81.6016 113.523 82.5938 114.766 82.5938ZM120.016 84V75.7188H121.961V77.1484H122C122.258 76.1484 122.945 75.5469 123.898 75.5469C124.141 75.5469 124.367 75.5859 124.516 75.625V77.3828C124.352 77.3203 124.055 77.2734 123.727 77.2734C122.625 77.2734 121.961 77.9688 121.961 79.1953V84H120.016ZM125.602 84V72.7266H127.547V79.1562H127.586L130.68 75.7188H132.93L129.648 79.2812L133.062 84H130.82L128.203 80.4375L127.547 81.125V84H125.602ZM134.352 84V77.2188H133.219V75.7188H134.352V74.9297C134.352 73.3125 135.117 72.5625 136.914 72.5625C137.297 72.5625 137.711 72.5938 137.953 72.6406V74C137.797 73.9766 137.578 73.9609 137.367 73.9609C136.609 73.9609 136.258 74.3125 136.258 74.9844V75.7188H137.922V77.2188H136.297V84H134.352ZM139.258 84V72.7266H141.203V84H139.258ZM146.523 84.1641C144.086 84.1641 142.516 82.5391 142.516 79.8594V79.8438C142.516 77.1875 144.109 75.5469 146.516 75.5469C148.93 75.5469 150.531 77.1719 150.531 79.8438V79.8594C150.531 82.5469 148.953 84.1641 146.523 84.1641ZM146.531 82.5938C147.758 82.5938 148.547 81.5938 148.547 79.8594V79.8438C148.547 78.1172 147.75 77.125 146.516 77.125C145.305 77.125 144.5 78.125 144.5 79.8438V79.8594C144.5 81.6016 145.289 82.5938 146.531 82.5938ZM153.352 84L151.109 75.7188H153.062L154.461 82.0781H154.5L156.117 75.7188H157.984L159.602 82.0781H159.648L161.047 75.7188H162.969L160.727 84H158.68L157.047 77.9453H157.008L155.383 84H153.352ZM170.219 84.1641C168.484 84.1641 167.664 83.4609 167.664 81.7578V77.2188H166.492V75.7188H167.664V73.6172H169.641V75.7188H171.18V77.2188H169.641V81.5938C169.641 82.4062 170 82.6641 170.711 82.6641C170.898 82.6641 171.047 82.6406 171.18 82.6328V84.0938C170.953 84.125 170.609 84.1641 170.219 84.1641ZM172.516 84V75.7188H174.461V77.1484H174.5C174.758 76.1484 175.445 75.5469 176.398 75.5469C176.641 75.5469 176.867 75.5859 177.016 75.625V77.3828C176.852 77.3203 176.555 77.2734 176.227 77.2734C175.125 77.2734 174.461 77.9688 174.461 79.1953V84H172.516ZM179.047 74.5312C178.438 74.5312 177.961 74.0469 177.961 73.4688C177.961 72.875 178.438 72.3984 179.047 72.3984C179.656 72.3984 180.125 72.875 180.125 73.4688C180.125 74.0469 179.656 74.5312 179.047 74.5312ZM178.07 84V75.7188H180.016V84H178.07ZM185.406 86.8984C183.211 86.8984 181.828 85.8984 181.594 84.6016L181.578 84.5312H183.492L183.516 84.5938C183.727 85.0703 184.391 85.4297 185.406 85.4297C186.672 85.4297 187.367 84.7578 187.367 83.7031V82.5078H187.328C186.867 83.3906 185.93 83.9531 184.742 83.9531C182.664 83.9531 181.328 82.3594 181.328 79.7812V79.7734C181.328 77.1562 182.68 75.5469 184.773 75.5469C185.945 75.5469 186.852 76.1719 187.32 77.125H187.367V75.7188H189.312V83.7656C189.312 85.6406 187.805 86.8984 185.406 86.8984ZM185.352 82.4531C186.562 82.4531 187.375 81.4297 187.375 79.8203V79.8125C187.375 78.2109 186.555 77.1875 185.352 77.1875C184.102 77.1875 183.312 78.1953 183.312 79.8047V79.8125C183.312 81.4453 184.102 82.4531 185.352 82.4531ZM194.641 86.8984C192.445 86.8984 191.062 85.8984 190.828 84.6016L190.812 84.5312H192.727L192.75 84.5938C192.961 85.0703 193.625 85.4297 194.641 85.4297C195.906 85.4297 196.602 84.7578 196.602 83.7031V82.5078H196.562C196.102 83.3906 195.164 83.9531 193.977 83.9531C191.898 83.9531 190.562 82.3594 190.562 79.7812V79.7734C190.562 77.1562 191.914 75.5469 194.008 75.5469C195.18 75.5469 196.086 76.1719 196.555 77.125H196.602V75.7188H198.547V83.7656C198.547 85.6406 197.039 86.8984 194.641 86.8984ZM194.586 82.4531C195.797 82.4531 196.609 81.4297 196.609 79.8203V79.8125C196.609 78.2109 195.789 77.1875 194.586 77.1875C193.336 77.1875 192.547 78.1953 192.547 79.8047V79.8125C192.547 81.4453 193.336 82.4531 194.586 82.4531ZM203.781 84.1641C201.297 84.1641 199.797 82.5156 199.797 79.8828V79.875C199.797 77.2656 201.32 75.5469 203.688 75.5469C206.055 75.5469 207.523 77.2109 207.523 79.7109V80.3359H201.727C201.758 81.7891 202.555 82.6484 203.82 82.6484C204.789 82.6484 205.422 82.1328 205.609 81.5781L205.625 81.5234H207.445L207.422 81.6094C207.164 82.8828 205.945 84.1641 203.781 84.1641ZM203.711 77.0703C202.68 77.0703 201.906 77.7656 201.75 79.0391H205.633C205.492 77.7266 204.742 77.0703 203.711 77.0703ZM208.781 84V75.7188H210.727V77.1484H210.766C211.023 76.1484 211.711 75.5469 212.664 75.5469C212.906 75.5469 213.133 75.5859 213.281 75.625V77.3828C213.117 77.3203 212.82 77.2734 212.492 77.2734C211.391 77.2734 210.727 77.9688 210.727 79.1953V84H208.781Z"
                    fill="#A1A1B2"
                  />
                </g>
                <path d="M140 108V132" stroke="#A1A1B2" strokeDasharray="3 3" />
                <g filter="url(#filter2_d_5956_42863)">
                  <path
                    d="M40 144C40 137.373 45.3726 132 52 132H228C234.627 132 240 137.373 240 144V180C240 186.627 234.627 192 228 192H52C45.3726 192 40 186.627 40 180V144Z"
                    fill="white"
                  />
                  <path
                    d="M90.6667 151.333H69.3333C67.8667 151.333 66.68 152.533 66.68 154L66.6667 170C66.6667 171.467 67.8667 172.667 69.3333 172.667H90.6667C92.1333 172.667 93.3333 171.467 93.3333 170V154C93.3333 152.533 92.1333 151.333 90.6667 151.333ZM90.6667 170H69.3333V156.667L80 163.333L90.6667 156.667V170ZM80 160.667L69.3333 154H90.6667L80 160.667Z"
                    fill="#A1A1B2"
                  />
                  <path
                    d="M104.992 168V156.727H112.289V158.422H107.008V161.461H112V163.094H107.008V166.305H112.289V168H104.992ZM113.844 168V159.719H115.789V161.047H115.828C116.18 160.141 117.031 159.547 118.125 159.547C119.281 159.547 120.117 160.156 120.422 161.219H120.469C120.867 160.188 121.852 159.547 123.047 159.547C124.68 159.547 125.75 160.656 125.75 162.312V168H123.805V162.797C123.805 161.773 123.273 161.188 122.32 161.188C121.383 161.188 120.742 161.883 120.742 162.883V168H118.852V162.695C118.852 161.766 118.289 161.188 117.383 161.188C116.445 161.188 115.789 161.922 115.789 162.93V168H113.844ZM129.758 168.141C128.102 168.141 126.984 167.117 126.984 165.641V165.625C126.984 164.156 128.125 163.273 130.133 163.148L132.297 163.016V162.445C132.297 161.609 131.75 161.102 130.766 161.102C129.844 161.102 129.281 161.531 129.156 162.141L129.141 162.211H127.336L127.344 162.117C127.461 160.648 128.734 159.547 130.836 159.547C132.906 159.547 134.242 160.641 134.242 162.305V168H132.297V166.727H132.25C131.773 167.594 130.852 168.141 129.758 168.141ZM128.922 165.562C128.922 166.242 129.484 166.656 130.336 166.656C131.453 166.656 132.297 165.914 132.297 164.93V164.305L130.406 164.422C129.445 164.484 128.922 164.898 128.922 165.555V165.562ZM136.844 158.531C136.234 158.531 135.758 158.047 135.758 157.469C135.758 156.875 136.234 156.398 136.844 156.398C137.453 156.398 137.922 156.875 137.922 157.469C137.922 158.047 137.453 158.531 136.844 158.531ZM135.867 168V159.719H137.812V168H135.867ZM139.523 168V156.727H141.469V168H139.523ZM149.562 168.164C147.391 168.164 146.148 167.133 145.977 165.594L145.969 165.523H147.883L147.898 165.594C148.047 166.305 148.586 166.727 149.57 166.727C150.516 166.727 151.086 166.344 151.086 165.734V165.727C151.086 165.227 150.797 164.945 149.938 164.75L148.562 164.445C146.977 164.094 146.18 163.32 146.18 162.094V162.086C146.18 160.57 147.5 159.547 149.5 159.547C151.562 159.547 152.766 160.68 152.836 162.109L152.844 162.195H151.031L151.023 162.133C150.938 161.469 150.406 160.984 149.5 160.984C148.641 160.984 148.102 161.383 148.102 161.992V162C148.102 162.477 148.422 162.789 149.281 162.984L150.664 163.289C152.375 163.672 153.039 164.344 153.039 165.547V165.555C153.039 167.117 151.594 168.164 149.562 168.164ZM157.359 168.164C155.625 168.164 154.805 167.461 154.805 165.758V161.219H153.633V159.719H154.805V157.617H156.781V159.719H158.32V161.219H156.781V165.594C156.781 166.406 157.141 166.664 157.852 166.664C158.039 166.664 158.188 166.641 158.32 166.633V168.094C158.094 168.125 157.75 168.164 157.359 168.164ZM163.141 168.164C160.656 168.164 159.156 166.516 159.156 163.883V163.875C159.156 161.266 160.68 159.547 163.047 159.547C165.414 159.547 166.883 161.211 166.883 163.711V164.336H161.086C161.117 165.789 161.914 166.648 163.18 166.648C164.148 166.648 164.781 166.133 164.969 165.578L164.984 165.523H166.805L166.781 165.609C166.523 166.883 165.305 168.164 163.141 168.164ZM163.07 161.07C162.039 161.07 161.266 161.766 161.109 163.039H164.992C164.852 161.727 164.102 161.07 163.07 161.07ZM168.141 170.734V159.719H170.086V161.148H170.125C170.602 160.156 171.508 159.547 172.695 159.547C174.797 159.547 176.125 161.188 176.125 163.859V163.867C176.125 166.523 174.797 168.164 172.719 168.164C171.539 168.164 170.594 167.57 170.125 166.602H170.086V170.734H168.141ZM172.117 166.523C173.359 166.523 174.141 165.5 174.141 163.867V163.859C174.141 162.203 173.359 161.188 172.117 161.188C170.914 161.188 170.07 162.234 170.07 163.859V163.867C170.07 165.484 170.914 166.523 172.117 166.523Z"
                    fill="#A1A1B2"
                  />
                </g>
              </g>
            </g>
            <path
              d="M0 12C0 5.37258 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V168C280 174.627 274.627 180 268 180H12C5.37259 180 0 174.627 0 168V12Z"
              fill="url(#paint0_linear_5956_42863)"
            />
          </g>
        </g>
        <defs>
          <filter
            id="filter0_d_5956_42863"
            x="-20"
            y="-15"
            width="320"
            height="312"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_42863" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_42863" result="shape" />
          </filter>
          <filter
            id="filter1_d_5956_42863"
            x="20"
            y="33"
            width="240"
            height="100"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_42863" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_42863" result="shape" />
          </filter>
          <filter
            id="filter2_d_5956_42863"
            x="20"
            y="117"
            width="240"
            height="100"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_42863" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_42863" result="shape" />
          </filter>
          <linearGradient
            id="paint0_linear_5956_42863"
            x1="0"
            y1="0"
            x2="163.744"
            y2="254.731"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor="white" stopOpacity="0" />
            <stop offset="1" stopColor="white" />
          </linearGradient>
          <clipPath id="clip0_5956_42863">
            <rect width="280" height="180" fill="white" />
          </clipPath>
        </defs>
      </svg>
    );
  }

  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="280" height="180" viewBox="0 0 280 180" fill="none">
      <mask
        id="mask0_5956_77314"
        style={{
          maskType: 'luminance',
        }}
        maskUnits="userSpaceOnUse"
        x="0"
        y="0"
        width="280"
        height="180"
      >
        <path
          d="M0 12C0 5.37258 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V168C280 174.627 274.627 180 268 180H12C5.37259 180 0 174.627 0 168V12Z"
          fill="white"
        />
      </mask>
      <g mask="url(#mask0_5956_77314)">
        <g filter="url(#filter0_d_5956_77314)">
          <path d="M0 12C0 5.37258 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V36H0V12Z" fill="#23232B" />
          <path
            d="M25.3333 22C26.0667 22 26.66 21.4 26.66 20.6667L26.6667 13.3333C26.6667 12.6 26.0667 12 25.3333 12H14.6667C13.9333 12 13.3333 12.6 13.3333 13.3333V20.6667C13.3333 21.4 13.9333 22 14.6667 22H12C12 22.7333 12.6 23.3333 13.3333 23.3333H26.6667C27.4 23.3333 28 22.7333 28 22H25.3333ZM14.6667 13.3333H25.3333V20.6667H14.6667V13.3333ZM20 22.6667C19.6333 22.6667 19.3333 22.3667 19.3333 22C19.3333 21.6333 19.6333 21.3333 20 21.3333C20.3667 21.3333 20.6667 21.6333 20.6667 22C20.6667 22.3667 20.3667 22.6667 20 22.6667Z"
            fill="#828299"
          />
          <path
            d="M33.2168 23V13.1357H34.748L39.5947 19.9307H39.7041V13.1357H41.3994V23H39.875L35.0283 16.2051H34.9189V23H33.2168ZM46.8887 23.1504C44.6465 23.1504 43.293 21.6875 43.293 19.2676V19.2539C43.293 16.8545 44.667 15.3848 46.8887 15.3848C49.1172 15.3848 50.4844 16.8477 50.4844 19.2539V19.2676C50.4844 21.6875 49.124 23.1504 46.8887 23.1504ZM46.8887 21.7695C48.0713 21.7695 48.7412 20.8467 48.7412 19.2744V19.2607C48.7412 17.6885 48.0645 16.7588 46.8887 16.7588C45.7061 16.7588 45.0293 17.6885 45.0293 19.2607V19.2744C45.0293 20.8467 45.7061 21.7695 46.8887 21.7695ZM53.9023 23L51.2432 15.5283H53.0615L54.791 21.3389H54.9072L56.623 15.5283H58.4141L55.7686 23H53.9023ZM62.3242 23.1504C60.6426 23.1504 59.7812 22.1387 59.7812 20.3613V15.5283H61.4834V19.9717C61.4834 21.127 61.9141 21.7148 62.9395 21.7148C64.04 21.7148 64.6279 21.0039 64.6279 19.8828V15.5283H66.3301V23H64.6279V21.8652H64.5117C64.1631 22.665 63.4043 23.1504 62.3242 23.1504ZM75.7432 23.2461C73.4531 23.2461 71.9971 22.1182 71.874 20.416L71.8672 20.3203H73.5762L73.583 20.3887C73.665 21.2158 74.5469 21.7627 75.7979 21.7627C76.9873 21.7627 77.8213 21.1748 77.8213 20.3271V20.3203C77.8213 19.6094 77.3086 19.1787 76.0371 18.9053L74.9775 18.6865C72.9609 18.2627 72.0859 17.3193 72.0859 15.8496V15.8428C72.0859 14.0791 73.6035 12.8896 75.7363 12.8896C77.9238 12.8896 79.2842 14.0859 79.4072 15.6719L79.4141 15.7607H77.7256L77.7119 15.6787C77.5889 14.9131 76.8574 14.3662 75.7295 14.373C74.6357 14.373 73.8564 14.8857 73.8564 15.7266V15.7334C73.8564 16.4307 74.3555 16.8682 75.5859 17.1279L76.6455 17.3535C78.7236 17.791 79.5918 18.625 79.5918 20.1152V20.1221C79.5918 22.043 78.1084 23.2461 75.7432 23.2461ZM84.3359 23.0342C82.6201 23.0342 81.916 22.46 81.916 21.0176V16.8477H80.7539V15.5283H81.916V13.6963H83.6455V15.5283H85.2246V16.8477H83.6455V20.6143C83.6455 21.3594 83.9395 21.6738 84.6504 21.6738C84.8896 21.6738 85.0195 21.667 85.2246 21.6465V22.959C84.9785 23.0068 84.6641 23.0342 84.3359 23.0342ZM89.3945 23.1504C87.7129 23.1504 86.8516 22.1387 86.8516 20.3613V15.5283H88.5537V19.9717C88.5537 21.127 88.9844 21.7148 90.0098 21.7148C91.1104 21.7148 91.6982 21.0039 91.6982 19.8828V15.5283H93.4004V23H91.6982V21.8652H91.582C91.2334 22.665 90.4746 23.1504 89.3945 23.1504ZM98.1719 23.123C96.2988 23.123 95.1094 21.6396 95.1094 19.2744V19.2607C95.1094 16.8818 96.2783 15.4053 98.1719 15.4053C99.1973 15.4053 100.052 15.9111 100.441 16.7178H100.558V12.6367H102.267V23H100.558V21.8311H100.441C100.031 22.6445 99.2246 23.123 98.1719 23.123ZM98.7051 21.6875C99.8672 21.6875 100.585 20.7715 100.585 19.2744V19.2607C100.585 17.7637 99.8604 16.8408 98.7051 16.8408C97.5498 16.8408 96.8389 17.7568 96.8389 19.2607V19.2744C96.8389 20.7783 97.543 21.6875 98.7051 21.6875ZM105.281 14.2773C104.721 14.2773 104.263 13.833 104.263 13.2725C104.263 12.7188 104.721 12.2676 105.281 12.2676C105.835 12.2676 106.293 12.7188 106.293 13.2725C106.293 13.833 105.835 14.2773 105.281 14.2773ZM104.427 23V15.5283H106.129V23H104.427ZM111.447 23.1504C109.205 23.1504 107.852 21.6875 107.852 19.2676V19.2539C107.852 16.8545 109.226 15.3848 111.447 15.3848C113.676 15.3848 115.043 16.8477 115.043 19.2539V19.2676C115.043 21.6875 113.683 23.1504 111.447 23.1504ZM111.447 21.7695C112.63 21.7695 113.3 20.8467 113.3 19.2744V19.2607C113.3 17.6885 112.623 16.7588 111.447 16.7588C110.265 16.7588 109.588 17.6885 109.588 19.2607V19.2744C109.588 20.8467 110.265 21.7695 111.447 21.7695Z"
            fill="#828299"
          />
          <path
            d="M194 22C196.209 22 198 20.2091 198 18C198 15.7909 196.209 14 194 14C191.791 14 190 15.7909 190 18C190 20.2091 191.791 22 194 22Z"
            fill="#3CB179"
          />
          <path
            opacity="0.2"
            d="M194 26C198.418 26 202 22.4183 202 18C202 13.5817 198.418 10 194 10C189.582 10 186 13.5817 186 18C186 22.4183 189.582 26 194 26Z"
            fill="#3CB179"
          />
          <path
            d="M210.482 22.1992C208.186 22.1992 206.75 20.5 206.75 17.7812V17.7695C206.75 15.0449 208.18 13.3457 210.477 13.3457C212.258 13.3457 213.646 14.4648 213.898 16.0879L213.893 16.0996H212.832L212.826 16.0879C212.545 15.0039 211.643 14.3184 210.477 14.3184C208.854 14.3184 207.834 15.6543 207.834 17.7695V17.7812C207.834 19.8965 208.854 21.2266 210.482 21.2266C211.66 21.2266 212.557 20.623 212.82 19.6504L212.832 19.6387H213.898V19.6504C213.617 21.1973 212.281 22.1992 210.482 22.1992ZM218.135 22.1113C216.336 22.1113 215.223 20.8691 215.223 18.8477V18.8359C215.223 16.8086 216.336 15.5723 218.135 15.5723C219.934 15.5723 221.047 16.8086 221.047 18.8359V18.8477C221.047 20.8691 219.934 22.1113 218.135 22.1113ZM218.135 21.209C219.33 21.209 220.004 20.3359 220.004 18.8477V18.8359C220.004 17.3418 219.33 16.4746 218.135 16.4746C216.939 16.4746 216.266 17.3418 216.266 18.8359V18.8477C216.266 20.3359 216.939 21.209 218.135 21.209ZM222.629 22V15.6836H223.648V16.6328H223.742C224.059 15.9648 224.65 15.5723 225.582 15.5723C227 15.5723 227.791 16.4102 227.791 17.9102V22H226.771V18.1562C226.771 17.0195 226.303 16.4746 225.295 16.4746C224.287 16.4746 223.648 17.1543 223.648 18.2617V22H222.629ZM229.637 22V15.6836H230.656V16.6328H230.75C231.066 15.9648 231.658 15.5723 232.59 15.5723C234.008 15.5723 234.799 16.4102 234.799 17.9102V22H233.779V18.1562C233.779 17.0195 233.311 16.4746 232.303 16.4746C231.295 16.4746 230.656 17.1543 230.656 18.2617V22H229.637ZM239.223 22.1113C237.418 22.1113 236.328 20.8457 236.328 18.8652V18.8594C236.328 16.9082 237.441 15.5723 239.158 15.5723C240.875 15.5723 241.918 16.8496 241.918 18.7363V19.1348H237.371C237.4 20.4414 238.121 21.2031 239.246 21.2031C240.102 21.2031 240.629 20.7988 240.799 20.418L240.822 20.3652H241.842L241.83 20.4121C241.613 21.2676 240.711 22.1113 239.223 22.1113ZM239.152 16.4805C238.215 16.4805 237.5 17.1191 237.389 18.3203H240.881C240.775 17.0723 240.084 16.4805 239.152 16.4805ZM246.084 22.1113C244.314 22.1113 243.184 20.8281 243.184 18.8242V18.8125C243.184 16.8496 244.309 15.5723 246.078 15.5723C247.613 15.5723 248.533 16.457 248.721 17.582L248.727 17.6172H247.713L247.707 17.5996C247.549 16.9785 246.986 16.4746 246.078 16.4746C244.941 16.4746 244.227 17.3887 244.227 18.8125V18.8242C244.227 20.2773 244.953 21.209 246.078 21.209C246.928 21.209 247.467 20.834 247.701 20.1309L247.713 20.0957L248.721 20.0898L248.709 20.1543C248.451 21.2969 247.602 22.1113 246.084 22.1113ZM252.576 22.0469C251.275 22.0469 250.73 21.5664 250.73 20.3594V16.5273H249.734V15.6836H250.73V14.0488H251.785V15.6836H253.168V16.5273H251.785V20.1016C251.785 20.8457 252.043 21.1445 252.699 21.1445C252.881 21.1445 252.98 21.1387 253.168 21.1211V21.9883C252.969 22.0234 252.775 22.0469 252.576 22.0469ZM257.176 22.1113C255.371 22.1113 254.281 20.8457 254.281 18.8652V18.8594C254.281 16.9082 255.395 15.5723 257.111 15.5723C258.828 15.5723 259.871 16.8496 259.871 18.7363V19.1348H255.324C255.354 20.4414 256.074 21.2031 257.199 21.2031C258.055 21.2031 258.582 20.7988 258.752 20.418L258.775 20.3652H259.795L259.783 20.4121C259.566 21.2676 258.664 22.1113 257.176 22.1113ZM257.105 16.4805C256.168 16.4805 255.453 17.1191 255.342 18.3203H258.834C258.729 17.0723 258.037 16.4805 257.105 16.4805ZM263.785 22.1113C262.186 22.1113 261.137 20.8164 261.137 18.8477V18.8359C261.137 16.8555 262.18 15.5723 263.785 15.5723C264.652 15.5723 265.408 16.0059 265.754 16.6797H265.848V13.1758H266.867V22H265.848V20.9922H265.754C265.367 21.6953 264.664 22.1113 263.785 22.1113ZM264.02 21.209C265.168 21.209 265.871 20.3066 265.871 18.8477V18.8359C265.871 17.377 265.168 16.4746 264.02 16.4746C262.865 16.4746 262.18 17.3652 262.18 18.8359V18.8477C262.18 20.3184 262.865 21.209 264.02 21.209Z"
            fill="#828299"
          />
          <mask
            id="mask1_5956_77314"
            style={{
              maskType: 'luminance',
            }}
            maskUnits="userSpaceOnUse"
            x="0"
            y="36"
            width="280"
            height="236"
          >
            <path d="M280 36H0V272H280V36Z" fill="white" />
          </mask>
          <g mask="url(#mask1_5956_77314)">
            <path d="M280 36H0V272H280V36Z" fill="#23232B" />
            <path d="M277.5 172H280.5V173H277.5V172Z" fill="#292933" />
            <path d="M278.5 171H279.5V174H278.5V171Z" fill="#292933" />
            <path d="M277.5 142H280.5V143H277.5V142Z" fill="#292933" />
            <path d="M278.5 141H279.5V144H278.5V141Z" fill="#292933" />
            <path d="M277.5 112H280.5V113H277.5V112Z" fill="#292933" />
            <path d="M278.5 111H279.5V114H278.5V111Z" fill="#292933" />
            <path d="M277.5 82H280.5V83H277.5V82Z" fill="#292933" />
            <path d="M278.5 81H279.5V84H278.5V81Z" fill="#292933" />
            <path d="M277.5 52H280.5V53H277.5V52Z" fill="#292933" />
            <path d="M278.5 51H279.5V54H278.5V51Z" fill="#292933" />
            <path d="M262.5 172H265.5V173H262.5V172Z" fill="#292933" />
            <path d="M263.5 171H264.5V174H263.5V171Z" fill="#292933" />
            <path d="M262.5 142H265.5V143H262.5V142Z" fill="#292933" />
            <path d="M263.5 141H264.5V144H263.5V141Z" fill="#292933" />
            <path d="M262.5 112H265.5V113H262.5V112Z" fill="#292933" />
            <path d="M263.5 111H264.5V114H263.5V111Z" fill="#292933" />
            <path d="M262.5 82H265.5V83H262.5V82Z" fill="#292933" />
            <path d="M263.5 81H264.5V84H263.5V81Z" fill="#292933" />
            <path d="M262.5 52H265.5V53H262.5V52Z" fill="#292933" />
            <path d="M263.5 51H264.5V54H263.5V51Z" fill="#292933" />
            <path d="M247.5 172H250.5V173H247.5V172Z" fill="#292933" />
            <path d="M248.5 171H249.5V174H248.5V171Z" fill="#292933" />
            <path d="M247.5 142H250.5V143H247.5V142Z" fill="#292933" />
            <path d="M248.5 141H249.5V144H248.5V141Z" fill="#292933" />
            <path d="M247.5 112H250.5V113H247.5V112Z" fill="#292933" />
            <path d="M248.5 111H249.5V114H248.5V111Z" fill="#292933" />
            <path d="M247.5 82H250.5V83H247.5V82Z" fill="#292933" />
            <path d="M248.5 81H249.5V84H248.5V81Z" fill="#292933" />
            <path d="M247.5 52H250.5V53H247.5V52Z" fill="#292933" />
            <path d="M248.5 51H249.5V54H248.5V51Z" fill="#292933" />
            <path d="M232.5 172H235.5V173H232.5V172Z" fill="#292933" />
            <path d="M233.5 171H234.5V174H233.5V171Z" fill="#292933" />
            <path d="M232.5 142H235.5V143H232.5V142Z" fill="#292933" />
            <path d="M233.5 141H234.5V144H233.5V141Z" fill="#292933" />
            <path d="M232.5 112H235.5V113H232.5V112Z" fill="#292933" />
            <path d="M233.5 111H234.5V114H233.5V111Z" fill="#292933" />
            <path d="M232.5 82H235.5V83H232.5V82Z" fill="#292933" />
            <path d="M233.5 81H234.5V84H233.5V81Z" fill="#292933" />
            <path d="M232.5 52H235.5V53H232.5V52Z" fill="#292933" />
            <path d="M233.5 51H234.5V54H233.5V51Z" fill="#292933" />
            <path d="M217.5 172H220.5V173H217.5V172Z" fill="#292933" />
            <path d="M218.5 171H219.5V174H218.5V171Z" fill="#292933" />
            <path d="M217.5 142H220.5V143H217.5V142Z" fill="#292933" />
            <path d="M218.5 141H219.5V144H218.5V141Z" fill="#292933" />
            <path d="M217.5 112H220.5V113H217.5V112Z" fill="#292933" />
            <path d="M218.5 111H219.5V114H218.5V111Z" fill="#292933" />
            <path d="M217.5 82H220.5V83H217.5V82Z" fill="#292933" />
            <path d="M218.5 81H219.5V84H218.5V81Z" fill="#292933" />
            <path d="M217.5 52H220.5V53H217.5V52Z" fill="#292933" />
            <path d="M218.5 51H219.5V54H218.5V51Z" fill="#292933" />
            <path d="M202.5 172H205.5V173H202.5V172Z" fill="#292933" />
            <path d="M203.5 171H204.5V174H203.5V171Z" fill="#292933" />
            <path d="M202.5 142H205.5V143H202.5V142Z" fill="#292933" />
            <path d="M203.5 141H204.5V144H203.5V141Z" fill="#292933" />
            <path d="M202.5 112H205.5V113H202.5V112Z" fill="#292933" />
            <path d="M203.5 111H204.5V114H203.5V111Z" fill="#292933" />
            <path d="M202.5 82H205.5V83H202.5V82Z" fill="#292933" />
            <path d="M203.5 81H204.5V84H203.5V81Z" fill="#292933" />
            <path d="M202.5 52H205.5V53H202.5V52Z" fill="#292933" />
            <path d="M203.5 51H204.5V54H203.5V51Z" fill="#292933" />
            <path d="M187.5 172H190.5V173H187.5V172Z" fill="#292933" />
            <path d="M188.5 171H189.5V174H188.5V171Z" fill="#292933" />
            <path d="M187.5 142H190.5V143H187.5V142Z" fill="#292933" />
            <path d="M188.5 141H189.5V144H188.5V141Z" fill="#292933" />
            <path d="M187.5 112H190.5V113H187.5V112Z" fill="#292933" />
            <path d="M188.5 111H189.5V114H188.5V111Z" fill="#292933" />
            <path d="M187.5 82H190.5V83H187.5V82Z" fill="#292933" />
            <path d="M188.5 81H189.5V84H188.5V81Z" fill="#292933" />
            <path d="M187.5 52H190.5V53H187.5V52Z" fill="#292933" />
            <path d="M188.5 51H189.5V54H188.5V51Z" fill="#292933" />
            <path d="M172.5 172H175.5V173H172.5V172Z" fill="#292933" />
            <path d="M173.5 171H174.5V174H173.5V171Z" fill="#292933" />
            <path d="M172.5 142H175.5V143H172.5V142Z" fill="#292933" />
            <path d="M173.5 141H174.5V144H173.5V141Z" fill="#292933" />
            <path d="M172.5 112H175.5V113H172.5V112Z" fill="#292933" />
            <path d="M173.5 111H174.5V114H173.5V111Z" fill="#292933" />
            <path d="M172.5 82H175.5V83H172.5V82Z" fill="#292933" />
            <path d="M173.5 81H174.5V84H173.5V81Z" fill="#292933" />
            <path d="M172.5 52H175.5V53H172.5V52Z" fill="#292933" />
            <path d="M173.5 51H174.5V54H173.5V51Z" fill="#292933" />
            <path d="M157.5 172H160.5V173H157.5V172Z" fill="#292933" />
            <path d="M158.5 171H159.5V174H158.5V171Z" fill="#292933" />
            <path d="M157.5 142H160.5V143H157.5V142Z" fill="#292933" />
            <path d="M158.5 141H159.5V144H158.5V141Z" fill="#292933" />
            <path d="M157.5 112H160.5V113H157.5V112Z" fill="#292933" />
            <path d="M158.5 111H159.5V114H158.5V111Z" fill="#292933" />
            <path d="M157.5 82H160.5V83H157.5V82Z" fill="#292933" />
            <path d="M158.5 81H159.5V84H158.5V81Z" fill="#292933" />
            <path d="M157.5 52H160.5V53H157.5V52Z" fill="#292933" />
            <path d="M158.5 51H159.5V54H158.5V51Z" fill="#292933" />
            <path d="M142.5 172H145.5V173H142.5V172Z" fill="#292933" />
            <path d="M143.5 171H144.5V174H143.5V171Z" fill="#292933" />
            <path d="M142.5 142H145.5V143H142.5V142Z" fill="#292933" />
            <path d="M143.5 141H144.5V144H143.5V141Z" fill="#292933" />
            <path d="M142.5 112H145.5V113H142.5V112Z" fill="#292933" />
            <path d="M143.5 111H144.5V114H143.5V111Z" fill="#292933" />
            <path d="M142.5 82H145.5V83H142.5V82Z" fill="#292933" />
            <path d="M143.5 81H144.5V84H143.5V81Z" fill="#292933" />
            <path d="M142.5 52H145.5V53H142.5V52Z" fill="#292933" />
            <path d="M143.5 51H144.5V54H143.5V51Z" fill="#292933" />
            <path d="M127.5 172H130.5V173H127.5V172Z" fill="#292933" />
            <path d="M128.5 171H129.5V174H128.5V171Z" fill="#292933" />
            <path d="M127.5 142H130.5V143H127.5V142Z" fill="#292933" />
            <path d="M128.5 141H129.5V144H128.5V141Z" fill="#292933" />
            <path d="M127.5 112H130.5V113H127.5V112Z" fill="#292933" />
            <path d="M128.5 111H129.5V114H128.5V111Z" fill="#292933" />
            <path d="M127.5 82H130.5V83H127.5V82Z" fill="#292933" />
            <path d="M128.5 81H129.5V84H128.5V81Z" fill="#292933" />
            <path d="M127.5 52H130.5V53H127.5V52Z" fill="#292933" />
            <path d="M128.5 51H129.5V54H128.5V51Z" fill="#292933" />
            <path d="M112.5 172H115.5V173H112.5V172Z" fill="#292933" />
            <path d="M113.5 171H114.5V174H113.5V171Z" fill="#292933" />
            <path d="M112.5 142H115.5V143H112.5V142Z" fill="#292933" />
            <path d="M113.5 141H114.5V144H113.5V141Z" fill="#292933" />
            <path d="M112.5 112H115.5V113H112.5V112Z" fill="#292933" />
            <path d="M113.5 111H114.5V114H113.5V111Z" fill="#292933" />
            <path d="M112.5 82H115.5V83H112.5V82Z" fill="#292933" />
            <path d="M113.5 81H114.5V84H113.5V81Z" fill="#292933" />
            <path d="M112.5 52H115.5V53H112.5V52Z" fill="#292933" />
            <path d="M113.5 51H114.5V54H113.5V51Z" fill="#292933" />
            <path d="M97.5 172H100.5V173H97.5V172Z" fill="#292933" />
            <path d="M98.5 171H99.5V174H98.5V171Z" fill="#292933" />
            <path d="M97.5 142H100.5V143H97.5V142Z" fill="#292933" />
            <path d="M98.5 141H99.5V144H98.5V141Z" fill="#292933" />
            <path d="M97.5 112H100.5V113H97.5V112Z" fill="#292933" />
            <path d="M98.5 111H99.5V114H98.5V111Z" fill="#292933" />
            <path d="M97.5 82H100.5V83H97.5V82Z" fill="#292933" />
            <path d="M98.5 81H99.5V84H98.5V81Z" fill="#292933" />
            <path d="M97.5 52H100.5V53H97.5V52Z" fill="#292933" />
            <path d="M98.5 51H99.5V54H98.5V51Z" fill="#292933" />
            <path d="M82.5 172H85.5V173H82.5V172Z" fill="#292933" />
            <path d="M83.5 171H84.5V174H83.5V171Z" fill="#292933" />
            <path d="M82.5 142H85.5V143H82.5V142Z" fill="#292933" />
            <path d="M83.5 141H84.5V144H83.5V141Z" fill="#292933" />
            <path d="M82.5 112H85.5V113H82.5V112Z" fill="#292933" />
            <path d="M83.5 111H84.5V114H83.5V111Z" fill="#292933" />
            <path d="M82.5 82H85.5V83H82.5V82Z" fill="#292933" />
            <path d="M83.5 81H84.5V84H83.5V81Z" fill="#292933" />
            <path d="M82.5 52H85.5V53H82.5V52Z" fill="#292933" />
            <path d="M83.5 51H84.5V54H83.5V51Z" fill="#292933" />
            <path d="M67.5 172H70.5V173H67.5V172Z" fill="#292933" />
            <path d="M68.5 171H69.5V174H68.5V171Z" fill="#292933" />
            <path d="M67.5 142H70.5V143H67.5V142Z" fill="#292933" />
            <path d="M68.5 141H69.5V144H68.5V141Z" fill="#292933" />
            <path d="M67.5 112H70.5V113H67.5V112Z" fill="#292933" />
            <path d="M68.5 111H69.5V114H68.5V111Z" fill="#292933" />
            <path d="M67.5 82H70.5V83H67.5V82Z" fill="#292933" />
            <path d="M68.5 81H69.5V84H68.5V81Z" fill="#292933" />
            <path d="M67.5 52H70.5V53H67.5V52Z" fill="#292933" />
            <path d="M68.5 51H69.5V54H68.5V51Z" fill="#292933" />
            <path d="M52.5 172H55.5V173H52.5V172Z" fill="#292933" />
            <path d="M53.5 171H54.5V174H53.5V171Z" fill="#292933" />
            <path d="M52.5 142H55.5V143H52.5V142Z" fill="#292933" />
            <path d="M53.5 141H54.5V144H53.5V141Z" fill="#292933" />
            <path d="M52.5 112H55.5V113H52.5V112Z" fill="#292933" />
            <path d="M53.5 111H54.5V114H53.5V111Z" fill="#292933" />
            <path d="M52.5 82H55.5V83H52.5V82Z" fill="#292933" />
            <path d="M53.5 81H54.5V84H53.5V81Z" fill="#292933" />
            <path d="M52.5 52H55.5V53H52.5V52Z" fill="#292933" />
            <path d="M53.5 51H54.5V54H53.5V51Z" fill="#292933" />
            <path d="M37.5 172H40.5V173H37.5V172Z" fill="#292933" />
            <path d="M38.5 171H39.5V174H38.5V171Z" fill="#292933" />
            <path d="M37.5 142H40.5V143H37.5V142Z" fill="#292933" />
            <path d="M38.5 141H39.5V144H38.5V141Z" fill="#292933" />
            <path d="M37.5 112H40.5V113H37.5V112Z" fill="#292933" />
            <path d="M38.5 111H39.5V114H38.5V111Z" fill="#292933" />
            <path d="M37.5 82H40.5V83H37.5V82Z" fill="#292933" />
            <path d="M38.5 81H39.5V84H38.5V81Z" fill="#292933" />
            <path d="M37.5 52H40.5V53H37.5V52Z" fill="#292933" />
            <path d="M38.5 51H39.5V54H38.5V51Z" fill="#292933" />
            <path d="M22.5 172H25.5V173H22.5V172Z" fill="#292933" />
            <path d="M23.5 171H24.5V174H23.5V171Z" fill="#292933" />
            <path d="M22.5 142H25.5V143H22.5V142Z" fill="#292933" />
            <path d="M23.5 141H24.5V144H23.5V141Z" fill="#292933" />
            <path d="M22.5 112H25.5V113H22.5V112Z" fill="#292933" />
            <path d="M23.5 111H24.5V114H23.5V111Z" fill="#292933" />
            <path d="M22.5 82H25.5V83H22.5V82Z" fill="#292933" />
            <path d="M23.5 81H24.5V84H23.5V81Z" fill="#292933" />
            <path d="M22.5 52H25.5V53H22.5V52Z" fill="#292933" />
            <path d="M23.5 51H24.5V54H23.5V51Z" fill="#292933" />
            <path d="M7.5 172H10.5V173H7.5V172Z" fill="#292933" />
            <path d="M8.5 171H9.5V174H8.5V171Z" fill="#292933" />
            <path d="M7.5 142H10.5V143H7.5V142Z" fill="#292933" />
            <path d="M8.5 141H9.5V144H8.5V141Z" fill="#292933" />
            <path d="M7.5 112H10.5V113H7.5V112Z" fill="#292933" />
            <path d="M8.5 111H9.5V114H8.5V111Z" fill="#292933" />
            <path d="M7.5 82H10.5V83H7.5V82Z" fill="#292933" />
            <path d="M8.5 81H9.5V84H8.5V81Z" fill="#292933" />
            <path d="M7.5 52H10.5V53H7.5V52Z" fill="#292933" />
            <path d="M8.5 51H9.5V54H8.5V51Z" fill="#292933" />
            <path d="M277.5 157H280.5V158H277.5V157Z" fill="#292933" />
            <path d="M278.5 156H279.5V159H278.5V156Z" fill="#292933" />
            <path d="M277.5 127H280.5V128H277.5V127Z" fill="#292933" />
            <path d="M278.5 126H279.5V129H278.5V126Z" fill="#292933" />
            <path d="M277.5 97H280.5V98H277.5V97Z" fill="#292933" />
            <path d="M278.5 96H279.5V99H278.5V96Z" fill="#292933" />
            <path d="M277.5 67H280.5V68H277.5V67Z" fill="#292933" />
            <path d="M278.5 66H279.5V69H278.5V66Z" fill="#292933" />
            <path d="M277.5 37H280.5V38H277.5V37Z" fill="#292933" />
            <path d="M278.5 36H279.5V39H278.5V36Z" fill="#292933" />
            <path d="M262.5 157H265.5V158H262.5V157Z" fill="#292933" />
            <path d="M263.5 156H264.5V159H263.5V156Z" fill="#292933" />
            <path d="M262.5 127H265.5V128H262.5V127Z" fill="#292933" />
            <path d="M263.5 126H264.5V129H263.5V126Z" fill="#292933" />
            <path d="M262.5 97H265.5V98H262.5V97Z" fill="#292933" />
            <path d="M263.5 96H264.5V99H263.5V96Z" fill="#292933" />
            <path d="M262.5 67H265.5V68H262.5V67Z" fill="#292933" />
            <path d="M263.5 66H264.5V69H263.5V66Z" fill="#292933" />
            <path d="M262.5 37H265.5V38H262.5V37Z" fill="#292933" />
            <path d="M263.5 36H264.5V39H263.5V36Z" fill="#292933" />
            <path d="M247.5 157H250.5V158H247.5V157Z" fill="#292933" />
            <path d="M248.5 156H249.5V159H248.5V156Z" fill="#292933" />
            <path d="M247.5 127H250.5V128H247.5V127Z" fill="#292933" />
            <path d="M248.5 126H249.5V129H248.5V126Z" fill="#292933" />
            <path d="M247.5 97H250.5V98H247.5V97Z" fill="#292933" />
            <path d="M248.5 96H249.5V99H248.5V96Z" fill="#292933" />
            <path d="M247.5 67H250.5V68H247.5V67Z" fill="#292933" />
            <path d="M248.5 66H249.5V69H248.5V66Z" fill="#292933" />
            <path d="M247.5 37H250.5V38H247.5V37Z" fill="#292933" />
            <path d="M248.5 36H249.5V39H248.5V36Z" fill="#292933" />
            <path d="M232.5 157H235.5V158H232.5V157Z" fill="#292933" />
            <path d="M233.5 156H234.5V159H233.5V156Z" fill="#292933" />
            <path d="M232.5 127H235.5V128H232.5V127Z" fill="#292933" />
            <path d="M233.5 126H234.5V129H233.5V126Z" fill="#292933" />
            <path d="M232.5 97H235.5V98H232.5V97Z" fill="#292933" />
            <path d="M233.5 96H234.5V99H233.5V96Z" fill="#292933" />
            <path d="M232.5 67H235.5V68H232.5V67Z" fill="#292933" />
            <path d="M233.5 66H234.5V69H233.5V66Z" fill="#292933" />
            <path d="M232.5 37H235.5V38H232.5V37Z" fill="#292933" />
            <path d="M233.5 36H234.5V39H233.5V36Z" fill="#292933" />
            <path d="M217.5 157H220.5V158H217.5V157Z" fill="#292933" />
            <path d="M218.5 156H219.5V159H218.5V156Z" fill="#292933" />
            <path d="M217.5 127H220.5V128H217.5V127Z" fill="#292933" />
            <path d="M218.5 126H219.5V129H218.5V126Z" fill="#292933" />
            <path d="M217.5 97H220.5V98H217.5V97Z" fill="#292933" />
            <path d="M218.5 96H219.5V99H218.5V96Z" fill="#292933" />
            <path d="M217.5 67H220.5V68H217.5V67Z" fill="#292933" />
            <path d="M218.5 66H219.5V69H218.5V66Z" fill="#292933" />
            <path d="M217.5 37H220.5V38H217.5V37Z" fill="#292933" />
            <path d="M218.5 36H219.5V39H218.5V36Z" fill="#292933" />
            <path d="M202.5 157H205.5V158H202.5V157Z" fill="#292933" />
            <path d="M203.5 156H204.5V159H203.5V156Z" fill="#292933" />
            <path d="M202.5 127H205.5V128H202.5V127Z" fill="#292933" />
            <path d="M203.5 126H204.5V129H203.5V126Z" fill="#292933" />
            <path d="M202.5 97H205.5V98H202.5V97Z" fill="#292933" />
            <path d="M203.5 96H204.5V99H203.5V96Z" fill="#292933" />
            <path d="M202.5 67H205.5V68H202.5V67Z" fill="#292933" />
            <path d="M203.5 66H204.5V69H203.5V66Z" fill="#292933" />
            <path d="M202.5 37H205.5V38H202.5V37Z" fill="#292933" />
            <path d="M203.5 36H204.5V39H203.5V36Z" fill="#292933" />
            <path d="M187.5 157H190.5V158H187.5V157Z" fill="#292933" />
            <path d="M188.5 156H189.5V159H188.5V156Z" fill="#292933" />
            <path d="M187.5 127H190.5V128H187.5V127Z" fill="#292933" />
            <path d="M188.5 126H189.5V129H188.5V126Z" fill="#292933" />
            <path d="M187.5 97H190.5V98H187.5V97Z" fill="#292933" />
            <path d="M188.5 96H189.5V99H188.5V96Z" fill="#292933" />
            <path d="M187.5 67H190.5V68H187.5V67Z" fill="#292933" />
            <path d="M188.5 66H189.5V69H188.5V66Z" fill="#292933" />
            <path d="M187.5 37H190.5V38H187.5V37Z" fill="#292933" />
            <path d="M188.5 36H189.5V39H188.5V36Z" fill="#292933" />
            <path d="M172.5 157H175.5V158H172.5V157Z" fill="#292933" />
            <path d="M173.5 156H174.5V159H173.5V156Z" fill="#292933" />
            <path d="M172.5 127H175.5V128H172.5V127Z" fill="#292933" />
            <path d="M173.5 126H174.5V129H173.5V126Z" fill="#292933" />
            <path d="M172.5 97H175.5V98H172.5V97Z" fill="#292933" />
            <path d="M173.5 96H174.5V99H173.5V96Z" fill="#292933" />
            <path d="M172.5 67H175.5V68H172.5V67Z" fill="#292933" />
            <path d="M173.5 66H174.5V69H173.5V66Z" fill="#292933" />
            <path d="M172.5 37H175.5V38H172.5V37Z" fill="#292933" />
            <path d="M173.5 36H174.5V39H173.5V36Z" fill="#292933" />
            <path d="M157.5 157H160.5V158H157.5V157Z" fill="#292933" />
            <path d="M158.5 156H159.5V159H158.5V156Z" fill="#292933" />
            <path d="M157.5 127H160.5V128H157.5V127Z" fill="#292933" />
            <path d="M158.5 126H159.5V129H158.5V126Z" fill="#292933" />
            <path d="M157.5 97H160.5V98H157.5V97Z" fill="#292933" />
            <path d="M158.5 96H159.5V99H158.5V96Z" fill="#292933" />
            <path d="M157.5 67H160.5V68H157.5V67Z" fill="#292933" />
            <path d="M158.5 66H159.5V69H158.5V66Z" fill="#292933" />
            <path d="M157.5 37H160.5V38H157.5V37Z" fill="#292933" />
            <path d="M158.5 36H159.5V39H158.5V36Z" fill="#292933" />
            <path d="M142.5 157H145.5V158H142.5V157Z" fill="#292933" />
            <path d="M143.5 156H144.5V159H143.5V156Z" fill="#292933" />
            <path d="M142.5 127H145.5V128H142.5V127Z" fill="#292933" />
            <path d="M143.5 126H144.5V129H143.5V126Z" fill="#292933" />
            <path d="M142.5 97H145.5V98H142.5V97Z" fill="#292933" />
            <path d="M143.5 96H144.5V99H143.5V96Z" fill="#292933" />
            <path d="M142.5 67H145.5V68H142.5V67Z" fill="#292933" />
            <path d="M143.5 66H144.5V69H143.5V66Z" fill="#292933" />
            <path d="M142.5 37H145.5V38H142.5V37Z" fill="#292933" />
            <path d="M143.5 36H144.5V39H143.5V36Z" fill="#292933" />
            <path d="M127.5 157H130.5V158H127.5V157Z" fill="#292933" />
            <path d="M128.5 156H129.5V159H128.5V156Z" fill="#292933" />
            <path d="M127.5 127H130.5V128H127.5V127Z" fill="#292933" />
            <path d="M128.5 126H129.5V129H128.5V126Z" fill="#292933" />
            <path d="M127.5 97H130.5V98H127.5V97Z" fill="#292933" />
            <path d="M128.5 96H129.5V99H128.5V96Z" fill="#292933" />
            <path d="M127.5 67H130.5V68H127.5V67Z" fill="#292933" />
            <path d="M128.5 66H129.5V69H128.5V66Z" fill="#292933" />
            <path d="M127.5 37H130.5V38H127.5V37Z" fill="#292933" />
            <path d="M128.5 36H129.5V39H128.5V36Z" fill="#292933" />
            <path d="M112.5 157H115.5V158H112.5V157Z" fill="#292933" />
            <path d="M113.5 156H114.5V159H113.5V156Z" fill="#292933" />
            <path d="M112.5 127H115.5V128H112.5V127Z" fill="#292933" />
            <path d="M113.5 126H114.5V129H113.5V126Z" fill="#292933" />
            <path d="M112.5 97H115.5V98H112.5V97Z" fill="#292933" />
            <path d="M113.5 96H114.5V99H113.5V96Z" fill="#292933" />
            <path d="M112.5 67H115.5V68H112.5V67Z" fill="#292933" />
            <path d="M113.5 66H114.5V69H113.5V66Z" fill="#292933" />
            <path d="M112.5 37H115.5V38H112.5V37Z" fill="#292933" />
            <path d="M113.5 36H114.5V39H113.5V36Z" fill="#292933" />
            <path d="M97.5 157H100.5V158H97.5V157Z" fill="#292933" />
            <path d="M98.5 156H99.5V159H98.5V156Z" fill="#292933" />
            <path d="M97.5 127H100.5V128H97.5V127Z" fill="#292933" />
            <path d="M98.5 126H99.5V129H98.5V126Z" fill="#292933" />
            <path d="M97.5 97H100.5V98H97.5V97Z" fill="#292933" />
            <path d="M98.5 96H99.5V99H98.5V96Z" fill="#292933" />
            <path d="M97.5 67H100.5V68H97.5V67Z" fill="#292933" />
            <path d="M98.5 66H99.5V69H98.5V66Z" fill="#292933" />
            <path d="M97.5 37H100.5V38H97.5V37Z" fill="#292933" />
            <path d="M98.5 36H99.5V39H98.5V36Z" fill="#292933" />
            <path d="M82.5 157H85.5V158H82.5V157Z" fill="#292933" />
            <path d="M83.5 156H84.5V159H83.5V156Z" fill="#292933" />
            <path d="M82.5 127H85.5V128H82.5V127Z" fill="#292933" />
            <path d="M83.5 126H84.5V129H83.5V126Z" fill="#292933" />
            <path d="M82.5 97H85.5V98H82.5V97Z" fill="#292933" />
            <path d="M83.5 96H84.5V99H83.5V96Z" fill="#292933" />
            <path d="M82.5 67H85.5V68H82.5V67Z" fill="#292933" />
            <path d="M83.5 66H84.5V69H83.5V66Z" fill="#292933" />
            <path d="M82.5 37H85.5V38H82.5V37Z" fill="#292933" />
            <path d="M83.5 36H84.5V39H83.5V36Z" fill="#292933" />
            <path d="M67.5 157H70.5V158H67.5V157Z" fill="#292933" />
            <path d="M68.5 156H69.5V159H68.5V156Z" fill="#292933" />
            <path d="M67.5 127H70.5V128H67.5V127Z" fill="#292933" />
            <path d="M68.5 126H69.5V129H68.5V126Z" fill="#292933" />
            <path d="M67.5 97H70.5V98H67.5V97Z" fill="#292933" />
            <path d="M68.5 96H69.5V99H68.5V96Z" fill="#292933" />
            <path d="M67.5 67H70.5V68H67.5V67Z" fill="#292933" />
            <path d="M68.5 66H69.5V69H68.5V66Z" fill="#292933" />
            <path d="M67.5 37H70.5V38H67.5V37Z" fill="#292933" />
            <path d="M68.5 36H69.5V39H68.5V36Z" fill="#292933" />
            <path d="M52.5 157H55.5V158H52.5V157Z" fill="#292933" />
            <path d="M53.5 156H54.5V159H53.5V156Z" fill="#292933" />
            <path d="M52.5 127H55.5V128H52.5V127Z" fill="#292933" />
            <path d="M53.5 126H54.5V129H53.5V126Z" fill="#292933" />
            <path d="M52.5 97H55.5V98H52.5V97Z" fill="#292933" />
            <path d="M53.5 96H54.5V99H53.5V96Z" fill="#292933" />
            <path d="M52.5 67H55.5V68H52.5V67Z" fill="#292933" />
            <path d="M53.5 66H54.5V69H53.5V66Z" fill="#292933" />
            <path d="M52.5 37H55.5V38H52.5V37Z" fill="#292933" />
            <path d="M53.5 36H54.5V39H53.5V36Z" fill="#292933" />
            <path d="M37.5 157H40.5V158H37.5V157Z" fill="#292933" />
            <path d="M38.5 156H39.5V159H38.5V156Z" fill="#292933" />
            <path d="M37.5 127H40.5V128H37.5V127Z" fill="#292933" />
            <path d="M38.5 126H39.5V129H38.5V126Z" fill="#292933" />
            <path d="M37.5 97H40.5V98H37.5V97Z" fill="#292933" />
            <path d="M38.5 96H39.5V99H38.5V96Z" fill="#292933" />
            <path d="M37.5 67H40.5V68H37.5V67Z" fill="#292933" />
            <path d="M38.5 66H39.5V69H38.5V66Z" fill="#292933" />
            <path d="M37.5 37H40.5V38H37.5V37Z" fill="#292933" />
            <path d="M38.5 36H39.5V39H38.5V36Z" fill="#292933" />
            <path d="M22.5 157H25.5V158H22.5V157Z" fill="#292933" />
            <path d="M23.5 156H24.5V159H23.5V156Z" fill="#292933" />
            <path d="M22.5 127H25.5V128H22.5V127Z" fill="#292933" />
            <path d="M23.5 126H24.5V129H23.5V126Z" fill="#292933" />
            <path d="M22.5 97H25.5V98H22.5V97Z" fill="#292933" />
            <path d="M23.5 96H24.5V99H23.5V96Z" fill="#292933" />
            <path d="M22.5 67H25.5V68H22.5V67Z" fill="#292933" />
            <path d="M23.5 66H24.5V69H23.5V66Z" fill="#292933" />
            <path d="M22.5 37H25.5V38H22.5V37Z" fill="#292933" />
            <path d="M23.5 36H24.5V39H23.5V36Z" fill="#292933" />
            <path d="M7.5 157H10.5V158H7.5V157Z" fill="#292933" />
            <path d="M8.5 156H9.5V159H8.5V156Z" fill="#292933" />
            <path d="M7.5 127H10.5V128H7.5V127Z" fill="#292933" />
            <path d="M8.5 126H9.5V129H8.5V126Z" fill="#292933" />
            <path d="M7.5 97H10.5V98H7.5V97Z" fill="#292933" />
            <path d="M8.5 96H9.5V99H8.5V96Z" fill="#292933" />
            <path d="M7.5 67H10.5V68H7.5V67Z" fill="#292933" />
            <path d="M8.5 66H9.5V69H8.5V66Z" fill="#292933" />
            <path d="M7.5 37H10.5V38H7.5V37Z" fill="#292933" />
            <path d="M8.5 36H9.5V39H8.5V36Z" fill="#292933" />
            <g filter="url(#filter1_d_5956_77314)">
              <path
                d="M40 60C40 53.3726 45.3726 48 52 48H228C234.627 48 240 53.3726 240 60V96C240 102.627 234.627 108 228 108H52C45.3726 108 40 102.627 40 96V60Z"
                fill="#23232B"
              />
              <path
                d="M78.6667 90H77.3333L78.6667 80.6667H74C73.2267 80.6667 73.24 80.24 73.4933 79.7867C73.7467 79.3333 73.56 79.68 73.5867 79.6267C75.3067 76.5867 77.8933 72.0533 81.3333 66H82.6667L81.3333 75.3333H86C86.6533 75.3333 86.7467 75.7733 86.6267 76.0133L86.5333 76.2133C81.28 85.4 78.6667 90 78.6667 90Z"
                fill="#525266"
              />
              <path
                d="M99.3594 84L96.3359 72.7266H98.4297L100.391 81.2344H100.43L102.688 72.7266H104.516L106.773 81.2344H106.812L108.773 72.7266H110.867L107.844 84H105.898L103.625 75.9141H103.578L101.305 84H99.3594ZM114.758 84.1641C112.32 84.1641 110.75 82.5391 110.75 79.8594V79.8438C110.75 77.1875 112.344 75.5469 114.75 75.5469C117.164 75.5469 118.766 77.1719 118.766 79.8438V79.8594C118.766 82.5469 117.188 84.1641 114.758 84.1641ZM114.766 82.5938C115.992 82.5938 116.781 81.5938 116.781 79.8594V79.8438C116.781 78.1172 115.984 77.125 114.75 77.125C113.539 77.125 112.734 78.125 112.734 79.8438V79.8594C112.734 81.6016 113.523 82.5938 114.766 82.5938ZM120.016 84V75.7188H121.961V77.1484H122C122.258 76.1484 122.945 75.5469 123.898 75.5469C124.141 75.5469 124.367 75.5859 124.516 75.625V77.3828C124.352 77.3203 124.055 77.2734 123.727 77.2734C122.625 77.2734 121.961 77.9688 121.961 79.1953V84H120.016ZM125.602 84V72.7266H127.547V79.1562H127.586L130.68 75.7188H132.93L129.648 79.2812L133.062 84H130.82L128.203 80.4375L127.547 81.125V84H125.602ZM134.352 84V77.2188H133.219V75.7188H134.352V74.9297C134.352 73.3125 135.117 72.5625 136.914 72.5625C137.297 72.5625 137.711 72.5938 137.953 72.6406V74C137.797 73.9766 137.578 73.9609 137.367 73.9609C136.609 73.9609 136.258 74.3125 136.258 74.9844V75.7188H137.922V77.2188H136.297V84H134.352ZM139.258 84V72.7266H141.203V84H139.258ZM146.523 84.1641C144.086 84.1641 142.516 82.5391 142.516 79.8594V79.8438C142.516 77.1875 144.109 75.5469 146.516 75.5469C148.93 75.5469 150.531 77.1719 150.531 79.8438V79.8594C150.531 82.5469 148.953 84.1641 146.523 84.1641ZM146.531 82.5938C147.758 82.5938 148.547 81.5938 148.547 79.8594V79.8438C148.547 78.1172 147.75 77.125 146.516 77.125C145.305 77.125 144.5 78.125 144.5 79.8438V79.8594C144.5 81.6016 145.289 82.5938 146.531 82.5938ZM153.352 84L151.109 75.7188H153.062L154.461 82.0781H154.5L156.117 75.7188H157.984L159.602 82.0781H159.648L161.047 75.7188H162.969L160.727 84H158.68L157.047 77.9453H157.008L155.383 84H153.352ZM170.219 84.1641C168.484 84.1641 167.664 83.4609 167.664 81.7578V77.2188H166.492V75.7188H167.664V73.6172H169.641V75.7188H171.18V77.2188H169.641V81.5938C169.641 82.4062 170 82.6641 170.711 82.6641C170.898 82.6641 171.047 82.6406 171.18 82.6328V84.0938C170.953 84.125 170.609 84.1641 170.219 84.1641ZM172.516 84V75.7188H174.461V77.1484H174.5C174.758 76.1484 175.445 75.5469 176.398 75.5469C176.641 75.5469 176.867 75.5859 177.016 75.625V77.3828C176.852 77.3203 176.555 77.2734 176.227 77.2734C175.125 77.2734 174.461 77.9688 174.461 79.1953V84H172.516ZM179.047 74.5312C178.438 74.5312 177.961 74.0469 177.961 73.4688C177.961 72.875 178.438 72.3984 179.047 72.3984C179.656 72.3984 180.125 72.875 180.125 73.4688C180.125 74.0469 179.656 74.5312 179.047 74.5312ZM178.07 84V75.7188H180.016V84H178.07ZM185.406 86.8984C183.211 86.8984 181.828 85.8984 181.594 84.6016L181.578 84.5312H183.492L183.516 84.5938C183.727 85.0703 184.391 85.4297 185.406 85.4297C186.672 85.4297 187.367 84.7578 187.367 83.7031V82.5078H187.328C186.867 83.3906 185.93 83.9531 184.742 83.9531C182.664 83.9531 181.328 82.3594 181.328 79.7812V79.7734C181.328 77.1562 182.68 75.5469 184.773 75.5469C185.945 75.5469 186.852 76.1719 187.32 77.125H187.367V75.7188H189.312V83.7656C189.312 85.6406 187.805 86.8984 185.406 86.8984ZM185.352 82.4531C186.562 82.4531 187.375 81.4297 187.375 79.8203V79.8125C187.375 78.2109 186.555 77.1875 185.352 77.1875C184.102 77.1875 183.312 78.1953 183.312 79.8047V79.8125C183.312 81.4453 184.102 82.4531 185.352 82.4531ZM194.641 86.8984C192.445 86.8984 191.062 85.8984 190.828 84.6016L190.812 84.5312H192.727L192.75 84.5938C192.961 85.0703 193.625 85.4297 194.641 85.4297C195.906 85.4297 196.602 84.7578 196.602 83.7031V82.5078H196.562C196.102 83.3906 195.164 83.9531 193.977 83.9531C191.898 83.9531 190.562 82.3594 190.562 79.7812V79.7734C190.562 77.1562 191.914 75.5469 194.008 75.5469C195.18 75.5469 196.086 76.1719 196.555 77.125H196.602V75.7188H198.547V83.7656C198.547 85.6406 197.039 86.8984 194.641 86.8984ZM194.586 82.4531C195.797 82.4531 196.609 81.4297 196.609 79.8203V79.8125C196.609 78.2109 195.789 77.1875 194.586 77.1875C193.336 77.1875 192.547 78.1953 192.547 79.8047V79.8125C192.547 81.4453 193.336 82.4531 194.586 82.4531ZM203.781 84.1641C201.297 84.1641 199.797 82.5156 199.797 79.8828V79.875C199.797 77.2656 201.32 75.5469 203.688 75.5469C206.055 75.5469 207.523 77.2109 207.523 79.7109V80.3359H201.727C201.758 81.7891 202.555 82.6484 203.82 82.6484C204.789 82.6484 205.422 82.1328 205.609 81.5781L205.625 81.5234H207.445L207.422 81.6094C207.164 82.8828 205.945 84.1641 203.781 84.1641ZM203.711 77.0703C202.68 77.0703 201.906 77.7656 201.75 79.0391H205.633C205.492 77.7266 204.742 77.0703 203.711 77.0703ZM208.781 84V75.7188H210.727V77.1484H210.766C211.023 76.1484 211.711 75.5469 212.664 75.5469C212.906 75.5469 213.133 75.5859 213.281 75.625V77.3828C213.117 77.3203 212.82 77.2734 212.492 77.2734C211.391 77.2734 210.727 77.9688 210.727 79.1953V84H208.781Z"
                fill="#525266"
              />
            </g>
            <path d="M140 108V132" stroke="#525266" strokeDasharray="3 3" />
            <g filter="url(#filter2_d_5956_77314)">
              <path
                d="M40 144C40 137.373 45.3726 132 52 132H228C234.627 132 240 137.373 240 144V180C240 186.627 234.627 192 228 192H52C45.3726 192 40 186.627 40 180V144Z"
                fill="#23232B"
              />
              <path
                d="M90.6667 151.333H69.3333C67.8667 151.333 66.68 152.533 66.68 154L66.6667 170C66.6667 171.467 67.8667 172.667 69.3333 172.667H90.6667C92.1333 172.667 93.3333 171.467 93.3333 170V154C93.3333 152.533 92.1333 151.333 90.6667 151.333ZM90.6667 170H69.3333V156.667L80 163.333L90.6667 156.667V170ZM80 160.667L69.3333 154H90.6667L80 160.667Z"
                fill="#525266"
              />
              <path
                d="M104.992 168V156.727H112.289V158.422H107.008V161.461H112V163.094H107.008V166.305H112.289V168H104.992ZM113.844 168V159.719H115.789V161.047H115.828C116.18 160.141 117.031 159.547 118.125 159.547C119.281 159.547 120.117 160.156 120.422 161.219H120.469C120.867 160.188 121.852 159.547 123.047 159.547C124.68 159.547 125.75 160.656 125.75 162.312V168H123.805V162.797C123.805 161.773 123.273 161.188 122.32 161.188C121.383 161.188 120.742 161.883 120.742 162.883V168H118.852V162.695C118.852 161.766 118.289 161.188 117.383 161.188C116.445 161.188 115.789 161.922 115.789 162.93V168H113.844ZM129.758 168.141C128.102 168.141 126.984 167.117 126.984 165.641V165.625C126.984 164.156 128.125 163.273 130.133 163.148L132.297 163.016V162.445C132.297 161.609 131.75 161.102 130.766 161.102C129.844 161.102 129.281 161.531 129.156 162.141L129.141 162.211H127.336L127.344 162.117C127.461 160.648 128.734 159.547 130.836 159.547C132.906 159.547 134.242 160.641 134.242 162.305V168H132.297V166.727H132.25C131.773 167.594 130.852 168.141 129.758 168.141ZM128.922 165.562C128.922 166.242 129.484 166.656 130.336 166.656C131.453 166.656 132.297 165.914 132.297 164.93V164.305L130.406 164.422C129.445 164.484 128.922 164.898 128.922 165.555V165.562ZM136.844 158.531C136.234 158.531 135.758 158.047 135.758 157.469C135.758 156.875 136.234 156.398 136.844 156.398C137.453 156.398 137.922 156.875 137.922 157.469C137.922 158.047 137.453 158.531 136.844 158.531ZM135.867 168V159.719H137.812V168H135.867ZM139.523 168V156.727H141.469V168H139.523ZM149.562 168.164C147.391 168.164 146.148 167.133 145.977 165.594L145.969 165.523H147.883L147.898 165.594C148.047 166.305 148.586 166.727 149.57 166.727C150.516 166.727 151.086 166.344 151.086 165.734V165.727C151.086 165.227 150.797 164.945 149.938 164.75L148.562 164.445C146.977 164.094 146.18 163.32 146.18 162.094V162.086C146.18 160.57 147.5 159.547 149.5 159.547C151.562 159.547 152.766 160.68 152.836 162.109L152.844 162.195H151.031L151.023 162.133C150.938 161.469 150.406 160.984 149.5 160.984C148.641 160.984 148.102 161.383 148.102 161.992V162C148.102 162.477 148.422 162.789 149.281 162.984L150.664 163.289C152.375 163.672 153.039 164.344 153.039 165.547V165.555C153.039 167.117 151.594 168.164 149.562 168.164ZM157.359 168.164C155.625 168.164 154.805 167.461 154.805 165.758V161.219H153.633V159.719H154.805V157.617H156.781V159.719H158.32V161.219H156.781V165.594C156.781 166.406 157.141 166.664 157.852 166.664C158.039 166.664 158.188 166.641 158.32 166.633V168.094C158.094 168.125 157.75 168.164 157.359 168.164ZM163.141 168.164C160.656 168.164 159.156 166.516 159.156 163.883V163.875C159.156 161.266 160.68 159.547 163.047 159.547C165.414 159.547 166.883 161.211 166.883 163.711V164.336H161.086C161.117 165.789 161.914 166.648 163.18 166.648C164.148 166.648 164.781 166.133 164.969 165.578L164.984 165.523H166.805L166.781 165.609C166.523 166.883 165.305 168.164 163.141 168.164ZM163.07 161.07C162.039 161.07 161.266 161.766 161.109 163.039H164.992C164.852 161.727 164.102 161.07 163.07 161.07ZM168.141 170.734V159.719H170.086V161.148H170.125C170.602 160.156 171.508 159.547 172.695 159.547C174.797 159.547 176.125 161.188 176.125 163.859V163.867C176.125 166.523 174.797 168.164 172.719 168.164C171.539 168.164 170.594 167.57 170.125 166.602H170.086V170.734H168.141ZM172.117 166.523C173.359 166.523 174.141 165.5 174.141 163.867V163.859C174.141 162.203 173.359 161.188 172.117 161.188C170.914 161.188 170.07 162.234 170.07 163.859V163.867C170.07 165.484 170.914 166.523 172.117 166.523Z"
                fill="#525266"
              />
            </g>
          </g>
        </g>
        <path
          d="M0 12C0 5.37258 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V168C280 174.627 274.627 180 268 180H12C5.37259 180 0 174.627 0 168V12Z"
          fill="url(#paint0_linear_5956_77314)"
        />
      </g>
      <defs>
        <filter
          id="filter0_d_5956_77314"
          x="-20"
          y="-15"
          width="320"
          height="312"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_77314" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_77314" result="shape" />
        </filter>
        <filter
          id="filter1_d_5956_77314"
          x="20"
          y="33"
          width="240"
          height="100"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_77314" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_77314" result="shape" />
        </filter>
        <filter
          id="filter2_d_5956_77314"
          x="20"
          y="117"
          width="240"
          height="100"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_77314" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_77314" result="shape" />
        </filter>
        <linearGradient
          id="paint0_linear_5956_77314"
          x1="0"
          y1="0"
          x2="163.744"
          y2="254.731"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#1E1E26" stopOpacity="0" />
          <stop offset="1" stopColor="#1E1E26" />
        </linearGradient>
      </defs>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useColorScheme } from '@novu/design-system';
export const Studio = () => {
const { colorScheme } = useColorScheme();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/GetStartedPageV2/ide.tsx
Tamaño: 123175 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useColorScheme } from '@novu/design-system';

export const Ide = () => {
  const { colorScheme } = useColorScheme();

  if (colorScheme === 'light') {
    return (
      <svg xmlns="http://www.w3.org/2000/svg" width="280" height="180" viewBox="0 0 280 180" fill="none">
        <g clipPath="url(#clip0_5956_42804)">
          <mask
            id="mask0_5956_42804"
            style={{
              maskType: 'luminance',
            }}
            maskUnits="userSpaceOnUse"
            x="0"
            y="0"
            width="280"
            height="180"
          >
            <path
              d="M0 12C0 5.37258 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V168C280 174.627 274.627 180 268 180H12C5.37259 180 0 174.627 0 168V12Z"
              fill="white"
            />
          </mask>
          <g mask="url(#mask0_5956_42804)">
            <mask
              id="mask1_5956_42804"
              style={{
                maskType: 'luminance',
              }}
              maskUnits="userSpaceOnUse"
              x="0"
              y="0"
              width="280"
              height="248"
            >
              <path
                d="M0 12C0 5.37259 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V236C280 242.627 274.627 248 268 248H12C5.37259 248 0 242.627 0 236V12Z"
                fill="white"
              />
            </mask>
            <g mask="url(#mask1_5956_42804)">
              <mask
                id="mask2_5956_42804"
                style={{
                  maskType: 'luminance',
                }}
                maskUnits="userSpaceOnUse"
                x="0"
                y="0"
                width="280"
                height="248"
              >
                <path
                  d="M0 8.00001C0 3.58173 3.58172 0 8 0H272C276.418 0 280 3.58172 280 8V248H0V8.00001Z"
                  fill="white"
                />
              </mask>
              <g mask="url(#mask2_5956_42804)">
                <path
                  d="M0 8.00001C0 3.58173 3.58172 0 8 0H272C276.418 0 280 3.58172 280 8V248H0V8.00001Z"
                  fill="white"
                />
                <path d="M16 10L10.6667 14V22H14V17.3333H18V22H21.3333V14L16 10Z" fill="#A1A1B2" />
                <path
                  d="M31.9443 21V17.1104L28.4854 11.1357H30.4131L32.7646 15.3672H32.8809L35.2324 11.1357H37.1602L33.7012 17.1104V21H31.9443ZM40.6465 21.1504C38.4043 21.1504 37.0508 19.6875 37.0508 17.2676V17.2539C37.0508 14.8545 38.4248 13.3848 40.6465 13.3848C42.875 13.3848 44.2422 14.8477 44.2422 17.2539V17.2676C44.2422 19.6875 42.8818 21.1504 40.6465 21.1504ZM40.6465 19.7695C41.8291 19.7695 42.499 18.8467 42.499 17.2744V17.2607C42.499 15.6885 41.8223 14.7588 40.6465 14.7588C39.4639 14.7588 38.7871 15.6885 38.7871 17.2607V17.2744C38.7871 18.8467 39.4639 19.7695 40.6465 19.7695ZM48.4258 21.1504C46.7441 21.1504 45.8828 20.1387 45.8828 18.3613V13.5283H47.585V17.9717C47.585 19.127 48.0156 19.7148 49.041 19.7148C50.1416 19.7148 50.7295 19.0039 50.7295 17.8828V13.5283H52.4316V21H50.7295V19.8652H50.6133C50.2646 20.665 49.5059 21.1504 48.4258 21.1504ZM54.5098 21V13.5283H56.2119V14.6768H56.3281C56.5811 13.877 57.2646 13.4053 58.249 13.4053C58.5088 13.4053 58.7754 13.4395 58.9395 13.4873V15.0117C58.666 14.957 58.3857 14.916 58.0918 14.916C56.957 14.916 56.2119 15.5928 56.2119 16.6592V21H54.5098ZM64.1348 21V10.6367H65.8369V21H64.1348ZM71.2168 21.1504C68.9746 21.1504 67.6211 19.6875 67.6211 17.2676V17.2539C67.6211 14.8545 68.9951 13.3848 71.2168 13.3848C73.4453 13.3848 74.8125 14.8477 74.8125 17.2539V17.2676C74.8125 19.6875 73.4521 21.1504 71.2168 21.1504ZM71.2168 19.7695C72.3994 19.7695 73.0693 18.8467 73.0693 17.2744V17.2607C73.0693 15.6885 72.3926 14.7588 71.2168 14.7588C70.0342 14.7588 69.3574 15.6885 69.3574 17.2607V17.2744C69.3574 18.8467 70.0342 19.7695 71.2168 19.7695ZM79.7275 21.1504C77.4785 21.1504 76.1523 19.6943 76.1523 17.2539V17.2402C76.1523 14.8271 77.4717 13.3848 79.7207 13.3848C81.6416 13.3848 82.79 14.4512 82.9814 15.9961V16.0234H81.375L81.3682 16.0029C81.2109 15.2783 80.6572 14.7588 79.7275 14.7588C78.5654 14.7588 77.8818 15.6748 77.8818 17.2402V17.2539C77.8818 18.8398 78.5723 19.7695 79.7275 19.7695C80.6094 19.7695 81.1494 19.3662 81.3613 18.5801L81.375 18.5527L82.9814 18.5459L82.9678 18.6006C82.7217 20.1318 81.6211 21.1504 79.7275 21.1504ZM86.6387 21.123C85.2168 21.123 84.1846 20.248 84.1846 18.8877V18.874C84.1846 17.541 85.2031 16.7617 87.0215 16.6523L88.9424 16.5361V15.8936C88.9424 15.1484 88.457 14.7383 87.541 14.7383C86.7617 14.7383 86.2559 15.0186 86.085 15.5107L86.0781 15.5381H84.4717L84.4785 15.4766C84.6426 14.2188 85.8457 13.3848 87.623 13.3848C89.5439 13.3848 90.624 14.3145 90.624 15.8936V21H88.9424V19.9746H88.8262C88.416 20.6992 87.623 21.123 86.6387 21.123ZM85.8662 18.8057C85.8662 19.4414 86.4062 19.8174 87.1582 19.8174C88.1836 19.8174 88.9424 19.1475 88.9424 18.2588V17.6572L87.2607 17.7666C86.3105 17.8281 85.8662 18.1768 85.8662 18.792V18.8057ZM92.7363 21V10.6367H94.4385V21H92.7363ZM100.502 21V11.1357H102.266V21H100.502ZM104.699 21V11.1357H108.397C111.33 11.1357 113.039 12.9268 113.039 16.0166V16.0303C113.039 19.1885 111.351 21 108.397 21H104.699ZM106.463 19.5166H108.165C110.127 19.5166 111.241 18.2725 111.241 16.0576V16.0439C111.241 13.877 110.1 12.6191 108.165 12.6191H106.463V19.5166ZM115.062 21V11.1357H121.447V12.6191H116.826V15.292H121.194V16.6934H116.826V19.5166H121.447V21H115.062Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M266.667 8.66675H258.667C257.933 8.66675 257.333 9.26675 257.333 10.0001V19.3334H258.667V10.0001H266.667V8.66675ZM268.667 11.3334H261.333C260.6 11.3334 260 11.9334 260 12.6667V22.0001C260 22.7334 260.6 23.3334 261.333 23.3334H268.667C269.4 23.3334 270 22.7334 270 22.0001V12.6667C270 11.9334 269.4 11.3334 268.667 11.3334ZM268.667 22.0001H261.333V12.6667H268.667V22.0001Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M21.7256 51H14.8486V49.9404H17.7607V42.5029H17.6514L14.8281 44.3281V43.043L17.7676 41.1357H18.9502V49.9404H21.7256V51Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M14.8555 63.9111C14.8555 62.1748 16.1406 60.9307 17.9385 60.9307C19.75 60.9307 20.9941 62.0518 20.9941 63.6992C20.9941 64.7246 20.5293 65.5449 18.957 67.2607L16.6328 69.79V69.9062H21.1514V71H14.9102V70.166L18.2461 66.4541C19.4971 65.0527 19.7979 64.5264 19.7979 63.7471C19.7979 62.6875 19.0527 61.9902 17.9043 61.9902C16.7695 61.9902 16.0176 62.749 16.0176 63.9111V63.9521H14.8555V63.9111Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M16.7969 86.4268V85.415H17.8701C18.9775 85.415 19.75 84.6904 19.75 83.6582C19.75 82.6533 19.0117 81.9902 17.8975 81.9902C16.79 81.9902 16.0518 82.6396 15.9561 83.6992H14.8008C14.917 81.9902 16.1201 80.9307 17.9453 80.9307C19.709 80.9307 20.9668 81.9902 20.9668 83.4873C20.9668 84.6768 20.3447 85.5244 19.2852 85.7842V85.8936C20.5977 86.0645 21.377 86.9873 21.377 88.334C21.377 90.0088 19.9688 91.2051 18 91.2051C16.0518 91.2051 14.6982 90.084 14.6094 88.3818H15.751C15.8604 89.4346 16.7354 90.1182 17.9658 90.1182C19.3193 90.1182 20.1602 89.4209 20.1602 88.3066C20.1602 87.1582 19.292 86.4268 17.9248 86.4268H16.7969Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M19.1553 111V108.915H14.6572V107.938L18.0068 101.136H19.2373L15.9355 107.78V107.869H19.1689V105.053H20.2627V107.855H21.7666V108.915H20.2559V111H19.1553Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M17.918 131.198C16.0791 131.198 14.7803 130.063 14.6777 128.368H15.8398C15.9492 129.4 16.8311 130.111 17.9863 130.111C19.2578 130.111 20.1055 129.216 20.1055 127.876C20.1055 126.522 19.251 125.606 17.9863 125.606C17.1045 125.606 16.373 126.01 15.9834 126.707H14.8418L15.3408 121.136H20.7344V122.223H16.291L16.0176 125.442H16.127C16.6123 124.854 17.3164 124.547 18.1846 124.547C20.0098 124.547 21.2812 125.907 21.2812 127.849C21.2812 129.845 19.9209 131.198 17.918 131.198Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M21.3838 147.835C21.3838 149.79 19.9756 151.205 18.0205 151.205C16.0791 151.205 14.6777 149.797 14.6777 147.835C14.6777 146.68 15.0674 145.634 16.0107 144.26C16.0996 144.109 18.1504 141.238 18.2188 141.136H19.6064L16.9131 144.834C16.6123 145.258 16.6396 145.23 16.5918 145.34L16.6943 145.395C16.9883 144.998 17.6992 144.704 18.3281 144.704C20.085 144.704 21.3838 146.037 21.3838 147.835ZM18.0273 150.132C19.2715 150.132 20.2148 149.161 20.2148 147.896C20.2148 146.625 19.2715 145.654 18.0273 145.654C16.79 145.654 15.8467 146.625 15.8467 147.896C15.8467 149.161 16.79 150.132 18.0273 150.132Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M15.6348 171L20.1123 162.305V162.216H14.7598V161.136H21.3428V162.25L16.9199 171H15.6348Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M39.5752 51.1299C38.1602 51.1299 37.2168 50.2412 37.2168 48.8945C37.2168 47.582 38.1602 46.8027 39.8486 46.7139L41.8857 46.6113V45.9414C41.8857 45.0117 41.3184 44.499 40.2861 44.499C39.4316 44.499 38.8301 44.8613 38.6387 45.4971H37.4971C37.6338 44.3076 38.7822 43.4941 40.2998 43.4941C42.043 43.4941 43.041 44.3828 43.041 45.9277V51.0068H41.9336V49.8926H41.8174C41.4619 50.6855 40.6553 51.1299 39.5752 51.1299ZM39.9102 50.1113C41.0312 50.1113 41.8857 49.3662 41.8857 48.375V47.5L39.9785 47.5889C38.9395 47.6367 38.3926 48.0811 38.3926 48.8535C38.3926 49.6328 38.9736 50.1113 39.9102 50.1113ZM52.9873 43.583L51.3945 51H50.2803L49.0225 45.2168H48.9404L47.6826 51H46.5684L44.9756 43.583H46.1104L47.1152 49.5303H47.2383L48.4346 43.5898H49.5283L50.7246 49.5303H50.8477L51.8525 43.583H52.9873ZM56.8838 51.1299C55.4688 51.1299 54.5254 50.2412 54.5254 48.8945C54.5254 47.582 55.4688 46.8027 57.1572 46.7139L59.1943 46.6113V45.9414C59.1943 45.0117 58.627 44.499 57.5947 44.499C56.7402 44.499 56.1387 44.8613 55.9473 45.4971H54.8057C54.9424 44.3076 56.0908 43.4941 57.6084 43.4941C59.3516 43.4941 60.3496 44.3828 60.3496 45.9277V51.0068H59.2422V49.8926H59.126C58.7705 50.6855 57.9639 51.1299 56.8838 51.1299ZM57.2188 50.1113C58.3398 50.1113 59.1943 49.3662 59.1943 48.375V47.5L57.2871 47.5889C56.248 47.6367 55.7012 48.0811 55.7012 48.8535C55.7012 49.6328 56.2822 50.1113 57.2188 50.1113ZM66.4199 41.7646C65.873 41.7646 65.4561 41.3545 65.4561 40.8076C65.4561 40.2676 65.873 39.8574 66.4199 39.8574C66.9668 39.8574 67.3838 40.2676 67.3838 40.8076C67.3838 41.3545 66.9668 41.7646 66.4199 41.7646ZM69.5303 51H63.3848V50.0361H65.9277V44.5469H63.4053V43.583H67.0762V50.0361H69.5303V51ZM73.6797 41.5938H74.8281V43.6035H77.8359V44.5947H74.8418V48.7783C74.8418 49.585 75.4092 50.0225 76.4551 50.0225C76.8721 50.0225 77.6172 50.002 77.8154 49.9814V50.9658C77.6309 51 76.7285 51.0342 76.373 51.0342C74.5342 51.0342 73.6797 50.3369 73.6797 48.792V44.5947H71.7041V43.6035H73.6797V41.5938ZM89.5527 45.5859C89.5527 44.3008 90.6465 43.4395 92.2803 43.4395C93.8252 43.4395 94.8711 44.2119 95.0078 45.4492H93.8867C93.75 44.7998 93.1279 44.4033 92.2598 44.4033C91.3164 44.4033 90.708 44.8408 90.708 45.5176C90.708 46.085 91.0908 46.4062 92.0205 46.6113L93.0664 46.8506C94.5088 47.1787 95.165 47.8076 95.165 48.8809C95.165 50.248 94.0234 51.1367 92.2666 51.1367C90.585 51.1367 89.4707 50.3506 89.3408 49.0791H90.5234C90.6943 49.7627 91.3506 50.1592 92.3076 50.1592C93.3193 50.1592 93.9619 49.7012 93.9619 48.9902C93.9619 48.4023 93.5996 48.0879 92.6562 47.876L91.5557 47.623C90.2158 47.3154 89.5527 46.6387 89.5527 45.5859ZM99.6426 41.5938H100.791V43.6035H103.799V44.5947H100.805V48.7783C100.805 49.585 101.372 50.0225 102.418 50.0225C102.835 50.0225 103.58 50.002 103.778 49.9814V50.9658C103.594 51 102.691 51.0342 102.336 51.0342C100.497 51.0342 99.6426 50.3369 99.6426 48.792V44.5947H97.667V43.6035H99.6426V41.5938ZM111.564 49.0859H112.692C112.467 50.3096 111.291 51.1367 109.732 51.1367C107.695 51.1367 106.513 49.9131 106.513 47.8008V46.6865C106.513 44.7314 107.764 43.4463 109.65 43.4463C111.578 43.4463 112.713 44.7246 112.713 46.8711V47.5957H107.661V47.8965C107.661 49.2568 108.468 50.1318 109.732 50.1318C110.669 50.1318 111.359 49.7354 111.564 49.0859ZM109.644 44.4443C108.406 44.4443 107.661 45.292 107.661 46.7139H111.564C111.564 45.2988 110.84 44.4443 109.644 44.4443ZM118.681 43.46C120.396 43.46 121.518 44.6973 121.518 46.6045V47.9854C121.518 49.8857 120.396 51.123 118.681 51.123C117.607 51.123 116.821 50.665 116.5 49.8516H116.37V53.502H115.188V43.583H116.336V44.7178H116.459C116.849 43.8975 117.621 43.46 118.681 43.46ZM118.346 44.5264C117.122 44.5264 116.343 45.4014 116.343 46.7686V47.835C116.343 49.209 117.122 50.084 118.346 50.084C119.569 50.084 120.349 49.2021 120.349 47.835V46.7686C120.349 45.4014 119.569 44.5264 118.346 44.5264ZM126.87 51.041C126.193 51.041 125.633 50.4736 125.633 49.7764C125.633 49.0859 126.193 48.5186 126.87 48.5186C127.547 48.5186 128.107 49.0859 128.107 49.7764C128.107 50.4736 127.547 51.041 126.87 51.041ZM137.527 49.0859H138.655C138.43 50.3096 137.254 51.1367 135.695 51.1367C133.658 51.1367 132.476 49.9131 132.476 47.8008V46.6865C132.476 44.7314 133.727 43.4463 135.613 43.4463C137.541 43.4463 138.676 44.7246 138.676 46.8711V47.5957H133.624V47.8965C133.624 49.2568 134.431 50.1318 135.695 50.1318C136.632 50.1318 137.322 49.7354 137.527 49.0859ZM135.606 44.4443C134.369 44.4443 133.624 45.292 133.624 46.7139H137.527C137.527 45.2988 136.803 44.4443 135.606 44.4443ZM147.754 45.5381V51H146.708V45.8799C146.708 44.9775 146.38 44.5059 145.758 44.5059C145.108 44.5059 144.712 45.0732 144.712 45.9961V51H143.673V45.873C143.673 44.9775 143.345 44.5059 142.716 44.5059C142.06 44.5059 141.649 45.0732 141.649 45.9961V51H140.604V43.583H141.643V44.6289H141.766C141.95 43.8838 142.483 43.4463 143.181 43.4463C143.878 43.4463 144.37 43.877 144.527 44.6084H144.65C144.842 43.8975 145.437 43.4463 146.182 43.4463C147.214 43.4463 147.754 44.1641 147.754 45.5381ZM152.081 51.1299C150.666 51.1299 149.723 50.2412 149.723 48.8945C149.723 47.582 150.666 46.8027 152.354 46.7139L154.392 46.6113V45.9414C154.392 45.0117 153.824 44.499 152.792 44.499C151.938 44.499 151.336 44.8613 151.145 45.4971H150.003C150.14 44.3076 151.288 43.4941 152.806 43.4941C154.549 43.4941 155.547 44.3828 155.547 45.9277V51.0068H154.439V49.8926H154.323C153.968 50.6855 153.161 51.1299 152.081 51.1299ZM152.416 50.1113C153.537 50.1113 154.392 49.3662 154.392 48.375V47.5L152.484 47.5889C151.445 47.6367 150.898 48.0811 150.898 48.8535C150.898 49.6328 151.479 50.1113 152.416 50.1113ZM161.617 41.7646C161.07 41.7646 160.653 41.3545 160.653 40.8076C160.653 40.2676 161.07 39.8574 161.617 39.8574C162.164 39.8574 162.581 40.2676 162.581 40.8076C162.581 41.3545 162.164 41.7646 161.617 41.7646ZM164.728 51H158.582V50.0361H161.125V44.5469H158.603V43.583H162.273V50.0361H164.728V51ZM173.382 51H167.236V50.0361H169.772V41.6348H167.257V40.6709H170.935V50.0361H173.382V51ZM177.306 46.0645C177.306 43.7471 178.003 41.7305 179.363 40.1855H180.519C179.104 42.1748 178.509 43.918 178.509 46.0645C178.509 48.2109 179.104 49.9541 180.519 51.9434H179.363C178.003 50.3984 177.306 48.3887 177.306 46.0645ZM188.072 45.5859H186.828V41.1357H188.072V45.5859ZM193.404 45.5859C193.404 44.3008 194.498 43.4395 196.132 43.4395C197.677 43.4395 198.723 44.2119 198.859 45.4492H197.738C197.602 44.7998 196.979 44.4033 196.111 44.4033C195.168 44.4033 194.56 44.8408 194.56 45.5176C194.56 46.085 194.942 46.4062 195.872 46.6113L196.918 46.8506C198.36 47.1787 199.017 47.8076 199.017 48.8809C199.017 50.248 197.875 51.1367 196.118 51.1367C194.437 51.1367 193.322 50.3506 193.192 49.0791H194.375C194.546 49.7627 195.202 50.1592 196.159 50.1592C197.171 50.1592 197.813 49.7012 197.813 48.9902C197.813 48.4023 197.451 48.0879 196.508 47.876L195.407 47.623C194.067 47.3154 193.404 46.6387 193.404 45.5859ZM206.762 49.0859H207.89C207.664 50.3096 206.488 51.1367 204.93 51.1367C202.893 51.1367 201.71 49.9131 201.71 47.8008V46.6865C201.71 44.7314 202.961 43.4463 204.848 43.4463C206.775 43.4463 207.91 44.7246 207.91 46.8711V47.5957H202.858V47.8965C202.858 49.2568 203.665 50.1318 204.93 50.1318C205.866 50.1318 206.557 49.7354 206.762 49.0859ZM204.841 44.4443C203.604 44.4443 202.858 45.292 202.858 46.7139H206.762C206.762 45.2988 206.037 44.4443 204.841 44.4443ZM210.378 51V43.583H211.492V44.8887H211.588C211.984 43.9658 212.832 43.4463 213.96 43.4463C215.573 43.4463 216.448 44.4102 216.448 46.1875V51H215.286V46.4814C215.286 45.1416 214.739 44.5127 213.584 44.5127C212.36 44.5127 211.54 45.3672 211.54 46.6318V51H210.378ZM221.603 51.123C219.887 51.123 218.766 49.8857 218.766 47.9785V46.5977C218.766 44.6973 219.887 43.46 221.603 43.46C222.676 43.46 223.469 43.918 223.79 44.7314H223.913V40.6709H225.096V51H223.954V49.8652H223.824C223.441 50.6855 222.662 51.123 221.603 51.123ZM221.944 50.0635C223.161 50.0635 223.947 49.1885 223.947 47.8145V46.748C223.947 45.3809 223.161 44.5059 221.944 44.5059C220.721 44.5059 219.935 45.3809 219.935 46.748V47.8145C219.935 49.1816 220.721 50.0635 221.944 50.0635ZM234.338 47.165H227.105V46.085H234.338V47.165ZM241.379 49.0859H242.507C242.281 50.3096 241.105 51.1367 239.547 51.1367C237.51 51.1367 236.327 49.9131 236.327 47.8008V46.6865C236.327 44.7314 237.578 43.4463 239.465 43.4463C241.393 43.4463 242.527 44.7246 242.527 46.8711V47.5957H237.476V47.8965C237.476 49.2568 238.282 50.1318 239.547 50.1318C240.483 50.1318 241.174 49.7354 241.379 49.0859ZM239.458 44.4443C238.221 44.4443 237.476 45.292 237.476 46.7139H241.379C241.379 45.2988 240.654 44.4443 239.458 44.4443ZM251.605 45.5381V51H250.56V45.8799C250.56 44.9775 250.231 44.5059 249.609 44.5059C248.96 44.5059 248.563 45.0732 248.563 45.9961V51H247.524V45.873C247.524 44.9775 247.196 44.5059 246.567 44.5059C245.911 44.5059 245.501 45.0732 245.501 45.9961V51H244.455V43.583H245.494V44.6289H245.617C245.802 43.8838 246.335 43.4463 247.032 43.4463C247.729 43.4463 248.222 43.877 248.379 44.6084H248.502C248.693 43.8975 249.288 43.4463 250.033 43.4463C251.065 43.4463 251.605 44.1641 251.605 45.5381ZM253.916 51.041C253.39 51.041 253.103 50.6309 253.103 49.8789C253.103 49.127 253.39 48.71 253.916 48.71C254.449 48.71 254.736 49.127 254.736 49.8789C254.736 50.6309 254.449 51.041 253.916 51.041ZM256.685 51.041C256.158 51.041 255.864 50.6309 255.864 49.8789C255.864 49.127 256.158 48.71 256.685 48.71C257.211 48.71 257.505 49.127 257.505 49.8789C257.505 50.6309 257.211 51.041 256.685 51.041ZM259.453 51.041C258.92 51.041 258.633 50.6309 258.633 49.8789C258.633 49.127 258.92 48.71 259.453 48.71C259.979 48.71 260.267 49.127 260.267 49.8789C260.267 50.6309 259.979 51.041 259.453 51.041Z"
                  fill="#A1A1B2"
                />
                <g filter="url(#filter0_d_5956_42804)">
                  <path d="M44.5 56H43.5V76H44.5V56Z" fill="#A1A1B2" />
                </g>
                <path
                  d="M56.0332 67.6777V70.0703H58.3301V71H53.4014V70.0703H54.8984V64.5127H53.251V63.583H56.0195V65.4766H56.1699C56.4434 64.1025 57.3662 63.3916 58.7949 63.3916C59.2188 63.3916 59.6221 63.4531 59.8682 63.5557V64.8613C59.5264 64.7383 59.0479 64.6562 58.6445 64.6562C57.0039 64.6562 56.0332 65.791 56.0332 67.6777ZM66.9844 69.0859H68.1123C67.8867 70.3096 66.7109 71.1367 65.1523 71.1367C63.1152 71.1367 61.9326 69.9131 61.9326 67.8008V66.6865C61.9326 64.7314 63.1836 63.4463 65.0703 63.4463C66.998 63.4463 68.1328 64.7246 68.1328 66.8711V67.5957H63.0811V67.8965C63.0811 69.2568 63.8877 70.1318 65.1523 70.1318C66.0889 70.1318 66.7793 69.7354 66.9844 69.0859ZM65.0635 64.4443C63.8262 64.4443 63.0811 65.292 63.0811 66.7139H66.9844C66.9844 65.2988 66.2598 64.4443 65.0635 64.4443ZM72.3711 61.5938H73.5195V63.6035H76.5273V64.5947H73.5332V68.7783C73.5332 69.585 74.1006 70.0225 75.1465 70.0225C75.5635 70.0225 76.3086 70.002 76.5068 69.9814V70.9658C76.3223 71 75.4199 71.0342 75.0645 71.0342C73.2256 71.0342 72.3711 70.3369 72.3711 68.792V64.5947H70.3955V63.6035H72.3711V61.5938ZM85.3252 63.583V71H84.2109V69.6943H84.1152C83.7188 70.6172 82.8711 71.1367 81.7432 71.1367C80.1299 71.1367 79.2549 70.1729 79.2549 68.3955V63.583H80.417V68.1016C80.417 69.4414 80.9639 70.0703 82.1191 70.0703C83.3428 70.0703 84.1631 69.2158 84.1631 67.9512V63.583H85.3252ZM90.6504 67.6777V70.0703H92.9473V71H88.0186V70.0703H89.5156V64.5127H87.8682V63.583H90.6367V65.4766H90.7871C91.0605 64.1025 91.9834 63.3916 93.4121 63.3916C93.8359 63.3916 94.2393 63.4531 94.4854 63.5557V64.8613C94.1436 64.7383 93.665 64.6562 93.2617 64.6562C91.6211 64.6562 90.6504 65.791 90.6504 67.6777ZM96.5635 71V63.583H97.6777V64.8887H97.7734C98.1699 63.9658 99.0176 63.4463 100.146 63.4463C101.759 63.4463 102.634 64.4102 102.634 66.1875V71H101.472V66.4814C101.472 65.1416 100.925 64.5127 99.7695 64.5127C98.5459 64.5127 97.7256 65.3672 97.7256 66.6318V71H96.5635ZM119.573 71.9365H118.644C116.982 71.9365 116.456 71.4102 116.456 69.7217V68.1904C116.456 67.1377 115.841 66.5225 114.241 66.6865V65.4492C115.841 65.6133 116.456 65.0049 116.456 63.9453V62.4141C116.456 60.7256 116.982 60.1992 118.644 60.1992H119.573V61.1357H118.828C117.803 61.1357 117.604 61.375 117.604 62.5645V64.3896C117.604 65.3467 116.887 65.9824 115.499 66.0166V66.126C116.887 66.1533 117.604 66.7891 117.604 67.7461V69.5713C117.604 70.7607 117.803 71 118.828 71H119.573V71.9365Z"
                  fill="#A1A1B2"
                />
                <g filter="url(#filter1_d_5956_42804)">
                  <path d="M44.5 76H43.5V96H44.5V76Z" fill="#A1A1B2" />
                </g>
                <g filter="url(#filter2_d_5956_42804)">
                  <path d="M60.5 76H59.5V96H60.5V76Z" fill="#A1A1B2" />
                </g>
                <path
                  d="M69.627 85.5859C69.627 84.3008 70.7207 83.4395 72.3545 83.4395C73.8994 83.4395 74.9453 84.2119 75.082 85.4492H73.9609C73.8242 84.7998 73.2021 84.4033 72.334 84.4033C71.3906 84.4033 70.7822 84.8408 70.7822 85.5176C70.7822 86.085 71.165 86.4062 72.0947 86.6113L73.1406 86.8506C74.583 87.1787 75.2393 87.8076 75.2393 88.8809C75.2393 90.248 74.0977 91.1367 72.3408 91.1367C70.6592 91.1367 69.5449 90.3506 69.415 89.0791H70.5977C70.7686 89.7627 71.4248 90.1592 72.3818 90.1592C73.3936 90.1592 74.0361 89.7012 74.0361 88.9902C74.0361 88.4023 73.6738 88.0879 72.7305 87.876L71.6299 87.623C70.29 87.3154 69.627 86.6387 69.627 85.5859ZM84.0166 83.583V91H82.9023V89.6943H82.8066C82.4102 90.6172 81.5625 91.1367 80.4346 91.1367C78.8213 91.1367 77.9463 90.1729 77.9463 88.3955V83.583H79.1084V88.1016C79.1084 89.4414 79.6553 90.0703 80.8105 90.0703C82.0342 90.0703 82.8545 89.2158 82.8545 87.9512V83.583H84.0166ZM90.1006 91.123C89.041 91.123 88.2617 90.6855 87.8789 89.8652H87.749V91H86.6074V80.6709H87.79V84.7314H87.9131C88.2412 83.918 89.0273 83.46 90.1006 83.46C91.8164 83.46 92.9375 84.6973 92.9375 86.5977V87.9785C92.9375 89.8857 91.8164 91.123 90.1006 91.123ZM89.7588 90.0635C90.9893 90.0635 91.7686 89.1816 91.7686 87.8145V86.748C91.7686 85.3809 90.9893 84.5059 89.7588 84.5059C88.542 84.5059 87.7627 85.3809 87.7627 86.748V87.8145C87.7627 89.1885 88.542 90.0635 89.7588 90.0635ZM99.2676 81.7646C98.7207 81.7646 98.3037 81.3545 98.3037 80.8076C98.3037 80.2676 98.7207 79.8574 99.2676 79.8574C99.8145 79.8574 100.231 80.2676 100.231 80.8076C100.231 81.3545 99.8145 81.7646 99.2676 81.7646ZM99.9375 83.583V90.959C99.9375 92.5996 99.0967 93.249 97.0322 93.249C96.5195 93.249 95.7266 93.2354 95.2344 93.1943V92.1553C95.5898 92.1895 96.5469 92.21 96.998 92.21C98.3789 92.21 98.7959 91.8818 98.7959 90.8223V84.5469H95.4053V83.583H99.9375ZM108.947 89.0859H110.075C109.85 90.3096 108.674 91.1367 107.115 91.1367C105.078 91.1367 103.896 89.9131 103.896 87.8008V86.6865C103.896 84.7314 105.146 83.4463 107.033 83.4463C108.961 83.4463 110.096 84.7246 110.096 86.8711V87.5957H105.044V87.8965C105.044 89.2568 105.851 90.1318 107.115 90.1318C108.052 90.1318 108.742 89.7354 108.947 89.0859ZM107.026 84.4443C105.789 84.4443 105.044 85.292 105.044 86.7139H108.947C108.947 85.2988 108.223 84.4443 107.026 84.4443ZM118.688 85.8936H117.54C117.396 85.0254 116.672 84.4785 115.715 84.4785C114.423 84.4785 113.705 85.3604 113.705 86.9531V87.623C113.705 89.2158 114.423 90.0908 115.715 90.0908C116.672 90.0908 117.396 89.5508 117.54 88.7031H118.688C118.504 90.2139 117.376 91.1367 115.735 91.1367C113.719 91.1367 112.543 89.8994 112.543 87.7734V86.8027C112.543 84.6768 113.719 83.4395 115.735 83.4395C117.376 83.4395 118.497 84.3691 118.688 85.8936ZM122.988 81.5938H124.137V83.6035H127.145V84.5947H124.15V88.7783C124.15 89.585 124.718 90.0225 125.764 90.0225C126.181 90.0225 126.926 90.002 127.124 89.9814V90.9658C126.939 91 126.037 91.0342 125.682 91.0342C123.843 91.0342 122.988 90.3369 122.988 88.792V84.5947H121.013V83.6035H122.988V81.5938ZM132.907 85.791C132.23 85.791 131.67 85.2168 131.67 84.5264C131.67 83.8359 132.23 83.2617 132.907 83.2617C133.584 83.2617 134.145 83.8359 134.145 84.5264C134.145 85.2168 133.584 85.791 132.907 85.791ZM132.907 91.041C132.23 91.041 131.67 90.4736 131.67 89.7764C131.67 89.0859 132.23 88.5186 132.907 88.5186C133.584 88.5186 134.145 89.0859 134.145 89.7764C134.145 90.4736 133.584 91.041 132.907 91.041ZM150.838 85.5859H149.594V81.1357H150.838V85.5859ZM159.472 91H158.269V86.9326L154.98 81.1357H156.327L158.822 85.6475H158.918L161.413 81.1357H162.76L159.472 86.9326V91ZM167.524 91.1367C165.562 91.1367 164.312 89.8584 164.312 87.8555V86.7344C164.312 84.7314 165.562 83.4531 167.524 83.4531C169.486 83.4531 170.737 84.7314 170.737 86.7344V87.8555C170.737 89.8584 169.486 91.1367 167.524 91.1367ZM167.524 84.4785C166.253 84.4785 165.46 85.3809 165.46 86.8369V87.7461C165.46 89.209 166.253 90.1045 167.524 90.1045C168.796 90.1045 169.589 89.209 169.589 87.7461V86.8369C169.589 85.3809 168.796 84.4785 167.524 84.4785ZM179.214 83.583V91H178.1V89.6943H178.004C177.607 90.6172 176.76 91.1367 175.632 91.1367C174.019 91.1367 173.144 90.1729 173.144 88.3955V83.583H174.306V88.1016C174.306 89.4414 174.853 90.0703 176.008 90.0703C177.231 90.0703 178.052 89.2158 178.052 87.9512V83.583H179.214ZM193.193 87.6777V90.0703H195.49V91H190.562V90.0703H192.059V84.5127H190.411V83.583H193.18V85.4766H193.33C193.604 84.1025 194.526 83.3916 195.955 83.3916C196.379 83.3916 196.782 83.4531 197.028 83.5557V84.8613C196.687 84.7383 196.208 84.6562 195.805 84.6562C194.164 84.6562 193.193 85.791 193.193 87.6777ZM204.145 89.0859H205.272C205.047 90.3096 203.871 91.1367 202.312 91.1367C200.275 91.1367 199.093 89.9131 199.093 87.8008V86.6865C199.093 84.7314 200.344 83.4463 202.23 83.4463C204.158 83.4463 205.293 84.7246 205.293 86.8711V87.5957H200.241V87.8965C200.241 89.2568 201.048 90.1318 202.312 90.1318C203.249 90.1318 203.939 89.7354 204.145 89.0859ZM202.224 84.4443C200.986 84.4443 200.241 85.292 200.241 86.7139H204.145C204.145 85.2988 203.42 84.4443 202.224 84.4443ZM213.886 85.8936H212.737C212.594 85.0254 211.869 84.4785 210.912 84.4785C209.62 84.4785 208.902 85.3604 208.902 86.9531V87.623C208.902 89.2158 209.62 90.0908 210.912 90.0908C211.869 90.0908 212.594 89.5508 212.737 88.7031H213.886C213.701 90.2139 212.573 91.1367 210.933 91.1367C208.916 91.1367 207.74 89.8994 207.74 87.7734V86.8027C207.74 84.6768 208.916 83.4395 210.933 83.4395C212.573 83.4395 213.694 84.3691 213.886 85.8936ZM221.453 89.0859H222.581C222.355 90.3096 221.18 91.1367 219.621 91.1367C217.584 91.1367 216.401 89.9131 216.401 87.8008V86.6865C216.401 84.7314 217.652 83.4463 219.539 83.4463C221.467 83.4463 222.602 84.7246 222.602 86.8711V87.5957H217.55V87.8965C217.55 89.2568 218.356 90.1318 219.621 90.1318C220.558 90.1318 221.248 89.7354 221.453 89.0859ZM219.532 84.4443C218.295 84.4443 217.55 85.292 217.55 86.7139H221.453C221.453 85.2988 220.729 84.4443 219.532 84.4443ZM228.234 81.7646C227.688 81.7646 227.271 81.3545 227.271 80.8076C227.271 80.2676 227.688 79.8574 228.234 79.8574C228.781 79.8574 229.198 80.2676 229.198 80.8076C229.198 81.3545 228.781 81.7646 228.234 81.7646ZM231.345 91H225.199V90.0361H227.742V84.5469H225.22V83.583H228.891V90.0361H231.345V91ZM233.409 83.583H234.653L236.725 89.7559H236.813L238.871 83.583H240.108L237.401 91H236.123L233.409 83.583ZM247.416 89.0859H248.544C248.318 90.3096 247.143 91.1367 245.584 91.1367C243.547 91.1367 242.364 89.9131 242.364 87.8008V86.6865C242.364 84.7314 243.615 83.4463 245.502 83.4463C247.43 83.4463 248.564 84.7246 248.564 86.8711V87.5957H243.513V87.8965C243.513 89.2568 244.319 90.1318 245.584 90.1318C246.521 90.1318 247.211 89.7354 247.416 89.0859ZM245.495 84.4443C244.258 84.4443 243.513 85.292 243.513 86.7139H247.416C247.416 85.2988 246.691 84.4443 245.495 84.4443ZM251.299 91.041C250.772 91.041 250.485 90.6309 250.485 89.8789C250.485 89.127 250.772 88.71 251.299 88.71C251.832 88.71 252.119 89.127 252.119 89.8789C252.119 90.6309 251.832 91.041 251.299 91.041ZM254.067 91.041C253.541 91.041 253.247 90.6309 253.247 89.8789C253.247 89.127 253.541 88.71 254.067 88.71C254.594 88.71 254.888 89.127 254.888 89.8789C254.888 90.6309 254.594 91.041 254.067 91.041ZM256.836 91.041C256.303 91.041 256.016 90.6309 256.016 89.8789C256.016 89.127 256.303 88.71 256.836 88.71C257.362 88.71 257.649 89.127 257.649 89.8789C257.649 90.6309 257.362 91.041 256.836 91.041Z"
                  fill="#A1A1B2"
                />
                <g filter="url(#filter3_d_5956_42804)">
                  <path d="M44.5 96H43.5V116H44.5V96Z" fill="#A1A1B2" />
                </g>
                <g filter="url(#filter4_d_5956_42804)">
                  <path d="M60.5 96H59.5V116H60.5V96Z" fill="#A1A1B2" />
                </g>
                <g filter="url(#filter5_d_5956_42804)">
                  <path d="M76.5 96H75.5V116H76.5V96Z" fill="#A1A1B2" />
                </g>
                <path
                  d="M88.792 111.123C87.7324 111.123 86.9531 110.686 86.5703 109.865H86.4404V111H85.2988V100.671H86.4814V104.731H86.6045C86.9326 103.918 87.7188 103.46 88.792 103.46C90.5078 103.46 91.6289 104.697 91.6289 106.598V107.979C91.6289 109.886 90.5078 111.123 88.792 111.123ZM88.4502 110.063C89.6807 110.063 90.46 109.182 90.46 107.814V106.748C90.46 105.381 89.6807 104.506 88.4502 104.506C87.2334 104.506 86.4541 105.381 86.4541 106.748V107.814C86.4541 109.188 87.2334 110.063 88.4502 110.063ZM96.9814 111.137C95.0195 111.137 93.7686 109.858 93.7686 107.855V106.734C93.7686 104.731 95.0195 103.453 96.9814 103.453C98.9434 103.453 100.194 104.731 100.194 106.734V107.855C100.194 109.858 98.9434 111.137 96.9814 111.137ZM96.9814 104.479C95.71 104.479 94.917 105.381 94.917 106.837V107.746C94.917 109.209 95.71 110.104 96.9814 110.104C98.2529 110.104 99.0459 109.209 99.0459 107.746V106.837C99.0459 105.381 98.2529 104.479 96.9814 104.479ZM105.171 111.123C103.455 111.123 102.334 109.886 102.334 107.979V106.598C102.334 104.697 103.455 103.46 105.171 103.46C106.244 103.46 107.037 103.918 107.358 104.731H107.481V100.671H108.664V111H107.522V109.865H107.393C107.01 110.686 106.23 111.123 105.171 111.123ZM105.513 110.063C106.729 110.063 107.516 109.188 107.516 107.814V106.748C107.516 105.381 106.729 104.506 105.513 104.506C104.289 104.506 103.503 105.381 103.503 106.748V107.814C103.503 109.182 104.289 110.063 105.513 110.063ZM112.212 113.639C112.041 113.639 111.815 113.632 111.713 113.618V112.6C111.802 112.62 112.014 112.627 112.123 112.627C112.82 112.627 113.203 112.312 113.511 111.451L113.641 111.048L110.913 103.583H112.178L114.256 109.79H114.345L116.416 103.583H117.653L114.857 111.273C114.208 113.099 113.586 113.639 112.212 113.639ZM122.944 105.791C122.268 105.791 121.707 105.217 121.707 104.526C121.707 103.836 122.268 103.262 122.944 103.262C123.621 103.262 124.182 103.836 124.182 104.526C124.182 105.217 123.621 105.791 122.944 105.791ZM122.944 111.041C122.268 111.041 121.707 110.474 121.707 109.776C121.707 109.086 122.268 108.519 122.944 108.519C123.621 108.519 124.182 109.086 124.182 109.776C124.182 110.474 123.621 111.041 122.944 111.041ZM141.777 102.141H140.54L138.729 99.8232H140.144L141.777 102.141ZM151.847 103.959L147.144 106.563V106.687L151.847 109.291V110.597L145.968 107.131V106.119L151.847 102.653V103.959ZM154.52 111V100.671H155.641V104.896H155.736C156.126 103.973 156.98 103.453 158.115 103.453C159.729 103.453 160.604 104.424 160.604 106.194V111H159.441V106.488C159.441 105.155 158.895 104.52 157.732 104.52C156.509 104.52 155.682 105.374 155.682 106.639V111H154.52ZM164.951 101.594H166.1V103.604H169.107V104.595H166.113V108.778C166.113 109.585 166.681 110.022 167.727 110.022C168.144 110.022 168.889 110.002 169.087 109.981V110.966C168.902 111 168 111.034 167.645 111.034C165.806 111.034 164.951 110.337 164.951 108.792V104.595H162.976V103.604H164.951V101.594ZM178.445 105.538V111H177.399V105.88C177.399 104.978 177.071 104.506 176.449 104.506C175.8 104.506 175.403 105.073 175.403 105.996V111H174.364V105.873C174.364 104.978 174.036 104.506 173.407 104.506C172.751 104.506 172.341 105.073 172.341 105.996V111H171.295V103.583H172.334V104.629H172.457C172.642 103.884 173.175 103.446 173.872 103.446C174.569 103.446 175.062 103.877 175.219 104.608H175.342C175.533 103.897 176.128 103.446 176.873 103.446C177.905 103.446 178.445 104.164 178.445 105.538ZM186.765 111H180.619V110.036H183.155V101.635H180.64V100.671H184.317V110.036H186.765V111ZM189.239 103.959V102.653L195.118 106.119V107.131L189.239 110.597V109.291L193.936 106.687V106.563L189.239 103.959ZM203.772 103.959L199.069 106.563V106.687L203.772 109.291V110.597L197.894 107.131V106.119L203.772 102.653V103.959ZM209.952 111.123C208.893 111.123 208.113 110.686 207.73 109.865H207.601V111H206.459V100.671H207.642V104.731H207.765C208.093 103.918 208.879 103.46 209.952 103.46C211.668 103.46 212.789 104.697 212.789 106.598V107.979C212.789 109.886 211.668 111.123 209.952 111.123ZM209.61 110.063C210.841 110.063 211.62 109.182 211.62 107.814V106.748C211.62 105.381 210.841 104.506 209.61 104.506C208.394 104.506 207.614 105.381 207.614 106.748V107.814C207.614 109.188 208.394 110.063 209.61 110.063ZM218.142 111.137C216.18 111.137 214.929 109.858 214.929 107.855V106.734C214.929 104.731 216.18 103.453 218.142 103.453C220.104 103.453 221.354 104.731 221.354 106.734V107.855C221.354 109.858 220.104 111.137 218.142 111.137ZM218.142 104.479C216.87 104.479 216.077 105.381 216.077 106.837V107.746C216.077 109.209 216.87 110.104 218.142 110.104C219.413 110.104 220.206 109.209 220.206 107.746V106.837C220.206 105.381 219.413 104.479 218.142 104.479ZM226.331 111.123C224.615 111.123 223.494 109.886 223.494 107.979V106.598C223.494 104.697 224.615 103.46 226.331 103.46C227.404 103.46 228.197 103.918 228.519 104.731H228.642V100.671H229.824V111H228.683V109.865H228.553C228.17 110.686 227.391 111.123 226.331 111.123ZM226.673 110.063C227.89 110.063 228.676 109.188 228.676 107.814V106.748C228.676 105.381 227.89 104.506 226.673 104.506C225.449 104.506 224.663 105.381 224.663 106.748V107.814C224.663 109.182 225.449 110.063 226.673 110.063ZM233.372 113.639C233.201 113.639 232.976 113.632 232.873 113.618V112.6C232.962 112.62 233.174 112.627 233.283 112.627C233.98 112.627 234.363 112.312 234.671 111.451L234.801 111.048L232.073 103.583H233.338L235.416 109.79H235.505L237.576 103.583H238.813L236.018 111.273C235.368 113.099 234.746 113.639 233.372 113.639ZM241.165 103.959V102.653L247.044 106.119V107.131L241.165 110.597V109.291L245.861 106.687V106.563L241.165 103.959ZM249.99 111.041C249.464 111.041 249.177 110.631 249.177 109.879C249.177 109.127 249.464 108.71 249.99 108.71C250.523 108.71 250.811 109.127 250.811 109.879C250.811 110.631 250.523 111.041 249.99 111.041ZM252.759 111.041C252.232 111.041 251.938 110.631 251.938 109.879C251.938 109.127 252.232 108.71 252.759 108.71C253.285 108.71 253.579 109.127 253.579 109.879C253.579 110.631 253.285 111.041 252.759 111.041ZM255.527 111.041C254.994 111.041 254.707 110.631 254.707 109.879C254.707 109.127 254.994 108.71 255.527 108.71C256.054 108.71 256.341 109.127 256.341 109.879C256.341 110.631 256.054 111.041 255.527 111.041Z"
                  fill="#A1A1B2"
                />
                <g filter="url(#filter6_d_5956_42804)">
                  <path d="M44.5 116H43.5V136H44.5V116Z" fill="#A1A1B2" />
                </g>
                <g filter="url(#filter7_d_5956_42804)">
                  <path d="M60.5 116H59.5V136H60.5V116Z" fill="#A1A1B2" />
                </g>
                <path
                  d="M69.6611 131.937V131H70.4062C71.4316 131 71.6299 130.761 71.6299 129.571V127.746C71.6299 126.789 72.3477 126.153 73.7354 126.126V126.017C72.3477 125.982 71.6299 125.347 71.6299 124.39V122.564C71.6299 121.375 71.4316 121.136 70.4062 121.136H69.6611V120.199H70.5908C72.252 120.199 72.7783 120.726 72.7783 122.414V123.945C72.7783 125.005 73.3936 125.613 74.9932 125.449V126.687C73.3936 126.522 72.7783 127.138 72.7783 128.19V129.722C72.7783 131.41 72.252 131.937 70.5908 131.937H69.6611Z"
                  fill="#A1A1B2"
                />
                <g filter="url(#filter8_d_5956_42804)">
                  <path d="M44.5 136H43.5V156H44.5V136Z" fill="#A1A1B2" />
                </g>
                <path
                  d="M53.6611 151.937V151H54.4062C55.4316 151 55.6299 150.761 55.6299 149.571V147.746C55.6299 146.789 56.3477 146.153 57.7354 146.126V146.017C56.3477 145.982 55.6299 145.347 55.6299 144.39V142.564C55.6299 141.375 55.4316 141.136 54.4062 141.136H53.6611V140.199H54.5908C56.252 140.199 56.7783 140.726 56.7783 142.414V143.945C56.7783 145.005 57.3936 145.613 58.9932 145.449V146.687C57.3936 146.522 56.7783 147.138 56.7783 148.19V149.722C56.7783 151.41 56.252 151.937 54.5908 151.937H53.6611Z"
                  fill="#A1A1B2"
                />
                <path
                  d="M37.6611 171.937V171H38.4062C39.4316 171 39.6299 170.761 39.6299 169.571V167.746C39.6299 166.789 40.3477 166.153 41.7354 166.126V166.017C40.3477 165.982 39.6299 165.347 39.6299 164.39V162.564C39.6299 161.375 39.4316 161.136 38.4062 161.136H37.6611V160.199H38.5908C40.252 160.199 40.7783 160.726 40.7783 162.414V163.945C40.7783 165.005 41.3936 165.613 42.9932 165.449V166.687C41.3936 166.522 40.7783 167.138 40.7783 168.19V169.722C40.7783 171.41 40.252 171.937 38.5908 171.937H37.6611Z"
                  fill="#A1A1B2"
                />
              </g>
            </g>
            <path
              d="M0 12C0 5.37258 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V168C280 174.627 274.627 180 268 180H12C5.37259 180 0 174.627 0 168V12Z"
              fill="url(#paint0_linear_5956_42804)"
            />
            <path
              d="M155.017 100C150.25 105.129 152.158 113.45 158.684 115.988L169 120"
              stroke="#A1A1B2"
              strokeDasharray="3 3"
            />
            <g filter="url(#filter9_d_5956_42804)">
              <path
                d="M252 116H132C127.582 116 124 119.582 124 124V152C124 156.418 127.582 160 132 160H252C256.418 160 260 156.418 260 152V124C260 119.582 256.418 116 252 116Z"
                fill="white"
              />
              <path
                d="M154.667 134C154.667 133.267 154.067 132.667 153.333 132.667H142.667C141.933 132.667 141.333 133.267 141.333 134V142C141.333 142.733 141.933 143.333 142.667 143.333H153.333C154.067 143.333 154.667 142.733 154.667 142V134ZM153.333 134L148 137.333L142.667 134H153.333ZM153.333 142H142.667V135.333L148 138.667L153.333 135.333V142Z"
                fill="#A1A1B2"
              />
              <path
                d="M161.043 142V133.545H166.516V134.816H162.555V137.107H166.299V138.309H162.555V140.729H166.516V142H161.043ZM168.238 142V135.596H169.697V136.592H169.797C170.072 135.877 170.717 135.473 171.555 135.473C172.422 135.473 173.055 135.918 173.33 136.627H173.43C173.74 135.93 174.479 135.473 175.369 135.473C176.658 135.473 177.432 136.264 177.432 137.594V142H175.973V137.951C175.973 137.119 175.592 136.697 174.812 136.697C174.051 136.697 173.559 137.266 173.559 137.998V142H172.1V137.846C172.1 137.137 171.66 136.697 170.945 136.697C170.225 136.697 169.697 137.307 169.697 138.104V142H168.238ZM180.906 142.105C179.688 142.105 178.803 141.355 178.803 140.189V140.178C178.803 139.035 179.676 138.367 181.234 138.273L182.881 138.174V137.623C182.881 136.984 182.465 136.633 181.68 136.633C181.012 136.633 180.578 136.873 180.432 137.295L180.426 137.318H179.049L179.055 137.266C179.195 136.188 180.227 135.473 181.75 135.473C183.396 135.473 184.322 136.27 184.322 137.623V142H182.881V141.121H182.781C182.43 141.742 181.75 142.105 180.906 142.105ZM180.244 140.119C180.244 140.664 180.707 140.986 181.352 140.986C182.23 140.986 182.881 140.412 182.881 139.65V139.135L181.439 139.229C180.625 139.281 180.244 139.58 180.244 140.107V140.119ZM186.824 134.523C186.344 134.523 185.951 134.143 185.951 133.662C185.951 133.188 186.344 132.801 186.824 132.801C187.299 132.801 187.691 133.188 187.691 133.662C187.691 134.143 187.299 134.523 186.824 134.523ZM186.092 142V135.596H187.551V142H186.092ZM189.402 142V133.117H190.861V142H189.402ZM195.906 142V135.596H197.365V136.592H197.465C197.74 135.877 198.385 135.473 199.223 135.473C200.09 135.473 200.723 135.918 200.998 136.627H201.098C201.408 135.93 202.146 135.473 203.037 135.473C204.326 135.473 205.1 136.264 205.1 137.594V142H203.641V137.951C203.641 137.119 203.26 136.697 202.48 136.697C201.719 136.697 201.227 137.266 201.227 137.998V142H199.768V137.846C199.768 137.137 199.328 136.697 198.613 136.697C197.893 136.697 197.365 137.307 197.365 138.104V142H195.906ZM209.57 142.129C207.666 142.129 206.512 140.852 206.512 138.812V138.807C206.512 136.791 207.678 135.473 209.5 135.473C211.322 135.473 212.447 136.75 212.447 138.684V139.164H207.971C207.988 140.312 208.609 140.98 209.6 140.98C210.391 140.98 210.842 140.582 210.982 140.289L211 140.248H212.389L212.371 140.301C212.166 141.127 211.311 142.129 209.57 142.129ZM209.518 136.615C208.703 136.615 208.094 137.166 207.982 138.186H211.023C210.924 137.137 210.332 136.615 209.518 136.615ZM216.326 142.129C214.697 142.129 213.713 141.379 213.59 140.295V140.283H215.037L215.043 140.295C215.195 140.74 215.623 141.051 216.35 141.051C217.076 141.051 217.58 140.723 217.58 140.242V140.23C217.58 139.855 217.299 139.609 216.596 139.451L215.559 139.217C214.34 138.947 213.76 138.373 213.76 137.43V137.424C213.76 136.27 214.814 135.473 216.326 135.473C217.885 135.473 218.816 136.246 218.91 137.283V137.295H217.539L217.533 137.277C217.428 136.873 217.006 136.545 216.32 136.545C215.67 136.545 215.201 136.861 215.201 137.342V137.348C215.201 137.723 215.471 137.951 216.162 138.109L217.199 138.338C218.453 138.619 219.045 139.152 219.045 140.084V140.096C219.045 141.314 217.902 142.129 216.326 142.129ZM222.818 142.129C221.189 142.129 220.205 141.379 220.082 140.295V140.283H221.529L221.535 140.295C221.688 140.74 222.115 141.051 222.842 141.051C223.568 141.051 224.072 140.723 224.072 140.242V140.23C224.072 139.855 223.791 139.609 223.088 139.451L222.051 139.217C220.832 138.947 220.252 138.373 220.252 137.43V137.424C220.252 136.27 221.307 135.473 222.818 135.473C224.377 135.473 225.309 136.246 225.402 137.283V137.295H224.031L224.025 137.277C223.92 136.873 223.498 136.545 222.812 136.545C222.162 136.545 221.693 136.861 221.693 137.342V137.348C221.693 137.723 221.963 137.951 222.654 138.109L223.691 138.338C224.945 138.619 225.537 139.152 225.537 140.084V140.096C225.537 141.314 224.395 142.129 222.818 142.129ZM228.754 142.105C227.535 142.105 226.65 141.355 226.65 140.189V140.178C226.65 139.035 227.523 138.367 229.082 138.273L230.729 138.174V137.623C230.729 136.984 230.312 136.633 229.527 136.633C228.859 136.633 228.426 136.873 228.279 137.295L228.273 137.318H226.896L226.902 137.266C227.043 136.188 228.074 135.473 229.598 135.473C231.244 135.473 232.17 136.27 232.17 137.623V142H230.729V141.121H230.629C230.277 141.742 229.598 142.105 228.754 142.105ZM228.092 140.119C228.092 140.664 228.555 140.986 229.199 140.986C230.078 140.986 230.729 140.412 230.729 139.65V139.135L229.287 139.229C228.473 139.281 228.092 139.58 228.092 140.107V140.119ZM236.676 144.25C234.988 144.25 233.975 143.529 233.828 142.451L233.834 142.434H235.293L235.299 142.451C235.398 142.861 235.885 143.148 236.699 143.148C237.695 143.148 238.275 142.686 238.275 141.865V140.641H238.176C237.807 141.326 237.109 141.701 236.225 141.701C234.602 141.701 233.594 140.447 233.594 138.631V138.619C233.594 136.768 234.602 135.49 236.254 135.49C237.139 135.49 237.83 135.924 238.193 136.65H238.27V135.596H239.729V141.842C239.729 143.318 238.545 144.25 236.676 144.25ZM236.676 140.541C237.689 140.541 238.299 139.762 238.299 138.631V138.619C238.299 137.488 237.684 136.703 236.676 136.703C235.662 136.703 235.088 137.488 235.088 138.619V138.631C235.088 139.762 235.662 140.541 236.676 140.541ZM244.258 142.129C242.354 142.129 241.199 140.852 241.199 138.812V138.807C241.199 136.791 242.365 135.473 244.188 135.473C246.01 135.473 247.135 136.75 247.135 138.684V139.164H242.658C242.676 140.312 243.297 140.98 244.287 140.98C245.078 140.98 245.529 140.582 245.67 140.289L245.688 140.248H247.076L247.059 140.301C246.854 141.127 245.998 142.129 244.258 142.129ZM244.205 136.615C243.391 136.615 242.781 137.166 242.67 138.186H245.711C245.611 137.137 245.02 136.615 244.205 136.615Z"
                fill="#A1A1B2"
              />
            </g>
            <g filter="url(#filter10_d_5956_42804)">
              <path
                d="M227 56H92C87.5817 56 84 59.5817 84 64V92C84 96.4183 87.5817 100 92 100H227C231.418 100 235 96.4183 235 92V64C235 59.5817 231.418 56 227 56Z"
                fill="white"
              />
              <path
                d="M107.333 84H106.667L107.333 79.3333H105C104.613 79.3333 104.62 79.12 104.747 78.8933C104.873 78.6667 104.78 78.84 104.793 78.8133C105.653 77.2933 106.947 75.0267 108.667 72H109.333L108.667 76.6667H111C111.327 76.6667 111.373 76.8867 111.313 77.0067L111.267 77.1067C108.64 81.7 107.333 84 107.333 84Z"
                fill="#A1A1B2"
              />
              <path
                d="M122.783 82L120.516 73.5449H122.092L123.539 79.8906H123.627L125.291 73.5449H126.633L128.32 79.8906H128.402L129.85 73.5449H131.414L129.146 82H127.729L126.006 75.9473H125.918L124.207 82H122.783ZM134.918 82.1289C132.996 82.1289 131.836 80.875 131.836 78.8008V78.7891C131.836 76.7324 133.014 75.4727 134.918 75.4727C136.828 75.4727 138 76.7266 138 78.7891V78.8008C138 80.875 136.834 82.1289 134.918 82.1289ZM134.918 80.9453C135.932 80.9453 136.506 80.1543 136.506 78.8066V78.7949C136.506 77.4473 135.926 76.6504 134.918 76.6504C133.904 76.6504 133.324 77.4473 133.324 78.7949V78.8066C133.324 80.1543 133.904 80.9453 134.918 80.9453ZM139.465 82V75.5957H140.924V76.5801H141.023C141.24 75.8945 141.826 75.4902 142.67 75.4902C142.893 75.4902 143.121 75.5195 143.262 75.5605V76.8672C143.027 76.8203 142.787 76.7852 142.535 76.7852C141.562 76.7852 140.924 77.3652 140.924 78.2793V82H139.465ZM144.516 82V73.1172H145.975V78.2207H146.074L148.436 75.5957H150.123L147.545 78.3027L150.299 82H148.541L146.484 79.2285L145.975 79.75V82H144.516ZM151.805 82V76.7266H150.756V75.5957H151.805V74.9629C151.805 73.6855 152.455 73.0586 153.879 73.0586C154.189 73.0586 154.453 73.0762 154.688 73.1172V74.1367C154.576 74.1191 154.395 74.1074 154.189 74.1074C153.504 74.1074 153.24 74.4355 153.24 75.0449V75.5957H154.629V76.7266H153.264V82H151.805ZM156.094 82V73.1172H157.553V82H156.094ZM162.164 82.1289C160.242 82.1289 159.082 80.875 159.082 78.8008V78.7891C159.082 76.7324 160.26 75.4727 162.164 75.4727C164.074 75.4727 165.246 76.7266 165.246 78.7891V78.8008C165.246 80.875 164.08 82.1289 162.164 82.1289ZM162.164 80.9453C163.178 80.9453 163.752 80.1543 163.752 78.8066V78.7949C163.752 77.4473 163.172 76.6504 162.164 76.6504C161.15 76.6504 160.57 77.4473 160.57 78.7949V78.8066C160.57 80.1543 161.15 80.9453 162.164 80.9453ZM167.672 82L165.938 75.5957H167.402L168.469 80.4062H168.568L169.799 75.5957H171.188L172.43 80.4062H172.529L173.59 75.5957H175.037L173.303 82H171.773L170.525 77.3594H170.426L169.184 82H167.672ZM182.027 82.0293C180.557 82.0293 179.953 81.5371 179.953 80.3008V76.7266H178.957V75.5957H179.953V74.0254H181.436V75.5957H182.789V76.7266H181.436V79.9551C181.436 80.5938 181.688 80.8633 182.297 80.8633C182.502 80.8633 182.613 80.8574 182.789 80.8398V81.9648C182.578 82.0059 182.309 82.0293 182.027 82.0293ZM184.242 82V75.5957H185.701V76.5801H185.801C186.018 75.8945 186.604 75.4902 187.447 75.4902C187.67 75.4902 187.898 75.5195 188.039 75.5605V76.8672C187.805 76.8203 187.564 76.7852 187.312 76.7852C186.34 76.7852 185.701 77.3652 185.701 78.2793V82H184.242ZM189.984 74.5234C189.504 74.5234 189.111 74.1426 189.111 73.6621C189.111 73.1875 189.504 72.8008 189.984 72.8008C190.459 72.8008 190.852 73.1875 190.852 73.6621C190.852 74.1426 190.459 74.5234 189.984 74.5234ZM189.252 82V75.5957H190.711V82H189.252ZM195.258 84.25C193.57 84.25 192.557 83.5293 192.41 82.4512L192.416 82.4336H193.875L193.881 82.4512C193.98 82.8613 194.467 83.1484 195.281 83.1484C196.277 83.1484 196.857 82.6855 196.857 81.8652V80.6406H196.758C196.389 81.3262 195.691 81.7012 194.807 81.7012C193.184 81.7012 192.176 80.4473 192.176 78.6309V78.6191C192.176 76.7676 193.184 75.4902 194.836 75.4902C195.721 75.4902 196.412 75.9238 196.775 76.6504H196.852V75.5957H198.311V81.8418C198.311 83.3184 197.127 84.25 195.258 84.25ZM195.258 80.541C196.271 80.541 196.881 79.7617 196.881 78.6309V78.6191C196.881 77.4883 196.266 76.7031 195.258 76.7031C194.244 76.7031 193.67 77.4883 193.67 78.6191V78.6309C193.67 79.7617 194.244 80.541 195.258 80.541ZM202.852 84.25C201.164 84.25 200.15 83.5293 200.004 82.4512L200.01 82.4336H201.469L201.475 82.4512C201.574 82.8613 202.061 83.1484 202.875 83.1484C203.871 83.1484 204.451 82.6855 204.451 81.8652V80.6406H204.352C203.982 81.3262 203.285 81.7012 202.4 81.7012C200.777 81.7012 199.77 80.4473 199.77 78.6309V78.6191C199.77 76.7676 200.777 75.4902 202.43 75.4902C203.314 75.4902 204.006 75.9238 204.369 76.6504H204.445V75.5957H205.904V81.8418C205.904 83.3184 204.721 84.25 202.852 84.25ZM202.852 80.541C203.865 80.541 204.475 79.7617 204.475 78.6309V78.6191C204.475 77.4883 203.859 76.7031 202.852 76.7031C201.838 76.7031 201.264 77.4883 201.264 78.6191V78.6309C201.264 79.7617 201.838 80.541 202.852 80.541ZM210.434 82.1289C208.529 82.1289 207.375 80.8516 207.375 78.8125V78.8066C207.375 76.791 208.541 75.4727 210.363 75.4727C212.186 75.4727 213.311 76.75 213.311 78.6836V79.1641H208.834C208.852 80.3125 209.473 80.9805 210.463 80.9805C211.254 80.9805 211.705 80.582 211.846 80.2891L211.863 80.248H213.252L213.234 80.3008C213.029 81.127 212.174 82.1289 210.434 82.1289ZM210.381 76.6152C209.566 76.6152 208.957 77.166 208.846 78.1855H211.887C211.787 77.1367 211.195 76.6152 210.381 76.6152ZM214.77 82V75.5957H216.229V76.5801H216.328C216.545 75.8945 217.131 75.4902 217.975 75.4902C218.197 75.4902 218.426 75.5195 218.566 75.5605V76.8672C218.332 76.8203 218.092 76.7852 217.84 76.7852C216.867 76.7852 216.229 77.3652 216.229 78.2793V82H214.77Z"
                fill="#A1A1B2"
              />
            </g>
          </g>
        </g>
        <defs>
          <filter
            id="filter0_d_5956_42804"
            x="23.5"
            y="41"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_42804" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_42804" result="shape" />
          </filter>
          <filter
            id="filter1_d_5956_42804"
            x="23.5"
            y="61"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_42804" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_42804" result="shape" />
          </filter>
          <filter
            id="filter2_d_5956_42804"
            x="39.5"
            y="61"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_42804" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_42804" result="shape" />
          </filter>
          <filter
            id="filter3_d_5956_42804"
            x="23.5"
            y="81"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_42804" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_42804" result="shape" />
          </filter>
          <filter
            id="filter4_d_5956_42804"
            x="39.5"
            y="81"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_42804" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_42804" result="shape" />
          </filter>
          <filter
            id="filter5_d_5956_42804"
            x="55.5"
            y="81"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_42804" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_42804" result="shape" />
          </filter>
          <filter
            id="filter6_d_5956_42804"
            x="23.5"
            y="101"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_42804" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_42804" result="shape" />
          </filter>
          <filter
            id="filter7_d_5956_42804"
            x="39.5"
            y="101"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_42804" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_42804" result="shape" />
          </filter>
          <filter
            id="filter8_d_5956_42804"
            x="23.5"
            y="121"
            width="41"
            height="60"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="10" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_42804" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_42804" result="shape" />
          </filter>
          <filter
            id="filter9_d_5956_42804"
            x="109"
            y="106"
            width="166"
            height="74"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="7.5" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0.48 0 0 0 0 0.52 0 0 0 0 0.6 0 0 0 0.25 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_42804" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_42804" result="shape" />
          </filter>
          <filter
            id="filter10_d_5956_42804"
            x="69"
            y="46"
            width="181"
            height="74"
            filterUnits="userSpaceOnUse"
            colorInterpolationFilters="sRGB"
          >
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix
              in="SourceAlpha"
              type="matrix"
              values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
              result="hardAlpha"
            />
            <feOffset dy="5" />
            <feGaussianBlur stdDeviation="7.5" />
            <feComposite in2="hardAlpha" operator="out" />
            <feColorMatrix type="matrix" values="0 0 0 0 0.48 0 0 0 0 0.52 0 0 0 0 0.6 0 0 0 0.25 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_42804" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_42804" result="shape" />
          </filter>
          <linearGradient
            id="paint0_linear_5956_42804"
            x1="0"
            y1="0"
            x2="163.744"
            y2="254.731"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor="white" stopOpacity="0.16" />
            <stop offset="0.625985" stopColor="white" />
          </linearGradient>
          <clipPath id="clip0_5956_42804">
            <rect width="280" height="180" fill="white" />
          </clipPath>
        </defs>
      </svg>
    );
  }

  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="280" height="180" viewBox="0 0 280 180" fill="none">
      <g clipPath="url(#clip0_5956_77253)">
        <mask
          id="mask0_5956_77253"
          style={{
            maskType: 'luminance',
          }}
          maskUnits="userSpaceOnUse"
          x="0"
          y="0"
          width="280"
          height="180"
        >
          <path
            d="M0 12C0 5.37258 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V168C280 174.627 274.627 180 268 180H12C5.37259 180 0 174.627 0 168V12Z"
            fill="white"
          />
        </mask>
        <g mask="url(#mask0_5956_77253)">
          <mask
            id="mask1_5956_77253"
            style={{
              maskType: 'luminance',
            }}
            maskUnits="userSpaceOnUse"
            x="0"
            y="0"
            width="280"
            height="248"
          >
            <path
              d="M0 12C0 5.37259 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V236C280 242.627 274.627 248 268 248H12C5.37259 248 0 242.627 0 236V12Z"
              fill="white"
            />
          </mask>
          <g mask="url(#mask1_5956_77253)">
            <mask
              id="mask2_5956_77253"
              style={{
                maskType: 'luminance',
              }}
              maskUnits="userSpaceOnUse"
              x="0"
              y="0"
              width="280"
              height="248"
            >
              <path
                d="M0 8.00001C0 3.58173 3.58172 0 8 0H272C276.418 0 280 3.58172 280 8V248H0V8.00001Z"
                fill="white"
              />
            </mask>
            <g mask="url(#mask2_5956_77253)">
              <path
                d="M0 8.00001C0 3.58173 3.58172 0 8 0H272C276.418 0 280 3.58172 280 8V248H0V8.00001Z"
                fill="#23232B"
              />
              <path d="M16 10L10.6667 14V22H14V17.3333H18V22H21.3333V14L16 10Z" fill="#828299" />
              <path
                d="M31.9443 21V17.1104L28.4854 11.1357H30.4131L32.7646 15.3672H32.8809L35.2324 11.1357H37.1602L33.7012 17.1104V21H31.9443ZM40.6465 21.1504C38.4043 21.1504 37.0508 19.6875 37.0508 17.2676V17.2539C37.0508 14.8545 38.4248 13.3848 40.6465 13.3848C42.875 13.3848 44.2422 14.8477 44.2422 17.2539V17.2676C44.2422 19.6875 42.8818 21.1504 40.6465 21.1504ZM40.6465 19.7695C41.8291 19.7695 42.499 18.8467 42.499 17.2744V17.2607C42.499 15.6885 41.8223 14.7588 40.6465 14.7588C39.4639 14.7588 38.7871 15.6885 38.7871 17.2607V17.2744C38.7871 18.8467 39.4639 19.7695 40.6465 19.7695ZM48.4258 21.1504C46.7441 21.1504 45.8828 20.1387 45.8828 18.3613V13.5283H47.585V17.9717C47.585 19.127 48.0156 19.7148 49.041 19.7148C50.1416 19.7148 50.7295 19.0039 50.7295 17.8828V13.5283H52.4316V21H50.7295V19.8652H50.6133C50.2646 20.665 49.5059 21.1504 48.4258 21.1504ZM54.5098 21V13.5283H56.2119V14.6768H56.3281C56.5811 13.877 57.2646 13.4053 58.249 13.4053C58.5088 13.4053 58.7754 13.4395 58.9395 13.4873V15.0117C58.666 14.957 58.3857 14.916 58.0918 14.916C56.957 14.916 56.2119 15.5928 56.2119 16.6592V21H54.5098ZM64.1348 21V10.6367H65.8369V21H64.1348ZM71.2168 21.1504C68.9746 21.1504 67.6211 19.6875 67.6211 17.2676V17.2539C67.6211 14.8545 68.9951 13.3848 71.2168 13.3848C73.4453 13.3848 74.8125 14.8477 74.8125 17.2539V17.2676C74.8125 19.6875 73.4521 21.1504 71.2168 21.1504ZM71.2168 19.7695C72.3994 19.7695 73.0693 18.8467 73.0693 17.2744V17.2607C73.0693 15.6885 72.3926 14.7588 71.2168 14.7588C70.0342 14.7588 69.3574 15.6885 69.3574 17.2607V17.2744C69.3574 18.8467 70.0342 19.7695 71.2168 19.7695ZM79.7275 21.1504C77.4785 21.1504 76.1523 19.6943 76.1523 17.2539V17.2402C76.1523 14.8271 77.4717 13.3848 79.7207 13.3848C81.6416 13.3848 82.79 14.4512 82.9814 15.9961V16.0234H81.375L81.3682 16.0029C81.2109 15.2783 80.6572 14.7588 79.7275 14.7588C78.5654 14.7588 77.8818 15.6748 77.8818 17.2402V17.2539C77.8818 18.8398 78.5723 19.7695 79.7275 19.7695C80.6094 19.7695 81.1494 19.3662 81.3613 18.5801L81.375 18.5527L82.9814 18.5459L82.9678 18.6006C82.7217 20.1318 81.6211 21.1504 79.7275 21.1504ZM86.6387 21.123C85.2168 21.123 84.1846 20.248 84.1846 18.8877V18.874C84.1846 17.541 85.2031 16.7617 87.0215 16.6523L88.9424 16.5361V15.8936C88.9424 15.1484 88.457 14.7383 87.541 14.7383C86.7617 14.7383 86.2559 15.0186 86.085 15.5107L86.0781 15.5381H84.4717L84.4785 15.4766C84.6426 14.2188 85.8457 13.3848 87.623 13.3848C89.5439 13.3848 90.624 14.3145 90.624 15.8936V21H88.9424V19.9746H88.8262C88.416 20.6992 87.623 21.123 86.6387 21.123ZM85.8662 18.8057C85.8662 19.4414 86.4062 19.8174 87.1582 19.8174C88.1836 19.8174 88.9424 19.1475 88.9424 18.2588V17.6572L87.2607 17.7666C86.3105 17.8281 85.8662 18.1768 85.8662 18.792V18.8057ZM92.7363 21V10.6367H94.4385V21H92.7363ZM100.502 21V11.1357H102.266V21H100.502ZM104.699 21V11.1357H108.397C111.33 11.1357 113.039 12.9268 113.039 16.0166V16.0303C113.039 19.1885 111.351 21 108.397 21H104.699ZM106.463 19.5166H108.165C110.127 19.5166 111.241 18.2725 111.241 16.0576V16.0439C111.241 13.877 110.1 12.6191 108.165 12.6191H106.463V19.5166ZM115.062 21V11.1357H121.447V12.6191H116.826V15.292H121.194V16.6934H116.826V19.5166H121.447V21H115.062Z"
                fill="#828299"
              />
              <path
                d="M266.667 8.66675H258.667C257.933 8.66675 257.333 9.26675 257.333 10.0001V19.3334H258.667V10.0001H266.667V8.66675ZM268.667 11.3334H261.333C260.6 11.3334 260 11.9334 260 12.6667V22.0001C260 22.7334 260.6 23.3334 261.333 23.3334H268.667C269.4 23.3334 270 22.7334 270 22.0001V12.6667C270 11.9334 269.4 11.3334 268.667 11.3334ZM268.667 22.0001H261.333V12.6667H268.667V22.0001Z"
                fill="#828299"
              />
              <path
                d="M21.7256 51H14.8486V49.9404H17.7607V42.5029H17.6514L14.8281 44.3281V43.043L17.7676 41.1357H18.9502V49.9404H21.7256V51Z"
                fill="#525266"
              />
              <path
                d="M14.8555 63.9111C14.8555 62.1748 16.1406 60.9307 17.9385 60.9307C19.75 60.9307 20.9941 62.0518 20.9941 63.6992C20.9941 64.7246 20.5293 65.5449 18.957 67.2607L16.6328 69.79V69.9062H21.1514V71H14.9102V70.166L18.2461 66.4541C19.4971 65.0527 19.7979 64.5264 19.7979 63.7471C19.7979 62.6875 19.0527 61.9902 17.9043 61.9902C16.7695 61.9902 16.0176 62.749 16.0176 63.9111V63.9521H14.8555V63.9111Z"
                fill="#525266"
              />
              <path
                d="M16.7969 86.4268V85.415H17.8701C18.9775 85.415 19.75 84.6904 19.75 83.6582C19.75 82.6533 19.0117 81.9902 17.8975 81.9902C16.79 81.9902 16.0518 82.6396 15.9561 83.6992H14.8008C14.917 81.9902 16.1201 80.9307 17.9453 80.9307C19.709 80.9307 20.9668 81.9902 20.9668 83.4873C20.9668 84.6768 20.3447 85.5244 19.2852 85.7842V85.8936C20.5977 86.0645 21.377 86.9873 21.377 88.334C21.377 90.0088 19.9688 91.2051 18 91.2051C16.0518 91.2051 14.6982 90.084 14.6094 88.3818H15.751C15.8604 89.4346 16.7354 90.1182 17.9658 90.1182C19.3193 90.1182 20.1602 89.4209 20.1602 88.3066C20.1602 87.1582 19.292 86.4268 17.9248 86.4268H16.7969Z"
                fill="#525266"
              />
              <path
                d="M19.1553 111V108.915H14.6572V107.938L18.0068 101.136H19.2373L15.9355 107.78V107.869H19.1689V105.053H20.2627V107.855H21.7666V108.915H20.2559V111H19.1553Z"
                fill="#525266"
              />
              <path
                d="M17.918 131.198C16.0791 131.198 14.7803 130.063 14.6777 128.368H15.8398C15.9492 129.4 16.8311 130.111 17.9863 130.111C19.2578 130.111 20.1055 129.216 20.1055 127.876C20.1055 126.522 19.251 125.606 17.9863 125.606C17.1045 125.606 16.373 126.01 15.9834 126.707H14.8418L15.3408 121.136H20.7344V122.223H16.291L16.0176 125.442H16.127C16.6123 124.854 17.3164 124.547 18.1846 124.547C20.0098 124.547 21.2812 125.907 21.2812 127.849C21.2812 129.845 19.9209 131.198 17.918 131.198Z"
                fill="#525266"
              />
              <path
                d="M21.3838 147.835C21.3838 149.79 19.9756 151.205 18.0205 151.205C16.0791 151.205 14.6777 149.797 14.6777 147.835C14.6777 146.68 15.0674 145.634 16.0107 144.26C16.0996 144.109 18.1504 141.238 18.2188 141.136H19.6064L16.9131 144.834C16.6123 145.258 16.6396 145.23 16.5918 145.34L16.6943 145.395C16.9883 144.998 17.6992 144.704 18.3281 144.704C20.085 144.704 21.3838 146.037 21.3838 147.835ZM18.0273 150.132C19.2715 150.132 20.2148 149.161 20.2148 147.896C20.2148 146.625 19.2715 145.654 18.0273 145.654C16.79 145.654 15.8467 146.625 15.8467 147.896C15.8467 149.161 16.79 150.132 18.0273 150.132Z"
                fill="#525266"
              />
              <path
                d="M15.6348 171L20.1123 162.305V162.216H14.7598V161.136H21.3428V162.25L16.9199 171H15.6348Z"
                fill="#525266"
              />
              <path
                d="M39.5752 51.1299C38.1602 51.1299 37.2168 50.2412 37.2168 48.8945C37.2168 47.582 38.1602 46.8027 39.8486 46.7139L41.8857 46.6113V45.9414C41.8857 45.0117 41.3184 44.499 40.2861 44.499C39.4316 44.499 38.8301 44.8613 38.6387 45.4971H37.4971C37.6338 44.3076 38.7822 43.4941 40.2998 43.4941C42.043 43.4941 43.041 44.3828 43.041 45.9277V51.0068H41.9336V49.8926H41.8174C41.4619 50.6855 40.6553 51.1299 39.5752 51.1299ZM39.9102 50.1113C41.0312 50.1113 41.8857 49.3662 41.8857 48.375V47.5L39.9785 47.5889C38.9395 47.6367 38.3926 48.0811 38.3926 48.8535C38.3926 49.6328 38.9736 50.1113 39.9102 50.1113ZM52.9873 43.583L51.3945 51H50.2803L49.0225 45.2168H48.9404L47.6826 51H46.5684L44.9756 43.583H46.1104L47.1152 49.5303H47.2383L48.4346 43.5898H49.5283L50.7246 49.5303H50.8477L51.8525 43.583H52.9873ZM56.8838 51.1299C55.4688 51.1299 54.5254 50.2412 54.5254 48.8945C54.5254 47.582 55.4688 46.8027 57.1572 46.7139L59.1943 46.6113V45.9414C59.1943 45.0117 58.627 44.499 57.5947 44.499C56.7402 44.499 56.1387 44.8613 55.9473 45.4971H54.8057C54.9424 44.3076 56.0908 43.4941 57.6084 43.4941C59.3516 43.4941 60.3496 44.3828 60.3496 45.9277V51.0068H59.2422V49.8926H59.126C58.7705 50.6855 57.9639 51.1299 56.8838 51.1299ZM57.2188 50.1113C58.3398 50.1113 59.1943 49.3662 59.1943 48.375V47.5L57.2871 47.5889C56.248 47.6367 55.7012 48.0811 55.7012 48.8535C55.7012 49.6328 56.2822 50.1113 57.2188 50.1113ZM66.4199 41.7646C65.873 41.7646 65.4561 41.3545 65.4561 40.8076C65.4561 40.2676 65.873 39.8574 66.4199 39.8574C66.9668 39.8574 67.3838 40.2676 67.3838 40.8076C67.3838 41.3545 66.9668 41.7646 66.4199 41.7646ZM69.5303 51H63.3848V50.0361H65.9277V44.5469H63.4053V43.583H67.0762V50.0361H69.5303V51ZM73.6797 41.5938H74.8281V43.6035H77.8359V44.5947H74.8418V48.7783C74.8418 49.585 75.4092 50.0225 76.4551 50.0225C76.8721 50.0225 77.6172 50.002 77.8154 49.9814V50.9658C77.6309 51 76.7285 51.0342 76.373 51.0342C74.5342 51.0342 73.6797 50.3369 73.6797 48.792V44.5947H71.7041V43.6035H73.6797V41.5938ZM89.5527 45.5859C89.5527 44.3008 90.6465 43.4395 92.2803 43.4395C93.8252 43.4395 94.8711 44.2119 95.0078 45.4492H93.8867C93.75 44.7998 93.1279 44.4033 92.2598 44.4033C91.3164 44.4033 90.708 44.8408 90.708 45.5176C90.708 46.085 91.0908 46.4062 92.0205 46.6113L93.0664 46.8506C94.5088 47.1787 95.165 47.8076 95.165 48.8809C95.165 50.248 94.0234 51.1367 92.2666 51.1367C90.585 51.1367 89.4707 50.3506 89.3408 49.0791H90.5234C90.6943 49.7627 91.3506 50.1592 92.3076 50.1592C93.3193 50.1592 93.9619 49.7012 93.9619 48.9902C93.9619 48.4023 93.5996 48.0879 92.6562 47.876L91.5557 47.623C90.2158 47.3154 89.5527 46.6387 89.5527 45.5859ZM99.6426 41.5938H100.791V43.6035H103.799V44.5947H100.805V48.7783C100.805 49.585 101.372 50.0225 102.418 50.0225C102.835 50.0225 103.58 50.002 103.778 49.9814V50.9658C103.594 51 102.691 51.0342 102.336 51.0342C100.497 51.0342 99.6426 50.3369 99.6426 48.792V44.5947H97.667V43.6035H99.6426V41.5938ZM111.564 49.0859H112.692C112.467 50.3096 111.291 51.1367 109.732 51.1367C107.695 51.1367 106.513 49.9131 106.513 47.8008V46.6865C106.513 44.7314 107.764 43.4463 109.65 43.4463C111.578 43.4463 112.713 44.7246 112.713 46.8711V47.5957H107.661V47.8965C107.661 49.2568 108.468 50.1318 109.732 50.1318C110.669 50.1318 111.359 49.7354 111.564 49.0859ZM109.644 44.4443C108.406 44.4443 107.661 45.292 107.661 46.7139H111.564C111.564 45.2988 110.84 44.4443 109.644 44.4443ZM118.681 43.46C120.396 43.46 121.518 44.6973 121.518 46.6045V47.9854C121.518 49.8857 120.396 51.123 118.681 51.123C117.607 51.123 116.821 50.665 116.5 49.8516H116.37V53.502H115.188V43.583H116.336V44.7178H116.459C116.849 43.8975 117.621 43.46 118.681 43.46ZM118.346 44.5264C117.122 44.5264 116.343 45.4014 116.343 46.7686V47.835C116.343 49.209 117.122 50.084 118.346 50.084C119.569 50.084 120.349 49.2021 120.349 47.835V46.7686C120.349 45.4014 119.569 44.5264 118.346 44.5264ZM126.87 51.041C126.193 51.041 125.633 50.4736 125.633 49.7764C125.633 49.0859 126.193 48.5186 126.87 48.5186C127.547 48.5186 128.107 49.0859 128.107 49.7764C128.107 50.4736 127.547 51.041 126.87 51.041ZM137.527 49.0859H138.655C138.43 50.3096 137.254 51.1367 135.695 51.1367C133.658 51.1367 132.476 49.9131 132.476 47.8008V46.6865C132.476 44.7314 133.727 43.4463 135.613 43.4463C137.541 43.4463 138.676 44.7246 138.676 46.8711V47.5957H133.624V47.8965C133.624 49.2568 134.431 50.1318 135.695 50.1318C136.632 50.1318 137.322 49.7354 137.527 49.0859ZM135.606 44.4443C134.369 44.4443 133.624 45.292 133.624 46.7139H137.527C137.527 45.2988 136.803 44.4443 135.606 44.4443ZM147.754 45.5381V51H146.708V45.8799C146.708 44.9775 146.38 44.5059 145.758 44.5059C145.108 44.5059 144.712 45.0732 144.712 45.9961V51H143.673V45.873C143.673 44.9775 143.345 44.5059 142.716 44.5059C142.06 44.5059 141.649 45.0732 141.649 45.9961V51H140.604V43.583H141.643V44.6289H141.766C141.95 43.8838 142.483 43.4463 143.181 43.4463C143.878 43.4463 144.37 43.877 144.527 44.6084H144.65C144.842 43.8975 145.437 43.4463 146.182 43.4463C147.214 43.4463 147.754 44.1641 147.754 45.5381ZM152.081 51.1299C150.666 51.1299 149.723 50.2412 149.723 48.8945C149.723 47.582 150.666 46.8027 152.354 46.7139L154.392 46.6113V45.9414C154.392 45.0117 153.824 44.499 152.792 44.499C151.938 44.499 151.336 44.8613 151.145 45.4971H150.003C150.14 44.3076 151.288 43.4941 152.806 43.4941C154.549 43.4941 155.547 44.3828 155.547 45.9277V51.0068H154.439V49.8926H154.323C153.968 50.6855 153.161 51.1299 152.081 51.1299ZM152.416 50.1113C153.537 50.1113 154.392 49.3662 154.392 48.375V47.5L152.484 47.5889C151.445 47.6367 150.898 48.0811 150.898 48.8535C150.898 49.6328 151.479 50.1113 152.416 50.1113ZM161.617 41.7646C161.07 41.7646 160.653 41.3545 160.653 40.8076C160.653 40.2676 161.07 39.8574 161.617 39.8574C162.164 39.8574 162.581 40.2676 162.581 40.8076C162.581 41.3545 162.164 41.7646 161.617 41.7646ZM164.728 51H158.582V50.0361H161.125V44.5469H158.603V43.583H162.273V50.0361H164.728V51ZM173.382 51H167.236V50.0361H169.772V41.6348H167.257V40.6709H170.935V50.0361H173.382V51ZM177.306 46.0645C177.306 43.7471 178.003 41.7305 179.363 40.1855H180.519C179.104 42.1748 178.509 43.918 178.509 46.0645C178.509 48.2109 179.104 49.9541 180.519 51.9434H179.363C178.003 50.3984 177.306 48.3887 177.306 46.0645ZM188.072 45.5859H186.828V41.1357H188.072V45.5859ZM193.404 45.5859C193.404 44.3008 194.498 43.4395 196.132 43.4395C197.677 43.4395 198.723 44.2119 198.859 45.4492H197.738C197.602 44.7998 196.979 44.4033 196.111 44.4033C195.168 44.4033 194.56 44.8408 194.56 45.5176C194.56 46.085 194.942 46.4062 195.872 46.6113L196.918 46.8506C198.36 47.1787 199.017 47.8076 199.017 48.8809C199.017 50.248 197.875 51.1367 196.118 51.1367C194.437 51.1367 193.322 50.3506 193.192 49.0791H194.375C194.546 49.7627 195.202 50.1592 196.159 50.1592C197.171 50.1592 197.813 49.7012 197.813 48.9902C197.813 48.4023 197.451 48.0879 196.508 47.876L195.407 47.623C194.067 47.3154 193.404 46.6387 193.404 45.5859ZM206.762 49.0859H207.89C207.664 50.3096 206.488 51.1367 204.93 51.1367C202.893 51.1367 201.71 49.9131 201.71 47.8008V46.6865C201.71 44.7314 202.961 43.4463 204.848 43.4463C206.775 43.4463 207.91 44.7246 207.91 46.8711V47.5957H202.858V47.8965C202.858 49.2568 203.665 50.1318 204.93 50.1318C205.866 50.1318 206.557 49.7354 206.762 49.0859ZM204.841 44.4443C203.604 44.4443 202.858 45.292 202.858 46.7139H206.762C206.762 45.2988 206.037 44.4443 204.841 44.4443ZM210.378 51V43.583H211.492V44.8887H211.588C211.984 43.9658 212.832 43.4463 213.96 43.4463C215.573 43.4463 216.448 44.4102 216.448 46.1875V51H215.286V46.4814C215.286 45.1416 214.739 44.5127 213.584 44.5127C212.36 44.5127 211.54 45.3672 211.54 46.6318V51H210.378ZM221.603 51.123C219.887 51.123 218.766 49.8857 218.766 47.9785V46.5977C218.766 44.6973 219.887 43.46 221.603 43.46C222.676 43.46 223.469 43.918 223.79 44.7314H223.913V40.6709H225.096V51H223.954V49.8652H223.824C223.441 50.6855 222.662 51.123 221.603 51.123ZM221.944 50.0635C223.161 50.0635 223.947 49.1885 223.947 47.8145V46.748C223.947 45.3809 223.161 44.5059 221.944 44.5059C220.721 44.5059 219.935 45.3809 219.935 46.748V47.8145C219.935 49.1816 220.721 50.0635 221.944 50.0635ZM234.338 47.165H227.105V46.085H234.338V47.165ZM241.379 49.0859H242.507C242.281 50.3096 241.105 51.1367 239.547 51.1367C237.51 51.1367 236.327 49.9131 236.327 47.8008V46.6865C236.327 44.7314 237.578 43.4463 239.465 43.4463C241.393 43.4463 242.527 44.7246 242.527 46.8711V47.5957H237.476V47.8965C237.476 49.2568 238.282 50.1318 239.547 50.1318C240.483 50.1318 241.174 49.7354 241.379 49.0859ZM239.458 44.4443C238.221 44.4443 237.476 45.292 237.476 46.7139H241.379C241.379 45.2988 240.654 44.4443 239.458 44.4443ZM251.605 45.5381V51H250.56V45.8799C250.56 44.9775 250.231 44.5059 249.609 44.5059C248.96 44.5059 248.563 45.0732 248.563 45.9961V51H247.524V45.873C247.524 44.9775 247.196 44.5059 246.567 44.5059C245.911 44.5059 245.501 45.0732 245.501 45.9961V51H244.455V43.583H245.494V44.6289H245.617C245.802 43.8838 246.335 43.4463 247.032 43.4463C247.729 43.4463 248.222 43.877 248.379 44.6084H248.502C248.693 43.8975 249.288 43.4463 250.033 43.4463C251.065 43.4463 251.605 44.1641 251.605 45.5381ZM253.916 51.041C253.39 51.041 253.103 50.6309 253.103 49.8789C253.103 49.127 253.39 48.71 253.916 48.71C254.449 48.71 254.736 49.127 254.736 49.8789C254.736 50.6309 254.449 51.041 253.916 51.041ZM256.685 51.041C256.158 51.041 255.864 50.6309 255.864 49.8789C255.864 49.127 256.158 48.71 256.685 48.71C257.211 48.71 257.505 49.127 257.505 49.8789C257.505 50.6309 257.211 51.041 256.685 51.041ZM259.453 51.041C258.92 51.041 258.633 50.6309 258.633 49.8789C258.633 49.127 258.92 48.71 259.453 48.71C259.979 48.71 260.267 49.127 260.267 49.8789C260.267 50.6309 259.979 51.041 259.453 51.041Z"
                fill="#525266"
              />
              <g filter="url(#filter0_d_5956_77253)">
                <path d="M44.5 56H43.5V76H44.5V56Z" fill="#525266" />
              </g>
              <path
                d="M56.0332 67.6777V70.0703H58.3301V71H53.4014V70.0703H54.8984V64.5127H53.251V63.583H56.0195V65.4766H56.1699C56.4434 64.1025 57.3662 63.3916 58.7949 63.3916C59.2188 63.3916 59.6221 63.4531 59.8682 63.5557V64.8613C59.5264 64.7383 59.0479 64.6562 58.6445 64.6562C57.0039 64.6562 56.0332 65.791 56.0332 67.6777ZM66.9844 69.0859H68.1123C67.8867 70.3096 66.7109 71.1367 65.1523 71.1367C63.1152 71.1367 61.9326 69.9131 61.9326 67.8008V66.6865C61.9326 64.7314 63.1836 63.4463 65.0703 63.4463C66.998 63.4463 68.1328 64.7246 68.1328 66.8711V67.5957H63.0811V67.8965C63.0811 69.2568 63.8877 70.1318 65.1523 70.1318C66.0889 70.1318 66.7793 69.7354 66.9844 69.0859ZM65.0635 64.4443C63.8262 64.4443 63.0811 65.292 63.0811 66.7139H66.9844C66.9844 65.2988 66.2598 64.4443 65.0635 64.4443ZM72.3711 61.5938H73.5195V63.6035H76.5273V64.5947H73.5332V68.7783C73.5332 69.585 74.1006 70.0225 75.1465 70.0225C75.5635 70.0225 76.3086 70.002 76.5068 69.9814V70.9658C76.3223 71 75.4199 71.0342 75.0645 71.0342C73.2256 71.0342 72.3711 70.3369 72.3711 68.792V64.5947H70.3955V63.6035H72.3711V61.5938ZM85.3252 63.583V71H84.2109V69.6943H84.1152C83.7188 70.6172 82.8711 71.1367 81.7432 71.1367C80.1299 71.1367 79.2549 70.1729 79.2549 68.3955V63.583H80.417V68.1016C80.417 69.4414 80.9639 70.0703 82.1191 70.0703C83.3428 70.0703 84.1631 69.2158 84.1631 67.9512V63.583H85.3252ZM90.6504 67.6777V70.0703H92.9473V71H88.0186V70.0703H89.5156V64.5127H87.8682V63.583H90.6367V65.4766H90.7871C91.0605 64.1025 91.9834 63.3916 93.4121 63.3916C93.8359 63.3916 94.2393 63.4531 94.4854 63.5557V64.8613C94.1436 64.7383 93.665 64.6562 93.2617 64.6562C91.6211 64.6562 90.6504 65.791 90.6504 67.6777ZM96.5635 71V63.583H97.6777V64.8887H97.7734C98.1699 63.9658 99.0176 63.4463 100.146 63.4463C101.759 63.4463 102.634 64.4102 102.634 66.1875V71H101.472V66.4814C101.472 65.1416 100.925 64.5127 99.7695 64.5127C98.5459 64.5127 97.7256 65.3672 97.7256 66.6318V71H96.5635ZM119.573 71.9365H118.644C116.982 71.9365 116.456 71.4102 116.456 69.7217V68.1904C116.456 67.1377 115.841 66.5225 114.241 66.6865V65.4492C115.841 65.6133 116.456 65.0049 116.456 63.9453V62.4141C116.456 60.7256 116.982 60.1992 118.644 60.1992H119.573V61.1357H118.828C117.803 61.1357 117.604 61.375 117.604 62.5645V64.3896C117.604 65.3467 116.887 65.9824 115.499 66.0166V66.126C116.887 66.1533 117.604 66.7891 117.604 67.7461V69.5713C117.604 70.7607 117.803 71 118.828 71H119.573V71.9365Z"
                fill="#525266"
              />
              <g filter="url(#filter1_d_5956_77253)">
                <path d="M44.5 76H43.5V96H44.5V76Z" fill="#525266" />
              </g>
              <g filter="url(#filter2_d_5956_77253)">
                <path d="M60.5 76H59.5V96H60.5V76Z" fill="#525266" />
              </g>
              <path
                d="M69.627 85.5859C69.627 84.3008 70.7207 83.4395 72.3545 83.4395C73.8994 83.4395 74.9453 84.2119 75.082 85.4492H73.9609C73.8242 84.7998 73.2021 84.4033 72.334 84.4033C71.3906 84.4033 70.7822 84.8408 70.7822 85.5176C70.7822 86.085 71.165 86.4062 72.0947 86.6113L73.1406 86.8506C74.583 87.1787 75.2393 87.8076 75.2393 88.8809C75.2393 90.248 74.0977 91.1367 72.3408 91.1367C70.6592 91.1367 69.5449 90.3506 69.415 89.0791H70.5977C70.7686 89.7627 71.4248 90.1592 72.3818 90.1592C73.3936 90.1592 74.0361 89.7012 74.0361 88.9902C74.0361 88.4023 73.6738 88.0879 72.7305 87.876L71.6299 87.623C70.29 87.3154 69.627 86.6387 69.627 85.5859ZM84.0166 83.583V91H82.9023V89.6943H82.8066C82.4102 90.6172 81.5625 91.1367 80.4346 91.1367C78.8213 91.1367 77.9463 90.1729 77.9463 88.3955V83.583H79.1084V88.1016C79.1084 89.4414 79.6553 90.0703 80.8105 90.0703C82.0342 90.0703 82.8545 89.2158 82.8545 87.9512V83.583H84.0166ZM90.1006 91.123C89.041 91.123 88.2617 90.6855 87.8789 89.8652H87.749V91H86.6074V80.6709H87.79V84.7314H87.9131C88.2412 83.918 89.0273 83.46 90.1006 83.46C91.8164 83.46 92.9375 84.6973 92.9375 86.5977V87.9785C92.9375 89.8857 91.8164 91.123 90.1006 91.123ZM89.7588 90.0635C90.9893 90.0635 91.7686 89.1816 91.7686 87.8145V86.748C91.7686 85.3809 90.9893 84.5059 89.7588 84.5059C88.542 84.5059 87.7627 85.3809 87.7627 86.748V87.8145C87.7627 89.1885 88.542 90.0635 89.7588 90.0635ZM99.2676 81.7646C98.7207 81.7646 98.3037 81.3545 98.3037 80.8076C98.3037 80.2676 98.7207 79.8574 99.2676 79.8574C99.8145 79.8574 100.231 80.2676 100.231 80.8076C100.231 81.3545 99.8145 81.7646 99.2676 81.7646ZM99.9375 83.583V90.959C99.9375 92.5996 99.0967 93.249 97.0322 93.249C96.5195 93.249 95.7266 93.2354 95.2344 93.1943V92.1553C95.5898 92.1895 96.5469 92.21 96.998 92.21C98.3789 92.21 98.7959 91.8818 98.7959 90.8223V84.5469H95.4053V83.583H99.9375ZM108.947 89.0859H110.075C109.85 90.3096 108.674 91.1367 107.115 91.1367C105.078 91.1367 103.896 89.9131 103.896 87.8008V86.6865C103.896 84.7314 105.146 83.4463 107.033 83.4463C108.961 83.4463 110.096 84.7246 110.096 86.8711V87.5957H105.044V87.8965C105.044 89.2568 105.851 90.1318 107.115 90.1318C108.052 90.1318 108.742 89.7354 108.947 89.0859ZM107.026 84.4443C105.789 84.4443 105.044 85.292 105.044 86.7139H108.947C108.947 85.2988 108.223 84.4443 107.026 84.4443ZM118.688 85.8936H117.54C117.396 85.0254 116.672 84.4785 115.715 84.4785C114.423 84.4785 113.705 85.3604 113.705 86.9531V87.623C113.705 89.2158 114.423 90.0908 115.715 90.0908C116.672 90.0908 117.396 89.5508 117.54 88.7031H118.688C118.504 90.2139 117.376 91.1367 115.735 91.1367C113.719 91.1367 112.543 89.8994 112.543 87.7734V86.8027C112.543 84.6768 113.719 83.4395 115.735 83.4395C117.376 83.4395 118.497 84.3691 118.688 85.8936ZM122.988 81.5938H124.137V83.6035H127.145V84.5947H124.15V88.7783C124.15 89.585 124.718 90.0225 125.764 90.0225C126.181 90.0225 126.926 90.002 127.124 89.9814V90.9658C126.939 91 126.037 91.0342 125.682 91.0342C123.843 91.0342 122.988 90.3369 122.988 88.792V84.5947H121.013V83.6035H122.988V81.5938ZM132.907 85.791C132.23 85.791 131.67 85.2168 131.67 84.5264C131.67 83.8359 132.23 83.2617 132.907 83.2617C133.584 83.2617 134.145 83.8359 134.145 84.5264C134.145 85.2168 133.584 85.791 132.907 85.791ZM132.907 91.041C132.23 91.041 131.67 90.4736 131.67 89.7764C131.67 89.0859 132.23 88.5186 132.907 88.5186C133.584 88.5186 134.145 89.0859 134.145 89.7764C134.145 90.4736 133.584 91.041 132.907 91.041ZM150.838 85.5859H149.594V81.1357H150.838V85.5859ZM159.472 91H158.269V86.9326L154.98 81.1357H156.327L158.822 85.6475H158.918L161.413 81.1357H162.76L159.472 86.9326V91ZM167.524 91.1367C165.562 91.1367 164.312 89.8584 164.312 87.8555V86.7344C164.312 84.7314 165.562 83.4531 167.524 83.4531C169.486 83.4531 170.737 84.7314 170.737 86.7344V87.8555C170.737 89.8584 169.486 91.1367 167.524 91.1367ZM167.524 84.4785C166.253 84.4785 165.46 85.3809 165.46 86.8369V87.7461C165.46 89.209 166.253 90.1045 167.524 90.1045C168.796 90.1045 169.589 89.209 169.589 87.7461V86.8369C169.589 85.3809 168.796 84.4785 167.524 84.4785ZM179.214 83.583V91H178.1V89.6943H178.004C177.607 90.6172 176.76 91.1367 175.632 91.1367C174.019 91.1367 173.144 90.1729 173.144 88.3955V83.583H174.306V88.1016C174.306 89.4414 174.853 90.0703 176.008 90.0703C177.231 90.0703 178.052 89.2158 178.052 87.9512V83.583H179.214ZM193.193 87.6777V90.0703H195.49V91H190.562V90.0703H192.059V84.5127H190.411V83.583H193.18V85.4766H193.33C193.604 84.1025 194.526 83.3916 195.955 83.3916C196.379 83.3916 196.782 83.4531 197.028 83.5557V84.8613C196.687 84.7383 196.208 84.6562 195.805 84.6562C194.164 84.6562 193.193 85.791 193.193 87.6777ZM204.145 89.0859H205.272C205.047 90.3096 203.871 91.1367 202.312 91.1367C200.275 91.1367 199.093 89.9131 199.093 87.8008V86.6865C199.093 84.7314 200.344 83.4463 202.23 83.4463C204.158 83.4463 205.293 84.7246 205.293 86.8711V87.5957H200.241V87.8965C200.241 89.2568 201.048 90.1318 202.312 90.1318C203.249 90.1318 203.939 89.7354 204.145 89.0859ZM202.224 84.4443C200.986 84.4443 200.241 85.292 200.241 86.7139H204.145C204.145 85.2988 203.42 84.4443 202.224 84.4443ZM213.886 85.8936H212.737C212.594 85.0254 211.869 84.4785 210.912 84.4785C209.62 84.4785 208.902 85.3604 208.902 86.9531V87.623C208.902 89.2158 209.62 90.0908 210.912 90.0908C211.869 90.0908 212.594 89.5508 212.737 88.7031H213.886C213.701 90.2139 212.573 91.1367 210.933 91.1367C208.916 91.1367 207.74 89.8994 207.74 87.7734V86.8027C207.74 84.6768 208.916 83.4395 210.933 83.4395C212.573 83.4395 213.694 84.3691 213.886 85.8936ZM221.453 89.0859H222.581C222.355 90.3096 221.18 91.1367 219.621 91.1367C217.584 91.1367 216.401 89.9131 216.401 87.8008V86.6865C216.401 84.7314 217.652 83.4463 219.539 83.4463C221.467 83.4463 222.602 84.7246 222.602 86.8711V87.5957H217.55V87.8965C217.55 89.2568 218.356 90.1318 219.621 90.1318C220.558 90.1318 221.248 89.7354 221.453 89.0859ZM219.532 84.4443C218.295 84.4443 217.55 85.292 217.55 86.7139H221.453C221.453 85.2988 220.729 84.4443 219.532 84.4443ZM228.234 81.7646C227.688 81.7646 227.271 81.3545 227.271 80.8076C227.271 80.2676 227.688 79.8574 228.234 79.8574C228.781 79.8574 229.198 80.2676 229.198 80.8076C229.198 81.3545 228.781 81.7646 228.234 81.7646ZM231.345 91H225.199V90.0361H227.742V84.5469H225.22V83.583H228.891V90.0361H231.345V91ZM233.409 83.583H234.653L236.725 89.7559H236.813L238.871 83.583H240.108L237.401 91H236.123L233.409 83.583ZM247.416 89.0859H248.544C248.318 90.3096 247.143 91.1367 245.584 91.1367C243.547 91.1367 242.364 89.9131 242.364 87.8008V86.6865C242.364 84.7314 243.615 83.4463 245.502 83.4463C247.43 83.4463 248.564 84.7246 248.564 86.8711V87.5957H243.513V87.8965C243.513 89.2568 244.319 90.1318 245.584 90.1318C246.521 90.1318 247.211 89.7354 247.416 89.0859ZM245.495 84.4443C244.258 84.4443 243.513 85.292 243.513 86.7139H247.416C247.416 85.2988 246.691 84.4443 245.495 84.4443ZM251.299 91.041C250.772 91.041 250.485 90.6309 250.485 89.8789C250.485 89.127 250.772 88.71 251.299 88.71C251.832 88.71 252.119 89.127 252.119 89.8789C252.119 90.6309 251.832 91.041 251.299 91.041ZM254.067 91.041C253.541 91.041 253.247 90.6309 253.247 89.8789C253.247 89.127 253.541 88.71 254.067 88.71C254.594 88.71 254.888 89.127 254.888 89.8789C254.888 90.6309 254.594 91.041 254.067 91.041ZM256.836 91.041C256.303 91.041 256.016 90.6309 256.016 89.8789C256.016 89.127 256.303 88.71 256.836 88.71C257.362 88.71 257.649 89.127 257.649 89.8789C257.649 90.6309 257.362 91.041 256.836 91.041Z"
                fill="#525266"
              />
              <g filter="url(#filter3_d_5956_77253)">
                <path d="M44.5 96H43.5V116H44.5V96Z" fill="#525266" />
              </g>
              <g filter="url(#filter4_d_5956_77253)">
                <path d="M60.5 96H59.5V116H60.5V96Z" fill="#525266" />
              </g>
              <g filter="url(#filter5_d_5956_77253)">
                <path d="M76.5 96H75.5V116H76.5V96Z" fill="#525266" />
              </g>
              <path
                d="M88.792 111.123C87.7324 111.123 86.9531 110.686 86.5703 109.865H86.4404V111H85.2988V100.671H86.4814V104.731H86.6045C86.9326 103.918 87.7188 103.46 88.792 103.46C90.5078 103.46 91.6289 104.697 91.6289 106.598V107.979C91.6289 109.886 90.5078 111.123 88.792 111.123ZM88.4502 110.063C89.6807 110.063 90.46 109.182 90.46 107.814V106.748C90.46 105.381 89.6807 104.506 88.4502 104.506C87.2334 104.506 86.4541 105.381 86.4541 106.748V107.814C86.4541 109.188 87.2334 110.063 88.4502 110.063ZM96.9814 111.137C95.0195 111.137 93.7686 109.858 93.7686 107.855V106.734C93.7686 104.731 95.0195 103.453 96.9814 103.453C98.9434 103.453 100.194 104.731 100.194 106.734V107.855C100.194 109.858 98.9434 111.137 96.9814 111.137ZM96.9814 104.479C95.71 104.479 94.917 105.381 94.917 106.837V107.746C94.917 109.209 95.71 110.104 96.9814 110.104C98.2529 110.104 99.0459 109.209 99.0459 107.746V106.837C99.0459 105.381 98.2529 104.479 96.9814 104.479ZM105.171 111.123C103.455 111.123 102.334 109.886 102.334 107.979V106.598C102.334 104.697 103.455 103.46 105.171 103.46C106.244 103.46 107.037 103.918 107.358 104.731H107.481V100.671H108.664V111H107.522V109.865H107.393C107.01 110.686 106.23 111.123 105.171 111.123ZM105.513 110.063C106.729 110.063 107.516 109.188 107.516 107.814V106.748C107.516 105.381 106.729 104.506 105.513 104.506C104.289 104.506 103.503 105.381 103.503 106.748V107.814C103.503 109.182 104.289 110.063 105.513 110.063ZM112.212 113.639C112.041 113.639 111.815 113.632 111.713 113.618V112.6C111.802 112.62 112.014 112.627 112.123 112.627C112.82 112.627 113.203 112.312 113.511 111.451L113.641 111.048L110.913 103.583H112.178L114.256 109.79H114.345L116.416 103.583H117.653L114.857 111.273C114.208 113.099 113.586 113.639 112.212 113.639ZM122.944 105.791C122.268 105.791 121.707 105.217 121.707 104.526C121.707 103.836 122.268 103.262 122.944 103.262C123.621 103.262 124.182 103.836 124.182 104.526C124.182 105.217 123.621 105.791 122.944 105.791ZM122.944 111.041C122.268 111.041 121.707 110.474 121.707 109.776C121.707 109.086 122.268 108.519 122.944 108.519C123.621 108.519 124.182 109.086 124.182 109.776C124.182 110.474 123.621 111.041 122.944 111.041ZM141.777 102.141H140.54L138.729 99.8232H140.144L141.777 102.141ZM151.847 103.959L147.144 106.563V106.687L151.847 109.291V110.597L145.968 107.131V106.119L151.847 102.653V103.959ZM154.52 111V100.671H155.641V104.896H155.736C156.126 103.973 156.98 103.453 158.115 103.453C159.729 103.453 160.604 104.424 160.604 106.194V111H159.441V106.488C159.441 105.155 158.895 104.52 157.732 104.52C156.509 104.52 155.682 105.374 155.682 106.639V111H154.52ZM164.951 101.594H166.1V103.604H169.107V104.595H166.113V108.778C166.113 109.585 166.681 110.022 167.727 110.022C168.144 110.022 168.889 110.002 169.087 109.981V110.966C168.902 111 168 111.034 167.645 111.034C165.806 111.034 164.951 110.337 164.951 108.792V104.595H162.976V103.604H164.951V101.594ZM178.445 105.538V111H177.399V105.88C177.399 104.978 177.071 104.506 176.449 104.506C175.8 104.506 175.403 105.073 175.403 105.996V111H174.364V105.873C174.364 104.978 174.036 104.506 173.407 104.506C172.751 104.506 172.341 105.073 172.341 105.996V111H171.295V103.583H172.334V104.629H172.457C172.642 103.884 173.175 103.446 173.872 103.446C174.569 103.446 175.062 103.877 175.219 104.608H175.342C175.533 103.897 176.128 103.446 176.873 103.446C177.905 103.446 178.445 104.164 178.445 105.538ZM186.765 111H180.619V110.036H183.155V101.635H180.64V100.671H184.317V110.036H186.765V111ZM189.239 103.959V102.653L195.118 106.119V107.131L189.239 110.597V109.291L193.936 106.687V106.563L189.239 103.959ZM203.772 103.959L199.069 106.563V106.687L203.772 109.291V110.597L197.894 107.131V106.119L203.772 102.653V103.959ZM209.952 111.123C208.893 111.123 208.113 110.686 207.73 109.865H207.601V111H206.459V100.671H207.642V104.731H207.765C208.093 103.918 208.879 103.46 209.952 103.46C211.668 103.46 212.789 104.697 212.789 106.598V107.979C212.789 109.886 211.668 111.123 209.952 111.123ZM209.61 110.063C210.841 110.063 211.62 109.182 211.62 107.814V106.748C211.62 105.381 210.841 104.506 209.61 104.506C208.394 104.506 207.614 105.381 207.614 106.748V107.814C207.614 109.188 208.394 110.063 209.61 110.063ZM218.142 111.137C216.18 111.137 214.929 109.858 214.929 107.855V106.734C214.929 104.731 216.18 103.453 218.142 103.453C220.104 103.453 221.354 104.731 221.354 106.734V107.855C221.354 109.858 220.104 111.137 218.142 111.137ZM218.142 104.479C216.87 104.479 216.077 105.381 216.077 106.837V107.746C216.077 109.209 216.87 110.104 218.142 110.104C219.413 110.104 220.206 109.209 220.206 107.746V106.837C220.206 105.381 219.413 104.479 218.142 104.479ZM226.331 111.123C224.615 111.123 223.494 109.886 223.494 107.979V106.598C223.494 104.697 224.615 103.46 226.331 103.46C227.404 103.46 228.197 103.918 228.519 104.731H228.642V100.671H229.824V111H228.683V109.865H228.553C228.17 110.686 227.391 111.123 226.331 111.123ZM226.673 110.063C227.89 110.063 228.676 109.188 228.676 107.814V106.748C228.676 105.381 227.89 104.506 226.673 104.506C225.449 104.506 224.663 105.381 224.663 106.748V107.814C224.663 109.182 225.449 110.063 226.673 110.063ZM233.372 113.639C233.201 113.639 232.976 113.632 232.873 113.618V112.6C232.962 112.62 233.174 112.627 233.283 112.627C233.98 112.627 234.363 112.312 234.671 111.451L234.801 111.048L232.073 103.583H233.338L235.416 109.79H235.505L237.576 103.583H238.813L236.018 111.273C235.368 113.099 234.746 113.639 233.372 113.639ZM241.165 103.959V102.653L247.044 106.119V107.131L241.165 110.597V109.291L245.861 106.687V106.563L241.165 103.959ZM249.99 111.041C249.464 111.041 249.177 110.631 249.177 109.879C249.177 109.127 249.464 108.71 249.99 108.71C250.523 108.71 250.811 109.127 250.811 109.879C250.811 110.631 250.523 111.041 249.99 111.041ZM252.759 111.041C252.232 111.041 251.938 110.631 251.938 109.879C251.938 109.127 252.232 108.71 252.759 108.71C253.285 108.71 253.579 109.127 253.579 109.879C253.579 110.631 253.285 111.041 252.759 111.041ZM255.527 111.041C254.994 111.041 254.707 110.631 254.707 109.879C254.707 109.127 254.994 108.71 255.527 108.71C256.054 108.71 256.341 109.127 256.341 109.879C256.341 110.631 256.054 111.041 255.527 111.041Z"
                fill="#525266"
              />
              <g filter="url(#filter6_d_5956_77253)">
                <path d="M44.5 116H43.5V136H44.5V116Z" fill="#525266" />
              </g>
              <g filter="url(#filter7_d_5956_77253)">
                <path d="M60.5 116H59.5V136H60.5V116Z" fill="#525266" />
              </g>
              <path
                d="M69.6611 131.937V131H70.4062C71.4316 131 71.6299 130.761 71.6299 129.571V127.746C71.6299 126.789 72.3477 126.153 73.7354 126.126V126.017C72.3477 125.982 71.6299 125.347 71.6299 124.39V122.564C71.6299 121.375 71.4316 121.136 70.4062 121.136H69.6611V120.199H70.5908C72.252 120.199 72.7783 120.726 72.7783 122.414V123.945C72.7783 125.005 73.3936 125.613 74.9932 125.449V126.687C73.3936 126.522 72.7783 127.138 72.7783 128.19V129.722C72.7783 131.41 72.252 131.937 70.5908 131.937H69.6611Z"
                fill="#525266"
              />
              <g filter="url(#filter8_d_5956_77253)">
                <path d="M44.5 136H43.5V156H44.5V136Z" fill="#525266" />
              </g>
              <path
                d="M53.6611 151.937V151H54.4062C55.4316 151 55.6299 150.761 55.6299 149.571V147.746C55.6299 146.789 56.3477 146.153 57.7354 146.126V146.017C56.3477 145.982 55.6299 145.347 55.6299 144.39V142.564C55.6299 141.375 55.4316 141.136 54.4062 141.136H53.6611V140.199H54.5908C56.252 140.199 56.7783 140.726 56.7783 142.414V143.945C56.7783 145.005 57.3936 145.613 58.9932 145.449V146.687C57.3936 146.522 56.7783 147.138 56.7783 148.19V149.722C56.7783 151.41 56.252 151.937 54.5908 151.937H53.6611Z"
                fill="#525266"
              />
              <path
                d="M37.6611 171.937V171H38.4062C39.4316 171 39.6299 170.761 39.6299 169.571V167.746C39.6299 166.789 40.3477 166.153 41.7354 166.126V166.017C40.3477 165.982 39.6299 165.347 39.6299 164.39V162.564C39.6299 161.375 39.4316 161.136 38.4062 161.136H37.6611V160.199H38.5908C40.252 160.199 40.7783 160.726 40.7783 162.414V163.945C40.7783 165.005 41.3936 165.613 42.9932 165.449V166.687C41.3936 166.522 40.7783 167.138 40.7783 168.19V169.722C40.7783 171.41 40.252 171.937 38.5908 171.937H37.6611Z"
                fill="#525266"
              />
            </g>
          </g>
          <path
            d="M0 12C0 5.37258 5.37258 0 12 0H268C274.627 0 280 5.37258 280 12V168C280 174.627 274.627 180 268 180H12C5.37259 180 0 174.627 0 168V12Z"
            fill="url(#paint0_linear_5956_77253)"
          />
          <path
            d="M155.017 100C150.25 105.129 152.158 113.45 158.684 115.988L169 120"
            stroke="#525266"
            strokeDasharray="3 3"
          />
          <g filter="url(#filter9_d_5956_77253)">
            <path
              d="M252 116H132C127.582 116 124 119.582 124 124V152C124 156.418 127.582 160 132 160H252C256.418 160 260 156.418 260 152V124C260 119.582 256.418 116 252 116Z"
              fill="#23232B"
            />
            <path
              d="M154.667 134C154.667 133.267 154.067 132.667 153.333 132.667H142.667C141.933 132.667 141.333 133.267 141.333 134V142C141.333 142.733 141.933 143.333 142.667 143.333H153.333C154.067 143.333 154.667 142.733 154.667 142V134ZM153.333 134L148 137.333L142.667 134H153.333ZM153.333 142H142.667V135.333L148 138.667L153.333 135.333V142Z"
              fill="#525266"
            />
            <path
              d="M161.043 142V133.545H166.516V134.816H162.555V137.107H166.299V138.309H162.555V140.729H166.516V142H161.043ZM168.238 142V135.596H169.697V136.592H169.797C170.072 135.877 170.717 135.473 171.555 135.473C172.422 135.473 173.055 135.918 173.33 136.627H173.43C173.74 135.93 174.479 135.473 175.369 135.473C176.658 135.473 177.432 136.264 177.432 137.594V142H175.973V137.951C175.973 137.119 175.592 136.697 174.812 136.697C174.051 136.697 173.559 137.266 173.559 137.998V142H172.1V137.846C172.1 137.137 171.66 136.697 170.945 136.697C170.225 136.697 169.697 137.307 169.697 138.104V142H168.238ZM180.906 142.105C179.688 142.105 178.803 141.355 178.803 140.189V140.178C178.803 139.035 179.676 138.367 181.234 138.273L182.881 138.174V137.623C182.881 136.984 182.465 136.633 181.68 136.633C181.012 136.633 180.578 136.873 180.432 137.295L180.426 137.318H179.049L179.055 137.266C179.195 136.188 180.227 135.473 181.75 135.473C183.396 135.473 184.322 136.27 184.322 137.623V142H182.881V141.121H182.781C182.43 141.742 181.75 142.105 180.906 142.105ZM180.244 140.119C180.244 140.664 180.707 140.986 181.352 140.986C182.23 140.986 182.881 140.412 182.881 139.65V139.135L181.439 139.229C180.625 139.281 180.244 139.58 180.244 140.107V140.119ZM186.824 134.523C186.344 134.523 185.951 134.143 185.951 133.662C185.951 133.188 186.344 132.801 186.824 132.801C187.299 132.801 187.691 133.188 187.691 133.662C187.691 134.143 187.299 134.523 186.824 134.523ZM186.092 142V135.596H187.551V142H186.092ZM189.402 142V133.117H190.861V142H189.402ZM195.906 142V135.596H197.365V136.592H197.465C197.74 135.877 198.385 135.473 199.223 135.473C200.09 135.473 200.723 135.918 200.998 136.627H201.098C201.408 135.93 202.146 135.473 203.037 135.473C204.326 135.473 205.1 136.264 205.1 137.594V142H203.641V137.951C203.641 137.119 203.26 136.697 202.48 136.697C201.719 136.697 201.227 137.266 201.227 137.998V142H199.768V137.846C199.768 137.137 199.328 136.697 198.613 136.697C197.893 136.697 197.365 137.307 197.365 138.104V142H195.906ZM209.57 142.129C207.666 142.129 206.512 140.852 206.512 138.812V138.807C206.512 136.791 207.678 135.473 209.5 135.473C211.322 135.473 212.447 136.75 212.447 138.684V139.164H207.971C207.988 140.312 208.609 140.98 209.6 140.98C210.391 140.98 210.842 140.582 210.982 140.289L211 140.248H212.389L212.371 140.301C212.166 141.127 211.311 142.129 209.57 142.129ZM209.518 136.615C208.703 136.615 208.094 137.166 207.982 138.186H211.023C210.924 137.137 210.332 136.615 209.518 136.615ZM216.326 142.129C214.697 142.129 213.713 141.379 213.59 140.295V140.283H215.037L215.043 140.295C215.195 140.74 215.623 141.051 216.35 141.051C217.076 141.051 217.58 140.723 217.58 140.242V140.23C217.58 139.855 217.299 139.609 216.596 139.451L215.559 139.217C214.34 138.947 213.76 138.373 213.76 137.43V137.424C213.76 136.27 214.814 135.473 216.326 135.473C217.885 135.473 218.816 136.246 218.91 137.283V137.295H217.539L217.533 137.277C217.428 136.873 217.006 136.545 216.32 136.545C215.67 136.545 215.201 136.861 215.201 137.342V137.348C215.201 137.723 215.471 137.951 216.162 138.109L217.199 138.338C218.453 138.619 219.045 139.152 219.045 140.084V140.096C219.045 141.314 217.902 142.129 216.326 142.129ZM222.818 142.129C221.189 142.129 220.205 141.379 220.082 140.295V140.283H221.529L221.535 140.295C221.688 140.74 222.115 141.051 222.842 141.051C223.568 141.051 224.072 140.723 224.072 140.242V140.23C224.072 139.855 223.791 139.609 223.088 139.451L222.051 139.217C220.832 138.947 220.252 138.373 220.252 137.43V137.424C220.252 136.27 221.307 135.473 222.818 135.473C224.377 135.473 225.309 136.246 225.402 137.283V137.295H224.031L224.025 137.277C223.92 136.873 223.498 136.545 222.812 136.545C222.162 136.545 221.693 136.861 221.693 137.342V137.348C221.693 137.723 221.963 137.951 222.654 138.109L223.691 138.338C224.945 138.619 225.537 139.152 225.537 140.084V140.096C225.537 141.314 224.395 142.129 222.818 142.129ZM228.754 142.105C227.535 142.105 226.65 141.355 226.65 140.189V140.178C226.65 139.035 227.523 138.367 229.082 138.273L230.729 138.174V137.623C230.729 136.984 230.312 136.633 229.527 136.633C228.859 136.633 228.426 136.873 228.279 137.295L228.273 137.318H226.896L226.902 137.266C227.043 136.188 228.074 135.473 229.598 135.473C231.244 135.473 232.17 136.27 232.17 137.623V142H230.729V141.121H230.629C230.277 141.742 229.598 142.105 228.754 142.105ZM228.092 140.119C228.092 140.664 228.555 140.986 229.199 140.986C230.078 140.986 230.729 140.412 230.729 139.65V139.135L229.287 139.229C228.473 139.281 228.092 139.58 228.092 140.107V140.119ZM236.676 144.25C234.988 144.25 233.975 143.529 233.828 142.451L233.834 142.434H235.293L235.299 142.451C235.398 142.861 235.885 143.148 236.699 143.148C237.695 143.148 238.275 142.686 238.275 141.865V140.641H238.176C237.807 141.326 237.109 141.701 236.225 141.701C234.602 141.701 233.594 140.447 233.594 138.631V138.619C233.594 136.768 234.602 135.49 236.254 135.49C237.139 135.49 237.83 135.924 238.193 136.65H238.27V135.596H239.729V141.842C239.729 143.318 238.545 144.25 236.676 144.25ZM236.676 140.541C237.689 140.541 238.299 139.762 238.299 138.631V138.619C238.299 137.488 237.684 136.703 236.676 136.703C235.662 136.703 235.088 137.488 235.088 138.619V138.631C235.088 139.762 235.662 140.541 236.676 140.541ZM244.258 142.129C242.354 142.129 241.199 140.852 241.199 138.812V138.807C241.199 136.791 242.365 135.473 244.188 135.473C246.01 135.473 247.135 136.75 247.135 138.684V139.164H242.658C242.676 140.312 243.297 140.98 244.287 140.98C245.078 140.98 245.529 140.582 245.67 140.289L245.688 140.248H247.076L247.059 140.301C246.854 141.127 245.998 142.129 244.258 142.129ZM244.205 136.615C243.391 136.615 242.781 137.166 242.67 138.186H245.711C245.611 137.137 245.02 136.615 244.205 136.615Z"
              fill="#525266"
            />
          </g>
          <g filter="url(#filter10_d_5956_77253)">
            <path
              d="M227 56H92C87.5817 56 84 59.5817 84 64V92C84 96.4183 87.5817 100 92 100H227C231.418 100 235 96.4183 235 92V64C235 59.5817 231.418 56 227 56Z"
              fill="#23232B"
            />
            <path
              d="M107.333 84H106.667L107.333 79.3333H105C104.613 79.3333 104.62 79.12 104.747 78.8933C104.873 78.6667 104.78 78.84 104.793 78.8133C105.653 77.2933 106.947 75.0267 108.667 72H109.333L108.667 76.6667H111C111.327 76.6667 111.373 76.8867 111.313 77.0067L111.267 77.1067C108.64 81.7 107.333 84 107.333 84Z"
              fill="#525266"
            />
            <path
              d="M122.783 82L120.516 73.5449H122.092L123.539 79.8906H123.627L125.291 73.5449H126.633L128.32 79.8906H128.402L129.85 73.5449H131.414L129.146 82H127.729L126.006 75.9473H125.918L124.207 82H122.783ZM134.918 82.1289C132.996 82.1289 131.836 80.875 131.836 78.8008V78.7891C131.836 76.7324 133.014 75.4727 134.918 75.4727C136.828 75.4727 138 76.7266 138 78.7891V78.8008C138 80.875 136.834 82.1289 134.918 82.1289ZM134.918 80.9453C135.932 80.9453 136.506 80.1543 136.506 78.8066V78.7949C136.506 77.4473 135.926 76.6504 134.918 76.6504C133.904 76.6504 133.324 77.4473 133.324 78.7949V78.8066C133.324 80.1543 133.904 80.9453 134.918 80.9453ZM139.465 82V75.5957H140.924V76.5801H141.023C141.24 75.8945 141.826 75.4902 142.67 75.4902C142.893 75.4902 143.121 75.5195 143.262 75.5605V76.8672C143.027 76.8203 142.787 76.7852 142.535 76.7852C141.562 76.7852 140.924 77.3652 140.924 78.2793V82H139.465ZM144.516 82V73.1172H145.975V78.2207H146.074L148.436 75.5957H150.123L147.545 78.3027L150.299 82H148.541L146.484 79.2285L145.975 79.75V82H144.516ZM151.805 82V76.7266H150.756V75.5957H151.805V74.9629C151.805 73.6855 152.455 73.0586 153.879 73.0586C154.189 73.0586 154.453 73.0762 154.688 73.1172V74.1367C154.576 74.1191 154.395 74.1074 154.189 74.1074C153.504 74.1074 153.24 74.4355 153.24 75.0449V75.5957H154.629V76.7266H153.264V82H151.805ZM156.094 82V73.1172H157.553V82H156.094ZM162.164 82.1289C160.242 82.1289 159.082 80.875 159.082 78.8008V78.7891C159.082 76.7324 160.26 75.4727 162.164 75.4727C164.074 75.4727 165.246 76.7266 165.246 78.7891V78.8008C165.246 80.875 164.08 82.1289 162.164 82.1289ZM162.164 80.9453C163.178 80.9453 163.752 80.1543 163.752 78.8066V78.7949C163.752 77.4473 163.172 76.6504 162.164 76.6504C161.15 76.6504 160.57 77.4473 160.57 78.7949V78.8066C160.57 80.1543 161.15 80.9453 162.164 80.9453ZM167.672 82L165.938 75.5957H167.402L168.469 80.4062H168.568L169.799 75.5957H171.188L172.43 80.4062H172.529L173.59 75.5957H175.037L173.303 82H171.773L170.525 77.3594H170.426L169.184 82H167.672ZM182.027 82.0293C180.557 82.0293 179.953 81.5371 179.953 80.3008V76.7266H178.957V75.5957H179.953V74.0254H181.436V75.5957H182.789V76.7266H181.436V79.9551C181.436 80.5938 181.688 80.8633 182.297 80.8633C182.502 80.8633 182.613 80.8574 182.789 80.8398V81.9648C182.578 82.0059 182.309 82.0293 182.027 82.0293ZM184.242 82V75.5957H185.701V76.5801H185.801C186.018 75.8945 186.604 75.4902 187.447 75.4902C187.67 75.4902 187.898 75.5195 188.039 75.5605V76.8672C187.805 76.8203 187.564 76.7852 187.312 76.7852C186.34 76.7852 185.701 77.3652 185.701 78.2793V82H184.242ZM189.984 74.5234C189.504 74.5234 189.111 74.1426 189.111 73.6621C189.111 73.1875 189.504 72.8008 189.984 72.8008C190.459 72.8008 190.852 73.1875 190.852 73.6621C190.852 74.1426 190.459 74.5234 189.984 74.5234ZM189.252 82V75.5957H190.711V82H189.252ZM195.258 84.25C193.57 84.25 192.557 83.5293 192.41 82.4512L192.416 82.4336H193.875L193.881 82.4512C193.98 82.8613 194.467 83.1484 195.281 83.1484C196.277 83.1484 196.857 82.6855 196.857 81.8652V80.6406H196.758C196.389 81.3262 195.691 81.7012 194.807 81.7012C193.184 81.7012 192.176 80.4473 192.176 78.6309V78.6191C192.176 76.7676 193.184 75.4902 194.836 75.4902C195.721 75.4902 196.412 75.9238 196.775 76.6504H196.852V75.5957H198.311V81.8418C198.311 83.3184 197.127 84.25 195.258 84.25ZM195.258 80.541C196.271 80.541 196.881 79.7617 196.881 78.6309V78.6191C196.881 77.4883 196.266 76.7031 195.258 76.7031C194.244 76.7031 193.67 77.4883 193.67 78.6191V78.6309C193.67 79.7617 194.244 80.541 195.258 80.541ZM202.852 84.25C201.164 84.25 200.15 83.5293 200.004 82.4512L200.01 82.4336H201.469L201.475 82.4512C201.574 82.8613 202.061 83.1484 202.875 83.1484C203.871 83.1484 204.451 82.6855 204.451 81.8652V80.6406H204.352C203.982 81.3262 203.285 81.7012 202.4 81.7012C200.777 81.7012 199.77 80.4473 199.77 78.6309V78.6191C199.77 76.7676 200.777 75.4902 202.43 75.4902C203.314 75.4902 204.006 75.9238 204.369 76.6504H204.445V75.5957H205.904V81.8418C205.904 83.3184 204.721 84.25 202.852 84.25ZM202.852 80.541C203.865 80.541 204.475 79.7617 204.475 78.6309V78.6191C204.475 77.4883 203.859 76.7031 202.852 76.7031C201.838 76.7031 201.264 77.4883 201.264 78.6191V78.6309C201.264 79.7617 201.838 80.541 202.852 80.541ZM210.434 82.1289C208.529 82.1289 207.375 80.8516 207.375 78.8125V78.8066C207.375 76.791 208.541 75.4727 210.363 75.4727C212.186 75.4727 213.311 76.75 213.311 78.6836V79.1641H208.834C208.852 80.3125 209.473 80.9805 210.463 80.9805C211.254 80.9805 211.705 80.582 211.846 80.2891L211.863 80.248H213.252L213.234 80.3008C213.029 81.127 212.174 82.1289 210.434 82.1289ZM210.381 76.6152C209.566 76.6152 208.957 77.166 208.846 78.1855H211.887C211.787 77.1367 211.195 76.6152 210.381 76.6152ZM214.77 82V75.5957H216.229V76.5801H216.328C216.545 75.8945 217.131 75.4902 217.975 75.4902C218.197 75.4902 218.426 75.5195 218.566 75.5605V76.8672C218.332 76.8203 218.092 76.7852 217.84 76.7852C216.867 76.7852 216.229 77.3652 216.229 78.2793V82H214.77Z"
              fill="#525266"
            />
          </g>
        </g>
      </g>
      <defs>
        <filter
          id="filter0_d_5956_77253"
          x="23.5"
          y="41"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_77253" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_77253" result="shape" />
        </filter>
        <filter
          id="filter1_d_5956_77253"
          x="23.5"
          y="61"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_77253" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_77253" result="shape" />
        </filter>
        <filter
          id="filter2_d_5956_77253"
          x="39.5"
          y="61"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_77253" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_77253" result="shape" />
        </filter>
        <filter
          id="filter3_d_5956_77253"
          x="23.5"
          y="81"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_77253" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_77253" result="shape" />
        </filter>
        <filter
          id="filter4_d_5956_77253"
          x="39.5"
          y="81"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_77253" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_77253" result="shape" />
        </filter>
        <filter
          id="filter5_d_5956_77253"
          x="55.5"
          y="81"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_77253" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_77253" result="shape" />
        </filter>
        <filter
          id="filter6_d_5956_77253"
          x="23.5"
          y="101"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_77253" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_77253" result="shape" />
        </filter>
        <filter
          id="filter7_d_5956_77253"
          x="39.5"
          y="101"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_77253" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_77253" result="shape" />
        </filter>
        <filter
          id="filter8_d_5956_77253"
          x="23.5"
          y="121"
          width="41"
          height="60"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_77253" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_77253" result="shape" />
        </filter>
        <filter
          id="filter9_d_5956_77253"
          x="104"
          y="101"
          width="176"
          height="84"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_77253" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_77253" result="shape" />
        </filter>
        <filter
          id="filter10_d_5956_77253"
          x="64"
          y="41"
          width="191"
          height="84"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="5" />
          <feGaussianBlur stdDeviation="10" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0" />
          <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5956_77253" />
          <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5956_77253" result="shape" />
        </filter>
        <linearGradient
          id="paint0_linear_5956_77253"
          x1="0"
          y1="0"
          x2="163.744"
          y2="254.731"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor="#1E1E26" stopOpacity="0" />
          <stop offset="0.625985" stopColor="#1E1E26" />
        </linearGradient>
        <clipPath id="clip0_5956_77253">
          <rect width="280" height="180" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useColorScheme } from '@novu/design-system';
export const Ide = () => {
const { colorScheme } = useColorScheme();
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/GetStartedPageV2/index.tsx
Tamaño: 12078 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Text, Title } from '@novu/novui';
import { css, cx } from '@novu/novui/css';
import {
  IconEditNote,
  IconFolderOpen,
  IconGroupAdd,
  IconLaptopMac,
  IconOutlineMenuBook,
  IconOutlineRocketLaunch,
  IconType,
} from '@novu/novui/icons';
import { HStack, styled, VStack } from '@novu/novui/jsx';
import { text as textRecipe } from '@novu/novui/recipes';
import { ReactNode, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { ROUTES } from '../../../constants/routes';
import { useTelemetry } from '../../../hooks/useNovuAPI';
import { CodeSnippet } from '../../../pages/studio-onboarding/components/CodeSnippet';
import { PageContainer } from '../../layout/PageContainer';
import { Development } from './Development';
import { GithubAction } from './GithubAction';
import { Ide } from './ide';

const Link = styled('a', textRecipe);

const BadgeButton = ({
  children,
  onClick,
  className,
}: {
  children: ReactNode;
  onClick: () => void;
  className?: string;
}) => {
  return (
    <Link
      className={cx(
        css({
          color: {
            _dark: 'legacy.BGLight !important',
            base: 'legacy.B20 !important',
          },
          backgroundColor: {
            base: 'legacy.BGLight !important',
            _dark: 'legacy.B20 !important',
          },
          padding: '25',
          paddingLeft: '50',
          paddingRight: '50',
          fontSize: '75',
          borderRadius: 's',
          cursor: 'pointer',
          lineHeight: 'sm',
          fontWeight: 600,
        }),
        className
      )}
      href="#"
      onClick={(e) => {
        e.preventDefault();
        onClick();
      }}
    >
      <HStack gap="25">{children}</HStack>
    </Link>
  );
};

const SkipCTA = ({
  text,
  buttonText,
  onClick,
  Icon,
}: {
  text: string;
  buttonText: string;
  onClick: () => void;
  Icon?: any;
}) => (
  <HStack gap="50" className={css({ justifyContent: 'center', marginTop: 'margins.layout.page.content-buttons' })}>
    <Text
      className={css({
        color: 'typography.text.secondary',
      })}
    >
      {text}
    </Text>

    <BadgeButton onClick={onClick}>
      {Icon && (
        <Icon
          size={'16'}
          className={css({
            color: {
              _dark: 'legacy.BGLight !important',
              base: 'legacy.B20 !important',
            },
          })}
        />
      )}{' '}
      <span>{buttonText}</span>
    </BadgeButton>
  </HStack>
);

export const GetStartedPageV2 = ({ location }: { location: 'onboarding' | 'get-started' }) => {
  const track = useTelemetry();
  const navigate = useNavigate();

  useEffect(() => {
    track('Get Started page visited - [Get started - V2]', { location });
  }, []);

  return (
    <PageContainer className={css({ h: '100vh' })}>
      <VStack
        className={css({
          justifyContent: 'center',
          width: '100%',
        })}
      >
        <div className={css({ width: '960px' })}>
          <Title
            className={css({
              marginBottom: '250',
            })}
            textAlign="center"
          >
            Send your first notification in less than 4 minutes
          </Title>
          <HStack
            className={css({
              marginBottom: '60px',
              flexWrap: 'wrap',
            })}
          >
            <VStack
              className={css({
                width: '100%',
                alignItems: 'center',
              })}
              gap="50"
            >
              <div className={css({ width: '600px' })}>
                <HStack
                  className={css({
                    justifyContent: 'space-between',
                    marginBottom: '100',
                  })}
                >
                  <Title variant="subsection">Run in your terminal to get started</Title>

                  <Link
                    className={css({
                      color: 'typography.text.secondary !important',
                    })}
                    onClick={() => {
                      track('Main docs link clicked - [Workflows empty state]');
                    }}
                    href="https://docs.novu.co/"
                    target="_blank"
                  >
                    <HStack gap="25">
                      <IconOutlineMenuBook size={16} /> <span>Learn more</span>
                    </HStack>
                  </Link>
                </HStack>
                <div
                  className={css({
                    width: '100%',
                    background: 'var(--mantine-color-gradient-outline)',
                    backgroundClip: 'padding-box',
                    border: 'none !important',
                    padding: '1px',
                    borderRadius: '100',
                    boxShadow: '!important dark',
                  })}
                  onDoubleClick={() => {
                    track('Command copied - [Get Started - V2]');
                  }}
                >
                  <CodeSnippet
                    command="npx novu@latest dev"
                    className={css({
                      width: '100%',
                      '& input': {
                        margin: '0 !important',
                        color: 'typography.text.main !important',
                        background: {
                          base: 'surface.panel !important',
                          _dark: 'surface.popover !important',
                        },
                      },
                    })}
                    onClick={() => {
                      track('Command copied - [Get Started - V2]');
                    }}
                  />
                </div>

                {location === 'onboarding' && (
                  <SkipCTA
                    text="Prefer to explore the platform first?"
                    buttonText="Skip Setup"
                    onClick={() => {
                      track('Skip Onboarding Clicked', { location: 'button' });
                      navigate(ROUTES.WORKFLOWS);
                    }}
                  />
                )}

                {location === 'get-started' && (
                  <SkipCTA
                    text="Not a developer? Invite your dev team"
                    buttonText="Invite"
                    onClick={() => {
                      track('Invite devs link clicked - [Workflows empty state]');
                      navigate(ROUTES.TEAM_SETTINGS);
                    }}
                    Icon={IconGroupAdd}
                  />
                )}
              </div>
            </VStack>
          </HStack>
          <HStack
            className={css({
              marginBottom: '375',
              justifyContent: 'space-between',
              width: '100%',
              flexWrap: 'wrap',
              alignItems: 'flex-start',
            })}
          >
            <VStack gap="0" className={css({ width: '17.5rem', alignItems: 'flex-start' })}>
              <HStack gap="50">
                <IconLaptopMac />
                <Title
                  variant="subsection"
                  className={css({
                    color: 'typography.text.secondary',
                    marginBottom: '25',
                  })}
                >
                  Create a workflow
                </Title>
              </HStack>
              <Text
                className={css({
                  color: 'typography.text.secondary',
                  marginBottom: location === 'onboarding' ? '24px' : '8px',
                })}
              >
                Code your notification workflows and preview them locally
              </Text>

              {location === 'get-started' && (
                <BadgeButton
                  onClick={() => {
                    track('Examples link clicked - [Workflows empty state]');
                    window.open('https://docs.novu.co/guides/workflows/introduction', '_blank');
                  }}
                  className={css({
                    marginBottom: '150',
                  })}
                >
                  <IconFolderOpen
                    size={16}
                    className={css({
                      color: {
                        _dark: 'legacy.BGLight !important',
                        base: 'legacy.B20 !important',
                      },
                    })}
                  />{' '}
                  <span>Discover examples</span>
                </BadgeButton>
              )}
              <Ide />
            </VStack>
            <VStack gap="0" className={css({ width: '17.5rem', alignItems: 'flex-start' })}>
              <HStack gap="50">
                <IconEditNote />
                <Title
                  variant="subsection"
                  className={css({
                    color: 'typography.text.secondary',
                    marginBottom: '25',
                  })}
                >
                  Edit with your product team
                </Title>
              </HStack>
              <Text
                className={css({
                  color: 'typography.text.secondary',
                  marginBottom: location === 'onboarding' ? '24px' : '8px',
                })}
              >
                Provide your team with no-code UI controls to modify notification content and behavior
              </Text>

              {location === 'get-started' && (
                <BadgeButton
                  onClick={() => {
                    track('Invite team link clicked - [Workflows empty state]');
                    navigate(ROUTES.TEAM_SETTINGS);
                  }}
                  className={css({
                    marginBottom: '150',
                  })}
                >
                  <IconGroupAdd
                    size={16}
                    className={css({
                      color: {
                        _dark: 'legacy.BGLight !important',
                        base: 'legacy.B20 !important',
                      },
                    })}
                  />{' '}
                  <span>Invite team</span>
                </BadgeButton>
              )}
              <Development />
            </VStack>
            <VStack gap="0" className={css({ width: '17.5rem', alignItems: 'flex-start' })}>
              <HStack gap="50">
                <IconOutlineRocketLaunch />
                <Title
                  variant="subsection"
                  className={css({
                    color: 'typography.text.secondary',
                    marginBottom: '25',
                  })}
                >
                  Push your changes
                </Title>
              </HStack>
              <Text
                className={css({
                  color: 'typography.text.secondary',
                  marginBottom: location === 'onboarding' ? '24px' : '8px',
                })}
              >
                Use your CI/CD pipeline to ship your notifications to production
              </Text>

              {location === 'get-started' && (
                <BadgeButton
                  onClick={() => {
                    track('Deployment docs link clicked - [Workflows empty state]');
                    window.open('https://docs.novu.co/deployment/production', '_blank');
                  }}
                  className={css({
                    marginBottom: '150',
                  })}
                >
                  <IconOutlineMenuBook
                    size={16}
                    className={css({
                      color: {
                        _dark: 'legacy.BGLight !important',
                        base: 'legacy.B20 !important',
                      },
                    })}
                  />{' '}
                  <span>Learn more</span>
                </BadgeButton>
              )}
              <GithubAction />
            </VStack>
          </HStack>
        </div>
      </VStack>
    </PageContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Text, Title } from '@novu/novui';
import { css, cx } from '@novu/novui/css';
import {
IconEditNote,
IconFolderOpen,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/WorkflowNotFound.tsx
Tamaño: 294 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Text } from '@novu/novui';
import { PageContainer } from '../../layout';

export const WorkflowNotFound = () => {
  return (
    <PageContainer>
      <Text color={'typography.text.secondary'} textAlign={'center'}>
        Workflow not found
      </Text>
    </PageContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Text } from '@novu/novui';
import { PageContainer } from '../../layout';
export const WorkflowNotFound = () => {
return (
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/index.ts
Tamaño: 163 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './landing-page/LocalStudioWorkflowLandingPage';
export * from './node-view/WorkflowsDetailPage';
export * from './test-workflow/WorkflowsTestPage';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/landing-page/LocalStudioWorkflowLandingPage.tsx
Tamaño: 1407 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useBridgeConnectionStatus, useDiscover, useStudioWorkflowsNavigation } from '../../../hooks';
import { WorkflowsDetailPage } from '../node-view/WorkflowsDetailPage';
import { WorkflowPlaceholderPage } from './WorkflowPlaceholderPage';

export const LocalStudioWorkflowLandingPage = () => {
  const { data, isLoading } = useDiscover();
  const { goToWorkflow } = useStudioWorkflowsNavigation();
  const { status } = useBridgeConnectionStatus();

  const hasWorkflows = data?.workflows && data?.workflows?.length > 0;

  if (isLoading) {
    return <WorkflowsDetailPage.LoadingDisplay />;
  }

  if (status === 'disconnected') {
    return (
      <WorkflowPlaceholderPage title={'Studio Disconnected'} docsButtonLabel="See our troubleshooting guide">
        Local environment disconnected from Novu Bridge URL.
        <br />
        This usually happens when your Bridge app is not running or <code>npx novu dev</code> is not running.
      </WorkflowPlaceholderPage>
    );
  }

  if (hasWorkflows) {
    goToWorkflow(data?.workflows[0].workflowId);

    return null;
  }

  return (
    <WorkflowPlaceholderPage title={'No Workflows Available'} docsButtonLabel="Learn more in the docs">
      A workflow holds the entire flow of steps that are sent to the subscriber.
      <br />
      Get started by adding your first workflow in your local environment.
    </WorkflowPlaceholderPage>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useBridgeConnectionStatus, useDiscover, useStudioWorkflowsNavigation } from '../../../hooks';
import { WorkflowsDetailPage } from '../node-view/WorkflowsDetailPage';
import { WorkflowPlaceholderPage } from './WorkflowPlaceholderPage';
export const LocalStudioWorkflowLandingPage = () => {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/landing-page/WorkflowPlaceholderPage.tsx
Tamaño: 1849 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { CorePropsWithChildren, LocalizedMessage, Text } from '@novu/novui';
import { IconOutlineMenuBook } from '@novu/novui/icons';
import { VStack } from '@novu/novui/jsx';
import { hstack } from '@novu/novui/patterns';
import { css } from '@novu/novui/css';
import { DocsButton } from '../../../../components/docs/DocsButton';
import { PageContainer } from '../../../layout/PageContainer';
import { IPageMetaProps, PageMeta } from '../../../layout/PageMeta';
import { PATHS } from '../../../../components/docs/docs.const';

export type WorkflowPlaceholderPageContentProps = { docsButtonLabel: LocalizedMessage } & CorePropsWithChildren;

export function WorkflowPlaceholderPageContent({ children, docsButtonLabel }: WorkflowPlaceholderPageContentProps) {
  return (
    <VStack gap="margins.layout.text.paragraph">
      <Text color={'typography.text.secondary'} textAlign={'center'}>
        {children}
      </Text>
      <DocsButton
        path={PATHS.WORKFLOW_INTRODUCTION}
        TriggerButton={({ onClick }) => (
          <button
            onClick={onClick}
            className={hstack({ gap: 'margins.icons.Icon20-txt', cursor: 'pointer', _hover: { opacity: 'hover' } })}
          >
            <IconOutlineMenuBook />
            <Text color={'typography.text.secondary'}>{docsButtonLabel}</Text>
          </button>
        )}
      />
    </VStack>
  );
}

type WorkflowPlaceholderPageProps = WorkflowPlaceholderPageContentProps & Required<IPageMetaProps>;

export function WorkflowPlaceholderPage({ children, title, ...contentProps }: WorkflowPlaceholderPageProps) {
  return (
    <PageContainer className={css({ alignContent: 'center' })}>
      <>
        <PageMeta title={title} />
        <WorkflowPlaceholderPageContent {...contentProps}>{children}</WorkflowPlaceholderPageContent>
      </>
    </PageContainer>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { CorePropsWithChildren, LocalizedMessage, Text } from '@novu/novui';
import { IconOutlineMenuBook } from '@novu/novui/icons';
import { VStack } from '@novu/novui/jsx';
import { hstack } from '@novu/novui/patterns';
import { css } from '@novu/novui/css';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/layout/WorkflowsPageHeader.tsx
Tamaño: 1003 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { CoreProps, type LocalizedString, Title, LocalizedMessage, Text } from '@novu/novui';
import { Box, Flex, HStack } from '@novu/novui/jsx';
import { FC, ReactNode } from 'react';

export interface IWorkflowsPageHeaderProps extends CoreProps {
  title: LocalizedString;
  icon: React.ReactNode;
  description?: LocalizedMessage;
  actions?: ReactNode | ReactNode[];
  className?: string;
}

export const WorkflowsPageHeader: FC<IWorkflowsPageHeaderProps> = ({ icon, title, actions, description }) => {
  return (
    <Flex
      justify={'space-between'}
      mb="margins.layout.page.titleBottom"
      pt="paddings.page.vertical"
      px="paddings.page.horizontal"
      minHeight={'300'}
    >
      <HStack gap="50">
        {icon}
        <Box>
          <Title variant="section">{title}</Title>
          {description && <Text color="typography.text.secondary">{description}</Text>}
        </Box>
      </HStack>
      {actions && <HStack gap="100">{actions}</HStack>}
    </Flex>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { CoreProps, type LocalizedString, Title, LocalizedMessage, Text } from '@novu/novui';
import { Box, Flex, HStack } from '@novu/novui/jsx';
import { FC, ReactNode } from 'react';
export interface IWorkflowsPageHeaderProps extends CoreProps {
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/layout/WorkflowsPageTemplate.tsx
Tamaño: 1093 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { css, cx } from '@novu/novui/css';
import { FC, PropsWithChildren } from 'react';
import { PageContainer } from '../../../layout/PageContainer';
import { PageMeta } from '../../../layout/PageMeta';
import { WORKFLOW_NODE_STEP_ICON_DICTIONARY } from '../node-view/WorkflowNodes';
import { WorkflowsPageHeader, type IWorkflowsPageHeaderProps } from './WorkflowsPageHeader';

export type IWorkflowsPageTemplateProps = IWorkflowsPageHeaderProps;

export function StepIcon({ size, type }) {
  const IconElement = WORKFLOW_NODE_STEP_ICON_DICTIONARY[type];
  if (!IconElement) {
    return null;
  }

  return (
    <>
      <IconElement size={size} />
    </>
  );
}

export const WorkflowsPageTemplate: FC<PropsWithChildren<IWorkflowsPageTemplateProps>> = ({
  title,
  children,
  icon,
  actions,
  description,
  className,
}) => {
  return (
    <>
      <WorkflowsPageHeader title={title} icon={icon} actions={actions} description={description} />
      <PageContainer className={className}>
        <PageMeta title={title} />
        {children}
      </PageContainer>
    </>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { css, cx } from '@novu/novui/css';
import { FC, PropsWithChildren } from 'react';
import { PageContainer } from '../../../layout/PageContainer';
import { PageMeta } from '../../../layout/PageMeta';
import { WORKFLOW_NODE_STEP_ICON_DICTIONARY } from '../node-view/WorkflowNodes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/layout/WorkflowsPanelLayout.tsx
Tamaño: 679 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FC } from 'react';

import { CoreProps } from '@novu/novui';
import { Grid, GridItem } from '@novu/novui/jsx';
import { css, cx } from '@novu/novui/css';

/** Panel layout that accepts exactly two children */
export interface IWorkflowsPanelLayoutProps extends CoreProps {
  children: [React.ReactNode, React.ReactNode];
}

export const WorkflowsPanelLayout: FC<IWorkflowsPanelLayoutProps> = ({ children }) => {
  return (
    <Grid gridTemplateColumns={'12'} columnGap={'250'} className={cx(css({ height: '100%', borderRadius: 'inherit' }))}>
      <GridItem colSpan={7}>{children[0]}</GridItem>
      <GridItem colSpan={5}>{children[1]}</GridItem>
    </Grid>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FC } from 'react';
import { CoreProps } from '@novu/novui';
import { Grid, GridItem } from '@novu/novui/jsx';
import { css, cx } from '@novu/novui/css';
/** Panel layout that accepts exactly two children */
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/layout/index.ts
Tamaño: 120 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './WorkflowsPageHeader';
export * from './WorkflowsPageTemplate';
export * from './WorkflowsPanelLayout';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/node-view/StepNode.tsx
Tamaño: 2479 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Skeleton } from '@mantine/core';
import { Title, type WithLoadingSkeleton, type LocalizedMessage } from '@novu/novui';
import { css, cx } from '@novu/novui/css';
import { hstack } from '@novu/novui/patterns';
import { token } from '@novu/novui/tokens';
import { FC, MouseEventHandler } from 'react';
import { truncatedFlexTextCss } from '../../../utils/shared.styles';

interface IStepNodeProps {
  icon: React.ReactNode;
  title: LocalizedMessage;
  onClick?: MouseEventHandler<HTMLButtonElement>;
}

export const StepNode: WithLoadingSkeleton<FC<IStepNodeProps>> = ({ icon, title, onClick }) => {
  return (
    <button
      className={cx(
        css({
          w: '[240px]',
          cursor: 'pointer',
          '&:not(:last-of-type):after': {
            content: '""',
            position: 'relative',
            borderLeft: 'dashed',
            borderColor: 'workflow.node.connector',
            height: 'workflow.nodes.gap',
            display: 'block',
            left: '[calc(50% - 1px)]',
          },
        })
      )}
      onClick={onClick}
    >
      <span
        className={hstack({
          ...truncatedFlexTextCss,
          gap: '50',
          p: '150',
          shadow: 'medium',
          bg: 'workflow.node.surface',
          borderRadius: '150',
          _hover: {
            opacity: 'hover',
          },
        })}
      >
        {icon}
        <Title variant="subsection">{title}</Title>
      </span>
    </button>
  );
};

StepNode.LoadingDisplay = StepNodeSkeleton;

function StepNodeSkeleton() {
  return (
    <div
      className={cx(
        css({
          w: '[240px]',
          cursor: 'pointer',
          '&:not(:last-of-type):after': {
            content: '""',
            position: 'relative',
            borderLeft: 'dashed',
            borderColor: 'workflow.node.connector',
            height: 'workflow.nodes.gap',
            display: 'block',
            left: '[calc(50% - 1px)]',
          },
        })
      )}
    >
      <span
        className={hstack({
          gap: '50',
          p: '150',
          shadow: 'medium',
          bg: 'workflow.node.surface',
          borderRadius: '150',
          _hover: {
            opacity: 'hover',
          },
        })}
      >
        <Skeleton height={token('lineHeights.200')} width={token('lineHeights.200')} radius={8} />
        <Skeleton height={token('lineHeights.100')} width={'70%'} radius="md" />
      </span>
    </div>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Skeleton } from '@mantine/core';
import { Title, type WithLoadingSkeleton, type LocalizedMessage } from '@novu/novui';
import { css, cx } from '@novu/novui/css';
import { hstack } from '@novu/novui/patterns';
import { token } from '@novu/novui/tokens';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/node-view/WorkflowBackgroundWrapper.tsx
Tamaño: 718 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Flex } from '@novu/novui/jsx';
import { css, cx } from '@novu/novui/css';
import { FCWithChildren } from '../../../../types';

export const WorkflowBackgroundWrapper: FCWithChildren = ({ className, children }) => {
  return (
    <Flex
      justifyContent="center"
      flexGrow={1}
      className={cx(
        css({
          // FIXME: popover token isn't correct. Also, ideally there should be a better way to use a token here
          backgroundImage: '[radial-gradient(var(--nv-colors-workflow-background-dots) 1.5px, transparent 0)]',
          backgroundSize: '[16px 16px]',
          p: '375',
          mx: '-150',
        }),
        className
      )}
    >
      {children}
    </Flex>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Flex } from '@novu/novui/jsx';
import { css, cx } from '@novu/novui/css';
import { FCWithChildren } from '../../../../types';
export const WorkflowBackgroundWrapper: FCWithChildren = ({ className, children }) => {
// FIXME: popover token isn't correct. Also, ideally there should be a better way to use a token here
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/node-view/WorkflowFloatingMenu.tsx
Tamaño: 3756 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Tooltip } from '@novu/design-system';
import { IconButton, LocalizedMessage, Text, type CoreProps, type IconButtonProps } from '@novu/novui';
import { css, cx } from '@novu/novui/css';
import {
  IconOutlineAutoAwesomeMotion,
  IconOutlineAvTimer,
  IconOutlineEmail,
  IconOutlineForum,
  IconOutlineMobileFriendly,
  IconOutlineNotifications,
  IconOutlineSms,
  IconOutlineBolt,
  IconType,
} from '@novu/novui/icons';
import { VStack } from '@novu/novui/jsx';
import { vstack } from '@novu/novui/patterns';
import { FC, PropsWithChildren } from 'react';

type IWorkflowFloatingMenuProps = CoreProps;

export const WorkflowFloatingMenu: FC<IWorkflowFloatingMenuProps> = ({ className }) => {
  const handleClick = (pathToSet: string) => () => {
    window.open(`https://docs.novu.co/sdks/framework/typescript/steps/${pathToSet}`, '_blank');
  };

  return (
    <>
      <menu className={cx(vstack({ display: 'flex', gap: '150', p: '50' }), className)}>
        <WorkflowFloatingMenuSection title="Actions">
          <WorkflowFloatingMenuButton
            Icon={IconOutlineAutoAwesomeMotion}
            tooltipLabel="View the Digest step documentation"
            onClick={handleClick('digest')}
          />
          <WorkflowFloatingMenuButton
            Icon={IconOutlineAvTimer}
            tooltipLabel="View the Delay step documentation"
            onClick={handleClick('delay')}
          />
          <WorkflowFloatingMenuButton
            Icon={IconOutlineBolt}
            tooltipLabel="View the Custom step documentation"
            onClick={handleClick('custom')}
          />
        </WorkflowFloatingMenuSection>
        <WorkflowFloatingMenuSection title="Channels">
          <WorkflowFloatingMenuButton
            Icon={IconOutlineNotifications}
            tooltipLabel="View the In-app step documentation"
            onClick={handleClick('inApp')}
          />
          <WorkflowFloatingMenuButton
            Icon={IconOutlineEmail}
            tooltipLabel="View the Email step documentation"
            onClick={handleClick('email')}
          />
          <WorkflowFloatingMenuButton
            Icon={IconOutlineSms}
            tooltipLabel="View the SMS step documentation"
            onClick={handleClick('sms')}
          />
          <WorkflowFloatingMenuButton
            Icon={IconOutlineMobileFriendly}
            tooltipLabel="View the Push step documentation"
            onClick={handleClick('push')}
          />
          <WorkflowFloatingMenuButton
            Icon={IconOutlineForum}
            tooltipLabel="View the Chat step documentation"
            onClick={handleClick('chat')}
          />
        </WorkflowFloatingMenuSection>
      </menu>
    </>
  );
};

interface IWorkflowFloatingMenuSectionProps extends PropsWithChildren<CoreProps> {
  title: LocalizedMessage;
}

function WorkflowFloatingMenuSection({ title, children }: IWorkflowFloatingMenuSectionProps) {
  return (
    <VStack gap="50">
      <Text variant="secondary" fontWeight="strong">
        {title}
      </Text>
      {children}
    </VStack>
  );
}

interface IWorkflowFloatingMenuButtonProps extends IconButtonProps {
  Icon: IconType;
  tooltipLabel?: LocalizedMessage;
}

function WorkflowFloatingMenuButton({ Icon, tooltipLabel, onClick }: IWorkflowFloatingMenuButtonProps) {
  return (
    <Tooltip label={tooltipLabel} position="left">
      <IconButton
        onClick={onClick}
        Icon={Icon}
        className={css({
          padding: '75',
          borderRadius: '100',
          _hover: {
            bg: { base: 'legacy.B80', _dark: 'legacy.B30' },
            '& svg': {
              color: 'typography.text.main',
            },
          },
        })}
      />
    </Tooltip>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Tooltip } from '@novu/design-system';
import { IconButton, LocalizedMessage, Text, type CoreProps, type IconButtonProps } from '@novu/novui';
import { css, cx } from '@novu/novui/css';
import {
IconOutlineAutoAwesomeMotion,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/node-view/WorkflowNodes.tsx
Tamaño: 2225 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { ActionStepEnum, ChannelStepEnum, type DiscoverStepOutput } from '@novu/framework/internal';
import {
  IconOutlineAutoAwesomeMotion,
  IconOutlineAvTimer,
  IconOutlineBolt,
  IconOutlineEmail,
  IconOutlineForum,
  IconOutlineMobileFriendly,
  IconOutlineNotifications,
  IconOutlineSms,
  IconOutlineSpeed,
  IconSize,
  IconType,
} from '@novu/novui/icons';
import { VStack } from '@novu/novui/jsx';
import { StepNode } from './StepNode';
import { WorkflowBackgroundWrapper } from './WorkflowBackgroundWrapper';

export interface WorkflowNodesProps {
  steps: Pick<DiscoverStepOutput, 'stepId' | 'type'>[] | null;
  onStepClick: (step: Pick<DiscoverStepOutput, 'stepId' | 'type'>) => void;
  onTriggerClick: () => void;
}

export const WORKFLOW_NODE_STEP_ICON_DICTIONARY: Record<`${ChannelStepEnum | ActionStepEnum}`, IconType> = {
  email: IconOutlineEmail,
  in_app: IconOutlineNotifications,
  sms: IconOutlineSms,
  chat: IconOutlineForum,
  push: IconOutlineMobileFriendly,
  digest: IconOutlineAutoAwesomeMotion,
  delay: IconOutlineAvTimer,
  throttle: IconOutlineSpeed,
  custom: IconOutlineBolt,
};

const STEP_TYPE_ICON_SIZE: IconSize = '32';

export function WorkflowNodes({ steps, onStepClick, onTriggerClick }: WorkflowNodesProps) {
  return (
    <>
      <VStack gap="0">
        <StepNode
          icon={<IconOutlineBolt size={STEP_TYPE_ICON_SIZE} />}
          title={'Workflow trigger'}
          onClick={onTriggerClick}
        />
        {steps?.map((step) => {
          const handleStepClick = () => {
            onStepClick(step);
          };

          const Icon = WORKFLOW_NODE_STEP_ICON_DICTIONARY[step.type];

          return (
            <StepNode
              key={step.stepId}
              icon={<Icon size={STEP_TYPE_ICON_SIZE} title={step.type} />}
              title={step.stepId}
              onClick={handleStepClick}
            />
          );
        })}
      </VStack>
    </>
  );
}

WorkflowNodes.LoadingDisplay = () => {
  return (
    <WorkflowBackgroundWrapper>
      <VStack gap="0" p="75">
        <StepNode.LoadingDisplay />
        <StepNode.LoadingDisplay />
        <StepNode.LoadingDisplay />
      </VStack>
    </WorkflowBackgroundWrapper>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { ActionStepEnum, ChannelStepEnum, type DiscoverStepOutput } from '@novu/framework/internal';
import {
IconOutlineAutoAwesomeMotion,
IconOutlineAvTimer,
IconOutlineBolt,
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/node-view/WorkflowsDetailPage.tsx
Tamaño: 3594 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Skeleton } from '@mantine/core';
import { IconButton, Text } from '@novu/novui';
import { css } from '@novu/novui/css';
import { IconCable, IconPlayArrow, IconSettings } from '@novu/novui/icons';
import { HStack, Stack } from '@novu/novui/jsx';
import { token } from '@novu/novui/tokens';
import { useEffect, useState } from 'react';
import { useTelemetry } from '../../../../hooks/useNovuAPI';
import { useWorkflow } from '../../../hooks/useBridgeAPI';
import { useStudioWorkflowsNavigation } from '../../../hooks/useStudioWorkflowsNavigation';
import { PageContainer } from '../../../layout/PageContainer';
import { useStudioState } from '../../../StudioStateProvider';
import { OutlineButton } from '../../OutlineButton';
import { WorkflowsPageTemplate } from '../layout/WorkflowsPageTemplate';
import { StudioWorkflowSettingsSidePanel } from '../preferences/StudioWorkflowSettingsSidePanel';
import { WorkflowDetailFormContextProvider } from '../preferences/WorkflowDetailFormContextProvider';
import { WorkflowBackgroundWrapper } from './WorkflowBackgroundWrapper';
import { WorkflowFloatingMenu } from './WorkflowFloatingMenu';
import { WorkflowNodes } from './WorkflowNodes';
import { WorkflowNotFound } from '../WorkflowNotFound';

const BaseWorkflowsDetailPage = () => {
  const { currentWorkflowId, goToStep, goToTest } = useStudioWorkflowsNavigation();
  const { data: workflow, isLoading } = useWorkflow(currentWorkflowId);
  const track = useTelemetry();
  const { isLocalStudio } = useStudioState() || {};

  const [isPanelOpen, setPanelOpen] = useState<boolean>(false);

  useEffect(() => {
    track('Workflow open - [Studio]', {
      workflowId: currentWorkflowId,
      env: isLocalStudio ? 'local' : 'cloud',
    });
  }, []);

  if (isLoading) {
    return <WorkflowsContentLoading />;
  }

  if (!workflow) {
    return <WorkflowNotFound />;
  }

  const title = workflow?.name || workflow.workflowId;

  return (
    <WorkflowsPageTemplate
      className={css({ p: 0, paddingBlockStart: 0, overflowY: 'auto' })}
      icon={<IconCable size="32" />}
      title={title}
      actions={
        <HStack gap="75">
          <OutlineButton Icon={IconPlayArrow} onClick={() => goToTest(currentWorkflowId)}>
            Test workflow
          </OutlineButton>
          <IconButton Icon={IconSettings} onClick={() => setPanelOpen(true)} />
        </HStack>
      }
    >
      <WorkflowBackgroundWrapper>
        <WorkflowNodes
          steps={workflow?.steps || []}
          onTriggerClick={() => goToTest(currentWorkflowId)}
          onStepClick={(step) => {
            goToStep(currentWorkflowId, step.stepId);
          }}
        />
      </WorkflowBackgroundWrapper>
      <WorkflowFloatingMenu
        className={css({
          zIndex: 'docked',
          position: 'fixed',
          // TODO: need to talk with Nik about how to position this
          top: '[182px]',
          right: '50',
        })}
      />
      {isPanelOpen && <StudioWorkflowSettingsSidePanel onClose={() => setPanelOpen(false)} />}
    </WorkflowsPageTemplate>
  );
};

export const WorkflowsDetailPage = () => {
  return (
    <WorkflowDetailFormContextProvider>
      <BaseWorkflowsDetailPage />
    </WorkflowDetailFormContextProvider>
  );
};

WorkflowsDetailPage.LoadingDisplay = WorkflowsContentLoading;

function WorkflowsContentLoading() {
  return (
    <PageContainer>
      <Stack pl={'75'} py={'150'}>
        <Skeleton height={token('lineHeights.100')} width={'20%'} radius="md" />
      </Stack>
      <WorkflowNodes.LoadingDisplay />
    </PageContainer>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Skeleton } from '@mantine/core';
import { IconButton, Text } from '@novu/novui';
import { css } from '@novu/novui/css';
import { IconCable, IconPlayArrow, IconSettings } from '@novu/novui/icons';
import { HStack, Stack } from '@novu/novui/jsx';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/preferences/StudioWorkflowSettingsSidePanel.tsx
Tamaño: 1948 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FC, useEffect, useMemo } from 'react';

import { Sidebar } from '@novu/design-system';
import { Title } from '@novu/novui';
import { css } from '@novu/novui/css';
import { useFormContext } from 'react-hook-form';
import { useParams } from 'react-router-dom';
import { buildWorkflowPreferences } from '@novu/shared';
import { useStudioWorkflowPreferences } from '../../../../hooks/workflowPreferences/useStudioWorkflowPreferences';
import { useDiscover } from '../../../hooks/useBridgeAPI';
import { WorkflowDetailFormContext } from './WorkflowDetailFormContextProvider';
import { WorkflowSettingsSidePanelContent } from './WorkflowSettingsSidePanelContent';

type StudioWorkflowSettingsSidePanelProps = { onClose: () => void };

export const StudioWorkflowSettingsSidePanel: FC<StudioWorkflowSettingsSidePanelProps> = ({ onClose }) => {
  const { data } = useDiscover();
  const { templateId: workflowId = '' } = useParams<{ templateId: string }>();

  const { isLoading } = useStudioWorkflowPreferences(workflowId);
  const { setValue } = useFormContext<WorkflowDetailFormContext>();

  const workflow = useMemo(() => {
    return data?.workflows?.find((wf) => wf.workflowId === workflowId);
  }, [data, workflowId]);

  useEffect(() => {
    if (workflow) {
      setValue('general.workflowId', workflow.workflowId);
      setValue('general.name', workflow.name || workflow.workflowId);
      setValue('general.description', workflow.description || '');
      setValue('general.tags', workflow.tags || []);
      setValue('preferences', buildWorkflowPreferences(workflow.preferences));
    }
  }, [setValue, workflow]);

  return (
    <Sidebar customHeader={<Title variant="section">Workflow settings</Title>} isOpened onClose={onClose}>
      <div className={css({ colorPalette: 'mode.local' })}>
        <WorkflowSettingsSidePanelContent isLoading={isLoading} workflowResourcePreferences={null} />
      </div>
    </Sidebar>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FC, useEffect, useMemo } from 'react';
import { Sidebar } from '@novu/design-system';
import { Title } from '@novu/novui';
import { css } from '@novu/novui/css';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/preferences/WorkflowDetailFormContextProvider.tsx
Tamaño: 581 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { WorkflowPreferences } from '@novu/shared';
import { FC, PropsWithChildren } from 'react';
import { FormProvider, useForm } from 'react-hook-form';
import { WorkflowGeneralSettings } from './types';

export type WorkflowDetailFormContext = {
  general: WorkflowGeneralSettings;
  preferences: WorkflowPreferences | null;
};

export const WorkflowDetailFormContextProvider: FC<PropsWithChildren> = ({ children }) => {
  const formValues = useForm<WorkflowDetailFormContext>({
    mode: 'onChange',
  });

  return <FormProvider {...formValues}>{children}</FormProvider>;
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { WorkflowPreferences } from '@novu/shared';
import { FC, PropsWithChildren } from 'react';
import { FormProvider, useForm } from 'react-hook-form';
import { WorkflowGeneralSettings } from './types';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/preferences/WorkflowGeneralSettingsForm.tsx
Tamaño: 4821 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useClipboard } from '@mantine/hooks';
import { IconButton, Input, Textarea } from '@novu/novui';
import { IconCheck, IconCopyAll } from '@novu/novui/icons';
import { Select } from '@novu/design-system';
import { Stack, Box, styled } from '@novu/novui/jsx';
import { FC } from 'react';
import { Controller, FieldPath, useFormContext } from 'react-hook-form';
import { token } from '@novu/novui/tokens';
import { WorkflowDetailFormContext } from './WorkflowDetailFormContextProvider';

export type WorkflowGeneralSettingsFieldName = Extract<
  FieldPath<WorkflowDetailFormContext>,
  'general.workflowId' | 'general.name' | 'general.description' | 'general.tags'
>;

export type WorkflowGeneralSettingsProps = {
  checkShouldDisableField?: (fieldName: WorkflowGeneralSettingsFieldName) => boolean;
  checkShouldHideField?: (fieldName: WorkflowGeneralSettingsFieldName) => boolean;
};

const InboxSnippet = () => (
  <styled.code
    fontSize="75"
    borderRadius="50"
    py="[1px]"
    px="25"
    borderWidth="100"
    borderColor="input.border.disabled"
    shadow="light"
    bg="input.surface.disabled"
  >
    {`<Inbox />`}
  </styled.code>
);

export const WorkflowGeneralSettingsForm: FC<WorkflowGeneralSettingsProps> = ({
  checkShouldDisableField,
  checkShouldHideField,
}) => {
  const {
    control,
    formState: { errors },
  } = useFormContext<WorkflowDetailFormContext>();

  const { copied, copy } = useClipboard();

  return (
    <Stack gap="150">
      {!checkShouldHideField?.('general.workflowId') && (
        <Controller
          name="general.workflowId"
          control={control}
          rules={{
            required: 'Required - Workflow identifier',
            pattern: {
              value: /^[a-z0-9-]+$/,
              message: 'Identifier must contain only lowercase, numeric or dash characters',
            },
          }}
          render={({ field }) => {
            return (
              <Input
                {...field}
                label="Identifier"
                description={
                  <span>
                    A unique, lowercase identifier, using only <code>-</code> (dash) separators
                  </span>
                }
                rightSection={<IconButton Icon={copied ? IconCheck : IconCopyAll} onClick={() => copy(field.value)} />}
                error={errors?.general?.workflowId?.message}
                value={field.value || ''}
                disabled={checkShouldDisableField?.(field.name)}
              />
            );
          }}
        />
      )}
      {!checkShouldHideField?.('general.name') && (
        <Controller
          name="general.name"
          control={control}
          render={({ field }) => {
            return (
              <Input
                {...field}
                label="Name"
                description={
                  <span>
                    A human-friendly name for the workflow, displayed in the Dashboard and the <InboxSnippet />
                  </span>
                }
                value={field.value || ''}
                disabled={checkShouldDisableField?.(field.name)}
                error={errors?.general?.name?.message}
              />
            );
          }}
        />
      )}
      {!checkShouldHideField?.('general.description') && (
        <Controller
          name="general.description"
          control={control}
          render={({ field }) => {
            return (
              <Textarea
                {...field}
                label="Description"
                description="A brief description of the workflow's purpose for team members"
                placeholder="Add a description..."
                value={field.value || ''}
                disabled={checkShouldDisableField?.(field.name)}
                error={errors?.general?.description?.message}
              />
            );
          }}
        />
      )}
      {!checkShouldHideField?.('general.tags') && (
        <Controller
          name="general.tags"
          control={control}
          render={({ field }) => {
            return (
              <Select
                {...field}
                disabled={checkShouldDisableField?.(field.name)}
                label={'Tags'}
                description={
                  <span>
                    Use tags to categorize workflows and filter notifications/preferences in the <InboxSnippet />
                  </span>
                }
                searchable={checkShouldDisableField?.(field.name)}
                type={'multiselect'}
                placeholder="Add tags to categorize the workflow..."
                data={(field.value || [])?.map((item) => ({ label: item, value: item }))}
              />
            );
          }}
        />
      )}
    </Stack>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useClipboard } from '@mantine/hooks';
import { IconButton, Input, Textarea } from '@novu/novui';
import { IconCheck, IconCopyAll } from '@novu/novui/icons';
import { Select } from '@novu/design-system';
import { Stack, Box, styled } from '@novu/novui/jsx';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/preferences/WorkflowSettingsSidePanelContent.tsx
Tamaño: 4241 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FC } from 'react';

import { Loader } from '@mantine/core';
import { Tabs, Text } from '@novu/novui';
import { IconDynamicFeed, IconManageAccounts } from '@novu/novui/icons';
import { Grid, Stack } from '@novu/novui/jsx';
import { token } from '@novu/novui/tokens';
import { Controller, useFormContext } from 'react-hook-form';
import { isBridgeWorkflow, WorkflowPreferences, ResourceTypeEnum } from '@novu/shared';
import { useLocation, useNavigate, useSearchParams } from 'react-router-dom';
import { useStudioState } from '../../../StudioStateProvider';
import { WorkflowDetailFormContext } from './WorkflowDetailFormContextProvider';
import { WorkflowGeneralSettingsFieldName, WorkflowGeneralSettingsForm } from './WorkflowGeneralSettingsForm';
import { WorkflowSubscriptionPreferences } from './WorkflowSubscriptionPreferences';

export enum WorkflowSettingsPanelTab {
  GENERAL = 'general',
  PREFERENCES = 'preferences',
}

type WorkflowSettingsSidePanelContentProps = {
  isLoading?: boolean;
  workflowType?: ResourceTypeEnum;
  workflowResourcePreferences: WorkflowPreferences | null;
};

export const WorkflowSettingsSidePanelContent: FC<WorkflowSettingsSidePanelContentProps> = ({
  isLoading,
  workflowType,
  workflowResourcePreferences,
}) => {
  const { isLocalStudio } = useStudioState() || {};
  const { control } = useFormContext<WorkflowDetailFormContext>();
  const navigate = useNavigate();
  const { pathname } = useLocation();
  const [searchParams] = useSearchParams();
  const settingsTab = searchParams.get('settings') || WorkflowSettingsPanelTab.GENERAL;

  const checkShouldHideField = (fieldName: WorkflowGeneralSettingsFieldName) => {
    switch (fieldName) {
      case 'general.name':
      case 'general.workflowId':
      case 'general.description':
      case 'general.tags':
        return false;
      default:
        return false;
    }
  };

  const checkShouldDisableField = (fieldName: WorkflowGeneralSettingsFieldName) => {
    switch (fieldName) {
      case 'general.name':
      case 'general.workflowId':
      case 'general.description':
      case 'general.tags':
        return isLocalStudio || isBridgeWorkflow(workflowType);
      default:
        return false;
    }
  };

  return (
    <Tabs
      defaultValue={settingsTab}
      colorPalette={isLocalStudio ? 'mode.local' : 'mode.cloud'}
      onTabChange={(tab) => {
        searchParams.set('settings', tab);
        navigate({
          pathname,
          search: searchParams.toString(),
        });
      }}
      tabConfigs={[
        {
          value: WorkflowSettingsPanelTab.GENERAL,
          label: 'General',
          icon: <IconDynamicFeed />,
          content: isLoading ? (
            <CenteredLoader />
          ) : (
            <WorkflowGeneralSettingsForm
              checkShouldHideField={checkShouldHideField}
              checkShouldDisableField={checkShouldDisableField}
            />
          ),
        },
        {
          value: WorkflowSettingsPanelTab.PREFERENCES,
          label: 'Preferences',
          icon: <IconManageAccounts />,
          content: isLoading ? (
            <CenteredLoader />
          ) : (
            <Stack gap="150">
              <Text color="typography.text.secondary">
                Set default notification channels for subscribers, and determine which channels they can modify
                themselves.
              </Text>
              <Controller
                name="preferences"
                control={control}
                render={({ field }) => {
                  return (
                    <WorkflowSubscriptionPreferences
                      workflowUserPreferences={field.value}
                      updateWorkflowPreferences={field.onChange}
                      arePreferencesDisabled={isLocalStudio}
                      workflowResourcePreferences={workflowResourcePreferences}
                    />
                  );
                }}
              ></Controller>
            </Stack>
          ),
        },
      ]}
    />
  );
};

function CenteredLoader() {
  return (
    <Grid placeContent={'center'} h="full">
      <Loader color={token('colors.colorPalette.middle')} size={32} />
    </Grid>
  );
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FC } from 'react';
import { Loader } from '@mantine/core';
import { Tabs, Text } from '@novu/novui';
import { IconDynamicFeed, IconManageAccounts } from '@novu/novui/icons';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/preferences/WorkflowSubscriptionPreferences.const.ts
Tamaño: 806 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import {
  IconType,
  IconDynamicFeed,
  IconNotificationsNone,
  IconOutlineMailOutline,
  IconOutlineSms,
  IconAdUnits,
  IconOutlineForum,
} from '@novu/design-system';
import { ChannelTypeEnum } from '@novu/shared';
import { CHANNEL_TYPE_TO_STRING } from '../../../../utils/channels';
import { PreferenceChannelName } from './types';

export const CHANNEL_SETTINGS_LOGO_LOOKUP: Record<PreferenceChannelName, IconType> = {
  all: IconDynamicFeed,
  [ChannelTypeEnum.IN_APP]: IconNotificationsNone,
  [ChannelTypeEnum.EMAIL]: IconOutlineMailOutline,
  [ChannelTypeEnum.SMS]: IconOutlineSms,
  [ChannelTypeEnum.PUSH]: IconAdUnits,
  [ChannelTypeEnum.CHAT]: IconOutlineForum,
};

export const CHANNEL_LABELS_LOOKUP: Record<PreferenceChannelName, string> = {
  ...CHANNEL_TYPE_TO_STRING,
  all: 'All',
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/preferences/WorkflowSubscriptionPreferences.styles.ts
Tamaño: 711 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { css } from '@novu/novui/css';

export const tableClassName = css({
  '& td': {
    py: '75',
  },
  '& tbody tr': {
    '&:first-of-type td': {
      borderBottom: 'solid',
      borderColor: 'table.header.border',
      py: '100',
    },
    '&:not(:first-of-type) td': {
      borderBottom: 'none',
    },
  },
  '& tbody tr td': {
    height: '[inherit]',
  },
  '& tbody tr:last-of-type td': {
    borderBottom: 'solid',
  },
  '& tr td:not(:first-child), & tr th:not(:first-child)': {
    pr: '0',
    pl: '175',
    width: '275',
  },
  '& tr td:last-child, & tr th:last-child': {
    pr: '0 !important',
  },
  _hover: {
    '& tbody tr:hover': {
      bg: '[unset !important]',
    },
  },
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/preferences/WorkflowSubscriptionPreferences.tsx
Tamaño: 7418 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Switch } from '@mantine/core';
import { Table, Text } from '@novu/novui';
import { css } from '@novu/novui/css';
import { HStack, VStack } from '@novu/novui/jsx';
import { ColorToken } from '@novu/novui/tokens';
import { ChannelTypeEnum, WorkflowPreferences } from '@novu/shared';
import { FC, useCallback, useEffect, useMemo, useState } from 'react';
import { IconInfoOutline, Tooltip, When } from '@novu/design-system';
import { PreferenceChannelName, SubscriptionPreferenceRow } from './types';
import { CHANNEL_LABELS_LOOKUP, CHANNEL_SETTINGS_LOGO_LOOKUP } from './WorkflowSubscriptionPreferences.const';
import { tableClassName } from './WorkflowSubscriptionPreferences.styles';

const switchClassNames = {
  root: css({
    '&:has(:disabled)': { opacity: 'disabled' },
    '& input:not(:checked) + label': {
      bg: { _dark: 'legacy.B40 !important', base: 'legacy.B80 !important' },
    },
    '& input:checked + label': {
      bg: 'colorPalette.middle !important',
    },
  }),
  thumb: css({
    bg: 'legacy.white !important',
    border: 'none !important',
  }),
};

// these match react-table's specifications, but we don't have the types as a direct dependency in web.
const PREFERENCES_COLUMNS = [
  { accessorKey: 'channel', header: 'Channels', cell: ChannelCell },
  { accessorKey: 'enabled', header: 'Enabled', cell: SwitchCell },
];

export type WorkflowSubscriptionPreferencesProps = {
  workflowUserPreferences: WorkflowPreferences | null;
  workflowResourcePreferences: WorkflowPreferences | null;
  updateWorkflowPreferences: (prefs: WorkflowPreferences | null) => void;
  arePreferencesDisabled?: boolean;
};

export const WorkflowSubscriptionPreferences: FC<WorkflowSubscriptionPreferencesProps> = ({
  workflowUserPreferences,
  workflowResourcePreferences,
  updateWorkflowPreferences,
  arePreferencesDisabled,
}) => {
  const [isOverridingPreferences, setIsOverridingPreferences] = useState(workflowUserPreferences !== null);
  // Use the user preferences if they exist, otherwise fall back to the resource preferences
  const [preferences, setPreferences] = useState<WorkflowPreferences>(
    workflowUserPreferences || workflowResourcePreferences!
  );
  const isDisabled = arePreferencesDisabled || !isOverridingPreferences;

  useEffect(() => {
    setPreferences(workflowUserPreferences || workflowResourcePreferences!);
  }, [workflowUserPreferences, workflowResourcePreferences]);

  const onChange = useCallback(
    (channel: PreferenceChannelName, key: string, value: boolean) => {
      let updatedPreferences: WorkflowPreferences;

      if (channel === 'all') {
        const updatedChannels = Object.keys(preferences.channels).reduce(
          (acc, currChannel) => {
            acc[currChannel] = { ...preferences.channels[currChannel], [key]: value };

            return acc;
          },
          {} as WorkflowPreferences['channels']
        );

        updatedPreferences = {
          ...preferences,
          all: { ...preferences.all, [key]: value },
          channels: updatedChannels,
        };
      } else {
        const updatedChannels = {
          ...preferences.channels,
          [channel]: {
            ...preferences.channels[channel],
            [key]: value,
          },
        };

        const allChannelsFalse = Object.values(updatedChannels).every((channelPreferences) => !channelPreferences[key]);

        updatedPreferences = {
          ...preferences,
          all: { ...preferences.all, [key]: !allChannelsFalse },
          channels: updatedChannels,
        };
      }

      updateWorkflowPreferences(updatedPreferences);
    },
    [preferences, updateWorkflowPreferences]
  );

  useEffect(() => {
    setIsOverridingPreferences(workflowUserPreferences !== null);
  }, [workflowUserPreferences]);

  useEffect(() => {
    // Don't dirty the form if the user didn't make any changes
    if (workflowUserPreferences !== null && isOverridingPreferences === false) {
      updateWorkflowPreferences(null);
    }
  }, [isOverridingPreferences, updateWorkflowPreferences]);

  const preferenceRows = useMemo(
    () => mapPreferencesToRows(preferences, onChange, isDisabled),
    [preferences, onChange, isDisabled]
  );

  return (
    <VStack alignItems="inherit" gap="200">
      <When truthy={!arePreferencesDisabled}>
        <HStack justify="space-between">
          <HStack>
            <Text>Override Preferences</Text>
            <Tooltip label={'Override the default channels for this workflow'}>
              <span>
                <IconInfoOutline size={16} />
              </span>
            </Tooltip>
          </HStack>
          <Switch
            size="lg"
            classNames={switchClassNames}
            checked={isOverridingPreferences}
            onChange={(e) => setIsOverridingPreferences(e.target.checked)}
          />
        </HStack>
      </When>
      <HStack justify="space-between">
        <HStack>
          <Text
            color={preferences?.all?.readOnly ? 'typography.text.main' : 'typography.text.secondary'}
            opacity={isDisabled ? 'disabled' : undefined}
          >
            Critical
          </Text>
          <Tooltip label={'Mark the workflow as critical, preventing Subscribers from modifying their channels'}>
            <span>
              <IconInfoOutline size={16} />
            </span>
          </Tooltip>
        </HStack>
        <Switch
          size="lg"
          classNames={switchClassNames}
          onChange={(e) => onChange('all', 'readOnly', e.target.checked)}
          disabled={isDisabled}
          checked={preferences?.all?.readOnly}
        />
      </HStack>
      <Table<SubscriptionPreferenceRow>
        className={tableClassName}
        columns={PREFERENCES_COLUMNS}
        data={preferenceRows}
      />
    </VStack>
  );
};

function ChannelCell(props) {
  const Icon = CHANNEL_SETTINGS_LOGO_LOOKUP[props.getValue()];

  const colorToken = props.row.original.enabled ? 'typography.text.main' : 'typography.text.secondary';

  return (
    <HStack color={colorToken} opacity={props.row.original.disabled ? 'disabled' : undefined}>
      {<Icon title="switch-channel-icon" color={'inherit'} />}
      <Text color="inherit">{CHANNEL_LABELS_LOOKUP[props.getValue()]}</Text>
    </HStack>
  );
}

function SwitchCell(props) {
  return (
    <Switch
      // color prop does not work with 'var()' values
      classNames={switchClassNames}
      checked={props.getValue()}
      onChange={(e) => {
        const updatedVal = e.target.checked;
        props.row.original.onChange(props.row.original.channel, props.column.id, updatedVal);
      }}
      size="lg"
      disabled={props.row.original.disabled}
    />
  );
}

function mapPreferencesToRows(
  workflowChannelPreferences: WorkflowPreferences | undefined,
  onChange: SubscriptionPreferenceRow['onChange'],
  areAllDisabled?: boolean
): SubscriptionPreferenceRow[] {
  if (!workflowChannelPreferences) {
    return [];
  }

  return [
    { ...workflowChannelPreferences.all, channel: 'all', onChange, disabled: areAllDisabled },
    ...Object.entries(workflowChannelPreferences.channels)
      .map(([channel, pref]) => ({
        ...pref,
        channel: channel as ChannelTypeEnum,
        onChange,
        disabled: areAllDisabled,
      }))
      .sort((preferenceA, preferenceB) => preferenceA.channel.localeCompare(preferenceB.channel)),
  ];
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Switch } from '@mantine/core';
import { Table, Text } from '@novu/novui';
import { css } from '@novu/novui/css';
import { HStack, VStack } from '@novu/novui/jsx';
import { ColorToken } from '@novu/novui/tokens';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/preferences/index.ts
Tamaño: 52 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './WorkflowSettingsSidePanelContent';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/preferences/types.ts
Tamaño: 461 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { ChannelTypeEnum, ChannelPreference } from '@novu/shared';

export type PreferenceChannelName = `${ChannelTypeEnum}` | 'all';
export type SubscriptionPreferenceRow = {
  channel: PreferenceChannelName;
  onChange: (channel: PreferenceChannelName, key: string, value: boolean) => void;
  disabled?: boolean;
} & ChannelPreference;

export type WorkflowGeneralSettings = {
  workflowId: string;
  name: string;
  description: string;
  tags: string[];
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - SubscriptionPreferenceRow({
  channel: PreferenceChannelName;
  onChange: (channel: PreferenceChannelName, key: string, value:...)
Declaraciones 'export' encontradas:
- export  type
- export  type
- export  type

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/step-editor/ControlsEmptyPanel.tsx
Tamaño: 1104 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Text } from '@novu/novui';
import { css } from '@novu/novui/css';
import { IconOutlineMenuBook } from '@novu/novui/icons';
import { HStack, styled, VStack } from '@novu/novui/jsx';
import { text } from '@novu/novui/recipes';
import { ReactNode } from 'react';

const LinkText = styled('a', text);

export const ControlsEmptyPanel = ({
  content,
  onDocsClick,
}: {
  content: ReactNode | string;
  onDocsClick: () => void;
}) => {
  return (
    <VStack
      className={css({
        minHeight: '75vh',
      })}
      gap="100"
      alignItems="center"
      justifyContent="center"
    >
      <Text variant="secondary" className={css({ fontSize: 'small' })}>
        {content}
      </Text>
      <div>
        <HStack gap="50" className={css({ color: 'typography.text.secondary' })}>
          <IconOutlineMenuBook />
          <LinkText
            onClick={(e) => {
              e.preventDefault();
              onDocsClick();
            }}
            href=""
          >
            Learn more in our docs
          </LinkText>
        </HStack>
      </div>
    </VStack>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Text } from '@novu/novui';
import { css } from '@novu/novui/css';
import { IconOutlineMenuBook } from '@novu/novui/icons';
import { HStack, styled, VStack } from '@novu/novui/jsx';
import { text } from '@novu/novui/recipes';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/step-editor/WorkflowStepEditorContentPanel.tsx
Tamaño: 5596 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FC, useMemo } from 'react';
import { Prism } from '@mantine/prism';
import { Tabs } from '@novu/novui';
import { IconOutlineCode, IconVisibility } from '@novu/novui/icons';
import { VStack } from '@novu/novui/jsx';
import { inAppMessageFromBridgeOutputs, StepTypeEnum } from '@novu/shared';
import { css } from '@novu/novui/css';
import type {
  ChatOutput,
  EmailOutput,
  ExecuteOutput,
  InAppOutput,
  PushOutput,
  SmsOutput,
} from '@novu/framework/internal';
import { PreviewWeb } from '../../../../components/workflow/preview/email/PreviewWeb';
import { useActiveIntegrations } from '../../../../hooks';
import {
  ChatBasePreview,
  PushBasePreview,
  InAppBasePreview,
  SmsBasePreview,
} from '../../../../components/workflow/preview';
import { MobileSimulator } from '../../../../components/workflow/preview/common';
import { ErrorPrettyRender } from '../../../../components/workflow/preview/ErrorPrettyRender';

interface IWorkflowStepEditorContentPanelProps {
  preview: ExecuteOutput;
  isLoadingPreview: boolean;
  error?: any;
  step: any;
  onlyPreviewView?: boolean;
  source?: 'studio' | 'playground' | 'dashboard';
}

export const WorkflowStepEditorContentPanel: FC<IWorkflowStepEditorContentPanelProps> = ({
  preview,
  isLoadingPreview,
  error,
  step,
  onlyPreviewView,
  source,
}) => {
  if (onlyPreviewView) {
    return (
      <VStack
        className={css({
          height: '100%',
          margin: '0 12px 8px 12px',
        })}
      >
        {error && <ErrorPrettyRender error={error} />}
        <PreviewStep
          source={source}
          channel={step?.template?.type || step?.type}
          preview={preview}
          loadingPreview={error || isLoadingPreview}
        />
      </VStack>
    );
  }

  const tabs = [
    {
      icon: <IconVisibility />,
      value: 'preview',
      label: 'Preview',
      content: (
        <VStack className={css({ width: '100%' })}>
          {error && <ErrorPrettyRender error={error} />}
          <PreviewStep
            source={source}
            channel={step?.template?.type || step?.type}
            preview={preview}
            loadingPreview={error || isLoadingPreview}
          />
        </VStack>
      ),
    },
  ];

  if (step?.code) {
    tabs.push({
      icon: <IconOutlineCode />,
      value: 'code',
      label: 'Code',
      content: (
        <Prism styles={prismStyles} withLineNumbers language="javascript">
          {step?.code || ''}
        </Prism>
      ),
    });
  }

  return <Tabs defaultValue="preview" tabConfigs={tabs} />;
};

export const PreviewStep = ({
  channel,
  preview,
  loadingPreview,
  source,
}: {
  channel: StepTypeEnum;
  preview: ExecuteOutput;
  loadingPreview: boolean;
  source?: 'studio' | 'playground' | 'dashboard';
}) => {
  const { integrations = [] } = useActiveIntegrations({ enabled: source !== 'playground' });
  const integration = useMemo(() => {
    return integrations.find((item) => item.channel === 'email' && item.primary) || null;
  }, [integrations]);

  const props = { locales: [], loading: loadingPreview, onLocaleChange: () => {} };

  switch (channel) {
    case StepTypeEnum.EMAIL: {
      const previewOutputs = preview?.outputs as EmailOutput;

      return (
        <PreviewWeb
          source={source}
          integration={integration}
          content={previewOutputs?.body}
          subject={previewOutputs?.subject}
          classNames={{
            browser: css({ display: 'flex', flexDirection: 'column', gap: '0', flex: '1' }),
            content: css({ display: 'flex' }),
            frame: css({ flex: '1', height: 'auto !important' }),
            contentContainer: css({
              minHeight: '72vh',
              flex: '1',
            }),
            skeleton: css({
              width: '100%',
            }),
          }}
          {...props}
        />
      );
    }

    case StepTypeEnum.SMS: {
      const previewOutputs = preview?.outputs as SmsOutput;

      return <SmsBasePreview content={previewOutputs?.body} {...props} />;
    }

    case StepTypeEnum.IN_APP: {
      const inAppMessage = inAppMessageFromBridgeOutputs(preview?.outputs as InAppOutput);

      return (
        <InAppBasePreview
          content={{
            subject: inAppMessage.subject,
            content: inAppMessage.content,
            avatar: inAppMessage.avatar,
            ctaButtons: inAppMessage.cta.action.buttons,
          }}
          {...props}
        />
      );
    }

    case StepTypeEnum.CHAT: {
      const previewOutputs = preview?.outputs as ChatOutput;

      return <ChatBasePreview content={previewOutputs?.body} {...props} />;
    }

    case StepTypeEnum.PUSH: {
      const previewOutputs = preview?.outputs as PushOutput;

      return (
        <MobileSimulator withBackground>
          <PushBasePreview title={previewOutputs?.subject} content={previewOutputs?.body} {...props} />
        </MobileSimulator>
      );
    }

    case StepTypeEnum.DIGEST:
    case StepTypeEnum.DELAY:
    case StepTypeEnum.CUSTOM: {
      return (
        <Prism styles={prismStyles} withLineNumbers language="javascript">
          {`${JSON.stringify(preview?.outputs, null, 2)}`}
        </Prism>
      );
    }

    default:
      return <>Unknown Step</>;
  }
};
const prismStyles = (theme) => ({
  root: {
    width: '100%',
  },
  scrollArea: {
    border: ` 1px solid ${theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[5]}`,
    borderRadius: '7px',
  },
  code: {
    fontWeight: 400,
    backgroundColor: 'transparent !important',
  },
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FC, useMemo } from 'react';
import { Prism } from '@mantine/prism';
import { Tabs } from '@novu/novui';
import { IconOutlineCode, IconVisibility } from '@novu/novui/icons';
import { VStack } from '@novu/novui/jsx';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/step-editor/WorkflowStepEditorControlsPanel.tsx
Tamaño: 5681 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { FC, useMemo } from 'react';

import { Button, JsonSchemaForm, Tabs, Title, useDebouncedCallback } from '@novu/novui';
import { IconOutlineEditNote, IconOutlineTune, IconOutlineSave } from '@novu/novui/icons';
import { css } from '@novu/novui/css';
import { Container, Flex } from '@novu/novui/jsx';

import { FeatureFlagsKeysEnum } from '@novu/shared';
import { useDocsModal } from '../../../../components/docs/useDocsModal';
import { When } from '../../../../components/utils/When';
import { ControlsEmptyPanel } from './ControlsEmptyPanel';
import { useTelemetry } from '../../../../hooks/useNovuAPI';
import { PATHS } from '../../../../components/docs/docs.const';
import { getSuggestionVariables, subscriberVariables } from '../../../utils';
import { useFeatureFlag } from '../../../../hooks/useFeatureFlag';

export type OnChangeType = 'step' | 'payload';

interface IWorkflowStepEditorControlsPanelProps {
  step: any;
  workflow: any;
  onChange: (type: OnChangeType, data: any, id?: string) => void;
  onSave?: () => void;
  defaultControls?: Record<string, unknown>;
  isLoadingSave?: boolean;
  className?: string;
  source?: 'studio' | 'playground' | 'dashboard';
}

const TYPING_DEBOUNCE_TIME_MS = 500;

export const WorkflowStepEditorControlsPanel: FC<IWorkflowStepEditorControlsPanelProps> = ({
  step,
  workflow,
  onChange,
  onSave,
  defaultControls,
  isLoadingSave,
  className,
}) => {
  const track = useTelemetry();
  const { Component, toggle, setPath } = useDocsModal();

  const [payloadProperties, havePayloadProperties] = useMemo(() => {
    const payloadObject = workflow?.payload?.schema?.properties || workflow?.payloadSchema?.properties || {};

    return [getSuggestionVariables(payloadObject, 'payload'), Object.keys(payloadObject).length > 0];
  }, [workflow?.payload?.schema, workflow?.payloadSchema]);

  const [haveControlProperties] = useMemo(() => {
    const controlsObject = step?.controls?.schema?.properties || {};

    return [Object.keys(controlsObject).length > 0];
  }, [step?.controls?.schema]);

  const handleOnChange = useDebouncedCallback(async (type: OnChangeType, data: any, id?: string) => {
    onChange(type, data, id);
  }, TYPING_DEBOUNCE_TIME_MS);

  const isAutocompleteEnabled = useFeatureFlag(FeatureFlagsKeysEnum.IS_CONTROLS_AUTOCOMPLETE_ENABLED);

  // set variables to undefined when autocomplete flag is disabled to use plain text entry.
  const variables = useMemo(
    () => (isAutocompleteEnabled ? [...(subscriberVariables || []), ...(payloadProperties || [])] : undefined),
    [payloadProperties, isAutocompleteEnabled]
  );

  return (
    <>
      <Tabs
        className={className}
        defaultValue="step-controls"
        tabConfigs={[
          {
            icon: <IconOutlineEditNote />,
            value: 'step-controls',
            label: 'Step controls',
            content: (
              <Container className={formContainerClassName}>
                <When truthy={haveControlProperties}>
                  {onSave && (
                    <Flex justifyContent="space-between" alignItems={'center'} marginBottom="50">
                      <Title variant="subsection">Email step controls</Title>
                      <Button
                        loading={isLoadingSave}
                        variant={'filled'}
                        size={'xs'}
                        Icon={IconOutlineSave}
                        onClick={() => {
                          track('Step controls saved - [Workflows Step Page]', {
                            step: step?.type,
                          });
                          onSave();
                        }}
                      >
                        Save
                      </Button>
                    </Flex>
                  )}

                  <JsonSchemaForm
                    onChange={(data, id) => handleOnChange('step', data, id)}
                    schema={step?.controls?.schema || {}}
                    formData={defaultControls || {}}
                    variables={variables}
                  />
                </When>
                <When truthy={!haveControlProperties}>
                  <ControlsEmptyPanel
                    content="Modifiable controls defined by the code schema."
                    onDocsClick={() => {
                      setPath(PATHS.CONCEPT_CONTROLS);
                      toggle();
                    }}
                  />
                </When>
              </Container>
            ),
          },
          {
            icon: <IconOutlineTune />,
            value: 'payload',
            label: 'Payload',
            content: (
              <Container className={formContainerClassName}>
                <When truthy={havePayloadProperties}>
                  <JsonSchemaForm
                    onChange={(data, id) => handleOnChange('payload', data, id)}
                    schema={workflow?.payload?.schema || workflow?.payloadSchema || {}}
                    formData={{}}
                  />
                </When>
                <When truthy={!havePayloadProperties}>
                  <ControlsEmptyPanel
                    content="Payload ensures correct formatting and data validity."
                    onDocsClick={() => {
                      setPath(`${PATHS.WORKFLOW_INTRODUCTION}#payload-schema`);
                      toggle();
                    }}
                  />
                </When>
              </Container>
            ),
          },
        ]}
      />
      <Component />
    </>
  );
};

export const formContainerClassName = css({
  h: '[72vh]',
  overflowY: 'auto',
  scrollbar: 'hidden',
});


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { FC, useMemo } from 'react';
import { Button, JsonSchemaForm, Tabs, Title, useDebouncedCallback } from '@novu/novui';
import { IconOutlineEditNote, IconOutlineTune, IconOutlineSave } from '@novu/novui/icons';
import { css } from '@novu/novui/css';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/step-editor/WorkflowTestStepButton.tsx
Tamaño: 1714 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { errorMessage, successMessage } from '@novu/design-system';
import { useMutation } from '@tanstack/react-query';
import { IconPlayArrow } from '@novu/novui/icons';
import { ChannelTypeEnum } from '@novu/shared';
import { Button } from '@novu/novui';
import { testSendEmailMessage } from '../../../../api/notification-templates';
import { useStudioState } from '../../../StudioStateProvider';
import { useTelemetry } from '../../../../hooks/useNovuAPI';

export const WorkflowTestStepButton = ({
  stepId,
  payload,
  controls,
  workflowId,
  stepType,
}: {
  stepId: string;
  payload: Record<string, any>;
  controls: Record<string, any>;
  workflowId: string;
  stepType: ChannelTypeEnum;
}) => {
  const track = useTelemetry();
  const { isLocalStudio: local, testUser } = useStudioState();
  const { mutateAsync: testSendEmailEvent, isLoading: isTestingEmail } = useMutation(testSendEmailMessage);

  const handleTestClick = async () => {
    track('Step test ran - [Workflows Step Page]', {
      step: ChannelTypeEnum.EMAIL,
      env: local ? 'local' : 'cloud',
    });
    try {
      await testSendEmailEvent({
        stepId,
        workflowId,
        contentType: 'customHtml',
        subject: '',
        payload,
        controls,
        to: testUser?.emailAddress || '',
        bridge: true,
        content: '',
      });
      successMessage('Test run has started!');
    } catch (e: any) {
      errorMessage(e.message || 'Unexpected error occurred');
    }
  };

  if (stepType !== ChannelTypeEnum.EMAIL) {
    return null;
  }

  return (
    <Button loading={isTestingEmail} Icon={IconPlayArrow} variant="outline" onClick={handleTestClick}>
      Test step
    </Button>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { errorMessage, successMessage } from '@novu/design-system';
import { useMutation } from '@tanstack/react-query';
import { IconPlayArrow } from '@novu/novui/icons';
import { ChannelTypeEnum } from '@novu/shared';
import { Button } from '@novu/novui';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/test-workflow/WorkflowTestControlsPanel.tsx
Tamaño: 2739 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Input } from '@novu/design-system';
import { JsonSchemaForm, Title } from '@novu/novui';
import { IconOutlineSend, IconOutlineTune } from '@novu/novui/icons';
import { Box, HStack, Stack } from '@novu/novui/jsx';
import { ChannelTypeEnum } from '@novu/shared';
import { FC, useEffect } from 'react';
import { Controller, useForm } from 'react-hook-form';
import { When } from '../../../../components/utils/When';
import { formContainerClassName } from '../step-editor/WorkflowStepEditorControlsPanel';

export type ToSubscriber = {
  subscriberId: string;
  email: string;
  [key: string]: any;
};

interface IWorkflowTestControlsPanelProps {
  payloadSchema: Record<string, any>;
  stepTypes: ChannelTypeEnum[];
  to: ToSubscriber;
  onChange: (payload?: Record<string, any>, to?: ToSubscriber) => void;
}

export const WorkflowTestControlsPanel: FC<IWorkflowTestControlsPanelProps> = ({
  payloadSchema,
  onChange,
  to,
  stepTypes,
}) => {
  const { control, watch } = useForm({
    defaultValues: to,
  });

  useEffect(() => {
    const { unsubscribe } = watch((values) => {
      onChange(undefined, values as ToSubscriber);
    });

    return () => unsubscribe();
  }, [watch]);

  return (
    <Stack gap="margins.layout.page.vertical" className={formContainerClassName}>
      <Box>
        <HStack gap="50" mb="margins.layout.page.sub-section.titleBottom">
          <IconOutlineSend />
          <Title variant="subsection">Send to</Title>
        </HStack>
        <Stack gap="margins.layout.Input.input-input">
          <Controller
            control={control}
            name="subscriberId"
            render={({ field }) => <Input {...field} label="Subscriber ID" />}
          />
          <When truthy={stepTypes.includes(ChannelTypeEnum.EMAIL)}>
            <Controller control={control} name="email" render={({ field }) => <Input {...field} label="Email" />} />
          </When>
          <When truthy={stepTypes.includes(ChannelTypeEnum.SMS)}>
            <Controller
              control={control}
              name="phone"
              defaultValue={''}
              render={({ field }) => <Input {...field} label="Phone number" />}
            />
          </When>
        </Stack>
      </Box>
      <Box>
        <HStack gap="50" mb="margins.layout.page.sub-section.titleBottom">
          <IconOutlineTune />
          <Title variant="subsection">Payload</Title>
        </HStack>
        <Stack gap="margins.layout.Input.input-input">
          <JsonSchemaForm
            onChange={(data) => {
              onChange(data.formData, undefined);
            }}
            schema={payloadSchema || {}}
            formData={{}}
          />
        </Stack>
      </Box>
    </Stack>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Input } from '@novu/design-system';
import { JsonSchemaForm, Title } from '@novu/novui';
import { IconOutlineSend, IconOutlineTune } from '@novu/novui/icons';
import { Box, HStack, Stack } from '@novu/novui/jsx';
import { ChannelTypeEnum } from '@novu/shared';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/test-workflow/WorkflowTestTriggerPanel.tsx
Tamaño: 1836 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Box } from '@mantine/core';
import { Prism } from '@mantine/prism';
import { IconOutlineBolt } from '@novu/novui/icons';
import { Tabs, Title } from '@novu/novui';
import { HStack } from '@novu/novui/jsx';
import { FC } from 'react';
import { Language } from 'prism-react-renderer';
import {
  createNodeSnippet,
  createCurlSnippet,
  createPhpSnippet,
  createGoSnippet,
  createPythonSnippet,
  CodeSnippetProps,
} from '../../../../utils/codeSnippets';

type Snippet = {
  languageLabel: string;
  language: Language;
  create: (props: CodeSnippetProps) => string;
};

const snippets: Snippet[] = [
  {
    languageLabel: 'Node.js',
    language: 'javascript',
    create: createNodeSnippet,
  },
  {
    languageLabel: 'Curl',
    language: 'bash',
    create: createCurlSnippet,
  },
  {
    languageLabel: 'PHP',
    language: 'c', // PHP is not supported
    create: createPhpSnippet,
  },
  {
    languageLabel: 'Golang',
    language: 'go',
    create: createGoSnippet,
  },
  {
    languageLabel: 'Python',
    language: 'python',
    create: createPythonSnippet,
  },
];

const DEFAULT_LANGUAGE: Language = 'javascript';

export const WorkflowTestTriggerPanel: FC<CodeSnippetProps> = (props) => {
  return (
    <Box>
      <HStack gap="50" mb="margins.layout.page.section.titleBottom">
        <IconOutlineBolt />
        <Title variant="subsection">Trigger code</Title>
      </HStack>
      <Tabs
        height={'[100% !important]'}
        defaultValue={DEFAULT_LANGUAGE}
        tabConfigs={snippets.map((snippet) => ({
          value: snippet.language,
          label: snippet.languageLabel,
          content: (
            <Prism withLineNumbers={true} language={snippet.language} h="100%">
              {snippet.create(props)}
            </Prism>
          ),
        }))}
      />
    </Box>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Box } from '@mantine/core';
import { Prism } from '@mantine/prism';
import { IconOutlineBolt } from '@novu/novui/icons';
import { Tabs, Title } from '@novu/novui';
import { HStack } from '@novu/novui/jsx';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/components/workflows/test-workflow/WorkflowsTestPage.tsx
Tamaño: 5796 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { Loader } from '@mantine/core';
import { useDisclosure } from '@mantine/hooks';
import { css } from '@novu/novui/css';
import { IconOutlineCable, IconPlayArrow } from '@novu/novui/icons';
import { Center } from '@novu/novui/jsx';
import { useMutation } from '@tanstack/react-query';
import { useEffect, useMemo, useState } from 'react';
import { useParams } from 'react-router-dom';
import { showNotification } from '@mantine/notifications';
import { useWorkflow, useWorkflowTrigger } from '../../../hooks/useBridgeAPI';
import { When } from '../../../../components/utils/When';
import { ExecutionDetailsModalWrapper } from '../../../../pages/templates/components/ExecutionDetailsModalWrapper';
import { WorkflowsPageTemplate, WorkflowsPanelLayout } from '../layout/index';
import { ToSubscriber, WorkflowTestControlsPanel } from './WorkflowTestControlsPanel';
import { WorkflowTestTriggerPanel } from './WorkflowTestTriggerPanel';
import { useTemplateFetcher } from '../../../../api/hooks/index';
import { useSegment } from '../../../../components/providers/SegmentProvider';
import { useStudioState } from '../../../StudioStateProvider';
import { testTrigger } from '../../../../api/notification-templates';
import { OutlineButton } from '../../OutlineButton';
import { useTelemetry } from '../../../../hooks/useNovuAPI';

export const WorkflowsTestPage = () => {
  const track = useTelemetry();
  const studioState = useStudioState() || {};
  const { isLocalStudio, testUser, devSecretKey } = studioState;
  const { templateId = '' } = useParams<{ templateId: string }>();
  const [payload, setPayload] = useState<Record<string, any>>({});
  const [to, setTo] = useState<ToSubscriber>({
    subscriberId: '',
    email: '',
  });

  const { template, isLoading: isTemplateLoading } = useTemplateFetcher({
    templateId: isLocalStudio ? undefined : templateId,
  });
  const { mutateAsync: triggerCloudTestEvent } = useMutation(testTrigger);
  const { data: workflow, isLoading: isWorkflowLoading } = useWorkflow(templateId, { enabled: isLocalStudio });
  const { trigger, isLoading: isTestLoading } = useWorkflowTrigger();

  useEffect(() => {
    track('Test Page Visit', {
      workflowName: workflow?.name,
    });

  }, []);

  const isLoading = useMemo(
    () => (isLocalStudio ? isWorkflowLoading : isTemplateLoading),
    [isWorkflowLoading, isTemplateLoading, isLocalStudio]
  );

  useEffect(() => {
    if (testUser) {
      setTo({
        subscriberId: testUser.id,
        email: testUser.emailAddress,
      });
    }
  }, [testUser]);

  const stepTypes = useMemo(() => {
    if (isLocalStudio) {
      if (!workflow) {
        return [];
      }

      return workflow.steps.map((step) => step.type);
    }

    if (!template) {
      return [];
    }

    return template.steps.map((step) => step.template.type);
  }, [workflow, isLocalStudio, template]);

  const [transactionId, setTransactionId] = useState<string>('');
  const [executionModalOpened, { close: closeExecutionModal, open: openExecutionModal }] = useDisclosure(false);
  const workflowId = useMemo(
    () => (isLocalStudio ? workflow?.workflowId : template?.triggers[0].identifier),
    [isLocalStudio, template?.triggers, workflow?.workflowId]
  );

  const handleTestClick = async () => {
    track('Workflow test ran - [Workflows Test Page]', {
      env: isLocalStudio ? 'local' : 'cloud',
    });

    try {
      payload.__source = 'studio-test-workflow';

      let response;
      if (isLocalStudio) {
        if (!workflowId) {
          throw new Error('workflowId was not defined when running a test');
        }

        const bridgeResponse = await trigger({
          workflowId,
          to,
          payload,
        });

        response = bridgeResponse.data;
      } else {
        response = await triggerCloudTestEvent({
          name: workflowId,
          to,
          payload: {
            ...payload,
          },
        });
      }

      setTransactionId(response.transactionId || '');
      openExecutionModal();
    } catch (e) {
      showNotification({
        message: (e as Error).message,
        color: 'red',
      });
    }
  };

  const onChange = (payloadValues, toValues) => {
    if (toValues) {
      setTo(toValues);
    }
    if (payloadValues) {
      setPayload(payloadValues);
    }
  };

  if (isLocalStudio ? isWorkflowLoading : isTemplateLoading) {
    return (
      <Center
        className={css({
          marginTop: '375',
        })}
      >
        <Loader color="indigo" size={32} />
      </Center>
    );
  }

  return (
    <WorkflowsPageTemplate
      title="Test workflow"
      description="Trigger a test run for this workflow"
      icon={<IconOutlineCable size="32" />}
      actions={
        <OutlineButton loading={isTestLoading} Icon={IconPlayArrow} onClick={handleTestClick}>
          Test workflow
        </OutlineButton>
      }
    >
      <WorkflowsPanelLayout>
        <WorkflowTestTriggerPanel
          identifier={workflowId || ''}
          to={to}
          payload={payload}
          secretKey={devSecretKey}
          bridgeUrl={isLocalStudio ? studioState.tunnelBridgeURL : undefined}
        />
        <When truthy={!isLoading}>
          <WorkflowTestControlsPanel
            onChange={onChange}
            payloadSchema={workflow?.payload?.schema || template?.payloadSchema}
            to={{
              subscriberId: testUser?.id || '',
              email: testUser?.emailAddress || '',
            }}
            stepTypes={stepTypes}
          />
        </When>
      </WorkflowsPanelLayout>
      <ExecutionDetailsModalWrapper
        transactionId={transactionId}
        isOpen={executionModalOpened}
        onClose={closeExecutionModal}
      />
    </WorkflowsPageTemplate>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { Loader } from '@mantine/core';
import { useDisclosure } from '@mantine/hooks';
import { css } from '@novu/novui/css';
import { IconOutlineCable, IconPlayArrow } from '@novu/novui/icons';
import { Center } from '@novu/novui/jsx';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/constants/EnvironmentEnum.ts
Tamaño: 48 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { EnvironmentEnum } from '@novu/shared';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

No se detectaron funciones/exportaciones con heurística JS/TS.

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/constants/index.ts
Tamaño: 35 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './EnvironmentEnum';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/hooks/index.ts
Tamaño: 228 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './useBridgeAPI';
export * from './useBridgeURL';
export * from './useStudioNavigate';
export * from './useStudioState';
export * from './useStudioWorkflowsNavigation';
export * from './useBridgeConnectionStatus';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export
- export
- export
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/hooks/useBridgeAPI.ts
Tamaño: 3216 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import type { DiscoverWorkflowOutput, Event, HealthCheck } from '@novu/framework/internal';
import { UseQueryResult, useMutation, useQuery } from '@tanstack/react-query';
import { useEffect, useMemo } from 'react';
import { api as cloudApi } from '../../api';
import { buildBridgeHTTPClient, type TriggerParams } from '../../bridgeApi/bridgeApi.client';
import { useStudioState } from '../StudioStateProvider';

export function useBridgeAPI() {
  const { bridgeURL } = useStudioState();

  return useMemo(() => buildBridgeHTTPClient(bridgeURL), [bridgeURL]);
}

const BRIDGE_STATUS_REFRESH_INTERVAL_IN_MS = 5 * 1000;

export const useDiscover = (options?: any) => {
  const { bridgeURL, setBridgeURL } = useStudioState();
  const api = useBridgeAPI();

  const discoverQuery = useQuery(
    ['bridge-workflows'],
    async () => {
      return api.discover();
    },
    {
      refetchOnWindowFocus: true,
      ...(options || {}),
    }
  );
  const { refetch } = discoverQuery;

  useEffect(() => {
    if (!bridgeURL) {
      refetch();
    }
  }, [bridgeURL, setBridgeURL, refetch]);

  return discoverQuery;
};

export const useHealthCheck = (options?: any) => {
  const bridgeAPI = useBridgeAPI();
  const { bridgeURL, isLocalStudio } = useStudioState();

  const res = useQuery<HealthCheck>(
    ['bridge-health-check', bridgeURL],
    async () => {
      if (isLocalStudio) {
        return await bridgeAPI.healthCheck();
      } else {
        return await cloudApi.get('/v1/bridge/status');
      }
    },
    {
      enabled: !!bridgeURL,
      networkMode: 'always',
      refetchOnWindowFocus: true,
      refetchInterval: BRIDGE_STATUS_REFRESH_INTERVAL_IN_MS,
      ...options,
    }
  );

  return {
    ...res,
    bridgeURL,
  };
};

export const useWorkflow = (templateId: string, options?: any): UseQueryResult<DiscoverWorkflowOutput, unknown> => {
  const api = useBridgeAPI();

  return useQuery(
    ['workflow', templateId],
    async () => {
      return api.getWorkflow(templateId);
    },
    {
      refetchOnWindowFocus: true,
      ...(options || {}),
    }
  );
};

export const useWorkflowPreview = (
  {
    workflowId,
    stepId,
    controls = {},
    payload = {},
    state = [],
    subscriber = {},
  }: Omit<Event, 'action' | 'subscriber' | 'payload' | 'state' | 'controls' | 'context'> &
    Partial<Pick<Event, 'subscriber' | 'payload' | 'state' | 'controls'>>,
  options?: any
) => {
  const api = useBridgeAPI();

  return useQuery(
    ['workflow-preview', workflowId, stepId, controls, payload],
    async () => {
      return api.getStepPreview({ workflowId, stepId, payload, controls, state, subscriber });
    },
    {
      refetchOnWindowFocus: true,
      ...(options || {}),
    }
  );
};

export const useWorkflowTrigger = () => {
  const api = useBridgeAPI();
  const state = useStudioState();

  const { mutateAsync, ...rest } = useMutation(api.trigger);

  const bridgeUrl = state.isLocalStudio ? state.tunnelBridgeURL : state.storedBridgeURL;

  async function trigger(params: TriggerParams): Promise<{ data: { transactionId: string } }> {
    return mutateAsync({ ...params, bridgeUrl });
  }

  return {
    ...rest,
    mutateAsync,
    trigger,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useBridgeAPI()
 - trigger(params: TriggerParams)
Asignaciones con arrow functions encontradas (posibles funciones):
 - useDiscover(options?: any))
 - discoverQuery(useQuery(
    ['bridge-workflows'],
    async ())
 - useHealthCheck(options?: any))
 - res(useQuery<HealthCheck>(
    ['bridge-health-check', bridgeURL],
    async ())
 - useWorkflow(templateId: string, options?: any): UseQueryResult<DiscoverWorkflowOutput, unknown>)
 - api(useBridgeAPI();

  return useQuery(
    ['workflow', templateId],
    async ())
 - subscriber({},
  }: Omit<Event, 'action' | 'subscriber' | 'payload' | 'state' | 'controls' | 'context'> &
    P...)
 - api(useBridgeAPI();

  return useQuery(
    ['workflow-preview', workflowId, stepId, controls, payload],...)
 - useWorkflowTrigger())
Declaraciones 'export' encontradas:
- export function useBridgeAPI
- export  const
- export  const
- export  const
- export  const
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/hooks/useBridgeConnectionStatus.ts
Tamaño: 553 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useMemo } from 'react';
import { ConnectionStatus } from '../types';
import { useHealthCheck } from './useBridgeAPI';

export const useBridgeConnectionStatus = () => {
  const { data, isLoading, error, bridgeURL } = useHealthCheck();

  const status = useMemo<ConnectionStatus>(() => {
    if (isLoading) {
      return 'loading';
    }

    if (bridgeURL && !error && data?.status === 'ok') {
      return 'connected';
    }

    return 'disconnected';
  }, [bridgeURL, isLoading, data, error]);

  return {
    bridgeURL,
    status,
  };
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Asignaciones con arrow functions encontradas (posibles funciones):
 - useBridgeConnectionStatus())
 - status(useMemo<ConnectionStatus>(())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/hooks/useBridgeURL.ts
Tamaño: 598 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useStudioState } from '../StudioStateProvider';

export function useBridgeURL(tunnel = false) {
  const studioState = useStudioState();

  let bridgeURL;

  if (studioState.isLocalStudio) {
    /*
     * Local studio mode.
     * Prefer local host for bridge discovery as it's faster
     *
     * TODO: Do we need to store it for full page reloads on local studio?
     */
    bridgeURL = tunnel ? studioState.tunnelBridgeURL : studioState.localBridgeURL || studioState.tunnelBridgeURL;
  } else {
    // Cloud mode
    bridgeURL = studioState.storedBridgeURL;
  }

  return bridgeURL;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useBridgeURL(tunnel = false)
Declaraciones 'export' encontradas:
- export function useBridgeURL

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/hooks/useNavigateToLocalStudio.ts
Tamaño: 1912 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useQuery } from '@tanstack/react-query';
import { useCallback } from 'react';
import { LocalStudioWellKnownMetadata } from '../types';

const WELL_KNOWN_URL = 'http://localhost:2022/.well-known/novu';
const DEFAULT_STUDIO_PROTOCOL = 'http:';
const DEFAULT_STUDIO_HOST_NAME = 'localhost';
const DEFAULT_STUDIO_PORT = '2022';

type UseNavigateToLocalStudio = {
  /** Invoked if "smart" navigation isn't available */
  fallbackFn?: () => void;
};

/**
 * Get response, and navigate to the appropriate Local Studio URL.
 * If no well-known response is available, open a modal.
 */
export const useNavigateToLocalStudio = ({ fallbackFn }: UseNavigateToLocalStudio = {}) => {
  const forceStudioNavigation = () => {
    // use default URL
    navigateToLocalStudioUrl();
  };

  const { data, isError, isLoading } = useQuery<LocalStudioWellKnownMetadata>([WELL_KNOWN_URL], async () => {
    const response = await fetch(WELL_KNOWN_URL);

    return response.json();
  });

  const navigateToLocalStudio = useCallback(() => {
    if (isLoading) {
      return;
    }

    if (isError || !data) {
      fallbackFn?.();

      return;
    }

    navigateToLocalStudioUrl({ port: data.studioPort });
  }, [data, isError, isLoading, fallbackFn]);

  return {
    data,
    isError,
    isLoading,
    navigateToLocalStudio,
    forceStudioNavigation,
  };
};

type LocalStudioUrlParams = {
  protocol?: string;
  hostname?: string;
  port?: string;
};

function navigateToLocalStudioUrl({ protocol, hostname, port }: LocalStudioUrlParams = {}) {
  const url = `${protocol || DEFAULT_STUDIO_PROTOCOL}//${hostname || DEFAULT_STUDIO_HOST_NAME}:${
    port || DEFAULT_STUDIO_PORT
  }`;

  /**
   * NOTE: this fails after 1 invocation if opening in the same tab, so _blank is required!
   * It seems it may be due to the loading of the iFrame: https://stackoverflow.com/a/13459106
   */
  window.open(url, '_blank');
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - navigateToLocalStudioUrl({ protocol, hostname, port }: LocalStudioUrlParams = {})
Asignaciones con arrow functions encontradas (posibles funciones):
 - UseNavigateToLocalStudio({
  /** Invoked if "smart" navigation isn't available */
  fallbackFn?: ())
 - UseNavigateToLocalStudio({}))
 - forceStudioNavigation())
 - navigateToLocalStudio(useCallback(())
Declaraciones 'export' encontradas:
- export  const

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/hooks/useStudioNavigate.ts
Tamaño: 384 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import { parseUrl } from '../../utils/routeUtils';

export function useStudioNavigate() {
  const navigate = useNavigate();

  const navigateInStudio = useCallback(
    (to: string, params: Record<string, string>) => navigate(parseUrl(to, params)),
    [navigate]
  );

  return navigateInStudio;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useStudioNavigate()
Asignaciones con arrow functions encontradas (posibles funciones):
 - navigateInStudio(useCallback(
    (to: string, params: Record<string, string>))
Declaraciones 'export' encontradas:
- export function useStudioNavigate

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/hooks/useStudioState.ts
Tamaño: 57 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export { useStudioState } from '../StudioStateProvider';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/hooks/useStudioWorkflowsNavigation.ts
Tamaño: 1279 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { useCallback, useMemo } from 'react';
import { useLocation, useParams } from 'react-router-dom';
import {
  getStudioHomeLink,
  getStudioWorkflowLink,
  getStudioWorkflowStepLink,
  getStudioWorkflowTestLink,
  isStudioHome,
} from '../utils/routing';
import { useStudioNavigate } from './useStudioNavigate';

export function useStudioWorkflowsNavigation() {
  const navigate = useStudioNavigate();

  const { pathname } = useLocation();
  const { templateId = '' } = useParams<{ templateId: string }>();

  const shouldHideBackButton = useMemo(() => Boolean(isStudioHome(pathname) || !templateId), [pathname, templateId]);

  const goBack = useCallback(() => navigate(getStudioHomeLink(templateId), {}), [navigate, templateId]);

  const goToWorkflow = useCallback((workflowId: string) => navigate(getStudioWorkflowLink(workflowId), {}), [navigate]);

  const goToTest = useCallback((workflowId: string) => navigate(getStudioWorkflowTestLink(workflowId), {}), [navigate]);

  const goToStep = useCallback(
    (workflowId: string, stepId: string) => navigate(getStudioWorkflowStepLink(workflowId, stepId), {}),
    [navigate]
  );

  return {
    shouldHideBackButton,
    goBack,
    goToWorkflow,
    goToStep,
    goToTest,
    currentWorkflowId: templateId,
  };
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - useStudioWorkflowsNavigation()
Asignaciones con arrow functions encontradas (posibles funciones):
 - shouldHideBackButton(useMemo(())
 - goBack(useCallback(())
 - goToWorkflow(useCallback((workflowId: string))
 - goToTest(useCallback((workflowId: string))
 - goToStep(useCallback(
    (workflowId: string, stepId: string))
Declaraciones 'export' encontradas:
- export function useStudioWorkflowsNavigation

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/layout/PageContainer.tsx
Tamaño: 748 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { CoreProps } from '@novu/novui';
import { css, cx } from '@novu/novui/css';
import { Container } from '@novu/novui/jsx';
import { FC, PropsWithChildren } from 'react';

export type IPageContainerProps = CoreProps;

export const PageContainer: FC<PropsWithChildren<IPageContainerProps>> = ({ children, className }) => {
  return (
    <Container
      className={cx(
        css({
          overflowX: 'hidden',
          borderRadius: '0',
          px: 'paddings.page.horizontal',
          py: 'paddings.page.vertical',
          m: '0',
          h: '100%',
          bg: 'surface.page',
          display: 'flex',
          flexDirection: 'column',
        }),
        className
      )}
    >
      {children}
    </Container>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { CoreProps } from '@novu/novui';
import { css, cx } from '@novu/novui/css';
import { Container } from '@novu/novui/jsx';
import { FC, PropsWithChildren } from 'react';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/layout/PageHeader.tsx
Tamaño: 656 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { CoreProps } from '@novu/novui';
import { styled, Flex } from '@novu/novui/jsx';
import { title as titleRecipe } from '@novu/novui/recipes';
import { LocalizedMessage } from '../../types/LocalizedMessage';

const Title = styled('h1', titleRecipe);

export interface IPageHeaderProps extends CoreProps {
  actions?: JSX.Element;
  title: LocalizedMessage;
}

export const PageHeader: React.FC<IPageHeaderProps> = ({ title, actions, className }) => {
  return (
    <Flex direction={'row'} justifyContent="space-between" className={className}>
      <Title variant={'page'}>{title}</Title>
      {actions && <div>{actions}</div>}
    </Flex>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { CoreProps } from '@novu/novui';
import { styled, Flex } from '@novu/novui/jsx';
import { title as titleRecipe } from '@novu/novui/recipes';
import { LocalizedMessage } from '../../types/LocalizedMessage';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/layout/PageMeta.tsx
Tamaño: 329 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { type LocalizedString } from '@novu/novui';
import { Helmet } from 'react-helmet-async';

export interface IPageMetaProps {
  title?: LocalizedString;
}

export const PageMeta: React.FC<IPageMetaProps> = ({ title }) => {
  return (
    <Helmet>
      <title>{title ? `${title} | ` : ``}Novu</title>
    </Helmet>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { type LocalizedString } from '@novu/novui';
import { Helmet } from 'react-helmet-async';
export interface IPageMetaProps {
title?: LocalizedString;
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/layout/PageTemplate.tsx
Tamaño: 1003 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { CoreProps } from '@novu/novui';
import { css } from '@novu/novui/css';
import { FC, PropsWithChildren, ReactNode } from 'react';
import { PageContainer } from './PageContainer';
import { PageHeader } from './PageHeader';
import { PageMeta } from './PageMeta';

export interface IPageTemplateProps extends CoreProps {
  // TODO: this should be LocalizedMessage, but PageContainer and PageHeader don't accept it
  title: string;
  header?: ReactNode;
}

export const PageTemplate: FC<PropsWithChildren<IPageTemplateProps>> = ({ title, children, header, className }) => {
  return (
    <PageContainer className={className}>
      <PageMeta title={title} />
      <PageHeader title={title} className={css({ mb: 'margins.layout.page.titleBottom' })} />
      {!!header && (
        <section
          className={css({
            mx: 'paddings.page.horizontal',
          })}
        >
          {header}
        </section>
      )}
      <section>{children}</section>
    </PageContainer>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { CoreProps } from '@novu/novui';
import { css } from '@novu/novui/css';
import { FC, PropsWithChildren, ReactNode } from 'react';
import { PageContainer } from './PageContainer';
import { PageHeader } from './PageHeader';
// TODO: this should be LocalizedMessage, but PageContainer and PageHeader don't accept it
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/layout/index.ts
Tamaño: 65 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './PageTemplate';
export * from './PageContainer';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/pages/StudioStepEditorPage.tsx
Tamaño: 1368 bytes
Lenguaje detectado: TSX

### CONTENIDO ORIGINAL ###

import { useParams } from 'react-router-dom';
import { WorkflowsStepEditor } from '../../components/workflow_v2/StepEditorComponent';
import { useControlsHandler } from '../../hooks/workflow/useControlsHandler';
import { StepIcon, WorkflowsPageTemplate } from '../components/workflows/layout/WorkflowsPageTemplate';
import { useBridgeAPI, useWorkflow } from '../hooks/useBridgeAPI';

export const StudioStepEditorPage = () => {
  const bridgeApi = useBridgeAPI();

  const { templateId = '', stepId = '' } = useParams<{
    templateId: string;
    stepId: string;
  }>();

  const { data: workflow } = useWorkflow(templateId, {
    refetchOnWindowFocus: 'always',
  });
  const {
    preview,
    isLoading: loadingPreview,
    error,
    controls,
    onControlsChange,
  } = useControlsHandler((data) => bridgeApi.getStepPreview(data), templateId, stepId, 'studio');

  const step = workflow?.steps.find((item) => item.stepId === stepId);

  return (
    <WorkflowsPageTemplate title={step?.stepId || ''} icon={<StepIcon type={step?.type} size="32" />}>
      <WorkflowsStepEditor
        source="studio"
        step={step}
        onControlsChange={onControlsChange}
        preview={preview}
        error={error}
        workflow={workflow}
        loadingPreview={loadingPreview}
        defaultControls={controls}
      />
    </WorkflowsPageTemplate>
  );
};


### ANALISIS AUTOMATICO (ESPAÑOL) ###

import { useParams } from 'react-router-dom';
import { WorkflowsStepEditor } from '../../components/workflow_v2/StepEditorComponent';
import { useControlsHandler } from '../../hooks/workflow/useControlsHandler';
import { StepIcon, WorkflowsPageTemplate } from '../components/workflows/layout/WorkflowsPageTemplate';
import { useBridgeAPI, useWorkflow } from '../hooks/useBridgeAPI';
Contiene declaraciones 'import' (posible Python u otro).

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Añade un README describiendo qué hace este archivo.
- Si es parte de un proyecto, indica dependencia y punto de entrada.



################################################################################
Archivo: novu-next/apps/web/src/studio/utils/base64.ts
Tamaño: 288 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export function encodeBase64(json: any): string {
  return btoa(JSON.stringify(json)).replace(/\+/g, '-').replace(/\//g, '_').replace(/=+$/, '');
}

export function decodeBase64<T>(base64url: string): T {
  return JSON.parse(atob(base64url.replace(/-/g, '+').replace(/_/g, '/'))) as T;
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - encodeBase64(json: any)
Declaraciones 'export' encontradas:
- export function encodeBase64
- export function decodeBase64

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/utils/index.ts
Tamaño: 56 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

export * from './routing';
export * from './variables';


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Declaraciones 'export' encontradas:
- export
- export

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



################################################################################
Archivo: novu-next/apps/web/src/studio/utils/routing.ts
Tamaño: 1119 bytes
Lenguaje detectado: TypeScript

### CONTENIDO ORIGINAL ###

import { matchPath } from 'react-router-dom';
import { ROUTES } from '../../constants/routes';
import { parseUrl } from '../../utils/routeUtils';

export const STUDIO_WORKFLOWS_HOME_ROUTE: ROUTES = ROUTES.STUDIO_FLOWS_VIEW;

export function isStudioHome(pathname: string) {
  return matchPath(STUDIO_WORKFLOWS_HOME_ROUTE, pathname);
}

export function isStudioOnboardingRoute(path: string) {
  return path.includes(ROUTES.STUDIO_ONBOARDING);
}

/**
 * Centralized logic for generating the links for different Studio pages
 */

export function getStudioHomeLink(workflowId: string) {
  return parseUrl(STUDIO_WORKFLOWS_HOME_ROUTE, { templateId: workflowId });
}

export function getStudioWorkflowLink(workflowId: string) {
  return parseUrl(ROUTES.STUDIO_FLOWS_VIEW, { templateId: workflowId });
}

export function getStudioWorkflowTestLink(workflowId: string) {
  return parseUrl(ROUTES.STUDIO_FLOWS_TEST, { templateId: workflowId });
}

export function getStudioWorkflowStepLink(workflowId: string, stepId: string) {
  return parseUrl(ROUTES.STUDIO_FLOWS_STEP_EDITOR, {
    templateId: workflowId,
    stepId,
  });
}


### ANALISIS AUTOMATICO (ESPAÑOL) ###

Funciones 'function' encontradas:
 - isStudioHome(pathname: string)
 - isStudioOnboardingRoute(path: string)
 - getStudioHomeLink(workflowId: string)
 - getStudioWorkflowLink(workflowId: string)
 - getStudioWorkflowTestLink(workflowId: string)
 - getStudioWorkflowStepLink(workflowId: string, stepId: string)
Declaraciones 'export' encontradas:
- export  const
- export function isStudioHome
- export function isStudioOnboardingRoute
- export function getStudioHomeLink
- export function getStudioWorkflowLink
- export function getStudioWorkflowTestLink
- export function getStudioWorkflowStepLink

### SUGERENCIAS PARA CREAR TU PROPIA VERSIÓN ###

- Revisa package.json para dependencias y scripts.
- Usa módulos (import/export) y prueba con node o bundler.
- Añade un README con pasos de instalación (npm install, npm start).



