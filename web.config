<!-- 
  web.config para Next.js con iisnode como proxy inverso.
  Optimizado para Next.js 14+ con App Router.

  Puntos Clave:
  1. La primera regla maneja la conexión WebSocket para el desarrollo (HMR).
  2. La segunda regla evita que las peticiones a archivos estáticos (CSS, JS, imágenes) 
     lleguen al servidor de Node.js, permitiendo que IIS los sirva directamente para
     un rendimiento óptimo.
  3. La regla final (ProxyToNextJS) actúa como un "catch-all", enviando todas las demás
     peticiones (cargas de página, API routes, etc.) al servidor de Next.js.
  4. Se incluye configuración de logging para iisnode para facilitar la depuración.
  5. Se utiliza un interceptor para manejar correctamente las rutas del lado del cliente (Client-Side Routing).
-->
<configuration>
  <system.webServer>
    <modules>
      <remove name="iisnode" />
      <add name="iisnode" type="iisnode.NodeModule" />
    </modules>

    <iisnode
      nodeProcessCommandLine="&quot;%programfiles%\nodejs\node.exe&quot;"
      interceptor="&quot;%programfiles%\iisnode\interceptor.js&quot; --interceptor &quot;.\docs\deployment\iisnode-interceptor.js&quot;"
      node_env="production"
      loggingEnabled="true"
      debuggingEnabled="true"
      devErrorsEnabled="true"
      logDirectory="iisnode"
    />

    <handlers>
      <add name="iisnode" path="*.js" verb="*" modules="iisnode" />
    </handlers>

    <rewrite>
      <rules>
        <!-- Regla 1: Manejar WebSocket para Hot-Reloading en desarrollo -->
        <rule name="NextDevWebsocket" stopProcessing="true">
          <match url=".*" />
          <conditions>
            <add input="{HTTP_UPGRADE}" pattern="websocket" />
          </conditions>
          <action type="Rewrite" url="http://localhost:9003/{R:0}" />
        </rule>

        <!-- Regla 2: No redirigir rutas que ya son manejadas por Next.js o archivos estáticos -->
        <rule name="NextRoutes" stopProcessing="true">
          <match url=".*" />
          <conditions logicalGrouping="MatchAny">
            <add input="{REQUEST_URI}" pattern="^/_next/.*" />
            <add input="{REQUEST_FILENAME}" matchType="IsFile" />
          </conditions>
          <action type="None" />
        </rule>
        
        <!-- Regla 3: Proxy para todas las demás peticiones (cargas de página, API, etc.) -->
        <rule name="ProxyToNextJS" stopProcessing="true">
          <match url="(.*)" />
          <action type="Rewrite" url="http://localhost:9003/{R:1}" />
        </rule>
      </rules>

      <outboundRules>
        <preConditions>
          <preCondition name="ResponseIsHtml1">
            <add input="{RESPONSE_CONTENT_TYPE}" pattern="^text/html" />
          </preCondition>
        </preConditions>
      </outboundRules>
    </rewrite>

    <security>
      <requestFiltering>
        <hiddenSegments>
          <add segment="node_modules" />
          <add segment="iisnode" />
        </hiddenSegments>
      </requestFiltering>
    </security>

    <httpErrors existingResponse="PassThrough" />
  </system.webServer>
</configuration>
