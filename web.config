<!-- 
  Este archivo de configuración está optimizado para ejecutar una aplicación Next.js 14+ en IIS usando iisnode.
  Puntos Clave:
  1. Static File Handling: Las reglas de reescritura están diseñadas para permitir que IIS sirva directamente
     los archivos estáticos (CSS, JS, imágenes) desde la carpeta .next/static. Esto es mucho más
     eficiente que pasar estas solicitudes a través del servidor Node.js.
  2. Dynamic Requests Proxy: Todas las demás solicitudes (cargas de página, llamadas a API/Server Actions)
     se redirigen al proceso de Node.js que se ejecuta en localhost:9003.
  3. iisnode Configuration: Configura el entorno, el registro de errores y el interceptor para
     mejorar la compatibilidad y la depuración.
  4. Debugging: Se ha añadido la sección <customErrors mode="Off" /> para que IIS muestre
     el error real de la aplicación en lugar de una página de error genérica.
-->
<configuration>
  <system.webServer>
    <handlers>
      <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
    </handlers>

    <rewrite>
      <rules>
        <!-- Regla 1: No reescribir las URLs para archivos estáticos de Next.js -->
        <rule name="NextStatic" stopProcessing="true">
          <match url="^(\_next\/static\/.*)" />
          <action type="None" />
        </rule>
        
        <!-- Regla 2: Reescribir todas las demás solicitudes al servidor de Next.js -->
        <rule name="ProxyToNextJS" stopProcessing="true">
          <match url="(.*)" />
          <action type="Rewrite" url="http://localhost:9003/{R:1}" />
        </rule>
      </rules>
      <outboundRules>
        <rule name="Fix-Access-Control-Allow-Origin" preCondition="IsDevelopment">
            <match serverVariable="RESPONSE_Access-Control-Allow-Origin" pattern=".*" />
            <action type="Rewrite" value="*" />
        </rule>
        <preConditions>
            <preCondition name="IsDevelopment">
                <add input="{HTTP_HOST}" pattern="localhost" />
            </preCondition>
        </preConditions>
      </outboundRules>
    </rewrite>

    <!-- 
      Configuración de iisnode.
      - node_env=production: Asegura que Next.js se ejecute en modo producción.
      - devErrorsEnabled=true: Muestra errores detallados de iisnode durante el desarrollo.
      - loggingEnabled=true: Habilita el registro en la carpeta 'iisnode' para depuración.
    -->
    <iisnode      
      node_env="production"
      nodeProcessCommandLine="&quot;%programfiles%\nodejs\node.exe&quot;"
      interceptor="docs\deployment\iisnode-interceptor.js"
      loggingEnabled="true"
      logDirectory="iisnode"
      debuggingEnabled="true"
      devErrorsEnabled="true" 
    />
    
    <!-- Aumentar el límite de tamaño de carga si es necesario (ej: para subida de archivos) -->
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="30000000" /> <!-- ~30 MB -->
      </requestFiltering>
    </security>
  </system.webServer>

  <!--
    Habilita los errores detallados para depuración. 
    En un entorno de producción final, esto debería cambiarse a "RemoteOnly" o "On".
  -->
  <system.web>
    <customErrors mode="Off"/>
  </system.web>

</configuration>
