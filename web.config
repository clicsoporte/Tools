<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    
    <!-- Este handler es el corazón de iisnode. Apunta al punto de entrada de tu app Next.js. -->
    <handlers>
      <!-- Asegúrate de que el path coincida con el script de inicio si no usas proxy -->
      <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
    </handlers>

    <rewrite>
      <rules>
        <!--
          Regla #1: No tocar los archivos estáticos de Next.js.
          Permite que IIS los sirva directamente desde el disco, lo cual es mucho más rápido.
        -->
        <rule name="NextStatic" stopProcessing="true">
          <match url="^_next/.+" />
          <action type="None" />
        </rule>
        
        <!--
          Regla #2: Redirigir todo lo demás al servidor de Node.js.
          Esta regla toma todas las peticiones que no son archivos estáticos (como páginas
          o llamadas a la API) y las envía al puerto donde se ejecuta "npm run start".
        -->
        <rule name="ProxyToNextJs" stopProcessing="true">
          <match url="(.*)" />
          <action type="Rewrite" url="http://localhost:9003/{R:1}" />
        </rule>
      </rules>
    </rewrite>

    <!--
      Configuración de iisnode: habilita el logging para poder depurar.
      Los logs se guardarán en una carpeta 'iisnode' dentro del directorio de la app.
    -->
    <iisnode
      node_env="production"
      loggingEnabled="true"
      logDirectory="iisnode"
      debuggingEnabled="false"
      devErrorsEnabled="true" 
    />
    
    <!-- Aumentar el límite de subida de archivos (ej. para backups) a 50MB. -->
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="52428800" />
      </requestFiltering>
    </security>

  </system.webServer>
  
  <!-- Habilita los errores detallados para facilitar el diagnóstico durante el desarrollo/despliegue. -->
  <system.web>
    <customErrors mode="Off" />
  </system.web>
  
</configuration>